/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_zy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_32(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49718 = ae + be;
    const double C49717 = yA - yB;
    const double C49725 = zA - zB;
    const double C49735 = ae * be;
    const double C49734 = 0 * be;
    const double C49753 = 0 * ae;
    const double C49749 = 0 * be;
    const double C49782 = 0 * be;
    const double C49800 = 0 * ae;
    const double C49796 = 0 * be;
    const double C49850 = std::pow(ae, 2);
    const double C49849 = yP - yQ;
    const double C49848 = zP - zQ;
    const double C49847 = p + q;
    const double C49846 = p * q;
    const double C49858 = bs[4];
    const double C49856 = xP - xQ;
    const double C49863 = bs[5];
    const double C49870 = bs[6];
    const double C49878 = bs[7];
    const double C49895 = bs[3];
    const double C50317 = bs[2];
    const double C119 = bs[0];
    const double C50668 = xA - xB;
    const double C50694 = ce + de;
    const double C50693 = ce * de;
    const double C50692 = xC - xD;
    const double C50716 = yC - yD;
    const double C50732 = zC - zD;
    const double C49733 = 2 * C49718;
    const double C49750 = std::pow(C49718, 2);
    const double C50828 = std::pow(C49717, 2);
    const double C50844 = C49717 * be;
    const double C50843 = C49717 * ae;
    const double C50858 = std::pow(C49725, 2);
    const double C50870 = C49725 * be;
    const double C50869 = C49725 * ae;
    const double C49736 = C49735 * C49717;
    const double C49783 = C49735 * C49725;
    const double C49751 = C49717 * C49734;
    const double C49757 = C49753 / C49718;
    const double C49797 = C49725 * C49782;
    const double C49805 = C49800 / C49718;
    const double C49928 = C49849 * ae;
    const double C50019 = std::pow(C49849, 2);
    const double C49852 = C49848 * C49849;
    const double C49887 = C49848 * ae;
    const double C50074 = std::pow(C49848, 2);
    const double C49851 = 2 * C49846;
    const double C49864 = std::pow(C49856, 2);
    const double C50671 = C50668 * be;
    const double C50670 = C50668 * ae;
    const double C50669 = std::pow(C50668, 2);
    const double C50696 = 2 * C50694;
    const double C50706 = std::pow(C50694, 2);
    const double C50698 = C50692 * de;
    const double C50697 = C50692 * ce;
    const double C50695 = std::pow(C50692, 2);
    const double C50717 = std::pow(C50716, 2);
    const double C50769 = C50716 * de;
    const double C50768 = C50716 * ce;
    const double C50733 = std::pow(C50732, 2);
    const double C50797 = C50732 * de;
    const double C50796 = C50732 * ce;
    const double C50679 = std::pow(C49733, -1);
    const double C50979 = std::pow(C49733, -2);
    const double C49754 = 2 * C49750;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C49750;
    const double C141 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (zP - zQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C49750;
    const double C50957 = 4 * C49750;
    const double C50829 = C50828 * C49735;
    const double C50859 = C50858 * C49735;
    const double C49755 = C49751 / C49718;
    const double C49802 = C49797 / C49718;
    const double C49929 = C49858 * C49928;
    const double C49935 = C49895 * C49928;
    const double C49940 = C49863 * C49928;
    const double C49946 = C49870 * C49928;
    const double C49957 = C49878 * C49928;
    const double C49854 = C49852 * C49850;
    const double C49888 = C49858 * C49887;
    const double C49896 = C49895 * C49887;
    const double C49901 = C49863 * C49887;
    const double C49907 = C49870 * C49887;
    const double C49918 = C49878 * C49887;
    const double C49853 = C49851 / C49847;
    const double C126 = (-(bs[1] * C49928 * C49851) / C49847) / C49718;
    const double C127 = (-(bs[1] * C49887 * C49851) / C49847) / C49718;
    const double C120 = -(C49856 * bs[1] * C49851) / C49847;
    const double C297 = -(C49849 * bs[1] * C49851) / C49847;
    const double C486 = -(C49848 * bs[1] * C49851) / C49847;
    const double C50672 = C50669 * C49735;
    const double C50707 = std::pow(C50696, -1);
    const double C50966 = std::pow(C50696, -2);
    const double C50711 = 2 * C50706;
    const double C50964 = 4 * C50706;
    const double C50699 = C50695 * C50693;
    const double C50718 = C50717 * C50693;
    const double C50734 = C50733 * C50693;
    const double C49762 = C49734 / C49754;
    const double C49760 = C49749 / C49754;
    const double C49799 = C49782 / C49754;
    const double C49803 = C49796 / C49754;
    const double C50830 = C50829 / C49718;
    const double C50860 = C50859 / C49718;
    const double C49759 = 0 - C49755;
    const double C49806 = 0 - C49802;
    const double C49859 = C49858 * C49854;
    const double C49866 = C49863 * C49854;
    const double C49871 = C49870 * C49854;
    const double C49880 = C49878 * C49854;
    const double C49857 = std::pow(C49853, 4);
    const double C49862 = -C49853;
    const double C49869 = std::pow(C49853, 6);
    const double C142 =
        (std::pow(-C49853, 3) * bs[3] * C49854 +
         std::pow(C49853, 4) * bs[4] * C49854 * std::pow(xP - xQ, 2)) /
        C49750;
    const double C50316 = std::pow(C49853, 2);
    const double C128 =
        (C49856 * std::pow(C49853, 2) * bs[2] * C49928) / C49718;
    const double C129 =
        (C49856 * std::pow(C49853, 2) * bs[2] * C49887) / C49718;
    const double C310 =
        (C49849 * std::pow(C49853, 2) * bs[2] * C49887) / C49718;
    const double C311 =
        (C49849 * std::pow(C49853, 2) * bs[2] * C49928) / C49718 -
        (ae * bs[1] * C49851) / (C49847 * C49718);
    const double C50673 = C50672 / C49718;
    const double C50700 = C50699 / C50694;
    const double C50719 = C50718 / C50694;
    const double C50735 = C50734 / C50694;
    const double C50831 = -C50830;
    const double C50861 = -C50860;
    const double C49764 = C49759 * ae;
    const double C49809 = C49806 * ae;
    const double C49860 = C49857 * C49859;
    const double C49889 = C49857 * C49888;
    const double C49930 = C49857 * C49929;
    const double C49972 = C49858 * C49857;
    const double C49865 = std::pow(C49862, 5);
    const double C49877 = std::pow(C49862, 7);
    const double C49894 = std::pow(C49862, 3);
    const double C327 = (ae * std::pow(C49853, 2) * bs[2] * C49887 +
                         C49849 * std::pow(C49862, 3) * bs[3] * C49854) /
                        C49750;
    const double C49872 = C49869 * C49871;
    const double C49909 = C49869 * C49907;
    const double C49948 = C49869 * C49946;
    const double C49983 = C49870 * C49869;
    const double C50318 = C50317 * C50316;
    const double C499 = (C49848 * C50316 * C50317 * C49887) / C49718 -
                        (ae * bs[1] * C49851) / (C49847 * C49718);
    const double C500 = (C49848 * C50316 * C50317 * C49928) / C49718;
    const double C50674 = -C50673;
    const double C50701 = -C50700;
    const double C50720 = -C50719;
    const double C50736 = -C50735;
    const double C50832 = std::exp(C50831);
    const double C50862 = std::exp(C50861);
    const double C49766 = C49764 / C49718;
    const double C49811 = C49809 / C49718;
    const double C143 = (2 * C49856 * C49860 +
                         C49856 * (C49860 + std::pow(-C49853, 5) * bs[5] *
                                                C49854 * std::pow(C49856, 2))) /
                        C49750;
    const double C326 = (ae * C49856 * std::pow(C49862, 3) * bs[3] * C49887 +
                         C49849 * C49856 * C49860) /
                        C49750;
    const double C49899 = C49856 * C49889;
    const double C50032 = ae * C49889;
    const double C50031 = C49849 * C49889;
    const double C50454 = C49848 * C49889;
    const double C49938 = C49856 * C49930;
    const double C50003 = C49849 * C49930;
    const double C50087 = ae * C49930;
    const double C50086 = C49848 * C49930;
    const double C49999 = C49856 * C49972;
    const double C50058 = C49849 * C49972;
    const double C50057 = C49972 * ae;
    const double C50324 = C49972 * C49864;
    const double C50419 = C49972 * C50019;
    const double C50456 = C49972 * C50074;
    const double C50530 = C49848 * C49972;
    const double C49867 = C49865 * C49866;
    const double C49902 = C49865 * C49901;
    const double C49941 = C49865 * C49940;
    const double C49974 = C49863 * C49865;
    const double C49881 = C49877 * C49880;
    const double C49920 = C49877 * C49918;
    const double C49959 = C49877 * C49957;
    const double C49897 = C49894 * C49896;
    const double C49936 = C49894 * C49935;
    const double C50004 = C49895 * C49894;
    const double C515 =
        (ae * C49856 * C49894 * C49895 * C49928 + C49848 * C49856 * C49860) /
        C49750;
    const double C516 = (ae * std::pow(C49853, 2) * bs[2] * C49928 +
                         C49848 * C49894 * C49895 * C49854) /
                        C49750;
    const double C49873 = C49872 * C49864;
    const double C49876 = C49856 * C49872;
    const double C50111 = C49849 * C49872;
    const double C50246 = C49848 * C49872;
    const double C49910 = C49909 * C49864;
    const double C49917 = C49856 * C49909;
    const double C50112 = C49909 * C50019;
    const double C50164 = ae * C49909;
    const double C50163 = C49849 * C49909;
    const double C50558 = C49848 * C49909;
    const double C49949 = C49948 * C49864;
    const double C49956 = C49856 * C49948;
    const double C50142 = C49849 * C49948;
    const double C50247 = C49948 * C50074;
    const double C50275 = ae * C49948;
    const double C50274 = C49848 * C49948;
    const double C49985 = C49983 * C49864;
    const double C50125 = C49856 * C49983;
    const double C50188 = C49983 * C50019;
    const double C50187 = C49849 * C49983;
    const double C50186 = C49983 * ae;
    const double C50561 = C49983 * C50074;
    const double C121 = C50318 * C49864 - (bs[1] * C49851) / C49847;
    const double C296 = C49849 * C49856 * C50318;
    const double C298 = C50318 * C50019 - (bs[1] * C49851) / C49847;
    const double C485 = C49848 * C49856 * C50318;
    const double C487 = C50318 * C50074 - (bs[1] * C49851) / C49847;
    const double C932 = C49848 * C49849 * C50318;
    const double C50675 = std::exp(C50674);
    const double C50702 = std::exp(C50701);
    const double C50721 = std::exp(C50720);
    const double C50737 = std::exp(C50736);
    const double C155 = C50832 * C142;
    const double C151 = C50832 * C141;
    const double C149 = C50832 * C128;
    const double C5581 = C50832 * C500;
    const double C49737 = C49736 * C50832;
    const double C117 = -(2 * ae * be * (yA - yB) * C50832) / (ae + be);
    const double C2343 =
        ((C50832 - (C49717 * 2 * ae * be * C49717 * C50832) / C49718) * ae) /
            C49718 -
        (0 * be) / (2 * std::pow(C49718, 2));
    const double C2344 =
        (0 * ae) / C49718 - (ae * be * C49717 * C50832) / std::pow(C49718, 2);
    const double C50845 = C50832 * C50843;
    const double C50848 = C50679 * C50832;
    const double C50982 = C50832 * C50844;
    const double C50981 = C50832 / C49733;
    const double C8027 = C50979 * C50832;
    const double C49784 = C49783 * C50862;
    const double C118 = -(2 * ae * be * (zA - zB) * C50862) / (ae + be);
    const double C5235 =
        ((C50862 - (C49725 * 2 * ae * be * C49725 * C50862) / C49718) * ae) /
            C49718 -
        (0 * be) / (2 * std::pow(C49718, 2));
    const double C5236 =
        (0 * ae) / C49718 - (ae * be * C49725 * C50862) / std::pow(C49718, 2);
    const double C50871 = C50862 * C50869;
    const double C50874 = C50679 * C50862;
    const double C50987 = C50862 * C50870;
    const double C50986 = C50862 / C49733;
    const double C15408 = C50979 * C50862;
    const double C49768 = C49766 - C49760;
    const double C49813 = C49811 - C49803;
    const double C159 = C50832 * C143;
    const double C344 = C50832 * C326;
    const double C50000 = C49999 * ae;
    const double C50328 = 2 * C49999;
    const double C50388 = C49849 * C49999;
    const double C50448 = C49848 * C49999;
    const double C50060 = C50058 * ae;
    const double C50467 = 2 * C50058;
    const double C50501 = C49848 * C50058;
    const double C50535 = 2 * C50530;
    const double C50533 = C50530 * ae;
    const double C49978 = C49856 * C49867;
    const double C50033 = C49849 * C49867;
    const double C50088 = C49848 * C49867;
    const double C144 =
        (3 * (C49860 + C49867 * C49864) +
         C49856 * (2 * C49856 * C49867 +
                   C49856 * (C49867 +
                             std::pow(C49853, 6) * bs[6] * C49854 * C49864))) /
        C49750;
    const double C325 =
        (ae * (std::pow(C49862, 3) * bs[3] * C49887 + C49889 * C49864) +
         C49849 * (C49860 + C49867 * C49864)) /
        C49750;
    const double C329 = (C49856 * C49860 + ae * C49849 * C49899 +
                         C49849 * (ae * C49899 + C49849 * C49856 * C49867)) /
                        C49750;
    const double C514 = (ae * (C49894 * C49895 * C49928 + C49930 * C49864) +
                         C49848 * (C49860 + C49867 * C49864)) /
                        C49750;
    const double C518 = (C49856 * C49860 + ae * C49848 * C49938 +
                         C49848 * (ae * C49938 + C49848 * C49856 * C49867)) /
                        C49750;
    const double C948 =
        (ae * (C49849 * C49938 + C49856 * C49895 * C49894 * ae) +
         C49848 * (ae * C49899 + C49849 * C49856 * C49867)) /
        C49750;
    const double C49903 = C49902 * C49864;
    const double C49906 = C49856 * C49902;
    const double C50034 = C49902 * C50019;
    const double C50110 = ae * C49902;
    const double C50109 = C49849 * C49902;
    const double C50529 = C49848 * C49902;
    const double C49942 = C49941 * C49864;
    const double C49945 = C49856 * C49941;
    const double C50056 = C49849 * C49941;
    const double C50089 = C49941 * C50074;
    const double C50245 = ae * C49941;
    const double C50244 = C49848 * C49941;
    const double C49982 = C49856 * C49974;
    const double C49993 = C49974 * C49864;
    const double C50145 = C49974 * C50019;
    const double C50144 = C49849 * C49974;
    const double C50143 = C49974 * ae;
    const double C50531 = C49974 * C50074;
    const double C50559 = C49848 * C49974;
    const double C49882 = C49881 * C49864;
    const double C50095 = C49856 * C49881;
    const double C50165 = C49849 * C49881;
    const double C50276 = C49848 * C49881;
    const double C49921 = C49920 * C49864;
    const double C50096 = C49856 * C49920;
    const double C50167 = C49920 * C50019;
    const double C49960 = C49959 * C49864;
    const double C50124 = C49856 * C49959;
    const double C50185 = C49849 * C49959;
    const double C50278 = C49959 * C50074;
    const double C328 = (C49894 * C49895 * C49854 + ae * C49849 * C49897 +
                         C49849 * (ae * C49897 + C49849 * C49860)) /
                        C49750;
    const double C1165 = (2 * (ae * C49897 + C49849 * C49860) +
                          ae * (C49897 + C49889 * std::pow(C49849, 2)) +
                          C49849 * (C49860 + ae * C49849 * C49889 +
                                    C49849 * (ae * C49889 + C49849 * C49867))) /
                         C49750;
    const double C131 =
        (std::pow(C49853, 2) * bs[2] * C49887 + C49897 * C49864) / C49718;
    const double C133 =
        (2 * C49856 * C49897 + C49856 * (C49897 + C49889 * C49864)) / C49718;
    const double C306 = (C49849 * (C49897 + C49889 * C49864)) / C49718;
    const double C308 = (C49849 * C49856 * C49897) / C49718;
    const double C313 = (C50316 * C50317 * C49887 + C49897 * C50019) / C49718;
    const double C315 = (C49856 * C49897 + C49899 * C50019) / C49718;
    const double C497 =
        (C49848 * C49856 * C49897 + C49856 * C50318 * ae) / C49718;
    const double C502 =
        (C50316 * C50317 * C49887 + C49848 * (C49848 * C49897 + C50318 * ae) +
         C49848 * C50318 * ae) /
        C49718;
    const double C938 =
        (C49848 * C49849 * C49897 + C49849 * C50318 * ae) / C49718;
    const double C1160 =
        (2 * C49849 * C49897 + C49849 * (C49897 + C49889 * C50019)) / C49718;
    const double C517 = (C49894 * C49895 * C49854 + ae * C49848 * C49936 +
                         C49848 * (ae * C49936 + C49848 * C49860)) /
                        C49750;
    const double C947 =
        (ae * (C49849 * C49936 + bs[2] * std::pow(C49853, 2) * ae) +
         C49848 * (ae * C49897 + C49849 * C49860)) /
        C49750;
    const double C1910 = (2 * (ae * C49936 + C49848 * C49860) +
                          ae * (C49936 + C49930 * std::pow(C49848, 2)) +
                          C49848 * (C49860 + ae * C49848 * C49930 +
                                    C49848 * (ae * C49930 + C49848 * C49867))) /
                         C49750;
    const double C130 =
        (std::pow(C49853, 2) * bs[2] * C49928 + C49936 * C49864) / C49718;
    const double C132 =
        (2 * C49856 * C49936 + C49856 * (C49936 + C49930 * C49864)) / C49718;
    const double C309 =
        (C49849 * C49856 * C49936 + C49856 * bs[2] * std::pow(C49853, 2) * ae) /
        C49718;
    const double C312 =
        (C50316 * C50317 * C49928 + C49849 * (C49849 * C49936 + C50318 * ae) +
         C49849 * C50318 * ae) /
        C49718;
    const double C496 = (C49848 * (C49936 + C49930 * C49864)) / C49718;
    const double C498 = (C49848 * C49856 * C49936) / C49718;
    const double C501 = (C50316 * C50317 * C49928 + C49936 * C50074) / C49718;
    const double C503 = (C49856 * C49936 + C49938 * C50074) / C49718;
    const double C937 = (C49848 * (C49849 * C49936 + C50318 * ae)) / C49718;
    const double C1906 =
        (2 * C49848 * C49936 + C49848 * (C49936 + C49930 * C50074)) / C49718;
    const double C50005 = C50004 * ae;
    const double C50321 = C49856 * C50004;
    const double C50325 = C50004 + C50324;
    const double C50391 = C49849 * C50004;
    const double C50420 = C50004 + C50419;
    const double C50455 = C49848 * C50004;
    const double C50458 = C50004 + C50456;
    const double C307 = (C49849 * (C49936 + C49930 * C49864) +
                         (bs[2] * std::pow(C49853, 2) + C50004 * C49864) * ae) /
                        C49718;
    const double C495 = (C49848 * (C49897 + C49889 * C49864) +
                         (C50318 + C50004 * C49864) * ae) /
                        C49718;
    const double C1621 = (C49848 * (C49897 + C49889 * C50019) +
                          (C50318 + C50004 * C50019) * ae) /
                         C49718;
    const double C122 =
        2 * C49856 * C50318 + C49856 * (C50318 + C50004 * C49864);
    const double C295 = C49849 * (C50318 + C50004 * C49864);
    const double C484 = C49848 * (C50318 + C50004 * C49864);
    const double C1153 =
        2 * C49849 * C50318 + C49849 * (C50318 + C50004 * C50019);
    const double C1614 = C49848 * (C50318 + C50004 * C50019);
    const double C1898 =
        2 * C49848 * C50318 + C49848 * (C50318 + C50004 * C50074);
    const double C533 = C50832 * C515;
    const double C5583 = C50832 * C516;
    const double C49874 = C49867 + C49873;
    const double C49879 = 2 * C49876;
    const double C50026 = C49849 * C49876;
    const double C50081 = C49848 * C49876;
    const double C49911 = C49902 + C49910;
    const double C49919 = 2 * C49917;
    const double C50027 = C49917 * C50019;
    const double C50094 = ae * C49917;
    const double C50093 = C49849 * C49917;
    const double C50515 = C49848 * C49917;
    const double C50116 = C49902 + C50112;
    const double C50171 = 2 * C50163;
    const double C50169 = ae * C50163;
    const double C50543 = C49848 * C50163;
    const double C49950 = C49941 + C49949;
    const double C49958 = 2 * C49956;
    const double C50047 = C49849 * C49956;
    const double C50082 = C49956 * C50074;
    const double C50231 = ae * C49956;
    const double C50230 = C49848 * C49956;
    const double C50251 = C49941 + C50247;
    const double C50282 = 2 * C50274;
    const double C50280 = ae * C50274;
    const double C49986 = C49974 + C49985;
    const double C50129 = C50125 * C50019;
    const double C50128 = C49849 * C50125;
    const double C50127 = C50125 * ae;
    const double C50517 = C50125 * C50074;
    const double C50192 = C49974 + C50188;
    const double C50191 = C50187 * ae;
    const double C50545 = C50187 * C50074;
    const double C50565 = C49974 + C50561;
    const double C50676 = C50675 * C50670;
    const double C50680 = C50679 * C50675;
    const double C50953 = C50675 / C49733;
    const double C50952 = C50675 * C50671;
    const double C2342 = C50979 * C50675;
    const double C50703 = C50702 * C50697;
    const double C50708 = C50707 * C50702;
    const double C50961 = C50702 * C50698;
    const double C50958 = C50702 / C50696;
    const double C1078 = C50966 * C50702;
    const double C50770 = C50721 * C50768;
    const double C50773 = C50707 * C50721;
    const double C50970 = C50721 * C50769;
    const double C50965 = C50721 / C50696;
    const double C291 = C50966 * C50721;
    const double C50798 = C50737 * C50796;
    const double C50801 = C50707 * C50737;
    const double C50974 = C50737 * C50797;
    const double C50967 = C50737 / C50696;
    const double C482 = C50966 * C50737;
    const double C49738 = 2 * C49737;
    const double C49758 = C49737 / C49750;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C345 = C117 * C296;
    const double C534 = C117 * C485;
    const double C5594 = C117 * C487;
    const double C5582 = C117 * C499;
    const double C5580 = C117 * C486;
    const double C6120 = C117 * C932;
    const double C2354 = C2343 * C121;
    const double C2350 = C2343 * C129;
    const double C2346 = C2343 * C120;
    const double C2564 = C2343 * C296;
    const double C2758 = C2343 * C485;
    const double C18449 = C2343 * C487;
    const double C18445 = C2343 * C499;
    const double C18441 = C2343 * C486;
    const double C18979 = C2343 * C932;
    const double C2348 = C2344 * C296;
    const double C18443 = C2344 * C932;
    const double C50984 = C50845 / C49754;
    const double C50983 = C50845 * C50844;
    const double C50978 = C50845 / C49718;
    const double C2353 = C50848 * C326;
    const double C22729 = C50848 * C326;
    const double C50851 = C50848 * C50844;
    const double C10844 = C50848 / C50957;
    const double C25563 = C50848 / C49733;
    const double C51003 = C50982 / C49718;
    const double C8026 = (-2 * C50679 * C50982) / C49718;
    const double C8025 = (C50832 * std::pow(C50844, 2)) / C49750 + C50981;
    const double C49785 = 2 * C49784;
    const double C49801 = C49784 / C49750;
    const double C50989 = C50871 / C49754;
    const double C50988 = C50871 * C50870;
    const double C50980 = C50871 / C49718;
    const double C50877 = C50874 * C50870;
    const double C20891 = C50874 / C50957;
    const double C38217 = C50874 / C49733;
    const double C51006 = C50987 / C49718;
    const double C15407 = (-2 * C50679 * C50987) / C49718;
    const double C15406 = (C50862 * std::pow(C50870, 2)) / C49750 + C50986;
    const double C50035 = C50032 + C50033;
    const double C50090 = C50087 + C50088;
    const double C161 = C50832 * C144;
    const double C340 = C50832 * C325;
    const double C2361 = C50848 * C325;
    const double C22737 = C50848 * C325;
    const double C350 = C50832 * C329;
    const double C2559 = C50848 * C329;
    const double C8045 = C8027 * C329;
    const double C22935 = C50848 * C329;
    const double C529 = C50832 * C514;
    const double C539 = C50832 * C518;
    const double C956 = C50832 * C948;
    const double C2753 = C50848 * C948;
    const double C23129 = C50848 * C948;
    const double C49904 = C49889 + C49903;
    const double C49908 = 2 * C49906;
    const double C50025 = ae * C49906;
    const double C50024 = C49849 * C49906;
    const double C1164 = (2 * (ae * C49899 + C49849 * C49978) +
                          ae * (C49899 + C49906 * std::pow(C49849, 2)) +
                          C49849 * (C49978 + ae * C49849 * C49906 +
                                    C49849 * (ae * C49906 + C49849 * C49876))) /
                         C49750;
    const double C50447 = C49848 * C49906;
    const double C1158 =
        (2 * C49849 * C49899 + C49849 * (C49899 + C49906 * C50019)) / C49718;
    const double C50036 = C49889 + C50034;
    const double C50114 = C50110 + C50111;
    const double C50115 = 2 * C50109;
    const double C50113 = ae * C50109;
    const double C50500 = C49848 * C50109;
    const double C50532 = C50529 + C50057;
    const double C49943 = C49930 + C49942;
    const double C49947 = 2 * C49945;
    const double C49998 = C49849 * C49945;
    const double C50080 = ae * C49945;
    const double C50079 = C49848 * C49945;
    const double C1909 = (2 * (ae * C49938 + C49848 * C49978) +
                          ae * (C49938 + C49945 * std::pow(C49848, 2)) +
                          C49848 * (C49978 + ae * C49848 * C49945 +
                                    C49848 * (ae * C49945 + C49848 * C49876))) /
                         C49750;
    const double C1904 =
        (2 * C49848 * C49938 + C49848 * (C49938 + C49945 * C50074)) / C49718;
    const double C50059 = C50056 + C50057;
    const double C50091 = C49930 + C50089;
    const double C50249 = C50245 + C50246;
    const double C50250 = 2 * C50244;
    const double C50248 = ae * C50244;
    const double C49984 = 2 * C49982;
    const double C50049 = C49849 * C49982;
    const double C50048 = C49982 * ae;
    const double C50415 = C49982 * C50019;
    const double C50449 = C49982 * C50074;
    const double C50516 = C49848 * C49982;
    const double C49994 = C49972 + C49993;
    const double C50148 = C49972 + C50145;
    const double C50147 = C50144 * ae;
    const double C50189 = 2 * C50144;
    const double C50502 = C50144 * C50074;
    const double C50544 = C49848 * C50144;
    const double C50146 = C50142 + C50143;
    const double C50563 = C50558 + C50143;
    const double C50534 = C49972 + C50531;
    const double C50566 = 2 * C50559;
    const double C50564 = C50559 * ae;
    const double C49883 = C49872 + C49882;
    const double C50098 = C49849 * C50095;
    const double C50232 = C49848 * C50095;
    const double C50170 = C50164 + C50165;
    const double C50281 = C50275 + C50276;
    const double C49922 = C49909 + C49921;
    const double C50100 = C50096 * C50019;
    const double C50172 = C49909 + C50167;
    const double C49961 = C49948 + C49960;
    const double C50126 = C49849 * C50124;
    const double C50233 = C50124 * C50074;
    const double C50190 = C50185 + C50186;
    const double C50283 = C49948 + C50278;
    const double C154 = C117 * C131;
    const double C2358 = C2343 * C131;
    const double C158 = C117 * C133;
    const double C2364 = C2343 * C133;
    const double C339 = C117 * C306;
    const double C2360 = C2344 * C306;
    const double C2552 = C2343 * C306;
    const double C343 = C117 * C308;
    const double C2352 = C2344 * C308;
    const double C2560 = C2343 * C308;
    const double C349 = C117 * C315;
    const double C2570 = C2343 * C315;
    const double C2558 = C2344 * C315;
    const double C532 = C117 * C497;
    const double C2754 = C2343 * C497;
    const double C5592 = C117 * C502;
    const double C18453 = C2343 * C502;
    const double C6122 = C117 * C938;
    const double C18447 = C2344 * C938;
    const double C18983 = C2343 * C938;
    const double C5593 = C50832 * C517;
    const double C6123 = C50832 * C947;
    const double C18448 = C50848 * C947;
    const double C28817 = C50848 * C947;
    const double C7439 = C50832 * C1910;
    const double C153 = C50832 * C130;
    const double C157 = C50832 * C132;
    const double C346 = C50832 * C309;
    const double C2349 = C50848 * C309;
    const double C22725 = C50848 * C309;
    const double C531 = C50832 * C496;
    const double C535 = C50832 * C498;
    const double C5595 = C50832 * C501;
    const double C537 = C50832 * C503;
    const double C6121 = C50832 * C937;
    const double C18444 = C50848 * C937;
    const double C28813 = C50848 * C937;
    const double C7437 = C50832 * C1906;
    const double C50006 = C50003 + C50005;
    const double C50457 = C50454 + C50005;
    const double C1905 =
        (2 * (C49848 * C49897 + C50318 * ae) +
         C49848 * (C49897 + C49848 * (C49848 * C49889 + C50005) +
                   C49848 * C50004 * ae) +
         (C50318 + C50004 * C50074) * ae) /
        C49718;
    const double C314 =
        (C49856 * C49936 + C49849 * (C49849 * C49938 + C50321 * ae) +
         C49849 * C50321 * ae) /
        C49718;
    const double C504 =
        (C49856 * C49897 + C49848 * (C49848 * C49899 + C50321 * ae) +
         C49848 * C50321 * ae) /
        C49718;
    const double C939 = (C49848 * (C49849 * C49938 + C50321 * ae)) / C49718;
    const double C940 =
        (C49848 * C49849 * C49899 + C49849 * C50321 * ae) / C49718;
    const double C1619 = (C49848 * (C49899 + C49906 * C50019) +
                          (C50321 + C49999 * C50019) * ae) /
                         C49718;
    const double C1903 =
        (2 * (C49848 * C49899 + C50321 * ae) +
         C49848 * (C49899 + C49848 * (C49848 * C49906 + C50000) +
                   C49848 * C49999 * ae) +
         (C50321 + C49999 * C50074) * ae) /
        C49718;
    const double C299 = C49856 * C50318 + C50321 * C50019;
    const double C488 = C49856 * C50318 + C50321 * C50074;
    const double C933 = C49848 * C49849 * C50321;
    const double C1152 =
        2 * C49849 * C50321 + C49849 * (C50321 + C49999 * C50019);
    const double C1266 = C49849 * C50321 + C50388 * C50074;
    const double C1613 = C49848 * (C50321 + C49999 * C50019);
    const double C1897 =
        2 * C49848 * C50321 + C49848 * (C50321 + C49999 * C50074);
    const double C123 = 3 * (C50318 + C50004 * C49864) +
                        C49856 * (2 * C50321 + C49856 * C50325);
    const double C294 = C49849 * (2 * C50321 + C49856 * C50325);
    const double C300 = C50318 + C50004 * C49864 + C50325 * C50019;
    const double C483 = C49848 * (2 * C50321 + C49856 * C50325);
    const double C489 = C50318 + C50004 * C49864 + C50325 * C50074;
    const double C934 = C49848 * C49849 * C50325;
    const double C1274 =
        (C49849 * C49897 + C49848 * (C49848 * C50031 + C50391 * ae) +
         C49848 * C50391 * ae) /
        C49718;
    const double C4644 =
        (2 * (C49848 * C50031 + C50391 * ae) +
         C49848 * (C50031 + C49848 * (C49848 * C50109 + C50060) +
                   C49848 * C50058 * ae) +
         (C50391 + C50058 * C50074) * ae) /
        C49718;
    const double C1267 = C49849 * C50318 + C50391 * C50074;
    const double C4639 =
        2 * C49848 * C50391 + C49848 * (C50391 + C50058 * C50074);
    const double C3581 = 3 * (C50318 + C50004 * C50019) +
                         C49849 * (2 * C50391 + C49849 * C50420);
    const double C3739 = C50318 + C50004 * C50019 + C50420 * C50074;
    const double C4237 = C49848 * (2 * C50391 + C49849 * C50420);
    const double C7425 = 3 * (C50318 + C50004 * C50074) +
                         C49848 * (2 * C50455 + C49848 * C50458);
    const double C342 = C50832 * C307;
    const double C2357 = C50848 * C307;
    const double C22733 = C50848 * C307;
    const double C528 = C117 * C495;
    const double C2746 = C2343 * C495;
    const double C7030 = C117 * C1621;
    const double C18985 = C2344 * C1621;
    const double C19909 = C2343 * C1621;
    const double C156 = C117 * C122;
    const double C2368 = C2343 * C122;
    const double C341 = C117 * C295;
    const double C2356 = C2344 * C295;
    const double C2556 = C2343 * C295;
    const double C530 = C117 * C484;
    const double C2750 = C2343 * C484;
    const double C7028 = C117 * C1614;
    const double C18981 = C2344 * C1614;
    const double C19905 = C2343 * C1614;
    const double C7436 = C117 * C1898;
    const double C18463 = C2343 * C1898;
    const double C145 =
        (4 * (2 * C49856 * C49867 + C49856 * C49874) +
         C49856 * (3 * C49874 +
                   C49856 * (2 * C49856 * C49872 +
                             C49856 * (C49872 + std::pow(C49862, 7) * bs[7] *
                                                    C49854 * C49864)))) /
        C49750;
    const double C324 =
        (ae * (2 * C49856 * C49889 +
               C49856 * (C49889 + C49865 * C49863 * C49887 * C49864)) +
         C49849 * (2 * C49856 * C49867 + C49856 * C49874)) /
        C49750;
    const double C513 =
        (ae * (2 * C49856 * C49930 +
               C49856 * (C49930 + C49865 * C49863 * C49928 * C49864)) +
         C49848 * (2 * C49856 * C49867 + C49856 * C49874)) /
        C49750;
    const double C49912 = C49856 * C49911;
    const double C49916 = 3 * C49911;
    const double C50017 = ae * C49911;
    const double C50016 = C49849 * C49911;
    const double C50440 = C49848 * C49911;
    const double C50029 = C49906 + C50027;
    const double C50099 = 2 * C50093;
    const double C50097 = ae * C50093;
    const double C50508 = C49848 * C50093;
    const double C50119 = C49849 * C50116;
    const double C50166 = 3 * C50116;
    const double C50162 = ae * C50116;
    const double C50494 = C49848 * C50116;
    const double C50173 = C49872 + C50169;
    const double C49951 = C49856 * C49950;
    const double C49955 = 3 * C49950;
    const double C49992 = C49849 * C49950;
    const double C50072 = ae * C49950;
    const double C50071 = C49848 * C49950;
    const double C50084 = C49945 + C50082;
    const double C50236 = 2 * C50230;
    const double C50234 = ae * C50230;
    const double C50254 = C49848 * C50251;
    const double C50277 = 3 * C50251;
    const double C50273 = ae * C50251;
    const double C50284 = C49872 + C50280;
    const double C49987 = C49856 * C49986;
    const double C50040 = C49849 * C49986;
    const double C50039 = C49986 * ae;
    const double C50411 = C49986 * C50019;
    const double C50442 = C49986 * C50074;
    const double C50132 = C49982 + C50129;
    const double C50131 = C50128 * ae;
    const double C50510 = C50128 * C50074;
    const double C50520 = C49982 + C50517;
    const double C50195 = C49849 * C50192;
    const double C50194 = C50192 * ae;
    const double C50496 = C50192 * C50074;
    const double C50548 = C50144 + C50545;
    const double C50568 = C49848 * C50565;
    const double C50955 = C50676 / C49754;
    const double C50954 = C50676 * C50671;
    const double C50951 = C50676 / C49718;
    const double C50683 = C50680 * C50671;
    const double C110 = C50680 / C50957;
    const double C22718 = C50680 / C49733;
    const double C2340 = (C50675 * std::pow(C50671, 2)) / C49750 + C50953;
    const double C50991 = C50952 / C49718;
    const double C2341 = (-2 * C50679 * C50952) / C49718;
    const double C50962 = C50703 / C50711;
    const double C50960 = C50703 / C50694;
    const double C50959 = C50703 * C50698;
    const double C1077 = (2 * C50707 * C50703) / C50694;
    const double C50963 = C50708 * C50698;
    const double C116 = C50708 / C50964;
    const double C673 = C50708 / C50696;
    const double C50995 = C50961 / C50694;
    const double C1076 = (C50702 * std::pow(C50697, 2)) / C50706 + C50958;
    const double C50972 = C50770 / C50711;
    const double C50971 = C50770 * C50769;
    const double C50968 = C50770 / C50694;
    const double C290 = (2 * C50707 * C50770) / C50694;
    const double C50973 = C50773 * C50769;
    const double C1148 = C50773 / C50964;
    const double C1380 = C50773 / C50696;
    const double C50997 = C50970 / C50694;
    const double C289 = (C50721 * std::pow(C50768, 2)) / C50706 + C50965;
    const double C50976 = C50798 / C50711;
    const double C50975 = C50798 * C50797;
    const double C50969 = C50798 / C50694;
    const double C481 = (2 * C50707 * C50798) / C50694;
    const double C50977 = C50801 * C50797;
    const double C1894 = C50801 / C50964;
    const double C2141 = C50801 / C50696;
    const double C51000 = C50974 / C50694;
    const double C480 = (C50737 * std::pow(C50796, 2)) / C50706 + C50967;
    const double C49752 = C49717 * C49738;
    const double C8031 =
        ((-C49734 / C49718) / C49733 -
         ((C50832 - (C49717 * C49738) / C49718) * be) / C49718) /
            C49733 -
        ((C49717 * ((-C49738 / C49718) / C49733 - (0 * be) / C49718) + C50848) *
         be) /
            C49718;
    const double C8032 =
        ((-C49738 / C49718) / C49733 - (0 * be) / C49718) / C49733 -
        (0 * be) / C49718;
    const double C22720 = (-C49738 / C49718) / C49733 - (0 * be) / C49718;
    const double C49763 = C49757 - C49758;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C5609 = C5582 + C5583;
    const double C5608 = C5580 + C5581;
    const double C51004 = C50983 / C49750;
    const double C2375 = C50978 * C144;
    const double C2369 = C50978 * C132;
    const double C2365 = C50978 * C143;
    const double C2359 = C50978 * C142;
    const double C2355 = C50978 * C130;
    const double C2351 = C50978 * C141;
    const double C2347 = C50978 * C128;
    const double C2571 = C50978 * C329;
    const double C2565 = C50978 * C309;
    const double C2561 = C50978 * C326;
    const double C2557 = C50978 * C307;
    const double C2553 = C50978 * C325;
    const double C2765 = C50978 * C518;
    const double C2761 = C50978 * C503;
    const double C2759 = C50978 * C498;
    const double C2755 = C50978 * C515;
    const double C2751 = C50978 * C496;
    const double C2747 = C50978 * C514;
    const double C3317 = C50978 * C948;
    const double C18464 = C50978 * C1906;
    const double C18460 = C50978 * C1910;
    const double C18454 = C50978 * C517;
    const double C18450 = C50978 * C501;
    const double C18446 = C50978 * C516;
    const double C18442 = C50978 * C500;
    const double C18984 = C50978 * C947;
    const double C18980 = C50978 * C937;
    const double C50985 = C50851 / C49718;
    const double C25581 = C25563 * C329;
    const double C22714 = -C51003;
    const double C8055 = C8026 * C307;
    const double C8049 = C8026 * C325;
    const double C8043 = C8026 * C326;
    const double C8037 = C8026 * C309;
    const double C8237 = C8026 * C329;
    const double C8419 = C8026 * C948;
    const double C12964 = C8026 * C947;
    const double C12958 = C8026 * C937;
    const double C8065 = C8025 * C143;
    const double C8059 = C8025 * C132;
    const double C8057 = C8025 * C130;
    const double C8051 = C8025 * C142;
    const double C8041 = C8025 * C141;
    const double C8035 = C8025 * C128;
    const double C8253 = C8025 * C329;
    const double C8245 = C8025 * C309;
    const double C8239 = C8025 * C326;
    const double C8435 = C8025 * C518;
    const double C8429 = C8025 * C503;
    const double C8427 = C8025 * C498;
    const double C8421 = C8025 * C515;
    const double C8605 = C8025 * C325;
    const double C8599 = C8025 * C307;
    const double C8769 = C8025 * C514;
    const double C8763 = C8025 * C496;
    const double C8981 = C8025 * C948;
    const double C12978 = C8025 * C501;
    const double C12972 = C8025 * C517;
    const double C12962 = C8025 * C516;
    const double C12956 = C8025 * C500;
    const double C13484 = C8025 * C947;
    const double C13478 = C8025 * C937;
    const double C14812 = C8025 * C1910;
    const double C14806 = C8025 * C1906;
    const double C49798 = C49725 * C49785;
    const double C15410 =
        ((-C49782 / C49718) / C49733 -
         ((C50862 - (C49725 * C49785) / C49718) * be) / C49718) /
            C49733 -
        ((C49725 * ((-C49785 / C49718) / C49733 - (0 * be) / C49718) + C50874) *
         be) /
            C49718;
    const double C15411 =
        ((-C49785 / C49718) / C49733 - (0 * be) / C49718) / C49733 -
        (0 * be) / C49718;
    const double C31994 = (-C49785 / C49718) / C49733 - (0 * be) / C49718;
    const double C49808 = C49805 - C49801;
    const double C51007 = C50988 / C49750;
    const double C50990 = C50877 / C49718;
    const double C31991 = -C51006;
    const double C330 = (C49860 + C49867 * C49864 + ae * C49849 * C49904 +
                         C49849 * (ae * C49904 + C49849 * C49874)) /
                        C49750;
    const double C134 = (3 * (C49897 + C49889 * C49864) +
                         C49856 * (2 * C49899 + C49856 * C49904)) /
                        C49718;
    const double C304 = (C49849 * (2 * C49899 + C49856 * C49904)) / C49718;
    const double C317 = (C49897 + C49889 * C49864 + C49904 * C50019) / C49718;
    const double C493 = (C49848 * (2 * C49899 + C49856 * C49904) +
                         (2 * C50321 + C49856 * C50325) * ae) /
                        C49718;
    const double C506 =
        (C49897 + C49889 * C49864 + C49848 * (C49848 * C49904 + C50325 * ae) +
         C49848 * C50325 * ae) /
        C49718;
    const double C942 =
        (C49848 * C49849 * C49904 + C49849 * C50325 * ae) / C49718;
    const double C1156 =
        (2 * C49849 * C49904 + C49849 * (C49904 + C49911 * C50019)) / C49718;
    const double C50028 = C50025 + C50026;
    const double C1272 =
        (C49849 * C49899 + C49848 * (C49848 * C50024 + C50388 * ae) +
         C49848 * C50388 * ae) /
        C49718;
    const double C2573 = C50848 * C1164;
    const double C8255 = C8026 * C1164;
    const double C8235 = C8027 * C1164;
    const double C22949 = C50848 * C1164;
    const double C25771 = C25563 * C1164;
    const double C50450 = C50447 + C50000;
    const double C2572 = C2344 * C1158;
    const double C3590 =
        (3 * (C49860 + ae * C50031 + C49849 * C50035) +
         ae * (2 * C50031 + C49849 * C50036) +
         C49849 * (2 * C50035 + ae * C50036 +
                   C49849 * (C49867 + ae * C49849 * C49902 +
                             C49849 * (ae * C49902 + C49849 * C49872)))) /
        C49750;
    const double C3586 = (3 * (C49897 + C49889 * C50019) +
                          C49849 * (2 * C50031 + C49849 * C50036)) /
                         C49718;
    const double C3744 =
        (C49897 + C49889 * C50019 + C49848 * (C49848 * C50036 + C50420 * ae) +
         C49848 * C50420 * ae) /
        C49718;
    const double C4242 = (C49848 * (2 * C50031 + C49849 * C50036) +
                          (2 * C50391 + C49849 * C50420) * ae) /
                         C49718;
    const double C50118 = C49849 * C50114;
    const double C50161 = 2 * C50114;
    const double C50218 = C49848 * C50114;
    const double C50117 = C49867 + C50113;
    const double C50503 = C50500 + C50060;
    const double C50536 = C49848 * C50532;
    const double C50557 = 2 * C50532;
    const double C519 = (C49860 + C49867 * C49864 + ae * C49848 * C49943 +
                         C49848 * (ae * C49943 + C49848 * C49874)) /
                        C49750;
    const double C949 =
        (ae * (C49849 * C49943 +
               (C49895 * C49894 + C49858 * C49857 * C49864) * ae) +
         C49848 * (ae * C49904 + C49849 * C49874)) /
        C49750;
    const double C135 = (3 * (C49936 + C49930 * C49864) +
                         C49856 * (2 * C49938 + C49856 * C49943)) /
                        C49718;
    const double C305 =
        (C49849 * (2 * C49938 + C49856 * C49943) +
         (2 * C49856 * C50004 + C49856 * (C50004 + C49972 * C49864)) * ae) /
        C49718;
    const double C316 =
        (C49936 + C49930 * C49864 + C49849 * (C49849 * C49943 + C50325 * ae) +
         C49849 * C50325 * ae) /
        C49718;
    const double C494 = (C49848 * (2 * C49938 + C49856 * C49943)) / C49718;
    const double C505 = (C49936 + C49930 * C49864 + C49943 * C50074) / C49718;
    const double C941 = (C49848 * (C49849 * C49943 + C50325 * ae)) / C49718;
    const double C1902 =
        (2 * C49848 * C49943 + C49848 * (C49943 + C49950 * C50074)) / C49718;
    const double C50001 = C49998 + C50000;
    const double C50083 = C50080 + C50081;
    const double C5601 = C50832 * C1909;
    const double C18470 = C50978 * C1909;
    const double C5599 = C50832 * C1904;
    const double C18466 = C50978 * C1904;
    const double C50061 = C49849 * C50059;
    const double C50141 = 2 * C50059;
    const double C50217 = ae * C50059;
    const double C50216 = C49848 * C50059;
    const double C7434 =
        (3 * (C49860 + ae * C50086 + C49848 * C50090) +
         ae * (2 * C50086 + C49848 * C50091) +
         C49848 * (2 * C50090 + ae * C50091 +
                   C49848 * (C49867 + ae * C49848 * C49941 +
                             C49848 * (ae * C49941 + C49848 * C49872)))) /
        C49750;
    const double C7431 = (3 * (C49936 + C49930 * C50074) +
                          C49848 * (2 * C50086 + C49848 * C50091)) /
                         C49718;
    const double C50253 = C49848 * C50249;
    const double C50272 = 2 * C50249;
    const double C50252 = C49867 + C50248;
    const double C50051 = C50049 * ae;
    const double C50462 = 2 * C50049;
    const double C50509 = C49848 * C50049;
    const double C4638 =
        2 * C49848 * C50388 + C49848 * (C50388 + C50049 * C50074);
    const double C50050 = C50047 + C50048;
    const double C50518 = C50515 + C50048;
    const double C50416 = C49999 + C50415;
    const double C50451 = C49999 + C50449;
    const double C50521 = 2 * C50516;
    const double C50519 = C50516 * ae;
    const double C49995 = C49994 * ae;
    const double C50329 = C49856 * C49994;
    const double C50336 = 3 * C49994;
    const double C50385 = C49849 * C49994;
    const double C50441 = C49848 * C49994;
    const double C1617 = (C49848 * (C49904 + C49911 * C50019) +
                          (C50325 + C49994 * C50019) * ae) /
                         C49718;
    const double C1151 =
        2 * C49849 * C50325 + C49849 * (C50325 + C49994 * C50019);
    const double C1612 = C49848 * (C50325 + C49994 * C50019);
    const double C1896 =
        2 * C49848 * C50325 + C49848 * (C50325 + C49994 * C50074);
    const double C50150 = C50148 * ae;
    const double C50468 = C49849 * C50148;
    const double C50484 = 3 * C50148;
    const double C50495 = C49848 * C50148;
    const double C10282 =
        2 * C49848 * C50420 + C49848 * (C50420 + C50148 * C50074);
    const double C50546 = C50543 + C50147;
    const double C50504 = C50058 + C50502;
    const double C50549 = 2 * C50544;
    const double C50547 = C50544 * ae;
    const double C50149 = C49849 * C50146;
    const double C50184 = 2 * C50146;
    const double C50219 = C50146 * C50074;
    const double C50259 = ae * C50146;
    const double C50258 = C49848 * C50146;
    const double C50567 = C49848 * C50563;
    const double C50537 = C49848 * C50534;
    const double C50562 = 3 * C50534;
    const double C50560 = C50534 * ae;
    const double C49884 = C49856 * C49883;
    const double C50018 = C49849 * C49883;
    const double C50073 = C49848 * C49883;
    const double C1163 = (2 * (ae * C49904 + C49849 * C49874) +
                          ae * (C49904 + C49911 * std::pow(C49849, 2)) +
                          C49849 * (C49874 + ae * C49849 * C49911 +
                                    C49849 * (ae * C49911 + C49849 * C49883))) /
                         C49750;
    const double C1908 = (2 * (ae * C49943 + C49848 * C49874) +
                          ae * (C49943 + C49950 * std::pow(C49848, 2)) +
                          C49848 * (C49874 + ae * C49848 * C49950 +
                                    C49848 * (ae * C49950 + C49848 * C49883))) /
                         C49750;
    const double C50102 = C50094 + C50098;
    const double C50235 = C50231 + C50232;
    const double C50174 = C49849 * C50170;
    const double C50260 = C49848 * C50170;
    const double C50285 = C49848 * C50281;
    const double C49923 = C49856 * C49922;
    const double C50021 = C49922 * C50019;
    const double C50103 = C49917 + C50100;
    const double C50175 = C49849 * C50172;
    const double C49962 = C49856 * C49961;
    const double C50038 = C49849 * C49961;
    const double C50076 = C49961 * C50074;
    const double C50130 = C50126 + C50127;
    const double C50237 = C49956 + C50233;
    const double C50193 = C49849 * C50190;
    const double C50261 = C50190 * C50074;
    const double C50286 = C49848 * C50283;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C361 = C339 + C340;
    const double C2385 = C2360 + C2361;
    const double C363 = C343 + C344;
    const double C2381 = C2352 + C2353;
    const double C366 = C349 + C350;
    const double C2586 = C2558 + C2559;
    const double C552 = C532 + C533;
    const double C5610 = C5592 + C5593;
    const double C6137 = C6122 + C6123;
    const double C18478 = C18447 + C18448;
    const double C170 = C152 + C153;
    const double C364 = C345 + C346;
    const double C2379 = C2348 + C2349;
    const double C553 = C534 + C535;
    const double C5611 = C5594 + C5595;
    const double C6136 = C6120 + C6121;
    const double C18476 = C18443 + C18444;
    const double C1279 =
        (ae * C49897 + C49849 * C49860 + ae * C49848 * C50006 +
         C49848 * (ae * C50006 + C49848 * (ae * C49889 + C49849 * C49867))) /
        C49750;
    const double C1626 =
        (ae * (C49936 + C49849 * C50006 + C49849 * C50004 * ae) +
         C49848 * (C49860 + ae * C49849 * C49889 +
                   C49849 * (ae * C49889 + C49849 * C49867))) /
        C49750;
    const double C4648 =
        (2 * (ae * C50006 + C49848 * C50035) +
         ae * (C50006 + C50059 * std::pow(C49848, 2)) +
         C49848 * (C50035 + ae * C49848 * C50059 +
                   C49848 * (ae * C50059 +
                             C49848 * (ae * C49902 + C49849 * C49872)))) /
        C49750;
    const double C1161 =
        (2 * (C49849 * C49936 + C50318 * ae) +
         C49849 * (C49936 + C49849 * C50006 + C49849 * C50004 * ae) +
         (C50318 + C50004 * C50019) * ae) /
        C49718;
    const double C1275 =
        (C49849 * C49936 + C50318 * ae + C50006 * C50074) / C49718;
    const double C1622 =
        (C49848 * (C49936 + C49849 * C50006 + C50391 * ae)) / C49718;
    const double C4645 =
        (2 * C49848 * C50006 + C49848 * (C50006 + C50059 * C50074)) / C49718;
    const double C7430 =
        (3 * (C49897 + C49848 * C50457 + C50455 * ae) +
         C49848 * (2 * C50457 +
                   C49848 * (C49889 + C49848 * (C49848 * C49902 + C50057) +
                             C49848 * C49972 * ae) +
                   C50458 * ae) +
         (2 * C50455 + C49848 * C50458) * ae) /
        C49718;
    const double C7438 = C117 * C1905;
    const double C18459 = C2343 * C1905;
    const double C348 = C50832 * C314;
    const double C2567 = C50978 * C314;
    const double C2563 = C50848 * C314;
    const double C8039 = C8027 * C314;
    const double C8247 = C8025 * C314;
    const double C8243 = C8026 * C314;
    const double C22939 = C50848 * C314;
    const double C25575 = C25563 * C314;
    const double C538 = C117 * C504;
    const double C2764 = C2343 * C504;
    const double C954 = C50832 * C939;
    const double C2757 = C50848 * C939;
    const double C3313 = C50978 * C939;
    const double C8425 = C8026 * C939;
    const double C8975 = C8025 * C939;
    const double C23133 = C50848 * C939;
    const double C955 = C117 * C940;
    const double C2752 = C2344 * C940;
    const double C3316 = C2343 * C940;
    const double C3318 = C2344 * C1619;
    const double C5418 = C117 * C1619;
    const double C34930 = C2343 * C1619;
    const double C5600 = C117 * C1903;
    const double C18469 = C2343 * C1903;
    const double C347 = C117 * C299;
    const double C2566 = C2343 * C299;
    const double C2562 = C2344 * C299;
    const double C536 = C117 * C488;
    const double C2760 = C2343 * C488;
    const double C953 = C117 * C933;
    const double C2756 = C2344 * C933;
    const double C3312 = C2343 * C933;
    const double C2568 = C2344 * C1152;
    const double C2762 = C2344 * C1266;
    const double C6126 = C117 * C1266;
    const double C18995 = C2343 * C1266;
    const double C3314 = C2344 * C1613;
    const double C5416 = C117 * C1613;
    const double C34926 = C2343 * C1613;
    const double C5598 = C117 * C1897;
    const double C18465 = C2343 * C1897;
    const double C162 = C117 * C123;
    const double C2370 = C2343 * C123;
    const double C337 = C117 * C294;
    const double C2366 = C2344 * C294;
    const double C2940 = C2343 * C294;
    const double C351 = C117 * C300;
    const double C2574 = C2343 * C300;
    const double C2554 = C2344 * C300;
    const double C526 = C117 * C483;
    const double C3103 = C2343 * C483;
    const double C540 = C117 * C489;
    const double C2768 = C2343 * C489;
    const double C957 = C117 * C934;
    const double C2748 = C2344 * C934;
    const double C3320 = C2343 * C934;
    const double C6538 = C117 * C1274;
    const double C18455 = C2344 * C1274;
    const double C18991 = C2343 * C1274;
    const double C16665 = C117 * C4644;
    const double C18457 = C2344 * C4644;
    const double C19409 = C2343 * C4644;
    const double C6536 = C117 * C1267;
    const double C18451 = C2344 * C1267;
    const double C18987 = C2343 * C1267;
    const double C16663 = C117 * C4639;
    const double C18461 = C2344 * C4639;
    const double C19405 = C2343 * C4639;
    const double C17155 = C117 * C3739;
    const double C18989 = C2344 * C3739;
    const double C19913 = C2343 * C3739;
    const double C19907 = C2344 * C4237;
    const double C17559 = C117 * C7425;
    const double C20325 = C2343 * C7425;
    const double C550 = C528 + C529;
    const double C172 = C156 + C157;
    const double C362 = C341 + C342;
    const double C2383 = C2356 + C2357;
    const double C551 = C530 + C531;
    const double C7440 = C7436 + C7437;
    const double C167 = C50832 * C145;
    const double C336 = C50832 * C324;
    const double C2363 = C50848 * C324;
    const double C2945 = C50978 * C324;
    const double C8067 = C8026 * C324;
    const double C22739 = C50848 * C324;
    const double C525 = C50832 * C513;
    const double C3108 = C50978 * C513;
    const double C49913 = C49908 + C49912;
    const double C3584 = (3 * (C49899 + C49906 * C50019) +
                          C49849 * (2 * C50024 + C49849 * C50029)) /
                         C49718;
    const double C50101 = C49876 + C50097;
    const double C50121 = C50115 + C50119;
    const double C49952 = C49947 + C49951;
    const double C7429 = (3 * (C49938 + C49945 * C50074) +
                          C49848 * (2 * C50079 + C49848 * C50084)) /
                         C49718;
    const double C50238 = C49876 + C50234;
    const double C50256 = C50250 + C50254;
    const double C49988 = C49984 + C49987;
    const double C50042 = C50040 * ae;
    const double C50412 = C49994 + C50411;
    const double C50444 = C49994 + C50442;
    const double C50134 = C50132 * ae;
    const double C50463 = C49849 * C50132;
    const double C50512 = C50049 + C50510;
    const double C50523 = C49848 * C50520;
    const double C50197 = C50189 + C50195;
    const double C50498 = C50148 + C50496;
    const double C50551 = C49848 * C50548;
    const double C50570 = C50566 + C50568;
    const double C50992 = C50954 / C49750;
    const double C50956 = C50683 / C49718;
    const double C25564 = -C50991;
    const double C50994 = C50959 / C50706;
    const double C50996 = C50963 / C50694;
    const double C292 = -C50995;
    const double C50998 = C50971 / C50706;
    const double C50999 = C50973 / C50694;
    const double C1074 = -C50997;
    const double C51001 = C50975 / C50706;
    const double C51002 = C50977 / C50694;
    const double C1725 = -C51000;
    const double C49756 = C49752 / C49718;
    const double C8060 = C8031 * C294;
    const double C8054 = C8031 * C295;
    const double C8048 = C8031 * C306;
    const double C8042 = C8031 * C308;
    const double C8036 = C8031 * C296;
    const double C8254 = C8031 * C1158;
    const double C8248 = C8031 * C1152;
    const double C8242 = C8031 * C299;
    const double C8236 = C8031 * C315;
    const double C8430 = C8031 * C1266;
    const double C8424 = C8031 * C933;
    const double C8418 = C8031 * C940;
    const double C8600 = C8031 * C300;
    const double C8764 = C8031 * C934;
    const double C8982 = C8031 * C1619;
    const double C8976 = C8031 * C1613;
    const double C12975 = C8031 * C1267;
    const double C12969 = C8031 * C1274;
    const double C12963 = C8031 * C938;
    const double C12957 = C8031 * C932;
    const double C13485 = C8031 * C1621;
    const double C13479 = C8031 * C1614;
    const double C13887 = C8031 * C3739;
    const double C14391 = C8031 * C4237;
    const double C14813 = C8031 * C4644;
    const double C14807 = C8031 * C4639;
    const double C8052 = C8032 * C300;
    const double C8044 = C8032 * C315;
    const double C8038 = C8032 * C299;
    const double C8240 = C8032 * C1152;
    const double C8234 = C8032 * C1158;
    const double C8422 = C8032 * C1613;
    const double C8416 = C8032 * C1619;
    const double C12973 = C8032 * C3739;
    const double C12965 = C8032 * C1621;
    const double C12959 = C8032 * C1614;
    const double C13481 = C8032 * C4237;
    const double C22742 = C22720 * C294;
    const double C22736 = C22720 * C306;
    const double C22732 = C22720 * C295;
    const double C22728 = C22720 * C308;
    const double C22724 = C22720 * C296;
    const double C22948 = C22720 * C1158;
    const double C22944 = C22720 * C1152;
    const double C22938 = C22720 * C299;
    const double C22934 = C22720 * C315;
    const double C22930 = C22720 * C300;
    const double C23138 = C22720 * C1266;
    const double C23132 = C22720 * C933;
    const double C23128 = C22720 * C940;
    const double C23124 = C22720 * C934;
    const double C23694 = C22720 * C1619;
    const double C23690 = C22720 * C1613;
    const double C28828 = C22720 * C1267;
    const double C28824 = C22720 * C1274;
    const double C28816 = C22720 * C938;
    const double C28812 = C22720 * C932;
    const double C29508 = C22720 * C1621;
    const double C29504 = C22720 * C1614;
    const double C30050 = C22720 * C3739;
    const double C30708 = C22720 * C4237;
    const double C31242 = C22720 * C4644;
    const double C31238 = C22720 * C4639;
    const double C10849 =
        (C49763 / C49733 - (0 * be) / C49718) / C49733 - (0 * be) / C49718;
    const double C25568 = C49763 / C49733 - (0 * be) / C49718;
    const double C179 = C169 * C50862;
    const double C5239 = C169 * C50980;
    const double C15414 = C169 * C15406;
    const double C178 = C168 * C118;
    const double C5238 = C168 * C5235;
    const double C51016 = C50981 - C51004;
    const double C2389 = C2368 + C2369;
    const double C2387 = C2364 + C2365;
    const double C2384 = C2358 + C2359;
    const double C2382 = C2354 + C2355;
    const double C2380 = C2350 + C2351;
    const double C2378 = C2346 + C2347;
    const double C2592 = C2570 + C2571;
    const double C2589 = C2564 + C2565;
    const double C2587 = C2560 + C2561;
    const double C2585 = C2556 + C2557;
    const double C2583 = C2552 + C2553;
    const double C2783 = C2758 + C2759;
    const double C2781 = C2754 + C2755;
    const double C2779 = C2750 + C2751;
    const double C2777 = C2746 + C2747;
    const double C18486 = C18463 + C18464;
    const double C18481 = C18453 + C18454;
    const double C18479 = C18449 + C18450;
    const double C18477 = C18445 + C18446;
    const double C18475 = C18441 + C18442;
    const double C19005 = C18983 + C18984;
    const double C19003 = C18979 + C18980;
    const double C51005 = C50984 - C50985;
    const double C22751 = C22714 * C144;
    const double C22745 = C22714 * C132;
    const double C22741 = C22714 * C143;
    const double C22735 = C22714 * C142;
    const double C22731 = C22714 * C130;
    const double C22727 = C22714 * C141;
    const double C22723 = C22714 * C128;
    const double C22947 = C22714 * C329;
    const double C22943 = C22714 * C314;
    const double C22941 = C22714 * C309;
    const double C22937 = C22714 * C326;
    const double C22933 = C22714 * C307;
    const double C22929 = C22714 * C325;
    const double C23141 = C22714 * C518;
    const double C23137 = C22714 * C503;
    const double C23135 = C22714 * C498;
    const double C23131 = C22714 * C515;
    const double C23127 = C22714 * C496;
    const double C23123 = C22714 * C514;
    const double C23321 = C22714 * C324;
    const double C23484 = C22714 * C513;
    const double C23693 = C22714 * C948;
    const double C23689 = C22714 * C939;
    const double C28839 = C22714 * C1909;
    const double C28835 = C22714 * C1904;
    const double C28831 = C22714 * C501;
    const double C28827 = C22714 * C517;
    const double C28815 = C22714 * C516;
    const double C28811 = C22714 * C500;
    const double C29507 = C22714 * C947;
    const double C29503 = C22714 * C937;
    const double C31241 = C22714 * C1910;
    const double C31237 = C22714 * C1906;
    const double C8030 =
        ((-(0 * be) / C49718) / C49733 -
         ((0 - (C49717 * C49734) / C49718) * be) / C49718) /
            C49733 -
        ((C49717 * ((-C49734 / C49718) / C49733 -
                    ((C50832 - (C49717 * C49738) / C49718) * be) / C49718) +
          C22714) *
         be) /
            C49718 +
        (-C49738 / C49718) / C49733 - (0 * be) / C49718;
    const double C49804 = C49798 / C49718;
    const double C20895 =
        (C49808 / C49733 - (0 * be) / C49718) / C49733 - (0 * be) / C49718;
    const double C38220 = C49808 / C49733 - (0 * be) / C49718;
    const double C51017 = C50986 - C51007;
    const double C51008 = C50989 - C50990;
    const double C31997 = C169 * C31991;
    const double C15409 =
        ((-(0 * be) / C49718) / C49733 -
         ((0 - (C49725 * C49782) / C49718) * be) / C49718) /
            C49733 -
        ((C49725 * ((-C49782 / C49718) / C49733 -
                    ((C50862 - (C49725 * C49785) / C49718) * be) / C49718) +
          C31991) *
         be) /
            C49718 +
        (-C49785 / C49718) / C49733 - (0 * be) / C49718;
    const double C354 = C50832 * C330;
    const double C2579 = C50978 * C330;
    const double C2551 = C50848 * C330;
    const double C8047 = C8027 * C330;
    const double C8607 = C8026 * C330;
    const double C22955 = C22714 * C330;
    const double C22927 = C50848 * C330;
    const double C25583 = C25563 * C330;
    const double C160 = C117 * C134;
    const double C2374 = C2343 * C134;
    const double C335 = C117 * C304;
    const double C2362 = C2344 * C304;
    const double C2944 = C2343 * C304;
    const double C8066 = C8031 * C304;
    const double C22738 = C22720 * C304;
    const double C353 = C117 * C317;
    const double C2578 = C2343 * C317;
    const double C2550 = C2344 * C317;
    const double C8046 = C8032 * C317;
    const double C8606 = C8031 * C317;
    const double C22926 = C22720 * C317;
    const double C524 = C117 * C493;
    const double C3107 = C2343 * C493;
    const double C542 = C117 * C506;
    const double C2772 = C2343 * C506;
    const double C959 = C117 * C942;
    const double C2744 = C2344 * C942;
    const double C3324 = C2343 * C942;
    const double C8770 = C8031 * C942;
    const double C23120 = C22720 * C942;
    const double C2580 = C2344 * C1156;
    const double C8608 = C8032 * C1156;
    const double C22956 = C22720 * C1156;
    const double C3589 =
        (3 * (C49978 + ae * C50024 + C49849 * C50028) +
         ae * (2 * C50024 + C49849 * C50029) +
         C49849 *
             (2 * C50028 + ae * C50029 +
              C49849 * (C49876 + ae * C49849 * C49917 +
                        C49849 * (ae * C49917 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C2766 = C2344 * C1272;
    const double C6128 = C117 * C1272;
    const double C8436 = C8031 * C1272;
    const double C18999 = C2343 * C1272;
    const double C23142 = C22720 * C1272;
    const double C2593 = C2572 + C2573;
    const double C12967 = C8032 * C3744;
    const double C13893 = C8031 * C3744;
    const double C17157 = C117 * C3744;
    const double C18993 = C2344 * C3744;
    const double C19917 = C2343 * C3744;
    const double C30054 = C22720 * C3744;
    const double C13487 = C8032 * C4242;
    const double C14397 = C8031 * C4242;
    const double C19911 = C2344 * C4242;
    const double C30712 = C22720 * C4242;
    const double C50168 = C50161 + C50162;
    const double C50120 = C50117 + C50118;
    const double C50538 = C49889 + C50536;
    const double C543 = C50832 * C519;
    const double C2773 = C50978 * C519;
    const double C23149 = C22714 * C519;
    const double C960 = C50832 * C949;
    const double C2745 = C50848 * C949;
    const double C3325 = C50978 * C949;
    const double C8771 = C8026 * C949;
    const double C23121 = C50848 * C949;
    const double C23701 = C22714 * C949;
    const double C163 = C50832 * C135;
    const double C2371 = C50978 * C135;
    const double C22747 = C22714 * C135;
    const double C338 = C50832 * C305;
    const double C2367 = C50848 * C305;
    const double C2941 = C50978 * C305;
    const double C8061 = C8026 * C305;
    const double C22743 = C50848 * C305;
    const double C23317 = C22714 * C305;
    const double C352 = C50832 * C316;
    const double C2575 = C50978 * C316;
    const double C2555 = C50848 * C316;
    const double C8053 = C8027 * C316;
    const double C8601 = C8026 * C316;
    const double C22951 = C22714 * C316;
    const double C22931 = C50848 * C316;
    const double C25589 = C25563 * C316;
    const double C527 = C50832 * C494;
    const double C3104 = C50978 * C494;
    const double C23480 = C22714 * C494;
    const double C541 = C50832 * C505;
    const double C2769 = C50978 * C505;
    const double C23145 = C22714 * C505;
    const double C958 = C50832 * C941;
    const double C2749 = C50848 * C941;
    const double C3321 = C50978 * C941;
    const double C8765 = C8026 * C941;
    const double C23125 = C50848 * C941;
    const double C23697 = C22714 * C941;
    const double C5605 = C50832 * C1902;
    const double C1278 =
        (ae * C49899 + C49849 * C49978 + ae * C49848 * C50001 +
         C49848 * (ae * C50001 + C49848 * (ae * C49906 + C49849 * C49876))) /
        C49750;
    const double C1625 =
        (ae * (C49938 + C49849 * C50001 + C49849 * C49999 * ae) +
         C49848 * (C49978 + ae * C49849 * C49906 +
                   C49849 * (ae * C49906 + C49849 * C49876))) /
        C49750;
    const double C1159 =
        (2 * (C49849 * C49938 + C50321 * ae) +
         C49849 * (C49938 + C49849 * C50001 + C49849 * C49999 * ae) +
         (C50321 + C49999 * C50019) * ae) /
        C49718;
    const double C1273 =
        (C49849 * C49938 + C50321 * ae + C50001 * C50074) / C49718;
    const double C1620 =
        (C49848 * (C49938 + C49849 * C50001 + C50388 * ae)) / C49718;
    const double C7433 =
        (3 * (C49978 + ae * C50079 + C49848 * C50083) +
         ae * (2 * C50079 + C49848 * C50084) +
         C49848 *
             (2 * C50083 + ae * C50084 +
              C49848 * (C49876 + ae * C49848 * C49956 +
                        C49848 * (ae * C49956 + C49848 * C49856 * C49881)))) /
        C49750;
    const double C50062 = C49930 + C50061;
    const double C50220 = C50217 + C50218;
    const double C17562 = C50832 * C7434;
    const double C20330 = C50978 * C7434;
    const double C49217 = C22714 * C7434;
    const double C17560 = C50832 * C7431;
    const double C20326 = C50978 * C7431;
    const double C49213 = C22714 * C7431;
    const double C50279 = C50272 + C50273;
    const double C50255 = C50252 + C50253;
    const double C50511 = C50508 + C50051;
    const double C4642 =
        (2 * (C49848 * C50024 + C50388 * ae) +
         C49848 * (C50024 + C49848 * (C49848 * C50093 + C50051) +
                   C49848 * C50049 * ae) +
         (C50388 + C50049 * C50074) * ae) /
        C49718;
    const double C16261 = C117 * C4638;
    const double C18467 = C2344 * C4638;
    const double C28836 = C22720 * C4638;
    const double C50052 = C49849 * C50050;
    const double C50123 = 2 * C50050;
    const double C50224 = ae * C50050;
    const double C50223 = C49848 * C50050;
    const double C4647 =
        (2 * (ae * C50001 + C49848 * C50028) +
         ae * (C50001 + C50050 * std::pow(C49848, 2)) +
         C49848 *
             (C50028 + ae * C49848 * C50050 +
              C49848 * (ae * C50050 +
                        C49848 * (ae * C49917 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C4643 =
        (2 * C49848 * C50001 + C49848 * (C50001 + C50050 * C50074)) / C49718;
    const double C50522 = C49848 * C50518;
    const double C3742 =
        (C49899 + C49906 * C50019 + C49848 * (C49848 * C50029 + C50416 * ae) +
         C49848 * C50416 * ae) /
        C49718;
    const double C4240 = (C49848 * (2 * C50024 + C49849 * C50029) +
                          (2 * C50388 + C49849 * C50416) * ae) /
                         C49718;
    const double C3580 = 3 * (C50321 + C49999 * C50019) +
                         C49849 * (2 * C50388 + C49849 * C50416);
    const double C3738 = C50321 + C49999 * C50019 + C50416 * C50074;
    const double C4236 = C49848 * (2 * C50388 + C49849 * C50416);
    const double C10281 =
        2 * C49848 * C50416 + C49848 * (C50416 + C50132 * C50074);
    const double C7428 =
        (3 * (C49899 + C49848 * C50450 + C50448 * ae) +
         C49848 * (2 * C50450 +
                   C49848 * (C49906 + C49848 * (C49848 * C49917 + C50048) +
                             C49848 * C49982 * ae) +
                   C50451 * ae) +
         (2 * C50448 + C49848 * C50451) * ae) /
        C49718;
    const double C7424 = 3 * (C50321 + C49999 * C50074) +
                         C49848 * (2 * C50448 + C49848 * C50451);
    const double C49996 = C49992 + C49995;
    const double C50443 = C50440 + C49995;
    const double C1901 =
        (2 * (C49848 * C49904 + C50325 * ae) +
         C49848 * (C49904 + C49848 * (C49848 * C49911 + C49995) +
                   C49848 * C49994 * ae) +
         (C50325 + C49994 * C50074) * ae) /
        C49718;
    const double C50330 = C50328 + C50329;
    const double C1270 =
        (C49849 * C49904 + C49848 * (C49848 * C50016 + C50385 * ae) +
         C49848 * C50385 * ae) /
        C49718;
    const double C1265 = C49849 * C50325 + C50385 * C50074;
    const double C4637 =
        2 * C49848 * C50385 + C49848 * (C50385 + C50040 * C50074);
    const double C3326 = C2344 * C1617;
    const double C5424 = C117 * C1617;
    const double C8772 = C8032 * C1617;
    const double C23702 = C22720 * C1617;
    const double C2576 = C2344 * C1151;
    const double C8602 = C8032 * C1151;
    const double C22952 = C22720 * C1151;
    const double C3322 = C2344 * C1612;
    const double C5422 = C117 * C1612;
    const double C8766 = C8032 * C1612;
    const double C23698 = C22720 * C1612;
    const double C5604 = C117 * C1896;
    const double C50497 = C50494 + C50150;
    const double C10285 =
        (2 * (C49848 * C50036 + C50420 * ae) +
         C49848 * (C50036 + C49848 * (C49848 * C50116 + C50150) +
                   C49848 * C50148 * ae) +
         (C50420 + C50148 * C50074) * ae) /
        C49718;
    const double C50469 = C50467 + C50468;
    const double C14809 = C8032 * C10282;
    const double C19407 = C2344 * C10282;
    const double C22013 = C117 * C10282;
    const double C48310 = C22720 * C10282;
    const double C50550 = C49848 * C50546;
    const double C14799 =
        (3 * (C50031 + C49848 * C50503 + C50501 * ae) +
         C49848 * (2 * C50503 +
                   C49848 * (C50109 + C49848 * (C49848 * C50163 + C50147) +
                             C49848 * C50144 * ae) +
                   C50504 * ae) +
         (2 * C50501 + C49848 * C50504) * ae) /
        C49718;
    const double C14797 = 3 * (C50391 + C50058 * C50074) +
                          C49848 * (2 * C50501 + C49848 * C50504);
    const double C50151 = C49941 + C50149;
    const double C50221 = C50059 + C50219;
    const double C50264 = 2 * C50258;
    const double C50262 = ae * C50258;
    const double C50569 = C49902 + C50567;
    const double C50539 = C50535 + C50537;
    const double C49885 = C49879 + C49884;
    const double C50020 = C50017 + C50018;
    const double C50075 = C50072 + C50073;
    const double C2581 = C50848 * C1163;
    const double C8609 = C8027 * C1163;
    const double C22957 = C50848 * C1163;
    const double C26145 = C25563 * C1163;
    const double C5607 = C50832 * C1908;
    const double C50104 = C49849 * C50102;
    const double C50225 = C49848 * C50102;
    const double C50239 = C49848 * C50235;
    const double C50176 = C50173 + C50174;
    const double C50263 = C50259 + C50260;
    const double C50287 = C50284 + C50285;
    const double C49924 = C49919 + C49923;
    const double C50022 = C49911 + C50021;
    const double C50105 = C49849 * C50103;
    const double C50177 = C50171 + C50175;
    const double C49963 = C49958 + C49962;
    const double C50041 = C50038 + C50039;
    const double C50077 = C49950 + C50076;
    const double C50133 = C49849 * C50130;
    const double C50226 = C50130 * C50074;
    const double C50240 = C49848 * C50237;
    const double C50196 = C49948 + C50193;
    const double C50265 = C50146 + C50261;
    const double C50288 = C50282 + C50286;
    const double C181 = C171 * C50862;
    const double C5243 = C171 * C50980;
    const double C15423 = C171 * C15406;
    const double C32001 = C171 * C31991;
    const double C183 = C173 * C50862;
    const double C5248 = C173 * C50980;
    const double C15426 = C173 * C15406;
    const double C32006 = C173 * C31991;
    const double C373 = C361 * C50862;
    const double C5408 = C361 * C50980;
    const double C15906 = C361 * C15406;
    const double C32166 = C361 * C31991;
    const double C375 = C363 * C50862;
    const double C5412 = C363 * C50980;
    const double C15581 = C363 * C15406;
    const double C32170 = C363 * C31991;
    const double C378 = C366 * C50862;
    const double C5415 = C366 * C50980;
    const double C15584 = C366 * C15406;
    const double C32173 = C366 * C31991;
    const double C564 = C552 * C50862;
    const double C5241 = C552 * C50874;
    const double C5590 = C552 * C50980;
    const double C15416 = C552 * C15407;
    const double C15745 = C552 * C15406;
    const double C31999 = C552 * C50874;
    const double C32332 = C552 * C31991;
    const double C180 = C170 * C118;
    const double C5242 = C170 * C5235;
    const double C376 = C364 * C118;
    const double C5413 = C364 * C5235;
    const double C565 = C553 * C118;
    const double C5240 = C553 * C5236;
    const double C5591 = C553 * C5235;
    const double C15415 = C553 * C15410;
    const double C31998 = C553 * C31994;
    const double C6539 = C50832 * C1279;
    const double C12970 = C8026 * C1279;
    const double C13892 = C8025 * C1279;
    const double C18456 = C50848 * C1279;
    const double C18992 = C50978 * C1279;
    const double C28825 = C50848 * C1279;
    const double C30053 = C22714 * C1279;
    const double C7031 = C50832 * C1626;
    const double C12966 = C8027 * C1626;
    const double C13486 = C8026 * C1626;
    const double C14396 = C8025 * C1626;
    const double C18986 = C50848 * C1626;
    const double C19910 = C50978 * C1626;
    const double C29509 = C50848 * C1626;
    const double C30711 = C22714 * C1626;
    const double C44705 = C25563 * C1626;
    const double C14814 = C8026 * C4648;
    const double C16666 = C50832 * C4648;
    const double C18458 = C50848 * C4648;
    const double C19410 = C50978 * C4648;
    const double C31243 = C50848 * C4648;
    const double C48313 = C22714 * C4648;
    const double C6537 = C50832 * C1275;
    const double C12976 = C8026 * C1275;
    const double C13886 = C8025 * C1275;
    const double C18452 = C50848 * C1275;
    const double C18988 = C50978 * C1275;
    const double C28829 = C50848 * C1275;
    const double C30049 = C22714 * C1275;
    const double C7029 = C50832 * C1622;
    const double C12960 = C8027 * C1622;
    const double C13480 = C8026 * C1622;
    const double C14390 = C8025 * C1622;
    const double C18982 = C50848 * C1622;
    const double C19906 = C50978 * C1622;
    const double C29505 = C50848 * C1622;
    const double C30707 = C22714 * C1622;
    const double C44699 = C25563 * C1622;
    const double C14808 = C8026 * C4645;
    const double C16664 = C50832 * C4645;
    const double C18462 = C50848 * C4645;
    const double C19406 = C50978 * C4645;
    const double C31239 = C50848 * C4645;
    const double C48309 = C22714 * C4645;
    const double C17561 = C117 * C7430;
    const double C20329 = C2343 * C7430;
    const double C7441 = C7438 + C7439;
    const double C18484 = C18459 + C18460;
    const double C555 = C538 + C539;
    const double C2786 = C2764 + C2765;
    const double C966 = C955 + C956;
    const double C2780 = C2752 + C2753;
    const double C3330 = C3316 + C3317;
    const double C5613 = C5600 + C5601;
    const double C18489 = C18469 + C18470;
    const double C365 = C347 + C348;
    const double C2590 = C2566 + C2567;
    const double C2588 = C2562 + C2563;
    const double C554 = C536 + C537;
    const double C2784 = C2760 + C2761;
    const double C965 = C953 + C954;
    const double C2782 = C2756 + C2757;
    const double C3328 = C3312 + C3313;
    const double C5612 = C5598 + C5599;
    const double C18487 = C18465 + C18466;
    const double C562 = C550 * C50862;
    const double C5245 = C550 * C50874;
    const double C5586 = C550 * C50980;
    const double C15421 = C550 * C15407;
    const double C16058 = C550 * C15406;
    const double C32003 = C550 * C50874;
    const double C32328 = C550 * C31991;
    const double C182 = C172 * C118;
    const double C5249 = C172 * C5235;
    const double C374 = C362 * C118;
    const double C5409 = C362 * C5235;
    const double C563 = C551 * C118;
    const double C5244 = C551 * C5236;
    const double C5587 = C551 * C5235;
    const double C15422 = C551 * C15410;
    const double C32002 = C551 * C31994;
    const double C137 = (4 * (2 * C49899 + C49856 * C49904) +
                         C49856 * (3 * C49904 + C49856 * C49913)) /
                        C49718;
    const double C319 =
        (2 * C49899 + C49856 * C49904 + C49913 * C50019) / C49718;
    const double C321 = (C49849 * (3 * C49904 + C49856 * C49913)) / C49718;
    const double C8256 = C8032 * C3584;
    const double C9239 = (4 * (2 * C50031 + C49849 * C50036) +
                          C49849 * (3 * C50036 + C49849 * C50121)) /
                         C49718;
    const double C136 = (4 * (2 * C49938 + C49856 * C49943) +
                         C49856 * (3 * C49943 + C49856 * C49952)) /
                        C49718;
    const double C507 =
        (2 * C49938 + C49856 * C49943 + C49952 * C50074) / C49718;
    const double C509 = (C49848 * (3 * C49943 + C49856 * C49952)) / C49718;
    const double C15752 = C50832 * C7429;
    const double C17555 = (4 * (2 * C50086 + C49848 * C50091) +
                           C49848 * (3 * C50091 + C49848 * C50256)) /
                          C49718;
    const double C49989 = C49988 * ae;
    const double C50337 = C49856 * C49988;
    const double C50382 = C49849 * C49988;
    const double C4640 =
        (2 * (C49848 * C50016 + C50385 * ae) +
         C49848 * (C50016 + C49848 * (C49848 * C49849 * C49922 + C50042) +
                   C49848 * C50040 * ae) +
         (C50385 + C50040 * C50074) * ae) /
        C49718;
    const double C3579 = 3 * (C50325 + C49994 * C50019) +
                         C49849 * (2 * C50385 + C49849 * C50412);
    const double C3737 = C50325 + C49994 * C50019 + C50412 * C50074;
    const double C4235 = C49848 * (2 * C50385 + C49849 * C50412);
    const double C7423 = 3 * (C50325 + C49994 * C50074) +
                         C49848 * (2 * C50441 + C49848 * C50444);
    const double C10283 =
        (2 * (C49848 * C50029 + C50416 * ae) +
         C49848 * (C50029 + C49848 * (C49848 * C50103 + C50134) +
                   C49848 * C50132 * ae) +
         (C50416 + C50132 * C50074) * ae) /
        C49718;
    const double C50464 = C50462 + C50463;
    const double C16658 = 3 * (C50388 + C50049 * C50074) +
                          C49848 * (2 * C50509 + C49848 * C50512);
    const double C50525 = C50521 + C50523;
    const double C50199 = C50197 * ae;
    const double C50485 = C49849 * C50197;
    const double C14796 = 3 * (C50420 + C50148 * C50074) +
                          C49848 * (2 * C50495 + C49848 * C50498);
    const double C50553 = C50549 + C50551;
    const double C50572 = C49848 * C50570;
    const double C51009 = C50953 - C50992;
    const double C50993 = C50955 - C50956;
    const double C51010 = C50958 - C50994;
    const double C51011 = C50962 - C50996;
    const double C51012 = C50965 - C50998;
    const double C51013 = C50972 - C50999;
    const double C51014 = C50967 - C51001;
    const double C51015 = C50976 - C51002;
    const double C49761 = C50832 - C49756;
    const double C8080 = C8054 + C8055;
    const double C8077 = C8048 + C8049;
    const double C8074 = C8042 + C8043;
    const double C8071 = C8036 + C8037;
    const double C8268 = C8254 + C8255;
    const double C8262 = C8242 + C8243;
    const double C8259 = C8236 + C8237;
    const double C8444 = C8424 + C8425;
    const double C8441 = C8418 + C8419;
    const double C12983 = C12963 + C12964;
    const double C12980 = C12957 + C12958;
    const double C8075 = C8044 + C8045;
    const double C8072 = C8038 + C8039;
    const double C8258 = C8234 + C8235;
    const double C22761 = C22736 + C22737;
    const double C22759 = C22732 + C22733;
    const double C22757 = C22728 + C22729;
    const double C22755 = C22724 + C22725;
    const double C22969 = C22948 + C22949;
    const double C22964 = C22938 + C22939;
    const double C22962 = C22934 + C22935;
    const double C23158 = C23132 + C23133;
    const double C23156 = C23128 + C23129;
    const double C28845 = C28816 + C28817;
    const double C28843 = C28812 + C28813;
    const double C25588 = C25568 * C300;
    const double C25582 = C25568 * C317;
    const double C25580 = C25568 * C315;
    const double C25574 = C25568 * C299;
    const double C25792 = C25568 * C3584;
    const double C25776 = C25568 * C1152;
    const double C25770 = C25568 * C1158;
    const double C25958 = C25568 * C1613;
    const double C25952 = C25568 * C1619;
    const double C26144 = C25568 * C1156;
    const double C26138 = C25568 * C1151;
    const double C26308 = C25568 * C1617;
    const double C26302 = C25568 * C1612;
    const double C44712 = C25568 * C3739;
    const double C44706 = C25568 * C3744;
    const double C44704 = C25568 * C1621;
    const double C44698 = C25568 * C1614;
    const double C45226 = C25568 * C4242;
    const double C45220 = C25568 * C4237;
    const double C46540 = C25568 * C10282;
    const double C25601 = C51016 * C143;
    const double C25595 = C51016 * C132;
    const double C25593 = C51016 * C130;
    const double C25587 = C51016 * C142;
    const double C25577 = C51016 * C141;
    const double C25571 = C51016 * C128;
    const double C25789 = C51016 * C329;
    const double C25783 = C51016 * C314;
    const double C25781 = C51016 * C309;
    const double C25775 = C51016 * C326;
    const double C25971 = C51016 * C518;
    const double C25965 = C51016 * C503;
    const double C25963 = C51016 * C498;
    const double C25957 = C51016 * C515;
    const double C26141 = C51016 * C325;
    const double C26135 = C51016 * C307;
    const double C26305 = C51016 * C514;
    const double C26299 = C51016 * C496;
    const double C26517 = C51016 * C948;
    const double C26511 = C51016 * C939;
    const double C44717 = C51016 * C501;
    const double C44711 = C51016 * C517;
    const double C44701 = C51016 * C516;
    const double C44695 = C51016 * C500;
    const double C45223 = C51016 * C947;
    const double C45217 = C51016 * C937;
    const double C45631 = C51016 * C1279;
    const double C45625 = C51016 * C1275;
    const double C46135 = C51016 * C1626;
    const double C46129 = C51016 * C1622;
    const double C46543 = C51016 * C1910;
    const double C46537 = C51016 * C1906;
    const double C10841 =
        (C50978 - C51003) / C49733 - (C51016 * C50844) / C49718;
    const double C2395 = C2384 + C2385;
    const double C2394 = C2382 + C2383;
    const double C25603 = C51005 * C324;
    const double C25597 = C51005 * C305;
    const double C25591 = C51005 * C307;
    const double C25585 = C51005 * C325;
    const double C25579 = C51005 * C326;
    const double C25573 = C51005 * C309;
    const double C25791 = C51005 * C1164;
    const double C25779 = C51005 * C314;
    const double C25773 = C51005 * C329;
    const double C25961 = C51005 * C939;
    const double C25955 = C51005 * C948;
    const double C26143 = C51005 * C330;
    const double C26137 = C51005 * C316;
    const double C26307 = C51005 * C949;
    const double C26301 = C51005 * C941;
    const double C44715 = C51005 * C1275;
    const double C44709 = C51005 * C1279;
    const double C44703 = C51005 * C947;
    const double C44697 = C51005 * C937;
    const double C45225 = C51005 * C1626;
    const double C45219 = C51005 * C1622;
    const double C46545 = C51005 * C4648;
    const double C46539 = C51005 * C4645;
    const double C10842 =
        (2 * C50848 + C51016) / C49733 - (C51005 * C50844) / C49718;
    const double C10843 = C51005 / C49733 - C50851 / C49754;
    const double C8064 = C8030 * C133;
    const double C8058 = C8030 * C122;
    const double C8056 = C8030 * C121;
    const double C8050 = C8030 * C131;
    const double C8040 = C8030 * C129;
    const double C8034 = C8030 * C120;
    const double C8252 = C8030 * C315;
    const double C8246 = C8030 * C299;
    const double C8244 = C8030 * C296;
    const double C8238 = C8030 * C308;
    const double C8434 = C8030 * C504;
    const double C8428 = C8030 * C488;
    const double C8426 = C8030 * C485;
    const double C8420 = C8030 * C497;
    const double C8604 = C8030 * C306;
    const double C8598 = C8030 * C295;
    const double C8768 = C8030 * C495;
    const double C8762 = C8030 * C484;
    const double C8980 = C8030 * C940;
    const double C8974 = C8030 * C933;
    const double C12977 = C8030 * C487;
    const double C12971 = C8030 * C502;
    const double C12961 = C8030 * C499;
    const double C12955 = C8030 * C486;
    const double C13483 = C8030 * C938;
    const double C13477 = C8030 * C932;
    const double C13891 = C8030 * C1274;
    const double C13885 = C8030 * C1267;
    const double C14395 = C8030 * C1621;
    const double C14389 = C8030 * C1614;
    const double C14811 = C8030 * C1905;
    const double C14805 = C8030 * C1898;
    const double C49807 = C50862 - C49804;
    const double C38235 = C173 * C51017;
    const double C38232 = C171 * C51017;
    const double C38223 = C169 * C51017;
    const double C38393 = C366 * C51017;
    const double C38390 = C363 * C51017;
    const double C38548 = C552 * C51017;
    const double C38703 = C361 * C51017;
    const double C38855 = C550 * C51017;
    const double C20888 =
        (C50980 - C51006) / C49733 - (C51017 * C50870) / C49718;
    const double C38230 = C550 * C51008;
    const double C38225 = C552 * C51008;
    const double C20889 =
        (2 * C50874 + C51017) / C49733 - (C51008 * C50870) / C49718;
    const double C20890 = C51008 / C49733 - C50877 / C49754;
    const double C15425 = C172 * C15409;
    const double C15424 = C170 * C15409;
    const double C15413 = C168 * C15409;
    const double C15582 = C364 * C15409;
    const double C15746 = C553 * C15409;
    const double C15905 = C362 * C15409;
    const double C16057 = C551 * C15409;
    const double C174 = C160 + C161;
    const double C2392 = C2374 + C2375;
    const double C359 = C335 + C336;
    const double C2386 = C2362 + C2363;
    const double C2952 = C2944 + C2945;
    const double C8086 = C8066 + C8067;
    const double C22762 = C22738 + C22739;
    const double C368 = C353 + C354;
    const double C2596 = C2578 + C2579;
    const double C2582 = C2550 + C2551;
    const double C8076 = C8046 + C8047;
    const double C8614 = C8606 + C8607;
    const double C22958 = C22926 + C22927;
    const double C548 = C524 + C525;
    const double C3115 = C3107 + C3108;
    const double C8257 = C8027 * C3589;
    const double C25793 = C25563 * C3589;
    const double C9242 =
        (4 * (2 * C50035 + ae * C50036 + C49849 * C50120) +
         ae * (3 * C50036 + C49849 * C50121) +
         C49849 *
             (3 * C50120 + ae * C50121 +
              C49849 * (2 * C50114 + ae * C50116 +
                        C49849 * (C49872 + ae * C49849 * C49909 +
                                  C49849 * (ae * C49909 + C49849 * C49881))))) /
        C49750;
    const double C50540 = C50538 + C50533;
    const double C557 = C542 + C543;
    const double C2790 = C2772 + C2773;
    const double C968 = C959 + C960;
    const double C2776 = C2744 + C2745;
    const double C3334 = C3324 + C3325;
    const double C8778 = C8770 + C8771;
    const double C23152 = C23120 + C23121;
    const double C175 = C162 + C163;
    const double C2390 = C2370 + C2371;
    const double C360 = C337 + C338;
    const double C2388 = C2366 + C2367;
    const double C2950 = C2940 + C2941;
    const double C8083 = C8060 + C8061;
    const double C22764 = C22742 + C22743;
    const double C367 = C351 + C352;
    const double C2594 = C2574 + C2575;
    const double C2584 = C2554 + C2555;
    const double C8079 = C8052 + C8053;
    const double C8611 = C8600 + C8601;
    const double C22960 = C22930 + C22931;
    const double C549 = C526 + C527;
    const double C3113 = C3103 + C3104;
    const double C556 = C540 + C541;
    const double C2788 = C2768 + C2769;
    const double C967 = C957 + C958;
    const double C2778 = C2748 + C2749;
    const double C3332 = C3320 + C3321;
    const double C8775 = C8764 + C8765;
    const double C23154 = C23124 + C23125;
    const double C2767 = C50848 * C1278;
    const double C6129 = C50832 * C1278;
    const double C8437 = C8026 * C1278;
    const double C19000 = C50978 * C1278;
    const double C23143 = C50848 * C1278;
    const double C25973 = C51005 * C1278;
    const double C29517 = C22714 * C1278;
    const double C3319 = C50848 * C1625;
    const double C5419 = C50832 * C1625;
    const double C8417 = C8027 * C1625;
    const double C8983 = C8026 * C1625;
    const double C23695 = C50848 * C1625;
    const double C25953 = C25563 * C1625;
    const double C26519 = C51005 * C1625;
    const double C28609 = C22714 * C1625;
    const double C34931 = C50978 * C1625;
    const double C2569 = C50848 * C1159;
    const double C8249 = C8026 * C1159;
    const double C8241 = C8027 * C1159;
    const double C22945 = C50848 * C1159;
    const double C25785 = C51005 * C1159;
    const double C25777 = C25563 * C1159;
    const double C2763 = C50848 * C1273;
    const double C6127 = C50832 * C1273;
    const double C8431 = C8026 * C1273;
    const double C18996 = C50978 * C1273;
    const double C23139 = C50848 * C1273;
    const double C25967 = C51005 * C1273;
    const double C29513 = C22714 * C1273;
    const double C3315 = C50848 * C1620;
    const double C5417 = C50832 * C1620;
    const double C8423 = C8027 * C1620;
    const double C8977 = C8026 * C1620;
    const double C23691 = C50848 * C1620;
    const double C25959 = C25563 * C1620;
    const double C26513 = C51005 * C1620;
    const double C28605 = C22714 * C1620;
    const double C34927 = C50978 * C1620;
    const double C15754 = C50832 * C7433;
    const double C50063 = C50062 + C50060;
    const double C17563 = C17559 + C17560;
    const double C20333 = C20325 + C20326;
    const double C17557 =
        (4 * (2 * C50090 + ae * C50091 + C49848 * C50255) +
         ae * (3 * C50091 + C49848 * C50256) +
         C49848 *
             (3 * C50255 + ae * C50256 +
              C49848 * (2 * C50249 + ae * C50251 +
                        C49848 * (C49872 + ae * C49848 * C49948 +
                                  C49848 * (ae * C49948 + C49848 * C49881))))) /
        C49750;
    const double C16659 =
        (3 * (C50024 + C49848 * C50511 + C50509 * ae) +
         C49848 *
             (2 * C50511 +
              C49848 * (C50093 + C49848 * (C49848 * C49849 * C50096 + C50131) +
                        C49848 * C50128 * ae) +
              C50512 * ae) +
         (2 * C50509 + C49848 * C50512) * ae) /
        C49718;
    const double C16263 = C117 * C4642;
    const double C18471 = C2344 * C4642;
    const double C28840 = C22720 * C4642;
    const double C50053 = C49945 + C50052;
    const double C16264 = C50832 * C4647;
    const double C18472 = C50848 * C4647;
    const double C28841 = C50848 * C4647;
    const double C16262 = C50832 * C4643;
    const double C18468 = C50848 * C4643;
    const double C28837 = C50848 * C4643;
    const double C50524 = C49906 + C50522;
    const double C8438 = C8032 * C3742;
    const double C15589 = C117 * C3742;
    const double C19001 = C2344 * C3742;
    const double C25974 = C25568 * C3742;
    const double C29518 = C22720 * C3742;
    const double C8984 = C8032 * C4240;
    const double C26520 = C25568 * C4240;
    const double C28610 = C22720 * C4240;
    const double C34932 = C2344 * C4240;
    const double C8250 = C8032 * C3580;
    const double C25786 = C25568 * C3580;
    const double C8432 = C8032 * C3738;
    const double C15587 = C117 * C3738;
    const double C18997 = C2344 * C3738;
    const double C25968 = C25568 * C3738;
    const double C29514 = C22720 * C3738;
    const double C8978 = C8032 * C4236;
    const double C26514 = C25568 * C4236;
    const double C28606 = C22720 * C4236;
    const double C34928 = C2344 * C4236;
    const double C15753 = C117 * C7428;
    const double C15751 = C117 * C7424;
    const double C1277 =
        (ae * C49904 + C49849 * C49874 + ae * C49848 * C49996 +
         C49848 * (ae * C49996 + C49848 * (ae * C49911 + C49849 * C49883))) /
        C49750;
    const double C1624 =
        (ae * (C49943 + C49849 * C49996 + C49849 * C49994 * ae) +
         C49848 * (C49874 + ae * C49849 * C49911 +
                   C49849 * (ae * C49911 + C49849 * C49883))) /
        C49750;
    const double C1157 =
        (2 * (C49849 * C49943 + C50325 * ae) +
         C49849 * (C49943 + C49849 * C49996 + C49849 * C49994 * ae) +
         (C50325 + C49994 * C50019) * ae) /
        C49718;
    const double C1271 =
        (C49849 * C49943 + C50325 * ae + C49996 * C50074) / C49718;
    const double C1618 =
        (C49848 * (C49943 + C49849 * C49996 + C50385 * ae)) / C49718;
    const double C7426 =
        (3 * (C49904 + C49848 * C50443 + C50441 * ae) +
         C49848 * (2 * C50443 +
                   C49848 * (C49911 + C49848 * (C49848 * C49922 + C50039) +
                             C49848 * C49986 * ae) +
                   C50444 * ae) +
         (2 * C50441 + C49848 * C50444) * ae) /
        C49718;
    const double C5606 = C117 * C1901;
    const double C318 =
        (2 * C49938 + C49856 * C49943 +
         C49849 * (C49849 * C49952 + C50330 * ae) + C49849 * C50330 * ae) /
        C49718;
    const double C320 = (C49849 * (3 * C49943 + C49856 * C49952) +
                         (3 * C50325 + C49856 * C50330) * ae) /
                        C49718;
    const double C508 =
        (2 * C49899 + C49856 * C49904 +
         C49848 * (C49848 * C49913 + C50330 * ae) + C49848 * C50330 * ae) /
        C49718;
    const double C510 = (C49848 * (3 * C49904 + C49856 * C49913) +
                         (3 * C50325 + C49856 * C50330) * ae) /
                        C49718;
    const double C943 = (C49848 * (C49849 * C49952 + C50330 * ae)) / C49718;
    const double C944 =
        (C49848 * C49849 * C49913 + C49849 * C50330 * ae) / C49718;
    const double C124 = 4 * (2 * C50321 + C49856 * C50325) +
                        C49856 * (3 * C50325 + C49856 * C50330);
    const double C301 = 2 * C50321 + C49856 * C50325 + C50330 * C50019;
    const double C302 = C49849 * (3 * C50325 + C49856 * C50330);
    const double C490 = 2 * C50321 + C49856 * C50325 + C50330 * C50074;
    const double C491 = C49848 * (3 * C50325 + C49856 * C50330);
    const double C935 = C49848 * C49849 * C50330;
    const double C1150 =
        2 * C49849 * C50330 + C49849 * (C50330 + C49988 * C50019);
    const double C1611 = C49848 * (C50330 + C49988 * C50019);
    const double C1895 =
        2 * C49848 * C50330 + C49848 * (C50330 + C49988 * C50074);
    const double C2774 = C2344 * C1270;
    const double C6134 = C117 * C1270;
    const double C23150 = C22720 * C1270;
    const double C2770 = C2344 * C1265;
    const double C6132 = C117 * C1265;
    const double C23146 = C22720 * C1265;
    const double C5614 = C5604 + C5605;
    const double C14798 =
        (3 * (C50036 + C49848 * C50497 + C50495 * ae) +
         C49848 * (2 * C50497 +
                   C49848 * (C50116 + C49848 * (C49848 * C50172 + C50194) +
                             C49848 * C50192 * ae) +
                   C50498 * ae) +
         (2 * C50495 + C49848 * C50498) * ae) /
        C49718;
    const double C14815 = C8032 * C10285;
    const double C19411 = C2344 * C10285;
    const double C22015 = C117 * C10285;
    const double C46546 = C25568 * C10285;
    const double C48314 = C22720 * C10285;
    const double C9393 =
        (2 * C50031 + C49849 * C50036 +
         C49848 * (C49848 * C50121 + C50469 * ae) + C49848 * C50469 * ae) /
        C49718;
    const double C9887 = (C49848 * (3 * C50036 + C49849 * C50121) +
                          (3 * C50420 + C49849 * C50469) * ae) /
                         C49718;
    const double C9236 = 4 * (2 * C50391 + C49849 * C50420) +
                         C49849 * (3 * C50420 + C49849 * C50469);
    const double C9390 = 2 * C50391 + C49849 * C50420 + C50469 * C50074;
    const double C9884 = C49848 * (3 * C50420 + C49849 * C50469);
    const double C12234 =
        2 * C49848 * C50469 + C49848 * (C50469 + C50197 * C50074);
    const double C50552 = C50109 + C50550;
    const double C20331 = C2344 * C14799;
    const double C21683 = C117 * C14799;
    const double C49218 = C22720 * C14799;
    const double C20327 = C2344 * C14797;
    const double C21681 = C117 * C14797;
    const double C49214 = C22720 * C14797;
    const double C50152 = C50151 + C50147;
    const double C14803 =
        (3 * (C50035 + ae * C50216 + C49848 * C50220) +
         ae * (2 * C50216 + C49848 * C50221) +
         C49848 * (2 * C50220 + ae * C50221 +
                   C49848 * (C50114 + ae * C49848 * C50146 +
                             C49848 * (ae * C50146 + C49848 * C50170)))) /
        C49750;
    const double C14801 = (3 * (C50006 + C50059 * C50074) +
                           C49848 * (2 * C50216 + C49848 * C50221)) /
                          C49718;
    const double C50266 = C50114 + C50262;
    const double C50571 = C50569 + C50564;
    const double C17551 = 4 * (2 * C50455 + C49848 * C50458) +
                          C49848 * (3 * C50458 + C49848 * C50539);
    const double C146 =
        (5 * (3 * C49874 + C49856 * C49885) +
         C49856 * (4 * C49885 +
                   C49856 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C331 =
        (2 * C49856 * C49867 + C49856 * C49874 + ae * C49849 * C49913 +
         C49849 * (ae * C49913 + C49849 * C49885)) /
        C49750;
    const double C332 = (ae * (3 * C49904 + C49856 * C49913) +
                         C49849 * (3 * C49874 + C49856 * C49885)) /
                        C49750;
    const double C520 =
        (2 * C49856 * C49867 + C49856 * C49874 + ae * C49848 * C49952 +
         C49848 * (ae * C49952 + C49848 * C49885)) /
        C49750;
    const double C521 = (ae * (3 * C49943 + C49856 * C49952) +
                         C49848 * (3 * C49874 + C49856 * C49885)) /
                        C49750;
    const double C950 = (ae * (C49849 * C49952 +
                               (2 * C49856 * C49972 +
                                C49856 * (C49972 + C49863 * C49865 * C49864)) *
                                   ae) +
                         C49848 * (ae * C49913 + C49849 * C49885)) /
                        C49750;
    const double C2597 = C2580 + C2581;
    const double C8615 = C8608 + C8609;
    const double C22973 = C22956 + C22957;
    const double C50106 = C50101 + C50104;
    const double C50227 = C50224 + C50225;
    const double C50241 = C50238 + C50239;
    const double C50178 = C49849 * C50176;
    const double C50211 = C49848 * C50176;
    const double C50267 = C49848 * C50263;
    const double C50289 = C49848 * C50287;
    const double C49925 = C49856 * C49924;
    const double C1162 =
        (2 * (ae * C49913 + C49849 * C49885) +
         ae * (C49913 + C49924 * std::pow(C49849, 2)) +
         C49849 * (C49885 + ae * C49849 * C49924 +
                   C49849 * (ae * C49924 +
                             C49849 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1154 =
        (2 * C49849 * C49913 + C49849 * (C49913 + C49924 * C50019)) / C49718;
    const double C1615 = (C49848 * (C49913 + C49924 * C50019) +
                          (C50330 + C49988 * C50019) * ae) /
                         C49718;
    const double C3588 =
        (3 * (C49874 + ae * C50016 + C49849 * C50020) +
         ae * (2 * C50016 + C49849 * C50022) +
         C49849 * (2 * C50020 + ae * C50022 +
                   C49849 * (C49883 + ae * C49849 * C49922 +
                             C49849 * (ae * C49922 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C3582 = (3 * (C49904 + C49911 * C50019) +
                          C49849 * (2 * C50016 + C49849 * C50022)) /
                         C49718;
    const double C3740 =
        (C49904 + C49911 * C50019 + C49848 * (C49848 * C50022 + C50412 * ae) +
         C49848 * C50412 * ae) /
        C49718;
    const double C4238 = (C49848 * (2 * C50016 + C49849 * C50022) +
                          (2 * C50385 + C49849 * C50412) * ae) /
                         C49718;
    const double C50107 = C50099 + C50105;
    const double C50179 = C49849 * C50177;
    const double C49964 = C49856 * C49963;
    const double C49981 = C49849 * C49963;
    const double C1907 =
        (2 * (ae * C49952 + C49848 * C49885) +
         ae * (C49952 + C49963 * std::pow(C49848, 2)) +
         C49848 * (C49885 + ae * C49848 * C49963 +
                   C49848 * (ae * C49963 +
                             C49848 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1900 =
        (2 * C49848 * C49952 + C49848 * (C49952 + C49963 * C50074)) / C49718;
    const double C50043 = C49849 * C50041;
    const double C4646 =
        (2 * (ae * C49996 + C49848 * C50020) +
         ae * (C49996 + C50041 * std::pow(C49848, 2)) +
         C49848 * (C50020 + ae * C49848 * C50041 +
                   C49848 * (ae * C50041 +
                             C49848 * (ae * C49922 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C4641 =
        (2 * C49848 * C49996 + C49848 * (C49996 + C50041 * C50074)) / C49718;
    const double C7432 =
        (3 * (C49874 + ae * C50071 + C49848 * C50075) +
         ae * (2 * C50071 + C49848 * C50077) +
         C49848 * (2 * C50075 + ae * C50077 +
                   C49848 * (C49883 + ae * C49848 * C49961 +
                             C49848 * (ae * C49961 +
                                       C49848 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C7427 = (3 * (C49943 + C49950 * C50074) +
                          C49848 * (2 * C50071 + C49848 * C50077)) /
                         C49718;
    const double C50135 = C49956 + C50133;
    const double C50228 = C50050 + C50226;
    const double C50242 = C50236 + C50240;
    const double C50198 = C50196 + C50191;
    const double C50268 = C49848 * C50265;
    const double C50290 = C49848 * C50288;
    const double C188 = C180 + C181;
    const double C5254 = C5242 + C5243;
    const double C6541 = C6538 + C6539;
    const double C12986 = C12969 + C12970;
    const double C18482 = C18455 + C18456;
    const double C19009 = C18991 + C18992;
    const double C28846 = C28824 + C28825;
    const double C7033 = C7030 + C7031;
    const double C12984 = C12965 + C12966;
    const double C13493 = C13485 + C13486;
    const double C19006 = C18985 + C18986;
    const double C19923 = C19909 + C19910;
    const double C29525 = C29508 + C29509;
    const double C14821 = C14813 + C14814;
    const double C16668 = C16665 + C16666;
    const double C18483 = C18457 + C18458;
    const double C19417 = C19409 + C19410;
    const double C31247 = C31242 + C31243;
    const double C6540 = C6536 + C6537;
    const double C12989 = C12975 + C12976;
    const double C18480 = C18451 + C18452;
    const double C19007 = C18987 + C18988;
    const double C28848 = C28828 + C28829;
    const double C7032 = C7028 + C7029;
    const double C12981 = C12959 + C12960;
    const double C13490 = C13479 + C13480;
    const double C19004 = C18981 + C18982;
    const double C19921 = C19905 + C19906;
    const double C29523 = C29504 + C29505;
    const double C14818 = C14807 + C14808;
    const double C16667 = C16663 + C16664;
    const double C18485 = C18461 + C18462;
    const double C19415 = C19405 + C19406;
    const double C31245 = C31238 + C31239;
    const double C17564 = C17561 + C17562;
    const double C20335 = C20329 + C20330;
    const double C567 = C555 * C50862;
    const double C5597 = C555 * C50980;
    const double C5588 = C555 * C50874;
    const double C15418 = C555 * C15408;
    const double C15748 = C555 * C15406;
    const double C15743 = C555 * C15407;
    const double C32335 = C555 * C31991;
    const double C32330 = C555 * C50874;
    const double C38227 = C555 * C38217;
    const double C38551 = C555 * C51017;
    const double C38546 = C555 * C51008;
    const double C972 = C966 * C50862;
    const double C5410 = C966 * C50874;
    const double C6125 = C966 * C50980;
    const double C15579 = C966 * C15407;
    const double C16258 = C966 * C15406;
    const double C32168 = C966 * C50874;
    const double C32843 = C966 * C31991;
    const double C38388 = C966 * C51008;
    const double C39055 = C966 * C51017;
    const double C35134 = C2780 + C2781;
    const double C35133 = C2781 + C2780;
    const double C5617 = C5613 * C50874;
    const double C15750 = C5613 * C15407;
    const double C15741 = C5613 * C15408;
    const double C32337 = C5613 * C50874;
    const double C38553 = C5613 * C51008;
    const double C38544 = C5613 * C38217;
    const double C377 = C365 * C118;
    const double C5414 = C365 * C5235;
    const double C15583 = C365 * C15409;
    const double C566 = C554 * C118;
    const double C5596 = C554 * C5235;
    const double C5589 = C554 * C5236;
    const double C15417 = C554 * C15411;
    const double C15747 = C554 * C15409;
    const double C15744 = C554 * C15410;
    const double C32331 = C554 * C31994;
    const double C38226 = C554 * C38220;
    const double C971 = C965 * C118;
    const double C5411 = C965 * C5236;
    const double C6124 = C965 * C5235;
    const double C15580 = C965 * C15410;
    const double C16257 = C965 * C15409;
    const double C32169 = C965 * C31994;
    const double C35135 = C2782 + C2783;
    const double C35132 = C2783 + C2782;
    const double C5616 = C5612 * C5236;
    const double C15749 = C5612 * C15410;
    const double C15742 = C5612 * C15411;
    const double C32336 = C5612 * C31994;
    const double C38545 = C5612 * C38220;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C5255 = C5248 + C5249;
    const double C680 = C373 + C374;
    const double C5766 = C5408 + C5409;
    const double C794 = C562 + C563;
    const double C5919 = C5586 + C5587;
    const double C166 = C117 * C137;
    const double C357 = C117 * C319;
    const double C2946 = C2344 * C319;
    const double C8068 = C8032 * C319;
    const double C23322 = C22720 * C319;
    const double C25604 = C25568 * C319;
    const double C683 = C117 * C321;
    const double C2376 = C2344 * C321;
    const double C22752 = C22720 * C321;
    const double C165 = C50832 * C136;
    const double C545 = C50832 * C507;
    const double C796 = C50832 * C509;
    const double C22286 = C50832 * C17555;
    const double C1899 =
        (2 * (C49848 * C49913 + C50330 * ae) +
         C49848 * (C49913 + C49848 * (C49848 * C49924 + C49989) +
                   C49848 * C49988 * ae) +
         (C50330 + C49988 * C50074) * ae) /
        C49718;
    const double C50338 = C50336 + C50337;
    const double C1268 =
        (C49849 * C49913 + C49848 * (C49848 * C49849 * C49924 + C50382 * ae) +
         C49848 * C50382 * ae) /
        C49718;
    const double C1264 = C49849 * C50330 + C50382 * C50074;
    const double C9235 = 4 * (2 * C50388 + C49849 * C50416) +
                         C49849 * (3 * C50416 + C49849 * C50464);
    const double C9389 = 2 * C50388 + C49849 * C50416 + C50464 * C50074;
    const double C9883 = C49848 * (3 * C50416 + C49849 * C50464);
    const double C17550 = 4 * (2 * C50448 + C49848 * C50451) +
                          C49848 * (3 * C50451 + C49848 * C50525);
    const double C12235 =
        (2 * (C49848 * C50121 + C50469 * ae) +
         C49848 * (C50121 + C49848 * (C49848 * C50177 + C50199) +
                   C49848 * C50197 * ae) +
         (C50469 + C50197 * C50074) * ae) /
        C49718;
    const double C50486 = C50484 + C50485;
    const double C20318 = 4 * (2 * C50501 + C49848 * C50504) +
                          C49848 * (3 * C50504 + C49848 * C50553);
    const double C50574 = C50562 + C50572;
    const double C107 = (C50951 - C50991) / C49733 - (C51009 * C50671) / C49718;
    const double C108 =
        (2 * C50680 + C51009) / C49733 - (C50993 * C50671) / C49718;
    const double C109 = C50993 / C49733 - C50683 / C49754;
    const double C113 = (C51010 * C50697) / C50694 + (C50960 - C50995) / C50696;
    const double C114 =
        (C51011 * C50697) / C50694 + (2 * C50708 + C51010) / C50696;
    const double C115 = (C50697 * C50708) / C50711 + C51011 / C50696;
    const double C1145 =
        (C51012 * C50768) / C50694 + (C50968 - C50997) / C50696;
    const double C1146 =
        (C51013 * C50768) / C50694 + (2 * C50773 + C51012) / C50696;
    const double C1147 = (C50768 * C50773) / C50711 + C51013 / C50696;
    const double C1891 =
        (C51014 * C50796) / C50694 + (C50969 - C51000) / C50696;
    const double C1892 =
        (C51015 * C50796) / C50694 + (2 * C50801 + C51014) / C50696;
    const double C1893 = (C50796 * C50801) / C50711 + C51015 / C50696;
    const double C49765 = C49761 * ae;
    const double C22719 = (-C49734 / C49718) / C49733 - (C49761 * be) / C49718;
    const double C25615 = C25588 + C25589;
    const double C25612 = C25582 + C25583;
    const double C25611 = C25580 + C25581;
    const double C25608 = C25574 + C25575;
    const double C25794 = C25770 + C25771;
    const double C26151 = C26144 + C26145;
    const double C44723 = C44704 + C44705;
    const double C44720 = C44698 + C44699;
    const double C2399 = C2395 * C50862;
    const double C2398 = C2394 * C118;
    const double C8085 = C8064 + C8065;
    const double C8082 = C8058 + C8059;
    const double C8081 = C8056 + C8057;
    const double C8078 = C8050 + C8051;
    const double C8073 = C8040 + C8041;
    const double C8070 = C8034 + C8035;
    const double C8267 = C8252 + C8253;
    const double C8264 = C8246 + C8247;
    const double C8263 = C8244 + C8245;
    const double C8260 = C8238 + C8239;
    const double C8449 = C8434 + C8435;
    const double C8446 = C8428 + C8429;
    const double C8445 = C8426 + C8427;
    const double C8442 = C8420 + C8421;
    const double C8613 = C8604 + C8605;
    const double C8610 = C8598 + C8599;
    const double C8777 = C8768 + C8769;
    const double C8774 = C8762 + C8763;
    const double C8989 = C8980 + C8981;
    const double C8986 = C8974 + C8975;
    const double C12990 = C12977 + C12978;
    const double C12987 = C12971 + C12972;
    const double C12982 = C12961 + C12962;
    const double C12979 = C12955 + C12956;
    const double C13492 = C13483 + C13484;
    const double C13489 = C13477 + C13478;
    const double C13900 = C13891 + C13892;
    const double C13897 = C13885 + C13886;
    const double C14404 = C14395 + C14396;
    const double C14401 = C14389 + C14390;
    const double C14820 = C14811 + C14812;
    const double C14817 = C14805 + C14806;
    const double C49810 = C49807 * ae;
    const double C31993 = (-C49782 / C49718) / C49733 - (C49807 * be) / C49718;
    const double C184 = C174 * C50862;
    const double C5251 = C174 * C50980;
    const double C32009 = C174 * C31991;
    const double C371 = C359 * C50862;
    const double C5768 = C359 * C50980;
    const double C32490 = C359 * C31991;
    const double C2396 = C2386 + C2387;
    const double C380 = C368 * C50862;
    const double C5421 = C368 * C50980;
    const double C32177 = C368 * C31991;
    const double C2938 = C2582 + C2583;
    const double C560 = C548 * C50862;
    const double C5246 = C548 * C50874;
    const double C5921 = C548 * C50980;
    const double C15428 = C548 * C15407;
    const double C32004 = C548 * C50874;
    const double C32643 = C548 * C31991;
    const double C38237 = C548 * C51008;
    const double C8269 = C8256 + C8257;
    const double C25805 = C25792 + C25793;
    const double C17554 =
        (4 * (2 * C50457 + C49848 * C50540 + C50458 * ae) +
         C49848 *
             (3 * C50540 +
              C49848 * (2 * C50532 +
                        C49848 * (C49902 + C49848 * (C49848 * C49909 + C50143) +
                                  C49848 * C49974 * ae) +
                        C50534 * ae) +
              C50539 * ae) +
         (3 * C50458 + C49848 * C50539) * ae) /
        C49718;
    const double C569 = C557 * C50862;
    const double C5603 = C557 * C50980;
    const double C5584 = C557 * C50874;
    const double C15419 = C557 * C15408;
    const double C16060 = C557 * C15407;
    const double C32339 = C557 * C31991;
    const double C32326 = C557 * C50874;
    const double C38228 = C557 * C38217;
    const double C38857 = C557 * C51008;
    const double C974 = C968 * C50862;
    const double C5406 = C968 * C50874;
    const double C6131 = C968 * C50980;
    const double C15908 = C968 * C15407;
    const double C32164 = C968 * C50874;
    const double C32847 = C968 * C31991;
    const double C38705 = C968 * C51008;
    const double C3101 = C2776 + C2777;
    const double C35527 = C2777 + C2776;
    const double C185 = C175 * C118;
    const double C5250 = C175 * C5235;
    const double C372 = C360 * C118;
    const double C5767 = C360 * C5235;
    const double C2397 = C2388 + C2389;
    const double C379 = C367 * C118;
    const double C5420 = C367 * C5235;
    const double C2939 = C2584 + C2585;
    const double C561 = C549 * C118;
    const double C5247 = C549 * C5236;
    const double C5920 = C549 * C5235;
    const double C15427 = C549 * C15410;
    const double C32005 = C549 * C31994;
    const double C568 = C556 * C118;
    const double C5602 = C556 * C5235;
    const double C5585 = C556 * C5236;
    const double C15420 = C556 * C15411;
    const double C16059 = C556 * C15410;
    const double C32327 = C556 * C31994;
    const double C38229 = C556 * C38220;
    const double C973 = C967 * C118;
    const double C5407 = C967 * C5236;
    const double C6130 = C967 * C5235;
    const double C15907 = C967 * C15410;
    const double C32165 = C967 * C31994;
    const double C3102 = C2778 + C2779;
    const double C35526 = C2779 + C2778;
    const double C2787 = C2766 + C2767;
    const double C6139 = C6128 + C6129;
    const double C8450 = C8436 + C8437;
    const double C19013 = C18999 + C19000;
    const double C23163 = C23142 + C23143;
    const double C3331 = C3318 + C3319;
    const double C5427 = C5418 + C5419;
    const double C8440 = C8416 + C8417;
    const double C8990 = C8982 + C8983;
    const double C23707 = C23694 + C23695;
    const double C25976 = C25952 + C25953;
    const double C34936 = C34930 + C34931;
    const double C2591 = C2568 + C2569;
    const double C8265 = C8248 + C8249;
    const double C8261 = C8240 + C8241;
    const double C22967 = C22944 + C22945;
    const double C25797 = C25776 + C25777;
    const double C2785 = C2762 + C2763;
    const double C6138 = C6126 + C6127;
    const double C8447 = C8430 + C8431;
    const double C19011 = C18995 + C18996;
    const double C23161 = C23138 + C23139;
    const double C3329 = C3314 + C3315;
    const double C5426 = C5416 + C5417;
    const double C8443 = C8422 + C8423;
    const double C8987 = C8976 + C8977;
    const double C23705 = C23690 + C23691;
    const double C25979 = C25958 + C25959;
    const double C34934 = C34926 + C34927;
    const double C3748 =
        (C49860 + ae * C50031 + C49849 * C50035 + ae * C49848 * C50063 +
         C49848 * (ae * C50063 +
                   C49848 * (C49867 + ae * C49849 * C49902 +
                             C49849 * (ae * C49902 + C49849 * C49872)))) /
        C49750;
    const double C4246 =
        (ae * (2 * C50006 + C49849 * C50063 + (C50004 + C49972 * C50019) * ae) +
         C49848 * (2 * C50035 + ae * C50036 +
                   C49849 * (C49867 + ae * C49849 * C49902 +
                             C49849 * (ae * C49902 + C49849 * C49872)))) /
        C49750;
    const double C3587 =
        (3 * (C49936 + C49849 * C50006 + C50391 * ae) +
         C49849 * (2 * C50006 + C49849 * C50063 + C50420 * ae) +
         (2 * C50391 + C49849 * C50420) * ae) /
        C49718;
    const double C3745 =
        (C49936 + C49849 * C50006 + C50391 * ae + C50063 * C50074) / C49718;
    const double C4243 =
        (C49848 * (2 * C50006 + C49849 * C50063 + C50420 * ae)) / C49718;
    const double C22288 = C50832 * C17557;
    const double C50054 = C50053 + C50051;
    const double C16266 = C16263 + C16264;
    const double C18490 = C18471 + C18472;
    const double C28853 = C28840 + C28841;
    const double C16265 = C16261 + C16262;
    const double C18488 = C18467 + C18468;
    const double C28851 = C28836 + C28837;
    const double C50526 = C50524 + C50519;
    const double C15756 = C15753 + C15754;
    const double C15755 = C15751 + C15752;
    const double C2775 = C50848 * C1277;
    const double C6135 = C50832 * C1277;
    const double C23151 = C50848 * C1277;
    const double C3327 = C50848 * C1624;
    const double C5425 = C50832 * C1624;
    const double C8773 = C8027 * C1624;
    const double C23703 = C50848 * C1624;
    const double C26309 = C25563 * C1624;
    const double C2577 = C50848 * C1157;
    const double C8603 = C8027 * C1157;
    const double C22953 = C50848 * C1157;
    const double C26139 = C25563 * C1157;
    const double C2771 = C50848 * C1271;
    const double C6133 = C50832 * C1271;
    const double C23147 = C50848 * C1271;
    const double C3323 = C50848 * C1618;
    const double C5423 = C50832 * C1618;
    const double C8767 = C8027 * C1618;
    const double C23699 = C50848 * C1618;
    const double C26303 = C25563 * C1618;
    const double C5615 = C5606 + C5607;
    const double C356 = C50832 * C318;
    const double C2943 = C50848 * C318;
    const double C8063 = C8027 * C318;
    const double C23319 = C50848 * C318;
    const double C25599 = C25563 * C318;
    const double C682 = C50832 * C320;
    const double C2373 = C50848 * C320;
    const double C22749 = C50848 * C320;
    const double C546 = C117 * C508;
    const double C797 = C117 * C510;
    const double C962 = C50832 * C943;
    const double C3106 = C50848 * C943;
    const double C23482 = C50848 * C943;
    const double C963 = C117 * C944;
    const double C3109 = C2344 * C944;
    const double C23485 = C22720 * C944;
    const double C164 = C117 * C124;
    const double C355 = C117 * C301;
    const double C2942 = C2344 * C301;
    const double C8062 = C8032 * C301;
    const double C23318 = C22720 * C301;
    const double C25598 = C25568 * C301;
    const double C681 = C117 * C302;
    const double C2372 = C2344 * C302;
    const double C22748 = C22720 * C302;
    const double C544 = C117 * C490;
    const double C795 = C117 * C491;
    const double C961 = C117 * C935;
    const double C3105 = C2344 * C935;
    const double C23481 = C22720 * C935;
    const double C5618 = C5614 * C5236;
    const double C16061 = C5614 * C15411;
    const double C32340 = C5614 * C31994;
    const double C38858 = C5614 * C38220;
    const double C13895 = C8032 * C9393;
    const double C19919 = C2344 * C9393;
    const double C45634 = C25568 * C9393;
    const double C48814 = C22720 * C9393;
    const double C14399 = C8032 * C9887;
    const double C46138 = C25568 * C9887;
    const double C13889 = C8032 * C9390;
    const double C19915 = C2344 * C9390;
    const double C45628 = C25568 * C9390;
    const double C48810 = C22720 * C9390;
    const double C14393 = C8032 * C9884;
    const double C46132 = C25568 * C9884;
    const double C50554 = C50552 + C50547;
    const double C50153 = C49849 * C50152;
    const double C50183 = 3 * C50152;
    const double C50210 = ae * C50152;
    const double C50209 = C49848 * C50152;
    const double C10288 =
        (2 * (ae * C50063 + C49848 * C50120) + ae * (C50063 + C50152 * C50074) +
         C49848 *
             (C50120 + ae * C49848 * C50152 +
              C49848 * (ae * C50152 +
                        C49848 * (C49872 + ae * C49849 * C49909 +
                                  C49849 * (ae * C49909 + C49849 * C49881))))) /
        C49750;
    const double C10286 =
        (2 * C49848 * C50063 + C49848 * (C50063 + C50152 * C50074)) / C49718;
    const double C20332 = C50848 * C14803;
    const double C21684 = C50832 * C14803;
    const double C49219 = C50848 * C14803;
    const double C20328 = C50848 * C14801;
    const double C21682 = C50832 * C14801;
    const double C49215 = C50848 * C14801;
    const double C50573 = C49848 * C50571;
    const double C22285 = C117 * C17551;
    const double C358 = C50832 * C331;
    const double C2947 = C50848 * C331;
    const double C8069 = C8027 * C331;
    const double C23323 = C50848 * C331;
    const double C25605 = C25563 * C331;
    const double C684 = C50832 * C332;
    const double C2377 = C50848 * C332;
    const double C22753 = C50848 * C332;
    const double C547 = C50832 * C520;
    const double C798 = C50832 * C521;
    const double C964 = C50832 * C950;
    const double C3110 = C50848 * C950;
    const double C23486 = C50848 * C950;
    const double C50180 = C50168 + C50178;
    const double C50269 = C50266 + C50267;
    const double C50291 = C50279 + C50289;
    const double C49926 = C49916 + C49925;
    const double C9241 =
        (4 * (2 * C50028 + ae * C50029 + C49849 * C50106) +
         ae * (3 * C50029 + C49849 * C50107) +
         C49849 * (3 * C50106 + ae * C50107 +
                   C49849 * (2 * C50102 + ae * C50103 +
                             C49849 * (C50095 + ae * C49849 * C50096 +
                                       C49849 * (ae * C50096 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C9237 = (4 * (2 * C50024 + C49849 * C50029) +
                          C49849 * (3 * C50029 + C49849 * C50107)) /
                         C49718;
    const double C9391 =
        (2 * C50024 + C49849 * C50029 +
         C49848 * (C49848 * C50107 + C50464 * ae) + C49848 * C50464 * ae) /
        C49718;
    const double C9885 = (C49848 * (3 * C50029 + C49849 * C50107) +
                          (3 * C50416 + C49849 * C50464) * ae) /
                         C49718;
    const double C50181 = C50166 + C50179;
    const double C49965 = C49955 + C49964;
    const double C49990 = C49981 + C49989;
    const double C50044 = C49950 + C50043;
    const double C50136 = C50135 + C50131;
    const double C16661 =
        (3 * (C50028 + ae * C50223 + C49848 * C50227) +
         ae * (2 * C50223 + C49848 * C50228) +
         C49848 * (2 * C50227 + ae * C50228 +
                   C49848 * (C50102 + ae * C49848 * C50130 +
                             C49848 * (ae * C50130 +
                                       C49848 * (ae * C50096 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C16660 = (3 * (C50001 + C50050 * C50074) +
                           C49848 * (2 * C50223 + C49848 * C50228)) /
                          C49718;
    const double C17556 =
        (4 * (2 * C50083 + ae * C50084 + C49848 * C50241) +
         ae * (3 * C50084 + C49848 * C50242) +
         C49848 * (3 * C50241 + ae * C50242 +
                   C49848 * (2 * C50235 + ae * C50237 +
                             C49848 * (C50095 + ae * C49848 * C50124 +
                                       C49848 * (ae * C50124 +
                                                 C49848 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C17553 = (4 * (2 * C50079 + C49848 * C50084) +
                           C49848 * (3 * C50084 + C49848 * C50242)) /
                          C49718;
    const double C50200 = C49849 * C50198;
    const double C50212 = C50198 * C50074;
    const double C50270 = C50264 + C50268;
    const double C50292 = C50277 + C50290;
    const double C5256 = C5254 + C5244;
    const double C18492 = C18481 + C18482;
    const double C20323 = C18483 + C18484;
    const double C18491 = C18479 + C18480;
    const double C20324 = C18485 + C18486;
    const double C177 = C166 + C167;
    const double C125 = 5 * (3 * C50325 + C49856 * C50330) +
                        C49856 * (4 * C50330 + C49856 * C50338);
    const double C303 = 3 * C50325 + C49856 * C50330 + C50338 * C50019;
    const double C492 = 3 * C50325 + C49856 * C50330 + C50338 * C50074;
    const double C674 = C49849 * (4 * C50330 + C49856 * C50338);
    const double C788 = C49848 * (4 * C50330 + C49856 * C50338);
    const double C936 = C49848 * C49849 * C50338;
    const double C11536 = 5 * (3 * C50420 + C49849 * C50469) +
                          C49849 * (4 * C50469 + C49849 * C50486);
    const double C11638 = 3 * C50420 + C49849 * C50469 + C50486 * C50074;
    const double C11968 = C49848 * (4 * C50469 + C49849 * C50486);
    const double C22280 = 5 * (3 * C50458 + C49848 * C50539) +
                          C49848 * (4 * C50539 + C49848 * C50574);
    const double C49767 = C49765 / C49718;
    const double C22750 = C22719 * C134;
    const double C22746 = C22719 * C123;
    const double C22744 = C22719 * C122;
    const double C22740 = C22719 * C133;
    const double C22734 = C22719 * C131;
    const double C22730 = C22719 * C121;
    const double C22726 = C22719 * C129;
    const double C22722 = C22719 * C120;
    const double C22954 = C22719 * C317;
    const double C22950 = C22719 * C300;
    const double C22946 = C22719 * C315;
    const double C22942 = C22719 * C299;
    const double C22940 = C22719 * C296;
    const double C22936 = C22719 * C308;
    const double C22932 = C22719 * C295;
    const double C22928 = C22719 * C306;
    const double C23148 = C22719 * C506;
    const double C23144 = C22719 * C489;
    const double C23140 = C22719 * C504;
    const double C23136 = C22719 * C488;
    const double C23134 = C22719 * C485;
    const double C23130 = C22719 * C497;
    const double C23126 = C22719 * C484;
    const double C23122 = C22719 * C495;
    const double C23320 = C22719 * C304;
    const double C23316 = C22719 * C294;
    const double C23483 = C22719 * C493;
    const double C23479 = C22719 * C483;
    const double C23700 = C22719 * C942;
    const double C23696 = C22719 * C934;
    const double C23692 = C22719 * C940;
    const double C23688 = C22719 * C933;
    const double C28608 = C22719 * C1619;
    const double C28604 = C22719 * C1613;
    const double C28838 = C22719 * C1903;
    const double C28834 = C22719 * C1897;
    const double C28830 = C22719 * C487;
    const double C28826 = C22719 * C502;
    const double C28814 = C22719 * C499;
    const double C28810 = C22719 * C486;
    const double C29516 = C22719 * C1272;
    const double C29512 = C22719 * C1266;
    const double C29506 = C22719 * C938;
    const double C29502 = C22719 * C932;
    const double C30052 = C22719 * C1274;
    const double C30048 = C22719 * C1267;
    const double C30710 = C22719 * C1621;
    const double C30706 = C22719 * C1614;
    const double C31240 = C22719 * C1905;
    const double C31236 = C22719 * C1898;
    const double C48312 = C22719 * C4644;
    const double C48308 = C22719 * C4639;
    const double C48812 = C22719 * C3744;
    const double C48808 = C22719 * C3739;
    const double C49216 = C22719 * C7430;
    const double C49212 = C22719 * C7425;
    const double C2402 = C2398 + C2399;
    const double C49812 = C49810 / C49718;
    const double C32008 = C175 * C31993;
    const double C32007 = C172 * C31993;
    const double C32000 = C170 * C31993;
    const double C31996 = C168 * C31993;
    const double C32176 = C367 * C31993;
    const double C32172 = C365 * C31993;
    const double C32171 = C364 * C31993;
    const double C32167 = C362 * C31993;
    const double C32338 = C556 * C31993;
    const double C32334 = C554 * C31993;
    const double C32333 = C553 * C31993;
    const double C32329 = C551 * C31993;
    const double C32489 = C360 * C31993;
    const double C32642 = C549 * C31993;
    const double C32846 = C967 * C31993;
    const double C32842 = C965 * C31993;
    const double C2400 = C2396 * C50862;
    const double C2948 = C2938 * C50862;
    const double C22287 = C117 * C17554;
    const double C3111 = C3101 * C50862;
    const double C190 = C184 + C185;
    const double C679 = C371 + C372;
    const double C2401 = C2397 * C118;
    const double C2949 = C2939 * C118;
    const double C793 = C560 + C561;
    const double C5257 = C5247 + C5255;
    const double C5924 = C5585 + C5919;
    const double C5771 = C5407 + C5766;
    const double C3112 = C3102 * C118;
    const double C18473 = C2787 + C2786;
    const double C35137 = C2786 + C2787;
    const double C6143 = C6139 * C50874;
    const double C15577 = C6139 * C15408;
    const double C16260 = C6139 * C15407;
    const double C32845 = C6139 * C50874;
    const double C38386 = C6139 * C38217;
    const double C39057 = C6139 * C51008;
    const double C35788 = C3331 + C3330;
    const double C35787 = C3330 + C3331;
    const double C5431 = C5427 * C50874;
    const double C15586 = C5427 * C15407;
    const double C32175 = C5427 * C50874;
    const double C38395 = C5427 * C51008;
    const double C18474 = C2785 + C2784;
    const double C35136 = C2784 + C2785;
    const double C6142 = C6138 * C5236;
    const double C15578 = C6138 * C15411;
    const double C16259 = C6138 * C15410;
    const double C32844 = C6138 * C31994;
    const double C38387 = C6138 * C38220;
    const double C35789 = C3329 + C3328;
    const double C35786 = C3328 + C3329;
    const double C5430 = C5426 * C5236;
    const double C15585 = C5426 * C15410;
    const double C32174 = C5426 * C31994;
    const double C12968 = C8027 * C3748;
    const double C13894 = C8026 * C3748;
    const double C17158 = C50832 * C3748;
    const double C18994 = C50848 * C3748;
    const double C19918 = C50978 * C3748;
    const double C30055 = C50848 * C3748;
    const double C44707 = C25563 * C3748;
    const double C45633 = C51005 * C3748;
    const double C48813 = C22714 * C3748;
    const double C13488 = C8027 * C4246;
    const double C14398 = C8026 * C4246;
    const double C19912 = C50848 * C4246;
    const double C30713 = C50848 * C4246;
    const double C45227 = C25563 * C4246;
    const double C46137 = C51005 * C4246;
    const double C12974 = C8027 * C3745;
    const double C13888 = C8026 * C3745;
    const double C17156 = C50832 * C3745;
    const double C18990 = C50848 * C3745;
    const double C19914 = C50978 * C3745;
    const double C30051 = C50848 * C3745;
    const double C44713 = C25563 * C3745;
    const double C45627 = C51005 * C3745;
    const double C48809 = C22714 * C3745;
    const double C13482 = C8027 * C4243;
    const double C14392 = C8026 * C4243;
    const double C19908 = C50848 * C4243;
    const double C30709 = C50848 * C4243;
    const double C45221 = C25563 * C4243;
    const double C46131 = C51005 * C4243;
    const double C3747 =
        (C49978 + ae * C50024 + C49849 * C50028 + ae * C49848 * C50054 +
         C49848 *
             (ae * C50054 +
              C49848 * (C49876 + ae * C49849 * C49917 +
                        C49849 * (ae * C49917 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C4245 =
        (ae * (2 * C50001 + C49849 * C50054 + (C49999 + C49982 * C50019) * ae) +
         C49848 *
             (2 * C50028 + ae * C50029 +
              C49849 * (C49876 + ae * C49849 * C49917 +
                        C49849 * (ae * C49917 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C3585 =
        (3 * (C49938 + C49849 * C50001 + C50388 * ae) +
         C49849 * (2 * C50001 + C49849 * C50054 + C50416 * ae) +
         (2 * C50388 + C49849 * C50416) * ae) /
        C49718;
    const double C3743 =
        (C49938 + C49849 * C50001 + C50388 * ae + C50054 * C50074) / C49718;
    const double C4241 =
        (C49848 * (2 * C50001 + C49849 * C50054 + C50416 * ae)) / C49718;
    const double C16268 = C16266 * C15408;
    const double C39059 = C16266 * C38217;
    const double C16267 = C16265 * C15411;
    const double C39058 = C16265 * C38220;
    const double C17552 =
        (4 * (2 * C50450 + C49848 * C50526 + C50451 * ae) +
         C49848 *
             (3 * C50526 +
              C49848 * (2 * C50518 +
                        C49848 * (C49917 + C49848 * (C49848 * C50096 + C50127) +
                                  C49848 * C50125 * ae) +
                        C50520 * ae) +
              C50525 * ae) +
         (3 * C50451 + C49848 * C50525) * ae) /
        C49718;
    const double C15758 = C15756 * C15408;
    const double C38555 = C15756 * C38217;
    const double C15757 = C15755 * C15411;
    const double C38554 = C15755 * C38220;
    const double C2791 = C2774 + C2775;
    const double C6141 = C6134 + C6135;
    const double C23167 = C23150 + C23151;
    const double C3335 = C3326 + C3327;
    const double C5429 = C5424 + C5425;
    const double C8779 = C8772 + C8773;
    const double C23711 = C23702 + C23703;
    const double C26315 = C26308 + C26309;
    const double C2595 = C2576 + C2577;
    const double C8612 = C8602 + C8603;
    const double C22971 = C22952 + C22953;
    const double C26148 = C26138 + C26139;
    const double C2789 = C2770 + C2771;
    const double C6140 = C6132 + C6133;
    const double C23165 = C23146 + C23147;
    const double C3333 = C3322 + C3323;
    const double C5428 = C5422 + C5423;
    const double C8776 = C8766 + C8767;
    const double C23709 = C23698 + C23699;
    const double C26312 = C26302 + C26303;
    const double C5619 = C5615 * C50874;
    const double C16062 = C5615 * C15408;
    const double C32341 = C5615 * C50874;
    const double C38859 = C5615 * C38217;
    const double C176 = C164 + C165;
    const double C369 = C355 + C356;
    const double C2951 = C2942 + C2943;
    const double C8084 = C8062 + C8063;
    const double C23327 = C23318 + C23319;
    const double C25620 = C25598 + C25599;
    const double C685 = C681 + C682;
    const double C2391 = C2372 + C2373;
    const double C22767 = C22748 + C22749;
    const double C558 = C544 + C545;
    const double C799 = C795 + C796;
    const double C969 = C961 + C962;
    const double C3114 = C3105 + C3106;
    const double C23490 = C23481 + C23482;
    const double C20319 =
        (4 * (2 * C50503 + C49848 * C50554 + C50504 * ae) +
         C49848 *
             (3 * C50554 +
              C49848 * (2 * C50546 +
                        C49848 * (C50163 +
                                  C49848 * (C49848 * C49849 * C49920 + C50191) +
                                  C49848 * C50187 * ae) +
                        C50548 * ae) +
              C50553 * ae) +
         (3 * C50504 + C49848 * C50553) * ae) /
        C49718;
    const double C50154 = C50141 + C50153;
    const double C50213 = C50210 + C50211;
    const double C14816 = C8027 * C10288;
    const double C19412 = C50848 * C10288;
    const double C22016 = C50832 * C10288;
    const double C46547 = C25563 * C10288;
    const double C48315 = C50848 * C10288;
    const double C14810 = C8027 * C10286;
    const double C19408 = C50848 * C10286;
    const double C22014 = C50832 * C10286;
    const double C46541 = C25563 * C10286;
    const double C48311 = C50848 * C10286;
    const double C20336 = C20331 + C20332;
    const double C21686 = C21683 + C21684;
    const double C49223 = C49218 + C49219;
    const double C20334 = C20327 + C20328;
    const double C21685 = C21681 + C21682;
    const double C49221 = C49214 + C49215;
    const double C50575 = C50557 + C50573;
    const double C22289 = C22285 + C22286;
    const double C370 = C357 + C358;
    const double C2953 = C2946 + C2947;
    const double C8087 = C8068 + C8069;
    const double C23329 = C23322 + C23323;
    const double C25623 = C25604 + C25605;
    const double C686 = C683 + C684;
    const double C2393 = C2376 + C2377;
    const double C22769 = C22752 + C22753;
    const double C559 = C546 + C547;
    const double C800 = C797 + C798;
    const double C970 = C963 + C964;
    const double C3116 = C3109 + C3110;
    const double C23492 = C23485 + C23486;
    const double C333 =
        (3 * C49874 + C49856 * C49885 + ae * C49849 * C49926 +
         C49849 * (ae * C49926 +
                   C49849 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C677 =
        (ae * (4 * C49913 + C49856 * C49926) +
         C49849 * (4 * C49885 +
                   C49856 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C138 = (5 * (3 * C49904 + C49856 * C49913) +
                         C49856 * (4 * C49913 + C49856 * C49926)) /
                        C49718;
    const double C322 =
        (3 * C49904 + C49856 * C49913 + C49926 * C50019) / C49718;
    const double C511 =
        (3 * C49904 + C49856 * C49913 +
         C49848 * (C49848 * C49926 + C50338 * ae) + C49848 * C50338 * ae) /
        C49718;
    const double C675 = (C49849 * (4 * C49913 + C49856 * C49926)) / C49718;
    const double C789 = (C49848 * (4 * C49913 + C49856 * C49926) +
                         (4 * C50330 + C49856 * C50338) * ae) /
                        C49718;
    const double C945 =
        (C49848 * C49849 * C49926 + C49849 * C50338 * ae) / C49718;
    const double C11539 =
        (5 * (3 * C50120 + ae * C50121 + C49849 * C50180) +
         ae * (4 * C50121 + C49849 * C50181) +
         C49849 *
             (4 * C50180 + ae * C50181 +
              C49849 *
                  (3 * C50176 + ae * C50177 +
                   C49849 * (2 * C50170 + ae * C50172 +
                             C49849 * (C49881 + ae * C49849 * C49920 +
                                       C49849 * (ae * C49920 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C11537 = (5 * (3 * C50036 + C49849 * C50121) +
                           C49849 * (4 * C50121 + C49849 * C50181)) /
                          C49718;
    const double C11639 =
        (3 * C50036 + C49849 * C50121 +
         C49848 * (C49848 * C50181 + C50486 * ae) + C49848 * C50486 * ae) /
        C49718;
    const double C11969 = (C49848 * (4 * C50121 + C49849 * C50181) +
                           (4 * C50469 + C49849 * C50486) * ae) /
                          C49718;
    const double C522 =
        (3 * C49874 + C49856 * C49885 + ae * C49848 * C49965 +
         C49848 * (ae * C49965 +
                   C49848 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C791 =
        (ae * (4 * C49952 + C49856 * C49965) +
         C49848 * (4 * C49885 +
                   C49856 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C951 =
        (ae * (C49849 * C49965 +
               (3 * (C49972 + C49974 * C49864) +
                C49856 * (2 * C49856 * C49974 +
                          C49856 * (C49974 + C49870 * C49869 * C49864))) *
                   ae) +
         C49848 * (ae * C49926 +
                   C49849 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C139 = (5 * (3 * C49943 + C49856 * C49952) +
                         C49856 * (4 * C49952 + C49856 * C49965)) /
                        C49718;
    const double C323 =
        (3 * C49943 + C49856 * C49952 +
         C49849 * (C49849 * C49965 + C50338 * ae) + C49849 * C50338 * ae) /
        C49718;
    const double C512 =
        (3 * C49943 + C49856 * C49952 + C49965 * C50074) / C49718;
    const double C676 = (C49849 * (4 * C49952 + C49856 * C49965) +
                         (4 * C50330 + C49856 * C50338) * ae) /
                        C49718;
    const double C790 = (C49848 * (4 * C49952 + C49856 * C49965)) / C49718;
    const double C946 = (C49848 * (C49849 * C49965 + C50338 * ae)) / C49718;
    const double C1276 =
        (ae * C49913 + C49849 * C49885 + ae * C49848 * C49990 +
         C49848 * (ae * C49990 +
                   C49848 * (ae * C49924 +
                             C49849 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1623 =
        (ae * (C49952 + C49849 * C49990 + C49849 * C49988 * ae) +
         C49848 * (C49885 + ae * C49849 * C49924 +
                   C49849 * (ae * C49924 +
                             C49849 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1155 =
        (2 * (C49849 * C49952 + C50330 * ae) +
         C49849 * (C49952 + C49849 * C49990 + C49849 * C49988 * ae) +
         (C50330 + C49988 * C50019) * ae) /
        C49718;
    const double C1269 =
        (C49849 * C49952 + C50330 * ae + C49990 * C50074) / C49718;
    const double C1616 =
        (C49848 * (C49952 + C49849 * C49990 + C50382 * ae)) / C49718;
    const double C50045 = C50044 + C50042;
    const double C50137 = C49849 * C50136;
    const double C10287 =
        (2 * (ae * C50054 + C49848 * C50106) + ae * (C50054 + C50136 * C50074) +
         C49848 * (C50106 + ae * C49848 * C50136 +
                   C49848 * (ae * C50136 +
                             C49848 * (C50095 + ae * C49849 * C50096 +
                                       C49849 * (ae * C50096 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C10284 =
        (2 * C49848 * C50054 + C49848 * (C50054 + C50136 * C50074)) / C49718;
    const double C50201 = C50184 + C50200;
    const double C50214 = C50152 + C50212;
    const double C20321 =
        (4 * (2 * C50220 + ae * C50221 + C49848 * C50269) +
         ae * (3 * C50221 + C49848 * C50270) +
         C49848 *
             (3 * C50269 + ae * C50270 +
              C49848 *
                  (2 * C50263 + ae * C50265 +
                   C49848 * (C50170 + ae * C49848 * C50190 +
                             C49848 * (ae * C50190 +
                                       C49848 * (ae * C49920 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C20320 = (4 * (2 * C50216 + C49848 * C50221) +
                           C49848 * (3 * C50221 + C49848 * C50270)) /
                          C49718;
    const double C22283 =
        (5 * (3 * C50255 + ae * C50256 + C49848 * C50291) +
         ae * (4 * C50256 + C49848 * C50292) +
         C49848 *
             (4 * C50291 + ae * C50292 +
              C49848 *
                  (3 * C50287 + ae * C50288 +
                   C49848 * (2 * C50281 + ae * C50283 +
                             C49848 * (C49881 + ae * C49848 * C49959 +
                                       C49848 * (ae * C49959 +
                                                 C49848 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C22282 = (5 * (3 * C50091 + C49848 * C50256) +
                           C49848 * (4 * C50256 + C49848 * C50292)) /
                          C49718;
    const double C5258 = C5256 + C5245;
    const double C187 = C177 * C50862;
    const double C49769 = C49767 - C49762;
    const double C22768 = C22750 + C22751;
    const double C22766 = C22746 + C22747;
    const double C22765 = C22744 + C22745;
    const double C22763 = C22740 + C22741;
    const double C22760 = C22734 + C22735;
    const double C22758 = C22730 + C22731;
    const double C22756 = C22726 + C22727;
    const double C22754 = C22722 + C22723;
    const double C22972 = C22954 + C22955;
    const double C22970 = C22950 + C22951;
    const double C22968 = C22946 + C22947;
    const double C22966 = C22942 + C22943;
    const double C22965 = C22940 + C22941;
    const double C22963 = C22936 + C22937;
    const double C22961 = C22932 + C22933;
    const double C22959 = C22928 + C22929;
    const double C23166 = C23148 + C23149;
    const double C23164 = C23144 + C23145;
    const double C23162 = C23140 + C23141;
    const double C23160 = C23136 + C23137;
    const double C23159 = C23134 + C23135;
    const double C23157 = C23130 + C23131;
    const double C23155 = C23126 + C23127;
    const double C23153 = C23122 + C23123;
    const double C23328 = C23320 + C23321;
    const double C23326 = C23316 + C23317;
    const double C23491 = C23483 + C23484;
    const double C23489 = C23479 + C23480;
    const double C23710 = C23700 + C23701;
    const double C23708 = C23696 + C23697;
    const double C23706 = C23692 + C23693;
    const double C23704 = C23688 + C23689;
    const double C28614 = C28608 + C28609;
    const double C28612 = C28604 + C28605;
    const double C28852 = C28838 + C28839;
    const double C28850 = C28834 + C28835;
    const double C28849 = C28830 + C28831;
    const double C28847 = C28826 + C28827;
    const double C28844 = C28814 + C28815;
    const double C28842 = C28810 + C28811;
    const double C29528 = C29516 + C29517;
    const double C29526 = C29512 + C29513;
    const double C29524 = C29506 + C29507;
    const double C29522 = C29502 + C29503;
    const double C30058 = C30052 + C30053;
    const double C30056 = C30048 + C30049;
    const double C30716 = C30710 + C30711;
    const double C30714 = C30706 + C30707;
    const double C31246 = C31240 + C31241;
    const double C31244 = C31236 + C31237;
    const double C48320 = C48312 + C48313;
    const double C48318 = C48308 + C48309;
    const double C49222 = C49216 + C49217;
    const double C49220 = C49212 + C49213;
    const double C49814 = C49812 - C49799;
    const double C32013 = C32006 + C32007;
    const double C32012 = C32000 + C32001;
    const double C32488 = C32166 + C32167;
    const double C32641 = C32328 + C32329;
    const double C22290 = C22287 + C22288;
    const double C2403 = C2400 + C2401;
    const double C2954 = C2948 + C2949;
    const double C5259 = C5246 + C5257;
    const double C5925 = C5584 + C5924;
    const double C5772 = C5406 + C5771;
    const double C3117 = C3111 + C3112;
    const double C12985 = C12967 + C12968;
    const double C13901 = C13893 + C13894;
    const double C17160 = C17157 + C17158;
    const double C19010 = C18993 + C18994;
    const double C19927 = C19917 + C19918;
    const double C30059 = C30054 + C30055;
    const double C44724 = C44706 + C44707;
    const double C48818 = C48812 + C48813;
    const double C13494 = C13487 + C13488;
    const double C14405 = C14397 + C14398;
    const double C19924 = C19911 + C19912;
    const double C30717 = C30712 + C30713;
    const double C45233 = C45226 + C45227;
    const double C12988 = C12973 + C12974;
    const double C13898 = C13887 + C13888;
    const double C17159 = C17155 + C17156;
    const double C19008 = C18989 + C18990;
    const double C19925 = C19913 + C19914;
    const double C30057 = C30050 + C30051;
    const double C44727 = C44712 + C44713;
    const double C48816 = C48808 + C48809;
    const double C13491 = C13481 + C13482;
    const double C14402 = C14391 + C14392;
    const double C19922 = C19907 + C19908;
    const double C30715 = C30708 + C30709;
    const double C45230 = C45220 + C45221;
    const double C8439 = C8027 * C3747;
    const double C15590 = C50832 * C3747;
    const double C19002 = C50848 * C3747;
    const double C25975 = C25563 * C3747;
    const double C29519 = C50848 * C3747;
    const double C8985 = C8027 * C4245;
    const double C26521 = C25563 * C4245;
    const double C28611 = C50848 * C4245;
    const double C34933 = C50848 * C4245;
    const double C8251 = C8027 * C3585;
    const double C25787 = C25563 * C3585;
    const double C8433 = C8027 * C3743;
    const double C15588 = C50832 * C3743;
    const double C18998 = C50848 * C3743;
    const double C25969 = C25563 * C3743;
    const double C29515 = C50848 * C3743;
    const double C8979 = C8027 * C4241;
    const double C26515 = C25563 * C4241;
    const double C28607 = C50848 * C4241;
    const double C34929 = C50848 * C4241;
    const double C6145 = C6141 * C50874;
    const double C15910 = C6141 * C15408;
    const double C32849 = C6141 * C50874;
    const double C38707 = C6141 * C38217;
    const double C5433 = C5429 * C50874;
    const double C32179 = C5429 * C50874;
    const double C6144 = C6140 * C5236;
    const double C15909 = C6140 * C15411;
    const double C32848 = C6140 * C31994;
    const double C38706 = C6140 * C38220;
    const double C5432 = C5428 * C5236;
    const double C32178 = C5428 * C31994;
    const double C186 = C176 * C118;
    const double C381 = C369 * C118;
    const double C687 = C685 * C118;
    const double C570 = C558 * C118;
    const double C5922 = C558 * C5236;
    const double C15429 = C558 * C15411;
    const double C32644 = C558 * C31994;
    const double C38238 = C558 * C38220;
    const double C801 = C799 * C118;
    const double C5252 = C799 * C5236;
    const double C32010 = C799 * C31994;
    const double C975 = C969 * C118;
    const double C5769 = C969 * C5236;
    const double C32491 = C969 * C31994;
    const double C50155 = C50154 + C50150;
    const double C14822 = C14815 + C14816;
    const double C19418 = C19411 + C19412;
    const double C22018 = C22015 + C22016;
    const double C46553 = C46546 + C46547;
    const double C48321 = C48314 + C48315;
    const double C14819 = C14809 + C14810;
    const double C19416 = C19407 + C19408;
    const double C22017 = C22013 + C22014;
    const double C46550 = C46540 + C46541;
    const double C48319 = C48310 + C48311;
    const double C50576 = C50575 + C50560;
    const double C382 = C370 * C50862;
    const double C688 = C686 * C50862;
    const double C571 = C559 * C50862;
    const double C5923 = C559 * C50874;
    const double C15430 = C559 * C15408;
    const double C32645 = C559 * C50874;
    const double C38239 = C559 * C38217;
    const double C802 = C800 * C50862;
    const double C5253 = C800 * C50874;
    const double C32011 = C800 * C50874;
    const double C976 = C970 * C50862;
    const double C5770 = C970 * C50874;
    const double C32492 = C970 * C50874;
    const double C3746 =
        (C49874 + ae * C50016 + C49849 * C50020 + ae * C49848 * C50045 +
         C49848 * (ae * C50045 +
                   C49848 * (C49883 + ae * C49849 * C49922 +
                             C49849 * (ae * C49922 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C4244 =
        (ae * (2 * C49996 + C49849 * C50045 + (C49994 + C49986 * C50019) * ae) +
         C49848 * (2 * C50020 + ae * C50022 +
                   C49849 * (C49883 + ae * C49849 * C49922 +
                             C49849 * (ae * C49922 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C3583 =
        (3 * (C49943 + C49849 * C49996 + C50385 * ae) +
         C49849 * (2 * C49996 + C49849 * C50045 + C50412 * ae) +
         (2 * C50385 + C49849 * C50412) * ae) /
        C49718;
    const double C3741 =
        (C49943 + C49849 * C49996 + C50385 * ae + C50045 * C50074) / C49718;
    const double C4239 =
        (C49848 * (2 * C49996 + C49849 * C50045 + C50412 * ae)) / C49718;
    const double C50138 = C50123 + C50137;
    const double C50202 = C50201 + C50194;
    const double C14802 =
        (3 * (C50120 + ae * C50209 + C49848 * C50213) +
         ae * (2 * C50209 + C49848 * C50214) +
         C49848 *
             (2 * C50213 + ae * C50214 +
              C49848 *
                  (C50176 + ae * C49848 * C50198 +
                   C49848 * (ae * C50198 +
                             C49848 * (C49881 + ae * C49849 * C49920 +
                                       C49849 * (ae * C49920 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C14800 = (3 * (C50063 + C50152 * C50074) +
                           C49848 * (2 * C50209 + C49848 * C50214)) /
                          C49718;
    const double C10846 =
        ((((0 - (C49717 * C49749) / C49718) * ae) / C49718 - (0 * be) / C49754 +
          C49734 / C49718) /
             C49733 -
         ((C49717 * C49768 + 0) * be) / C49718) /
            C49733 -
        ((C49717 * (C49768 / C49733 -
                    ((C49717 * C49769 + C50978) * be) / C49718 + C49763) +
          C51016) *
         be) /
            C49718 +
        C49769 / C49733 - ((C49717 * C49763 + C50848) * be) / C49718;
    const double C10847 =
        (C49768 / C49733 - ((C49717 * C49769 + C50978) * be) / C49718 +
         C49763) /
            C49733 -
        ((C49717 *
              (C49769 / C49733 - ((C49717 * C49763 + C50848) * be) / C49718) +
          C51005) *
         be) /
            C49718 +
        2 * (C49763 / C49733 - (0 * be) / C49718);
    const double C10848 =
        (C49769 / C49733 - ((C49717 * C49763 + C50848) * be) / C49718) /
            C49733 -
        ((C49717 * (C49763 / C49733 - (0 * be) / C49718) + C25563) * be) /
            C49718;
    const double C25566 =
        C49768 / C49733 - ((C49717 * C49769 + C50978) * be) / C49718 + C49763;
    const double C25567 =
        C49769 / C49733 - ((C49717 * C49763 + C50848) * be) / C49718;
    const double C22773 = C22764 + C22765;
    const double C22772 = C22762 + C22763;
    const double C22771 = C22760 + C22761;
    const double C22770 = C22758 + C22759;
    const double C23315 = C22960 + C22961;
    const double C23314 = C22958 + C22959;
    const double C28833 = C23162 + C23163;
    const double C28820 = C23163 + C23162;
    const double C28832 = C23160 + C23161;
    const double C28821 = C23161 + C23160;
    const double C28823 = C23158 + C23159;
    const double C28818 = C23159 + C23158;
    const double C28822 = C23156 + C23157;
    const double C28819 = C23157 + C23156;
    const double C23478 = C23154 + C23155;
    const double C29242 = C23155 + C23154;
    const double C23477 = C23152 + C23153;
    const double C29243 = C23153 + C23152;
    const double C29520 = C23707 + C23706;
    const double C29511 = C23706 + C23707;
    const double C29521 = C23705 + C23704;
    const double C29510 = C23704 + C23705;
    const double C47430 = C28849 + C28848;
    const double C47431 = C28847 + C28846;
    const double C49210 = C31247 + C31246;
    const double C49211 = C31245 + C31244;
    const double C20892 =
        ((((0 - (C49725 * C49796) / C49718) * ae) / C49718 - (0 * be) / C49754 +
          C49782 / C49718) /
             C49733 -
         ((C49725 * C49813 + 0) * be) / C49718) /
            C49733 -
        ((C49725 * (C49813 / C49733 -
                    ((C49725 * C49814 + C50980) * be) / C49718 + C49808) +
          C51017) *
         be) /
            C49718 +
        C49814 / C49733 - ((C49725 * C49808 + C50874) * be) / C49718;
    const double C20893 =
        (C49813 / C49733 - ((C49725 * C49814 + C50980) * be) / C49718 +
         C49808) /
            C49733 -
        ((C49725 *
              (C49814 / C49733 - ((C49725 * C49808 + C50874) * be) / C49718) +
          C51008) *
         be) /
            C49718 +
        2 * (C49808 / C49733 - (0 * be) / C49718);
    const double C20894 =
        (C49814 / C49733 - ((C49725 * C49808 + C50874) * be) / C49718) /
            C49733 -
        ((C49725 * (C49808 / C49733 - (0 * be) / C49718) + C38217) * be) /
            C49718;
    const double C38218 =
        C49813 / C49733 - ((C49725 * C49814 + C50980) * be) / C49718 + C49808;
    const double C38219 =
        C49814 / C49733 - ((C49725 * C49808 + C50874) * be) / C49718;
    const double C32015 = C32005 + C32013;
    const double C32014 = C32012 + C32002;
    const double C32493 = C32165 + C32488;
    const double C32646 = C32327 + C32641;
    const double C19413 = C19010 + C19009;
    const double C48316 = C30059 + C30058;
    const double C19414 = C19008 + C19007;
    const double C48317 = C30057 + C30056;
    const double C8451 = C8438 + C8439;
    const double C15592 = C15589 + C15590;
    const double C19014 = C19001 + C19002;
    const double C25987 = C25974 + C25975;
    const double C29529 = C29518 + C29519;
    const double C8991 = C8984 + C8985;
    const double C26527 = C26520 + C26521;
    const double C28615 = C28610 + C28611;
    const double C34937 = C34932 + C34933;
    const double C8266 = C8250 + C8251;
    const double C25802 = C25786 + C25787;
    const double C8448 = C8432 + C8433;
    const double C15591 = C15587 + C15588;
    const double C19012 = C18997 + C18998;
    const double C25984 = C25968 + C25969;
    const double C29527 = C29514 + C29515;
    const double C8988 = C8978 + C8979;
    const double C26524 = C26514 + C26515;
    const double C28613 = C28606 + C28607;
    const double C34935 = C34928 + C34929;
    const double C9396 =
        (2 * C50035 + ae * C50036 + C49849 * C50120 + ae * C49848 * C50155 +
         C49848 *
             (ae * C50155 +
              C49848 * (2 * C50114 + ae * C50116 +
                        C49849 * (C49872 + ae * C49849 * C49909 +
                                  C49849 * (ae * C49909 + C49849 * C49881))))) /
        C49750;
    const double C9890 =
        (ae * (3 * C50063 + C49849 * C50155 +
               (2 * C50058 + C49849 * C50148) * ae) +
         C49848 *
             (3 * C50120 + ae * C50121 +
              C49849 * (2 * C50114 + ae * C50116 +
                        C49849 * (C49872 + ae * C49849 * C49909 +
                                  C49849 * (ae * C49909 + C49849 * C49881))))) /
        C49750;
    const double C9240 =
        (4 * (2 * C50006 + C49849 * C50063 + C50420 * ae) +
         C49849 * (3 * C50063 + C49849 * C50155 + C50469 * ae) +
         (3 * C50420 + C49849 * C50469) * ae) /
        C49718;
    const double C9394 =
        (2 * C50006 + C49849 * C50063 + C50420 * ae + C50155 * C50074) / C49718;
    const double C9888 =
        (C49848 * (3 * C50063 + C49849 * C50155 + C50469 * ae)) / C49718;
    const double C22281 =
        (5 * (3 * C50540 + C49848 * C50576 + C50539 * ae) +
         C49848 *
             (4 * C50576 +
              C49848 *
                  (3 * C50571 +
                   C49848 *
                       (2 * C50563 +
                        C49848 * (C49909 + C49848 * (C49848 * C49920 + C50186) +
                                  C49848 * C49983 * ae) +
                        C50565 * ae) +
                   C50570 * ae) +
              C50574 * ae) +
         (4 * C50539 + C49848 * C50574) * ae) /
        C49718;
    const double C50139 = C50138 + C50134;
    const double C50203 = C49849 * C50202;
    const double C12237 =
        (2 * (ae * C50155 + C49848 * C50180) + ae * (C50155 + C50202 * C50074) +
         C49848 *
             (C50180 + ae * C49848 * C50202 +
              C49848 *
                  (ae * C50202 +
                   C49848 * (2 * C50170 + ae * C50172 +
                             C49849 * (C49881 + ae * C49849 * C49920 +
                                       C49849 * (ae * C49920 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C12236 =
        (2 * C49848 * C50155 + C49848 * (C50155 + C50202 * C50074)) / C49718;
    const double C25600 = C25566 * C133;
    const double C25594 = C25566 * C122;
    const double C25592 = C25566 * C121;
    const double C25586 = C25566 * C131;
    const double C25576 = C25566 * C129;
    const double C25570 = C25566 * C120;
    const double C25788 = C25566 * C315;
    const double C25782 = C25566 * C299;
    const double C25780 = C25566 * C296;
    const double C25774 = C25566 * C308;
    const double C25970 = C25566 * C504;
    const double C25964 = C25566 * C488;
    const double C25962 = C25566 * C485;
    const double C25956 = C25566 * C497;
    const double C26140 = C25566 * C306;
    const double C26134 = C25566 * C295;
    const double C26304 = C25566 * C495;
    const double C26298 = C25566 * C484;
    const double C26516 = C25566 * C940;
    const double C26510 = C25566 * C933;
    const double C44716 = C25566 * C487;
    const double C44710 = C25566 * C502;
    const double C44700 = C25566 * C499;
    const double C44694 = C25566 * C486;
    const double C45222 = C25566 * C938;
    const double C45216 = C25566 * C932;
    const double C45630 = C25566 * C1274;
    const double C45624 = C25566 * C1267;
    const double C46134 = C25566 * C1621;
    const double C46128 = C25566 * C1614;
    const double C46542 = C25566 * C1905;
    const double C46536 = C25566 * C1898;
    const double C25602 = C25567 * C304;
    const double C25596 = C25567 * C294;
    const double C25590 = C25567 * C295;
    const double C25584 = C25567 * C306;
    const double C25578 = C25567 * C308;
    const double C25572 = C25567 * C296;
    const double C25790 = C25567 * C1158;
    const double C25784 = C25567 * C1152;
    const double C25778 = C25567 * C299;
    const double C25772 = C25567 * C315;
    const double C25972 = C25567 * C1272;
    const double C25966 = C25567 * C1266;
    const double C25960 = C25567 * C933;
    const double C25954 = C25567 * C940;
    const double C26142 = C25567 * C317;
    const double C26136 = C25567 * C300;
    const double C26306 = C25567 * C942;
    const double C26300 = C25567 * C934;
    const double C26518 = C25567 * C1619;
    const double C26512 = C25567 * C1613;
    const double C44714 = C25567 * C1267;
    const double C44708 = C25567 * C1274;
    const double C44702 = C25567 * C938;
    const double C44696 = C25567 * C932;
    const double C45224 = C25567 * C1621;
    const double C45218 = C25567 * C1614;
    const double C45632 = C25567 * C3744;
    const double C45626 = C25567 * C3739;
    const double C46136 = C25567 * C4242;
    const double C46130 = C25567 * C4237;
    const double C46544 = C25567 * C4644;
    const double C46538 = C25567 * C4639;
    const double C22777 = C22773 * C118;
    const double C22776 = C22772 * C50862;
    const double C22775 = C22771 * C50862;
    const double C22774 = C22770 * C118;
    const double C23325 = C23315 * C118;
    const double C23324 = C23314 * C50862;
    const double C23488 = C23478 * C118;
    const double C23487 = C23477 * C50862;
    const double C38234 = C172 * C38218;
    const double C38233 = C170 * C38218;
    const double C38222 = C168 * C38218;
    const double C38392 = C365 * C38218;
    const double C38391 = C364 * C38218;
    const double C38550 = C554 * C38218;
    const double C38549 = C553 * C38218;
    const double C38702 = C362 * C38218;
    const double C38854 = C551 * C38218;
    const double C39054 = C965 * C38218;
    const double C38236 = C549 * C38219;
    const double C38231 = C551 * C38219;
    const double C38224 = C553 * C38219;
    const double C38394 = C5426 * C38219;
    const double C38389 = C965 * C38219;
    const double C38552 = C5612 * C38219;
    const double C38547 = C554 * C38219;
    const double C38704 = C967 * C38219;
    const double C38856 = C556 * C38219;
    const double C39056 = C6138 * C38219;
    const double C32017 = C32004 + C32015;
    const double C32016 = C32014 + C32003;
    const double C32494 = C32164 + C32493;
    const double C32647 = C32326 + C32646;
    const double C15594 = C15592 * C15408;
    const double C38397 = C15592 * C38217;
    const double C15593 = C15591 * C15411;
    const double C38396 = C15591 * C38220;
    const double C13896 = C8027 * C9396;
    const double C19920 = C50848 * C9396;
    const double C45635 = C25563 * C9396;
    const double C48815 = C50848 * C9396;
    const double C14400 = C8027 * C9890;
    const double C46139 = C25563 * C9890;
    const double C13890 = C8027 * C9394;
    const double C19916 = C50848 * C9394;
    const double C45629 = C25563 * C9394;
    const double C48811 = C50848 * C9394;
    const double C14394 = C8027 * C9888;
    const double C46133 = C25563 * C9888;
    const double C9395 =
        (2 * C50028 + ae * C50029 + C49849 * C50106 + ae * C49848 * C50139 +
         C49848 * (ae * C50139 +
                   C49848 * (2 * C50102 + ae * C50103 +
                             C49849 * (C50095 + ae * C49849 * C50096 +
                                       C49849 * (ae * C50096 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C9889 =
        (ae * (3 * C50054 + C49849 * C50139 +
               (2 * C50049 + C49849 * C50132) * ae) +
         C49848 * (3 * C50106 + ae * C50107 +
                   C49849 * (2 * C50102 + ae * C50103 +
                             C49849 * (C50095 + ae * C49849 * C50096 +
                                       C49849 * (ae * C50096 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C9238 =
        (4 * (2 * C50001 + C49849 * C50054 + C50416 * ae) +
         C49849 * (3 * C50054 + C49849 * C50139 + C50464 * ae) +
         (3 * C50416 + C49849 * C50464) * ae) /
        C49718;
    const double C9392 =
        (2 * C50001 + C49849 * C50054 + C50416 * ae + C50139 * C50074) / C49718;
    const double C9886 =
        (C49848 * (3 * C50054 + C49849 * C50139 + C50464 * ae)) / C49718;
    const double C50204 = C50183 + C50203;
    const double C25621 = C25600 + C25601;
    const double C25618 = C25594 + C25595;
    const double C25617 = C25592 + C25593;
    const double C25614 = C25586 + C25587;
    const double C25609 = C25576 + C25577;
    const double C25606 = C25570 + C25571;
    const double C25803 = C25788 + C25789;
    const double C25800 = C25782 + C25783;
    const double C25799 = C25780 + C25781;
    const double C25796 = C25774 + C25775;
    const double C25985 = C25970 + C25971;
    const double C25982 = C25964 + C25965;
    const double C25981 = C25962 + C25963;
    const double C25978 = C25956 + C25957;
    const double C26149 = C26140 + C26141;
    const double C26146 = C26134 + C26135;
    const double C26313 = C26304 + C26305;
    const double C26310 = C26298 + C26299;
    const double C26525 = C26516 + C26517;
    const double C26522 = C26510 + C26511;
    const double C44729 = C44716 + C44717;
    const double C44726 = C44710 + C44711;
    const double C44721 = C44700 + C44701;
    const double C44718 = C44694 + C44695;
    const double C45231 = C45222 + C45223;
    const double C45228 = C45216 + C45217;
    const double C45639 = C45630 + C45631;
    const double C45636 = C45624 + C45625;
    const double C46143 = C46134 + C46135;
    const double C46140 = C46128 + C46129;
    const double C46551 = C46542 + C46543;
    const double C46548 = C46536 + C46537;
    const double C25622 = C25602 + C25603;
    const double C25619 = C25596 + C25597;
    const double C25616 = C25590 + C25591;
    const double C25613 = C25584 + C25585;
    const double C25610 = C25578 + C25579;
    const double C25607 = C25572 + C25573;
    const double C25804 = C25790 + C25791;
    const double C25801 = C25784 + C25785;
    const double C25798 = C25778 + C25779;
    const double C25795 = C25772 + C25773;
    const double C25986 = C25972 + C25973;
    const double C25983 = C25966 + C25967;
    const double C25980 = C25960 + C25961;
    const double C25977 = C25954 + C25955;
    const double C26150 = C26142 + C26143;
    const double C26147 = C26136 + C26137;
    const double C26314 = C26306 + C26307;
    const double C26311 = C26300 + C26301;
    const double C26526 = C26518 + C26519;
    const double C26523 = C26512 + C26513;
    const double C44728 = C44714 + C44715;
    const double C44725 = C44708 + C44709;
    const double C44722 = C44702 + C44703;
    const double C44719 = C44696 + C44697;
    const double C45232 = C45224 + C45225;
    const double C45229 = C45218 + C45219;
    const double C45640 = C45632 + C45633;
    const double C45637 = C45626 + C45627;
    const double C46144 = C46136 + C46137;
    const double C46141 = C46130 + C46131;
    const double C46552 = C46544 + C46545;
    const double C46549 = C46538 + C46539;
    const double C22779 = C22776 + C22777;
    const double C22778 = C22774 + C22775;
    const double C23330 = C23324 + C23325;
    const double C23493 = C23487 + C23488;
    const double C13902 = C13895 + C13896;
    const double C19928 = C19919 + C19920;
    const double C45641 = C45634 + C45635;
    const double C48819 = C48814 + C48815;
    const double C14406 = C14399 + C14400;
    const double C46145 = C46138 + C46139;
    const double C13899 = C13889 + C13890;
    const double C19926 = C19915 + C19916;
    const double C45638 = C45628 + C45629;
    const double C48817 = C48810 + C48811;
    const double C14403 = C14393 + C14394;
    const double C46142 = C46132 + C46133;
    const double C50205 = C50204 + C50199;
    const double C11641 =
        (3 * C50120 + ae * C50121 + C49849 * C50180 + ae * C49848 * C50205 +
         C49848 *
             (ae * C50205 +
              C49848 *
                  (3 * C50176 + ae * C50177 +
                   C49849 * (2 * C50170 + ae * C50172 +
                             C49849 * (C49881 + ae * C49849 * C49920 +
                                       C49849 * (ae * C49920 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C11971 =
        (ae * (4 * C50155 + C49849 * C50205 +
               (3 * C50148 + C49849 * C50197) * ae) +
         C49848 *
             (4 * C50180 + ae * C50181 +
              C49849 *
                  (3 * C50176 + ae * C50177 +
                   C49849 * (2 * C50170 + ae * C50172 +
                             C49849 * (C49881 + ae * C49849 * C49920 +
                                       C49849 * (ae * C49920 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C11538 =
        (5 * (3 * C50063 + C49849 * C50155 + C50469 * ae) +
         C49849 * (4 * C50155 + C49849 * C50205 + C50486 * ae) +
         (4 * C50469 + C49849 * C50486) * ae) /
        C49718;
    const double C11640 =
        (3 * C50063 + C49849 * C50155 + C50469 * ae + C50205 * C50074) / C49718;
    const double C11970 =
        (C49848 * (4 * C50155 + C49849 * C50205 + C50486 * ae)) / C49718;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50737 * C50968 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50737 * C50773) *
              C51010 +
          ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
            ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
            ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
               C50737 * C50773 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50737 * C50968) *
              C51011 +
          ((C22778 * C51009 +
            ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
            ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
               C50737 * C50968 -
           (((C22720 * C322 + C50848 * C333 + C22719 * C321 + C22714 * C332) *
                 C50862 +
             (C22720 * C303 + C50848 * C323 + C22719 * C302 + C22714 * C320) *
                 C118) *
                C22718 +
            ((C23329 + C23328) * C50862 + (C23327 + C23326) * C118) * C50993 +
            C23330 * C51009) *
               C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C118 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C50862) *
                 C51009 +
             ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
             C22778 * C22718) *
                C50969 -
            (C23493 * C22718 +
             ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
             ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                  C50862 +
              (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                  C118) *
                 C51009) *
                C50801) *
               C50968 +
           ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 +
               C50848 * C1622) *
                  C118 +
              (C22719 * C938 + C22714 * C947 + C22720 * C1621 +
               C50848 * C1626) *
                  C50862) *
                 C51009 +
             ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
             ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
                C50801 -
            (C23330 * C22718 +
             ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
             ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C50862 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C118) *
                 C51009) *
                C50969) *
               C50773) *
              C292 +
          (((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
             ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
             ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
                C50801 -
            (C22779 * C22718 +
             ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
             ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
                C50969) *
               C50968 +
           ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
             ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
             ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
                C50969 -
            (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 +
               C22714 * C950) *
                  C50862 +
              (C22720 * C1611 + C50848 * C1616 + C22719 * C935 +
               C22714 * C943) *
                  C118) *
                 C22718 +
             ((C23711 + C23710) * C50862 + (C23709 + C23708) * C118) * C50993 +
             ((C23707 + C23706) * C50862 + (C23705 + C23704) * C118) * C51009) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50737 * C289 -
           (((C22958 + C22959) * C50862 + (C22960 + C22961) * C118) * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50737 * C290 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C118 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50862) *
                C51009 +
            ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
            ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
               C50737 * C291) *
              C292 +
          ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
            ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
            ((C22719 * C294 + C22714 * C305 + C22720 * C301 + C50848 * C318) *
                 C118 +
             (C22719 * C304 + C22714 * C324 + C22720 * C319 + C50848 * C331) *
                 C50862) *
                C22718) *
               C50737 * C290 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50737 * C289 -
           (((C22720 * C1154 + C50848 * C1162 + C22719 * C319 + C22714 * C331) *
                 C50862 +
             (C22720 * C1150 + C50848 * C1155 + C22719 * C301 + C22714 * C318) *
                 C118) *
                C22718 +
            ((C22973 + C22972) * C50862 + (C22971 + C22970) * C118) * C50993 +
            ((C22969 + C22968) * C50862 + (C22967 + C22966) * C118) * C51009) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C118 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50862) *
               C51009 +
           ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
           C22778 * C22718) *
              C50737 * C50721 * C113 -
          (C22779 * C22718 +
           ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
           ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
              C50737 * C50721 * C114 +
          (C22778 * C51009 +
           ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
           ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
              C50737 * C50721 * C115 -
          (((C22720 * C675 + C50848 * C677 + C22719 * C137 + C22714 * C145) *
                C50862 +
            (C22720 * C674 + C50848 * C676 + C22719 * C124 + C22714 * C136) *
                C118) *
               C22718 +
           ((C22769 + C22768) * C50862 + (C22767 + C22766) * C118) * C50993 +
           C22779 * C51009) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C480 -
           (((C23152 + C23153) * C50862 + (C23154 + C23155) * C118) * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C481 +
           (((C22719 * C487 + C22714 * C501 + C22720 * C1267 + C50848 * C1275) *
                 C118 +
             (C22719 * C502 + C22714 * C517 + C22720 * C1274 + C50848 * C1279) *
                 C50862) *
                C51009 +
            ((C23160 + C23161) * C118 + (C23162 + C23163) * C50862) * C50993 +
            ((C23164 + C23165) * C118 + (C23166 + C23167) * C50862) * C22718) *
               C482) *
              C50721 * C292 +
          ((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
            ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
            ((C22719 * C483 + C22714 * C494 + C22720 * C935 + C50848 * C943) *
                 C118 +
             (C22719 * C493 + C22714 * C513 + C22720 * C944 + C50848 * C950) *
                 C50862) *
                C22718) *
               C481 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C480 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50862 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C118) *
                C22718 +
            ((C23167 + C23166) * C50862 + (C23165 + C23164) * C118) * C50993 +
            ((C23163 + C23162) * C50862 + (C23161 + C23160) * C118) * C51009) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50969 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C50801) *
              C50721 * C51010 +
          ((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
            ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
            ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
               C50801 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50969) *
              C50721 * C51011 +
          ((C22778 * C51009 +
            ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
            ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
               C50969 -
           (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                 C50862 +
             (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                 C118) *
                C22718 +
            ((C23492 + C23491) * C50862 + (C23490 + C23489) * C118) * C50993 +
            C23493 * C51009) *
               C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C118 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50862) *
               C51009 +
           ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
           C22778 * C22718) *
              C50737 * C50721 * C113 -
          (C22779 * C22718 +
           ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
           ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
              C50737 * C50721 * C114 +
          (C22778 * C51009 +
           ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
           ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
              C50737 * C50721 * C115 -
          (((C22720 * C675 + C50848 * C677 + C22719 * C137 + C22714 * C145) *
                C50862 +
            (C22720 * C674 + C50848 * C676 + C22719 * C124 + C22714 * C136) *
                C118) *
               C22718 +
           ((C22769 + C22768) * C50862 + (C22767 + C22766) * C118) * C50993 +
           C22779 * C51009) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50737 * C289 -
           (((C22958 + C22959) * C50862 + (C22960 + C22961) * C118) * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50737 * C290 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C118 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50862) *
                C51009 +
            ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
            ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
               C50737 * C291) *
              C292 +
          ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
            ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
            ((C22719 * C294 + C22714 * C305 + C22720 * C301 + C50848 * C318) *
                 C118 +
             (C22719 * C304 + C22714 * C324 + C22720 * C319 + C50848 * C331) *
                 C50862) *
                C22718) *
               C50737 * C290 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50737 * C289 -
           (((C22720 * C1154 + C50848 * C1162 + C22719 * C319 + C22714 * C331) *
                 C50862 +
             (C22720 * C1150 + C50848 * C1155 + C22719 * C301 + C22714 * C318) *
                 C118) *
                C22718 +
            ((C22973 + C22972) * C50862 + (C22971 + C22970) * C118) * C50993 +
            ((C22969 + C22968) * C50862 + (C22967 + C22966) * C118) * C51009) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50737 * C51012 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50737 * C51013 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C118 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50862) *
                C51009 +
            ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
            ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
               C50737 * C1380) *
              C50960 +
          ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
            ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
            ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
               C50737 * C51013 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50737 * C51012 -
           (((C22720 * C1154 + C50848 * C1162 + C22719 * C319 + C22714 * C331) *
                 C50862 +
             (C22720 * C1150 + C50848 * C1155 + C22719 * C301 + C22714 * C318) *
                 C118) *
                C22718 +
            ((C22973 + C22972) * C50862 + (C22971 + C22970) * C118) * C50993 +
            ((C22969 + C22968) * C50862 + (C22967 + C22966) * C118) * C51009) *
               C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50969 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C50801) *
              C51012 +
          ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 + C50848 * C1622) *
                 C118 +
             (C22719 * C938 + C22714 * C947 + C22720 * C1621 + C50848 * C1626) *
                 C50862) *
                C51009 +
            ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
            ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
               C50801 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50969) *
              C51013 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C118 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50862) *
                C51009 +
            ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
            ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
               C50969 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50862 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C118) *
                C22718 +
            ((C22720 * C4240 + C50848 * C4245 + C22719 * C1619 +
              C22714 * C1625) *
                 C50862 +
             (C22720 * C4236 + C50848 * C4241 + C22719 * C1613 +
              C22714 * C1620) *
                 C118) *
                C50993 +
            ((C22720 * C4242 + C50848 * C4246 + C22719 * C1621 +
              C22714 * C1626) *
                 C50862 +
             (C22720 * C4237 + C50848 * C4243 + C22719 * C1614 +
              C22714 * C1622) *
                 C118) *
                C51009) *
               C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C118 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50862) *
               C51009 +
           ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
           C22778 * C22718) *
              C50737 * C1145 -
          (C23330 * C22718 +
           ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
           ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C50862 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C118) *
               C51009) *
              C50737 * C1146 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C118 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C50862) *
               C51009 +
           ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
           ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
              C50737 * C1147 -
          (((C22720 * C3582 + C50848 * C3588 + C22719 * C1156 +
             C22714 * C1163) *
                C50862 +
            (C22720 * C3579 + C50848 * C3583 + C22719 * C1151 +
             C22714 * C1157) *
                C118) *
               C22718 +
           ((C22720 * C3584 + C50848 * C3589 + C22719 * C1158 +
             C22714 * C1164) *
                C50862 +
            (C22720 * C3580 + C50848 * C3585 + C22719 * C1152 +
             C22714 * C1159) *
                C118) *
               C50993 +
           ((C22720 * C3586 + C50848 * C3590 + C22719 * C1160 +
             C22714 * C1165) *
                C50862 +
            (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 +
             C22714 * C1161) *
                C118) *
               C51009) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50737 * C1074 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50737 * C50773) *
              C1076 +
          ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
            ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
            ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
               C50737 * C50773 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50737 * C1074) *
              C1077 +
          ((C22778 * C51009 +
            ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
            ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
               C50737 * C1074 -
           (((C22720 * C322 + C50848 * C333 + C22719 * C321 + C22714 * C332) *
                 C50862 +
             (C22720 * C303 + C50848 * C323 + C22719 * C302 + C22714 * C320) *
                 C118) *
                C22718 +
            ((C23329 + C23328) * C50862 + (C23327 + C23326) * C118) * C50993 +
            C23330 * C51009) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C480 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C481 +
           (((C22719 * C487 + C22714 * C501 + C22720 * C1267 + C50848 * C1275) *
                 C118 +
             (C22719 * C502 + C22714 * C517 + C22720 * C1274 + C50848 * C1279) *
                 C50862) *
                C51009 +
            ((C23160 + C23161) * C118 + (C23162 + C23163) * C50862) * C50993 +
            ((C23164 + C23165) * C118 + (C23166 + C23167) * C50862) * C22718) *
               C482) *
              C1074 +
          ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 + C50848 * C1622) *
                 C118 +
             (C22719 * C938 + C22714 * C947 + C22720 * C1621 + C50848 * C1626) *
                 C50862) *
                C51009 +
            ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
            ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
               C481 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C480 -
           (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
              C22714 * C1277) *
                 C50862 +
             (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
              C22714 * C1271) *
                 C118) *
                C22718 +
            ((C22720 * C3742 + C50848 * C3747 + C22719 * C1272 +
              C22714 * C1278) *
                 C50862 +
             (C22720 * C3738 + C50848 * C3743 + C22719 * C1266 +
              C22714 * C1273) *
                 C118) *
                C50993 +
            ((C22720 * C3744 + C50848 * C3748 + C22719 * C1274 +
              C22714 * C1279) *
                 C50862 +
             (C22720 * C3739 + C50848 * C3745 + C22719 * C1267 +
              C22714 * C1275) *
                 C118) *
                C51009) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C118 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C50862) *
                 C51009 +
             ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
             C22778 * C22718) *
                C50969 -
            (C23493 * C22718 +
             ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
             ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                  C50862 +
              (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                  C118) *
                 C51009) *
                C50801) *
               C1074 +
           ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 +
               C50848 * C1622) *
                  C118 +
              (C22719 * C938 + C22714 * C947 + C22720 * C1621 +
               C50848 * C1626) *
                  C50862) *
                 C51009 +
             ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
             ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
                C50801 -
            (C23330 * C22718 +
             ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
             ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C50862 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C118) *
                 C51009) *
                C50969) *
               C50773) *
              C50960 +
          (((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
             ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
             ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
                C50801 -
            (C22779 * C22718 +
             ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
             ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
                C50969) *
               C1074 +
           ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
             ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
             ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
                C50969 -
            (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 +
               C22714 * C950) *
                  C50862 +
              (C22720 * C1611 + C50848 * C1616 + C22719 * C935 +
               C22714 * C943) *
                  C118) *
                 C22718 +
             ((C23711 + C23710) * C50862 + (C23709 + C23708) * C118) * C50993 +
             ((C23707 + C23706) * C50862 + (C23705 + C23704) * C118) * C51009) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C50737 * C1074 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C50737 * C50773) *
              C1076 +
          ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
            ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
            ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
               C50737 * C50773 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C50737 * C1074) *
              C1077 +
          ((C22778 * C51009 +
            ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
            ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
               C50737 * C1074 -
           (((C22720 * C322 + C50848 * C333 + C22719 * C321 + C22714 * C332) *
                 C50862 +
             (C22720 * C303 + C50848 * C323 + C22719 * C302 + C22714 * C320) *
                 C118) *
                C22718 +
            ((C23329 + C23328) * C50862 + (C23327 + C23326) * C118) * C50993 +
            C23330 * C51009) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C118 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50862) *
               C51009 +
           ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
           C22778 * C22718) *
              C50737 * C1145 -
          (C23330 * C22718 +
           ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
           ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C50862 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C118) *
               C51009) *
              C50737 * C1146 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C118 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C50862) *
               C51009 +
           ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
           ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
              C50737 * C1147 -
          (((C22720 * C3582 + C50848 * C3588 + C22719 * C1156 +
             C22714 * C1163) *
                C50862 +
            (C22720 * C3579 + C50848 * C3583 + C22719 * C1151 +
             C22714 * C1157) *
                C118) *
               C22718 +
           ((C22720 * C3584 + C50848 * C3589 + C22719 * C1158 +
             C22714 * C1164) *
                C50862 +
            (C22720 * C3580 + C50848 * C3585 + C22719 * C1152 +
             C22714 * C1159) *
                C118) *
               C50993 +
           ((C22720 * C3586 + C50848 * C3590 + C22719 * C1160 +
             C22714 * C1165) *
                C50862 +
            (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 +
             C22714 * C1161) *
                C118) *
               C51009) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C118 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C50862) *
                 C51009 +
             ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
             C22778 * C22718) *
                C1725 -
            (C23493 * C22718 +
             ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
             ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                  C50862 +
              (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                  C118) *
                 C51009) *
                C50801) *
               C50968 +
           ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 +
               C50848 * C1622) *
                  C118 +
              (C22719 * C938 + C22714 * C947 + C22720 * C1621 +
               C50848 * C1626) *
                  C50862) *
                 C51009 +
             ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
             ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
                C50801 -
            (C23330 * C22718 +
             ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
             ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C50862 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C118) *
                 C51009) *
                C1725) *
               C50773) *
              C50960 +
          (((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
             ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
             ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
                C50801 -
            (C22779 * C22718 +
             ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
             ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
                C1725) *
               C50968 +
           ((((C22965 + C22964) * C118 + (C22963 + C22962) * C50862) * C51009 +
             ((C22961 + C22960) * C118 + (C22959 + C22958) * C50862) * C50993 +
             ((C23326 + C23327) * C118 + (C23328 + C23329) * C50862) * C22718) *
                C1725 -
            (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 +
               C22714 * C950) *
                  C50862 +
              (C22720 * C1611 + C50848 * C1616 + C22719 * C935 +
               C22714 * C943) *
                  C118) *
                 C22718 +
             ((C23711 + C23710) * C50862 + (C23709 + C23708) * C118) * C50993 +
             ((C23707 + C23706) * C50862 + (C23705 + C23704) * C118) * C51009) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C51014 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C51015 +
           (((C22719 * C487 + C22714 * C501 + C22720 * C1267 + C50848 * C1275) *
                 C118 +
             (C22719 * C502 + C22714 * C517 + C22720 * C1274 + C50848 * C1279) *
                 C50862) *
                C51009 +
            ((C23160 + C23161) * C118 + (C23162 + C23163) * C50862) * C50993 +
            ((C23164 + C23165) * C118 + (C23166 + C23167) * C50862) * C22718) *
               C2141) *
              C50968 +
          ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 + C50848 * C1622) *
                 C118 +
             (C22719 * C938 + C22714 * C947 + C22720 * C1621 + C50848 * C1626) *
                 C50862) *
                C51009 +
            ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
            ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
               C51015 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C51014 -
           (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
              C22714 * C1277) *
                 C50862 +
             (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
              C22714 * C1271) *
                 C118) *
                C22718 +
            ((C22720 * C3742 + C50848 * C3747 + C22719 * C1272 +
              C22714 * C1278) *
                 C50862 +
             (C22720 * C3738 + C50848 * C3743 + C22719 * C1266 +
              C22714 * C1273) *
                 C118) *
                C50993 +
            ((C22720 * C3744 + C50848 * C3748 + C22719 * C1274 +
              C22714 * C1279) *
                 C50862 +
             (C22720 * C3739 + C50848 * C3745 + C22719 * C1267 +
              C22714 * C1275) *
                 C118) *
                C51009) *
               C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C1725 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C50801) *
              C289 +
          ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 + C50848 * C1622) *
                 C118 +
             (C22719 * C938 + C22714 * C947 + C22720 * C1621 + C50848 * C1626) *
                 C50862) *
                C51009 +
            ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
            ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
               C50801 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C1725) *
              C290 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C118 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50862) *
                C51009 +
            ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
            ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
               C1725 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50862 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C118) *
                C22718 +
            ((C22720 * C4240 + C50848 * C4245 + C22719 * C1619 +
              C22714 * C1625) *
                 C50862 +
             (C22720 * C4236 + C50848 * C4241 + C22719 * C1613 +
              C22714 * C1620) *
                 C118) *
                C50993 +
            ((C22720 * C4242 + C50848 * C4246 + C22719 * C1621 +
              C22714 * C1626) *
                 C50862 +
             (C22720 * C4237 + C50848 * C4243 + C22719 * C1614 +
              C22714 * C1622) *
                 C118) *
                C51009) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C1725 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C50801) *
              C50721 * C1076 +
          ((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
            ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
            ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
               C50801 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C1725) *
              C50721 * C1077 +
          ((C22778 * C51009 +
            ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
            ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
               C1725 -
           (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                 C50862 +
             (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                 C118) *
                C22718 +
            ((C23492 + C23491) * C50862 + (C23490 + C23489) * C118) * C50993 +
            C23493 * C51009) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C118 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50862) *
               C51009 +
           ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
           C22778 * C22718) *
              C1891 -
          (C23493 * C22718 +
           ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
           ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                C50862 +
            (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                C118) *
               C51009) *
              C1892 +
          (((C22719 * C487 + C22714 * C501 + C22720 * C1267 + C50848 * C1275) *
                C118 +
            (C22719 * C502 + C22714 * C517 + C22720 * C1274 + C50848 * C1279) *
                C50862) *
               C51009 +
           ((C23160 + C23161) * C118 + (C23162 + C23163) * C50862) * C50993 +
           ((C23164 + C23165) * C118 + (C23166 + C23167) * C50862) * C22718) *
              C1893 -
          (((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
             C22714 * C1908) *
                C50862 +
            (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
             C22714 * C1902) *
                C118) *
               C22718 +
           ((C22720 * C4642 + C50848 * C4647 + C22719 * C1903 +
             C22714 * C1909) *
                C50862 +
            (C22720 * C4638 + C50848 * C4643 + C22719 * C1897 +
             C22714 * C1904) *
                C118) *
               C50993 +
           ((C22720 * C4644 + C50848 * C4648 + C22719 * C1905 +
             C22714 * C1910) *
                C50862 +
            (C22720 * C4639 + C50848 * C4645 + C22719 * C1898 +
             C22714 * C1906) *
                C118) *
               C51009) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C51014 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C51015 +
           (((C22719 * C487 + C22714 * C501 + C22720 * C1267 + C50848 * C1275) *
                 C118 +
             (C22719 * C502 + C22714 * C517 + C22720 * C1274 + C50848 * C1279) *
                 C50862) *
                C51009 +
            ((C23160 + C23161) * C118 + (C23162 + C23163) * C50862) * C50993 +
            ((C23164 + C23165) * C118 + (C23166 + C23167) * C50862) * C22718) *
               C2141) *
              C50721 * C50960 +
          ((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
            ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
            ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
               C51015 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C51014 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50862 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C118) *
                C22718 +
            ((C23167 + C23166) * C50862 + (C23165 + C23164) * C118) * C50993 +
            ((C23163 + C23162) * C50862 + (C23161 + C23160) * C118) * C51009) *
               C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C1725 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C50801) *
              C50721 * C1076 +
          ((((C23159 + C23158) * C118 + (C23157 + C23156) * C50862) * C51009 +
            ((C23155 + C23154) * C118 + (C23153 + C23152) * C50862) * C50993 +
            ((C23489 + C23490) * C118 + (C23491 + C23492) * C50862) * C22718) *
               C50801 -
           (C22779 * C22718 +
            ((C22761 + C22760) * C50862 + (C22759 + C22758) * C118) * C50993 +
            ((C22757 + C22756) * C50862 + (C22755 + C22754) * C118) * C51009) *
               C1725) *
              C50721 * C1077 +
          ((C22778 * C51009 +
            ((C22765 + C22764) * C118 + (C22763 + C22762) * C50862) * C50993 +
            ((C22766 + C22767) * C118 + (C22768 + C22769) * C50862) * C22718) *
               C1725 -
           (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                 C50862 +
             (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                 C118) *
                C22718 +
            ((C23492 + C23491) * C50862 + (C23490 + C23489) * C118) * C50993 +
            C23493 * C51009) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C118 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50862) *
                C51009 +
            ((C22754 + C22755) * C118 + (C22756 + C22757) * C50862) * C50993 +
            C22778 * C22718) *
               C1725 -
           (C23493 * C22718 +
            ((C23156 + C23157) * C50862 + (C23158 + C23159) * C118) * C50993 +
            ((C22720 * C938 + C50848 * C947 + C22719 * C499 + C22714 * C516) *
                 C50862 +
             (C22720 * C932 + C50848 * C937 + C22719 * C486 + C22714 * C500) *
                 C118) *
                C51009) *
               C50801) *
              C289 +
          ((((C22719 * C932 + C22714 * C937 + C22720 * C1614 + C50848 * C1622) *
                 C118 +
             (C22719 * C938 + C22714 * C947 + C22720 * C1621 + C50848 * C1626) *
                 C50862) *
                C51009 +
            ((C23704 + C23705) * C118 + (C23706 + C23707) * C50862) * C50993 +
            ((C23708 + C23709) * C118 + (C23710 + C23711) * C50862) * C22718) *
               C50801 -
           (C23330 * C22718 +
            ((C22962 + C22963) * C50862 + (C22964 + C22965) * C118) * C50993 +
            ((C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50862 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C118) *
                C51009) *
               C1725) *
              C290 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C118 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50862) *
                C51009 +
            ((C22966 + C22967) * C118 + (C22968 + C22969) * C50862) * C50993 +
            ((C22970 + C22971) * C118 + (C22972 + C22973) * C50862) * C22718) *
               C1725 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50862 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C118) *
                C22718 +
            ((C22720 * C4240 + C50848 * C4245 + C22719 * C1619 +
              C22714 * C1625) *
                 C50862 +
             (C22720 * C4236 + C50848 * C4241 + C22719 * C1613 +
              C22714 * C1620) *
                 C118) *
                C50993 +
            ((C22720 * C4242 + C50848 * C4246 + C22719 * C1621 +
              C22714 * C1626) *
                 C50862 +
             (C22720 * C4237 + C50848 * C4243 + C22719 * C1614 +
              C22714 * C1622) *
                 C118) *
                C51009) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50737 * C50968 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50737 * C50773) *
                      C51010 +
                  ((((C25799 + C25798 + C25797) * C118 +
                     (C25796 + C25795 + C25794) * C50862) *
                        C25564 +
                    ((C26146 + C26147 + C26148) * C118 +
                     (C26149 + C26150 + C26151) * C50862) *
                        C50680) *
                       C50737 * C50773 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50737 * C50968) *
                      C51011 +
                  ((((C25617 + C25616 + C25615) * C118 +
                     (C25614 + C25613 + C25612) * C50862) *
                        C25564 +
                    ((C25618 + C25619 + C25620) * C118 +
                     (C25621 + C25622 + C25623) * C50862) *
                        C50680) *
                       C50737 * C50968 -
                   (((C25568 * C1154 + C25563 * C1162 + C25567 * C319 +
                      C51005 * C331 + C25566 * C304 + C51016 * C324) *
                         C50862 +
                     (C25568 * C1150 + C25563 * C1155 + C25567 * C301 +
                      C51005 * C318 + C25566 * C294 + C51016 * C305) *
                         C118) *
                        C50680 +
                    ((C26151 + C26150 + C26149) * C50862 +
                     (C26148 + C26147 + C26146) * C118) *
                        C25564) *
                       C50737 * C50773) *
                      C673)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                       C51005 * C311 + C25568 * C298 + C25563 * C312) *
                          C118 +
                      (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                       C51005 * C327 + C25568 * C313 + C25563 * C328) *
                          C50862) *
                         C25564 +
                     ((C25606 + C25607 + C25608) * C118 +
                      (C25609 + C25610 + C25611) * C50862) *
                         C50680) *
                        C50969 -
                    (((C25976 + C25977 + C25978) * C50862 +
                      (C25979 + C25980 + C25981) * C118) *
                         C50680 +
                     ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                       C51005 * C947 + C25566 * C499 + C51016 * C516) *
                          C50862 +
                      (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                       C51005 * C937 + C25566 * C486 + C51016 * C500) *
                          C118) *
                         C25564) *
                        C50801) *
                       C50968 +
                   ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                       C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                          C118 +
                      (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                       C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                          C50862) *
                         C25564 +
                     ((C26522 + C26523 + C26524) * C118 +
                      (C26525 + C26526 + C26527) * C50862) *
                         C50680) *
                        C50801 -
                    (((C25794 + C25795 + C25796) * C50862 +
                      (C25797 + C25798 + C25799) * C118) *
                         C50680 +
                     ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                       C51005 * C328 + C25566 * C310 + C51016 * C327) *
                          C50862 +
                      (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                       C51005 * C312 + C25566 * C297 + C51016 * C311) *
                          C118) *
                         C25564) *
                        C50969) *
                       C50773) *
                      C292 +
                  (((((C25981 + C25980 + C25979) * C118 +
                      (C25978 + C25977 + C25976) * C50862) *
                         C25564 +
                     ((C26310 + C26311 + C26312) * C118 +
                      (C26313 + C26314 + C26315) * C50862) *
                         C50680) *
                        C50801 -
                    (((C25612 + C25613 + C25614) * C50862 +
                      (C25615 + C25616 + C25617) * C118) *
                         C50680 +
                     ((C25611 + C25610 + C25609) * C50862 +
                      (C25608 + C25607 + C25606) * C118) *
                         C25564) *
                        C50969) *
                       C50968 +
                   ((((C25799 + C25798 + C25797) * C118 +
                      (C25796 + C25795 + C25794) * C50862) *
                         C25564 +
                     ((C26146 + C26147 + C26148) * C118 +
                      (C26149 + C26150 + C26151) * C50862) *
                         C50680) *
                        C50969 -
                    (((C25568 * C4238 + C25563 * C4244 + C25567 * C1617 +
                       C51005 * C1624 + C25566 * C942 + C51016 * C949) *
                          C50862 +
                      (C25568 * C4235 + C25563 * C4239 + C25567 * C1612 +
                       C51005 * C1618 + C25566 * C934 + C51016 * C941) *
                          C118) *
                         C50680 +
                     ((C26527 + C26526 + C26525) * C50862 +
                      (C26524 + C26523 + C26522) * C118) *
                         C25564) *
                        C50801) *
                       C50773) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50737 * C289 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50737 * C290 +
                   (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                      C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                         C118 +
                     (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                      C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                         C50862) *
                        C25564 +
                    ((C25800 + C25801 + C25802) * C118 +
                     (C25803 + C25804 + C25805) * C50862) *
                        C50680) *
                       C50737 * C291) *
                      C292 +
                  ((((C25799 + C25798 + C25797) * C118 +
                     (C25796 + C25795 + C25794) * C50862) *
                        C25564 +
                    ((C25566 * C295 + C51016 * C307 + C25567 * C300 +
                      C51005 * C316 + C25568 * C1151 + C25563 * C1157) *
                         C118 +
                     (C25566 * C306 + C51016 * C325 + C25567 * C317 +
                      C51005 * C330 + C25568 * C1156 + C25563 * C1163) *
                         C50862) *
                        C50680) *
                       C50737 * C290 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50737 * C289 -
                   (((C25568 * C3582 + C25563 * C3588 + C25567 * C1156 +
                      C51005 * C1163 + C25566 * C317 + C51016 * C330) *
                         C50862 +
                     (C25568 * C3579 + C25563 * C3583 + C25567 * C1151 +
                      C51005 * C1157 + C25566 * C300 + C51016 * C316) *
                         C118) *
                        C50680 +
                    ((C25805 + C25804 + C25803) * C50862 +
                     (C25802 + C25801 + C25800) * C118) *
                        C25564) *
                       C50737 * C291) *
                      C50708)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C118 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C50862) *
                       C25564 +
                   ((C25606 + C25607 + C25608) * C118 +
                    (C25609 + C25610 + C25611) * C50862) *
                       C50680) *
                      C50737 * C50721 * C113 -
                  (((C25612 + C25613 + C25614) * C50862 +
                    (C25615 + C25616 + C25617) * C118) *
                       C50680 +
                   ((C25611 + C25610 + C25609) * C50862 +
                    (C25608 + C25607 + C25606) * C118) *
                       C25564) *
                      C50737 * C50721 * C114 +
                  (((C25617 + C25616 + C25615) * C118 +
                    (C25614 + C25613 + C25612) * C50862) *
                       C25564 +
                   ((C25618 + C25619 + C25620) * C118 +
                    (C25621 + C25622 + C25623) * C50862) *
                       C50680) *
                      C50737 * C50721 * C115 -
                  (((C25568 * C322 + C25563 * C333 + C25567 * C321 +
                     C51005 * C332 + C25566 * C134 + C51016 * C144) *
                        C50862 +
                    (C25568 * C303 + C25563 * C323 + C25567 * C302 +
                     C51005 * C320 + C25566 * C123 + C51016 * C135) *
                        C118) *
                       C50680 +
                   ((C25623 + C25622 + C25621) * C50862 +
                    (C25620 + C25619 + C25618) * C118) *
                       C25564) *
                      C50737 * C50721 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C480 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C481 +
                   (((C25566 * C487 + C51016 * C501 + C25567 * C1267 +
                      C51005 * C1275 + C25568 * C3739 + C25563 * C3745) *
                         C118 +
                     (C25566 * C502 + C51016 * C517 + C25567 * C1274 +
                      C51005 * C1279 + C25568 * C3744 + C25563 * C3748) *
                         C50862) *
                        C25564 +
                    ((C25982 + C25983 + C25984) * C118 +
                     (C25985 + C25986 + C25987) * C50862) *
                        C50680) *
                       C482) *
                      C50721 * C292 +
                  ((((C25981 + C25980 + C25979) * C118 +
                     (C25978 + C25977 + C25976) * C50862) *
                        C25564 +
                    ((C25566 * C484 + C51016 * C496 + C25567 * C934 +
                      C51005 * C941 + C25568 * C1612 + C25563 * C1618) *
                         C118 +
                     (C25566 * C495 + C51016 * C514 + C25567 * C942 +
                      C51005 * C949 + C25568 * C1617 + C25563 * C1624) *
                         C50862) *
                        C50680) *
                       C481 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C480 -
                   (((C25568 * C3740 + C25563 * C3746 + C25567 * C1270 +
                      C51005 * C1277 + C25566 * C506 + C51016 * C519) *
                         C50862 +
                     (C25568 * C3737 + C25563 * C3741 + C25567 * C1265 +
                      C51005 * C1271 + C25566 * C489 + C51016 * C505) *
                         C118) *
                        C50680 +
                    ((C25987 + C25986 + C25985) * C50862 +
                     (C25984 + C25983 + C25982) * C118) *
                        C25564) *
                       C482) *
                      C50721 * C50708)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50969 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C50801) *
                      C50721 * C51010 +
                  ((((C25981 + C25980 + C25979) * C118 +
                     (C25978 + C25977 + C25976) * C50862) *
                        C25564 +
                    ((C26310 + C26311 + C26312) * C118 +
                     (C26313 + C26314 + C26315) * C50862) *
                        C50680) *
                       C50801 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50969) *
                      C50721 * C51011 +
                  ((((C25617 + C25616 + C25615) * C118 +
                     (C25614 + C25613 + C25612) * C50862) *
                        C25564 +
                    ((C25618 + C25619 + C25620) * C118 +
                     (C25621 + C25622 + C25623) * C50862) *
                        C50680) *
                       C50969 -
                   (((C25568 * C1615 + C25563 * C1623 + C25567 * C944 +
                      C51005 * C950 + C25566 * C493 + C51016 * C513) *
                         C50862 +
                     (C25568 * C1611 + C25563 * C1616 + C25567 * C935 +
                      C51005 * C943 + C25566 * C483 + C51016 * C494) *
                         C118) *
                        C50680 +
                    ((C26315 + C26314 + C26313) * C50862 +
                     (C26312 + C26311 + C26310) * C118) *
                        C25564) *
                       C50801) *
                      C50721 * C673)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C118 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C50862) *
                       C25564 +
                   ((C25606 + C25607 + C25608) * C118 +
                    (C25609 + C25610 + C25611) * C50862) *
                       C50680) *
                      C50737 * C50721 * C113 -
                  (((C25612 + C25613 + C25614) * C50862 +
                    (C25615 + C25616 + C25617) * C118) *
                       C50680 +
                   ((C25611 + C25610 + C25609) * C50862 +
                    (C25608 + C25607 + C25606) * C118) *
                       C25564) *
                      C50737 * C50721 * C114 +
                  (((C25617 + C25616 + C25615) * C118 +
                    (C25614 + C25613 + C25612) * C50862) *
                       C25564 +
                   ((C25618 + C25619 + C25620) * C118 +
                    (C25621 + C25622 + C25623) * C50862) *
                       C50680) *
                      C50737 * C50721 * C115 -
                  (((C25568 * C322 + C25563 * C333 + C25567 * C321 +
                     C51005 * C332 + C25566 * C134 + C51016 * C144) *
                        C50862 +
                    (C25568 * C303 + C25563 * C323 + C25567 * C302 +
                     C51005 * C320 + C25566 * C123 + C51016 * C135) *
                        C118) *
                       C50680 +
                   ((C25623 + C25622 + C25621) * C50862 +
                    (C25620 + C25619 + C25618) * C118) *
                       C25564) *
                      C50737 * C50721 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50737 * C289 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50737 * C290 +
                   (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                      C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                         C118 +
                     (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                      C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                         C50862) *
                        C25564 +
                    ((C25800 + C25801 + C25802) * C118 +
                     (C25803 + C25804 + C25805) * C50862) *
                        C50680) *
                       C50737 * C291) *
                      C292 +
                  ((((C25799 + C25798 + C25797) * C118 +
                     (C25796 + C25795 + C25794) * C50862) *
                        C25564 +
                    ((C25566 * C295 + C51016 * C307 + C25567 * C300 +
                      C51005 * C316 + C25568 * C1151 + C25563 * C1157) *
                         C118 +
                     (C25566 * C306 + C51016 * C325 + C25567 * C317 +
                      C51005 * C330 + C25568 * C1156 + C25563 * C1163) *
                         C50862) *
                        C50680) *
                       C50737 * C290 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50737 * C289 -
                   (((C25568 * C3582 + C25563 * C3588 + C25567 * C1156 +
                      C51005 * C1163 + C25566 * C317 + C51016 * C330) *
                         C50862 +
                     (C25568 * C3579 + C25563 * C3583 + C25567 * C1151 +
                      C51005 * C1157 + C25566 * C300 + C51016 * C316) *
                         C118) *
                        C50680 +
                    ((C25805 + C25804 + C25803) * C50862 +
                     (C25802 + C25801 + C25800) * C118) *
                        C25564) *
                       C50737 * C291) *
                      C50708)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50737 * C51012 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50737 * C51013 +
                   (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                      C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                         C118 +
                     (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                      C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                         C50862) *
                        C25564 +
                    ((C25800 + C25801 + C25802) * C118 +
                     (C25803 + C25804 + C25805) * C50862) *
                        C50680) *
                       C50737 * C1380) *
                      C50960 +
                  ((((C25799 + C25798 + C25797) * C118 +
                     (C25796 + C25795 + C25794) * C50862) *
                        C25564 +
                    ((C26146 + C26147 + C26148) * C118 +
                     (C26149 + C26150 + C26151) * C50862) *
                        C50680) *
                       C50737 * C51013 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50737 * C51012 -
                   (((C25568 * C3582 + C25563 * C3588 + C25567 * C1156 +
                      C51005 * C1163 + C25566 * C317 + C51016 * C330) *
                         C50862 +
                     (C25568 * C3579 + C25563 * C3583 + C25567 * C1151 +
                      C51005 * C1157 + C25566 * C300 + C51016 * C316) *
                         C118) *
                        C50680 +
                    ((C25805 + C25804 + C25803) * C50862 +
                     (C25802 + C25801 + C25800) * C118) *
                        C25564) *
                       C50737 * C1380) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50969 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C50801) *
                      C51012 +
                  ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                      C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                         C118 +
                     (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                      C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                         C50862) *
                        C25564 +
                    ((C26522 + C26523 + C26524) * C118 +
                     (C26525 + C26526 + C26527) * C50862) *
                        C50680) *
                       C50801 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50969) *
                      C51013 +
                  ((((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                      C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                         C118 +
                     (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                      C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                         C50862) *
                        C25564 +
                    ((C25800 + C25801 + C25802) * C118 +
                     (C25803 + C25804 + C25805) * C50862) *
                        C50680) *
                       C50969 -
                   (((C25568 * C9885 + C25563 * C9889 + C25567 * C4240 +
                      C51005 * C4245 + C25566 * C1619 + C51016 * C1625) *
                         C50862 +
                     (C25568 * C9883 + C25563 * C9886 + C25567 * C4236 +
                      C51005 * C4241 + C25566 * C1613 + C51016 * C1620) *
                         C118) *
                        C50680 +
                    ((C25568 * C9887 + C25563 * C9890 + C25567 * C4242 +
                      C51005 * C4246 + C25566 * C1621 + C51016 * C1626) *
                         C50862 +
                     (C25568 * C9884 + C25563 * C9888 + C25567 * C4237 +
                      C51005 * C4243 + C25566 * C1614 + C51016 * C1622) *
                         C118) *
                        C25564) *
                       C50801) *
                      C1380) *
                 C50702) /
                (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C118 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C50862) *
                       C25564 +
                   ((C25606 + C25607 + C25608) * C118 +
                    (C25609 + C25610 + C25611) * C50862) *
                       C50680) *
                      C50737 * C1145 -
                  (((C25794 + C25795 + C25796) * C50862 +
                    (C25797 + C25798 + C25799) * C118) *
                       C50680 +
                   ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C50862 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C118) *
                       C25564) *
                      C50737 * C1146 +
                  (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C118 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C50862) *
                       C25564 +
                   ((C25800 + C25801 + C25802) * C118 +
                    (C25803 + C25804 + C25805) * C50862) *
                       C50680) *
                      C50737 * C1147 -
                  (((C25568 * C9237 + C25563 * C9241 + C25567 * C3584 +
                     C51005 * C3589 + C25566 * C1158 + C51016 * C1164) *
                        C50862 +
                    (C25568 * C9235 + C25563 * C9238 + C25567 * C3580 +
                     C51005 * C3585 + C25566 * C1152 + C51016 * C1159) *
                        C118) *
                       C50680 +
                   ((C25568 * C9239 + C25563 * C9242 + C25567 * C3586 +
                     C51005 * C3590 + C25566 * C1160 + C51016 * C1165) *
                        C50862 +
                    (C25568 * C9236 + C25563 * C9240 + C25567 * C3581 +
                     C51005 * C3587 + C25566 * C1153 + C51016 * C1161) *
                        C118) *
                       C25564) *
                      C50737 * C1148) *
                 C50702) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50737 * C1074 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50737 * C50773) *
                      C1076 +
                  ((((C25799 + C25798 + C25797) * C118 +
                     (C25796 + C25795 + C25794) * C50862) *
                        C25564 +
                    ((C26146 + C26147 + C26148) * C118 +
                     (C26149 + C26150 + C26151) * C50862) *
                        C50680) *
                       C50737 * C50773 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50737 * C1074) *
                      C1077 +
                  ((((C25617 + C25616 + C25615) * C118 +
                     (C25614 + C25613 + C25612) * C50862) *
                        C25564 +
                    ((C25618 + C25619 + C25620) * C118 +
                     (C25621 + C25622 + C25623) * C50862) *
                        C50680) *
                       C50737 * C1074 -
                   (((C25568 * C1154 + C25563 * C1162 + C25567 * C319 +
                      C51005 * C331 + C25566 * C304 + C51016 * C324) *
                         C50862 +
                     (C25568 * C1150 + C25563 * C1155 + C25567 * C301 +
                      C51005 * C318 + C25566 * C294 + C51016 * C305) *
                         C118) *
                        C50680 +
                    ((C26151 + C26150 + C26149) * C50862 +
                     (C26148 + C26147 + C26146) * C118) *
                        C25564) *
                       C50737 * C50773) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C480 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C481 +
                   (((C25566 * C487 + C51016 * C501 + C25567 * C1267 +
                      C51005 * C1275 + C25568 * C3739 + C25563 * C3745) *
                         C118 +
                     (C25566 * C502 + C51016 * C517 + C25567 * C1274 +
                      C51005 * C1279 + C25568 * C3744 + C25563 * C3748) *
                         C50862) *
                        C25564 +
                    ((C25982 + C25983 + C25984) * C118 +
                     (C25985 + C25986 + C25987) * C50862) *
                        C50680) *
                       C482) *
                      C1074 +
                  ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                      C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                         C118 +
                     (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                      C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                         C50862) *
                        C25564 +
                    ((C26522 + C26523 + C26524) * C118 +
                     (C26525 + C26526 + C26527) * C50862) *
                        C50680) *
                       C481 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C480 -
                   (((C25568 * C9391 + C25563 * C9395 + C25567 * C3742 +
                      C51005 * C3747 + C25566 * C1272 + C51016 * C1278) *
                         C50862 +
                     (C25568 * C9389 + C25563 * C9392 + C25567 * C3738 +
                      C51005 * C3743 + C25566 * C1266 + C51016 * C1273) *
                         C118) *
                        C50680 +
                    ((C25568 * C9393 + C25563 * C9396 + C25567 * C3744 +
                      C51005 * C3748 + C25566 * C1274 + C51016 * C1279) *
                         C50862 +
                     (C25568 * C9390 + C25563 * C9394 + C25567 * C3739 +
                      C51005 * C3745 + C25566 * C1267 + C51016 * C1275) *
                         C118) *
                        C25564) *
                       C482) *
                      C50773) *
                 C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                       C51005 * C311 + C25568 * C298 + C25563 * C312) *
                          C118 +
                      (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                       C51005 * C327 + C25568 * C313 + C25563 * C328) *
                          C50862) *
                         C25564 +
                     ((C25606 + C25607 + C25608) * C118 +
                      (C25609 + C25610 + C25611) * C50862) *
                         C50680) *
                        C50969 -
                    (((C25976 + C25977 + C25978) * C50862 +
                      (C25979 + C25980 + C25981) * C118) *
                         C50680 +
                     ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                       C51005 * C947 + C25566 * C499 + C51016 * C516) *
                          C50862 +
                      (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                       C51005 * C937 + C25566 * C486 + C51016 * C500) *
                          C118) *
                         C25564) *
                        C50801) *
                       C1074 +
                   ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                       C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                          C118 +
                      (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                       C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                          C50862) *
                         C25564 +
                     ((C26522 + C26523 + C26524) * C118 +
                      (C26525 + C26526 + C26527) * C50862) *
                         C50680) *
                        C50801 -
                    (((C25794 + C25795 + C25796) * C50862 +
                      (C25797 + C25798 + C25799) * C118) *
                         C50680 +
                     ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                       C51005 * C328 + C25566 * C310 + C51016 * C327) *
                          C50862 +
                      (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                       C51005 * C312 + C25566 * C297 + C51016 * C311) *
                          C118) *
                         C25564) *
                        C50969) *
                       C50773) *
                      C50960 +
                  (((((C25981 + C25980 + C25979) * C118 +
                      (C25978 + C25977 + C25976) * C50862) *
                         C25564 +
                     ((C26310 + C26311 + C26312) * C118 +
                      (C26313 + C26314 + C26315) * C50862) *
                         C50680) *
                        C50801 -
                    (((C25612 + C25613 + C25614) * C50862 +
                      (C25615 + C25616 + C25617) * C118) *
                         C50680 +
                     ((C25611 + C25610 + C25609) * C50862 +
                      (C25608 + C25607 + C25606) * C118) *
                         C25564) *
                        C50969) *
                       C1074 +
                   ((((C25799 + C25798 + C25797) * C118 +
                      (C25796 + C25795 + C25794) * C50862) *
                         C25564 +
                     ((C26146 + C26147 + C26148) * C118 +
                      (C26149 + C26150 + C26151) * C50862) *
                         C50680) *
                        C50969 -
                    (((C25568 * C4238 + C25563 * C4244 + C25567 * C1617 +
                       C51005 * C1624 + C25566 * C942 + C51016 * C949) *
                          C50862 +
                      (C25568 * C4235 + C25563 * C4239 + C25567 * C1612 +
                       C51005 * C1618 + C25566 * C934 + C51016 * C941) *
                          C118) *
                         C50680 +
                     ((C26527 + C26526 + C26525) * C50862 +
                      (C26524 + C26523 + C26522) * C118) *
                         C25564) *
                        C50801) *
                       C50773) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C50737 * C1074 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C50737 * C50773) *
                      C1076 +
                  ((((C25799 + C25798 + C25797) * C118 +
                     (C25796 + C25795 + C25794) * C50862) *
                        C25564 +
                    ((C26146 + C26147 + C26148) * C118 +
                     (C26149 + C26150 + C26151) * C50862) *
                        C50680) *
                       C50737 * C50773 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C50737 * C1074) *
                      C1077 +
                  ((((C25617 + C25616 + C25615) * C118 +
                     (C25614 + C25613 + C25612) * C50862) *
                        C25564 +
                    ((C25618 + C25619 + C25620) * C118 +
                     (C25621 + C25622 + C25623) * C50862) *
                        C50680) *
                       C50737 * C1074 -
                   (((C25568 * C1154 + C25563 * C1162 + C25567 * C319 +
                      C51005 * C331 + C25566 * C304 + C51016 * C324) *
                         C50862 +
                     (C25568 * C1150 + C25563 * C1155 + C25567 * C301 +
                      C51005 * C318 + C25566 * C294 + C51016 * C305) *
                         C118) *
                        C50680 +
                    ((C26151 + C26150 + C26149) * C50862 +
                     (C26148 + C26147 + C26146) * C118) *
                        C25564) *
                       C50737 * C50773) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C118 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C50862) *
                       C25564 +
                   ((C25606 + C25607 + C25608) * C118 +
                    (C25609 + C25610 + C25611) * C50862) *
                       C50680) *
                      C50737 * C1145 -
                  (((C25794 + C25795 + C25796) * C50862 +
                    (C25797 + C25798 + C25799) * C118) *
                       C50680 +
                   ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C50862 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C118) *
                       C25564) *
                      C50737 * C1146 +
                  (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C118 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C50862) *
                       C25564 +
                   ((C25800 + C25801 + C25802) * C118 +
                    (C25803 + C25804 + C25805) * C50862) *
                       C50680) *
                      C50737 * C1147 -
                  (((C25568 * C9237 + C25563 * C9241 + C25567 * C3584 +
                     C51005 * C3589 + C25566 * C1158 + C51016 * C1164) *
                        C50862 +
                    (C25568 * C9235 + C25563 * C9238 + C25567 * C3580 +
                     C51005 * C3585 + C25566 * C1152 + C51016 * C1159) *
                        C118) *
                       C50680 +
                   ((C25568 * C9239 + C25563 * C9242 + C25567 * C3586 +
                     C51005 * C3590 + C25566 * C1160 + C51016 * C1165) *
                        C50862 +
                    (C25568 * C9236 + C25563 * C9240 + C25567 * C3581 +
                     C51005 * C3587 + C25566 * C1153 + C51016 * C1161) *
                        C118) *
                       C25564) *
                      C50737 * C1148) *
                 C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                       C51005 * C311 + C25568 * C298 + C25563 * C312) *
                          C118 +
                      (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                       C51005 * C327 + C25568 * C313 + C25563 * C328) *
                          C50862) *
                         C25564 +
                     ((C25606 + C25607 + C25608) * C118 +
                      (C25609 + C25610 + C25611) * C50862) *
                         C50680) *
                        C1725 -
                    (((C25976 + C25977 + C25978) * C50862 +
                      (C25979 + C25980 + C25981) * C118) *
                         C50680 +
                     ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                       C51005 * C947 + C25566 * C499 + C51016 * C516) *
                          C50862 +
                      (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                       C51005 * C937 + C25566 * C486 + C51016 * C500) *
                          C118) *
                         C25564) *
                        C50801) *
                       C50968 +
                   ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                       C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                          C118 +
                      (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                       C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                          C50862) *
                         C25564 +
                     ((C26522 + C26523 + C26524) * C118 +
                      (C26525 + C26526 + C26527) * C50862) *
                         C50680) *
                        C50801 -
                    (((C25794 + C25795 + C25796) * C50862 +
                      (C25797 + C25798 + C25799) * C118) *
                         C50680 +
                     ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                       C51005 * C328 + C25566 * C310 + C51016 * C327) *
                          C50862 +
                      (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                       C51005 * C312 + C25566 * C297 + C51016 * C311) *
                          C118) *
                         C25564) *
                        C1725) *
                       C50773) *
                      C50960 +
                  (((((C25981 + C25980 + C25979) * C118 +
                      (C25978 + C25977 + C25976) * C50862) *
                         C25564 +
                     ((C26310 + C26311 + C26312) * C118 +
                      (C26313 + C26314 + C26315) * C50862) *
                         C50680) *
                        C50801 -
                    (((C25612 + C25613 + C25614) * C50862 +
                      (C25615 + C25616 + C25617) * C118) *
                         C50680 +
                     ((C25611 + C25610 + C25609) * C50862 +
                      (C25608 + C25607 + C25606) * C118) *
                         C25564) *
                        C1725) *
                       C50968 +
                   ((((C25799 + C25798 + C25797) * C118 +
                      (C25796 + C25795 + C25794) * C50862) *
                         C25564 +
                     ((C26146 + C26147 + C26148) * C118 +
                      (C26149 + C26150 + C26151) * C50862) *
                         C50680) *
                        C1725 -
                    (((C25568 * C4238 + C25563 * C4244 + C25567 * C1617 +
                       C51005 * C1624 + C25566 * C942 + C51016 * C949) *
                          C50862 +
                      (C25568 * C4235 + C25563 * C4239 + C25567 * C1612 +
                       C51005 * C1618 + C25566 * C934 + C51016 * C941) *
                          C118) *
                         C50680 +
                     ((C26527 + C26526 + C26525) * C50862 +
                      (C26524 + C26523 + C26522) * C118) *
                         C25564) *
                        C50801) *
                       C50773) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C51014 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C51015 +
                   (((C25566 * C487 + C51016 * C501 + C25567 * C1267 +
                      C51005 * C1275 + C25568 * C3739 + C25563 * C3745) *
                         C118 +
                     (C25566 * C502 + C51016 * C517 + C25567 * C1274 +
                      C51005 * C1279 + C25568 * C3744 + C25563 * C3748) *
                         C50862) *
                        C25564 +
                    ((C25982 + C25983 + C25984) * C118 +
                     (C25985 + C25986 + C25987) * C50862) *
                        C50680) *
                       C2141) *
                      C50968 +
                  ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                      C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                         C118 +
                     (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                      C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                         C50862) *
                        C25564 +
                    ((C26522 + C26523 + C26524) * C118 +
                     (C26525 + C26526 + C26527) * C50862) *
                        C50680) *
                       C51015 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C51014 -
                   (((C25568 * C9391 + C25563 * C9395 + C25567 * C3742 +
                      C51005 * C3747 + C25566 * C1272 + C51016 * C1278) *
                         C50862 +
                     (C25568 * C9389 + C25563 * C9392 + C25567 * C3738 +
                      C51005 * C3743 + C25566 * C1266 + C51016 * C1273) *
                         C118) *
                        C50680 +
                    ((C25568 * C9393 + C25563 * C9396 + C25567 * C3744 +
                      C51005 * C3748 + C25566 * C1274 + C51016 * C1279) *
                         C50862 +
                     (C25568 * C9390 + C25563 * C9394 + C25567 * C3739 +
                      C51005 * C3745 + C25566 * C1267 + C51016 * C1275) *
                         C118) *
                        C25564) *
                       C2141) *
                      C50773) *
                 C50702) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C50801) *
                      C289 +
                  ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                      C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                         C118 +
                     (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                      C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                         C50862) *
                        C25564 +
                    ((C26522 + C26523 + C26524) * C118 +
                     (C26525 + C26526 + C26527) * C50862) *
                        C50680) *
                       C50801 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C1725) *
                      C290 +
                  ((((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                      C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                         C118 +
                     (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                      C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                         C50862) *
                        C25564 +
                    ((C25800 + C25801 + C25802) * C118 +
                     (C25803 + C25804 + C25805) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25568 * C9885 + C25563 * C9889 + C25567 * C4240 +
                      C51005 * C4245 + C25566 * C1619 + C51016 * C1625) *
                         C50862 +
                     (C25568 * C9883 + C25563 * C9886 + C25567 * C4236 +
                      C51005 * C4241 + C25566 * C1613 + C51016 * C1620) *
                         C118) *
                        C50680 +
                    ((C25568 * C9887 + C25563 * C9890 + C25567 * C4242 +
                      C51005 * C4246 + C25566 * C1621 + C51016 * C1626) *
                         C50862 +
                     (C25568 * C9884 + C25563 * C9888 + C25567 * C4237 +
                      C51005 * C4243 + C25566 * C1614 + C51016 * C1622) *
                         C118) *
                        C25564) *
                       C50801) *
                      C291) *
                 C50702) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C50801) *
                      C50721 * C1076 +
                  ((((C25981 + C25980 + C25979) * C118 +
                     (C25978 + C25977 + C25976) * C50862) *
                        C25564 +
                    ((C26310 + C26311 + C26312) * C118 +
                     (C26313 + C26314 + C26315) * C50862) *
                        C50680) *
                       C50801 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C1725) *
                      C50721 * C1077 +
                  ((((C25617 + C25616 + C25615) * C118 +
                     (C25614 + C25613 + C25612) * C50862) *
                        C25564 +
                    ((C25618 + C25619 + C25620) * C118 +
                     (C25621 + C25622 + C25623) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25568 * C1615 + C25563 * C1623 + C25567 * C944 +
                      C51005 * C950 + C25566 * C493 + C51016 * C513) *
                         C50862 +
                     (C25568 * C1611 + C25563 * C1616 + C25567 * C935 +
                      C51005 * C943 + C25566 * C483 + C51016 * C494) *
                         C118) *
                        C50680 +
                    ((C26315 + C26314 + C26313) * C50862 +
                     (C26312 + C26311 + C26310) * C118) *
                        C25564) *
                       C50801) *
                      C50721 * C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C118 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C50862) *
                       C25564 +
                   ((C25606 + C25607 + C25608) * C118 +
                    (C25609 + C25610 + C25611) * C50862) *
                       C50680) *
                      C1891 -
                  (((C25976 + C25977 + C25978) * C50862 +
                    (C25979 + C25980 + C25981) * C118) *
                       C50680 +
                   ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                     C51005 * C947 + C25566 * C499 + C51016 * C516) *
                        C50862 +
                    (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                     C51005 * C937 + C25566 * C486 + C51016 * C500) *
                        C118) *
                       C25564) *
                      C1892 +
                  (((C25566 * C487 + C51016 * C501 + C25567 * C1267 +
                     C51005 * C1275 + C25568 * C3739 + C25563 * C3745) *
                        C118 +
                    (C25566 * C502 + C51016 * C517 + C25567 * C1274 +
                     C51005 * C1279 + C25568 * C3744 + C25563 * C3748) *
                        C50862) *
                       C25564 +
                   ((C25982 + C25983 + C25984) * C118 +
                    (C25985 + C25986 + C25987) * C50862) *
                       C50680) *
                      C1893 -
                  (((C25568 * C10283 + C25563 * C10287 + C25567 * C4642 +
                     C51005 * C4647 + C25566 * C1903 + C51016 * C1909) *
                        C50862 +
                    (C25568 * C10281 + C25563 * C10284 + C25567 * C4638 +
                     C51005 * C4643 + C25566 * C1897 + C51016 * C1904) *
                        C118) *
                       C50680 +
                   ((C25568 * C10285 + C25563 * C10288 + C25567 * C4644 +
                     C51005 * C4648 + C25566 * C1905 + C51016 * C1910) *
                        C50862 +
                    (C25568 * C10282 + C25563 * C10286 + C25567 * C4639 +
                     C51005 * C4645 + C25566 * C1898 + C51016 * C1906) *
                        C118) *
                       C25564) *
                      C1894) *
                 C50721 * C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C51014 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C51015 +
                   (((C25566 * C487 + C51016 * C501 + C25567 * C1267 +
                      C51005 * C1275 + C25568 * C3739 + C25563 * C3745) *
                         C118 +
                     (C25566 * C502 + C51016 * C517 + C25567 * C1274 +
                      C51005 * C1279 + C25568 * C3744 + C25563 * C3748) *
                         C50862) *
                        C25564 +
                    ((C25982 + C25983 + C25984) * C118 +
                     (C25985 + C25986 + C25987) * C50862) *
                        C50680) *
                       C2141) *
                      C50721 * C50960 +
                  ((((C25981 + C25980 + C25979) * C118 +
                     (C25978 + C25977 + C25976) * C50862) *
                        C25564 +
                    ((C26310 + C26311 + C26312) * C118 +
                     (C26313 + C26314 + C26315) * C50862) *
                        C50680) *
                       C51015 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C51014 -
                   (((C25568 * C3740 + C25563 * C3746 + C25567 * C1270 +
                      C51005 * C1277 + C25566 * C506 + C51016 * C519) *
                         C50862 +
                     (C25568 * C3737 + C25563 * C3741 + C25567 * C1265 +
                      C51005 * C1271 + C25566 * C489 + C51016 * C505) *
                         C118) *
                        C50680 +
                    ((C25987 + C25986 + C25985) * C50862 +
                     (C25984 + C25983 + C25982) * C118) *
                        C25564) *
                       C2141) *
                      C50721 * C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C50801) *
                      C50721 * C1076 +
                  ((((C25981 + C25980 + C25979) * C118 +
                     (C25978 + C25977 + C25976) * C50862) *
                        C25564 +
                    ((C26310 + C26311 + C26312) * C118 +
                     (C26313 + C26314 + C26315) * C50862) *
                        C50680) *
                       C50801 -
                   (((C25612 + C25613 + C25614) * C50862 +
                     (C25615 + C25616 + C25617) * C118) *
                        C50680 +
                    ((C25611 + C25610 + C25609) * C50862 +
                     (C25608 + C25607 + C25606) * C118) *
                        C25564) *
                       C1725) *
                      C50721 * C1077 +
                  ((((C25617 + C25616 + C25615) * C118 +
                     (C25614 + C25613 + C25612) * C50862) *
                        C25564 +
                    ((C25618 + C25619 + C25620) * C118 +
                     (C25621 + C25622 + C25623) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25568 * C1615 + C25563 * C1623 + C25567 * C944 +
                      C51005 * C950 + C25566 * C493 + C51016 * C513) *
                         C50862 +
                     (C25568 * C1611 + C25563 * C1616 + C25567 * C935 +
                      C51005 * C943 + C25566 * C483 + C51016 * C494) *
                         C118) *
                        C50680 +
                    ((C26315 + C26314 + C26313) * C50862 +
                     (C26312 + C26311 + C26310) * C118) *
                        C25564) *
                       C50801) *
                      C50721 * C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C118 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C50862) *
                        C25564 +
                    ((C25606 + C25607 + C25608) * C118 +
                     (C25609 + C25610 + C25611) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25976 + C25977 + C25978) * C50862 +
                     (C25979 + C25980 + C25981) * C118) *
                        C50680 +
                    ((C25568 * C1621 + C25563 * C1626 + C25567 * C938 +
                      C51005 * C947 + C25566 * C499 + C51016 * C516) *
                         C50862 +
                     (C25568 * C1614 + C25563 * C1622 + C25567 * C932 +
                      C51005 * C937 + C25566 * C486 + C51016 * C500) *
                         C118) *
                        C25564) *
                       C50801) *
                      C289 +
                  ((((C25566 * C932 + C51016 * C937 + C25567 * C1614 +
                      C51005 * C1622 + C25568 * C4237 + C25563 * C4243) *
                         C118 +
                     (C25566 * C938 + C51016 * C947 + C25567 * C1621 +
                      C51005 * C1626 + C25568 * C4242 + C25563 * C4246) *
                         C50862) *
                        C25564 +
                    ((C26522 + C26523 + C26524) * C118 +
                     (C26525 + C26526 + C26527) * C50862) *
                        C50680) *
                       C50801 -
                   (((C25794 + C25795 + C25796) * C50862 +
                     (C25797 + C25798 + C25799) * C118) *
                        C50680 +
                    ((C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C50862 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C118) *
                        C25564) *
                       C1725) *
                      C290 +
                  ((((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                      C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                         C118 +
                     (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                      C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                         C50862) *
                        C25564 +
                    ((C25800 + C25801 + C25802) * C118 +
                     (C25803 + C25804 + C25805) * C50862) *
                        C50680) *
                       C1725 -
                   (((C25568 * C9885 + C25563 * C9889 + C25567 * C4240 +
                      C51005 * C4245 + C25566 * C1619 + C51016 * C1625) *
                         C50862 +
                     (C25568 * C9883 + C25563 * C9886 + C25567 * C4236 +
                      C51005 * C4241 + C25566 * C1613 + C51016 * C1620) *
                         C118) *
                        C50680 +
                    ((C25568 * C9887 + C25563 * C9890 + C25567 * C4242 +
                      C51005 * C4246 + C25566 * C1621 + C51016 * C1626) *
                         C50862 +
                     (C25568 * C9884 + C25563 * C9888 + C25567 * C4237 +
                      C51005 * C4243 + C25566 * C1614 + C51016 * C1622) *
                         C118) *
                        C25564) *
                       C50801) *
                      C291) *
                 C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C50737 * C50968 -
           (((C23707 + C23706) * C50874 + (C23705 + C23704) * C5236 +
             (C22962 + C22963) * C50980 + (C22964 + C22965) * C5235) *
                C50680 +
            ((C22720 * C1621 + C50848 * C1626 + C22719 * C938 + C22714 * C947) *
                 C50874 +
             (C22720 * C1614 + C50848 * C1622 + C22719 * C932 + C22714 * C937) *
                 C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50737 * C50773) *
              C51010 +
          ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
             (C23704 + C23705) * C5236 + (C23706 + C23707) * C50874) *
                C25564 +
            ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
             (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C50737 * C50968) *
              C51011 +
          (((C22770 * C5235 + C22771 * C50980 + (C23155 + C23154) * C5236 +
             (C23153 + C23152) * C50874) *
                C25564 +
            ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
             (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
                C50680) *
               C50737 * C50968 -
           (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 + C22714 * C950) *
                 C50874 +
             (C22720 * C1611 + C50848 * C1616 + C22719 * C935 + C22714 * C943) *
                 C5236 +
             (C23329 + C23328) * C50980 + (C23327 + C23326) * C5235) *
                C50680 +
            ((C23711 + C23710) * C50874 + (C23709 + C23708) * C5236 +
             C23314 * C50980 + C23315 * C5235) *
                C25564) *
               C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C5235 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C50980 +
              (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                 C25564 +
             ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
              C28818 * C5236 + C28819 * C50874) *
                 C50680) *
                C50969 -
            ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
              C28823 * C5235) *
                 C50680 +
             ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
              (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                 C25564) *
                C50801) *
               C50968 +
           ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
              (C22719 * C1267 + C22714 * C1275 + C22720 * C3739 +
               C50848 * C3745) *
                  C5236 +
              (C22719 * C1274 + C22714 * C1279 + C22720 * C3744 +
               C50848 * C3748) *
                  C50874) *
                 C25564 +
             (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
              (C29528 + C29529) * C50874) *
                 C50680) *
                C50801 -
            ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
              (C22964 + C22965) * C5235) *
                 C50680 +
             ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
              (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C50980 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C5235) *
                 C25564) *
                C50969) *
               C50773) *
              C292 +
          ((((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
              C28833 * C50874) *
                 C25564 +
             (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
              (C23166 + C23167) * C50874) *
                 C50680) *
                C50801 -
            ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
              (C22759 + C22758) * C5235) *
                 C50680 +
             (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
              (C22755 + C22754) * C5235) *
                 C25564) *
                C50969) *
               C50968 +
           ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
              C29510 * C5236 + C29511 * C50874) *
                 C25564 +
             ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
              (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                 C50680) *
                C50969 -
            (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
               C22714 * C1277) *
                  C50874 +
              (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
               C22714 * C1271) *
                  C5236 +
              (C23711 + C23710) * C50980 + (C23709 + C23708) * C5235) *
                 C50680 +
             ((C29529 + C29528) * C50874 + (C29527 + C29526) * C5236 +
              C29520 * C50980 + C29521 * C5235) *
                 C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C22719 * C486 + C22714 * C500 + C22720 * C932 + C50848 * C937) *
                 C5236 +
             (C22719 * C499 + C22714 * C516 + C22720 * C938 + C50848 * C947) *
                 C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             (C23159 + C23158) * C5236 + (C23157 + C23156) * C50874) *
                C50680) *
               C50737 * C289 -
           (((C23707 + C23706) * C50874 + (C23705 + C23704) * C5236 +
             (C22962 + C22963) * C50980 + (C22964 + C22965) * C5235) *
                C50680 +
            ((C22720 * C1621 + C50848 * C1626 + C22719 * C938 + C22714 * C947) *
                 C50874 +
             (C22720 * C1614 + C50848 * C1622 + C22719 * C932 + C22714 * C937) *
                 C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50737 * C290 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C5235 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50980 +
             (C22719 * C1614 + C22714 * C1622 + C22720 * C4237 +
              C50848 * C4243) *
                 C5236 +
             (C22719 * C1621 + C22714 * C1626 + C22720 * C4242 +
              C50848 * C4246) *
                 C50874) *
                C25564 +
            ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
             (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
             (C23704 + C23705) * C5236 + (C23706 + C23707) * C50874) *
                C25564 +
            ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
             (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C290 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            ((C23156 + C23157) * C50874 + (C23158 + C23159) * C5236 +
             (C22757 + C22756) * C50980 + (C22755 + C22754) * C5235) *
                C25564) *
               C50737 * C289 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50874 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C5236 +
             (C22973 + C22972) * C50980 + (C22971 + C22970) * C5235) *
                C50680 +
            ((C28615 + C28614) * C50874 + (C28613 + C28612) * C5236 +
             (C22969 + C22968) * C50980 + (C22967 + C22966) * C5235) *
                C25564) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C5235 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50980 +
            (C22719 * C486 + C22714 * C500 + C22720 * C932 + C50848 * C937) *
                C5236 +
            (C22719 * C499 + C22714 * C516 + C22720 * C938 + C50848 * C947) *
                C50874) *
               C25564 +
           ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
            (C23159 + C23158) * C5236 + (C23157 + C23156) * C50874) *
               C50680) *
              C50737 * C50721 * C113 -
          ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
            (C22759 + C22758) * C5235) *
               C50680 +
           ((C23156 + C23157) * C50874 + (C23158 + C23159) * C5236 +
            (C22757 + C22756) * C50980 + (C22755 + C22754) * C5235) *
               C25564) *
              C50737 * C50721 * C114 +
          ((C22770 * C5235 + C22771 * C50980 + (C23155 + C23154) * C5236 +
            (C23153 + C23152) * C50874) *
               C25564 +
           ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
            (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                C50874 +
            (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                C5236 +
            (C22769 + C22768) * C50980 + (C22767 + C22766) * C5235) *
               C50680 +
           ((C23492 + C23491) * C50874 + (C23490 + C23489) * C5236 +
            C22772 * C50980 + C22773 * C5235) *
               C25564) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C480 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C481 +
           (((C28849 + C28848) * C5235 + (C28847 + C28846) * C50980 +
             (C22719 * C1898 + C22714 * C1906 + C22720 * C4639 +
              C50848 * C4645) *
                 C5236 +
             (C22719 * C1905 + C22714 * C1910 + C22720 * C4644 +
              C50848 * C4648) *
                 C50874) *
                C25564 +
            (C28832 * C5235 + C28833 * C50980 + (C28850 + C28851) * C5236 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C482) *
              C50721 * C292 +
          (((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
             C28833 * C50874) *
                C25564 +
            ((C23155 + C23154) * C5235 + (C23153 + C23152) * C50980 +
             (C23164 + C23165) * C5236 + (C23166 + C23167) * C50874) *
                C50680) *
               C481 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C480 -
           (((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
              C22714 * C1908) *
                 C50874 +
             (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
              C22714 * C1902) *
                 C5236 +
             (C23167 + C23166) * C50980 + (C23165 + C23164) * C5235) *
                C50680 +
            ((C28853 + C28852) * C50874 + (C28851 + C28850) * C5236 +
             C28820 * C50980 + C28821 * C5235) *
                C25564) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C50969 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C50801) *
              C50721 * C51010 +
          (((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
             C28833 * C50874) *
                C25564 +
            (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C50801 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C50969) *
              C50721 * C51011 +
          (((C22770 * C5235 + C22771 * C50980 + C29242 * C5236 +
             C29243 * C50874) *
                C25564 +
            ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
             (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
                C50680) *
               C50969 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50874 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C5236 +
             (C23492 + C23491) * C50980 + (C23490 + C23489) * C5235) *
                C50680 +
            ((C23167 + C23166) * C50874 + (C23165 + C23164) * C5236 +
             C23477 * C50980 + C23478 * C5235) *
                C25564) *
               C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C5235 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50980 +
            (C22719 * C486 + C22714 * C500 + C22720 * C932 + C50848 * C937) *
                C5236 +
            (C22719 * C499 + C22714 * C516 + C22720 * C938 + C50848 * C947) *
                C50874) *
               C25564 +
           ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
            (C23159 + C23158) * C5236 + (C23157 + C23156) * C50874) *
               C50680) *
              C50737 * C50721 * C113 -
          ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
            (C22759 + C22758) * C5235) *
               C50680 +
           ((C23156 + C23157) * C50874 + (C23158 + C23159) * C5236 +
            (C22757 + C22756) * C50980 + (C22755 + C22754) * C5235) *
               C25564) *
              C50737 * C50721 * C114 +
          ((C22770 * C5235 + C22771 * C50980 + (C23155 + C23154) * C5236 +
            (C23153 + C23152) * C50874) *
               C25564 +
           ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
            (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                C50874 +
            (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                C5236 +
            (C22769 + C22768) * C50980 + (C22767 + C22766) * C5235) *
               C50680 +
           ((C23492 + C23491) * C50874 + (C23490 + C23489) * C5236 +
            C22772 * C50980 + C22773 * C5235) *
               C25564) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C22719 * C486 + C22714 * C500 + C22720 * C932 + C50848 * C937) *
                 C5236 +
             (C22719 * C499 + C22714 * C516 + C22720 * C938 + C50848 * C947) *
                 C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             (C23159 + C23158) * C5236 + (C23157 + C23156) * C50874) *
                C50680) *
               C50737 * C289 -
           (((C23707 + C23706) * C50874 + (C23705 + C23704) * C5236 +
             (C22962 + C22963) * C50980 + (C22964 + C22965) * C5235) *
                C50680 +
            ((C22720 * C1621 + C50848 * C1626 + C22719 * C938 + C22714 * C947) *
                 C50874 +
             (C22720 * C1614 + C50848 * C1622 + C22719 * C932 + C22714 * C937) *
                 C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50737 * C290 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C5235 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50980 +
             (C22719 * C1614 + C22714 * C1622 + C22720 * C4237 +
              C50848 * C4243) *
                 C5236 +
             (C22719 * C1621 + C22714 * C1626 + C22720 * C4242 +
              C50848 * C4246) *
                 C50874) *
                C25564 +
            ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
             (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
             (C23704 + C23705) * C5236 + (C23706 + C23707) * C50874) *
                C25564 +
            ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
             (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C290 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            ((C23156 + C23157) * C50874 + (C23158 + C23159) * C5236 +
             (C22757 + C22756) * C50980 + (C22755 + C22754) * C5235) *
                C25564) *
               C50737 * C289 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50874 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C5236 +
             (C22973 + C22972) * C50980 + (C22971 + C22970) * C5235) *
                C50680 +
            ((C28615 + C28614) * C50874 + (C28613 + C28612) * C5236 +
             (C22969 + C22968) * C50980 + (C22967 + C22966) * C5235) *
                C25564) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C50737 * C51012 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50737 * C51013 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C5235 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50980 +
             (C22719 * C1614 + C22714 * C1622 + C22720 * C4237 +
              C50848 * C4243) *
                 C5236 +
             (C22719 * C1621 + C22714 * C1626 + C22720 * C4242 +
              C50848 * C4246) *
                 C50874) *
                C25564 +
            ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
             (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
                C50680) *
               C50737 * C1380) *
              C50960 +
          ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
             C29510 * C5236 + C29511 * C50874) *
                C25564 +
            ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
             (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C51013 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C50737 * C51012 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50874 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C5236 +
             (C22973 + C22972) * C50980 + (C22971 + C22970) * C5235) *
                C50680 +
            ((C28615 + C28614) * C50874 + (C28613 + C28612) * C5236 +
             (C22969 + C22968) * C50980 + (C22967 + C22966) * C5235) *
                C25564) *
               C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C50969 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C50801) *
              C51012 +
          ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
             (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                C25564 +
            (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C50801 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50969) *
              C51013 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C5235 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50980 +
             (C30714 + C30715) * C5236 + (C30716 + C30717) * C50874) *
                C25564 +
            ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
             (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
                C50680) *
               C50969 -
           (((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
              C22714 * C3747) *
                 C50874 +
             (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
              C22714 * C3743) *
                 C5236 +
             (C28615 + C28614) * C50980 + (C28613 + C28612) * C5235) *
                C50680 +
            ((C22720 * C9393 + C50848 * C9396 + C22719 * C3744 +
              C22714 * C3748) *
                 C50874 +
             (C22720 * C9390 + C50848 * C9394 + C22719 * C3739 +
              C22714 * C3745) *
                 C5236 +
             (C30717 + C30716) * C50980 + (C30715 + C30714) * C5235) *
                C25564) *
               C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C5235 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50980 +
            (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
               C25564 +
           ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
            C28818 * C5236 + C28819 * C50874) *
               C50680) *
              C50737 * C1145 -
          ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
            (C22964 + C22965) * C5235) *
               C50680 +
           ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C50980 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C5235) *
               C25564) *
              C50737 * C1146 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C5235 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C50980 +
            (C22719 * C1614 + C22714 * C1622 + C22720 * C4237 +
             C50848 * C4243) *
                C5236 +
            (C22719 * C1621 + C22714 * C1626 + C22720 * C4242 +
             C50848 * C4246) *
                C50874) *
               C25564 +
           ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
            (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
               C50680) *
              C50737 * C1147 -
          (((C22720 * C9885 + C50848 * C9889 + C22719 * C4240 +
             C22714 * C4245) *
                C50874 +
            (C22720 * C9883 + C50848 * C9886 + C22719 * C4236 +
             C22714 * C4241) *
                C5236 +
            (C22720 * C3584 + C50848 * C3589 + C22719 * C1158 +
             C22714 * C1164) *
                C50980 +
            (C22720 * C3580 + C50848 * C3585 + C22719 * C1152 +
             C22714 * C1159) *
                C5235) *
               C50680 +
           ((C22720 * C9887 + C50848 * C9890 + C22719 * C4242 +
             C22714 * C4246) *
                C50874 +
            (C22720 * C9884 + C50848 * C9888 + C22719 * C4237 +
             C22714 * C4243) *
                C5236 +
            (C22720 * C3586 + C50848 * C3590 + C22719 * C1160 +
             C22714 * C1165) *
                C50980 +
            (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 +
             C22714 * C1161) *
                C5235) *
               C25564) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C50737 * C1074 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50737 * C50773) *
              C1076 +
          ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
             C29510 * C5236 + C29511 * C50874) *
                C25564 +
            ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
             (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C50737 * C1074) *
              C1077 +
          (((C22770 * C5235 + C22771 * C50980 + C29242 * C5236 +
             C29243 * C50874) *
                C25564 +
            ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
             (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
                C50680) *
               C50737 * C1074 -
           (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 + C22714 * C950) *
                 C50874 +
             (C22720 * C1611 + C50848 * C1616 + C22719 * C935 + C22714 * C943) *
                 C5236 +
             (C23329 + C23328) * C50980 + (C23327 + C23326) * C5235) *
                C50680 +
            ((C23711 + C23710) * C50874 + (C23709 + C23708) * C5236 +
             C23314 * C50980 + C23315 * C5235) *
                C25564) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C480 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C481 +
           (((C28849 + C28848) * C5235 + (C28847 + C28846) * C50980 +
             (C22719 * C1898 + C22714 * C1906 + C22720 * C4639 +
              C50848 * C4645) *
                 C5236 +
             (C22719 * C1905 + C22714 * C1910 + C22720 * C4644 +
              C50848 * C4648) *
                 C50874) *
                C25564 +
            (C28832 * C5235 + C28833 * C50980 + (C28850 + C28851) * C5236 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C482) *
              C1074 +
          ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
             (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                C25564 +
            (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C481 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C480 -
           (((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C50874 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C5236 +
             (C29529 + C29528) * C50980 + (C29527 + C29526) * C5235) *
                C50680 +
            ((C22720 * C10285 + C50848 * C10288 + C22719 * C4644 +
              C22714 * C4648) *
                 C50874 +
             (C22720 * C10282 + C50848 * C10286 + C22719 * C4639 +
              C22714 * C4645) *
                 C5236 +
             (C30059 + C30058) * C50980 + (C30057 + C30056) * C5235) *
                C25564) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C5235 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C50980 +
              (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                 C25564 +
             ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
              C28818 * C5236 + C28819 * C50874) *
                 C50680) *
                C50969 -
            ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
              C28823 * C5235) *
                 C50680 +
             ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
              (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                 C25564) *
                C50801) *
               C1074 +
           ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
              (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                 C25564 +
             (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
              (C29528 + C29529) * C50874) *
                 C50680) *
                C50801 -
            ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
              (C22964 + C22965) * C5235) *
                 C50680 +
             ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
              (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C50980 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C5235) *
                 C25564) *
                C50969) *
               C50773) *
              C50960 +
          ((((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
              C28833 * C50874) *
                 C25564 +
             (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
              (C23166 + C23167) * C50874) *
                 C50680) *
                C50801 -
            ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
              (C22759 + C22758) * C5235) *
                 C50680 +
             (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
              (C22755 + C22754) * C5235) *
                 C25564) *
                C50969) *
               C1074 +
           ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
              C29510 * C5236 + C29511 * C50874) *
                 C25564 +
             ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
              (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                 C50680) *
                C50969 -
            (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
               C22714 * C1277) *
                  C50874 +
              (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
               C22714 * C1271) *
                  C5236 +
              (C23711 + C23710) * C50980 + (C23709 + C23708) * C5235) *
                 C50680 +
             ((C29529 + C29528) * C50874 + (C29527 + C29526) * C5236 +
              C29520 * C50980 + C29521 * C5235) *
                 C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C50737 * C1074 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C50737 * C50773) *
              C1076 +
          ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
             C29510 * C5236 + C29511 * C50874) *
                C25564 +
            ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
             (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C50737 * C1074) *
              C1077 +
          (((C22770 * C5235 + C22771 * C50980 + C29242 * C5236 +
             C29243 * C50874) *
                C25564 +
            ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
             (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
                C50680) *
               C50737 * C1074 -
           (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 + C22714 * C950) *
                 C50874 +
             (C22720 * C1611 + C50848 * C1616 + C22719 * C935 + C22714 * C943) *
                 C5236 +
             (C23329 + C23328) * C50980 + (C23327 + C23326) * C5235) *
                C50680 +
            ((C23711 + C23710) * C50874 + (C23709 + C23708) * C5236 +
             C23314 * C50980 + C23315 * C5235) *
                C25564) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C5235 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50980 +
            (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
               C25564 +
           ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
            C28818 * C5236 + C28819 * C50874) *
               C50680) *
              C50737 * C1145 -
          ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
            (C22964 + C22965) * C5235) *
               C50680 +
           ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C50980 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C5235) *
               C25564) *
              C50737 * C1146 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C5235 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C50980 +
            (C22719 * C1614 + C22714 * C1622 + C22720 * C4237 +
             C50848 * C4243) *
                C5236 +
            (C22719 * C1621 + C22714 * C1626 + C22720 * C4242 +
             C50848 * C4246) *
                C50874) *
               C25564 +
           ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
            (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
               C50680) *
              C50737 * C1147 -
          (((C22720 * C9885 + C50848 * C9889 + C22719 * C4240 +
             C22714 * C4245) *
                C50874 +
            (C22720 * C9883 + C50848 * C9886 + C22719 * C4236 +
             C22714 * C4241) *
                C5236 +
            (C22720 * C3584 + C50848 * C3589 + C22719 * C1158 +
             C22714 * C1164) *
                C50980 +
            (C22720 * C3580 + C50848 * C3585 + C22719 * C1152 +
             C22714 * C1159) *
                C5235) *
               C50680 +
           ((C22720 * C9887 + C50848 * C9890 + C22719 * C4242 +
             C22714 * C4246) *
                C50874 +
            (C22720 * C9884 + C50848 * C9888 + C22719 * C4237 +
             C22714 * C4243) *
                C5236 +
            (C22720 * C3586 + C50848 * C3590 + C22719 * C1160 +
             C22714 * C1165) *
                C50980 +
            (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 +
             C22714 * C1161) *
                C5235) *
               C25564) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C5235 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C50980 +
              (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                 C25564 +
             ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
              C28818 * C5236 + C28819 * C50874) *
                 C50680) *
                C1725 -
            ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
              C28823 * C5235) *
                 C50680 +
             ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
              (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                 C25564) *
                C50801) *
               C50968 +
           ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
              (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                 C25564 +
             (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
              (C29528 + C29529) * C50874) *
                 C50680) *
                C50801 -
            ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
              (C22964 + C22965) * C5235) *
                 C50680 +
             ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
              (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C50980 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C5235) *
                 C25564) *
                C1725) *
               C50773) *
              C50960 +
          ((((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
              C28833 * C50874) *
                 C25564 +
             (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
              (C23166 + C23167) * C50874) *
                 C50680) *
                C50801 -
            ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
              (C22759 + C22758) * C5235) *
                 C50680 +
             (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
              (C22755 + C22754) * C5235) *
                 C25564) *
                C1725) *
               C50968 +
           ((((C22965 + C22964) * C5235 + (C22963 + C22962) * C50980 +
              C29510 * C5236 + C29511 * C50874) *
                 C25564 +
             ((C22961 + C22960) * C5235 + (C22959 + C22958) * C50980 +
              (C23708 + C23709) * C5236 + (C23710 + C23711) * C50874) *
                 C50680) *
                C1725 -
            (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
               C22714 * C1277) *
                  C50874 +
              (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
               C22714 * C1271) *
                  C5236 +
              (C23711 + C23710) * C50980 + (C23709 + C23708) * C5235) *
                 C50680 +
             ((C29529 + C29528) * C50874 + (C29527 + C29526) * C5236 +
              C29520 * C50980 + C29521 * C5235) *
                 C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C51014 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C51015 +
           (((C28849 + C28848) * C5235 + (C28847 + C28846) * C50980 +
             (C31244 + C31245) * C5236 + (C31246 + C31247) * C50874) *
                C25564 +
            (C28832 * C5235 + C28833 * C50980 + (C28850 + C28851) * C5236 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C2141) *
              C50968 +
          ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
             (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                C25564 +
            (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C51015 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C51014 -
           (((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C50874 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C5236 +
             (C29529 + C29528) * C50980 + (C29527 + C29526) * C5235) *
                C50680 +
            ((C22720 * C10285 + C50848 * C10288 + C22719 * C4644 +
              C22714 * C4648) *
                 C50874 +
             (C22720 * C10282 + C50848 * C10286 + C22719 * C4639 +
              C22714 * C4645) *
                 C5236 +
             (C30059 + C30058) * C50980 + (C30057 + C30056) * C5235) *
                C25564) *
               C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C50801) *
              C289 +
          ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
             (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                C25564 +
            (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C50801 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C1725) *
              C290 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C5235 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50980 +
             (C30714 + C30715) * C5236 + (C30716 + C30717) * C50874) *
                C25564 +
            ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
             (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
              C22714 * C3747) *
                 C50874 +
             (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
              C22714 * C3743) *
                 C5236 +
             (C28615 + C28614) * C50980 + (C28613 + C28612) * C5235) *
                C50680 +
            ((C22720 * C9393 + C50848 * C9396 + C22719 * C3744 +
              C22714 * C3748) *
                 C50874 +
             (C22720 * C9390 + C50848 * C9394 + C22719 * C3739 +
              C22714 * C3745) *
                 C5236 +
             (C30717 + C30716) * C50980 + (C30715 + C30714) * C5235) *
                C25564) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C50801) *
              C50721 * C1076 +
          (((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
             C28833 * C50874) *
                C25564 +
            (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C50801 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C1725) *
              C50721 * C1077 +
          (((C22770 * C5235 + C22771 * C50980 + C29242 * C5236 +
             C29243 * C50874) *
                C25564 +
            ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
             (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50874 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C5236 +
             (C23492 + C23491) * C50980 + (C23490 + C23489) * C5235) *
                C50680 +
            ((C23167 + C23166) * C50874 + (C23165 + C23164) * C5236 +
             C23477 * C50980 + C23478 * C5235) *
                C25564) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C5235 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C50980 +
            (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
               C25564 +
           ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
            C28818 * C5236 + C28819 * C50874) *
               C50680) *
              C1891 -
          ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
            C28823 * C5235) *
               C50680 +
           ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
            (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
               C25564) *
              C1892 +
          (((C28849 + C28848) * C5235 + (C28847 + C28846) * C50980 +
            (C31244 + C31245) * C5236 + (C31246 + C31247) * C50874) *
               C25564 +
           (C28832 * C5235 + C28833 * C50980 + (C28850 + C28851) * C5236 +
            (C28852 + C28853) * C50874) *
               C50680) *
              C1893 -
          (((C22720 * C16659 + C50848 * C16661 + C22719 * C7428 +
             C22714 * C7433) *
                C50874 +
            (C22720 * C16658 + C50848 * C16660 + C22719 * C7424 +
             C22714 * C7429) *
                C5236 +
            (C28853 + C28852) * C50980 + (C28851 + C28850) * C5235) *
               C50680 +
           ((C22720 * C14799 + C50848 * C14803 + C22719 * C7430 +
             C22714 * C7434) *
                C50874 +
            (C22720 * C14797 + C50848 * C14801 + C22719 * C7425 +
             C22714 * C7431) *
                C5236 +
            (C31247 + C31246) * C50980 + (C31245 + C31244) * C5235) *
               C25564) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C51014 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C51015 +
           (((C28849 + C28848) * C5235 + (C28847 + C28846) * C50980 +
             (C31244 + C31245) * C5236 + (C31246 + C31247) * C50874) *
                C25564 +
            (C28832 * C5235 + C28833 * C50980 + (C28850 + C28851) * C5236 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C2141) *
              C50721 * C50960 +
          (((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
             C28833 * C50874) *
                C25564 +
            (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C51015 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C51014 -
           (((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
              C22714 * C1908) *
                 C50874 +
             (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
              C22714 * C1902) *
                 C5236 +
             (C23167 + C23166) * C50980 + (C23165 + C23164) * C5235) *
                C50680 +
            ((C28853 + C28852) * C50874 + (C28851 + C28850) * C5236 +
             C28820 * C50980 + C28821 * C5235) *
                C25564) *
               C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C50801) *
              C50721 * C1076 +
          (((C28818 * C5235 + C28819 * C50980 + C28832 * C5236 +
             C28833 * C50874) *
                C25564 +
            (C29242 * C5235 + C29243 * C50980 + (C23164 + C23165) * C5236 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C50801 -
           ((C23477 * C50874 + C23478 * C5236 + (C22761 + C22760) * C50980 +
             (C22759 + C22758) * C5235) *
                C50680 +
            (C28822 * C50874 + C28823 * C5236 + (C22757 + C22756) * C50980 +
             (C22755 + C22754) * C5235) *
                C25564) *
               C1725) *
              C50721 * C1077 +
          (((C22770 * C5235 + C22771 * C50980 + C29242 * C5236 +
             C29243 * C50874) *
                C25564 +
            ((C22765 + C22764) * C5235 + (C22763 + C22762) * C50980 +
             (C23489 + C23490) * C5236 + (C23491 + C23492) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50874 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C5236 +
             (C23492 + C23491) * C50980 + (C23490 + C23489) * C5235) *
                C50680 +
            ((C23167 + C23166) * C50874 + (C23165 + C23164) * C5236 +
             C23477 * C50980 + C23478 * C5235) *
                C25564) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C5235 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C50980 +
             (C28842 + C28843) * C5236 + (C28844 + C28845) * C50874) *
                C25564 +
            ((C22754 + C22755) * C5235 + (C22756 + C22757) * C50980 +
             C28818 * C5236 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C5236 + C28822 * C50980 +
             C28823 * C5235) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C5236 +
             (C28845 + C28844) * C50980 + (C28843 + C28842) * C5235) *
                C25564) *
               C50801) *
              C289 +
          ((((C29522 + C29523) * C5235 + (C29524 + C29525) * C50980 +
             (C30056 + C30057) * C5236 + (C30058 + C30059) * C50874) *
                C25564 +
            (C29510 * C5235 + C29511 * C50980 + (C29526 + C29527) * C5236 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C50801 -
           ((C29520 * C50874 + C29521 * C5236 + (C22962 + C22963) * C50980 +
             (C22964 + C22965) * C5235) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C5236 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C50980 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C5235) *
                C25564) *
               C1725) *
              C290 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C5235 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C50980 +
             (C30714 + C30715) * C5236 + (C30716 + C30717) * C50874) *
                C25564 +
            ((C22966 + C22967) * C5235 + (C22968 + C22969) * C50980 +
             (C28612 + C28613) * C5236 + (C28614 + C28615) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
              C22714 * C3747) *
                 C50874 +
             (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
              C22714 * C3743) *
                 C5236 +
             (C28615 + C28614) * C50980 + (C28613 + C28612) * C5235) *
                C50680 +
            ((C22720 * C9393 + C50848 * C9396 + C22719 * C3744 +
              C22714 * C3748) *
                 C50874 +
             (C22720 * C9390 + C50848 * C9394 + C22719 * C3739 +
              C22714 * C3745) *
                 C5236 +
             (C30717 + C30716) * C50980 + (C30715 + C30714) * C5235) *
                C25564) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50737 * C50968 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50737 * C50773) *
              C51010 +
          ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
             C29510 * C31994 + C29511 * C50874) *
                C50951 +
            ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
             (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50737 * C50968) *
              C51011 +
          (((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
             C29243 * C50874) *
                C50951 +
            ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
             (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
                C50680) *
               C50737 * C50968 -
           (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 + C22714 * C950) *
                 C50874 +
             (C22720 * C1611 + C50848 * C1616 + C22719 * C935 + C22714 * C943) *
                 C31994 +
             (C23329 + C23328) * C31991 + (C23327 + C23326) * C31993) *
                C50680 +
            ((C23711 + C23710) * C50874 + (C23709 + C23708) * C31994 +
             C23314 * C31991 + C23315 * C31993) *
                C50951) *
               C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C31993 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C31991 +
              (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                 C50951 +
             ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
              C28818 * C31994 + C28819 * C50874) *
                 C50680) *
                C50969 -
            ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
              C28823 * C31993) *
                 C50680 +
             ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
              (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                 C50951) *
                C50801) *
               C50968 +
           ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
              (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                 C50951 +
             (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
              (C29528 + C29529) * C50874) *
                 C50680) *
                C50801 -
            ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
              (C22964 + C22965) * C31993) *
                 C50680 +
             ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
              (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C31991 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C31993) *
                 C50951) *
                C50969) *
               C50773) *
              C292 +
          ((((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
              C28833 * C50874) *
                 C50951 +
             (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
              (C23166 + C23167) * C50874) *
                 C50680) *
                C50801 -
            ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
              (C22759 + C22758) * C31993) *
                 C50680 +
             (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
              (C22755 + C22754) * C31993) *
                 C50951) *
                C50969) *
               C50968 +
           ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
              C29510 * C31994 + C29511 * C50874) *
                 C50951 +
             ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
              (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                 C50680) *
                C50969 -
            (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
               C22714 * C1277) *
                  C50874 +
              (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
               C22714 * C1271) *
                  C31994 +
              (C23711 + C23710) * C31991 + (C23709 + C23708) * C31993) *
                 C50680 +
             ((C29529 + C29528) * C50874 + (C29527 + C29526) * C31994 +
              C29520 * C31991 + C29521 * C31993) *
                 C50951) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50737 * C289 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50737 * C290 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C31993 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C31991 +
             (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
                C50951 +
            ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
             (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
             C29510 * C31994 + C29511 * C50874) *
                C50951 +
            ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
             (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C290 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50737 * C289 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50874 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C31994 +
             (C22973 + C22972) * C31991 + (C22971 + C22970) * C31993) *
                C50680 +
            ((C28615 + C28614) * C50874 + (C28613 + C28612) * C31994 +
             (C22969 + C22968) * C31991 + (C22967 + C22966) * C31993) *
                C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C31993 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C31991 +
            (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
               C50951 +
           ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
            C28818 * C31994 + C28819 * C50874) *
               C50680) *
              C50737 * C50721 * C113 -
          ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
            (C22759 + C22758) * C31993) *
               C50680 +
           (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
            (C22755 + C22754) * C31993) *
               C50951) *
              C50737 * C50721 * C114 +
          ((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
            C29243 * C50874) *
               C50951 +
           ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
            (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                C50874 +
            (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                C31994 +
            (C22769 + C22768) * C31991 + (C22767 + C22766) * C31993) *
               C50680 +
           ((C23492 + C23491) * C50874 + (C23490 + C23489) * C31994 +
            C22772 * C31991 + C22773 * C31993) *
               C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C480 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C481 +
           (((C28849 + C28848) * C31993 + (C28847 + C28846) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50874) *
                C50951 +
            (C28832 * C31993 + C28833 * C31991 + (C28850 + C28851) * C31994 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C482) *
              C50721 * C292 +
          (((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
             C28833 * C50874) *
                C50951 +
            (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C481 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C480 -
           (((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
              C22714 * C1908) *
                 C50874 +
             (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
              C22714 * C1902) *
                 C31994 +
             (C23167 + C23166) * C31991 + (C23165 + C23164) * C31993) *
                C50680 +
            ((C28853 + C28852) * C50874 + (C28851 + C28850) * C31994 +
             C28820 * C31991 + C28821 * C31993) *
                C50951) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50969 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C50801) *
              C50721 * C51010 +
          (((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
             C28833 * C50874) *
                C50951 +
            (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C50801 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50969) *
              C50721 * C51011 +
          (((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
             C29243 * C50874) *
                C50951 +
            ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
             (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
                C50680) *
               C50969 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50874 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C31994 +
             (C23492 + C23491) * C31991 + (C23490 + C23489) * C31993) *
                C50680 +
            ((C23167 + C23166) * C50874 + (C23165 + C23164) * C31994 +
             C23477 * C31991 + C23478 * C31993) *
                C50951) *
               C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C31993 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C31991 +
            (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
               C50951 +
           ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
            C28818 * C31994 + C28819 * C50874) *
               C50680) *
              C50737 * C50721 * C113 -
          ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
            (C22759 + C22758) * C31993) *
               C50680 +
           (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
            (C22755 + C22754) * C31993) *
               C50951) *
              C50737 * C50721 * C114 +
          ((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
            C29243 * C50874) *
               C50951 +
           ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
            (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C22720 * C945 + C50848 * C951 + C22719 * C510 + C22714 * C521) *
                C50874 +
            (C22720 * C936 + C50848 * C946 + C22719 * C491 + C22714 * C509) *
                C31994 +
            (C22769 + C22768) * C31991 + (C22767 + C22766) * C31993) *
               C50680 +
           ((C23492 + C23491) * C50874 + (C23490 + C23489) * C31994 +
            C22772 * C31991 + C22773 * C31993) *
               C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50737 * C289 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50737 * C290 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C31993 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C31991 +
             (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
                C50951 +
            ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
             (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
             C29510 * C31994 + C29511 * C50874) *
                C50951 +
            ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
             (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C290 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50737 * C289 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50874 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C31994 +
             (C22973 + C22972) * C31991 + (C22971 + C22970) * C31993) *
                C50680 +
            ((C28615 + C28614) * C50874 + (C28613 + C28612) * C31994 +
             (C22969 + C22968) * C31991 + (C22967 + C22966) * C31993) *
                C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50737 * C51012 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50737 * C51013 +
           (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C31993 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C31991 +
             (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
                C50951 +
            ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
             (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
                C50680) *
               C50737 * C1380) *
              C50960 +
          ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
             C29510 * C31994 + C29511 * C50874) *
                C50951 +
            ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
             (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C51013 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50737 * C51012 -
           (((C22720 * C4238 + C50848 * C4244 + C22719 * C1617 +
              C22714 * C1624) *
                 C50874 +
             (C22720 * C4235 + C50848 * C4239 + C22719 * C1612 +
              C22714 * C1618) *
                 C31994 +
             (C22973 + C22972) * C31991 + (C22971 + C22970) * C31993) *
                C50680 +
            ((C28615 + C28614) * C50874 + (C28613 + C28612) * C31994 +
             (C22969 + C22968) * C31991 + (C22967 + C22966) * C31993) *
                C50951) *
               C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50969 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C50801) *
              C51012 +
          ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
             (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                C50951 +
            (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C50801 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50969) *
              C51013 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C31993 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C31991 +
             (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
                C50951 +
            ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
             (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
                C50680) *
               C50969 -
           (((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
              C22714 * C3747) *
                 C50874 +
             (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
              C22714 * C3743) *
                 C31994 +
             (C28615 + C28614) * C31991 + (C28613 + C28612) * C31993) *
                C50680 +
            ((C22720 * C9393 + C50848 * C9396 + C22719 * C3744 +
              C22714 * C3748) *
                 C50874 +
             (C22720 * C9390 + C50848 * C9394 + C22719 * C3739 +
              C22714 * C3745) *
                 C31994 +
             (C30717 + C30716) * C31991 + (C30715 + C30714) * C31993) *
                C50951) *
               C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C31993 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C31991 +
            (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
               C50951 +
           ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
            C28818 * C31994 + C28819 * C50874) *
               C50680) *
              C50737 * C1145 -
          ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
            (C22964 + C22965) * C31993) *
               C50680 +
           ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C31991 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C31993) *
               C50951) *
              C50737 * C1146 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C31993 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C31991 +
            (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
               C50951 +
           ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
            (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
               C50680) *
              C50737 * C1147 -
          (((C22720 * C9885 + C50848 * C9889 + C22719 * C4240 +
             C22714 * C4245) *
                C50874 +
            (C22720 * C9883 + C50848 * C9886 + C22719 * C4236 +
             C22714 * C4241) *
                C31994 +
            (C22720 * C3584 + C50848 * C3589 + C22719 * C1158 +
             C22714 * C1164) *
                C31991 +
            (C22720 * C3580 + C50848 * C3585 + C22719 * C1152 +
             C22714 * C1159) *
                C31993) *
               C50680 +
           ((C22720 * C9887 + C50848 * C9890 + C22719 * C4242 +
             C22714 * C4246) *
                C50874 +
            (C22720 * C9884 + C50848 * C9888 + C22719 * C4237 +
             C22714 * C4243) *
                C31994 +
            (C22720 * C3586 + C50848 * C3590 + C22719 * C1160 +
             C22714 * C1165) *
                C31991 +
            (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 +
             C22714 * C1161) *
                C31993) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50737 * C1074 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
             C29510 * C31994 + C29511 * C50874) *
                C50951 +
            ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
             (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50737 * C1074) *
              C1077 +
          (((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
             C29243 * C50874) *
                C50951 +
            ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
             (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
                C50680) *
               C50737 * C1074 -
           (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 + C22714 * C950) *
                 C50874 +
             (C22720 * C1611 + C50848 * C1616 + C22719 * C935 + C22714 * C943) *
                 C31994 +
             (C23329 + C23328) * C31991 + (C23327 + C23326) * C31993) *
                C50680 +
            ((C23711 + C23710) * C50874 + (C23709 + C23708) * C31994 +
             C23314 * C31991 + C23315 * C31993) *
                C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C480 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C481 +
           (((C28849 + C28848) * C31993 + (C28847 + C28846) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50874) *
                C50951 +
            (C28832 * C31993 + C28833 * C31991 + (C28850 + C28851) * C31994 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C482) *
              C1074 +
          ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
             (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                C50951 +
            (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C481 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C480 -
           (((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C50874 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C31994 +
             (C29529 + C29528) * C31991 + (C29527 + C29526) * C31993) *
                C50680 +
            ((C22720 * C10285 + C50848 * C10288 + C22719 * C4644 +
              C22714 * C4648) *
                 C50874 +
             (C22720 * C10282 + C50848 * C10286 + C22719 * C4639 +
              C22714 * C4645) *
                 C31994 +
             (C30059 + C30058) * C31991 + (C30057 + C30056) * C31993) *
                C50951) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C31993 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C31991 +
              (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                 C50951 +
             ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
              C28818 * C31994 + C28819 * C50874) *
                 C50680) *
                C50969 -
            ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
              C28823 * C31993) *
                 C50680 +
             ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
              (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                 C50951) *
                C50801) *
               C1074 +
           ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
              (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                 C50951 +
             (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
              (C29528 + C29529) * C50874) *
                 C50680) *
                C50801 -
            ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
              (C22964 + C22965) * C31993) *
                 C50680 +
             ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
              (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C31991 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C31993) *
                 C50951) *
                C50969) *
               C50773) *
              C50960 +
          ((((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
              C28833 * C50874) *
                 C50951 +
             (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
              (C23166 + C23167) * C50874) *
                 C50680) *
                C50801 -
            ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
              (C22759 + C22758) * C31993) *
                 C50680 +
             (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
              (C22755 + C22754) * C31993) *
                 C50951) *
                C50969) *
               C1074 +
           ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
              C29510 * C31994 + C29511 * C50874) *
                 C50951 +
             ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
              (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                 C50680) *
                C50969 -
            (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
               C22714 * C1277) *
                  C50874 +
              (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
               C22714 * C1271) *
                  C31994 +
              (C23711 + C23710) * C31991 + (C23709 + C23708) * C31993) *
                 C50680 +
             ((C29529 + C29528) * C50874 + (C29527 + C29526) * C31994 +
              C29520 * C31991 + C29521 * C31993) *
                 C50951) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C50737 * C1074 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
             C29510 * C31994 + C29511 * C50874) *
                C50951 +
            ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
             (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C50737 * C1074) *
              C1077 +
          (((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
             C29243 * C50874) *
                C50951 +
            ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
             (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
                C50680) *
               C50737 * C1074 -
           (((C22720 * C1615 + C50848 * C1623 + C22719 * C944 + C22714 * C950) *
                 C50874 +
             (C22720 * C1611 + C50848 * C1616 + C22719 * C935 + C22714 * C943) *
                 C31994 +
             (C23329 + C23328) * C31991 + (C23327 + C23326) * C31993) *
                C50680 +
            ((C23711 + C23710) * C50874 + (C23709 + C23708) * C31994 +
             C23314 * C31991 + C23315 * C31993) *
                C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C31993 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C31991 +
            (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
               C50951 +
           ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
            C28818 * C31994 + C28819 * C50874) *
               C50680) *
              C50737 * C1145 -
          ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
            (C22964 + C22965) * C31993) *
               C50680 +
           ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C31991 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C31993) *
               C50951) *
              C50737 * C1146 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C31993 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C31991 +
            (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
               C50951 +
           ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
            (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
               C50680) *
              C50737 * C1147 -
          (((C22720 * C9885 + C50848 * C9889 + C22719 * C4240 +
             C22714 * C4245) *
                C50874 +
            (C22720 * C9883 + C50848 * C9886 + C22719 * C4236 +
             C22714 * C4241) *
                C31994 +
            (C22720 * C3584 + C50848 * C3589 + C22719 * C1158 +
             C22714 * C1164) *
                C31991 +
            (C22720 * C3580 + C50848 * C3585 + C22719 * C1152 +
             C22714 * C1159) *
                C31993) *
               C50680 +
           ((C22720 * C9887 + C50848 * C9890 + C22719 * C4242 +
             C22714 * C4246) *
                C50874 +
            (C22720 * C9884 + C50848 * C9888 + C22719 * C4237 +
             C22714 * C4243) *
                C31994 +
            (C22720 * C3586 + C50848 * C3590 + C22719 * C1160 +
             C22714 * C1165) *
                C31991 +
            (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 +
             C22714 * C1161) *
                C31993) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                  C31993 +
              (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                  C31991 +
              (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                 C50951 +
             ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
              C28818 * C31994 + C28819 * C50874) *
                 C50680) *
                C1725 -
            ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
              C28823 * C31993) *
                 C50680 +
             ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
              (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                 C50951) *
                C50801) *
               C50968 +
           ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
              (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                 C50951 +
             (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
              (C29528 + C29529) * C50874) *
                 C50680) *
                C50801 -
            ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
              (C22964 + C22965) * C31993) *
                 C50680 +
             ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
              (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                  C31991 +
              (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                  C31993) *
                 C50951) *
                C1725) *
               C50773) *
              C50960 +
          ((((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
              C28833 * C50874) *
                 C50951 +
             (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
              (C23166 + C23167) * C50874) *
                 C50680) *
                C50801 -
            ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
              (C22759 + C22758) * C31993) *
                 C50680 +
             (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
              (C22755 + C22754) * C31993) *
                 C50951) *
                C1725) *
               C50968 +
           ((((C22965 + C22964) * C31993 + (C22963 + C22962) * C31991 +
              C29510 * C31994 + C29511 * C50874) *
                 C50951 +
             ((C22961 + C22960) * C31993 + (C22959 + C22958) * C31991 +
              (C23708 + C23709) * C31994 + (C23710 + C23711) * C50874) *
                 C50680) *
                C1725 -
            (((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
               C22714 * C1277) *
                  C50874 +
              (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
               C22714 * C1271) *
                  C31994 +
              (C23711 + C23710) * C31991 + (C23709 + C23708) * C31993) *
                 C50680 +
             ((C29529 + C29528) * C50874 + (C29527 + C29526) * C31994 +
              C29520 * C31991 + C29521 * C31993) *
                 C50951) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C51014 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C51015 +
           (((C28849 + C28848) * C31993 + (C28847 + C28846) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50874) *
                C50951 +
            (C28832 * C31993 + C28833 * C31991 + (C28850 + C28851) * C31994 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C2141) *
              C50968 +
          ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
             (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                C50951 +
            (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C51015 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C51014 -
           (((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C50874 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C31994 +
             (C29529 + C29528) * C31991 + (C29527 + C29526) * C31993) *
                C50680 +
            ((C22720 * C10285 + C50848 * C10288 + C22719 * C4644 +
              C22714 * C4648) *
                 C50874 +
             (C22720 * C10282 + C50848 * C10286 + C22719 * C4639 +
              C22714 * C4645) *
                 C31994 +
             (C30059 + C30058) * C31991 + (C30057 + C30056) * C31993) *
                C50951) *
               C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C50801) *
              C289 +
          ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
             (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                C50951 +
            (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C50801 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C1725) *
              C290 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C31993 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C31991 +
             (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
                C50951 +
            ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
             (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
              C22714 * C3747) *
                 C50874 +
             (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
              C22714 * C3743) *
                 C31994 +
             (C28615 + C28614) * C31991 + (C28613 + C28612) * C31993) *
                C50680 +
            ((C22720 * C9393 + C50848 * C9396 + C22719 * C3744 +
              C22714 * C3748) *
                 C50874 +
             (C22720 * C9390 + C50848 * C9394 + C22719 * C3739 +
              C22714 * C3745) *
                 C31994 +
             (C30717 + C30716) * C31991 + (C30715 + C30714) * C31993) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          (((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
             C28833 * C50874) *
                C50951 +
            (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C50801 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C1725) *
              C50721 * C1077 +
          (((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
             C29243 * C50874) *
                C50951 +
            ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
             (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50874 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C31994 +
             (C23492 + C23491) * C31991 + (C23490 + C23489) * C31993) *
                C50680 +
            ((C23167 + C23166) * C50874 + (C23165 + C23164) * C31994 +
             C23477 * C31991 + C23478 * C31993) *
                C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C31993 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C31991 +
            (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
               C50951 +
           ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
            C28818 * C31994 + C28819 * C50874) *
               C50680) *
              C1891 -
          ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
            C28823 * C31993) *
               C50680 +
           ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
            (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
               C50951) *
              C1892 +
          (((C28849 + C28848) * C31993 + (C28847 + C28846) * C31991 +
            (C31244 + C31245) * C31994 + (C31246 + C31247) * C50874) *
               C50951 +
           (C28832 * C31993 + C28833 * C31991 + (C28850 + C28851) * C31994 +
            (C28852 + C28853) * C50874) *
               C50680) *
              C1893 -
          (((C22720 * C16659 + C50848 * C16661 + C22719 * C7428 +
             C22714 * C7433) *
                C50874 +
            (C22720 * C16658 + C50848 * C16660 + C22719 * C7424 +
             C22714 * C7429) *
                C31994 +
            (C28853 + C28852) * C31991 + (C28851 + C28850) * C31993) *
               C50680 +
           ((C22720 * C14799 + C50848 * C14803 + C22719 * C7430 +
             C22714 * C7434) *
                C50874 +
            (C22720 * C14797 + C50848 * C14801 + C22719 * C7425 +
             C22714 * C7431) *
                C31994 +
            (C31247 + C31246) * C31991 + (C31245 + C31244) * C31993) *
               C50951) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C51014 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C51015 +
           (((C28849 + C28848) * C31993 + (C28847 + C28846) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50874) *
                C50951 +
            (C28832 * C31993 + C28833 * C31991 + (C28850 + C28851) * C31994 +
             (C28852 + C28853) * C50874) *
                C50680) *
               C2141) *
              C50721 * C50960 +
          (((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
             C28833 * C50874) *
                C50951 +
            (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C51015 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C51014 -
           (((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
              C22714 * C1908) *
                 C50874 +
             (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
              C22714 * C1902) *
                 C31994 +
             (C23167 + C23166) * C31991 + (C23165 + C23164) * C31993) *
                C50680 +
            ((C28853 + C28852) * C50874 + (C28851 + C28850) * C31994 +
             C28820 * C31991 + C28821 * C31993) *
                C50951) *
               C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          (((C28818 * C31993 + C28819 * C31991 + C28832 * C31994 +
             C28833 * C50874) *
                C50951 +
            (C29242 * C31993 + C29243 * C31991 + (C23164 + C23165) * C31994 +
             (C23166 + C23167) * C50874) *
                C50680) *
               C50801 -
           ((C23477 * C50874 + C23478 * C31994 + (C22761 + C22760) * C31991 +
             (C22759 + C22758) * C31993) *
                C50680 +
            (C28822 * C50874 + C28823 * C31994 + (C22757 + C22756) * C31991 +
             (C22755 + C22754) * C31993) *
                C50951) *
               C1725) *
              C50721 * C1077 +
          (((C22770 * C31993 + C22771 * C31991 + C29242 * C31994 +
             C29243 * C50874) *
                C50951 +
            ((C22765 + C22764) * C31993 + (C22763 + C22762) * C31991 +
             (C23489 + C23490) * C31994 + (C23491 + C23492) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
                 C50874 +
             (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
                 C31994 +
             (C23492 + C23491) * C31991 + (C23490 + C23489) * C31993) *
                C50680 +
            ((C23167 + C23166) * C50874 + (C23165 + C23164) * C31994 +
             C23477 * C31991 + C23478 * C31993) *
                C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C31993 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C31991 +
             (C28842 + C28843) * C31994 + (C28844 + C28845) * C50874) *
                C50951 +
            ((C22754 + C22755) * C31993 + (C22756 + C22757) * C31991 +
             C28818 * C31994 + C28819 * C50874) *
                C50680) *
               C1725 -
           ((C28820 * C50874 + C28821 * C31994 + C28822 * C31991 +
             C28823 * C31993) *
                C50680 +
            ((C28846 + C28847) * C50874 + (C28848 + C28849) * C31994 +
             (C28845 + C28844) * C31991 + (C28843 + C28842) * C31993) *
                C50951) *
               C50801) *
              C289 +
          ((((C29522 + C29523) * C31993 + (C29524 + C29525) * C31991 +
             (C30056 + C30057) * C31994 + (C30058 + C30059) * C50874) *
                C50951 +
            (C29510 * C31993 + C29511 * C31991 + (C29526 + C29527) * C31994 +
             (C29528 + C29529) * C50874) *
                C50680) *
               C50801 -
           ((C29520 * C50874 + C29521 * C31994 + (C22962 + C22963) * C31991 +
             (C22964 + C22965) * C31993) *
                C50680 +
            ((C29525 + C29524) * C50874 + (C29523 + C29522) * C31994 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C31991 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C31993) *
                C50951) *
               C1725) *
              C290 +
          ((((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                 C31993 +
             (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                 C31991 +
             (C30714 + C30715) * C31994 + (C30716 + C30717) * C50874) *
                C50951 +
            ((C22966 + C22967) * C31993 + (C22968 + C22969) * C31991 +
             (C28612 + C28613) * C31994 + (C28614 + C28615) * C50874) *
                C50680) *
               C1725 -
           (((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
              C22714 * C3747) *
                 C50874 +
             (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
              C22714 * C3743) *
                 C31994 +
             (C28615 + C28614) * C31991 + (C28613 + C28612) * C31993) *
                C50680 +
            ((C22720 * C9393 + C50848 * C9396 + C22719 * C3744 +
              C22714 * C3748) *
                 C50874 +
             (C22720 * C9390 + C50848 * C9394 + C22719 * C3739 +
              C22714 * C3745) *
                 C31994 +
             (C30717 + C30716) * C31991 + (C30715 + C30714) * C31993) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C50737 * C50968 -
                   ((C25568 * C4242 + C25563 * C4246 + C25567 * C1621 +
                     C51005 * C1626 + C25566 * C938 + C51016 * C947) *
                        C50874 +
                    (C25568 * C4237 + C25563 * C4243 + C25567 * C1614 +
                     C51005 * C1622 + C25566 * C932 + C51016 * C937) *
                        C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50737 * C50773) *
                      C51010 +
                  (((C25799 + C25798 + C25797) * C31993 +
                    (C25796 + C25795 + C25794) * C31991 +
                    (C26522 + C26523 + C26524) * C31994 +
                    (C26525 + C26526 + C26527) * C50874) *
                       C50675 * C50737 * C50773 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50737 * C50968) *
                      C51011 +
                  (((C25617 + C25616 + C25615) * C31993 +
                    (C25614 + C25613 + C25612) * C31991 +
                    (C26310 + C26311 + C26312) * C31994 +
                    (C26313 + C26314 + C26315) * C50874) *
                       C50675 * C50737 * C50968 -
                   ((C25568 * C4238 + C25563 * C4244 + C25567 * C1617 +
                     C51005 * C1624 + C25566 * C942 + C51016 * C949) *
                        C50874 +
                    (C25568 * C4235 + C25563 * C4239 + C25567 * C1612 +
                     C51005 * C1618 + C25566 * C934 + C51016 * C941) *
                        C31994 +
                    (C26151 + C26150 + C26149) * C31991 +
                    (C26148 + C26147 + C26146) * C31993) *
                       C50675 * C50737 * C50773) *
                      C673)) /
                (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C31993 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C31991 +
                     (C44718 + C44719 + C44720) * C31994 +
                     (C44721 + C44722 + C44723) * C50874) *
                        C50675 * C50969 -
                    ((C44724 + C44725 + C44726) * C50874 +
                     (C44727 + C44728 + C44729) * C31994 +
                     (C44723 + C44722 + C44721) * C31991 +
                     (C44720 + C44719 + C44718) * C31993) *
                        C50675 * C50801) *
                       C50968 +
                   (((C45228 + C45229 + C45230) * C31993 +
                     (C45231 + C45232 + C45233) * C31991 +
                     (C25566 * C1267 + C51016 * C1275 + C25567 * C3739 +
                      C51005 * C3745 + C25568 * C9390 + C25563 * C9394) *
                         C31994 +
                     (C25566 * C1274 + C51016 * C1279 + C25567 * C3744 +
                      C51005 * C3748 + C25568 * C9393 + C25563 * C9396) *
                         C50874) *
                        C50675 * C50801 -
                    ((C45233 + C45232 + C45231) * C50874 +
                     (C45230 + C45229 + C45228) * C31994 +
                     (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C31991 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C31993) *
                        C50675 * C50969) *
                       C50773) *
                      C292 +
                  ((((C25981 + C25980 + C25979) * C31993 +
                     (C25978 + C25977 + C25976) * C31991 +
                     (C25982 + C25983 + C25984) * C31994 +
                     (C25985 + C25986 + C25987) * C50874) *
                        C50675 * C50801 -
                    ((C25976 + C25977 + C25978) * C50874 +
                     (C25979 + C25980 + C25981) * C31994 +
                     (C25611 + C25610 + C25609) * C31991 +
                     (C25608 + C25607 + C25606) * C31993) *
                        C50675 * C50969) *
                       C50968 +
                   (((C25799 + C25798 + C25797) * C31993 +
                     (C25796 + C25795 + C25794) * C31991 +
                     (C26522 + C26523 + C26524) * C31994 +
                     (C26525 + C26526 + C26527) * C50874) *
                        C50675 * C50969 -
                    ((C25568 * C9391 + C25563 * C9395 + C25567 * C3742 +
                      C51005 * C3747 + C25566 * C1272 + C51016 * C1278) *
                         C50874 +
                     (C25568 * C9389 + C25563 * C9392 + C25567 * C3738 +
                      C51005 * C3743 + C25566 * C1266 + C51016 * C1273) *
                         C31994 +
                     (C26527 + C26526 + C26525) * C31991 +
                     (C26524 + C26523 + C26522) * C31993) *
                        C50675 * C50801) *
                       C50773) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[62] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C25566 * C486 + C51016 * C500 + C25567 * C932 +
                     C51005 * C937 + C25568 * C1614 + C25563 * C1622) *
                        C31994 +
                    (C25566 * C499 + C51016 * C516 + C25567 * C938 +
                     C51005 * C947 + C25568 * C1621 + C25563 * C1626) *
                        C50874) *
                       C50675 * C50737 * C289 -
                   ((C25568 * C4242 + C25563 * C4246 + C25567 * C1621 +
                     C51005 * C1626 + C25566 * C938 + C51016 * C947) *
                        C50874 +
                    (C25568 * C4237 + C25563 * C4243 + C25567 * C1614 +
                     C51005 * C1622 + C25566 * C932 + C51016 * C937) *
                        C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50737 * C290 +
                   ((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C31993 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C31991 +
                    (C25566 * C1614 + C51016 * C1622 + C25567 * C4237 +
                     C51005 * C4243 + C25568 * C9884 + C25563 * C9888) *
                        C31994 +
                    (C25566 * C1621 + C51016 * C1626 + C25567 * C4242 +
                     C51005 * C4246 + C25568 * C9887 + C25563 * C9890) *
                        C50874) *
                       C50675 * C50737 * C291) *
                      C292 +
                  (((C25799 + C25798 + C25797) * C31993 +
                    (C25796 + C25795 + C25794) * C31991 +
                    (C26522 + C26523 + C26524) * C31994 +
                    (C26525 + C26526 + C26527) * C50874) *
                       C50675 * C50737 * C290 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50737 * C289 -
                   ((C25568 * C9885 + C25563 * C9889 + C25567 * C4240 +
                     C51005 * C4245 + C25566 * C1619 + C51016 * C1625) *
                        C50874 +
                    (C25568 * C9883 + C25563 * C9886 + C25567 * C4236 +
                     C51005 * C4241 + C25566 * C1613 + C51016 * C1620) *
                        C31994 +
                    (C25805 + C25804 + C25803) * C31991 +
                    (C25802 + C25801 + C25800) * C31993) *
                       C50675 * C50737 * C291) *
                      C50708)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                    C51005 * C311 + C25568 * C298 + C25563 * C312) *
                       C31993 +
                   (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                    C51005 * C327 + C25568 * C313 + C25563 * C328) *
                       C31991 +
                   (C25566 * C486 + C51016 * C500 + C25567 * C932 +
                    C51005 * C937 + C25568 * C1614 + C25563 * C1622) *
                       C31994 +
                   (C25566 * C499 + C51016 * C516 + C25567 * C938 +
                    C51005 * C947 + C25568 * C1621 + C25563 * C1626) *
                       C50874) *
                      C50675 * C50737 * C50721 * C113 -
                  ((C25976 + C25977 + C25978) * C50874 +
                   (C25979 + C25980 + C25981) * C31994 +
                   (C25611 + C25610 + C25609) * C31991 +
                   (C25608 + C25607 + C25606) * C31993) *
                      C50675 * C50737 * C50721 * C114 +
                  ((C25617 + C25616 + C25615) * C31993 +
                   (C25614 + C25613 + C25612) * C31991 +
                   (C26310 + C26311 + C26312) * C31994 +
                   (C26313 + C26314 + C26315) * C50874) *
                      C50675 * C50737 * C50721 * C115 -
                  ((C25568 * C1615 + C25563 * C1623 + C25567 * C944 +
                    C51005 * C950 + C25566 * C493 + C51016 * C513) *
                       C50874 +
                   (C25568 * C1611 + C25563 * C1616 + C25567 * C935 +
                    C51005 * C943 + C25566 * C483 + C51016 * C494) *
                       C31994 +
                   (C25623 + C25622 + C25621) * C31991 +
                   (C25620 + C25619 + C25618) * C31993) *
                      C50675 * C50737 * C50721 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C480 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C481 +
                   ((C44729 + C44728 + C44727) * C31993 +
                    (C44726 + C44725 + C44724) * C31991 +
                    (C25566 * C1898 + C51016 * C1906 + C25567 * C4639 +
                     C51005 * C4645 + C25568 * C10282 + C25563 * C10286) *
                        C31994 +
                    (C25566 * C1905 + C51016 * C1910 + C25567 * C4644 +
                     C51005 * C4648 + C25568 * C10285 + C25563 * C10288) *
                        C50874) *
                       C50675 * C482) *
                      C50721 * C292 +
                  (((C25981 + C25980 + C25979) * C31993 +
                    (C25978 + C25977 + C25976) * C31991 +
                    (C25982 + C25983 + C25984) * C31994 +
                    (C25985 + C25986 + C25987) * C50874) *
                       C50675 * C481 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C480 -
                   ((C25568 * C10283 + C25563 * C10287 + C25567 * C4642 +
                     C51005 * C4647 + C25566 * C1903 + C51016 * C1909) *
                        C50874 +
                    (C25568 * C10281 + C25563 * C10284 + C25567 * C4638 +
                     C51005 * C4643 + C25566 * C1897 + C51016 * C1904) *
                        C31994 +
                    (C25987 + C25986 + C25985) * C31991 +
                    (C25984 + C25983 + C25982) * C31993) *
                       C50675 * C482) *
                      C50721 * C50708)) /
                    (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C50969 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C50801) *
                      C50721 * C51010 +
                  (((C25981 + C25980 + C25979) * C31993 +
                    (C25978 + C25977 + C25976) * C31991 +
                    (C25982 + C25983 + C25984) * C31994 +
                    (C25985 + C25986 + C25987) * C50874) *
                       C50675 * C50801 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50969) *
                      C50721 * C51011 +
                  (((C25617 + C25616 + C25615) * C31993 +
                    (C25614 + C25613 + C25612) * C31991 +
                    (C26310 + C26311 + C26312) * C31994 +
                    (C26313 + C26314 + C26315) * C50874) *
                       C50675 * C50969 -
                   ((C25568 * C3740 + C25563 * C3746 + C25567 * C1270 +
                     C51005 * C1277 + C25566 * C506 + C51016 * C519) *
                        C50874 +
                    (C25568 * C3737 + C25563 * C3741 + C25567 * C1265 +
                     C51005 * C1271 + C25566 * C489 + C51016 * C505) *
                        C31994 +
                    (C26315 + C26314 + C26313) * C31991 +
                    (C26312 + C26311 + C26310) * C31993) *
                       C50675 * C50801) *
                      C50721 * C673)) /
                (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                    C51005 * C311 + C25568 * C298 + C25563 * C312) *
                       C31993 +
                   (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                    C51005 * C327 + C25568 * C313 + C25563 * C328) *
                       C31991 +
                   (C25566 * C486 + C51016 * C500 + C25567 * C932 +
                    C51005 * C937 + C25568 * C1614 + C25563 * C1622) *
                       C31994 +
                   (C25566 * C499 + C51016 * C516 + C25567 * C938 +
                    C51005 * C947 + C25568 * C1621 + C25563 * C1626) *
                       C50874) *
                      C50675 * C50737 * C50721 * C113 -
                  ((C25976 + C25977 + C25978) * C50874 +
                   (C25979 + C25980 + C25981) * C31994 +
                   (C25611 + C25610 + C25609) * C31991 +
                   (C25608 + C25607 + C25606) * C31993) *
                      C50675 * C50737 * C50721 * C114 +
                  ((C25617 + C25616 + C25615) * C31993 +
                   (C25614 + C25613 + C25612) * C31991 +
                   (C26310 + C26311 + C26312) * C31994 +
                   (C26313 + C26314 + C26315) * C50874) *
                      C50675 * C50737 * C50721 * C115 -
                  ((C25568 * C1615 + C25563 * C1623 + C25567 * C944 +
                    C51005 * C950 + C25566 * C493 + C51016 * C513) *
                       C50874 +
                   (C25568 * C1611 + C25563 * C1616 + C25567 * C935 +
                    C51005 * C943 + C25566 * C483 + C51016 * C494) *
                       C31994 +
                   (C25623 + C25622 + C25621) * C31991 +
                   (C25620 + C25619 + C25618) * C31993) *
                      C50675 * C50737 * C50721 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C25566 * C486 + C51016 * C500 + C25567 * C932 +
                     C51005 * C937 + C25568 * C1614 + C25563 * C1622) *
                        C31994 +
                    (C25566 * C499 + C51016 * C516 + C25567 * C938 +
                     C51005 * C947 + C25568 * C1621 + C25563 * C1626) *
                        C50874) *
                       C50675 * C50737 * C289 -
                   ((C25568 * C4242 + C25563 * C4246 + C25567 * C1621 +
                     C51005 * C1626 + C25566 * C938 + C51016 * C947) *
                        C50874 +
                    (C25568 * C4237 + C25563 * C4243 + C25567 * C1614 +
                     C51005 * C1622 + C25566 * C932 + C51016 * C937) *
                        C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50737 * C290 +
                   ((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C31993 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C31991 +
                    (C25566 * C1614 + C51016 * C1622 + C25567 * C4237 +
                     C51005 * C4243 + C25568 * C9884 + C25563 * C9888) *
                        C31994 +
                    (C25566 * C1621 + C51016 * C1626 + C25567 * C4242 +
                     C51005 * C4246 + C25568 * C9887 + C25563 * C9890) *
                        C50874) *
                       C50675 * C50737 * C291) *
                      C292 +
                  (((C25799 + C25798 + C25797) * C31993 +
                    (C25796 + C25795 + C25794) * C31991 +
                    (C26522 + C26523 + C26524) * C31994 +
                    (C26525 + C26526 + C26527) * C50874) *
                       C50675 * C50737 * C290 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50737 * C289 -
                   ((C25568 * C9885 + C25563 * C9889 + C25567 * C4240 +
                     C51005 * C4245 + C25566 * C1619 + C51016 * C1625) *
                        C50874 +
                    (C25568 * C9883 + C25563 * C9886 + C25567 * C4236 +
                     C51005 * C4241 + C25566 * C1613 + C51016 * C1620) *
                        C31994 +
                    (C25805 + C25804 + C25803) * C31991 +
                    (C25802 + C25801 + C25800) * C31993) *
                       C50675 * C50737 * C291) *
                      C50708)) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C50737 * C51012 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50737 * C51013 +
                   ((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C31993 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C31991 +
                    (C25566 * C1614 + C51016 * C1622 + C25567 * C4237 +
                     C51005 * C4243 + C25568 * C9884 + C25563 * C9888) *
                        C31994 +
                    (C25566 * C1621 + C51016 * C1626 + C25567 * C4242 +
                     C51005 * C4246 + C25568 * C9887 + C25563 * C9890) *
                        C50874) *
                       C50675 * C50737 * C1380) *
                      C50960 +
                  (((C25799 + C25798 + C25797) * C31993 +
                    (C25796 + C25795 + C25794) * C31991 +
                    (C26522 + C26523 + C26524) * C31994 +
                    (C26525 + C26526 + C26527) * C50874) *
                       C50675 * C50737 * C51013 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50737 * C51012 -
                   ((C25568 * C9885 + C25563 * C9889 + C25567 * C4240 +
                     C51005 * C4245 + C25566 * C1619 + C51016 * C1625) *
                        C50874 +
                    (C25568 * C9883 + C25563 * C9886 + C25567 * C4236 +
                     C51005 * C4241 + C25566 * C1613 + C51016 * C1620) *
                        C31994 +
                    (C25805 + C25804 + C25803) * C31991 +
                    (C25802 + C25801 + C25800) * C31993) *
                       C50675 * C50737 * C1380) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C50969 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C50801) *
                      C51012 +
                  (((C45228 + C45229 + C45230) * C31993 +
                    (C45231 + C45232 + C45233) * C31991 +
                    (C45636 + C45637 + C45638) * C31994 +
                    (C45639 + C45640 + C45641) * C50874) *
                       C50675 * C50801 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50969) *
                      C51013 +
                  (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C31993 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C31991 +
                    (C46140 + C46141 + C46142) * C31994 +
                    (C46143 + C46144 + C46145) * C50874) *
                       C50675 * C50969 -
                   ((C25568 * C11639 + C25563 * C11641 + C25567 * C9393 +
                     C51005 * C9396 + C25566 * C3744 + C51016 * C3748) *
                        C50874 +
                    (C25568 * C11638 + C25563 * C11640 + C25567 * C9390 +
                     C51005 * C9394 + C25566 * C3739 + C51016 * C3745) *
                        C31994 +
                    (C46145 + C46144 + C46143) * C31991 +
                    (C46142 + C46141 + C46140) * C31993) *
                       C50675 * C50801) *
                      C1380) *
                 C50702) /
                (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                    C51005 * C311 + C25568 * C298 + C25563 * C312) *
                       C31993 +
                   (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                    C51005 * C327 + C25568 * C313 + C25563 * C328) *
                       C31991 +
                   (C44718 + C44719 + C44720) * C31994 +
                   (C44721 + C44722 + C44723) * C50874) *
                      C50675 * C50737 * C1145 -
                  ((C45233 + C45232 + C45231) * C50874 +
                   (C45230 + C45229 + C45228) * C31994 +
                   (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                    C51005 * C328 + C25566 * C310 + C51016 * C327) *
                       C31991 +
                   (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                    C51005 * C312 + C25566 * C297 + C51016 * C311) *
                       C31993) *
                      C50675 * C50737 * C1146 +
                  ((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                    C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                       C31993 +
                   (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                    C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                       C31991 +
                   (C25566 * C1614 + C51016 * C1622 + C25567 * C4237 +
                    C51005 * C4243 + C25568 * C9884 + C25563 * C9888) *
                       C31994 +
                   (C25566 * C1621 + C51016 * C1626 + C25567 * C4242 +
                    C51005 * C4246 + C25568 * C9887 + C25563 * C9890) *
                       C50874) *
                      C50675 * C50737 * C1147 -
                  ((C25568 * C11969 + C25563 * C11971 + C25567 * C9887 +
                    C51005 * C9890 + C25566 * C4242 + C51016 * C4246) *
                       C50874 +
                   (C25568 * C11968 + C25563 * C11970 + C25567 * C9884 +
                    C51005 * C9888 + C25566 * C4237 + C51016 * C4243) *
                       C31994 +
                   (C25568 * C9239 + C25563 * C9242 + C25567 * C3586 +
                    C51005 * C3590 + C25566 * C1160 + C51016 * C1165) *
                       C31991 +
                   (C25568 * C9236 + C25563 * C9240 + C25567 * C3581 +
                    C51005 * C3587 + C25566 * C1153 + C51016 * C1161) *
                       C31993) *
                      C50675 * C50737 * C1148) *
                 C50702) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C50737 * C1074 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50737 * C50773) *
                      C1076 +
                  (((C25799 + C25798 + C25797) * C31993 +
                    (C25796 + C25795 + C25794) * C31991 +
                    (C26522 + C26523 + C26524) * C31994 +
                    (C26525 + C26526 + C26527) * C50874) *
                       C50675 * C50737 * C50773 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50737 * C1074) *
                      C1077 +
                  (((C25617 + C25616 + C25615) * C31993 +
                    (C25614 + C25613 + C25612) * C31991 +
                    (C26310 + C26311 + C26312) * C31994 +
                    (C26313 + C26314 + C26315) * C50874) *
                       C50675 * C50737 * C1074 -
                   ((C25568 * C4238 + C25563 * C4244 + C25567 * C1617 +
                     C51005 * C1624 + C25566 * C942 + C51016 * C949) *
                        C50874 +
                    (C25568 * C4235 + C25563 * C4239 + C25567 * C1612 +
                     C51005 * C1618 + C25566 * C934 + C51016 * C941) *
                        C31994 +
                    (C26151 + C26150 + C26149) * C31991 +
                    (C26148 + C26147 + C26146) * C31993) *
                       C50675 * C50737 * C50773) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C480 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C481 +
                   ((C44729 + C44728 + C44727) * C31993 +
                    (C44726 + C44725 + C44724) * C31991 +
                    (C25566 * C1898 + C51016 * C1906 + C25567 * C4639 +
                     C51005 * C4645 + C25568 * C10282 + C25563 * C10286) *
                        C31994 +
                    (C25566 * C1905 + C51016 * C1910 + C25567 * C4644 +
                     C51005 * C4648 + C25568 * C10285 + C25563 * C10288) *
                        C50874) *
                       C50675 * C482) *
                      C1074 +
                  (((C45228 + C45229 + C45230) * C31993 +
                    (C45231 + C45232 + C45233) * C31991 +
                    (C45636 + C45637 + C45638) * C31994 +
                    (C45639 + C45640 + C45641) * C50874) *
                       C50675 * C481 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C480 -
                   ((C25568 * C12235 + C25563 * C12237 + C25567 * C10285 +
                     C51005 * C10288 + C25566 * C4644 + C51016 * C4648) *
                        C50874 +
                    (C25568 * C12234 + C25563 * C12236 + C25567 * C10282 +
                     C51005 * C10286 + C25566 * C4639 + C51016 * C4645) *
                        C31994 +
                    (C45641 + C45640 + C45639) * C31991 +
                    (C45638 + C45637 + C45636) * C31993) *
                       C50675 * C482) *
                      C50773) *
                 C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C31993 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C31991 +
                     (C44718 + C44719 + C44720) * C31994 +
                     (C44721 + C44722 + C44723) * C50874) *
                        C50675 * C50969 -
                    ((C44724 + C44725 + C44726) * C50874 +
                     (C44727 + C44728 + C44729) * C31994 +
                     (C44723 + C44722 + C44721) * C31991 +
                     (C44720 + C44719 + C44718) * C31993) *
                        C50675 * C50801) *
                       C1074 +
                   (((C45228 + C45229 + C45230) * C31993 +
                     (C45231 + C45232 + C45233) * C31991 +
                     (C45636 + C45637 + C45638) * C31994 +
                     (C45639 + C45640 + C45641) * C50874) *
                        C50675 * C50801 -
                    ((C45233 + C45232 + C45231) * C50874 +
                     (C45230 + C45229 + C45228) * C31994 +
                     (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C31991 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C31993) *
                        C50675 * C50969) *
                       C50773) *
                      C50960 +
                  ((((C25981 + C25980 + C25979) * C31993 +
                     (C25978 + C25977 + C25976) * C31991 +
                     (C25982 + C25983 + C25984) * C31994 +
                     (C25985 + C25986 + C25987) * C50874) *
                        C50675 * C50801 -
                    ((C25976 + C25977 + C25978) * C50874 +
                     (C25979 + C25980 + C25981) * C31994 +
                     (C25611 + C25610 + C25609) * C31991 +
                     (C25608 + C25607 + C25606) * C31993) *
                        C50675 * C50969) *
                       C1074 +
                   (((C25799 + C25798 + C25797) * C31993 +
                     (C25796 + C25795 + C25794) * C31991 +
                     (C26522 + C26523 + C26524) * C31994 +
                     (C26525 + C26526 + C26527) * C50874) *
                        C50675 * C50969 -
                    ((C25568 * C9391 + C25563 * C9395 + C25567 * C3742 +
                      C51005 * C3747 + C25566 * C1272 + C51016 * C1278) *
                         C50874 +
                     (C25568 * C9389 + C25563 * C9392 + C25567 * C3738 +
                      C51005 * C3743 + C25566 * C1266 + C51016 * C1273) *
                         C31994 +
                     (C26527 + C26526 + C26525) * C31991 +
                     (C26524 + C26523 + C26522) * C31993) *
                        C50675 * C50801) *
                       C50773) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C50737 * C1074 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C50737 * C50773) *
                      C1076 +
                  (((C25799 + C25798 + C25797) * C31993 +
                    (C25796 + C25795 + C25794) * C31991 +
                    (C26522 + C26523 + C26524) * C31994 +
                    (C26525 + C26526 + C26527) * C50874) *
                       C50675 * C50737 * C50773 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C50737 * C1074) *
                      C1077 +
                  (((C25617 + C25616 + C25615) * C31993 +
                    (C25614 + C25613 + C25612) * C31991 +
                    (C26310 + C26311 + C26312) * C31994 +
                    (C26313 + C26314 + C26315) * C50874) *
                       C50675 * C50737 * C1074 -
                   ((C25568 * C4238 + C25563 * C4244 + C25567 * C1617 +
                     C51005 * C1624 + C25566 * C942 + C51016 * C949) *
                        C50874 +
                    (C25568 * C4235 + C25563 * C4239 + C25567 * C1612 +
                     C51005 * C1618 + C25566 * C934 + C51016 * C941) *
                        C31994 +
                    (C26151 + C26150 + C26149) * C31991 +
                    (C26148 + C26147 + C26146) * C31993) *
                       C50675 * C50737 * C50773) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                    C51005 * C311 + C25568 * C298 + C25563 * C312) *
                       C31993 +
                   (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                    C51005 * C327 + C25568 * C313 + C25563 * C328) *
                       C31991 +
                   (C44718 + C44719 + C44720) * C31994 +
                   (C44721 + C44722 + C44723) * C50874) *
                      C50675 * C50737 * C1145 -
                  ((C45233 + C45232 + C45231) * C50874 +
                   (C45230 + C45229 + C45228) * C31994 +
                   (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                    C51005 * C328 + C25566 * C310 + C51016 * C327) *
                       C31991 +
                   (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                    C51005 * C312 + C25566 * C297 + C51016 * C311) *
                       C31993) *
                      C50675 * C50737 * C1146 +
                  ((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                    C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                       C31993 +
                   (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                    C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                       C31991 +
                   (C25566 * C1614 + C51016 * C1622 + C25567 * C4237 +
                    C51005 * C4243 + C25568 * C9884 + C25563 * C9888) *
                       C31994 +
                   (C25566 * C1621 + C51016 * C1626 + C25567 * C4242 +
                    C51005 * C4246 + C25568 * C9887 + C25563 * C9890) *
                       C50874) *
                      C50675 * C50737 * C1147 -
                  ((C25568 * C11969 + C25563 * C11971 + C25567 * C9887 +
                    C51005 * C9890 + C25566 * C4242 + C51016 * C4246) *
                       C50874 +
                   (C25568 * C11968 + C25563 * C11970 + C25567 * C9884 +
                    C51005 * C9888 + C25566 * C4237 + C51016 * C4243) *
                       C31994 +
                   (C25568 * C9239 + C25563 * C9242 + C25567 * C3586 +
                    C51005 * C3590 + C25566 * C1160 + C51016 * C1165) *
                       C31991 +
                   (C25568 * C9236 + C25563 * C9240 + C25567 * C3581 +
                    C51005 * C3587 + C25566 * C1153 + C51016 * C1161) *
                       C31993) *
                      C50675 * C50737 * C1148) *
                 C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                      C51005 * C311 + C25568 * C298 + C25563 * C312) *
                         C31993 +
                     (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                      C51005 * C327 + C25568 * C313 + C25563 * C328) *
                         C31991 +
                     (C44718 + C44719 + C44720) * C31994 +
                     (C44721 + C44722 + C44723) * C50874) *
                        C50675 * C1725 -
                    ((C44724 + C44725 + C44726) * C50874 +
                     (C44727 + C44728 + C44729) * C31994 +
                     (C44723 + C44722 + C44721) * C31991 +
                     (C44720 + C44719 + C44718) * C31993) *
                        C50675 * C50801) *
                       C50968 +
                   (((C45228 + C45229 + C45230) * C31993 +
                     (C45231 + C45232 + C45233) * C31991 +
                     (C45636 + C45637 + C45638) * C31994 +
                     (C45639 + C45640 + C45641) * C50874) *
                        C50675 * C50801 -
                    ((C45233 + C45232 + C45231) * C50874 +
                     (C45230 + C45229 + C45228) * C31994 +
                     (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                      C51005 * C328 + C25566 * C310 + C51016 * C327) *
                         C31991 +
                     (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                      C51005 * C312 + C25566 * C297 + C51016 * C311) *
                         C31993) *
                        C50675 * C1725) *
                       C50773) *
                      C50960 +
                  ((((C25981 + C25980 + C25979) * C31993 +
                     (C25978 + C25977 + C25976) * C31991 +
                     (C25982 + C25983 + C25984) * C31994 +
                     (C25985 + C25986 + C25987) * C50874) *
                        C50675 * C50801 -
                    ((C25976 + C25977 + C25978) * C50874 +
                     (C25979 + C25980 + C25981) * C31994 +
                     (C25611 + C25610 + C25609) * C31991 +
                     (C25608 + C25607 + C25606) * C31993) *
                        C50675 * C1725) *
                       C50968 +
                   (((C25799 + C25798 + C25797) * C31993 +
                     (C25796 + C25795 + C25794) * C31991 +
                     (C26522 + C26523 + C26524) * C31994 +
                     (C26525 + C26526 + C26527) * C50874) *
                        C50675 * C1725 -
                    ((C25568 * C9391 + C25563 * C9395 + C25567 * C3742 +
                      C51005 * C3747 + C25566 * C1272 + C51016 * C1278) *
                         C50874 +
                     (C25568 * C9389 + C25563 * C9392 + C25567 * C3738 +
                      C51005 * C3743 + C25566 * C1266 + C51016 * C1273) *
                         C31994 +
                     (C26527 + C26526 + C26525) * C31991 +
                     (C26524 + C26523 + C26522) * C31993) *
                        C50675 * C50801) *
                       C50773) *
                      C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C51014 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C51015 +
                   ((C44729 + C44728 + C44727) * C31993 +
                    (C44726 + C44725 + C44724) * C31991 +
                    (C46548 + C46549 + C46550) * C31994 +
                    (C46551 + C46552 + C46553) * C50874) *
                       C50675 * C2141) *
                      C50968 +
                  (((C45228 + C45229 + C45230) * C31993 +
                    (C45231 + C45232 + C45233) * C31991 +
                    (C45636 + C45637 + C45638) * C31994 +
                    (C45639 + C45640 + C45641) * C50874) *
                       C50675 * C51015 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C51014 -
                   ((C25568 * C12235 + C25563 * C12237 + C25567 * C10285 +
                     C51005 * C10288 + C25566 * C4644 + C51016 * C4648) *
                        C50874 +
                    (C25568 * C12234 + C25563 * C12236 + C25567 * C10282 +
                     C51005 * C10286 + C25566 * C4639 + C51016 * C4645) *
                        C31994 +
                    (C45641 + C45640 + C45639) * C31991 +
                    (C45638 + C45637 + C45636) * C31993) *
                       C50675 * C2141) *
                      C50773) *
                 C50702) /
                (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C1725 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C50801) *
                      C289 +
                  (((C45228 + C45229 + C45230) * C31993 +
                    (C45231 + C45232 + C45233) * C31991 +
                    (C45636 + C45637 + C45638) * C31994 +
                    (C45639 + C45640 + C45641) * C50874) *
                       C50675 * C50801 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C1725) *
                      C290 +
                  (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C31993 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C31991 +
                    (C46140 + C46141 + C46142) * C31994 +
                    (C46143 + C46144 + C46145) * C50874) *
                       C50675 * C1725 -
                   ((C25568 * C11639 + C25563 * C11641 + C25567 * C9393 +
                     C51005 * C9396 + C25566 * C3744 + C51016 * C3748) *
                        C50874 +
                    (C25568 * C11638 + C25563 * C11640 + C25567 * C9390 +
                     C51005 * C9394 + C25566 * C3739 + C51016 * C3745) *
                        C31994 +
                    (C46145 + C46144 + C46143) * C31991 +
                    (C46142 + C46141 + C46140) * C31993) *
                       C50675 * C50801) *
                      C291) *
                 C50702) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C1725 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C50801) *
                      C50721 * C1076 +
                  (((C25981 + C25980 + C25979) * C31993 +
                    (C25978 + C25977 + C25976) * C31991 +
                    (C25982 + C25983 + C25984) * C31994 +
                    (C25985 + C25986 + C25987) * C50874) *
                       C50675 * C50801 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C1725) *
                      C50721 * C1077 +
                  (((C25617 + C25616 + C25615) * C31993 +
                    (C25614 + C25613 + C25612) * C31991 +
                    (C26310 + C26311 + C26312) * C31994 +
                    (C26313 + C26314 + C26315) * C50874) *
                       C50675 * C1725 -
                   ((C25568 * C3740 + C25563 * C3746 + C25567 * C1270 +
                     C51005 * C1277 + C25566 * C506 + C51016 * C519) *
                        C50874 +
                    (C25568 * C3737 + C25563 * C3741 + C25567 * C1265 +
                     C51005 * C1271 + C25566 * C489 + C51016 * C505) *
                        C31994 +
                    (C26315 + C26314 + C26313) * C31991 +
                    (C26312 + C26311 + C26310) * C31993) *
                       C50675 * C50801) *
                      C50721 * C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                    C51005 * C311 + C25568 * C298 + C25563 * C312) *
                       C31993 +
                   (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                    C51005 * C327 + C25568 * C313 + C25563 * C328) *
                       C31991 +
                   (C44718 + C44719 + C44720) * C31994 +
                   (C44721 + C44722 + C44723) * C50874) *
                      C50675 * C1891 -
                  ((C44724 + C44725 + C44726) * C50874 +
                   (C44727 + C44728 + C44729) * C31994 +
                   (C44723 + C44722 + C44721) * C31991 +
                   (C44720 + C44719 + C44718) * C31993) *
                      C50675 * C1892 +
                  ((C44729 + C44728 + C44727) * C31993 +
                   (C44726 + C44725 + C44724) * C31991 +
                   (C46548 + C46549 + C46550) * C31994 +
                   (C46551 + C46552 + C46553) * C50874) *
                      C50675 * C1893 -
                  ((C25568 * C14798 + C25563 * C14802 + C25567 * C14799 +
                    C51005 * C14803 + C25566 * C7430 + C51016 * C7434) *
                       C50874 +
                   (C25568 * C14796 + C25563 * C14800 + C25567 * C14797 +
                    C51005 * C14801 + C25566 * C7425 + C51016 * C7431) *
                       C31994 +
                   (C46553 + C46552 + C46551) * C31991 +
                   (C46550 + C46549 + C46548) * C31993) *
                      C50675 * C1894) *
                 C50721 * C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C51014 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C51015 +
                   ((C44729 + C44728 + C44727) * C31993 +
                    (C44726 + C44725 + C44724) * C31991 +
                    (C46548 + C46549 + C46550) * C31994 +
                    (C46551 + C46552 + C46553) * C50874) *
                       C50675 * C2141) *
                      C50721 * C50960 +
                  (((C25981 + C25980 + C25979) * C31993 +
                    (C25978 + C25977 + C25976) * C31991 +
                    (C25982 + C25983 + C25984) * C31994 +
                    (C25985 + C25986 + C25987) * C50874) *
                       C50675 * C51015 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C51014 -
                   ((C25568 * C10283 + C25563 * C10287 + C25567 * C4642 +
                     C51005 * C4647 + C25566 * C1903 + C51016 * C1909) *
                        C50874 +
                    (C25568 * C10281 + C25563 * C10284 + C25567 * C4638 +
                     C51005 * C4643 + C25566 * C1897 + C51016 * C1904) *
                        C31994 +
                    (C25987 + C25986 + C25985) * C31991 +
                    (C25984 + C25983 + C25982) * C31993) *
                       C50675 * C2141) *
                      C50721 * C50708)) /
                (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C1725 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C50801) *
                      C50721 * C1076 +
                  (((C25981 + C25980 + C25979) * C31993 +
                    (C25978 + C25977 + C25976) * C31991 +
                    (C25982 + C25983 + C25984) * C31994 +
                    (C25985 + C25986 + C25987) * C50874) *
                       C50675 * C50801 -
                   ((C25976 + C25977 + C25978) * C50874 +
                    (C25979 + C25980 + C25981) * C31994 +
                    (C25611 + C25610 + C25609) * C31991 +
                    (C25608 + C25607 + C25606) * C31993) *
                       C50675 * C1725) *
                      C50721 * C1077 +
                  (((C25617 + C25616 + C25615) * C31993 +
                    (C25614 + C25613 + C25612) * C31991 +
                    (C26310 + C26311 + C26312) * C31994 +
                    (C26313 + C26314 + C26315) * C50874) *
                       C50675 * C1725 -
                   ((C25568 * C3740 + C25563 * C3746 + C25567 * C1270 +
                     C51005 * C1277 + C25566 * C506 + C51016 * C519) *
                        C50874 +
                    (C25568 * C3737 + C25563 * C3741 + C25567 * C1265 +
                     C51005 * C1271 + C25566 * C489 + C51016 * C505) *
                        C31994 +
                    (C26315 + C26314 + C26313) * C31991 +
                    (C26312 + C26311 + C26310) * C31993) *
                       C50675 * C50801) *
                      C50721 * C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25566 * C119 + C51016 * C126 + C25567 * C297 +
                     C51005 * C311 + C25568 * C298 + C25563 * C312) *
                        C31993 +
                    (C25566 * C127 + C51016 * C140 + C25567 * C310 +
                     C51005 * C327 + C25568 * C313 + C25563 * C328) *
                        C31991 +
                    (C44718 + C44719 + C44720) * C31994 +
                    (C44721 + C44722 + C44723) * C50874) *
                       C50675 * C1725 -
                   ((C44724 + C44725 + C44726) * C50874 +
                    (C44727 + C44728 + C44729) * C31994 +
                    (C44723 + C44722 + C44721) * C31991 +
                    (C44720 + C44719 + C44718) * C31993) *
                       C50675 * C50801) *
                      C289 +
                  (((C45228 + C45229 + C45230) * C31993 +
                    (C45231 + C45232 + C45233) * C31991 +
                    (C45636 + C45637 + C45638) * C31994 +
                    (C45639 + C45640 + C45641) * C50874) *
                       C50675 * C50801 -
                   ((C45233 + C45232 + C45231) * C50874 +
                    (C45230 + C45229 + C45228) * C31994 +
                    (C25568 * C1160 + C25563 * C1165 + C25567 * C313 +
                     C51005 * C328 + C25566 * C310 + C51016 * C327) *
                        C31991 +
                    (C25568 * C1153 + C25563 * C1161 + C25567 * C298 +
                     C51005 * C312 + C25566 * C297 + C51016 * C311) *
                        C31993) *
                       C50675 * C1725) *
                      C290 +
                  (((C25566 * C298 + C51016 * C312 + C25567 * C1153 +
                     C51005 * C1161 + C25568 * C3581 + C25563 * C3587) *
                        C31993 +
                    (C25566 * C313 + C51016 * C328 + C25567 * C1160 +
                     C51005 * C1165 + C25568 * C3586 + C25563 * C3590) *
                        C31991 +
                    (C46140 + C46141 + C46142) * C31994 +
                    (C46143 + C46144 + C46145) * C50874) *
                       C50675 * C1725 -
                   ((C25568 * C11639 + C25563 * C11641 + C25567 * C9393 +
                     C51005 * C9396 + C25566 * C3744 + C51016 * C3748) *
                        C50874 +
                    (C25568 * C11638 + C25563 * C11640 + C25567 * C9390 +
                     C51005 * C9394 + C25566 * C3739 + C51016 * C3745) *
                        C31994 +
                    (C46145 + C46144 + C46143) * C31991 +
                    (C46142 + C46141 + C46140) * C31993) *
                       C50675 * C50801) *
                      C291) *
                 C50702) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C50737 * C50968 -
           ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
            (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50737 * C50773) *
              C51010 +
          (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
            C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
            (C29528 + C29529) * C38217) *
               C50675 * C50737 * C50773 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50737 * C50968) *
              C51011 +
          ((C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
            C29243 * C51008 + (C23164 + C23165) * C38220 +
            (C23166 + C23167) * C38217) *
               C50675 * C50737 * C50968 -
           ((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
             C22714 * C1277) *
                C38217 +
            (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
             C22714 * C1271) *
                C38220 +
            (C23711 + C23710) * C51008 + (C23709 + C23708) * C38219 +
            C23314 * C51017 + C23315 * C38218) *
               C50675 * C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C38218 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C51017 +
             (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
             C47430 * C38220 + C47431 * C38217) *
                C50675 * C50969 -
            ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
             (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
             (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
                C50675 * C50801) *
               C50968 +
           (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
             (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
             (C22719 * C4639 + C22714 * C4645 + C22720 * C10282 +
              C50848 * C10286) *
                 C38220 +
             (C22719 * C4644 + C22714 * C4648 + C22720 * C10285 +
              C50848 * C10288) *
                 C38217) *
                C50675 * C50801 -
            ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
             (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C51017 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C38218) *
                C50675 * C50969) *
               C50773) *
              C292 +
          (((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
             C28833 * C51008 + (C28850 + C28851) * C38220 +
             (C28852 + C28853) * C38217) *
                C50675 * C50801 -
            (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
             C28823 * C38219 + (C22757 + C22756) * C51017 +
             (C22755 + C22754) * C38218) *
                C50675 * C50969) *
               C50968 +
           (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
             C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
             (C29528 + C29529) * C38217) *
                C50675 * C50969 -
            ((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C38217 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C38220 +
             (C29529 + C29528) * C51008 + (C29527 + C29526) * C38219 +
             C29520 * C51017 + C29521 * C38218) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            (C28849 + C28848) * C38220 + (C28847 + C28846) * C38217) *
               C50675 * C50737 * C289 -
           ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
            (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50737 * C290 +
           ((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C38218 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C51017 +
            (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
            (C22719 * C3739 + C22714 * C3745 + C22720 * C9390 +
             C50848 * C9394) *
                C38220 +
            (C22719 * C3744 + C22714 * C3748 + C22720 * C9393 +
             C50848 * C9396) *
                C38217) *
               C50675 * C50737 * C291) *
              C292 +
          (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
            C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
            (C29528 + C29529) * C38217) *
               C50675 * C50737 * C290 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50737 * C289 -
           ((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
             C22714 * C3747) *
                C38217 +
            (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
             C22714 * C3743) *
                C38220 +
            (C28615 + C28614) * C51008 + (C28613 + C28612) * C38219 +
            (C22969 + C22968) * C51017 + (C22967 + C22966) * C38218) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
               C38218 +
           (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
               C51017 +
           (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
           (C28849 + C28848) * C38220 + (C28847 + C28846) * C38217) *
              C50675 * C50737 * C50721 * C113 -
          (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
           C28823 * C38219 + (C22757 + C22756) * C51017 +
           (C22755 + C22754) * C38218) *
              C50675 * C50737 * C50721 * C114 +
          (C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
           C29243 * C51008 + (C23164 + C23165) * C38220 +
           (C23166 + C23167) * C38217) *
              C50675 * C50737 * C50721 * C115 -
          ((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
               C38217 +
           (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
               C38220 +
           (C23492 + C23491) * C51008 + (C23490 + C23489) * C38219 +
           C22772 * C51017 + C22773 * C38218) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C480 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C481 +
           (C47430 * C38218 + C47431 * C51017 + (C31244 + C31245) * C38219 +
            (C31246 + C31247) * C51008 +
            (C22719 * C7425 + C22714 * C7431 + C22720 * C14797 +
             C50848 * C14801) *
                C38220 +
            (C22719 * C7430 + C22714 * C7434 + C22720 * C14799 +
             C50848 * C14803) *
                C38217) *
               C50675 * C482) *
              C50721 * C292 +
          ((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
            C28833 * C51008 + (C28850 + C28851) * C38220 +
            (C28852 + C28853) * C38217) *
               C50675 * C481 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C480 -
           ((C22720 * C16659 + C50848 * C16661 + C22719 * C7428 +
             C22714 * C7433) *
                C38217 +
            (C22720 * C16658 + C50848 * C16660 + C22719 * C7424 +
             C22714 * C7429) *
                C38220 +
            (C28853 + C28852) * C51008 + (C28851 + C28850) * C38219 +
            C28820 * C51017 + C28821 * C38218) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C50969 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C50801) *
              C50721 * C51010 +
          ((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
            C28833 * C51008 + (C28850 + C28851) * C38220 +
            (C28852 + C28853) * C38217) *
               C50675 * C50801 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50969) *
              C50721 * C51011 +
          ((C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
            C29243 * C51008 + (C23164 + C23165) * C38220 +
            (C23166 + C23167) * C38217) *
               C50675 * C50969 -
           ((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
             C22714 * C1908) *
                C38217 +
            (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
             C22714 * C1902) *
                C38220 +
            (C23167 + C23166) * C51008 + (C23165 + C23164) * C38219 +
            C23477 * C51017 + C23478 * C38218) *
               C50675 * C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
               C38218 +
           (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
               C51017 +
           (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
           (C28849 + C28848) * C38220 + (C28847 + C28846) * C38217) *
              C50675 * C50737 * C50721 * C113 -
          (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
           C28823 * C38219 + (C22757 + C22756) * C51017 +
           (C22755 + C22754) * C38218) *
              C50675 * C50737 * C50721 * C114 +
          (C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
           C29243 * C51008 + (C23164 + C23165) * C38220 +
           (C23166 + C23167) * C38217) *
              C50675 * C50737 * C50721 * C115 -
          ((C22720 * C1268 + C50848 * C1276 + C22719 * C508 + C22714 * C520) *
               C38217 +
           (C22720 * C1264 + C50848 * C1269 + C22719 * C490 + C22714 * C507) *
               C38220 +
           (C23492 + C23491) * C51008 + (C23490 + C23489) * C38219 +
           C22772 * C51017 + C22773 * C38218) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            (C28849 + C28848) * C38220 + (C28847 + C28846) * C38217) *
               C50675 * C50737 * C289 -
           ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
            (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50737 * C290 +
           ((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C38218 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C51017 +
            (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
            (C22719 * C3739 + C22714 * C3745 + C22720 * C9390 +
             C50848 * C9394) *
                C38220 +
            (C22719 * C3744 + C22714 * C3748 + C22720 * C9393 +
             C50848 * C9396) *
                C38217) *
               C50675 * C50737 * C291) *
              C292 +
          (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
            C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
            (C29528 + C29529) * C38217) *
               C50675 * C50737 * C290 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50737 * C289 -
           ((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
             C22714 * C3747) *
                C38217 +
            (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
             C22714 * C3743) *
                C38220 +
            (C28615 + C28614) * C51008 + (C28613 + C28612) * C38219 +
            (C22969 + C22968) * C51017 + (C22967 + C22966) * C38218) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C50737 * C51012 -
           (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
            (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50737 * C51013 +
           ((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C38218 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C51017 +
            (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
            (C22719 * C3739 + C22714 * C3745 + C22720 * C9390 +
             C50848 * C9394) *
                C38220 +
            (C22719 * C3744 + C22714 * C3748 + C22720 * C9393 +
             C50848 * C9396) *
                C38217) *
               C50675 * C50737 * C1380) *
              C50960 +
          (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
            C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
            (C29528 + C29529) * C38217) *
               C50675 * C50737 * C51013 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50737 * C51012 -
           ((C22720 * C9391 + C50848 * C9395 + C22719 * C3742 +
             C22714 * C3747) *
                C38217 +
            (C22720 * C9389 + C50848 * C9392 + C22719 * C3738 +
             C22714 * C3743) *
                C38220 +
            (C28615 + C28614) * C51008 + (C28613 + C28612) * C38219 +
            (C22969 + C22968) * C51017 + (C22967 + C22966) * C38218) *
               C50675 * C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C50969 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C50801) *
              C51012 +
          (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
            (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
            (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
               C50675 * C50801 -
           (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
            (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50969) *
              C51013 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C38218 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C51017 +
            (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
            (C48816 + C48817) * C38220 + (C48818 + C48819) * C38217) *
               C50675 * C50969 -
           ((C22720 * C12235 + C50848 * C12237 + C22719 * C10285 +
             C22714 * C10288) *
                C38217 +
            (C22720 * C12234 + C50848 * C12236 + C22719 * C10282 +
             C22714 * C10286) *
                C38220 +
            (C48819 + C48818) * C51008 + (C48817 + C48816) * C38219 +
            (C30717 + C30716) * C51017 + (C30715 + C30714) * C38218) *
               C50675 * C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
               C38218 +
           (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
               C51017 +
           (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
           C47430 * C38220 + C47431 * C38217) *
              C50675 * C50737 * C1145 -
          ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
           (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
           (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
               C51017 +
           (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
               C38218) *
              C50675 * C50737 * C1146 +
          ((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
               C38218 +
           (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
               C51017 +
           (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
           (C22719 * C3739 + C22714 * C3745 + C22720 * C9390 + C50848 * C9394) *
               C38220 +
           (C22719 * C3744 + C22714 * C3748 + C22720 * C9393 + C50848 * C9396) *
               C38217) *
              C50675 * C50737 * C1147 -
          ((C22720 * C11639 + C50848 * C11641 + C22719 * C9393 +
            C22714 * C9396) *
               C38217 +
           (C22720 * C11638 + C50848 * C11640 + C22719 * C9390 +
            C22714 * C9394) *
               C38220 +
           (C22720 * C9887 + C50848 * C9890 + C22719 * C4242 + C22714 * C4246) *
               C51008 +
           (C22720 * C9884 + C50848 * C9888 + C22719 * C4237 + C22714 * C4243) *
               C38219 +
           (C22720 * C3586 + C50848 * C3590 + C22719 * C1160 + C22714 * C1165) *
               C51017 +
           (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 + C22714 * C1161) *
               C38218) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C50737 * C1074 -
           ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
            (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
            C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
            (C29528 + C29529) * C38217) *
               C50675 * C50737 * C50773 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50737 * C1074) *
              C1077 +
          ((C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
            C29243 * C51008 + (C23164 + C23165) * C38220 +
            (C23166 + C23167) * C38217) *
               C50675 * C50737 * C1074 -
           ((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
             C22714 * C1277) *
                C38217 +
            (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
             C22714 * C1271) *
                C38220 +
            (C23711 + C23710) * C51008 + (C23709 + C23708) * C38219 +
            C23314 * C51017 + C23315 * C38218) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C480 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C481 +
           (C47430 * C38218 + C47431 * C51017 + (C31244 + C31245) * C38219 +
            (C31246 + C31247) * C51008 +
            (C22719 * C7425 + C22714 * C7431 + C22720 * C14797 +
             C50848 * C14801) *
                C38220 +
            (C22719 * C7430 + C22714 * C7434 + C22720 * C14799 +
             C50848 * C14803) *
                C38217) *
               C50675 * C482) *
              C1074 +
          (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
            (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
            (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
               C50675 * C481 -
           (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
            (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C480 -
           ((C22720 * C14798 + C50848 * C14802 + C22719 * C14799 +
             C22714 * C14803) *
                C38217 +
            (C22720 * C14796 + C50848 * C14800 + C22719 * C14797 +
             C22714 * C14801) *
                C38220 +
            (C48321 + C48320) * C51008 + (C48319 + C48318) * C38219 +
            C48316 * C51017 + C48317 * C38218) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C38218 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C51017 +
             (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
             C47430 * C38220 + C47431 * C38217) *
                C50675 * C50969 -
            ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
             (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
             (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
                C50675 * C50801) *
               C1074 +
           (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
             (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
             (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
                C50675 * C50801 -
            (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
             (C29523 + C29522) * C38219 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C51017 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C38218) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          (((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
             C28833 * C51008 + (C28850 + C28851) * C38220 +
             (C28852 + C28853) * C38217) *
                C50675 * C50801 -
            (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
             C28823 * C38219 + (C22757 + C22756) * C51017 +
             (C22755 + C22754) * C38218) *
                C50675 * C50969) *
               C1074 +
           (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
             C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
             (C29528 + C29529) * C38217) *
                C50675 * C50969 -
            ((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C38217 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C38220 +
             (C29529 + C29528) * C51008 + (C29527 + C29526) * C38219 +
             C29520 * C51017 + C29521 * C38218) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C50737 * C1074 -
           ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
            (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
            C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
            (C29528 + C29529) * C38217) *
               C50675 * C50737 * C50773 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C50737 * C1074) *
              C1077 +
          ((C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
            C29243 * C51008 + (C23164 + C23165) * C38220 +
            (C23166 + C23167) * C38217) *
               C50675 * C50737 * C1074 -
           ((C22720 * C3740 + C50848 * C3746 + C22719 * C1270 +
             C22714 * C1277) *
                C38217 +
            (C22720 * C3737 + C50848 * C3741 + C22719 * C1265 +
             C22714 * C1271) *
                C38220 +
            (C23711 + C23710) * C51008 + (C23709 + C23708) * C38219 +
            C23314 * C51017 + C23315 * C38218) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
               C38218 +
           (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
               C51017 +
           (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
           C47430 * C38220 + C47431 * C38217) *
              C50675 * C50737 * C1145 -
          ((C30059 + C30058) * C38217 + (C30057 + C30056) * C38220 +
           (C29525 + C29524) * C51008 + (C29523 + C29522) * C38219 +
           (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
               C51017 +
           (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
               C38218) *
              C50675 * C50737 * C1146 +
          ((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
               C38218 +
           (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
               C51017 +
           (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
           (C22719 * C3739 + C22714 * C3745 + C22720 * C9390 + C50848 * C9394) *
               C38220 +
           (C22719 * C3744 + C22714 * C3748 + C22720 * C9393 + C50848 * C9396) *
               C38217) *
              C50675 * C50737 * C1147 -
          ((C22720 * C11639 + C50848 * C11641 + C22719 * C9393 +
            C22714 * C9396) *
               C38217 +
           (C22720 * C11638 + C50848 * C11640 + C22719 * C9390 +
            C22714 * C9394) *
               C38220 +
           (C22720 * C9887 + C50848 * C9890 + C22719 * C4242 + C22714 * C4246) *
               C51008 +
           (C22720 * C9884 + C50848 * C9888 + C22719 * C4237 + C22714 * C4243) *
               C38219 +
           (C22720 * C3586 + C50848 * C3590 + C22719 * C1160 + C22714 * C1165) *
               C51017 +
           (C22720 * C3581 + C50848 * C3587 + C22719 * C1153 + C22714 * C1161) *
               C38218) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                 C38218 +
             (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                 C51017 +
             (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
             C47430 * C38220 + C47431 * C38217) *
                C50675 * C1725 -
            (C49210 * C38217 + C49211 * C38220 + (C28846 + C28847) * C51008 +
             (C28848 + C28849) * C38219 + (C28845 + C28844) * C51017 +
             (C28843 + C28842) * C38218) *
                C50675 * C50801) *
               C50968 +
           (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
             (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
             (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
                C50675 * C50801 -
            (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
             (C29523 + C29522) * C38219 +
             (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                 C51017 +
             (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                 C38218) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          (((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
             C28833 * C51008 + (C28850 + C28851) * C38220 +
             (C28852 + C28853) * C38217) *
                C50675 * C50801 -
            (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
             C28823 * C38219 + (C22757 + C22756) * C51017 +
             (C22755 + C22754) * C38218) *
                C50675 * C1725) *
               C50968 +
           (((C22965 + C22964) * C38218 + (C22963 + C22962) * C51017 +
             C29510 * C38219 + C29511 * C51008 + (C29526 + C29527) * C38220 +
             (C29528 + C29529) * C38217) *
                C50675 * C1725 -
            ((C22720 * C10283 + C50848 * C10287 + C22719 * C4642 +
              C22714 * C4647) *
                 C38217 +
             (C22720 * C10281 + C50848 * C10284 + C22719 * C4638 +
              C22714 * C4643) *
                 C38220 +
             (C29529 + C29528) * C51008 + (C29527 + C29526) * C38219 +
             C29520 * C51017 + C29521 * C38218) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C51014 -
           (C49210 * C38217 + C49211 * C38220 + (C28846 + C28847) * C51008 +
            (C28848 + C28849) * C38219 + (C28845 + C28844) * C51017 +
            (C28843 + C28842) * C38218) *
               C50675 * C51015 +
           (C47430 * C38218 + C47431 * C51017 + (C31244 + C31245) * C38219 +
            (C31246 + C31247) * C51008 + (C49220 + C49221) * C38220 +
            (C49222 + C49223) * C38217) *
               C50675 * C2141) *
              C50968 +
          (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
            (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
            (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
               C50675 * C51015 -
           (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
            (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C51014 -
           ((C22720 * C14798 + C50848 * C14802 + C22719 * C14799 +
             C22714 * C14803) *
                C38217 +
            (C22720 * C14796 + C50848 * C14800 + C22719 * C14797 +
             C22714 * C14801) *
                C38220 +
            (C48321 + C48320) * C51008 + (C48319 + C48318) * C38219 +
            C48316 * C51017 + C48317 * C38218) *
               C50675 * C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C1725 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C50801) *
              C289 +
          (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
            (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
            (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
               C50675 * C50801 -
           (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
            (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C1725) *
              C290 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C38218 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C51017 +
            (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
            (C48816 + C48817) * C38220 + (C48818 + C48819) * C38217) *
               C50675 * C1725 -
           ((C22720 * C12235 + C50848 * C12237 + C22719 * C10285 +
             C22714 * C10288) *
                C38217 +
            (C22720 * C12234 + C50848 * C12236 + C22719 * C10282 +
             C22714 * C10286) *
                C38220 +
            (C48819 + C48818) * C51008 + (C48817 + C48816) * C38219 +
            (C30717 + C30716) * C51017 + (C30715 + C30714) * C38218) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C1725 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C50801) *
              C50721 * C1076 +
          ((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
            C28833 * C51008 + (C28850 + C28851) * C38220 +
            (C28852 + C28853) * C38217) *
               C50675 * C50801 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C1725) *
              C50721 * C1077 +
          ((C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
            C29243 * C51008 + (C23164 + C23165) * C38220 +
            (C23166 + C23167) * C38217) *
               C50675 * C1725 -
           ((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
             C22714 * C1908) *
                C38217 +
            (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
             C22714 * C1902) *
                C38220 +
            (C23167 + C23166) * C51008 + (C23165 + C23164) * C38219 +
            C23477 * C51017 + C23478 * C38218) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
               C38218 +
           (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
               C51017 +
           (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
           C47430 * C38220 + C47431 * C38217) *
              C50675 * C1891 -
          (C49210 * C38217 + C49211 * C38220 + (C28846 + C28847) * C51008 +
           (C28848 + C28849) * C38219 + (C28845 + C28844) * C51017 +
           (C28843 + C28842) * C38218) *
              C50675 * C1892 +
          (C47430 * C38218 + C47431 * C51017 + (C31244 + C31245) * C38219 +
           (C31246 + C31247) * C51008 + (C49220 + C49221) * C38220 +
           (C49222 + C49223) * C38217) *
              C50675 * C1893 -
          ((C22720 * C20319 + C50848 * C20321 + C22719 * C17554 +
            C22714 * C17557) *
               C38217 +
           (C22720 * C20318 + C50848 * C20320 + C22719 * C17551 +
            C22714 * C17555) *
               C38220 +
           (C49223 + C49222) * C51008 + (C49221 + C49220) * C38219 +
           C49210 * C51017 + C49211 * C38218) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C51014 -
           (C49210 * C38217 + C49211 * C38220 + (C28846 + C28847) * C51008 +
            (C28848 + C28849) * C38219 + (C28845 + C28844) * C51017 +
            (C28843 + C28842) * C38218) *
               C50675 * C51015 +
           (C47430 * C38218 + C47431 * C51017 + (C31244 + C31245) * C38219 +
            (C31246 + C31247) * C51008 + (C49220 + C49221) * C38220 +
            (C49222 + C49223) * C38217) *
               C50675 * C2141) *
              C50721 * C50960 +
          ((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
            C28833 * C51008 + (C28850 + C28851) * C38220 +
            (C28852 + C28853) * C38217) *
               C50675 * C51015 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C51014 -
           ((C22720 * C16659 + C50848 * C16661 + C22719 * C7428 +
             C22714 * C7433) *
                C38217 +
            (C22720 * C16658 + C50848 * C16660 + C22719 * C7424 +
             C22714 * C7429) *
                C38220 +
            (C28853 + C28852) * C51008 + (C28851 + C28850) * C38219 +
            C28820 * C51017 + C28821 * C38218) *
               C50675 * C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C1725 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C50801) *
              C50721 * C1076 +
          ((C28818 * C38218 + C28819 * C51017 + C28832 * C38219 +
            C28833 * C51008 + (C28850 + C28851) * C38220 +
            (C28852 + C28853) * C38217) *
               C50675 * C50801 -
           (C28820 * C38217 + C28821 * C38220 + C28822 * C51008 +
            C28823 * C38219 + (C22757 + C22756) * C51017 +
            (C22755 + C22754) * C38218) *
               C50675 * C1725) *
              C50721 * C1077 +
          ((C22770 * C38218 + C22771 * C51017 + C29242 * C38219 +
            C29243 * C51008 + (C23164 + C23165) * C38220 +
            (C23166 + C23167) * C38217) *
               C50675 * C1725 -
           ((C22720 * C4640 + C50848 * C4646 + C22719 * C1901 +
             C22714 * C1908) *
                C38217 +
            (C22720 * C4637 + C50848 * C4641 + C22719 * C1896 +
             C22714 * C1902) *
                C38220 +
            (C23167 + C23166) * C51008 + (C23165 + C23164) * C38219 +
            C23477 * C51017 + C23478 * C38218) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C119 + C22714 * C126 + C22720 * C297 + C50848 * C311) *
                C38218 +
            (C22719 * C127 + C22714 * C140 + C22720 * C310 + C50848 * C327) *
                C51017 +
            (C28842 + C28843) * C38219 + (C28844 + C28845) * C51008 +
            C47430 * C38220 + C47431 * C38217) *
               C50675 * C1725 -
           ((C31247 + C31246) * C38217 + (C31245 + C31244) * C38220 +
            (C28846 + C28847) * C51008 + (C28848 + C28849) * C38219 +
            (C28845 + C28844) * C51017 + (C28843 + C28842) * C38218) *
               C50675 * C50801) *
              C289 +
          (((C29522 + C29523) * C38218 + (C29524 + C29525) * C51017 +
            (C30056 + C30057) * C38219 + (C30058 + C30059) * C51008 +
            (C48318 + C48319) * C38220 + (C48320 + C48321) * C38217) *
               C50675 * C50801 -
           (C48316 * C38217 + C48317 * C38220 + (C29525 + C29524) * C51008 +
            (C29523 + C29522) * C38219 +
            (C22720 * C313 + C50848 * C328 + C22719 * C310 + C22714 * C327) *
                C51017 +
            (C22720 * C298 + C50848 * C312 + C22719 * C297 + C22714 * C311) *
                C38218) *
               C50675 * C1725) *
              C290 +
          (((C22719 * C298 + C22714 * C312 + C22720 * C1153 + C50848 * C1161) *
                C38218 +
            (C22719 * C313 + C22714 * C328 + C22720 * C1160 + C50848 * C1165) *
                C51017 +
            (C30714 + C30715) * C38219 + (C30716 + C30717) * C51008 +
            (C48816 + C48817) * C38220 + (C48818 + C48819) * C38217) *
               C50675 * C1725 -
           ((C22720 * C12235 + C50848 * C12237 + C22719 * C10285 +
             C22714 * C10288) *
                C38217 +
            (C22720 * C12234 + C50848 * C12236 + C22719 * C10282 +
             C22714 * C10286) *
                C38220 +
            (C48819 + C48818) * C51008 + (C48817 + C48816) * C38219 +
            (C30717 + C30716) * C51017 + (C30715 + C30714) * C38218) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C50968 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C50773) *
              C51010 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8610 + C8611 + C8612) * C118 +
             (C8613 + C8614 + C8615) * C50862) *
                C50680) *
               C50737 * C50773 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C50968) *
              C51011 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C50737 * C50968 -
           (((C8032 * C1154 + C8027 * C1162 + C8031 * C319 + C8026 * C331 +
              C8030 * C304 + C8025 * C324) *
                 C50862 +
             (C8032 * C1150 + C8027 * C1155 + C8031 * C301 + C8026 * C318 +
              C8030 * C294 + C8025 * C305) *
                 C118) *
                C50680 +
            ((C8615 + C8614 + C8613) * C50862 +
             (C8612 + C8611 + C8610) * C118) *
                C50951) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C50968 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C50773) *
              C51010 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50737 * C50773 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C50968) *
              C51011 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50737 * C50968 -
           (((C117 * C675 + C50832 * C677) * C50862 +
             (C117 * C674 + C50832 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50737 * C50968 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50737 * C50773) *
              C51010 +
          (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
            (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
               C50737 * C50773 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50737 * C50968) *
              C51011 +
          (((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
            (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
               C50737 * C50968 -
           (((C117 * C1268 + C50832 * C1276) * C15408 +
             (C117 * C1264 + C50832 * C1269) * C15411 + C970 * C15407 +
             C969 * C15410 + C359 * C15406 + C360 * C15409) *
                C50680 +
            (C15910 + C15909 + C15908 + C15907 + C15906 + C15905) * C50951) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
               C8032 * C298 + C8027 * C312) *
                  C118 +
              (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
               C8032 * C313 + C8027 * C328) *
                  C50862) *
                 C50951 +
             ((C8070 + C8071 + C8072) * C118 +
              (C8073 + C8074 + C8075) * C50862) *
                 C50680) *
                C50969 -
            (((C8440 + C8441 + C8442) * C50862 +
              (C8443 + C8444 + C8445) * C118) *
                 C50680 +
             ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
               C8030 * C499 + C8025 * C516) *
                  C50862 +
              (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
               C8030 * C486 + C8025 * C500) *
                  C118) *
                 C50951) *
                C50801) *
               C50968 +
           ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
               C8032 * C4237 + C8027 * C4243) *
                  C118 +
              (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
               C8032 * C4242 + C8027 * C4246) *
                  C50862) *
                 C50951 +
             ((C8986 + C8987 + C8988) * C118 +
              (C8989 + C8990 + C8991) * C50862) *
                 C50680) *
                C50801 -
            (((C8258 + C8259 + C8260) * C50862 +
              (C8261 + C8262 + C8263) * C118) *
                 C50680 +
             ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
               C8030 * C310 + C8025 * C327) *
                  C50862 +
              (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
               C8030 * C297 + C8025 * C311) *
                  C118) *
                 C50951) *
                C50969) *
               C50773) *
              C292 +
          (((((C8445 + C8444 + C8443) * C118 +
              (C8442 + C8441 + C8440) * C50862) *
                 C50951 +
             ((C8774 + C8775 + C8776) * C118 +
              (C8777 + C8778 + C8779) * C50862) *
                 C50680) *
                C50801 -
            (((C8076 + C8077 + C8078) * C50862 +
              (C8079 + C8080 + C8081) * C118) *
                 C50680 +
             ((C8075 + C8074 + C8073) * C50862 +
              (C8072 + C8071 + C8070) * C118) *
                 C50951) *
                C50969) *
               C50968 +
           ((((C8263 + C8262 + C8261) * C118 +
              (C8260 + C8259 + C8258) * C50862) *
                 C50951 +
             ((C8610 + C8611 + C8612) * C118 +
              (C8613 + C8614 + C8615) * C50862) *
                 C50680) *
                C50969 -
            (((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
               C8030 * C942 + C8025 * C949) *
                  C50862 +
              (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
               C8030 * C934 + C8025 * C941) *
                  C118) *
                 C50680 +
             ((C8991 + C8990 + C8989) * C50862 +
              (C8988 + C8987 + C8986) * C118) *
                 C50951) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C118 +
              (C117 * C127 + C50832 * C140) * C50862) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C50969 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50832 * C516) * C50862 +
              (C117 * C486 + C50832 * C500) * C118) *
                 C107) *
                C50801) *
               C50968 +
           ((((C117 * C932 + C50832 * C937) * C118 +
              (C117 * C938 + C50832 * C947) * C50862) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50801 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50832 * C327) * C50862 +
              (C117 * C297 + C50832 * C311) * C118) *
                 C107) *
                C50969) *
               C50773) *
              C292 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50801 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C50969) *
               C50968 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C50969 -
            (((C117 * C945 + C50832 * C951) * C50862 +
              (C117 * C936 + C50832 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C15409 +
              (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
              C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                 C50951 +
             (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
                C50969 -
            ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
             (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 +
              C5611 * C15410 + C5609 * C15406 + C5608 * C15409) *
                 C50951) *
                C50801) *
               C50968 +
           (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 +
              C6541 * C15407 + (C117 * C4639 + C50832 * C4645) * C15411 +
              (C117 * C4644 + C50832 * C4648) * C15408) *
                 C50951 +
             (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
                C50801 -
            ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
             (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 +
              C6136 * C15410 + (C117 * C310 + C50832 * C327) * C15406 +
              (C117 * C297 + C50832 * C311) * C15409) *
                 C50951) *
                C50969) *
               C50773) *
              C292 +
          ((((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
             (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
                C50801 -
            ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
             (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
                C50969) *
               C50968 +
           (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
             (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
                C50969 -
            (((C117 * C4640 + C50832 * C4646) * C15408 +
              (C117 * C4637 + C50832 * C4641) * C15411 + C6141 * C15407 +
              C6140 * C15410 + C968 * C15406 + C967 * C15409) *
                 C50680 +
             (C16268 + C16267 + C16260 + C16259 + C16258 + C16257) * C50951) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50832 * C126) * C118 +
                (C117 * C127 + C50832 * C140) * C50862) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C50737 * C50721 * C113 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C50737 * C50721 * C114 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C50737 * C50721 * C115 -
              (((C117 * C138 + C50832 * C146) * C50862 +
                (C117 * C125 + C50832 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C50737 * C50721 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C118 +
                 (C117 * C127 + C50832 * C140) * C50862) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C50737 * C289 -
               ((C371 + C372) * C110 + (C373 + C374) * C109 +
                (C375 + C376) * C108 +
                ((C117 * C310 + C50832 * C327) * C50862 +
                 (C117 * C297 + C50832 * C311) * C118) *
                    C107) *
                   C50737 * C290 +
               (((C117 * C298 + C50832 * C312) * C118 +
                 (C117 * C313 + C50832 * C328) * C50862) *
                    C107 +
                (C377 + C378) * C108 + (C379 + C380) * C109 +
                (C381 + C382) * C110) *
                   C50737 * C291) *
                  C292 +
              (((C376 + C375) * C107 + (C374 + C373) * C108 +
                (C372 + C371) * C109 +
                ((C117 * C302 + C50832 * C320) * C118 +
                 (C117 * C321 + C50832 * C332) * C50862) *
                    C110) *
                   C50737 * C290 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C50737 * C289 -
               (((C117 * C322 + C50832 * C333) * C50862 +
                 (C117 * C303 + C50832 * C323) * C118) *
                    C110 +
                (C382 + C381) * C109 + (C380 + C379) * C108 +
                (C378 + C377) * C107) *
                   C50737 * C291) *
                  C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           ((C560 + C561) * C110 + (C562 + C563) * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50832 * C501) * C118 +
             (C117 * C502 + C50832 * C517) * C50862) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C50721 * C292 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            ((C117 * C491 + C50832 * C509) * C118 +
             (C117 * C510 + C50832 * C521) * C50862) *
                C110) *
               C481 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C480 -
           (((C117 * C511 + C50832 * C522) * C50862 +
             (C117 * C492 + C50832 * C512) * C118) *
                C110 +
            (C571 + C570) * C109 + (C569 + C568) * C108 +
            (C567 + C566) * C107) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C50721 * C113 -
          (((C8076 + C8077 + C8078) * C50862 + (C8079 + C8080 + C8081) * C118) *
               C50680 +
           ((C8075 + C8074 + C8073) * C50862 + (C8072 + C8071 + C8070) * C118) *
               C50951) *
              C50737 * C50721 * C114 +
          (((C8081 + C8080 + C8079) * C118 + (C8078 + C8077 + C8076) * C50862) *
               C50951 +
           ((C8082 + C8083 + C8084) * C118 + (C8085 + C8086 + C8087) * C50862) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C8032 * C322 + C8027 * C333 + C8031 * C321 + C8026 * C332 +
             C8030 * C134 + C8025 * C144) *
                C50862 +
            (C8032 * C303 + C8027 * C323 + C8031 * C302 + C8026 * C320 +
             C8030 * C123 + C8025 * C135) *
                C118) *
               C50680 +
           ((C8087 + C8086 + C8085) * C50862 + (C8084 + C8083 + C8082) * C118) *
               C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C289 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C290 +
           (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8030 * C295 + C8025 * C307 + C8031 * C300 + C8026 * C316 +
              C8032 * C1151 + C8027 * C1157) *
                 C118 +
             (C8030 * C306 + C8025 * C325 + C8031 * C317 + C8026 * C330 +
              C8032 * C1156 + C8027 * C1163) *
                 C50862) *
                C50680) *
               C50737 * C290 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C289 -
           (((C8032 * C3582 + C8027 * C3588 + C8031 * C1156 + C8026 * C1163 +
              C8030 * C317 + C8025 * C330) *
                 C50862 +
             (C8032 * C3579 + C8027 * C3583 + C8031 * C1151 + C8026 * C1157 +
              C8030 * C300 + C8025 * C316) *
                 C118) *
                C50680 +
            ((C8269 + C8268 + C8267) * C50862 +
             (C8266 + C8265 + C8264) * C118) *
                C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C480 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C481 +
           (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
              C8032 * C3739 + C8027 * C3745) *
                 C118 +
             (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
              C8032 * C3744 + C8027 * C3748) *
                 C50862) *
                C50951 +
            ((C8446 + C8447 + C8448) * C118 +
             (C8449 + C8450 + C8451) * C50862) *
                C50680) *
               C482) *
              C50721 * C292 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8030 * C484 + C8025 * C496 + C8031 * C934 + C8026 * C941 +
              C8032 * C1612 + C8027 * C1618) *
                 C118 +
             (C8030 * C495 + C8025 * C514 + C8031 * C942 + C8026 * C949 +
              C8032 * C1617 + C8027 * C1624) *
                 C50862) *
                C50680) *
               C481 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C480 -
           (((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
              C8030 * C506 + C8025 * C519) *
                 C50862 +
             (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
              C8030 * C489 + C8025 * C505) *
                 C118) *
                C50680 +
            ((C8451 + C8450 + C8449) * C50862 +
             (C8448 + C8447 + C8446) * C118) *
                C50951) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C15409 +
            (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
            C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
               C50951 +
           (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
              C50737 * C50721 * C113 -
          ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
           (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
              C50737 * C50721 * C114 +
          ((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
           (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
              C50737 * C50721 * C115 -
          (((C117 * C511 + C50832 * C522) * C15408 +
            (C117 * C492 + C50832 * C512) * C15411 + C800 * C15407 +
            C799 * C15410 + C174 * C15406 + C175 * C15409) *
               C50680 +
           (C15430 + C15429 + C15428 + C15427 + C15426 + C15425) * C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50737 * C289 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C15409 +
             (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
             C7033 * C15407 + (C117 * C3739 + C50832 * C3745) * C15411 +
             (C117 * C3744 + C50832 * C3748) * C15408) *
                C50951 +
            (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
               C50737 * C291) *
              C292 +
          (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
            (C362 * C15409 + C361 * C15406 + C967 * C15410 + C968 * C15407 +
             C6140 * C15411 + C6141 * C15408) *
                C50680) *
               C50737 * C290 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50737 * C289 -
           (((C117 * C3740 + C50832 * C3746) * C15408 +
             (C117 * C3737 + C50832 * C3741) * C15411 + C5429 * C15407 +
             C5428 * C15410 + C368 * C15406 + C367 * C15409) *
                C50680 +
            (C15594 + C15593 + C15586 + C15585 + C15584 + C15583) * C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C480 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C481 +
           ((C5611 * C15409 + C5610 * C15406 + C7440 * C15410 + C7441 * C15407 +
             (C117 * C7425 + C50832 * C7431) * C15411 +
             (C117 * C7430 + C50832 * C7434) * C15408) *
                C50951 +
            (C15747 + C15748 + C15749 + C15750 + C15757 + C15758) * C50680) *
               C482) *
              C50721 * C292 +
          (((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
            (C551 * C15409 + C550 * C15406 + C556 * C15410 + C557 * C15407 +
             C5614 * C15411 + C5615 * C15408) *
                C50680) *
               C481 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C480 -
           (((C117 * C7426 + C50832 * C7432) * C15408 +
             (C117 * C7423 + C50832 * C7427) * C15411 + C5615 * C15407 +
             C5614 * C15410 + C557 * C15406 + C556 * C15409) *
                C50680 +
            (C15758 + C15757 + C15750 + C15749 + C15748 + C15747) * C50951) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50969 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C50721 * C51010 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8774 + C8775 + C8776) * C118 +
             (C8777 + C8778 + C8779) * C50862) *
                C50680) *
               C50801 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50969) *
              C50721 * C51011 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C50969 -
           (((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
              C8030 * C493 + C8025 * C513) *
                 C50862 +
             (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
              C8030 * C483 + C8025 * C494) *
                 C118) *
                C50680 +
            ((C8779 + C8778 + C8777) * C50862 +
             (C8776 + C8775 + C8774) * C118) *
                C50951) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50969 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C50801) *
              C50721 * C51010 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            (C801 + C802) * C110) *
               C50801 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50969) *
              C50721 * C51011 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50969 -
           (((C117 * C789 + C50832 * C791) * C50862 +
             (C117 * C788 + C50832 * C790) * C118) *
                C110 +
            (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50969 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C50801) *
              C50721 * C51010 +
          (((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
            (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
               C50801 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50969) *
              C50721 * C51011 +
          (((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
            (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
               C50969 -
           (((C117 * C1899 + C50832 * C1907) * C15408 +
             (C117 * C1895 + C50832 * C1900) * C15411 + C559 * C15407 +
             C558 * C15410 + C548 * C15406 + C549 * C15409) *
                C50680 +
            (C16062 + C16061 + C16060 + C16059 + C16058 + C16057) * C50951) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50737 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C50832 * C320) * C118 +
             (C117 * C321 + C50832 * C332) * C50862) *
                C110) *
               C50737 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C289 -
           (((C117 * C322 + C50832 * C333) * C50862 +
             (C117 * C303 + C50832 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50737 * C50721 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50737 * C50721 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50737 * C50721 * C115 -
          (((C117 * C138 + C50832 * C146) * C50862 +
            (C117 * C125 + C50832 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C50721 * C113 -
          (((C8076 + C8077 + C8078) * C50862 + (C8079 + C8080 + C8081) * C118) *
               C50680 +
           ((C8075 + C8074 + C8073) * C50862 + (C8072 + C8071 + C8070) * C118) *
               C50951) *
              C50737 * C50721 * C114 +
          (((C8081 + C8080 + C8079) * C118 + (C8078 + C8077 + C8076) * C50862) *
               C50951 +
           ((C8082 + C8083 + C8084) * C118 + (C8085 + C8086 + C8087) * C50862) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C8032 * C322 + C8027 * C333 + C8031 * C321 + C8026 * C332 +
             C8030 * C134 + C8025 * C144) *
                C50862 +
            (C8032 * C303 + C8027 * C323 + C8031 * C302 + C8026 * C320 +
             C8030 * C123 + C8025 * C135) *
                C118) *
               C50680 +
           ((C8087 + C8086 + C8085) * C50862 + (C8084 + C8083 + C8082) * C118) *
               C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C289 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C290 +
           (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8030 * C295 + C8025 * C307 + C8031 * C300 + C8026 * C316 +
              C8032 * C1151 + C8027 * C1157) *
                 C118 +
             (C8030 * C306 + C8025 * C325 + C8031 * C317 + C8026 * C330 +
              C8032 * C1156 + C8027 * C1163) *
                 C50862) *
                C50680) *
               C50737 * C290 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C289 -
           (((C8032 * C3582 + C8027 * C3588 + C8031 * C1156 + C8026 * C1163 +
              C8030 * C317 + C8025 * C330) *
                 C50862 +
             (C8032 * C3579 + C8027 * C3583 + C8031 * C1151 + C8026 * C1157 +
              C8030 * C300 + C8025 * C316) *
                 C118) *
                C50680 +
            ((C8269 + C8268 + C8267) * C50862 +
             (C8266 + C8265 + C8264) * C118) *
                C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C15409 +
            (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
            C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
               C50951 +
           (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
              C50737 * C50721 * C113 -
          ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
           (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
              C50737 * C50721 * C114 +
          ((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
           (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
              C50737 * C50721 * C115 -
          (((C117 * C511 + C50832 * C522) * C15408 +
            (C117 * C492 + C50832 * C512) * C15411 + C800 * C15407 +
            C799 * C15410 + C174 * C15406 + C175 * C15409) *
               C50680 +
           (C15430 + C15429 + C15428 + C15427 + C15426 + C15425) * C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50737 * C289 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C15409 +
             (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
             C7033 * C15407 + (C117 * C3739 + C50832 * C3745) * C15411 +
             (C117 * C3744 + C50832 * C3748) * C15408) *
                C50951 +
            (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
               C50737 * C291) *
              C292 +
          (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
            (C362 * C15409 + C361 * C15406 + C967 * C15410 + C968 * C15407 +
             C6140 * C15411 + C6141 * C15408) *
                C50680) *
               C50737 * C290 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50737 * C289 -
           (((C117 * C3740 + C50832 * C3746) * C15408 +
             (C117 * C3737 + C50832 * C3741) * C15411 + C5429 * C15407 +
             C5428 * C15410 + C368 * C15406 + C367 * C15409) *
                C50680 +
            (C15594 + C15593 + C15586 + C15585 + C15584 + C15583) * C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C51012 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C51013 +
           (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C50737 * C1380) *
              C50960 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8610 + C8611 + C8612) * C118 +
             (C8613 + C8614 + C8615) * C50862) *
                C50680) *
               C50737 * C51013 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C51012 -
           (((C8032 * C3582 + C8027 * C3588 + C8031 * C1156 + C8026 * C1163 +
              C8030 * C317 + C8025 * C330) *
                 C50862 +
             (C8032 * C3579 + C8027 * C3583 + C8031 * C1151 + C8026 * C1157 +
              C8030 * C300 + C8025 * C316) *
                 C118) *
                C50680 +
            ((C8269 + C8268 + C8267) * C50862 +
             (C8266 + C8265 + C8264) * C118) *
                C50951) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C51012 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C51013 +
           (((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50737 * C1380) *
              C50960 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50737 * C51013 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C51012 -
           (((C117 * C322 + C50832 * C333) * C50862 +
             (C117 * C303 + C50832 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50737 * C51012 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50737 * C51013 +
           (((C117 * C298 + C50832 * C312) * C15409 +
             (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
             C7033 * C15407 + (C117 * C3739 + C50832 * C3745) * C15411 +
             (C117 * C3744 + C50832 * C3748) * C15408) *
                C50951 +
            (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
               C50737 * C1380) *
              C50960 +
          (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
            (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
               C50737 * C51013 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50737 * C51012 -
           (((C117 * C3740 + C50832 * C3746) * C15408 +
             (C117 * C3737 + C50832 * C3741) * C15411 + C5429 * C15407 +
             C5428 * C15410 + C368 * C15406 + C367 * C15409) *
                C50680 +
            (C15594 + C15593 + C15586 + C15585 + C15584 + C15583) * C50951) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50969 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C51012 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C50801 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50969) *
              C51013 +
          ((((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C50969 -
           (((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
              C8030 * C1619 + C8025 * C1625) *
                 C50862 +
             (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
              C8030 * C1613 + C8025 * C1620) *
                 C118) *
                C50680 +
            ((C8032 * C9887 + C8027 * C9890 + C8031 * C4242 + C8026 * C4246 +
              C8030 * C1621 + C8025 * C1626) *
                 C50862 +
             (C8032 * C9884 + C8027 * C9888 + C8031 * C4237 + C8026 * C4243 +
              C8030 * C1614 + C8025 * C1622) *
                 C118) *
                C50951) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50969 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C50801) *
              C51012 +
          ((((C117 * C932 + C50832 * C937) * C118 +
             (C117 * C938 + C50832 * C947) * C50862) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C50801 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50969) *
              C51013 +
          ((((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50969 -
           (((C117 * C1615 + C50832 * C1623) * C50862 +
             (C117 * C1611 + C50832 * C1616) * C118) *
                C110 +
            ((C117 * C1617 + C50832 * C1624) * C50862 +
             (C117 * C1612 + C50832 * C1618) * C118) *
                C109 +
            ((C117 * C1619 + C50832 * C1625) * C50862 +
             (C117 * C1613 + C50832 * C1620) * C118) *
                C108 +
            ((C117 * C1621 + C50832 * C1626) * C50862 +
             (C117 * C1614 + C50832 * C1622) * C118) *
                C107) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50969 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C50801) *
              C51012 +
          (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 + C6541 * C15407 +
             C16667 * C15411 + C16668 * C15408) *
                C50951 +
            (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
               C50801 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50969) *
              C51013 +
          ((((C117 * C298 + C50832 * C312) * C15409 +
             (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
             C7033 * C15407 + C17159 * C15411 + C17160 * C15408) *
                C50951 +
            (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
               C50969 -
           (((C117 * C10283 + C50832 * C10287) * C15408 +
             (C117 * C10281 + C50832 * C10284) * C15411 + C15592 * C15407 +
             C15591 * C15410 + C5427 * C15406 + C5426 * C15409) *
                C50680 +
            ((C117 * C10285 + C50832 * C10288) * C15408 +
             (C117 * C10282 + C50832 * C10286) * C15411 + C17160 * C15407 +
             C17159 * C15410 + C7033 * C15406 + C7032 * C15409) *
                C50951) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C118 +
                 (C117 * C127 + C50832 * C140) * C50862) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C50737 * C1074 -
               (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                ((C117 * C310 + C50832 * C327) * C50862 +
                 (C117 * C297 + C50832 * C311) * C118) *
                    C107) *
                   C50737 * C50773) *
                  C1076 +
              (((C376 + C375) * C107 + (C374 + C373) * C108 +
                (C372 + C371) * C109 + (C687 + C688) * C110) *
                   C50737 * C50773 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C50737 * C1074) *
                  C1077 +
              ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C50737 * C1074 -
               (((C117 * C675 + C50832 * C677) * C50862 +
                 (C117 * C674 + C50832 * C676) * C118) *
                    C110 +
                (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
                   C50737 * C50773) *
                  C1078) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50832 * C126) * C118 +
                (C117 * C127 + C50832 * C140) * C50862) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C50737 * C1145 -
              (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
               ((C117 * C310 + C50832 * C327) * C50862 +
                (C117 * C297 + C50832 * C311) * C118) *
                   C107) *
                  C50737 * C1146 +
              (((C117 * C298 + C50832 * C312) * C118 +
                (C117 * C313 + C50832 * C328) * C50862) *
                   C107 +
               (C377 + C378) * C108 + (C379 + C380) * C109 +
               (C381 + C382) * C110) *
                  C50737 * C1147 -
              (((C117 * C1154 + C50832 * C1162) * C50862 +
                (C117 * C1150 + C50832 * C1155) * C118) *
                   C110 +
               ((C117 * C1156 + C50832 * C1163) * C50862 +
                (C117 * C1151 + C50832 * C1157) * C118) *
                   C109 +
               ((C117 * C1158 + C50832 * C1164) * C50862 +
                (C117 * C1152 + C50832 * C1159) * C118) *
                   C108 +
               ((C117 * C1160 + C50832 * C1165) * C50862 +
                (C117 * C1153 + C50832 * C1161) * C118) *
                   C107) *
                  C50737 * C1148) *
             C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50832 * C501) * C118 +
             (C117 * C502 + C50832 * C517) * C50862) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C1074 +
          ((((C117 * C932 + C50832 * C937) * C118 +
             (C117 * C938 + C50832 * C947) * C50862) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C481 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C480 -
           (((C117 * C1268 + C50832 * C1276) * C50862 +
             (C117 * C1264 + C50832 * C1269) * C118) *
                C110 +
            ((C117 * C1270 + C50832 * C1277) * C50862 +
             (C117 * C1265 + C50832 * C1271) * C118) *
                C109 +
            ((C117 * C1272 + C50832 * C1278) * C50862 +
             (C117 * C1266 + C50832 * C1273) * C118) *
                C108 +
            ((C117 * C1274 + C50832 * C1279) * C50862 +
             (C117 * C1267 + C50832 * C1275) * C118) *
                C107) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8610 + C8611 + C8612) * C118 +
             (C8613 + C8614 + C8615) * C50862) *
                C50680) *
               C50737 * C50773 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C1074) *
              C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8032 * C1154 + C8027 * C1162 + C8031 * C319 + C8026 * C331 +
              C8030 * C304 + C8025 * C324) *
                 C50862 +
             (C8032 * C1150 + C8027 * C1155 + C8031 * C301 + C8026 * C318 +
              C8030 * C294 + C8025 * C305) *
                 C118) *
                C50680 +
            ((C8615 + C8614 + C8613) * C50862 +
             (C8612 + C8611 + C8610) * C118) *
                C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C1145 -
          (((C8258 + C8259 + C8260) * C50862 + (C8261 + C8262 + C8263) * C118) *
               C50680 +
           ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50862 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C118) *
               C50951) *
              C50737 * C1146 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C118 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50862) *
               C50951 +
           ((C8264 + C8265 + C8266) * C118 + (C8267 + C8268 + C8269) * C50862) *
               C50680) *
              C50737 * C1147 -
          (((C8032 * C9237 + C8027 * C9241 + C8031 * C3584 + C8026 * C3589 +
             C8030 * C1158 + C8025 * C1164) *
                C50862 +
            (C8032 * C9235 + C8027 * C9238 + C8031 * C3580 + C8026 * C3585 +
             C8030 * C1152 + C8025 * C1159) *
                C118) *
               C50680 +
           ((C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
             C8030 * C1160 + C8025 * C1165) *
                C50862 +
            (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
             C8030 * C1153 + C8025 * C1161) *
                C118) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C480 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C481 +
           (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
              C8032 * C3739 + C8027 * C3745) *
                 C118 +
             (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
              C8032 * C3744 + C8027 * C3748) *
                 C50862) *
                C50951 +
            ((C8446 + C8447 + C8448) * C118 +
             (C8449 + C8450 + C8451) * C50862) *
                C50680) *
               C482) *
              C1074 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C481 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C480 -
           (((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50862 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C118) *
                C50680 +
            ((C8032 * C9393 + C8027 * C9396 + C8031 * C3744 + C8026 * C3748 +
              C8030 * C1274 + C8025 * C1279) *
                 C50862 +
             (C8032 * C9390 + C8027 * C9394 + C8031 * C3739 + C8026 * C3745 +
              C8030 * C1267 + C8025 * C1275) *
                 C118) *
                C50951) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50737 * C1074 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
            (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
               C50737 * C50773 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50737 * C1074) *
              C1077 +
          (((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
            (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
               C50737 * C1074 -
           (((C117 * C1268 + C50832 * C1276) * C15408 +
             (C117 * C1264 + C50832 * C1269) * C15411 + C970 * C15407 +
             C969 * C15410 + C359 * C15406 + C360 * C15409) *
                C50680 +
            (C15910 + C15909 + C15908 + C15907 + C15906 + C15905) * C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C15409 +
            (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
            C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
               C50951 +
           (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
              C50737 * C1145 -
          ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
           (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
            (C117 * C310 + C50832 * C327) * C15406 +
            (C117 * C297 + C50832 * C311) * C15409) *
               C50951) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C15409 +
            (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
            C7033 * C15407 + (C117 * C3739 + C50832 * C3745) * C15411 +
            (C117 * C3744 + C50832 * C3748) * C15408) *
               C50951 +
           (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
              C50737 * C1147 -
          (((C117 * C9391 + C50832 * C9395) * C15408 +
            (C117 * C9389 + C50832 * C9392) * C15411 +
            (C117 * C4240 + C50832 * C4245) * C15407 +
            (C117 * C4236 + C50832 * C4241) * C15410 +
            (C117 * C1158 + C50832 * C1164) * C15406 +
            (C117 * C1152 + C50832 * C1159) * C15409) *
               C50680 +
           ((C117 * C9393 + C50832 * C9396) * C15408 +
            (C117 * C9390 + C50832 * C9394) * C15411 +
            (C117 * C4242 + C50832 * C4246) * C15407 +
            (C117 * C4237 + C50832 * C4243) * C15410 +
            (C117 * C1160 + C50832 * C1165) * C15406 +
            (C117 * C1153 + C50832 * C1161) * C15409) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C480 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C481 +
           ((C5611 * C15409 + C5610 * C15406 + C7440 * C15410 + C7441 * C15407 +
             (C117 * C7425 + C50832 * C7431) * C15411 +
             (C117 * C7430 + C50832 * C7434) * C15408) *
                C50951 +
            (C15747 + C15748 + C15749 + C15750 + C15757 + C15758) * C50680) *
               C482) *
              C1074 +
          (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 + C6541 * C15407 +
             C16667 * C15411 + C16668 * C15408) *
                C50951 +
            (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
               C481 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C480 -
           (((C117 * C16659 + C50832 * C16661) * C15408 +
             (C117 * C16658 + C50832 * C16660) * C15411 + C16266 * C15407 +
             C16265 * C15410 + C6139 * C15406 + C6138 * C15409) *
                C50680 +
            ((C117 * C14799 + C50832 * C14803) * C15408 +
             (C117 * C14797 + C50832 * C14801) * C15411 + C16668 * C15407 +
             C16667 * C15410 + C6541 * C15406 + C6540 * C15409) *
                C50951) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
               C8032 * C298 + C8027 * C312) *
                  C118 +
              (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
               C8032 * C313 + C8027 * C328) *
                  C50862) *
                 C50951 +
             ((C8070 + C8071 + C8072) * C118 +
              (C8073 + C8074 + C8075) * C50862) *
                 C50680) *
                C50969 -
            (((C8440 + C8441 + C8442) * C50862 +
              (C8443 + C8444 + C8445) * C118) *
                 C50680 +
             ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
               C8030 * C499 + C8025 * C516) *
                  C50862 +
              (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
               C8030 * C486 + C8025 * C500) *
                  C118) *
                 C50951) *
                C50801) *
               C1074 +
           ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
               C8032 * C4237 + C8027 * C4243) *
                  C118 +
              (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
               C8032 * C4242 + C8027 * C4246) *
                  C50862) *
                 C50951 +
             ((C8986 + C8987 + C8988) * C118 +
              (C8989 + C8990 + C8991) * C50862) *
                 C50680) *
                C50801 -
            (((C8258 + C8259 + C8260) * C50862 +
              (C8261 + C8262 + C8263) * C118) *
                 C50680 +
             ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
               C8030 * C310 + C8025 * C327) *
                  C50862 +
              (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
               C8030 * C297 + C8025 * C311) *
                  C118) *
                 C50951) *
                C50969) *
               C50773) *
              C50960 +
          (((((C8445 + C8444 + C8443) * C118 +
              (C8442 + C8441 + C8440) * C50862) *
                 C50951 +
             ((C8774 + C8775 + C8776) * C118 +
              (C8777 + C8778 + C8779) * C50862) *
                 C50680) *
                C50801 -
            (((C8076 + C8077 + C8078) * C50862 +
              (C8079 + C8080 + C8081) * C118) *
                 C50680 +
             ((C8075 + C8074 + C8073) * C50862 +
              (C8072 + C8071 + C8070) * C118) *
                 C50951) *
                C50969) *
               C1074 +
           ((((C8263 + C8262 + C8261) * C118 +
              (C8260 + C8259 + C8258) * C50862) *
                 C50951 +
             ((C8610 + C8611 + C8612) * C118 +
              (C8613 + C8614 + C8615) * C50862) *
                 C50680) *
                C50969 -
            (((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
               C8030 * C942 + C8025 * C949) *
                  C50862 +
              (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
               C8030 * C934 + C8025 * C941) *
                  C118) *
                 C50680 +
             ((C8991 + C8990 + C8989) * C50862 +
              (C8988 + C8987 + C8986) * C118) *
                 C50951) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C118 +
              (C117 * C127 + C50832 * C140) * C50862) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C50969 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50832 * C516) * C50862 +
              (C117 * C486 + C50832 * C500) * C118) *
                 C107) *
                C50801) *
               C1074 +
           ((((C117 * C932 + C50832 * C937) * C118 +
              (C117 * C938 + C50832 * C947) * C50862) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50801 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50832 * C327) * C50862 +
              (C117 * C297 + C50832 * C311) * C118) *
                 C107) *
                C50969) *
               C50773) *
              C50960 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50801 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C50969) *
               C1074 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C50969 -
            (((C117 * C945 + C50832 * C951) * C50862 +
              (C117 * C936 + C50832 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C15409 +
              (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
              C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                 C50951 +
             (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
                C50969 -
            ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
             (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 +
              C5611 * C15410 + C5609 * C15406 + C5608 * C15409) *
                 C50951) *
                C50801) *
               C1074 +
           (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 +
              C6541 * C15407 + C16667 * C15411 + C16668 * C15408) *
                 C50951 +
             (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
                C50801 -
            ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
             (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 +
              C6136 * C15410 + (C117 * C310 + C50832 * C327) * C15406 +
              (C117 * C297 + C50832 * C311) * C15409) *
                 C50951) *
                C50969) *
               C50773) *
              C50960 +
          ((((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
             (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
                C50801 -
            ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
             (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
                C50969) *
               C1074 +
           (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
             (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
                C50969 -
            (((C117 * C4640 + C50832 * C4646) * C15408 +
              (C117 * C4637 + C50832 * C4641) * C15411 + C6141 * C15407 +
              C6140 * C15410 + C968 * C15406 + C967 * C15409) *
                 C50680 +
             (C16268 + C16267 + C16260 + C16259 + C16258 + C16257) * C50951) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50737 * C1145 -
          (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C50832 * C327) * C50862 +
            (C117 * C297 + C50832 * C311) * C118) *
               C107) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C118 +
            (C117 * C313 + C50832 * C328) * C50862) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C50737 * C1147 -
          (((C117 * C1154 + C50832 * C1162) * C50862 +
            (C117 * C1150 + C50832 * C1155) * C118) *
               C110 +
           ((C117 * C1156 + C50832 * C1163) * C50862 +
            (C117 * C1151 + C50832 * C1157) * C118) *
               C109 +
           ((C117 * C1158 + C50832 * C1164) * C50862 +
            (C117 * C1152 + C50832 * C1159) * C118) *
               C108 +
           ((C117 * C1160 + C50832 * C1165) * C50862 +
            (C117 * C1153 + C50832 * C1161) * C118) *
               C107) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C1074 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C50773) *
              C1076 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50737 * C50773 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C1074) *
              C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50737 * C1074 -
           (((C117 * C675 + C50832 * C677) * C50862 +
             (C117 * C674 + C50832 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8610 + C8611 + C8612) * C118 +
             (C8613 + C8614 + C8615) * C50862) *
                C50680) *
               C50737 * C50773 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C1074) *
              C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8032 * C1154 + C8027 * C1162 + C8031 * C319 + C8026 * C331 +
              C8030 * C304 + C8025 * C324) *
                 C50862 +
             (C8032 * C1150 + C8027 * C1155 + C8031 * C301 + C8026 * C318 +
              C8030 * C294 + C8025 * C305) *
                 C118) *
                C50680 +
            ((C8615 + C8614 + C8613) * C50862 +
             (C8612 + C8611 + C8610) * C118) *
                C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C1145 -
          (((C8258 + C8259 + C8260) * C50862 + (C8261 + C8262 + C8263) * C118) *
               C50680 +
           ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50862 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C118) *
               C50951) *
              C50737 * C1146 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C118 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50862) *
               C50951 +
           ((C8264 + C8265 + C8266) * C118 + (C8267 + C8268 + C8269) * C50862) *
               C50680) *
              C50737 * C1147 -
          (((C8032 * C9237 + C8027 * C9241 + C8031 * C3584 + C8026 * C3589 +
             C8030 * C1158 + C8025 * C1164) *
                C50862 +
            (C8032 * C9235 + C8027 * C9238 + C8031 * C3580 + C8026 * C3585 +
             C8030 * C1152 + C8025 * C1159) *
                C118) *
               C50680 +
           ((C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
             C8030 * C1160 + C8025 * C1165) *
                C50862 +
            (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
             C8030 * C1153 + C8025 * C1161) *
                C118) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C50737 * C1074 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
            (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
               C50737 * C50773 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C50737 * C1074) *
              C1077 +
          (((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
            (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
               C50737 * C1074 -
           (((C117 * C1268 + C50832 * C1276) * C15408 +
             (C117 * C1264 + C50832 * C1269) * C15411 + C970 * C15407 +
             C969 * C15410 + C359 * C15406 + C360 * C15409) *
                C50680 +
            (C15910 + C15909 + C15908 + C15907 + C15906 + C15905) * C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C15409 +
            (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
            C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
               C50951 +
           (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
              C50737 * C1145 -
          ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
           (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
            (C117 * C310 + C50832 * C327) * C15406 +
            (C117 * C297 + C50832 * C311) * C15409) *
               C50951) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C15409 +
            (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
            C7033 * C15407 + (C117 * C3739 + C50832 * C3745) * C15411 +
            (C117 * C3744 + C50832 * C3748) * C15408) *
               C50951 +
           (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
              C50737 * C1147 -
          (((C117 * C9391 + C50832 * C9395) * C15408 +
            (C117 * C9389 + C50832 * C9392) * C15411 +
            (C117 * C4240 + C50832 * C4245) * C15407 +
            (C117 * C4236 + C50832 * C4241) * C15410 +
            (C117 * C1158 + C50832 * C1164) * C15406 +
            (C117 * C1152 + C50832 * C1159) * C15409) *
               C50680 +
           ((C117 * C9393 + C50832 * C9396) * C15408 +
            (C117 * C9390 + C50832 * C9394) * C15411 +
            (C117 * C4242 + C50832 * C4246) * C15407 +
            (C117 * C4237 + C50832 * C4243) * C15410 +
            (C117 * C1160 + C50832 * C1165) * C15406 +
            (C117 * C1153 + C50832 * C1161) * C15409) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
               C8032 * C298 + C8027 * C312) *
                  C118 +
              (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
               C8032 * C313 + C8027 * C328) *
                  C50862) *
                 C50951 +
             ((C8070 + C8071 + C8072) * C118 +
              (C8073 + C8074 + C8075) * C50862) *
                 C50680) *
                C1725 -
            (((C8440 + C8441 + C8442) * C50862 +
              (C8443 + C8444 + C8445) * C118) *
                 C50680 +
             ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
               C8030 * C499 + C8025 * C516) *
                  C50862 +
              (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
               C8030 * C486 + C8025 * C500) *
                  C118) *
                 C50951) *
                C50801) *
               C50968 +
           ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
               C8032 * C4237 + C8027 * C4243) *
                  C118 +
              (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
               C8032 * C4242 + C8027 * C4246) *
                  C50862) *
                 C50951 +
             ((C8986 + C8987 + C8988) * C118 +
              (C8989 + C8990 + C8991) * C50862) *
                 C50680) *
                C50801 -
            (((C8258 + C8259 + C8260) * C50862 +
              (C8261 + C8262 + C8263) * C118) *
                 C50680 +
             ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
               C8030 * C310 + C8025 * C327) *
                  C50862 +
              (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
               C8030 * C297 + C8025 * C311) *
                  C118) *
                 C50951) *
                C1725) *
               C50773) *
              C50960 +
          (((((C8445 + C8444 + C8443) * C118 +
              (C8442 + C8441 + C8440) * C50862) *
                 C50951 +
             ((C8774 + C8775 + C8776) * C118 +
              (C8777 + C8778 + C8779) * C50862) *
                 C50680) *
                C50801 -
            (((C8076 + C8077 + C8078) * C50862 +
              (C8079 + C8080 + C8081) * C118) *
                 C50680 +
             ((C8075 + C8074 + C8073) * C50862 +
              (C8072 + C8071 + C8070) * C118) *
                 C50951) *
                C1725) *
               C50968 +
           ((((C8263 + C8262 + C8261) * C118 +
              (C8260 + C8259 + C8258) * C50862) *
                 C50951 +
             ((C8610 + C8611 + C8612) * C118 +
              (C8613 + C8614 + C8615) * C50862) *
                 C50680) *
                C1725 -
            (((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
               C8030 * C942 + C8025 * C949) *
                  C50862 +
              (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
               C8030 * C934 + C8025 * C941) *
                  C118) *
                 C50680 +
             ((C8991 + C8990 + C8989) * C50862 +
              (C8988 + C8987 + C8986) * C118) *
                 C50951) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C118 +
              (C117 * C127 + C50832 * C140) * C50862) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C1725 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50832 * C516) * C50862 +
              (C117 * C486 + C50832 * C500) * C118) *
                 C107) *
                C50801) *
               C50968 +
           ((((C117 * C932 + C50832 * C937) * C118 +
              (C117 * C938 + C50832 * C947) * C50862) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50801 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50832 * C327) * C50862 +
              (C117 * C297 + C50832 * C311) * C118) *
                 C107) *
                C1725) *
               C50773) *
              C50960 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50801 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C1725) *
               C50968 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C1725 -
            (((C117 * C945 + C50832 * C951) * C50862 +
              (C117 * C936 + C50832 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C15409 +
              (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
              C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                 C50951 +
             (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
                C1725 -
            ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
             (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 +
              C5611 * C15410 + C5609 * C15406 + C5608 * C15409) *
                 C50951) *
                C50801) *
               C50968 +
           (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 +
              C6541 * C15407 + C16667 * C15411 + C16668 * C15408) *
                 C50951 +
             (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
                C50801 -
            ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
             (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 +
              C6136 * C15410 + (C117 * C310 + C50832 * C327) * C15406 +
              (C117 * C297 + C50832 * C311) * C15409) *
                 C50951) *
                C1725) *
               C50773) *
              C50960 +
          ((((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
             (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
                C50801 -
            ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
             (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
                C1725) *
               C50968 +
           (((C15582 + C15581 + C15580 + C15579 + C15578 + C15577) * C50951 +
             (C15905 + C15906 + C15907 + C15908 + C15909 + C15910) * C50680) *
                C1725 -
            (((C117 * C4640 + C50832 * C4646) * C15408 +
              (C117 * C4637 + C50832 * C4641) * C15411 + C6141 * C15407 +
              C6140 * C15410 + C968 * C15406 + C967 * C15409) *
                 C50680 +
             (C16268 + C16267 + C16260 + C16259 + C16258 + C16257) * C50951) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C51014 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C51015 +
           (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
              C8032 * C3739 + C8027 * C3745) *
                 C118 +
             (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
              C8032 * C3744 + C8027 * C3748) *
                 C50862) *
                C50951 +
            ((C8446 + C8447 + C8448) * C118 +
             (C8449 + C8450 + C8451) * C50862) *
                C50680) *
               C2141) *
              C50968 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C51015 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C51014 -
           (((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50862 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C118) *
                C50680 +
            ((C8032 * C9393 + C8027 * C9396 + C8031 * C3744 + C8026 * C3748 +
              C8030 * C1274 + C8025 * C1279) *
                 C50862 +
             (C8032 * C9390 + C8027 * C9394 + C8031 * C3739 + C8026 * C3745 +
              C8030 * C1267 + C8025 * C1275) *
                 C118) *
                C50951) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51014 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C51015 +
           (((C117 * C487 + C50832 * C501) * C118 +
             (C117 * C502 + C50832 * C517) * C50862) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C2141) *
              C50968 +
          ((((C117 * C932 + C50832 * C937) * C118 +
             (C117 * C938 + C50832 * C947) * C50862) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C51015 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C51014 -
           (((C117 * C1268 + C50832 * C1276) * C50862 +
             (C117 * C1264 + C50832 * C1269) * C118) *
                C110 +
            ((C117 * C1270 + C50832 * C1277) * C50862 +
             (C117 * C1265 + C50832 * C1271) * C118) *
                C109 +
            ((C117 * C1272 + C50832 * C1278) * C50862 +
             (C117 * C1266 + C50832 * C1273) * C118) *
                C108 +
            ((C117 * C1274 + C50832 * C1279) * C50862 +
             (C117 * C1267 + C50832 * C1275) * C118) *
                C107) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C51014 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C51015 +
           ((C5611 * C15409 + C5610 * C15406 + C7440 * C15410 + C7441 * C15407 +
             C17563 * C15411 + C17564 * C15408) *
                C50951 +
            (C15747 + C15748 + C15749 + C15750 + C15757 + C15758) * C50680) *
               C2141) *
              C50968 +
          (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 + C6541 * C15407 +
             C16667 * C15411 + C16668 * C15408) *
                C50951 +
            (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
               C51015 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C51014 -
           (((C117 * C16659 + C50832 * C16661) * C15408 +
             (C117 * C16658 + C50832 * C16660) * C15411 + C16266 * C15407 +
             C16265 * C15410 + C6139 * C15406 + C6138 * C15409) *
                C50680 +
            ((C117 * C14799 + C50832 * C14803) * C15408 +
             (C117 * C14797 + C50832 * C14801) * C15411 + C16668 * C15407 +
             C16667 * C15410 + C6541 * C15406 + C6540 * C15409) *
                C50951) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C118 +
                 (C117 * C127 + C50832 * C140) * C50862) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C1725 -
               (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                ((C117 * C499 + C50832 * C516) * C50862 +
                 (C117 * C486 + C50832 * C500) * C118) *
                    C107) *
                   C50801) *
                  C50721 * C1076 +
              (((C565 + C564) * C107 + (C563 + C562) * C108 +
                (C561 + C560) * C109 + (C801 + C802) * C110) *
                   C50801 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C1725) *
                  C50721 * C1077 +
              ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C1725 -
               (((C117 * C789 + C50832 * C791) * C50862 +
                 (C117 * C788 + C50832 * C790) * C118) *
                    C110 +
                (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                   C50801) *
                  C50721 * C1078) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C118 +
                 (C117 * C127 + C50832 * C140) * C50862) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C1725 -
               (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                ((C117 * C499 + C50832 * C516) * C50862 +
                 (C117 * C486 + C50832 * C500) * C118) *
                    C107) *
                   C50801) *
                  C289 +
              ((((C117 * C932 + C50832 * C937) * C118 +
                 (C117 * C938 + C50832 * C947) * C50862) *
                    C107 +
                (C971 + C972) * C108 + (C973 + C974) * C109 +
                (C975 + C976) * C110) *
                   C50801 -
               (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                ((C117 * C310 + C50832 * C327) * C50862 +
                 (C117 * C297 + C50832 * C311) * C118) *
                    C107) *
                   C1725) *
                  C290 +
              ((((C117 * C298 + C50832 * C312) * C118 +
                 (C117 * C313 + C50832 * C328) * C50862) *
                    C107 +
                (C377 + C378) * C108 + (C379 + C380) * C109 +
                (C381 + C382) * C110) *
                   C1725 -
               (((C117 * C1615 + C50832 * C1623) * C50862 +
                 (C117 * C1611 + C50832 * C1616) * C118) *
                    C110 +
                ((C117 * C1617 + C50832 * C1624) * C50862 +
                 (C117 * C1612 + C50832 * C1618) * C118) *
                    C109 +
                ((C117 * C1619 + C50832 * C1625) * C50862 +
                 (C117 * C1613 + C50832 * C1620) * C118) *
                    C108 +
                ((C117 * C1621 + C50832 * C1626) * C50862 +
                 (C117 * C1614 + C50832 * C1622) * C118) *
                    C107) *
                   C50801) *
                  C291) *
             C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C1891 -
          (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
           ((C117 * C499 + C50832 * C516) * C50862 +
            (C117 * C486 + C50832 * C500) * C118) *
               C107) *
              C1892 +
          (((C117 * C487 + C50832 * C501) * C118 +
            (C117 * C502 + C50832 * C517) * C50862) *
               C107 +
           (C566 + C567) * C108 + (C568 + C569) * C109 + (C570 + C571) * C110) *
              C1893 -
          (((C117 * C1899 + C50832 * C1907) * C50862 +
            (C117 * C1895 + C50832 * C1900) * C118) *
               C110 +
           ((C117 * C1901 + C50832 * C1908) * C50862 +
            (C117 * C1896 + C50832 * C1902) * C118) *
               C109 +
           ((C117 * C1903 + C50832 * C1909) * C50862 +
            (C117 * C1897 + C50832 * C1904) * C118) *
               C108 +
           ((C117 * C1905 + C50832 * C1910) * C50862 +
            (C117 * C1898 + C50832 * C1906) * C118) *
               C107) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C1725 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8774 + C8775 + C8776) * C118 +
             (C8777 + C8778 + C8779) * C50862) *
                C50680) *
               C50801 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C1725) *
              C50721 * C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C1725 -
           (((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
              C8030 * C493 + C8025 * C513) *
                 C50862 +
             (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
              C8030 * C483 + C8025 * C494) *
                 C118) *
                C50680 +
            ((C8779 + C8778 + C8777) * C50862 +
             (C8776 + C8775 + C8774) * C118) *
                C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C1725 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C289 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C50801 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C1725) *
              C290 +
          ((((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C1725 -
           (((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
              C8030 * C1619 + C8025 * C1625) *
                 C50862 +
             (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
              C8030 * C1613 + C8025 * C1620) *
                 C118) *
                C50680 +
            ((C8032 * C9887 + C8027 * C9890 + C8031 * C4242 + C8026 * C4246 +
              C8030 * C1621 + C8025 * C1626) *
                 C50862 +
             (C8032 * C9884 + C8027 * C9888 + C8031 * C4237 + C8026 * C4243 +
              C8030 * C1614 + C8025 * C1622) *
                 C118) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C1891 -
          (((C8440 + C8441 + C8442) * C50862 + (C8443 + C8444 + C8445) * C118) *
               C50680 +
           ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
             C8030 * C499 + C8025 * C516) *
                C50862 +
            (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
             C8030 * C486 + C8025 * C500) *
                C118) *
               C50951) *
              C1892 +
          (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
             C8032 * C3739 + C8027 * C3745) *
                C118 +
            (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
             C8032 * C3744 + C8027 * C3748) *
                C50862) *
               C50951 +
           ((C8446 + C8447 + C8448) * C118 + (C8449 + C8450 + C8451) * C50862) *
               C50680) *
              C1893 -
          (((C8032 * C10283 + C8027 * C10287 + C8031 * C4642 + C8026 * C4647 +
             C8030 * C1903 + C8025 * C1909) *
                C50862 +
            (C8032 * C10281 + C8027 * C10284 + C8031 * C4638 + C8026 * C4643 +
             C8030 * C1897 + C8025 * C1904) *
                C118) *
               C50680 +
           ((C8032 * C10285 + C8027 * C10288 + C8031 * C4644 + C8026 * C4648 +
             C8030 * C1905 + C8025 * C1910) *
                C50862 +
            (C8032 * C10282 + C8027 * C10286 + C8031 * C4639 + C8026 * C4645 +
             C8030 * C1898 + C8025 * C1906) *
                C118) *
               C50951) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C1725 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          (((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
            (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
               C50801 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C1725) *
              C50721 * C1077 +
          (((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
            (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
               C1725 -
           (((C117 * C1899 + C50832 * C1907) * C15408 +
             (C117 * C1895 + C50832 * C1900) * C15411 + C559 * C15407 +
             C558 * C15410 + C548 * C15406 + C549 * C15409) *
                C50680 +
            (C16062 + C16061 + C16060 + C16059 + C16058 + C16057) * C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C1725 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C50801) *
              C289 +
          (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 + C6541 * C15407 +
             C16667 * C15411 + C16668 * C15408) *
                C50951 +
            (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
               C50801 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C15409 +
             (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
             C7033 * C15407 + C17159 * C15411 + C17160 * C15408) *
                C50951 +
            (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
               C1725 -
           (((C117 * C10283 + C50832 * C10287) * C15408 +
             (C117 * C10281 + C50832 * C10284) * C15411 + C15592 * C15407 +
             C15591 * C15410 + C5427 * C15406 + C5426 * C15409) *
                C50680 +
            ((C117 * C10285 + C50832 * C10288) * C15408 +
             (C117 * C10282 + C50832 * C10286) * C15411 + C17160 * C15407 +
             C17159 * C15410 + C7033 * C15406 + C7032 * C15409) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C15409 +
            (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
            C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
               C50951 +
           (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
              C1891 -
          ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
           (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
            C5609 * C15406 + C5608 * C15409) *
               C50951) *
              C1892 +
          ((C5611 * C15409 + C5610 * C15406 + C7440 * C15410 + C7441 * C15407 +
            C17563 * C15411 + C17564 * C15408) *
               C50951 +
           (C15747 + C15748 + C15749 + C15750 + C15757 + C15758) * C50680) *
              C1893 -
          (((C117 * C17552 + C50832 * C17556) * C15408 +
            (C117 * C17550 + C50832 * C17553) * C15411 + C15756 * C15407 +
            C15755 * C15410 + C5613 * C15406 + C5612 * C15409) *
               C50680 +
           ((C117 * C17554 + C50832 * C17557) * C15408 +
            (C117 * C17551 + C50832 * C17555) * C15411 + C17564 * C15407 +
            C17563 * C15410 + C7441 * C15406 + C7440 * C15409) *
               C50951) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C51014 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C51015 +
           (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
              C8032 * C3739 + C8027 * C3745) *
                 C118 +
             (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
              C8032 * C3744 + C8027 * C3748) *
                 C50862) *
                C50951 +
            ((C8446 + C8447 + C8448) * C118 +
             (C8449 + C8450 + C8451) * C50862) *
                C50680) *
               C2141) *
              C50721 * C50960 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8774 + C8775 + C8776) * C118 +
             (C8777 + C8778 + C8779) * C50862) *
                C50680) *
               C51015 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C51014 -
           (((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
              C8030 * C506 + C8025 * C519) *
                 C50862 +
             (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
              C8030 * C489 + C8025 * C505) *
                 C118) *
                C50680 +
            ((C8451 + C8450 + C8449) * C50862 +
             (C8448 + C8447 + C8446) * C118) *
                C50951) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51014 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C51015 +
           (((C117 * C487 + C50832 * C501) * C118 +
             (C117 * C502 + C50832 * C517) * C50862) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C2141) *
              C50721 * C50960 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            (C801 + C802) * C110) *
               C51015 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51014 -
           (((C117 * C511 + C50832 * C522) * C50862 +
             (C117 * C492 + C50832 * C512) * C118) *
                C110 +
            (C571 + C570) * C109 + (C569 + C568) * C108 +
            (C567 + C566) * C107) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C51014 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C51015 +
           ((C5611 * C15409 + C5610 * C15406 + C7440 * C15410 + C7441 * C15407 +
             C17563 * C15411 + C17564 * C15408) *
                C50951 +
            (C15747 + C15748 + C15749 + C15750 + C15757 + C15758) * C50680) *
               C2141) *
              C50721 * C50960 +
          (((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
            (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
               C51015 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C51014 -
           (((C117 * C7426 + C50832 * C7432) * C15408 +
             (C117 * C7423 + C50832 * C7427) * C15411 + C5615 * C15407 +
             C5614 * C15410 + C557 * C15406 + C556 * C15409) *
                C50680 +
            (C15758 + C15757 + C15750 + C15749 + C15748 + C15747) * C50951) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C1725 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C50801) *
              C289 +
          ((((C117 * C932 + C50832 * C937) * C118 +
             (C117 * C938 + C50832 * C947) * C50862) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C50801 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C1725 -
           (((C117 * C1615 + C50832 * C1623) * C50862 +
             (C117 * C1611 + C50832 * C1616) * C118) *
                C110 +
            ((C117 * C1617 + C50832 * C1624) * C50862 +
             (C117 * C1612 + C50832 * C1618) * C118) *
                C109 +
            ((C117 * C1619 + C50832 * C1625) * C50862 +
             (C117 * C1613 + C50832 * C1620) * C118) *
                C108 +
            ((C117 * C1621 + C50832 * C1626) * C50862 +
             (C117 * C1614 + C50832 * C1622) * C118) *
                C107) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C1725 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C50801) *
              C50721 * C1076 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            (C801 + C802) * C110) *
               C50801 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C1725) *
              C50721 * C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C1725 -
           (((C117 * C789 + C50832 * C791) * C50862 +
             (C117 * C788 + C50832 * C790) * C118) *
                C110 +
            (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C1725 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8774 + C8775 + C8776) * C118 +
             (C8777 + C8778 + C8779) * C50862) *
                C50680) *
               C50801 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C1725) *
              C50721 * C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C1725 -
           (((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
              C8030 * C493 + C8025 * C513) *
                 C50862 +
             (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
              C8030 * C483 + C8025 * C494) *
                 C118) *
                C50680 +
            ((C8779 + C8778 + C8777) * C50862 +
             (C8776 + C8775 + C8774) * C118) *
                C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C1725 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C289 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C50801 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C1725) *
              C290 +
          ((((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C1725 -
           (((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
              C8030 * C1619 + C8025 * C1625) *
                 C50862 +
             (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
              C8030 * C1613 + C8025 * C1620) *
                 C118) *
                C50680 +
            ((C8032 * C9887 + C8027 * C9890 + C8031 * C4242 + C8026 * C4246 +
              C8030 * C1621 + C8025 * C1626) *
                 C50862 +
             (C8032 * C9884 + C8027 * C9888 + C8031 * C4237 + C8026 * C4243 +
              C8030 * C1614 + C8025 * C1622) *
                 C118) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C1725 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          (((C15746 + C15745 + C15744 + C15743 + C15742 + C15741) * C50951 +
            (C16057 + C16058 + C16059 + C16060 + C16061 + C16062) * C50680) *
               C50801 -
           ((C15419 + C15420 + C15421 + C15422 + C15423 + C15424) * C50680 +
            (C15418 + C15417 + C15416 + C15415 + C15414 + C15413) * C50951) *
               C1725) *
              C50721 * C1077 +
          (((C15424 + C15423 + C15422 + C15421 + C15420 + C15419) * C50951 +
            (C15425 + C15426 + C15427 + C15428 + C15429 + C15430) * C50680) *
               C1725 -
           (((C117 * C1899 + C50832 * C1907) * C15408 +
             (C117 * C1895 + C50832 * C1900) * C15411 + C559 * C15407 +
             C558 * C15410 + C548 * C15406 + C549 * C15409) *
                C50680 +
            (C16062 + C16061 + C16060 + C16059 + C16058 + C16057) * C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C15409 +
             (C117 * C127 + C50832 * C140) * C15406 + C5608 * C15410 +
             C5609 * C15407 + C5611 * C15411 + C5610 * C15408) *
                C50951 +
            (C15413 + C15414 + C15415 + C15416 + C15417 + C15418) * C50680) *
               C1725 -
           ((C15741 + C15742 + C15743 + C15744 + C15745 + C15746) * C50680 +
            (C7441 * C15408 + C7440 * C15411 + C5610 * C15407 + C5611 * C15410 +
             C5609 * C15406 + C5608 * C15409) *
                C50951) *
               C50801) *
              C289 +
          (((C6136 * C15409 + C6137 * C15406 + C6540 * C15410 + C6541 * C15407 +
             C16667 * C15411 + C16668 * C15408) *
                C50951 +
            (C16257 + C16258 + C16259 + C16260 + C16267 + C16268) * C50680) *
               C50801 -
           ((C15577 + C15578 + C15579 + C15580 + C15581 + C15582) * C50680 +
            (C6541 * C15408 + C6540 * C15411 + C6137 * C15407 + C6136 * C15410 +
             (C117 * C310 + C50832 * C327) * C15406 +
             (C117 * C297 + C50832 * C311) * C15409) *
                C50951) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C15409 +
             (C117 * C313 + C50832 * C328) * C15406 + C7032 * C15410 +
             C7033 * C15407 + C17159 * C15411 + C17160 * C15408) *
                C50951 +
            (C15583 + C15584 + C15585 + C15586 + C15593 + C15594) * C50680) *
               C1725 -
           (((C117 * C10283 + C50832 * C10287) * C15408 +
             (C117 * C10281 + C50832 * C10284) * C15411 + C15592 * C15407 +
             C15591 * C15410 + C5427 * C15406 + C5426 * C15409) *
                C50680 +
            ((C117 * C10285 + C50832 * C10288) * C15408 +
             (C117 * C10282 + C50832 * C10286) * C15411 + C17160 * C15407 +
             C17159 * C15410 + C7033 * C15406 + C7032 * C15409) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C50968 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C50773) *
              C51010 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C50773 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C50968) *
              C51011 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50737 * C50968 -
           ((C10849 * C3582 + C10844 * C3588 + C10848 * C1156 + C10843 * C1163 +
             C10847 * C317 + C10842 * C330 + C10846 * C306 + C10841 * C325) *
                C50862 +
            (C10849 * C3579 + C10844 * C3583 + C10848 * C1151 + C10843 * C1157 +
             C10847 * C300 + C10842 * C316 + C10846 * C295 + C10841 * C307) *
                C118) *
               C50675 * C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C50968 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C50773) *
              C51010 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C50773 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C50968) *
              C51011 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50737 * C50968 -
           (((C2344 * C322 + C50848 * C333 + C2343 * C321 + C50978 * C332) *
                 C50862 +
             (C2344 * C303 + C50848 * C323 + C2343 * C302 + C50978 * C320) *
                 C118) *
                C2342 +
            ((C2953 + C2952) * C50862 + (C2951 + C2950) * C118) * C2341 +
            C2954 * C2340) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C50737 * C50968 -
           ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                C15408 +
            (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                C15411 +
            (C2344 * C1621 + C50848 * C1626 + C2343 * C938 + C50978 * C947) *
                C15407 +
            (C2344 * C1614 + C50848 * C1622 + C2343 * C932 + C50978 * C937) *
                C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50737 * C50773) *
              C51010 +
          (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
            (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
            (C2343 * C1266 + C50978 * C1273 + C2344 * C3738 + C50848 * C3743) *
                C15411 +
            (C2343 * C1272 + C50978 * C1278 + C2344 * C3742 + C50848 * C3747) *
                C15408) *
               C50675 * C50737 * C50773 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C50737 * C50968) *
              C51011 +
          ((C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
            (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
            (C2790 + C2791) * C15408) *
               C50675 * C50737 * C50968 -
           ((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                C15408 +
            (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                C15411 +
            (C3335 + C3334) * C15407 + (C3333 + C3332) * C15410 +
            C2938 * C15406 + C2939 * C15409) *
               C50675 * C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
              C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                 C118 +
             (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
              C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 +
              C10843 * C1626 + C10847 * C938 + C10842 * C947 + C10846 * C499 +
              C10841 * C516) *
                 C50862 +
             (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 +
              C10843 * C1622 + C10847 * C932 + C10842 * C937 + C10846 * C486 +
              C10841 * C500) *
                 C118) *
                C50675 * C50801) *
               C50968 +
           (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
              C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
              C10844 * C9888) *
                 C118 +
             (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
              C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
              C10844 * C9890) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 +
              C10843 * C1165 + C10847 * C313 + C10842 * C328 + C10846 * C310 +
              C10841 * C327) *
                 C50862 +
             (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 +
              C10843 * C1161 + C10847 * C298 + C10842 * C312 + C10846 * C297 +
              C10841 * C311) *
                 C118) *
                C50675 * C50969) *
               C50773) *
              C292 +
          ((((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
              C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
              C10844 * C4241) *
                 C118 +
             (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
              C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
              C10844 * C4245) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
              C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                 C50862 +
             (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
              C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                 C118) *
                C50675 * C50969) *
               C50968 +
           (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
              C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
              C10844 * C3585) *
                 C118 +
             (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
              C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
              C10844 * C3589) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C9885 + C10844 * C9889 + C10848 * C4240 +
              C10843 * C4245 + C10847 * C1619 + C10842 * C1625 + C10846 * C940 +
              C10841 * C948) *
                 C50862 +
             (C10849 * C9883 + C10844 * C9886 + C10848 * C4236 +
              C10843 * C4241 + C10847 * C1613 + C10842 * C1620 + C10846 * C933 +
              C10841 * C939) *
                 C118) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C118 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C50862) *
                 C2340 +
             ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
             C2402 * C2342) *
                C50969 -
            (C3117 * C2342 +
             ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
             ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                  C50862 +
              (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                  C118) *
                 C2340) *
                C50801) *
               C50968 +
           ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                  C118 +
              (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                  C50862) *
                 C2340 +
             ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
             ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                C50801 -
            (C2954 * C2342 +
             ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
             ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C50862 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C118) *
                 C2340) *
                C50969) *
               C50773) *
              C292 +
          (((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
             ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
             ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                C50801 -
            (C2403 * C2342 +
             ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
             ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                C50969) *
               C50968 +
           ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
             ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
             ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                C50969 -
            (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                  C50862 +
              (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                  C118) *
                 C2342 +
             ((C3335 + C3334) * C50862 + (C3333 + C3332) * C118) * C2341 +
             ((C3331 + C3330) * C50862 + (C3329 + C3328) * C118) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C15409 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C15406 +
             (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
             C18491 * C15411 + C18492 * C15408) *
                C50675 * C50969 -
            ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
             (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
             (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
                C50675 * C50801) *
               C50968 +
           (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
             (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
             (C2343 * C4639 + C50978 * C4645 + C2344 * C10282 +
              C50848 * C10286) *
                 C15411 +
             (C2343 * C4644 + C50978 * C4648 + C2344 * C10285 +
              C50848 * C10288) *
                 C15408) *
                C50675 * C50801 -
            ((C19010 + C19009) * C15408 + (C19008 + C19007) * C15411 +
             (C19006 + C19005) * C15407 + (C19004 + C19003) * C15410 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C15406 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C15409) *
                C50675 * C50969) *
               C50773) *
              C292 +
          ((((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
             (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
             (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
                C50675 * C50801 -
            (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
             (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
             (C2379 + C2378) * C15409) *
                C50675 * C50969) *
               C50968 +
           (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
             (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
             (C19011 + C19012) * C15411 + (C19013 + C19014) * C15408) *
                C50675 * C50969 -
            ((C2344 * C10283 + C50848 * C10287 + C2343 * C4642 +
              C50978 * C4647) *
                 C15408 +
             (C2344 * C10281 + C50848 * C10284 + C2343 * C4638 +
              C50978 * C4643) *
                 C15411 +
             (C19014 + C19013) * C15407 + (C19012 + C19011) * C15410 +
             (C3331 + C3330) * C15406 + (C3329 + C3328) * C15409) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                    C118 +
                (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                    C50862) *
                   C2340 +
               ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
               C2402 * C2342) *
                  C50737 * C50721 * C113 -
              (C2403 * C2342 +
               ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
               ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                  C50737 * C50721 * C114 +
              (C2402 * C2340 +
               ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
               ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
                  C50737 * C50721 * C115 -
              (((C2344 * C675 + C50848 * C677 + C2343 * C137 + C50978 * C145) *
                    C50862 +
                (C2344 * C674 + C50848 * C676 + C2343 * C124 + C50978 * C136) *
                    C118) *
                   C2342 +
               ((C2393 + C2392) * C50862 + (C2391 + C2390) * C118) * C2341 +
               C2403 * C2340) *
                  C50737 * C50721 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                     C118 +
                 (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                     C50862) *
                    C2340 +
                ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
                C2402 * C2342) *
                   C50737 * C289 -
               (((C2582 + C2583) * C50862 + (C2584 + C2585) * C118) * C2342 +
                ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
                ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                     C50862 +
                 (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                     C118) *
                    C2340) *
                   C50737 * C290 +
               (((C2343 * C298 + C50978 * C312 + C2344 * C1153 +
                  C50848 * C1161) *
                     C118 +
                 (C2343 * C313 + C50978 * C328 + C2344 * C1160 +
                  C50848 * C1165) *
                     C50862) *
                    C2340 +
                ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
                ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
                   C50737 * C291) *
                  C292 +
              ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
                ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
                ((C2343 * C294 + C50978 * C305 + C2344 * C301 + C50848 * C318) *
                     C118 +
                 (C2343 * C304 + C50978 * C324 + C2344 * C319 + C50848 * C331) *
                     C50862) *
                    C2342) *
                   C50737 * C290 -
               (C2403 * C2342 +
                ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
                ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                   C50737 * C289 -
               (((C2344 * C1154 + C50848 * C1162 + C2343 * C319 +
                  C50978 * C331) *
                     C50862 +
                 (C2344 * C1150 + C50848 * C1155 + C2343 * C301 +
                  C50978 * C318) *
                     C118) *
                    C2342 +
                ((C2597 + C2596) * C50862 + (C2595 + C2594) * C118) * C2341 +
                ((C2593 + C2592) * C50862 + (C2591 + C2590) * C118) * C2340) *
                   C50737 * C291) *
                  C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C480 -
           (((C2776 + C2777) * C50862 + (C2778 + C2779) * C118) * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C482) *
              C50721 * C292 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C2343 * C483 + C50978 * C494 + C2344 * C935 + C50848 * C943) *
                 C118 +
             (C2343 * C493 + C50978 * C513 + C2344 * C944 + C50848 * C950) *
                 C50862) *
                C2342) *
               C481 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C480 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50862 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C118) *
                C2342 +
            ((C2791 + C2790) * C50862 + (C2789 + C2788) * C118) * C2341 +
            ((C2787 + C2786) * C50862 + (C2785 + C2784) * C118) * C2340) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C50721 * C113 -
          ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
            C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
               C50862 +
           (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
            C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
               C118) *
              C50675 * C50737 * C50721 * C114 +
          ((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
            C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
               C118 +
           (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
            C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
               C50862) *
              C50675 * C50737 * C50721 * C115 -
          ((C10849 * C1154 + C10844 * C1162 + C10848 * C319 + C10843 * C331 +
            C10847 * C304 + C10842 * C324 + C10846 * C133 + C10841 * C143) *
               C50862 +
           (C10849 * C1150 + C10844 * C1155 + C10848 * C301 + C10843 * C318 +
            C10847 * C294 + C10842 * C305 + C10846 * C122 + C10841 * C132) *
               C118) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C289 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C290 +
           ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50737 * C291) *
              C292 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C290 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C289 -
           ((C10849 * C9237 + C10844 * C9241 + C10848 * C3584 + C10843 * C3589 +
             C10847 * C1158 + C10842 * C1164 + C10846 * C315 + C10841 * C329) *
                C50862 +
            (C10849 * C9235 + C10844 * C9238 + C10848 * C3580 + C10843 * C3585 +
             C10847 * C1152 + C10842 * C1159 + C10846 * C299 + C10841 * C314) *
                C118) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C480 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C481 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C482) *
              C50721 * C292 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C481 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C480 -
           ((C10849 * C9391 + C10844 * C9395 + C10848 * C3742 + C10843 * C3747 +
             C10847 * C1272 + C10842 * C1278 + C10846 * C504 + C10841 * C518) *
                C50862 +
            (C10849 * C9389 + C10844 * C9392 + C10848 * C3738 + C10843 * C3743 +
             C10847 * C1266 + C10842 * C1273 + C10846 * C488 + C10841 * C503) *
                C118) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
               C15409 +
           (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
               C15406 +
           (C2343 * C486 + C50978 * C500 + C2344 * C932 + C50848 * C937) *
               C15410 +
           (C2343 * C499 + C50978 * C516 + C2344 * C938 + C50848 * C947) *
               C15407 +
           (C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
               C15411 +
           (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
               C15408) *
              C50675 * C50737 * C50721 * C113 -
          ((C2787 + C2786) * C15408 + (C2785 + C2784) * C15411 +
           (C2780 + C2781) * C15407 + (C2782 + C2783) * C15410 +
           (C2381 + C2380) * C15406 + (C2379 + C2378) * C15409) *
              C50675 * C50737 * C50721 * C114 +
          (C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
           (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
           (C2790 + C2791) * C15408) *
              C50675 * C50737 * C50721 * C115 -
          ((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
               C15408 +
           (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
               C15411 +
           (C3116 + C3115) * C15407 + (C3114 + C3113) * C15410 +
           C2396 * C15406 + C2397 * C15409) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C2343 * C486 + C50978 * C500 + C2344 * C932 + C50848 * C937) *
                C15410 +
            (C2343 * C499 + C50978 * C516 + C2344 * C938 + C50848 * C947) *
                C15407 +
            (C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                C15411 +
            (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                C15408) *
               C50675 * C50737 * C289 -
           ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                C15408 +
            (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                C15411 +
            (C2344 * C1621 + C50848 * C1626 + C2343 * C938 + C50978 * C947) *
                C15407 +
            (C2344 * C1614 + C50848 * C1622 + C2343 * C932 + C50978 * C937) *
                C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50737 * C290 +
           ((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C15409 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C15406 +
            (C2343 * C1614 + C50978 * C1622 + C2344 * C4237 + C50848 * C4243) *
                C15410 +
            (C2343 * C1621 + C50978 * C1626 + C2344 * C4242 + C50848 * C4246) *
                C15407 +
            (C2343 * C3739 + C50978 * C3745 + C2344 * C9390 + C50848 * C9394) *
                C15411 +
            (C2343 * C3744 + C50978 * C3748 + C2344 * C9393 + C50848 * C9396) *
                C15408) *
               C50675 * C50737 * C291) *
              C292 +
          (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
            (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
            (C2343 * C1266 + C50978 * C1273 + C2344 * C3738 + C50848 * C3743) *
                C15411 +
            (C2343 * C1272 + C50978 * C1278 + C2344 * C3742 + C50848 * C3747) *
                C15408) *
               C50675 * C50737 * C290 -
           ((C2787 + C2786) * C15408 + (C2785 + C2784) * C15411 +
            (C2780 + C2781) * C15407 + (C2782 + C2783) * C15410 +
            (C2381 + C2380) * C15406 + (C2379 + C2378) * C15409) *
               C50675 * C50737 * C289 -
           ((C2344 * C9391 + C50848 * C9395 + C2343 * C3742 + C50978 * C3747) *
                C15408 +
            (C2344 * C9389 + C50848 * C9392 + C2343 * C3738 + C50978 * C3743) *
                C15411 +
            (C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                C15407 +
            (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                C15410 +
            (C2593 + C2592) * C15406 + (C2591 + C2590) * C15409) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C480 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C481 +
           (C18491 * C15409 + C18492 * C15406 + (C18486 + C18485) * C15410 +
            (C18484 + C18483) * C15407 +
            (C2343 * C7425 + C50978 * C7431 + C2344 * C14797 +
             C50848 * C14801) *
                C15411 +
            (C2343 * C7430 + C50978 * C7434 + C2344 * C14799 +
             C50848 * C14803) *
                C15408) *
               C50675 * C482) *
              C50721 * C292 +
          (((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
            (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
            (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
               C50675 * C481 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C480 -
           ((C2344 * C16659 + C50848 * C16661 + C2343 * C7428 +
             C50978 * C7433) *
                C15408 +
            (C2344 * C16658 + C50848 * C16660 + C2343 * C7424 +
             C50978 * C7429) *
                C15411 +
            (C18490 + C18489) * C15407 + (C18488 + C18487) * C15410 +
            C18473 * C15406 + C18474 * C15409) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C50721 * C51010 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50969) *
              C50721 * C51011 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C4238 + C10844 * C4244 + C10848 * C1617 + C10843 * C1624 +
             C10847 * C942 + C10842 * C949 + C10846 * C495 + C10841 * C514) *
                C50862 +
            (C10849 * C4235 + C10844 * C4239 + C10848 * C1612 + C10843 * C1618 +
             C10847 * C934 + C10842 * C941 + C10846 * C484 + C10841 * C496) *
                C118) *
               C50675 * C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50969 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C50721 * C51010 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C50801 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50969) *
              C50721 * C51011 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50969 -
           (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                 C50862 +
             (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                 C118) *
                C2342 +
            ((C3116 + C3115) * C50862 + (C3114 + C3113) * C118) * C2341 +
            C3117 * C2340) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C50969 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C50801) *
              C50721 * C51010 +
          (((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
            (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
            (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
               C50675 * C50801 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C50969) *
              C50721 * C51011 +
          ((C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
            (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
            (C2790 + C2791) * C15408) *
               C50675 * C50969 -
           ((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                C15408 +
            (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                C15411 +
            (C2791 + C2790) * C15407 + (C2789 + C2788) * C15410 +
            C3101 * C15406 + C3102 * C15409) *
               C50675 * C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C289 -
           (((C2582 + C2583) * C50862 + (C2584 + C2585) * C118) * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C290 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50737 * C291) *
              C292 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2343 * C294 + C50978 * C305 + C2344 * C301 + C50848 * C318) *
                 C118 +
             (C2343 * C304 + C50978 * C324 + C2344 * C319 + C50848 * C331) *
                 C50862) *
                C2342) *
               C50737 * C290 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C289 -
           (((C2344 * C1154 + C50848 * C1162 + C2343 * C319 + C50978 * C331) *
                 C50862 +
             (C2344 * C1150 + C50848 * C1155 + C2343 * C301 + C50978 * C318) *
                 C118) *
                C2342 +
            ((C2597 + C2596) * C50862 + (C2595 + C2594) * C118) * C2341 +
            ((C2593 + C2592) * C50862 + (C2591 + C2590) * C118) * C2340) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C50737 * C50721 * C113 -
          (C2403 * C2342 +
           ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
           ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
              C50737 * C50721 * C114 +
          (C2402 * C2340 +
           ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
           ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
              C50737 * C50721 * C115 -
          (((C2344 * C675 + C50848 * C677 + C2343 * C137 + C50978 * C145) *
                C50862 +
            (C2344 * C674 + C50848 * C676 + C2343 * C124 + C50978 * C136) *
                C118) *
               C2342 +
           ((C2393 + C2392) * C50862 + (C2391 + C2390) * C118) * C2341 +
           C2403 * C2340) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C50721 * C113 -
          ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
            C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
               C50862 +
           (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
            C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
               C118) *
              C50675 * C50737 * C50721 * C114 +
          ((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
            C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
               C118 +
           (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
            C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
               C50862) *
              C50675 * C50737 * C50721 * C115 -
          ((C10849 * C1154 + C10844 * C1162 + C10848 * C319 + C10843 * C331 +
            C10847 * C304 + C10842 * C324 + C10846 * C133 + C10841 * C143) *
               C50862 +
           (C10849 * C1150 + C10844 * C1155 + C10848 * C301 + C10843 * C318 +
            C10847 * C294 + C10842 * C305 + C10846 * C122 + C10841 * C132) *
               C118) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C289 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C290 +
           ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50737 * C291) *
              C292 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C290 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C289 -
           ((C10849 * C9237 + C10844 * C9241 + C10848 * C3584 + C10843 * C3589 +
             C10847 * C1158 + C10842 * C1164 + C10846 * C315 + C10841 * C329) *
                C50862 +
            (C10849 * C9235 + C10844 * C9238 + C10848 * C3580 + C10843 * C3585 +
             C10847 * C1152 + C10842 * C1159 + C10846 * C299 + C10841 * C314) *
                C118) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
               C15409 +
           (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
               C15406 +
           (C2343 * C486 + C50978 * C500 + C2344 * C932 + C50848 * C937) *
               C15410 +
           (C2343 * C499 + C50978 * C516 + C2344 * C938 + C50848 * C947) *
               C15407 +
           (C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
               C15411 +
           (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
               C15408) *
              C50675 * C50737 * C50721 * C113 -
          ((C2787 + C2786) * C15408 + (C2785 + C2784) * C15411 +
           (C2780 + C2781) * C15407 + (C2782 + C2783) * C15410 +
           (C2381 + C2380) * C15406 + (C2379 + C2378) * C15409) *
              C50675 * C50737 * C50721 * C114 +
          (C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
           (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
           (C2790 + C2791) * C15408) *
              C50675 * C50737 * C50721 * C115 -
          ((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
               C15408 +
           (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
               C15411 +
           (C3116 + C3115) * C15407 + (C3114 + C3113) * C15410 +
           C2396 * C15406 + C2397 * C15409) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C2343 * C486 + C50978 * C500 + C2344 * C932 + C50848 * C937) *
                C15410 +
            (C2343 * C499 + C50978 * C516 + C2344 * C938 + C50848 * C947) *
                C15407 +
            (C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                C15411 +
            (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                C15408) *
               C50675 * C50737 * C289 -
           ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                C15408 +
            (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                C15411 +
            (C2344 * C1621 + C50848 * C1626 + C2343 * C938 + C50978 * C947) *
                C15407 +
            (C2344 * C1614 + C50848 * C1622 + C2343 * C932 + C50978 * C937) *
                C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50737 * C290 +
           ((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C15409 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C15406 +
            (C2343 * C1614 + C50978 * C1622 + C2344 * C4237 + C50848 * C4243) *
                C15410 +
            (C2343 * C1621 + C50978 * C1626 + C2344 * C4242 + C50848 * C4246) *
                C15407 +
            (C2343 * C3739 + C50978 * C3745 + C2344 * C9390 + C50848 * C9394) *
                C15411 +
            (C2343 * C3744 + C50978 * C3748 + C2344 * C9393 + C50848 * C9396) *
                C15408) *
               C50675 * C50737 * C291) *
              C292 +
          (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
            (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
            (C2343 * C1266 + C50978 * C1273 + C2344 * C3738 + C50848 * C3743) *
                C15411 +
            (C2343 * C1272 + C50978 * C1278 + C2344 * C3742 + C50848 * C3747) *
                C15408) *
               C50675 * C50737 * C290 -
           ((C2787 + C2786) * C15408 + (C2785 + C2784) * C15411 +
            (C2780 + C2781) * C15407 + (C2782 + C2783) * C15410 +
            (C2381 + C2380) * C15406 + (C2379 + C2378) * C15409) *
               C50675 * C50737 * C289 -
           ((C2344 * C9391 + C50848 * C9395 + C2343 * C3742 + C50978 * C3747) *
                C15408 +
            (C2344 * C9389 + C50848 * C9392 + C2343 * C3738 + C50978 * C3743) *
                C15411 +
            (C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                C15407 +
            (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                C15410 +
            (C2593 + C2592) * C15406 + (C2591 + C2590) * C15409) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C51012 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C51013 +
           ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50737 * C1380) *
              C50960 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C51013 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C51012 -
           ((C10849 * C9237 + C10844 * C9241 + C10848 * C3584 + C10843 * C3589 +
             C10847 * C1158 + C10842 * C1164 + C10846 * C315 + C10841 * C329) *
                C50862 +
            (C10849 * C9235 + C10844 * C9238 + C10848 * C3580 + C10843 * C3585 +
             C10847 * C1152 + C10842 * C1159 + C10846 * C299 + C10841 * C314) *
                C118) *
               C50675 * C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C51012 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C51013 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50737 * C1380) *
              C50960 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C51013 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C51012 -
           (((C2344 * C1154 + C50848 * C1162 + C2343 * C319 + C50978 * C331) *
                 C50862 +
             (C2344 * C1150 + C50848 * C1155 + C2343 * C301 + C50978 * C318) *
                 C118) *
                C2342 +
            ((C2597 + C2596) * C50862 + (C2595 + C2594) * C118) * C2341 +
            ((C2593 + C2592) * C50862 + (C2591 + C2590) * C118) * C2340) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C50737 * C51012 -
           (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
            (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50737 * C51013 +
           ((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C15409 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C15406 +
            (C2343 * C1614 + C50978 * C1622 + C2344 * C4237 + C50848 * C4243) *
                C15410 +
            (C2343 * C1621 + C50978 * C1626 + C2344 * C4242 + C50848 * C4246) *
                C15407 +
            (C2343 * C3739 + C50978 * C3745 + C2344 * C9390 + C50848 * C9394) *
                C15411 +
            (C2343 * C3744 + C50978 * C3748 + C2344 * C9393 + C50848 * C9396) *
                C15408) *
               C50675 * C50737 * C1380) *
              C50960 +
          (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
            (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
            (C19011 + C19012) * C15411 + (C19013 + C19014) * C15408) *
               C50675 * C50737 * C51013 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C50737 * C51012 -
           ((C2344 * C9391 + C50848 * C9395 + C2343 * C3742 + C50978 * C3747) *
                C15408 +
            (C2344 * C9389 + C50848 * C9392 + C2343 * C3738 + C50978 * C3743) *
                C15411 +
            (C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                C15407 +
            (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                C15410 +
            (C2593 + C2592) * C15406 + (C2591 + C2590) * C15409) *
               C50675 * C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C51012 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50969) *
              C51013 +
          (((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C11969 + C10844 * C11971 + C10848 * C9887 +
             C10843 * C9890 + C10847 * C4242 + C10842 * C4246 + C10846 * C1621 +
             C10841 * C1626) *
                C50862 +
            (C10849 * C11968 + C10844 * C11970 + C10848 * C9884 +
             C10843 * C9888 + C10847 * C4237 + C10842 * C4243 + C10846 * C1614 +
             C10841 * C1622) *
                C118) *
               C50675 * C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50969 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C51012 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C50801 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50969) *
              C51013 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50969 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50862 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C118) *
                C2342 +
            ((C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                 C50862 +
             (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                 C118) *
                C2341 +
            ((C2344 * C4242 + C50848 * C4246 + C2343 * C1621 + C50978 * C1626) *
                 C50862 +
             (C2344 * C4237 + C50848 * C4243 + C2343 * C1614 + C50978 * C1622) *
                 C118) *
                C2340) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C50969 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C50801) *
              C51012 +
          (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
            (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
            (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
               C50675 * C50801 -
           (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
            (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50969) *
              C51013 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C15409 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C15406 +
            (C19921 + C19922) * C15410 + (C19923 + C19924) * C15407 +
            (C19925 + C19926) * C15411 + (C19927 + C19928) * C15408) *
               C50675 * C50969 -
           ((C2344 * C12235 + C50848 * C12237 + C2343 * C10285 +
             C50978 * C10288) *
                C15408 +
            (C2344 * C12234 + C50848 * C12236 + C2343 * C10282 +
             C50978 * C10286) *
                C15411 +
            (C19928 + C19927) * C15407 + (C19926 + C19925) * C15410 +
            (C19924 + C19923) * C15406 + (C19922 + C19921) * C15409) *
               C50675 * C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                     C118 +
                 (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                     C50862) *
                    C2340 +
                ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
                C2402 * C2342) *
                   C50737 * C1074 -
               (C2954 * C2342 +
                ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
                ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                     C50862 +
                 (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                     C118) *
                    C2340) *
                   C50737 * C50773) *
                  C1076 +
              ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
                ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
                ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                   C50737 * C50773 -
               (C2403 * C2342 +
                ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
                ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                   C50737 * C1074) *
                  C1077 +
              ((C2402 * C2340 +
                ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
                ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
                   C50737 * C1074 -
               (((C2344 * C322 + C50848 * C333 + C2343 * C321 + C50978 * C332) *
                     C50862 +
                 (C2344 * C303 + C50848 * C323 + C2343 * C302 + C50978 * C320) *
                     C118) *
                    C2342 +
                ((C2953 + C2952) * C50862 + (C2951 + C2950) * C118) * C2341 +
                C2954 * C2340) *
                   C50737 * C50773) *
                  C1078) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                    C118 +
                (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                    C50862) *
                   C2340 +
               ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
               C2402 * C2342) *
                  C50737 * C1145 -
              (C2954 * C2342 +
               ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
               ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                    C50862 +
                (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                    C118) *
                   C2340) *
                  C50737 * C1146 +
              (((C2343 * C298 + C50978 * C312 + C2344 * C1153 +
                 C50848 * C1161) *
                    C118 +
                (C2343 * C313 + C50978 * C328 + C2344 * C1160 +
                 C50848 * C1165) *
                    C50862) *
                   C2340 +
               ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
               ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
                  C50737 * C1147 -
              (((C2344 * C3582 + C50848 * C3588 + C2343 * C1156 +
                 C50978 * C1163) *
                    C50862 +
                (C2344 * C3579 + C50848 * C3583 + C2343 * C1151 +
                 C50978 * C1157) *
                    C118) *
                   C2342 +
               ((C2344 * C3584 + C50848 * C3589 + C2343 * C1158 +
                 C50978 * C1164) *
                    C50862 +
                (C2344 * C3580 + C50848 * C3585 + C2343 * C1152 +
                 C50978 * C1159) *
                    C118) *
                   C2341 +
               ((C2344 * C3586 + C50848 * C3590 + C2343 * C1160 +
                 C50978 * C1165) *
                    C50862 +
                (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 +
                 C50978 * C1161) *
                    C118) *
                   C2340) *
                  C50737 * C1148) *
             C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C480 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C482) *
              C1074 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C481 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C480 -
           (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                 C50862 +
             (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                 C118) *
                C2342 +
            ((C2344 * C3742 + C50848 * C3747 + C2343 * C1272 + C50978 * C1278) *
                 C50862 +
             (C2344 * C3738 + C50848 * C3743 + C2343 * C1266 + C50978 * C1273) *
                 C118) *
                C2341 +
            ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                 C50862 +
             (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                 C118) *
                C2340) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C50773 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3582 + C10844 * C3588 + C10848 * C1156 + C10843 * C1163 +
             C10847 * C317 + C10842 * C330 + C10846 * C306 + C10841 * C325) *
                C50862 +
            (C10849 * C3579 + C10844 * C3583 + C10848 * C1151 + C10843 * C1157 +
             C10847 * C300 + C10842 * C316 + C10846 * C295 + C10841 * C307) *
                C118) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C1145 -
          ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
            C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
               C50862 +
           (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
            C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
               C118) *
              C50675 * C50737 * C1146 +
          ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
            C10848 * C3581 + C10843 * C3587 + C10849 * C9236 + C10844 * C9240) *
               C118 +
           (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
            C10848 * C3586 + C10843 * C3590 + C10849 * C9239 + C10844 * C9242) *
               C50862) *
              C50675 * C50737 * C1147 -
          ((C10849 * C11537 + C10844 * C11539 + C10848 * C9239 +
            C10843 * C9242 + C10847 * C3586 + C10842 * C3590 + C10846 * C1160 +
            C10841 * C1165) *
               C50862 +
           (C10849 * C11536 + C10844 * C11538 + C10848 * C9236 +
            C10843 * C9240 + C10847 * C3581 + C10842 * C3587 + C10846 * C1153 +
            C10841 * C1161) *
               C118) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C480 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C481 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C482) *
              C1074 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C481 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C480 -
           ((C10849 * C11639 + C10844 * C11641 + C10848 * C9393 +
             C10843 * C9396 + C10847 * C3744 + C10842 * C3748 + C10846 * C1274 +
             C10841 * C1279) *
                C50862 +
            (C10849 * C11638 + C10844 * C11640 + C10848 * C9390 +
             C10843 * C9394 + C10847 * C3739 + C10842 * C3745 + C10846 * C1267 +
             C10841 * C1275) *
                C118) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C50737 * C1074 -
           ((C19010 + C19009) * C15408 + (C19008 + C19007) * C15411 +
            (C19006 + C19005) * C15407 + (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
            (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
            (C19011 + C19012) * C15411 + (C19013 + C19014) * C15408) *
               C50675 * C50737 * C50773 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C50737 * C1074) *
              C1077 +
          ((C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
            (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
            (C2790 + C2791) * C15408) *
               C50675 * C50737 * C1074 -
           ((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                C15408 +
            (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                C15411 +
            (C3335 + C3334) * C15407 + (C3333 + C3332) * C15410 +
            C2938 * C15406 + C2939 * C15409) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
               C15409 +
           (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
               C15406 +
           (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
           C18491 * C15411 + C18492 * C15408) *
              C50675 * C50737 * C1145 -
          ((C19010 + C19009) * C15408 + (C19008 + C19007) * C15411 +
           (C19006 + C19005) * C15407 + (C19004 + C19003) * C15410 +
           (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
               C15406 +
           (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
               C15409) *
              C50675 * C50737 * C1146 +
          ((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
               C15409 +
           (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
               C15406 +
           (C2343 * C1614 + C50978 * C1622 + C2344 * C4237 + C50848 * C4243) *
               C15410 +
           (C2343 * C1621 + C50978 * C1626 + C2344 * C4242 + C50848 * C4246) *
               C15407 +
           (C2343 * C3739 + C50978 * C3745 + C2344 * C9390 + C50848 * C9394) *
               C15411 +
           (C2343 * C3744 + C50978 * C3748 + C2344 * C9393 + C50848 * C9396) *
               C15408) *
              C50675 * C50737 * C1147 -
          ((C2344 * C11639 + C50848 * C11641 + C2343 * C9393 + C50978 * C9396) *
               C15408 +
           (C2344 * C11638 + C50848 * C11640 + C2343 * C9390 + C50978 * C9394) *
               C15411 +
           (C2344 * C9887 + C50848 * C9890 + C2343 * C4242 + C50978 * C4246) *
               C15407 +
           (C2344 * C9884 + C50848 * C9888 + C2343 * C4237 + C50978 * C4243) *
               C15410 +
           (C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
               C15406 +
           (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
               C15409) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C480 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C481 +
           (C18491 * C15409 + C18492 * C15406 + (C18486 + C18485) * C15410 +
            (C18484 + C18483) * C15407 +
            (C2343 * C7425 + C50978 * C7431 + C2344 * C14797 +
             C50848 * C14801) *
                C15411 +
            (C2343 * C7430 + C50978 * C7434 + C2344 * C14799 +
             C50848 * C14803) *
                C15408) *
               C50675 * C482) *
              C1074 +
          (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
            (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
            (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
               C50675 * C481 -
           (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
            (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C480 -
           ((C2344 * C14798 + C50848 * C14802 + C2343 * C14799 +
             C50978 * C14803) *
                C15408 +
            (C2344 * C14796 + C50848 * C14800 + C2343 * C14797 +
             C50978 * C14801) *
                C15411 +
            (C19418 + C19417) * C15407 + (C19416 + C19415) * C15410 +
            C19413 * C15406 + C19414 * C15409) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
              C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                 C118 +
             (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
              C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 +
              C10843 * C1626 + C10847 * C938 + C10842 * C947 + C10846 * C499 +
              C10841 * C516) *
                 C50862 +
             (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 +
              C10843 * C1622 + C10847 * C932 + C10842 * C937 + C10846 * C486 +
              C10841 * C500) *
                 C118) *
                C50675 * C50801) *
               C1074 +
           (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
              C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
              C10844 * C9888) *
                 C118 +
             (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
              C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
              C10844 * C9890) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 +
              C10843 * C1165 + C10847 * C313 + C10842 * C328 + C10846 * C310 +
              C10841 * C327) *
                 C50862 +
             (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 +
              C10843 * C1161 + C10847 * C298 + C10842 * C312 + C10846 * C297 +
              C10841 * C311) *
                 C118) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          ((((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
              C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
              C10844 * C4241) *
                 C118 +
             (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
              C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
              C10844 * C4245) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
              C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                 C50862 +
             (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
              C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                 C118) *
                C50675 * C50969) *
               C1074 +
           (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
              C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
              C10844 * C3585) *
                 C118 +
             (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
              C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
              C10844 * C3589) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C9885 + C10844 * C9889 + C10848 * C4240 +
              C10843 * C4245 + C10847 * C1619 + C10842 * C1625 + C10846 * C940 +
              C10841 * C948) *
                 C50862 +
             (C10849 * C9883 + C10844 * C9886 + C10848 * C4236 +
              C10843 * C4241 + C10847 * C1613 + C10842 * C1620 + C10846 * C933 +
              C10841 * C939) *
                 C118) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C118 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C50862) *
                 C2340 +
             ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
             C2402 * C2342) *
                C50969 -
            (C3117 * C2342 +
             ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
             ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                  C50862 +
              (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                  C118) *
                 C2340) *
                C50801) *
               C1074 +
           ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                  C118 +
              (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                  C50862) *
                 C2340 +
             ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
             ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                C50801 -
            (C2954 * C2342 +
             ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
             ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C50862 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C118) *
                 C2340) *
                C50969) *
               C50773) *
              C50960 +
          (((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
             ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
             ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                C50801 -
            (C2403 * C2342 +
             ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
             ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                C50969) *
               C1074 +
           ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
             ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
             ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                C50969 -
            (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                  C50862 +
              (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                  C118) *
                 C2342 +
             ((C3335 + C3334) * C50862 + (C3333 + C3332) * C118) * C2341 +
             ((C3331 + C3330) * C50862 + (C3329 + C3328) * C118) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C15409 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C15406 +
             (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
             C18491 * C15411 + C18492 * C15408) *
                C50675 * C50969 -
            ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
             (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
             (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
                C50675 * C50801) *
               C1074 +
           (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
             (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
             (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
                C50675 * C50801 -
            (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
             (C19004 + C19003) * C15410 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C15406 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C15409) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          ((((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
             (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
             (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
                C50675 * C50801 -
            (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
             (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
             (C2379 + C2378) * C15409) *
                C50675 * C50969) *
               C1074 +
           (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
             (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
             (C19011 + C19012) * C15411 + (C19013 + C19014) * C15408) *
                C50675 * C50969 -
            ((C2344 * C10283 + C50848 * C10287 + C2343 * C4642 +
              C50978 * C4647) *
                 C15408 +
             (C2344 * C10281 + C50848 * C10284 + C2343 * C4638 +
              C50978 * C4643) *
                 C15411 +
             (C19014 + C19013) * C15407 + (C19012 + C19011) * C15410 +
             (C3331 + C3330) * C15406 + (C3329 + C3328) * C15409) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C50737 * C1145 -
          (C2954 * C2342 +
           ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
           ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C50862 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C118) *
               C2340) *
              C50737 * C1146 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C118 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C50862) *
               C2340 +
           ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
           ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
              C50737 * C1147 -
          (((C2344 * C3582 + C50848 * C3588 + C2343 * C1156 + C50978 * C1163) *
                C50862 +
            (C2344 * C3579 + C50848 * C3583 + C2343 * C1151 + C50978 * C1157) *
                C118) *
               C2342 +
           ((C2344 * C3584 + C50848 * C3589 + C2343 * C1158 + C50978 * C1164) *
                C50862 +
            (C2344 * C3580 + C50848 * C3585 + C2343 * C1152 + C50978 * C1159) *
                C118) *
               C2341 +
           ((C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
                C50862 +
            (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
                C118) *
               C2340) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C1074 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C50773) *
              C1076 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C50773 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C1074) *
              C1077 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50737 * C1074 -
           (((C2344 * C322 + C50848 * C333 + C2343 * C321 + C50978 * C332) *
                 C50862 +
             (C2344 * C303 + C50848 * C323 + C2343 * C302 + C50978 * C320) *
                 C118) *
                C2342 +
            ((C2953 + C2952) * C50862 + (C2951 + C2950) * C118) * C2341 +
            C2954 * C2340) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C50773 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3582 + C10844 * C3588 + C10848 * C1156 + C10843 * C1163 +
             C10847 * C317 + C10842 * C330 + C10846 * C306 + C10841 * C325) *
                C50862 +
            (C10849 * C3579 + C10844 * C3583 + C10848 * C1151 + C10843 * C1157 +
             C10847 * C300 + C10842 * C316 + C10846 * C295 + C10841 * C307) *
                C118) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C1145 -
          ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
            C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
               C50862 +
           (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
            C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
               C118) *
              C50675 * C50737 * C1146 +
          ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
            C10848 * C3581 + C10843 * C3587 + C10849 * C9236 + C10844 * C9240) *
               C118 +
           (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
            C10848 * C3586 + C10843 * C3590 + C10849 * C9239 + C10844 * C9242) *
               C50862) *
              C50675 * C50737 * C1147 -
          ((C10849 * C11537 + C10844 * C11539 + C10848 * C9239 +
            C10843 * C9242 + C10847 * C3586 + C10842 * C3590 + C10846 * C1160 +
            C10841 * C1165) *
               C50862 +
           (C10849 * C11536 + C10844 * C11538 + C10848 * C9236 +
            C10843 * C9240 + C10847 * C3581 + C10842 * C3587 + C10846 * C1153 +
            C10841 * C1161) *
               C118) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C50737 * C1074 -
           ((C19010 + C19009) * C15408 + (C19008 + C19007) * C15411 +
            (C19006 + C19005) * C15407 + (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
            (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
            (C19011 + C19012) * C15411 + (C19013 + C19014) * C15408) *
               C50675 * C50737 * C50773 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C50737 * C1074) *
              C1077 +
          ((C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
            (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
            (C2790 + C2791) * C15408) *
               C50675 * C50737 * C1074 -
           ((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                C15408 +
            (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                C15411 +
            (C3335 + C3334) * C15407 + (C3333 + C3332) * C15410 +
            C2938 * C15406 + C2939 * C15409) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
               C15409 +
           (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
               C15406 +
           (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
           C18491 * C15411 + C18492 * C15408) *
              C50675 * C50737 * C1145 -
          ((C19010 + C19009) * C15408 + (C19008 + C19007) * C15411 +
           (C19006 + C19005) * C15407 + (C19004 + C19003) * C15410 +
           (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
               C15406 +
           (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
               C15409) *
              C50675 * C50737 * C1146 +
          ((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
               C15409 +
           (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
               C15406 +
           (C2343 * C1614 + C50978 * C1622 + C2344 * C4237 + C50848 * C4243) *
               C15410 +
           (C2343 * C1621 + C50978 * C1626 + C2344 * C4242 + C50848 * C4246) *
               C15407 +
           (C2343 * C3739 + C50978 * C3745 + C2344 * C9390 + C50848 * C9394) *
               C15411 +
           (C2343 * C3744 + C50978 * C3748 + C2344 * C9393 + C50848 * C9396) *
               C15408) *
              C50675 * C50737 * C1147 -
          ((C2344 * C11639 + C50848 * C11641 + C2343 * C9393 + C50978 * C9396) *
               C15408 +
           (C2344 * C11638 + C50848 * C11640 + C2343 * C9390 + C50978 * C9394) *
               C15411 +
           (C2344 * C9887 + C50848 * C9890 + C2343 * C4242 + C50978 * C4246) *
               C15407 +
           (C2344 * C9884 + C50848 * C9888 + C2343 * C4237 + C50978 * C4243) *
               C15410 +
           (C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
               C15406 +
           (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
               C15409) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
              C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                 C118 +
             (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
              C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                 C50862) *
                C50675 * C1725 -
            ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 +
              C10843 * C1626 + C10847 * C938 + C10842 * C947 + C10846 * C499 +
              C10841 * C516) *
                 C50862 +
             (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 +
              C10843 * C1622 + C10847 * C932 + C10842 * C937 + C10846 * C486 +
              C10841 * C500) *
                 C118) *
                C50675 * C50801) *
               C50968 +
           (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
              C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
              C10844 * C9888) *
                 C118 +
             (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
              C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
              C10844 * C9890) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 +
              C10843 * C1165 + C10847 * C313 + C10842 * C328 + C10846 * C310 +
              C10841 * C327) *
                 C50862 +
             (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 +
              C10843 * C1161 + C10847 * C298 + C10842 * C312 + C10846 * C297 +
              C10841 * C311) *
                 C118) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          ((((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
              C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
              C10844 * C4241) *
                 C118 +
             (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
              C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
              C10844 * C4245) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
              C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                 C50862 +
             (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
              C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                 C118) *
                C50675 * C1725) *
               C50968 +
           (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
              C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
              C10844 * C3585) *
                 C118 +
             (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
              C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
              C10844 * C3589) *
                 C50862) *
                C50675 * C1725 -
            ((C10849 * C9885 + C10844 * C9889 + C10848 * C4240 +
              C10843 * C4245 + C10847 * C1619 + C10842 * C1625 + C10846 * C940 +
              C10841 * C948) *
                 C50862 +
             (C10849 * C9883 + C10844 * C9886 + C10848 * C4236 +
              C10843 * C4241 + C10847 * C1613 + C10842 * C1620 + C10846 * C933 +
              C10841 * C939) *
                 C118) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C118 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C50862) *
                 C2340 +
             ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
             C2402 * C2342) *
                C1725 -
            (C3117 * C2342 +
             ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
             ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                  C50862 +
              (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                  C118) *
                 C2340) *
                C50801) *
               C50968 +
           ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                  C118 +
              (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                  C50862) *
                 C2340 +
             ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
             ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                C50801 -
            (C2954 * C2342 +
             ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
             ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C50862 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C118) *
                 C2340) *
                C1725) *
               C50773) *
              C50960 +
          (((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
             ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
             ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                C50801 -
            (C2403 * C2342 +
             ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
             ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                C1725) *
               C50968 +
           ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
             ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
             ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                C1725 -
            (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                  C50862 +
              (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                  C118) *
                 C2342 +
             ((C3335 + C3334) * C50862 + (C3333 + C3332) * C118) * C2341 +
             ((C3331 + C3330) * C50862 + (C3329 + C3328) * C118) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C15409 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C15406 +
             (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
             C18491 * C15411 + C18492 * C15408) *
                C50675 * C1725 -
            (C20323 * C15408 + C20324 * C15411 + (C18482 + C18481) * C15407 +
             (C18480 + C18479) * C15410 + (C18478 + C18477) * C15406 +
             (C18476 + C18475) * C15409) *
                C50675 * C50801) *
               C50968 +
           (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
             (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
             (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
                C50675 * C50801 -
            (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
             (C19004 + C19003) * C15410 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C15406 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C15409) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          ((((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
             (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
             (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
                C50675 * C50801 -
            (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
             (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
             (C2379 + C2378) * C15409) *
                C50675 * C1725) *
               C50968 +
           (((C2589 + C2588) * C15409 + (C2587 + C2586) * C15406 +
             (C3328 + C3329) * C15410 + (C3330 + C3331) * C15407 +
             (C19011 + C19012) * C15411 + (C19013 + C19014) * C15408) *
                C50675 * C1725 -
            ((C2344 * C10283 + C50848 * C10287 + C2343 * C4642 +
              C50978 * C4647) *
                 C15408 +
             (C2344 * C10281 + C50848 * C10284 + C2343 * C4638 +
              C50978 * C4643) *
                 C15411 +
             (C19014 + C19013) * C15407 + (C19012 + C19011) * C15410 +
             (C3331 + C3330) * C15406 + (C3329 + C3328) * C15409) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C51014 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C51015 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C2141) *
              C50968 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C51015 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C51014 -
           ((C10849 * C11639 + C10844 * C11641 + C10848 * C9393 +
             C10843 * C9396 + C10847 * C3744 + C10842 * C3748 + C10846 * C1274 +
             C10841 * C1279) *
                C50862 +
            (C10849 * C11638 + C10844 * C11640 + C10848 * C9390 +
             C10843 * C9394 + C10847 * C3739 + C10842 * C3745 + C10846 * C1267 +
             C10841 * C1275) *
                C118) *
               C50675 * C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C51014 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C51015 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C2141) *
              C50968 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C51015 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C51014 -
           (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                 C50862 +
             (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                 C118) *
                C2342 +
            ((C2344 * C3742 + C50848 * C3747 + C2343 * C1272 + C50978 * C1278) *
                 C50862 +
             (C2344 * C3738 + C50848 * C3743 + C2343 * C1266 + C50978 * C1273) *
                 C118) *
                C2341 +
            ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                 C50862 +
             (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                 C118) *
                C2340) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C51014 -
           (C20323 * C15408 + C20324 * C15411 + (C18482 + C18481) * C15407 +
            (C18480 + C18479) * C15410 + (C18478 + C18477) * C15406 +
            (C18476 + C18475) * C15409) *
               C50675 * C51015 +
           (C18491 * C15409 + C18492 * C15406 + (C18486 + C18485) * C15410 +
            (C18484 + C18483) * C15407 + (C20333 + C20334) * C15411 +
            (C20335 + C20336) * C15408) *
               C50675 * C2141) *
              C50968 +
          (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
            (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
            (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
               C50675 * C51015 -
           (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
            (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C51014 -
           ((C2344 * C14798 + C50848 * C14802 + C2343 * C14799 +
             C50978 * C14803) *
                C15408 +
            (C2344 * C14796 + C50848 * C14800 + C2343 * C14797 +
             C50978 * C14801) *
                C15411 +
            (C19418 + C19417) * C15407 + (C19416 + C19415) * C15410 +
            C19413 * C15406 + C19414 * C15409) *
               C50675 * C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                     C118 +
                 (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                     C50862) *
                    C2340 +
                ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
                C2402 * C2342) *
                   C1725 -
               (C3117 * C2342 +
                ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
                ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                     C50862 +
                 (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                     C118) *
                    C2340) *
                   C50801) *
                  C50721 * C1076 +
              ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
                ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
                ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                   C50801 -
               (C2403 * C2342 +
                ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
                ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                   C1725) *
                  C50721 * C1077 +
              ((C2402 * C2340 +
                ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
                ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
                   C1725 -
               (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                     C50862 +
                 (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                     C118) *
                    C2342 +
                ((C3116 + C3115) * C50862 + (C3114 + C3113) * C118) * C2341 +
                C3117 * C2340) *
                   C50801) *
                  C50721 * C1078) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                     C118 +
                 (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                     C50862) *
                    C2340 +
                ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
                C2402 * C2342) *
                   C1725 -
               (C3117 * C2342 +
                ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
                ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                     C50862 +
                 (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                     C118) *
                    C2340) *
                   C50801) *
                  C289 +
              ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 +
                  C50848 * C1622) *
                     C118 +
                 (C2343 * C938 + C50978 * C947 + C2344 * C1621 +
                  C50848 * C1626) *
                     C50862) *
                    C2340 +
                ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
                ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                   C50801 -
               (C2954 * C2342 +
                ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
                ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                     C50862 +
                 (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                     C118) *
                    C2340) *
                   C1725) *
                  C290 +
              ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 +
                  C50848 * C1161) *
                     C118 +
                 (C2343 * C313 + C50978 * C328 + C2344 * C1160 +
                  C50848 * C1165) *
                     C50862) *
                    C2340 +
                ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
                ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
                   C1725 -
               (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 +
                  C50978 * C1624) *
                     C50862 +
                 (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 +
                  C50978 * C1618) *
                     C118) *
                    C2342 +
                ((C2344 * C4240 + C50848 * C4245 + C2343 * C1619 +
                  C50978 * C1625) *
                     C50862 +
                 (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 +
                  C50978 * C1620) *
                     C118) *
                    C2341 +
                ((C2344 * C4242 + C50848 * C4246 + C2343 * C1621 +
                  C50978 * C1626) *
                     C50862 +
                 (C2344 * C4237 + C50848 * C4243 + C2343 * C1614 +
                  C50978 * C1622) *
                     C118) *
                    C2340) *
                   C50801) *
                  C291) *
             C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C1891 -
          (C3117 * C2342 +
           ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
           ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                C50862 +
            (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                C118) *
               C2340) *
              C1892 +
          (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                C118 +
            (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                C50862) *
               C2340 +
           ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
           ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
              C1893 -
          (((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                C50862 +
            (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                C118) *
               C2342 +
           ((C2344 * C4642 + C50848 * C4647 + C2343 * C1903 + C50978 * C1909) *
                C50862 +
            (C2344 * C4638 + C50848 * C4643 + C2343 * C1897 + C50978 * C1904) *
                C118) *
               C2341 +
           ((C2344 * C4644 + C50848 * C4648 + C2343 * C1905 + C50978 * C1910) *
                C50862 +
            (C2344 * C4639 + C50848 * C4645 + C2343 * C1898 + C50978 * C1906) *
                C118) *
               C2340) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4238 + C10844 * C4244 + C10848 * C1617 + C10843 * C1624 +
             C10847 * C942 + C10842 * C949 + C10846 * C495 + C10841 * C514) *
                C50862 +
            (C10849 * C4235 + C10844 * C4239 + C10848 * C1612 + C10843 * C1618 +
             C10847 * C934 + C10842 * C941 + C10846 * C484 + C10841 * C496) *
                C118) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C289 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C1725) *
              C290 +
          (((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C11969 + C10844 * C11971 + C10848 * C9887 +
             C10843 * C9890 + C10847 * C4242 + C10842 * C4246 + C10846 * C1621 +
             C10841 * C1626) *
                C50862 +
            (C10849 * C11968 + C10844 * C11970 + C10848 * C9884 +
             C10843 * C9888 + C10847 * C4237 + C10842 * C4243 + C10846 * C1614 +
             C10841 * C1622) *
                C118) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C1891 -
          ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
            C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
               C50862 +
           (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
            C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
               C118) *
              C50675 * C1892 +
          ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
            C10848 * C3739 + C10843 * C3745 + C10849 * C9390 + C10844 * C9394) *
               C118 +
           (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
            C10848 * C3744 + C10843 * C3748 + C10849 * C9393 + C10844 * C9396) *
               C50862) *
              C50675 * C1893 -
          ((C10849 * C12235 + C10844 * C12237 + C10848 * C10285 +
            C10843 * C10288 + C10847 * C4644 + C10842 * C4648 + C10846 * C1905 +
            C10841 * C1910) *
               C50862 +
           (C10849 * C12234 + C10844 * C12236 + C10848 * C10282 +
            C10843 * C10286 + C10847 * C4639 + C10842 * C4645 + C10846 * C1898 +
            C10841 * C1906) *
               C118) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C1725 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
            (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
            (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
               C50675 * C50801 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C1725) *
              C50721 * C1077 +
          ((C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
            (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
            (C2790 + C2791) * C15408) *
               C50675 * C1725 -
           ((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                C15408 +
            (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                C15411 +
            (C2791 + C2790) * C15407 + (C2789 + C2788) * C15410 +
            C3101 * C15406 + C3102 * C15409) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C1725 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C50801) *
              C289 +
          (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
            (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
            (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
               C50675 * C50801 -
           (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
            (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C1725) *
              C290 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C15409 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C15406 +
            (C19921 + C19922) * C15410 + (C19923 + C19924) * C15407 +
            (C19925 + C19926) * C15411 + (C19927 + C19928) * C15408) *
               C50675 * C1725 -
           ((C2344 * C12235 + C50848 * C12237 + C2343 * C10285 +
             C50978 * C10288) *
                C15408 +
            (C2344 * C12234 + C50848 * C12236 + C2343 * C10282 +
             C50978 * C10286) *
                C15411 +
            (C19928 + C19927) * C15407 + (C19926 + C19925) * C15410 +
            (C19924 + C19923) * C15406 + (C19922 + C19921) * C15409) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
               C15409 +
           (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
               C15406 +
           (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
           C18491 * C15411 + C18492 * C15408) *
              C50675 * C1891 -
          (C20323 * C15408 + C20324 * C15411 + (C18482 + C18481) * C15407 +
           (C18480 + C18479) * C15410 + (C18478 + C18477) * C15406 +
           (C18476 + C18475) * C15409) *
              C50675 * C1892 +
          (C18491 * C15409 + C18492 * C15406 + (C18486 + C18485) * C15410 +
           (C18484 + C18483) * C15407 + (C20333 + C20334) * C15411 +
           (C20335 + C20336) * C15408) *
              C50675 * C1893 -
          ((C2344 * C20319 + C50848 * C20321 + C2343 * C17554 +
            C50978 * C17557) *
               C15408 +
           (C2344 * C20318 + C50848 * C20320 + C2343 * C17551 +
            C50978 * C17555) *
               C15411 +
           (C20336 + C20335) * C15407 + (C20334 + C20333) * C15410 +
           C20323 * C15406 + C20324 * C15409) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C51014 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C51015 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C2141) *
              C50721 * C50960 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C51015 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C51014 -
           ((C10849 * C9391 + C10844 * C9395 + C10848 * C3742 + C10843 * C3747 +
             C10847 * C1272 + C10842 * C1278 + C10846 * C504 + C10841 * C518) *
                C50862 +
            (C10849 * C9389 + C10844 * C9392 + C10848 * C3738 + C10843 * C3743 +
             C10847 * C1266 + C10842 * C1273 + C10846 * C488 + C10841 * C503) *
                C118) *
               C50675 * C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C51014 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C51015 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C2141) *
              C50721 * C50960 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C51015 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C51014 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50862 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C118) *
                C2342 +
            ((C2791 + C2790) * C50862 + (C2789 + C2788) * C118) * C2341 +
            ((C2787 + C2786) * C50862 + (C2785 + C2784) * C118) * C2340) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C51014 -
           (C20323 * C15408 + C20324 * C15411 + (C18482 + C18481) * C15407 +
            (C18480 + C18479) * C15410 + (C18478 + C18477) * C15406 +
            (C18476 + C18475) * C15409) *
               C50675 * C51015 +
           (C18491 * C15409 + C18492 * C15406 + (C18486 + C18485) * C15410 +
            (C18484 + C18483) * C15407 + (C20333 + C20334) * C15411 +
            (C20335 + C20336) * C15408) *
               C50675 * C2141) *
              C50721 * C50960 +
          (((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
            (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
            (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
               C50675 * C51015 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C51014 -
           ((C2344 * C16659 + C50848 * C16661 + C2343 * C7428 +
             C50978 * C7433) *
                C15408 +
            (C2344 * C16658 + C50848 * C16660 + C2343 * C7424 +
             C50978 * C7429) *
                C15411 +
            (C18490 + C18489) * C15407 + (C18488 + C18487) * C15410 +
            C18473 * C15406 + C18474 * C15409) *
               C50675 * C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C1725 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C289 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C50801 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C1725) *
              C290 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C1725 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50862 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C118) *
                C2342 +
            ((C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                 C50862 +
             (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                 C118) *
                C2341 +
            ((C2344 * C4242 + C50848 * C4246 + C2343 * C1621 + C50978 * C1626) *
                 C50862 +
             (C2344 * C4237 + C50848 * C4243 + C2343 * C1614 + C50978 * C1622) *
                 C118) *
                C2340) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C1725 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C50721 * C1076 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C50801 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C1725) *
              C50721 * C1077 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C1725 -
           (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                 C50862 +
             (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                 C118) *
                C2342 +
            ((C3116 + C3115) * C50862 + (C3114 + C3113) * C118) * C2341 +
            C3117 * C2340) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4238 + C10844 * C4244 + C10848 * C1617 + C10843 * C1624 +
             C10847 * C942 + C10842 * C949 + C10846 * C495 + C10841 * C514) *
                C50862 +
            (C10849 * C4235 + C10844 * C4239 + C10848 * C1612 + C10843 * C1618 +
             C10847 * C934 + C10842 * C941 + C10846 * C484 + C10841 * C496) *
                C118) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C289 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C1725) *
              C290 +
          (((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C11969 + C10844 * C11971 + C10848 * C9887 +
             C10843 * C9890 + C10847 * C4242 + C10842 * C4246 + C10846 * C1621 +
             C10841 * C1626) *
                C50862 +
            (C10849 * C11968 + C10844 * C11970 + C10848 * C9884 +
             C10843 * C9888 + C10847 * C4237 + C10842 * C4243 + C10846 * C1614 +
             C10841 * C1622) *
                C118) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C1725 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C2783 + C2782) * C15409 + (C2781 + C2780) * C15406 +
            (C2784 + C2785) * C15410 + (C2786 + C2787) * C15407 +
            (C18487 + C18488) * C15411 + (C18489 + C18490) * C15408) *
               C50675 * C50801 -
           (C18473 * C15408 + C18474 * C15411 + (C2780 + C2781) * C15407 +
            (C2782 + C2783) * C15410 + (C2381 + C2380) * C15406 +
            (C2379 + C2378) * C15409) *
               C50675 * C1725) *
              C50721 * C1077 +
          ((C2394 * C15409 + C2395 * C15406 + (C2779 + C2778) * C15410 +
            (C2777 + C2776) * C15407 + (C2788 + C2789) * C15411 +
            (C2790 + C2791) * C15408) *
               C50675 * C1725 -
           ((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                C15408 +
            (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                C15411 +
            (C2791 + C2790) * C15407 + (C2789 + C2788) * C15410 +
            C3101 * C15406 + C3102 * C15409) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C15409 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C15406 +
            (C18475 + C18476) * C15410 + (C18477 + C18478) * C15407 +
            C18491 * C15411 + C18492 * C15408) *
               C50675 * C1725 -
           ((C18483 + C18484) * C15408 + (C18485 + C18486) * C15411 +
            (C18482 + C18481) * C15407 + (C18480 + C18479) * C15410 +
            (C18478 + C18477) * C15406 + (C18476 + C18475) * C15409) *
               C50675 * C50801) *
              C289 +
          (((C19003 + C19004) * C15409 + (C19005 + C19006) * C15406 +
            (C19007 + C19008) * C15410 + (C19009 + C19010) * C15407 +
            (C19415 + C19416) * C15411 + (C19417 + C19418) * C15408) *
               C50675 * C50801 -
           (C19413 * C15408 + C19414 * C15411 + (C19006 + C19005) * C15407 +
            (C19004 + C19003) * C15410 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C15406 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C15409) *
               C50675 * C1725) *
              C290 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C15409 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C15406 +
            (C19921 + C19922) * C15410 + (C19923 + C19924) * C15407 +
            (C19925 + C19926) * C15411 + (C19927 + C19928) * C15408) *
               C50675 * C1725 -
           ((C2344 * C12235 + C50848 * C12237 + C2343 * C10285 +
             C50978 * C10288) *
                C15408 +
            (C2344 * C12234 + C50848 * C12236 + C2343 * C10282 +
             C50978 * C10286) *
                C15411 +
            (C19928 + C19927) * C15407 + (C19926 + C19925) * C15410 +
            (C19924 + C19923) * C15406 + (C19922 + C19921) * C15409) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C50968 -
           ((C8032 * C4242 + C8027 * C4246 + C8031 * C1621 + C8026 * C1626 +
             C8030 * C938 + C8025 * C947) *
                C50874 +
            (C8032 * C4237 + C8027 * C4243 + C8031 * C1614 + C8026 * C1622 +
             C8030 * C932 + C8025 * C937) *
                C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C50773) *
              C51010 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C50773 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C50968) *
              C51011 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50737 * C50968 -
           ((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
             C8030 * C942 + C8025 * C949) *
                C50874 +
            (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
             C8030 * C934 + C8025 * C941) *
                C5236 +
            (C8615 + C8614 + C8613) * C50980 +
            (C8612 + C8611 + C8610) * C5235) *
               C50675 * C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C50968 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            ((C117 * C938 + C50832 * C947) * C50874 +
             (C117 * C932 + C50832 * C937) * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C50773) *
              C51010 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C50773 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C50968) *
              C51011 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50737 * C50968 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C5236 + C686 * C50980 +
             C685 * C5235) *
                C2342 +
            (C5770 + C5769 + C5768 + C5767) * C2341 + C5772 * C2340) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50737 * C50968 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50737 * C50773) *
              C51010 +
          ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
            C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
            C16266 * C20891) *
               C50675 * C50737 * C50773 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50737 * C50968) *
              C51011 +
          ((C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
            C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
               C50675 * C50737 * C50968 -
           ((C117 * C4640 + C50832 * C4646) * C20891 +
            (C117 * C4637 + C50832 * C4641) * C20895 + C6141 * C20890 +
            C6140 * C20894 + C968 * C20889 + C967 * C20893 + C361 * C20888 +
            C362 * C20892) *
               C50675 * C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C5235 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50980 +
             (C12979 + C12980 + C12981) * C5236 +
             (C12982 + C12983 + C12984) * C50874) *
                C50675 * C50969 -
            ((C12985 + C12986 + C12987) * C50874 +
             (C12988 + C12989 + C12990) * C5236 +
             (C12984 + C12983 + C12982) * C50980 +
             (C12981 + C12980 + C12979) * C5235) *
                C50675 * C50801) *
               C50968 +
           (((C13489 + C13490 + C13491) * C5235 +
             (C13492 + C13493 + C13494) * C50980 +
             (C8030 * C1267 + C8025 * C1275 + C8031 * C3739 + C8026 * C3745 +
              C8032 * C9390 + C8027 * C9394) *
                 C5236 +
             (C8030 * C1274 + C8025 * C1279 + C8031 * C3744 + C8026 * C3748 +
              C8032 * C9393 + C8027 * C9396) *
                 C50874) *
                C50675 * C50801 -
            ((C13494 + C13493 + C13492) * C50874 +
             (C13491 + C13490 + C13489) * C5236 +
             (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50980 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C5235) *
                C50675 * C50969) *
               C50773) *
              C292 +
          ((((C8445 + C8444 + C8443) * C5235 +
             (C8442 + C8441 + C8440) * C50980 +
             (C8446 + C8447 + C8448) * C5236 +
             (C8449 + C8450 + C8451) * C50874) *
                C50675 * C50801 -
            ((C8440 + C8441 + C8442) * C50874 +
             (C8443 + C8444 + C8445) * C5236 +
             (C8075 + C8074 + C8073) * C50980 +
             (C8072 + C8071 + C8070) * C5235) *
                C50675 * C50969) *
               C50968 +
           (((C8263 + C8262 + C8261) * C5235 +
             (C8260 + C8259 + C8258) * C50980 +
             (C8986 + C8987 + C8988) * C5236 +
             (C8989 + C8990 + C8991) * C50874) *
                C50675 * C50969 -
            ((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50874 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C5236 +
             (C8991 + C8990 + C8989) * C50980 +
             (C8988 + C8987 + C8986) * C5235) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C5235 +
              (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
              C5609 * C50874) *
                 C2340 +
             (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                C50969 -
            (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
             (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                 C2340) *
                C50801) *
               C50968 +
           (((C6136 * C5235 + C6137 * C50980 +
              (C117 * C1267 + C50832 * C1275) * C5236 +
              (C117 * C1274 + C50832 * C1279) * C50874) *
                 C2340 +
             (C6124 + C6125 + C6142 + C6143) * C2341 +
             (C6130 + C6131 + C6144 + C6145) * C2342) *
                C50801 -
            (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
             (C6137 * C50874 + C6136 * C5236 +
              (C117 * C310 + C50832 * C327) * C50980 +
              (C117 * C297 + C50832 * C311) * C5235) *
                 C2340) *
                C50969) *
               C50773) *
              C292 +
          ((((C5591 + C5590 + C5589 + C5588) * C2340 +
             (C5587 + C5586 + C5585 + C5584) * C2341 +
             (C5920 + C5921 + C5922 + C5923) * C2342) *
                C50801 -
            (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
             (C5241 + C5240 + C5239 + C5238) * C2340) *
                C50969) *
               C50968 +
           (((C5413 + C5412 + C5411 + C5410) * C2340 +
             (C5409 + C5408 + C5407 + C5406) * C2341 +
             (C5767 + C5768 + C5769 + C5770) * C2342) *
                C50969 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C5236 + C970 * C50980 +
              C969 * C5235) *
                 C2342 +
             (C6145 + C6144 + C6131 + C6130) * C2341 +
             (C6143 + C6142 + C6125 + C6124) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C20892 +
             (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
             C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
             C7441 * C20891) *
                C50675 * C50969 -
            (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
             C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
             C5608 * C20892) *
                C50675 * C50801) *
               C50968 +
           ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
             C16667 * C20894 + C16668 * C20890 +
             (C117 * C14797 + C50832 * C14801) * C20895 +
             (C117 * C14799 + C50832 * C14803) * C20891) *
                C50675 * C50801 -
            (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
             C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
             (C117 * C310 + C50832 * C327) * C20888 +
             (C117 * C297 + C50832 * C311) * C20892) *
                C50675 * C50969) *
               C50773) *
              C292 +
          (((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
             C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
             C15756 * C20891) *
                C50675 * C50801 -
            (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
             C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
                C50675 * C50969) *
               C50968 +
           ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
             C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
             C16266 * C20891) *
                C50675 * C50969 -
            ((C117 * C16659 + C50832 * C16661) * C20891 +
             (C117 * C16658 + C50832 * C16660) * C20895 + C16266 * C20890 +
             C16265 * C20894 + C6139 * C20889 + C6138 * C20893 + C966 * C20888 +
             C965 * C20892) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50832 * C126) * C5235 +
                (C117 * C127 + C50832 * C140) * C50980 +
                (C117 * C486 + C50832 * C500) * C5236 +
                (C117 * C499 + C50832 * C516) * C50874) *
                   C2340 +
               (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                  C50737 * C50721 * C113 -
              (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
               (C5241 + C5240 + C5239 + C5238) * C2340) *
                  C50737 * C50721 * C114 +
              (C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
               (C5250 + C5251 + C5252 + C5253) * C2342) *
                  C50737 * C50721 * C115 -
              (((C117 * C789 + C50832 * C791) * C50874 +
                (C117 * C788 + C50832 * C790) * C5236 + C177 * C50980 +
                C176 * C5235) *
                   C2342 +
               (C5253 + C5252 + C5251 + C5250) * C2341 + C5259 * C2340) *
                  C50737 * C50721 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C5235 +
                 (C117 * C127 + C50832 * C140) * C50980 +
                 (C117 * C486 + C50832 * C500) * C5236 +
                 (C117 * C499 + C50832 * C516) * C50874) *
                    C2340 +
                (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                   C50737 * C289 -
               ((C5406 + C5407 + C5408 + C5409) * C2342 +
                (C5410 + C5411 + C5412 + C5413) * C2341 +
                ((C117 * C938 + C50832 * C947) * C50874 +
                 (C117 * C932 + C50832 * C937) * C5236 +
                 (C117 * C310 + C50832 * C327) * C50980 +
                 (C117 * C297 + C50832 * C311) * C5235) *
                    C2340) *
                   C50737 * C290 +
               (((C117 * C298 + C50832 * C312) * C5235 +
                 (C117 * C313 + C50832 * C328) * C50980 +
                 (C117 * C1614 + C50832 * C1622) * C5236 +
                 (C117 * C1621 + C50832 * C1626) * C50874) *
                    C2340 +
                (C5414 + C5415 + C5430 + C5431) * C2341 +
                (C5420 + C5421 + C5432 + C5433) * C2342) *
                   C50737 * C291) *
                  C292 +
              (((C5413 + C5412 + C5411 + C5410) * C2340 +
                (C5409 + C5408 + C5407 + C5406) * C2341 +
                (C360 * C5235 + C359 * C50980 + C969 * C5236 + C970 * C50874) *
                    C2342) *
                   C50737 * C290 -
               (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
                (C5241 + C5240 + C5239 + C5238) * C2340) *
                   C50737 * C289 -
               (((C117 * C1615 + C50832 * C1623) * C50874 +
                 (C117 * C1611 + C50832 * C1616) * C5236 + C370 * C50980 +
                 C369 * C5235) *
                    C2342 +
                (C5433 + C5432 + C5421 + C5420) * C2341 +
                (C5431 + C5430 + C5415 + C5414) * C2340) *
                   C50737 * C291) *
                  C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C480 -
           ((C5584 + C5585 + C5586 + C5587) * C2342 +
            (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C481 +
           ((C5611 * C5235 + C5610 * C50980 +
             (C117 * C1898 + C50832 * C1906) * C5236 +
             (C117 * C1905 + C50832 * C1910) * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C482) *
              C50721 * C292 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C549 * C5235 + C548 * C50980 + C558 * C5236 + C559 * C50874) *
                C2342) *
               C481 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C480 -
           (((C117 * C1899 + C50832 * C1907) * C50874 +
             (C117 * C1895 + C50832 * C1900) * C5236 + C559 * C50980 +
             C558 * C5235) *
                C2342 +
            (C5619 + C5618 + C5603 + C5602) * C2341 +
            (C5617 + C5616 + C5597 + C5596) * C2340) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
            C8032 * C1614 + C8027 * C1622) *
               C5236 +
           (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
            C8032 * C1621 + C8027 * C1626) *
               C50874) *
              C50675 * C50737 * C50721 * C113 -
          ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
           (C8075 + C8074 + C8073) * C50980 + (C8072 + C8071 + C8070) * C5235) *
              C50675 * C50737 * C50721 * C114 +
          ((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
           (C8774 + C8775 + C8776) * C5236 + (C8777 + C8778 + C8779) * C50874) *
              C50675 * C50737 * C50721 * C115 -
          ((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
            C8030 * C493 + C8025 * C513) *
               C50874 +
           (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
            C8030 * C483 + C8025 * C494) *
               C5236 +
           (C8087 + C8086 + C8085) * C50980 + (C8084 + C8083 + C8082) * C5235) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
             C8032 * C1614 + C8027 * C1622) *
                C5236 +
            (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
             C8032 * C1621 + C8027 * C1626) *
                C50874) *
               C50675 * C50737 * C289 -
           ((C8032 * C4242 + C8027 * C4246 + C8031 * C1621 + C8026 * C1626 +
             C8030 * C938 + C8025 * C947) *
                C50874 +
            (C8032 * C4237 + C8027 * C4243 + C8031 * C1614 + C8026 * C1622 +
             C8030 * C932 + C8025 * C937) *
                C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C290 +
           ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
             C8032 * C9884 + C8027 * C9888) *
                C5236 +
            (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
             C8032 * C9887 + C8027 * C9890) *
                C50874) *
               C50675 * C50737 * C291) *
              C292 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C290 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C289 -
           ((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
             C8030 * C1619 + C8025 * C1625) *
                C50874 +
            (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
             C8030 * C1613 + C8025 * C1620) *
                C5236 +
            (C8269 + C8268 + C8267) * C50980 +
            (C8266 + C8265 + C8264) * C5235) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C480 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C481 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C8030 * C1898 + C8025 * C1906 + C8031 * C4639 + C8026 * C4645 +
             C8032 * C10282 + C8027 * C10286) *
                C5236 +
            (C8030 * C1905 + C8025 * C1910 + C8031 * C4644 + C8026 * C4648 +
             C8032 * C10285 + C8027 * C10288) *
                C50874) *
               C50675 * C482) *
              C50721 * C292 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C481 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C480 -
           ((C8032 * C10283 + C8027 * C10287 + C8031 * C4642 + C8026 * C4647 +
             C8030 * C1903 + C8025 * C1909) *
                C50874 +
            (C8032 * C10281 + C8027 * C10284 + C8031 * C4638 + C8026 * C4643 +
             C8030 * C1897 + C8025 * C1904) *
                C5236 +
            (C8451 + C8450 + C8449) * C50980 +
            (C8448 + C8447 + C8446) * C5235) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C50832 * C126) * C20892 +
           (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
           C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
           C7441 * C20891) *
              C50675 * C50737 * C50721 * C113 -
          (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
           C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
              C50675 * C50737 * C50721 * C114 +
          (C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
           C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
              C50675 * C50737 * C50721 * C115 -
          ((C117 * C1899 + C50832 * C1907) * C20891 +
           (C117 * C1895 + C50832 * C1900) * C20895 + C559 * C20890 +
           C558 * C20894 + C548 * C20889 + C549 * C20893 + C173 * C20888 +
           C172 * C20892) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50737 * C289 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50737 * C290 +
           ((C117 * C298 + C50832 * C312) * C20892 +
            (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
            C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
            (C117 * C10282 + C50832 * C10286) * C20895 +
            (C117 * C10285 + C50832 * C10288) * C20891) *
               C50675 * C50737 * C291) *
              C292 +
          ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
            C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
            C16266 * C20891) *
               C50675 * C50737 * C290 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50737 * C289 -
           ((C117 * C10283 + C50832 * C10287) * C20891 +
            (C117 * C10281 + C50832 * C10284) * C20895 + C15592 * C20890 +
            C15591 * C20894 + C5427 * C20889 + C5426 * C20893 + C366 * C20888 +
            C365 * C20892) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C480 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C481 +
           (C5611 * C20892 + C5610 * C20888 + C7440 * C20893 + C7441 * C20889 +
            C17563 * C20894 + C17564 * C20890 +
            (C117 * C17551 + C50832 * C17555) * C20895 +
            (C117 * C17554 + C50832 * C17557) * C20891) *
               C50675 * C482) *
              C50721 * C292 +
          ((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
            C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
            C15756 * C20891) *
               C50675 * C481 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C480 -
           ((C117 * C17552 + C50832 * C17556) * C20891 +
            (C117 * C17550 + C50832 * C17553) * C20895 + C15756 * C20890 +
            C15755 * C20894 + C5613 * C20889 + C5612 * C20893 + C555 * C20888 +
            C554 * C20892) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50969 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C50721 * C51010 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C50801 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50969) *
              C50721 * C51011 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50969 -
           ((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
             C8030 * C506 + C8025 * C519) *
                C50874 +
            (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
             C8030 * C489 + C8025 * C505) *
                C5236 +
            (C8779 + C8778 + C8777) * C50980 +
            (C8776 + C8775 + C8774) * C5235) *
               C50675 * C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50969 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C50721 * C51010 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C50801 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50969) *
              C50721 * C51011 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50969 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C5236 + C800 * C50980 +
             C799 * C5235) *
                C2342 +
            (C5923 + C5922 + C5921 + C5920) * C2341 + C5925 * C2340) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50969 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C50801) *
              C50721 * C51010 +
          ((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
            C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
            C15756 * C20891) *
               C50675 * C50801 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50969) *
              C50721 * C51011 +
          ((C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
            C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
               C50675 * C50969 -
           ((C117 * C7426 + C50832 * C7432) * C20891 +
            (C117 * C7423 + C50832 * C7427) * C20895 + C5615 * C20890 +
            C5614 * C20894 + C557 * C20889 + C556 * C20893 + C550 * C20888 +
            C551 * C20892) *
               C50675 * C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 +
             (C117 * C486 + C50832 * C500) * C5236 +
             (C117 * C499 + C50832 * C516) * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C289 -
           ((C5406 + C5407 + C5408 + C5409) * C2342 +
            (C5410 + C5411 + C5412 + C5413) * C2341 +
            ((C117 * C938 + C50832 * C947) * C50874 +
             (C117 * C932 + C50832 * C937) * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 +
             (C117 * C1614 + C50832 * C1622) * C5236 +
             (C117 * C1621 + C50832 * C1626) * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50737 * C291) *
              C292 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C360 * C5235 + C359 * C50980 + C969 * C5236 + C970 * C50874) *
                C2342) *
               C50737 * C290 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C289 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C5236 + C370 * C50980 +
             C369 * C5235) *
                C2342 +
            (C5433 + C5432 + C5421 + C5420) * C2341 +
            (C5431 + C5430 + C5415 + C5414) * C2340) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 +
            (C117 * C486 + C50832 * C500) * C5236 +
            (C117 * C499 + C50832 * C516) * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C50737 * C50721 * C113 -
          (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
           (C5241 + C5240 + C5239 + C5238) * C2340) *
              C50737 * C50721 * C114 +
          (C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
           (C5250 + C5251 + C5252 + C5253) * C2342) *
              C50737 * C50721 * C115 -
          (((C117 * C789 + C50832 * C791) * C50874 +
            (C117 * C788 + C50832 * C790) * C5236 + C177 * C50980 +
            C176 * C5235) *
               C2342 +
           (C5253 + C5252 + C5251 + C5250) * C2341 + C5259 * C2340) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
            C8032 * C1614 + C8027 * C1622) *
               C5236 +
           (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
            C8032 * C1621 + C8027 * C1626) *
               C50874) *
              C50675 * C50737 * C50721 * C113 -
          ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
           (C8075 + C8074 + C8073) * C50980 + (C8072 + C8071 + C8070) * C5235) *
              C50675 * C50737 * C50721 * C114 +
          ((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
           (C8774 + C8775 + C8776) * C5236 + (C8777 + C8778 + C8779) * C50874) *
              C50675 * C50737 * C50721 * C115 -
          ((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
            C8030 * C493 + C8025 * C513) *
               C50874 +
           (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
            C8030 * C483 + C8025 * C494) *
               C5236 +
           (C8087 + C8086 + C8085) * C50980 + (C8084 + C8083 + C8082) * C5235) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
             C8032 * C1614 + C8027 * C1622) *
                C5236 +
            (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
             C8032 * C1621 + C8027 * C1626) *
                C50874) *
               C50675 * C50737 * C289 -
           ((C8032 * C4242 + C8027 * C4246 + C8031 * C1621 + C8026 * C1626 +
             C8030 * C938 + C8025 * C947) *
                C50874 +
            (C8032 * C4237 + C8027 * C4243 + C8031 * C1614 + C8026 * C1622 +
             C8030 * C932 + C8025 * C937) *
                C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C290 +
           ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
             C8032 * C9884 + C8027 * C9888) *
                C5236 +
            (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
             C8032 * C9887 + C8027 * C9890) *
                C50874) *
               C50675 * C50737 * C291) *
              C292 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C290 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C289 -
           ((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
             C8030 * C1619 + C8025 * C1625) *
                C50874 +
            (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
             C8030 * C1613 + C8025 * C1620) *
                C5236 +
            (C8269 + C8268 + C8267) * C50980 +
            (C8266 + C8265 + C8264) * C5235) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50832 * C126) * C20892 +
           (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
           C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
           C7441 * C20891) *
              C50675 * C50737 * C50721 * C113 -
          (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
           C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
              C50675 * C50737 * C50721 * C114 +
          (C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
           C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
              C50675 * C50737 * C50721 * C115 -
          ((C117 * C1899 + C50832 * C1907) * C20891 +
           (C117 * C1895 + C50832 * C1900) * C20895 + C559 * C20890 +
           C558 * C20894 + C548 * C20889 + C549 * C20893 + C173 * C20888 +
           C172 * C20892) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50737 * C289 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50737 * C290 +
           ((C117 * C298 + C50832 * C312) * C20892 +
            (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
            C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
            (C117 * C10282 + C50832 * C10286) * C20895 +
            (C117 * C10285 + C50832 * C10288) * C20891) *
               C50675 * C50737 * C291) *
              C292 +
          ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
            C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
            C16266 * C20891) *
               C50675 * C50737 * C290 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50737 * C289 -
           ((C117 * C10283 + C50832 * C10287) * C20891 +
            (C117 * C10281 + C50832 * C10284) * C20895 + C15592 * C20890 +
            C15591 * C20894 + C5427 * C20889 + C5426 * C20893 + C366 * C20888 +
            C365 * C20892) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C51012 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C51013 +
           ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
             C8032 * C9884 + C8027 * C9888) *
                C5236 +
            (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
             C8032 * C9887 + C8027 * C9890) *
                C50874) *
               C50675 * C50737 * C1380) *
              C50960 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C51013 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C51012 -
           ((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
             C8030 * C1619 + C8025 * C1625) *
                C50874 +
            (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
             C8030 * C1613 + C8025 * C1620) *
                C5236 +
            (C8269 + C8268 + C8267) * C50980 +
            (C8266 + C8265 + C8264) * C5235) *
               C50675 * C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C51012 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C51013 +
           (((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 +
             (C117 * C1614 + C50832 * C1622) * C5236 +
             (C117 * C1621 + C50832 * C1626) * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50737 * C1380) *
              C50960 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C51013 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C51012 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C5236 + C370 * C50980 +
             C369 * C5235) *
                C2342 +
            (C5433 + C5432 + C5421 + C5420) * C2341 +
            (C5431 + C5430 + C5415 + C5414) * C2340) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50737 * C51012 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50737 * C51013 +
           ((C117 * C298 + C50832 * C312) * C20892 +
            (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
            C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
            (C117 * C10282 + C50832 * C10286) * C20895 +
            (C117 * C10285 + C50832 * C10288) * C20891) *
               C50675 * C50737 * C1380) *
              C50960 +
          ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
            C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
            C16266 * C20891) *
               C50675 * C50737 * C51013 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50737 * C51012 -
           ((C117 * C10283 + C50832 * C10287) * C20891 +
            (C117 * C10281 + C50832 * C10284) * C20895 + C15592 * C20890 +
            C15591 * C20894 + C5427 * C20889 + C5426 * C20893 + C366 * C20888 +
            C365 * C20892) *
               C50675 * C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50969 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C51012 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C50801 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50969) *
              C51013 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C14401 + C14402 + C14403) * C5236 +
            (C14404 + C14405 + C14406) * C50874) *
               C50675 * C50969 -
           ((C8032 * C11639 + C8027 * C11641 + C8031 * C9393 + C8026 * C9396 +
             C8030 * C3744 + C8025 * C3748) *
                C50874 +
            (C8032 * C11638 + C8027 * C11640 + C8031 * C9390 + C8026 * C9394 +
             C8030 * C3739 + C8025 * C3745) *
                C5236 +
            (C14406 + C14405 + C14404) * C50980 +
            (C14403 + C14402 + C14401) * C5235) *
               C50675 * C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50969 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C51012 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C50801 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50969) *
              C51013 +
          ((((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 + C7032 * C5236 +
             C7033 * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50969 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C5236 + C5429 * C50980 +
             C5428 * C5235) *
                C2342 +
            ((C117 * C3742 + C50832 * C3747) * C50874 +
             (C117 * C3738 + C50832 * C3743) * C5236 + C5427 * C50980 +
             C5426 * C5235) *
                C2341 +
            ((C117 * C3744 + C50832 * C3748) * C50874 +
             (C117 * C3739 + C50832 * C3745) * C5236 + C7033 * C50980 +
             C7032 * C5235) *
                C2340) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50969 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C50801) *
              C51012 +
          ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
            C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
            C21686 * C20891) *
               C50675 * C50801 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50969) *
              C51013 +
          (((C117 * C298 + C50832 * C312) * C20892 +
            (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
            C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
            C22017 * C20895 + C22018 * C20891) *
               C50675 * C50969 -
           ((C117 * C14798 + C50832 * C14802) * C20891 +
            (C117 * C14796 + C50832 * C14800) * C20895 + C22018 * C20890 +
            C22017 * C20894 + C17160 * C20889 + C17159 * C20893 +
            C7033 * C20888 + C7032 * C20892) *
               C50675 * C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C5235 +
                 (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
                 C5609 * C50874) *
                    C2340 +
                (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                   C50737 * C1074 -
               (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
                (C6137 * C50874 + C6136 * C5236 +
                 (C117 * C310 + C50832 * C327) * C50980 +
                 (C117 * C297 + C50832 * C311) * C5235) *
                    C2340) *
                   C50737 * C50773) *
                  C1076 +
              (((C5413 + C5412 + C5411 + C5410) * C2340 +
                (C5409 + C5408 + C5407 + C5406) * C2341 +
                (C5767 + C5768 + C5769 + C5770) * C2342) *
                   C50737 * C50773 -
               (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
                (C5241 + C5240 + C5239 + C5238) * C2340) *
                   C50737 * C1074) *
                  C1077 +
              ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
                (C5250 + C5251 + C5252 + C5253) * C2342) *
                   C50737 * C1074 -
               (((C117 * C945 + C50832 * C951) * C50874 +
                 (C117 * C936 + C50832 * C946) * C5236 + C686 * C50980 +
                 C685 * C5235) *
                    C2342 +
                (C5770 + C5769 + C5768 + C5767) * C2341 + C5772 * C2340) *
                   C50737 * C50773) *
                  C1078) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50832 * C126) * C5235 +
                (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
                C5609 * C50874) *
                   C2340 +
               (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                  C50737 * C1145 -
              (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
               (C6137 * C50874 + C6136 * C5236 +
                (C117 * C310 + C50832 * C327) * C50980 +
                (C117 * C297 + C50832 * C311) * C5235) *
                   C2340) *
                  C50737 * C1146 +
              (((C117 * C298 + C50832 * C312) * C5235 +
                (C117 * C313 + C50832 * C328) * C50980 +
                (C117 * C1614 + C50832 * C1622) * C5236 +
                (C117 * C1621 + C50832 * C1626) * C50874) *
                   C2340 +
               (C5414 + C5415 + C5430 + C5431) * C2341 +
               (C5420 + C5421 + C5432 + C5433) * C2342) *
                  C50737 * C1147 -
              (((C117 * C4238 + C50832 * C4244) * C50874 +
                (C117 * C4235 + C50832 * C4239) * C5236 +
                (C117 * C1156 + C50832 * C1163) * C50980 +
                (C117 * C1151 + C50832 * C1157) * C5235) *
                   C2342 +
               ((C117 * C4240 + C50832 * C4245) * C50874 +
                (C117 * C4236 + C50832 * C4241) * C5236 +
                (C117 * C1158 + C50832 * C1164) * C50980 +
                (C117 * C1152 + C50832 * C1159) * C5235) *
                   C2341 +
               ((C117 * C4242 + C50832 * C4246) * C50874 +
                (C117 * C4237 + C50832 * C4243) * C5236 +
                (C117 * C1160 + C50832 * C1165) * C50980 +
                (C117 * C1153 + C50832 * C1161) * C5235) *
                   C2340) *
                  C50737 * C1148) *
             C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C480 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C481 +
           ((C5611 * C5235 + C5610 * C50980 +
             (C117 * C1898 + C50832 * C1906) * C5236 +
             (C117 * C1905 + C50832 * C1910) * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C482) *
              C1074 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C481 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C480 -
           (((C117 * C4640 + C50832 * C4646) * C50874 +
             (C117 * C4637 + C50832 * C4641) * C5236 + C6141 * C50980 +
             C6140 * C5235) *
                C2342 +
            ((C117 * C4642 + C50832 * C4647) * C50874 +
             (C117 * C4638 + C50832 * C4643) * C5236 + C6139 * C50980 +
             C6138 * C5235) *
                C2341 +
            ((C117 * C4644 + C50832 * C4648) * C50874 +
             (C117 * C4639 + C50832 * C4645) * C5236 + C6541 * C50980 +
             C6540 * C5235) *
                C2340) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C1074 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C50773 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50737 * C1074 -
           ((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
             C8030 * C942 + C8025 * C949) *
                C50874 +
            (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
             C8030 * C934 + C8025 * C941) *
                C5236 +
            (C8615 + C8614 + C8613) * C50980 +
            (C8612 + C8611 + C8610) * C5235) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C12979 + C12980 + C12981) * C5236 +
           (C12982 + C12983 + C12984) * C50874) *
              C50675 * C50737 * C1145 -
          ((C13494 + C13493 + C13492) * C50874 +
           (C13491 + C13490 + C13489) * C5236 +
           (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
            C8030 * C310 + C8025 * C327) *
               C50980 +
           (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
            C8030 * C297 + C8025 * C311) *
               C5235) *
              C50675 * C50737 * C1146 +
          ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
            C8032 * C3581 + C8027 * C3587) *
               C5235 +
           (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
            C8032 * C3586 + C8027 * C3590) *
               C50980 +
           (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
            C8032 * C9884 + C8027 * C9888) *
               C5236 +
           (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
            C8032 * C9887 + C8027 * C9890) *
               C50874) *
              C50675 * C50737 * C1147 -
          ((C8032 * C11969 + C8027 * C11971 + C8031 * C9887 + C8026 * C9890 +
            C8030 * C4242 + C8025 * C4246) *
               C50874 +
           (C8032 * C11968 + C8027 * C11970 + C8031 * C9884 + C8026 * C9888 +
            C8030 * C4237 + C8025 * C4243) *
               C5236 +
           (C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
            C8030 * C1160 + C8025 * C1165) *
               C50980 +
           (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
            C8030 * C1153 + C8025 * C1161) *
               C5235) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C480 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C481 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C8030 * C1898 + C8025 * C1906 + C8031 * C4639 + C8026 * C4645 +
             C8032 * C10282 + C8027 * C10286) *
                C5236 +
            (C8030 * C1905 + C8025 * C1910 + C8031 * C4644 + C8026 * C4648 +
             C8032 * C10285 + C8027 * C10288) *
                C50874) *
               C50675 * C482) *
              C1074 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C481 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C480 -
           ((C8032 * C12235 + C8027 * C12237 + C8031 * C10285 + C8026 * C10288 +
             C8030 * C4644 + C8025 * C4648) *
                C50874 +
            (C8032 * C12234 + C8027 * C12236 + C8031 * C10282 + C8026 * C10286 +
             C8030 * C4639 + C8025 * C4645) *
                C5236 +
            (C13902 + C13901 + C13900) * C50980 +
            (C13899 + C13898 + C13897) * C5235) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50737 * C1074 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50737 * C50773) *
              C1076 +
          ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
            C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
            C16266 * C20891) *
               C50675 * C50737 * C50773 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50737 * C1074) *
              C1077 +
          ((C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
            C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
               C50675 * C50737 * C1074 -
           ((C117 * C4640 + C50832 * C4646) * C20891 +
            (C117 * C4637 + C50832 * C4641) * C20895 + C6141 * C20890 +
            C6140 * C20894 + C968 * C20889 + C967 * C20893 + C361 * C20888 +
            C362 * C20892) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C50832 * C126) * C20892 +
           (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
           C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
           C7441 * C20891) *
              C50675 * C50737 * C1145 -
          (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 + C6540 * C20894 +
           C6137 * C20889 + C6136 * C20893 +
           (C117 * C310 + C50832 * C327) * C20888 +
           (C117 * C297 + C50832 * C311) * C20892) *
              C50675 * C50737 * C1146 +
          ((C117 * C298 + C50832 * C312) * C20892 +
           (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
           C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
           (C117 * C10282 + C50832 * C10286) * C20895 +
           (C117 * C10285 + C50832 * C10288) * C20891) *
              C50675 * C50737 * C1147 -
          ((C117 * C12235 + C50832 * C12237) * C20891 +
           (C117 * C12234 + C50832 * C12236) * C20895 +
           (C117 * C9393 + C50832 * C9396) * C20890 +
           (C117 * C9390 + C50832 * C9394) * C20894 +
           (C117 * C4242 + C50832 * C4246) * C20889 +
           (C117 * C4237 + C50832 * C4243) * C20893 +
           (C117 * C1160 + C50832 * C1165) * C20888 +
           (C117 * C1153 + C50832 * C1161) * C20892) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C480 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C481 +
           (C5611 * C20892 + C5610 * C20888 + C7440 * C20893 + C7441 * C20889 +
            C17563 * C20894 + C17564 * C20890 +
            (C117 * C17551 + C50832 * C17555) * C20895 +
            (C117 * C17554 + C50832 * C17557) * C20891) *
               C50675 * C482) *
              C1074 +
          ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
            C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
            C21686 * C20891) *
               C50675 * C481 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C480 -
           ((C117 * C20319 + C50832 * C20321) * C20891 +
            (C117 * C20318 + C50832 * C20320) * C20895 + C21686 * C20890 +
            C21685 * C20894 + C16668 * C20889 + C16667 * C20893 +
            C6541 * C20888 + C6540 * C20892) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C5235 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50980 +
             (C12979 + C12980 + C12981) * C5236 +
             (C12982 + C12983 + C12984) * C50874) *
                C50675 * C50969 -
            ((C12985 + C12986 + C12987) * C50874 +
             (C12988 + C12989 + C12990) * C5236 +
             (C12984 + C12983 + C12982) * C50980 +
             (C12981 + C12980 + C12979) * C5235) *
                C50675 * C50801) *
               C1074 +
           (((C13489 + C13490 + C13491) * C5235 +
             (C13492 + C13493 + C13494) * C50980 +
             (C13897 + C13898 + C13899) * C5236 +
             (C13900 + C13901 + C13902) * C50874) *
                C50675 * C50801 -
            ((C13494 + C13493 + C13492) * C50874 +
             (C13491 + C13490 + C13489) * C5236 +
             (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50980 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C5235) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          ((((C8445 + C8444 + C8443) * C5235 +
             (C8442 + C8441 + C8440) * C50980 +
             (C8446 + C8447 + C8448) * C5236 +
             (C8449 + C8450 + C8451) * C50874) *
                C50675 * C50801 -
            ((C8440 + C8441 + C8442) * C50874 +
             (C8443 + C8444 + C8445) * C5236 +
             (C8075 + C8074 + C8073) * C50980 +
             (C8072 + C8071 + C8070) * C5235) *
                C50675 * C50969) *
               C1074 +
           (((C8263 + C8262 + C8261) * C5235 +
             (C8260 + C8259 + C8258) * C50980 +
             (C8986 + C8987 + C8988) * C5236 +
             (C8989 + C8990 + C8991) * C50874) *
                C50675 * C50969 -
            ((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50874 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C5236 +
             (C8991 + C8990 + C8989) * C50980 +
             (C8988 + C8987 + C8986) * C5235) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C5235 +
              (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
              C5609 * C50874) *
                 C2340 +
             (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                C50969 -
            (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
             (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                 C2340) *
                C50801) *
               C1074 +
           (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                 C2340 +
             (C6124 + C6125 + C6142 + C6143) * C2341 +
             (C6130 + C6131 + C6144 + C6145) * C2342) *
                C50801 -
            (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
             (C6137 * C50874 + C6136 * C5236 +
              (C117 * C310 + C50832 * C327) * C50980 +
              (C117 * C297 + C50832 * C311) * C5235) *
                 C2340) *
                C50969) *
               C50773) *
              C50960 +
          ((((C5591 + C5590 + C5589 + C5588) * C2340 +
             (C5587 + C5586 + C5585 + C5584) * C2341 +
             (C5920 + C5921 + C5922 + C5923) * C2342) *
                C50801 -
            (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
             (C5241 + C5240 + C5239 + C5238) * C2340) *
                C50969) *
               C1074 +
           (((C5413 + C5412 + C5411 + C5410) * C2340 +
             (C5409 + C5408 + C5407 + C5406) * C2341 +
             (C5767 + C5768 + C5769 + C5770) * C2342) *
                C50969 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C5236 + C970 * C50980 +
              C969 * C5235) *
                 C2342 +
             (C6145 + C6144 + C6131 + C6130) * C2341 +
             (C6143 + C6142 + C6125 + C6124) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C20892 +
             (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
             C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
             C7441 * C20891) *
                C50675 * C50969 -
            (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
             C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
             C5608 * C20892) *
                C50675 * C50801) *
               C1074 +
           ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
             C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
             C21686 * C20891) *
                C50675 * C50801 -
            (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
             C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
             (C117 * C310 + C50832 * C327) * C20888 +
             (C117 * C297 + C50832 * C311) * C20892) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          (((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
             C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
             C15756 * C20891) *
                C50675 * C50801 -
            (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
             C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
                C50675 * C50969) *
               C1074 +
           ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
             C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
             C16266 * C20891) *
                C50675 * C50969 -
            ((C117 * C16659 + C50832 * C16661) * C20891 +
             (C117 * C16658 + C50832 * C16660) * C20895 + C16266 * C20890 +
             C16265 * C20894 + C6139 * C20889 + C6138 * C20893 + C966 * C20888 +
             C965 * C20892) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
            C5609 * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C50737 * C1145 -
          (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
           (C6137 * C50874 + C6136 * C5236 +
            (C117 * C310 + C50832 * C327) * C50980 +
            (C117 * C297 + C50832 * C311) * C5235) *
               C2340) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C5235 +
            (C117 * C313 + C50832 * C328) * C50980 +
            (C117 * C1614 + C50832 * C1622) * C5236 +
            (C117 * C1621 + C50832 * C1626) * C50874) *
               C2340 +
           (C5414 + C5415 + C5430 + C5431) * C2341 +
           (C5420 + C5421 + C5432 + C5433) * C2342) *
              C50737 * C1147 -
          (((C117 * C4238 + C50832 * C4244) * C50874 +
            (C117 * C4235 + C50832 * C4239) * C5236 +
            (C117 * C1156 + C50832 * C1163) * C50980 +
            (C117 * C1151 + C50832 * C1157) * C5235) *
               C2342 +
           ((C117 * C4240 + C50832 * C4245) * C50874 +
            (C117 * C4236 + C50832 * C4241) * C5236 +
            (C117 * C1158 + C50832 * C1164) * C50980 +
            (C117 * C1152 + C50832 * C1159) * C5235) *
               C2341 +
           ((C117 * C4242 + C50832 * C4246) * C50874 +
            (C117 * C4237 + C50832 * C4243) * C5236 +
            (C117 * C1160 + C50832 * C1165) * C50980 +
            (C117 * C1153 + C50832 * C1161) * C5235) *
               C2340) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C1074 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C50773) *
              C1076 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C50773 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C1074) *
              C1077 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50737 * C1074 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C5236 + C686 * C50980 +
             C685 * C5235) *
                C2342 +
            (C5770 + C5769 + C5768 + C5767) * C2341 + C5772 * C2340) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C1074 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C50773 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50737 * C1074 -
           ((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
             C8030 * C942 + C8025 * C949) *
                C50874 +
            (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
             C8030 * C934 + C8025 * C941) *
                C5236 +
            (C8615 + C8614 + C8613) * C50980 +
            (C8612 + C8611 + C8610) * C5235) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C12979 + C12980 + C12981) * C5236 +
           (C12982 + C12983 + C12984) * C50874) *
              C50675 * C50737 * C1145 -
          ((C13494 + C13493 + C13492) * C50874 +
           (C13491 + C13490 + C13489) * C5236 +
           (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
            C8030 * C310 + C8025 * C327) *
               C50980 +
           (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
            C8030 * C297 + C8025 * C311) *
               C5235) *
              C50675 * C50737 * C1146 +
          ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
            C8032 * C3581 + C8027 * C3587) *
               C5235 +
           (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
            C8032 * C3586 + C8027 * C3590) *
               C50980 +
           (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
            C8032 * C9884 + C8027 * C9888) *
               C5236 +
           (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
            C8032 * C9887 + C8027 * C9890) *
               C50874) *
              C50675 * C50737 * C1147 -
          ((C8032 * C11969 + C8027 * C11971 + C8031 * C9887 + C8026 * C9890 +
            C8030 * C4242 + C8025 * C4246) *
               C50874 +
           (C8032 * C11968 + C8027 * C11970 + C8031 * C9884 + C8026 * C9888 +
            C8030 * C4237 + C8025 * C4243) *
               C5236 +
           (C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
            C8030 * C1160 + C8025 * C1165) *
               C50980 +
           (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
            C8030 * C1153 + C8025 * C1161) *
               C5235) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C50737 * C1074 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C50737 * C50773) *
              C1076 +
          ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
            C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
            C16266 * C20891) *
               C50675 * C50737 * C50773 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C50737 * C1074) *
              C1077 +
          ((C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
            C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
               C50675 * C50737 * C1074 -
           ((C117 * C4640 + C50832 * C4646) * C20891 +
            (C117 * C4637 + C50832 * C4641) * C20895 + C6141 * C20890 +
            C6140 * C20894 + C968 * C20889 + C967 * C20893 + C361 * C20888 +
            C362 * C20892) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50832 * C126) * C20892 +
           (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
           C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
           C7441 * C20891) *
              C50675 * C50737 * C1145 -
          (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 + C6540 * C20894 +
           C6137 * C20889 + C6136 * C20893 +
           (C117 * C310 + C50832 * C327) * C20888 +
           (C117 * C297 + C50832 * C311) * C20892) *
              C50675 * C50737 * C1146 +
          ((C117 * C298 + C50832 * C312) * C20892 +
           (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
           C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
           (C117 * C10282 + C50832 * C10286) * C20895 +
           (C117 * C10285 + C50832 * C10288) * C20891) *
              C50675 * C50737 * C1147 -
          ((C117 * C12235 + C50832 * C12237) * C20891 +
           (C117 * C12234 + C50832 * C12236) * C20895 +
           (C117 * C9393 + C50832 * C9396) * C20890 +
           (C117 * C9390 + C50832 * C9394) * C20894 +
           (C117 * C4242 + C50832 * C4246) * C20889 +
           (C117 * C4237 + C50832 * C4243) * C20893 +
           (C117 * C1160 + C50832 * C1165) * C20888 +
           (C117 * C1153 + C50832 * C1161) * C20892) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C5235 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50980 +
             (C12979 + C12980 + C12981) * C5236 +
             (C12982 + C12983 + C12984) * C50874) *
                C50675 * C1725 -
            ((C12985 + C12986 + C12987) * C50874 +
             (C12988 + C12989 + C12990) * C5236 +
             (C12984 + C12983 + C12982) * C50980 +
             (C12981 + C12980 + C12979) * C5235) *
                C50675 * C50801) *
               C50968 +
           (((C13489 + C13490 + C13491) * C5235 +
             (C13492 + C13493 + C13494) * C50980 +
             (C13897 + C13898 + C13899) * C5236 +
             (C13900 + C13901 + C13902) * C50874) *
                C50675 * C50801 -
            ((C13494 + C13493 + C13492) * C50874 +
             (C13491 + C13490 + C13489) * C5236 +
             (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50980 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C5235) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          ((((C8445 + C8444 + C8443) * C5235 +
             (C8442 + C8441 + C8440) * C50980 +
             (C8446 + C8447 + C8448) * C5236 +
             (C8449 + C8450 + C8451) * C50874) *
                C50675 * C50801 -
            ((C8440 + C8441 + C8442) * C50874 +
             (C8443 + C8444 + C8445) * C5236 +
             (C8075 + C8074 + C8073) * C50980 +
             (C8072 + C8071 + C8070) * C5235) *
                C50675 * C1725) *
               C50968 +
           (((C8263 + C8262 + C8261) * C5235 +
             (C8260 + C8259 + C8258) * C50980 +
             (C8986 + C8987 + C8988) * C5236 +
             (C8989 + C8990 + C8991) * C50874) *
                C50675 * C1725 -
            ((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50874 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C5236 +
             (C8991 + C8990 + C8989) * C50980 +
             (C8988 + C8987 + C8986) * C5235) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C5235 +
              (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
              C5609 * C50874) *
                 C2340 +
             (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                C1725 -
            (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
             (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                 C2340) *
                C50801) *
               C50968 +
           (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                 C2340 +
             (C6124 + C6125 + C6142 + C6143) * C2341 +
             (C6130 + C6131 + C6144 + C6145) * C2342) *
                C50801 -
            (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
             (C6137 * C50874 + C6136 * C5236 +
              (C117 * C310 + C50832 * C327) * C50980 +
              (C117 * C297 + C50832 * C311) * C5235) *
                 C2340) *
                C1725) *
               C50773) *
              C50960 +
          ((((C5591 + C5590 + C5589 + C5588) * C2340 +
             (C5587 + C5586 + C5585 + C5584) * C2341 +
             (C5920 + C5921 + C5922 + C5923) * C2342) *
                C50801 -
            (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
             (C5241 + C5240 + C5239 + C5238) * C2340) *
                C1725) *
               C50968 +
           (((C5413 + C5412 + C5411 + C5410) * C2340 +
             (C5409 + C5408 + C5407 + C5406) * C2341 +
             (C5767 + C5768 + C5769 + C5770) * C2342) *
                C1725 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C5236 + C970 * C50980 +
              C969 * C5235) *
                 C2342 +
             (C6145 + C6144 + C6131 + C6130) * C2341 +
             (C6143 + C6142 + C6125 + C6124) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C20892 +
             (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
             C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
             C7441 * C20891) *
                C50675 * C1725 -
            (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
             C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
             C5608 * C20892) *
                C50675 * C50801) *
               C50968 +
           ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
             C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
             C21686 * C20891) *
                C50675 * C50801 -
            (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
             C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
             (C117 * C310 + C50832 * C327) * C20888 +
             (C117 * C297 + C50832 * C311) * C20892) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          (((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
             C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
             C15756 * C20891) *
                C50675 * C50801 -
            (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
             C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
                C50675 * C1725) *
               C50968 +
           ((C364 * C20892 + C363 * C20888 + C965 * C20893 + C966 * C20889 +
             C6138 * C20894 + C6139 * C20890 + C16265 * C20895 +
             C16266 * C20891) *
                C50675 * C1725 -
            ((C117 * C16659 + C50832 * C16661) * C20891 +
             (C117 * C16658 + C50832 * C16660) * C20895 + C16266 * C20890 +
             C16265 * C20894 + C6139 * C20889 + C6138 * C20893 + C966 * C20888 +
             C965 * C20892) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C51014 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C51015 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C14817 + C14818 + C14819) * C5236 +
            (C14820 + C14821 + C14822) * C50874) *
               C50675 * C2141) *
              C50968 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C51015 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C51014 -
           ((C8032 * C12235 + C8027 * C12237 + C8031 * C10285 + C8026 * C10288 +
             C8030 * C4644 + C8025 * C4648) *
                C50874 +
            (C8032 * C12234 + C8027 * C12236 + C8031 * C10282 + C8026 * C10286 +
             C8030 * C4639 + C8025 * C4645) *
                C5236 +
            (C13902 + C13901 + C13900) * C50980 +
            (C13899 + C13898 + C13897) * C5235) *
               C50675 * C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C51014 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C51015 +
           ((C5611 * C5235 + C5610 * C50980 + C7440 * C5236 + C7441 * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C2141) *
              C50968 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C51015 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C51014 -
           (((C117 * C4640 + C50832 * C4646) * C50874 +
             (C117 * C4637 + C50832 * C4641) * C5236 + C6141 * C50980 +
             C6140 * C5235) *
                C2342 +
            ((C117 * C4642 + C50832 * C4647) * C50874 +
             (C117 * C4638 + C50832 * C4643) * C5236 + C6139 * C50980 +
             C6138 * C5235) *
                C2341 +
            ((C117 * C4644 + C50832 * C4648) * C50874 +
             (C117 * C4639 + C50832 * C4645) * C5236 + C6541 * C50980 +
             C6540 * C5235) *
                C2340) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C51014 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C51015 +
           (C5611 * C20892 + C5610 * C20888 + C7440 * C20893 + C7441 * C20889 +
            C17563 * C20894 + C17564 * C20890 + C22289 * C20895 +
            C22290 * C20891) *
               C50675 * C2141) *
              C50968 +
          ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
            C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
            C21686 * C20891) *
               C50675 * C51015 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C51014 -
           ((C117 * C20319 + C50832 * C20321) * C20891 +
            (C117 * C20318 + C50832 * C20320) * C20895 + C21686 * C20890 +
            C21685 * C20894 + C16668 * C20889 + C16667 * C20893 +
            C6541 * C20888 + C6540 * C20892) *
               C50675 * C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C5235 +
                 (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
                 C5609 * C50874) *
                    C2340 +
                (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                   C1725 -
               (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
                (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 +
                 C5608 * C5235) *
                    C2340) *
                   C50801) *
                  C50721 * C1076 +
              (((C5591 + C5590 + C5589 + C5588) * C2340 +
                (C5587 + C5586 + C5585 + C5584) * C2341 +
                (C5920 + C5921 + C5922 + C5923) * C2342) *
                   C50801 -
               (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
                (C5241 + C5240 + C5239 + C5238) * C2340) *
                   C1725) *
                  C50721 * C1077 +
              ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
                (C5250 + C5251 + C5252 + C5253) * C2342) *
                   C1725 -
               (((C117 * C511 + C50832 * C522) * C50874 +
                 (C117 * C492 + C50832 * C512) * C5236 + C800 * C50980 +
                 C799 * C5235) *
                    C2342 +
                (C5923 + C5922 + C5921 + C5920) * C2341 + C5925 * C2340) *
                   C50801) *
                  C50721 * C1078) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50832 * C126) * C5235 +
                 (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
                 C5609 * C50874) *
                    C2340 +
                (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                   C1725 -
               (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
                (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 +
                 C5608 * C5235) *
                    C2340) *
                   C50801) *
                  C289 +
              (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 +
                 C6541 * C50874) *
                    C2340 +
                (C6124 + C6125 + C6142 + C6143) * C2341 +
                (C6130 + C6131 + C6144 + C6145) * C2342) *
                   C50801 -
               (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
                (C6137 * C50874 + C6136 * C5236 +
                 (C117 * C310 + C50832 * C327) * C50980 +
                 (C117 * C297 + C50832 * C311) * C5235) *
                    C2340) *
                   C1725) *
                  C290 +
              ((((C117 * C298 + C50832 * C312) * C5235 +
                 (C117 * C313 + C50832 * C328) * C50980 + C7032 * C5236 +
                 C7033 * C50874) *
                    C2340 +
                (C5414 + C5415 + C5430 + C5431) * C2341 +
                (C5420 + C5421 + C5432 + C5433) * C2342) *
                   C1725 -
               (((C117 * C3740 + C50832 * C3746) * C50874 +
                 (C117 * C3737 + C50832 * C3741) * C5236 + C5429 * C50980 +
                 C5428 * C5235) *
                    C2342 +
                ((C117 * C3742 + C50832 * C3747) * C50874 +
                 (C117 * C3738 + C50832 * C3743) * C5236 + C5427 * C50980 +
                 C5426 * C5235) *
                    C2341 +
                ((C117 * C3744 + C50832 * C3748) * C50874 +
                 (C117 * C3739 + C50832 * C3745) * C5236 + C7033 * C50980 +
                 C7032 * C5235) *
                    C2340) *
                   C50801) *
                  C291) *
             C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
            C5609 * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C1891 -
          (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
           (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
               C2340) *
              C1892 +
          ((C5611 * C5235 + C5610 * C50980 + C7440 * C5236 + C7441 * C50874) *
               C2340 +
           (C5596 + C5597 + C5616 + C5617) * C2341 +
           (C5602 + C5603 + C5618 + C5619) * C2342) *
              C1893 -
          (((C117 * C7426 + C50832 * C7432) * C50874 +
            (C117 * C7423 + C50832 * C7427) * C5236 + C5615 * C50980 +
            C5614 * C5235) *
               C2342 +
           ((C117 * C7428 + C50832 * C7433) * C50874 +
            (C117 * C7424 + C50832 * C7429) * C5236 + C5613 * C50980 +
            C5612 * C5235) *
               C2341 +
           ((C117 * C7430 + C50832 * C7434) * C50874 +
            (C117 * C7425 + C50832 * C7431) * C5236 + C7441 * C50980 +
            C7440 * C5235) *
               C2340) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C50801 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C1725 -
           ((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
             C8030 * C506 + C8025 * C519) *
                C50874 +
            (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
             C8030 * C489 + C8025 * C505) *
                C5236 +
            (C8779 + C8778 + C8777) * C50980 +
            (C8776 + C8775 + C8774) * C5235) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C289 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C50801 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C1725) *
              C290 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C14401 + C14402 + C14403) * C5236 +
            (C14404 + C14405 + C14406) * C50874) *
               C50675 * C1725 -
           ((C8032 * C11639 + C8027 * C11641 + C8031 * C9393 + C8026 * C9396 +
             C8030 * C3744 + C8025 * C3748) *
                C50874 +
            (C8032 * C11638 + C8027 * C11640 + C8031 * C9390 + C8026 * C9394 +
             C8030 * C3739 + C8025 * C3745) *
                C5236 +
            (C14406 + C14405 + C14404) * C50980 +
            (C14403 + C14402 + C14401) * C5235) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C12979 + C12980 + C12981) * C5236 +
           (C12982 + C12983 + C12984) * C50874) *
              C50675 * C1891 -
          ((C12985 + C12986 + C12987) * C50874 +
           (C12988 + C12989 + C12990) * C5236 +
           (C12984 + C12983 + C12982) * C50980 +
           (C12981 + C12980 + C12979) * C5235) *
              C50675 * C1892 +
          ((C12990 + C12989 + C12988) * C5235 +
           (C12987 + C12986 + C12985) * C50980 +
           (C14817 + C14818 + C14819) * C5236 +
           (C14820 + C14821 + C14822) * C50874) *
              C50675 * C1893 -
          ((C8032 * C14798 + C8027 * C14802 + C8031 * C14799 + C8026 * C14803 +
            C8030 * C7430 + C8025 * C7434) *
               C50874 +
           (C8032 * C14796 + C8027 * C14800 + C8031 * C14797 + C8026 * C14801 +
            C8030 * C7425 + C8025 * C7431) *
               C5236 +
           (C14822 + C14821 + C14820) * C50980 +
           (C14819 + C14818 + C14817) * C5235) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C1725 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C50801) *
              C50721 * C1076 +
          ((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
            C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
            C15756 * C20891) *
               C50675 * C50801 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C1725) *
              C50721 * C1077 +
          ((C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
            C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
               C50675 * C1725 -
           ((C117 * C7426 + C50832 * C7432) * C20891 +
            (C117 * C7423 + C50832 * C7427) * C20895 + C5615 * C20890 +
            C5614 * C20894 + C557 * C20889 + C556 * C20893 + C550 * C20888 +
            C551 * C20892) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C1725 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C50801) *
              C289 +
          ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
            C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
            C21686 * C20891) *
               C50675 * C50801 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C1725) *
              C290 +
          (((C117 * C298 + C50832 * C312) * C20892 +
            (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
            C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
            C22017 * C20895 + C22018 * C20891) *
               C50675 * C1725 -
           ((C117 * C14798 + C50832 * C14802) * C20891 +
            (C117 * C14796 + C50832 * C14800) * C20895 + C22018 * C20890 +
            C22017 * C20894 + C17160 * C20889 + C17159 * C20893 +
            C7033 * C20888 + C7032 * C20892) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50832 * C126) * C20892 +
           (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
           C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
           C7441 * C20891) *
              C50675 * C1891 -
          (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 + C7440 * C20894 +
           C5610 * C20889 + C5611 * C20893 + C5609 * C20888 + C5608 * C20892) *
              C50675 * C1892 +
          (C5611 * C20892 + C5610 * C20888 + C7440 * C20893 + C7441 * C20889 +
           C17563 * C20894 + C17564 * C20890 + C22289 * C20895 +
           C22290 * C20891) *
              C50675 * C1893 -
          ((C117 * C22281 + C50832 * C22283) * C20891 +
           (C117 * C22280 + C50832 * C22282) * C20895 + C22290 * C20890 +
           C22289 * C20894 + C17564 * C20889 + C17563 * C20893 +
           C7441 * C20888 + C7440 * C20892) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C51014 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C51015 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C14817 + C14818 + C14819) * C5236 +
            (C14820 + C14821 + C14822) * C50874) *
               C50675 * C2141) *
              C50721 * C50960 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C51015 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C51014 -
           ((C8032 * C10283 + C8027 * C10287 + C8031 * C4642 + C8026 * C4647 +
             C8030 * C1903 + C8025 * C1909) *
                C50874 +
            (C8032 * C10281 + C8027 * C10284 + C8031 * C4638 + C8026 * C4643 +
             C8030 * C1897 + C8025 * C1904) *
                C5236 +
            (C8451 + C8450 + C8449) * C50980 +
            (C8448 + C8447 + C8446) * C5235) *
               C50675 * C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C51014 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C51015 +
           ((C5611 * C5235 + C5610 * C50980 + C7440 * C5236 + C7441 * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C2141) *
              C50721 * C50960 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C51015 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C51014 -
           (((C117 * C1899 + C50832 * C1907) * C50874 +
             (C117 * C1895 + C50832 * C1900) * C5236 + C559 * C50980 +
             C558 * C5235) *
                C2342 +
            (C5619 + C5618 + C5603 + C5602) * C2341 +
            (C5617 + C5616 + C5597 + C5596) * C2340) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C51014 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C51015 +
           (C5611 * C20892 + C5610 * C20888 + C7440 * C20893 + C7441 * C20889 +
            C17563 * C20894 + C17564 * C20890 + C22289 * C20895 +
            C22290 * C20891) *
               C50675 * C2141) *
              C50721 * C50960 +
          ((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
            C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
            C15756 * C20891) *
               C50675 * C51015 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C51014 -
           ((C117 * C17552 + C50832 * C17556) * C20891 +
            (C117 * C17550 + C50832 * C17553) * C20895 + C15756 * C20890 +
            C15755 * C20894 + C5613 * C20889 + C5612 * C20893 + C555 * C20888 +
            C554 * C20892) *
               C50675 * C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C1725 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C289 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C50801 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 + C7032 * C5236 +
             C7033 * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C1725 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C5236 + C5429 * C50980 +
             C5428 * C5235) *
                C2342 +
            ((C117 * C3742 + C50832 * C3747) * C50874 +
             (C117 * C3738 + C50832 * C3743) * C5236 + C5427 * C50980 +
             C5426 * C5235) *
                C2341 +
            ((C117 * C3744 + C50832 * C3748) * C50874 +
             (C117 * C3739 + C50832 * C3745) * C5236 + C7033 * C50980 +
             C7032 * C5235) *
                C2340) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C1725 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C50721 * C1076 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C50801 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C1725) *
              C50721 * C1077 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C1725 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C5236 + C800 * C50980 +
             C799 * C5235) *
                C2342 +
            (C5923 + C5922 + C5921 + C5920) * C2341 + C5925 * C2340) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C50801 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C1725 -
           ((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
             C8030 * C506 + C8025 * C519) *
                C50874 +
            (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
             C8030 * C489 + C8025 * C505) *
                C5236 +
            (C8779 + C8778 + C8777) * C50980 +
            (C8776 + C8775 + C8774) * C5235) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C289 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C50801 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C1725) *
              C290 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C14401 + C14402 + C14403) * C5236 +
            (C14404 + C14405 + C14406) * C50874) *
               C50675 * C1725 -
           ((C8032 * C11639 + C8027 * C11641 + C8031 * C9393 + C8026 * C9396 +
             C8030 * C3744 + C8025 * C3748) *
                C50874 +
            (C8032 * C11638 + C8027 * C11640 + C8031 * C9390 + C8026 * C9394 +
             C8030 * C3739 + C8025 * C3745) *
                C5236 +
            (C14406 + C14405 + C14404) * C50980 +
            (C14403 + C14402 + C14401) * C5235) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C1725 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C50801) *
              C50721 * C1076 +
          ((C553 * C20892 + C552 * C20888 + C554 * C20893 + C555 * C20889 +
            C5612 * C20894 + C5613 * C20890 + C15755 * C20895 +
            C15756 * C20891) *
               C50675 * C50801 -
           (C5613 * C20891 + C5612 * C20895 + C555 * C20890 + C554 * C20894 +
            C552 * C20889 + C553 * C20893 + C169 * C20888 + C168 * C20892) *
               C50675 * C1725) *
              C50721 * C1077 +
          ((C170 * C20892 + C171 * C20888 + C551 * C20893 + C550 * C20889 +
            C556 * C20894 + C557 * C20890 + C5614 * C20895 + C5615 * C20891) *
               C50675 * C1725 -
           ((C117 * C7426 + C50832 * C7432) * C20891 +
            (C117 * C7423 + C50832 * C7427) * C20895 + C5615 * C20890 +
            C5614 * C20894 + C557 * C20889 + C556 * C20893 + C550 * C20888 +
            C551 * C20892) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C20892 +
            (C117 * C127 + C50832 * C140) * C20888 + C5608 * C20893 +
            C5609 * C20889 + C5611 * C20894 + C5610 * C20890 + C7440 * C20895 +
            C7441 * C20891) *
               C50675 * C1725 -
           (C17564 * C20891 + C17563 * C20895 + C7441 * C20890 +
            C7440 * C20894 + C5610 * C20889 + C5611 * C20893 + C5609 * C20888 +
            C5608 * C20892) *
               C50675 * C50801) *
              C289 +
          ((C6136 * C20892 + C6137 * C20888 + C6540 * C20893 + C6541 * C20889 +
            C16667 * C20894 + C16668 * C20890 + C21685 * C20895 +
            C21686 * C20891) *
               C50675 * C50801 -
           (C16668 * C20891 + C16667 * C20895 + C6541 * C20890 +
            C6540 * C20894 + C6137 * C20889 + C6136 * C20893 +
            (C117 * C310 + C50832 * C327) * C20888 +
            (C117 * C297 + C50832 * C311) * C20892) *
               C50675 * C1725) *
              C290 +
          (((C117 * C298 + C50832 * C312) * C20892 +
            (C117 * C313 + C50832 * C328) * C20888 + C7032 * C20893 +
            C7033 * C20889 + C17159 * C20894 + C17160 * C20890 +
            C22017 * C20895 + C22018 * C20891) *
               C50675 * C1725 -
           ((C117 * C14798 + C50832 * C14802) * C20891 +
            (C117 * C14796 + C50832 * C14800) * C20895 + C22018 * C20890 +
            C22017 * C20894 + C17160 * C20889 + C17159 * C20893 +
            C7033 * C20888 + C7032 * C20892) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50737 * C50968 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50737 * C50773) *
              C51010 +
          (((C32171 + C32170 + C32169 + C32168) * C51009 +
            (C32167 + C32166 + C32165 + C32164) * C50993 +
            (C32489 + C32490 + C32491 + C32492) * C22718) *
               C50737 * C50773 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50737 * C50968) *
              C51011 +
          ((C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
            (C32008 + C32009 + C32010 + C32011) * C22718) *
               C50737 * C50968 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C31994 + C686 * C31991 +
             C685 * C31993) *
                C22718 +
            (C32492 + C32491 + C32490 + C32489) * C50993 + C32494 * C51009) *
               C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C31993 +
              (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
              C5609 * C50874) *
                 C51009 +
             (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
                C50969 -
            (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
             (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
              C5608 * C31993) *
                 C51009) *
                C50801) *
               C50968 +
           (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
              C6541 * C50874) *
                 C51009 +
             (C32842 + C32843 + C32844 + C32845) * C50993 +
             (C32846 + C32847 + C32848 + C32849) * C22718) *
                C50801 -
            (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
             (C6137 * C50874 + C6136 * C31994 +
              (C117 * C310 + C50832 * C327) * C31991 +
              (C117 * C297 + C50832 * C311) * C31993) *
                 C51009) *
                C50969) *
               C50773) *
              C292 +
          ((((C32333 + C32332 + C32331 + C32330) * C51009 +
             (C32329 + C32328 + C32327 + C32326) * C50993 +
             (C32642 + C32643 + C32644 + C32645) * C22718) *
                C50801 -
            (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
             (C31999 + C31998 + C31997 + C31996) * C51009) *
                C50969) *
               C50968 +
           (((C32171 + C32170 + C32169 + C32168) * C51009 +
             (C32167 + C32166 + C32165 + C32164) * C50993 +
             (C32489 + C32490 + C32491 + C32492) * C22718) *
                C50969 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C31994 + C970 * C31991 +
              C969 * C31993) *
                 C22718 +
             (C32849 + C32848 + C32847 + C32846) * C50993 +
             (C32845 + C32844 + C32843 + C32842) * C51009) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50737 * C289 -
           ((C32164 + C32165 + C32166 + C32167) * C22718 +
            (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C31993 +
             (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
             C7033 * C50874) *
                C51009 +
            (C32172 + C32173 + C32174 + C32175) * C50993 +
            (C32176 + C32177 + C32178 + C32179) * C22718) *
               C50737 * C291) *
              C292 +
          (((C32171 + C32170 + C32169 + C32168) * C51009 +
            (C32167 + C32166 + C32165 + C32164) * C50993 +
            (C360 * C31993 + C359 * C31991 + C969 * C31994 + C970 * C50874) *
                C22718) *
               C50737 * C290 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50737 * C289 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C31994 + C370 * C31991 +
             C369 * C31993) *
                C22718 +
            (C32179 + C32178 + C32177 + C32176) * C50993 +
            (C32175 + C32174 + C32173 + C32172) * C51009) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C31993 +
            (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
            C5609 * C50874) *
               C51009 +
           (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
              C50737 * C50721 * C113 -
          (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
           (C31999 + C31998 + C31997 + C31996) * C51009) *
              C50737 * C50721 * C114 +
          (C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
           (C32008 + C32009 + C32010 + C32011) * C22718) *
              C50737 * C50721 * C115 -
          (((C117 * C789 + C50832 * C791) * C50874 +
            (C117 * C788 + C50832 * C790) * C31994 + C177 * C31991 +
            C176 * C31993) *
               C22718 +
           (C32011 + C32010 + C32009 + C32008) * C50993 + C32017 * C51009) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C480 -
           ((C32326 + C32327 + C32328 + C32329) * C22718 +
            (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C481 +
           ((C5611 * C31993 + C5610 * C31991 + C7440 * C31994 +
             C7441 * C50874) *
                C51009 +
            (C32334 + C32335 + C32336 + C32337) * C50993 +
            (C32338 + C32339 + C32340 + C32341) * C22718) *
               C482) *
              C50721 * C292 +
          (((C32333 + C32332 + C32331 + C32330) * C51009 +
            (C32329 + C32328 + C32327 + C32326) * C50993 +
            (C549 * C31993 + C548 * C31991 + C558 * C31994 + C559 * C50874) *
                C22718) *
               C481 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C480 -
           (((C117 * C1899 + C50832 * C1907) * C50874 +
             (C117 * C1895 + C50832 * C1900) * C31994 + C559 * C31991 +
             C558 * C31993) *
                C22718 +
            (C32341 + C32340 + C32339 + C32338) * C50993 +
            (C32337 + C32336 + C32335 + C32334) * C51009) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50969 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C50801) *
              C50721 * C51010 +
          (((C32333 + C32332 + C32331 + C32330) * C51009 +
            (C32329 + C32328 + C32327 + C32326) * C50993 +
            (C32642 + C32643 + C32644 + C32645) * C22718) *
               C50801 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50969) *
              C50721 * C51011 +
          ((C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
            (C32008 + C32009 + C32010 + C32011) * C22718) *
               C50969 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C31994 + C800 * C31991 +
             C799 * C31993) *
                C22718 +
            (C32645 + C32644 + C32643 + C32642) * C50993 + C32647 * C51009) *
               C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C31993 +
            (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
            C5609 * C50874) *
               C51009 +
           (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
              C50737 * C50721 * C113 -
          (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
           (C31999 + C31998 + C31997 + C31996) * C51009) *
              C50737 * C50721 * C114 +
          (C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
           (C32008 + C32009 + C32010 + C32011) * C22718) *
              C50737 * C50721 * C115 -
          (((C117 * C789 + C50832 * C791) * C50874 +
            (C117 * C788 + C50832 * C790) * C31994 + C177 * C31991 +
            C176 * C31993) *
               C22718 +
           (C32011 + C32010 + C32009 + C32008) * C50993 + C32017 * C51009) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50737 * C289 -
           ((C32164 + C32165 + C32166 + C32167) * C22718 +
            (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C31993 +
             (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
             C7033 * C50874) *
                C51009 +
            (C32172 + C32173 + C32174 + C32175) * C50993 +
            (C32176 + C32177 + C32178 + C32179) * C22718) *
               C50737 * C291) *
              C292 +
          (((C32171 + C32170 + C32169 + C32168) * C51009 +
            (C32167 + C32166 + C32165 + C32164) * C50993 +
            (C360 * C31993 + C359 * C31991 + C969 * C31994 + C970 * C50874) *
                C22718) *
               C50737 * C290 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50737 * C289 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C31994 + C370 * C31991 +
             C369 * C31993) *
                C22718 +
            (C32179 + C32178 + C32177 + C32176) * C50993 +
            (C32175 + C32174 + C32173 + C32172) * C51009) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50737 * C51012 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50737 * C51013 +
           (((C117 * C298 + C50832 * C312) * C31993 +
             (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
             C7033 * C50874) *
                C51009 +
            (C32172 + C32173 + C32174 + C32175) * C50993 +
            (C32176 + C32177 + C32178 + C32179) * C22718) *
               C50737 * C1380) *
              C50960 +
          (((C32171 + C32170 + C32169 + C32168) * C51009 +
            (C32167 + C32166 + C32165 + C32164) * C50993 +
            (C32489 + C32490 + C32491 + C32492) * C22718) *
               C50737 * C51013 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50737 * C51012 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C31994 + C370 * C31991 +
             C369 * C31993) *
                C22718 +
            (C32179 + C32178 + C32177 + C32176) * C50993 +
            (C32175 + C32174 + C32173 + C32172) * C51009) *
               C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50969 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C50801) *
              C51012 +
          (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
             C6541 * C50874) *
                C51009 +
            (C32842 + C32843 + C32844 + C32845) * C50993 +
            (C32846 + C32847 + C32848 + C32849) * C22718) *
               C50801 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50969) *
              C51013 +
          ((((C117 * C298 + C50832 * C312) * C31993 +
             (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
             C7033 * C50874) *
                C51009 +
            (C32172 + C32173 + C32174 + C32175) * C50993 +
            (C32176 + C32177 + C32178 + C32179) * C22718) *
               C50969 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C31994 + C5429 * C31991 +
             C5428 * C31993) *
                C22718 +
            (C15592 * C50874 + C15591 * C31994 + C5427 * C31991 +
             C5426 * C31993) *
                C50993 +
            (C17160 * C50874 + C17159 * C31994 + C7033 * C31991 +
             C7032 * C31993) *
                C51009) *
               C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C31993 +
            (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
            C5609 * C50874) *
               C51009 +
           (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
              C50737 * C1145 -
          (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
           (C6137 * C50874 + C6136 * C31994 +
            (C117 * C310 + C50832 * C327) * C31991 +
            (C117 * C297 + C50832 * C311) * C31993) *
               C51009) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C31993 +
            (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
            C7033 * C50874) *
               C51009 +
           (C32172 + C32173 + C32174 + C32175) * C50993 +
           (C32176 + C32177 + C32178 + C32179) * C22718) *
              C50737 * C1147 -
          (((C117 * C4238 + C50832 * C4244) * C50874 +
            (C117 * C4235 + C50832 * C4239) * C31994 +
            (C117 * C1156 + C50832 * C1163) * C31991 +
            (C117 * C1151 + C50832 * C1157) * C31993) *
               C22718 +
           ((C117 * C4240 + C50832 * C4245) * C50874 +
            (C117 * C4236 + C50832 * C4241) * C31994 +
            (C117 * C1158 + C50832 * C1164) * C31991 +
            (C117 * C1152 + C50832 * C1159) * C31993) *
               C50993 +
           ((C117 * C4242 + C50832 * C4246) * C50874 +
            (C117 * C4237 + C50832 * C4243) * C31994 +
            (C117 * C1160 + C50832 * C1165) * C31991 +
            (C117 * C1153 + C50832 * C1161) * C31993) *
               C51009) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50737 * C1074 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50737 * C50773) *
              C1076 +
          (((C32171 + C32170 + C32169 + C32168) * C51009 +
            (C32167 + C32166 + C32165 + C32164) * C50993 +
            (C32489 + C32490 + C32491 + C32492) * C22718) *
               C50737 * C50773 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50737 * C1074) *
              C1077 +
          ((C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
            (C32008 + C32009 + C32010 + C32011) * C22718) *
               C50737 * C1074 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C31994 + C686 * C31991 +
             C685 * C31993) *
                C22718 +
            (C32492 + C32491 + C32490 + C32489) * C50993 + C32494 * C51009) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C480 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C481 +
           ((C5611 * C31993 + C5610 * C31991 + C7440 * C31994 +
             C7441 * C50874) *
                C51009 +
            (C32334 + C32335 + C32336 + C32337) * C50993 +
            (C32338 + C32339 + C32340 + C32341) * C22718) *
               C482) *
              C1074 +
          (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
             C6541 * C50874) *
                C51009 +
            (C32842 + C32843 + C32844 + C32845) * C50993 +
            (C32846 + C32847 + C32848 + C32849) * C22718) *
               C481 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C480 -
           (((C117 * C4640 + C50832 * C4646) * C50874 +
             (C117 * C4637 + C50832 * C4641) * C31994 + C6141 * C31991 +
             C6140 * C31993) *
                C22718 +
            (C16266 * C50874 + C16265 * C31994 + C6139 * C31991 +
             C6138 * C31993) *
                C50993 +
            (C16668 * C50874 + C16667 * C31994 + C6541 * C31991 +
             C6540 * C31993) *
                C51009) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C31993 +
              (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
              C5609 * C50874) *
                 C51009 +
             (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
                C50969 -
            (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
             (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
              C5608 * C31993) *
                 C51009) *
                C50801) *
               C1074 +
           (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
              C6541 * C50874) *
                 C51009 +
             (C32842 + C32843 + C32844 + C32845) * C50993 +
             (C32846 + C32847 + C32848 + C32849) * C22718) *
                C50801 -
            (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
             (C6137 * C50874 + C6136 * C31994 +
              (C117 * C310 + C50832 * C327) * C31991 +
              (C117 * C297 + C50832 * C311) * C31993) *
                 C51009) *
                C50969) *
               C50773) *
              C50960 +
          ((((C32333 + C32332 + C32331 + C32330) * C51009 +
             (C32329 + C32328 + C32327 + C32326) * C50993 +
             (C32642 + C32643 + C32644 + C32645) * C22718) *
                C50801 -
            (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
             (C31999 + C31998 + C31997 + C31996) * C51009) *
                C50969) *
               C1074 +
           (((C32171 + C32170 + C32169 + C32168) * C51009 +
             (C32167 + C32166 + C32165 + C32164) * C50993 +
             (C32489 + C32490 + C32491 + C32492) * C22718) *
                C50969 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C31994 + C970 * C31991 +
              C969 * C31993) *
                 C22718 +
             (C32849 + C32848 + C32847 + C32846) * C50993 +
             (C32845 + C32844 + C32843 + C32842) * C51009) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C50737 * C1074 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C50737 * C50773) *
              C1076 +
          (((C32171 + C32170 + C32169 + C32168) * C51009 +
            (C32167 + C32166 + C32165 + C32164) * C50993 +
            (C32489 + C32490 + C32491 + C32492) * C22718) *
               C50737 * C50773 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C50737 * C1074) *
              C1077 +
          ((C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
            (C32008 + C32009 + C32010 + C32011) * C22718) *
               C50737 * C1074 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C31994 + C686 * C31991 +
             C685 * C31993) *
                C22718 +
            (C32492 + C32491 + C32490 + C32489) * C50993 + C32494 * C51009) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C31993 +
            (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
            C5609 * C50874) *
               C51009 +
           (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
              C50737 * C1145 -
          (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
           (C6137 * C50874 + C6136 * C31994 +
            (C117 * C310 + C50832 * C327) * C31991 +
            (C117 * C297 + C50832 * C311) * C31993) *
               C51009) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C31993 +
            (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
            C7033 * C50874) *
               C51009 +
           (C32172 + C32173 + C32174 + C32175) * C50993 +
           (C32176 + C32177 + C32178 + C32179) * C22718) *
              C50737 * C1147 -
          (((C117 * C4238 + C50832 * C4244) * C50874 +
            (C117 * C4235 + C50832 * C4239) * C31994 +
            (C117 * C1156 + C50832 * C1163) * C31991 +
            (C117 * C1151 + C50832 * C1157) * C31993) *
               C22718 +
           ((C117 * C4240 + C50832 * C4245) * C50874 +
            (C117 * C4236 + C50832 * C4241) * C31994 +
            (C117 * C1158 + C50832 * C1164) * C31991 +
            (C117 * C1152 + C50832 * C1159) * C31993) *
               C50993 +
           ((C117 * C4242 + C50832 * C4246) * C50874 +
            (C117 * C4237 + C50832 * C4243) * C31994 +
            (C117 * C1160 + C50832 * C1165) * C31991 +
            (C117 * C1153 + C50832 * C1161) * C31993) *
               C51009) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C31993 +
              (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
              C5609 * C50874) *
                 C51009 +
             (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
                C1725 -
            (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
             (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
              C5608 * C31993) *
                 C51009) *
                C50801) *
               C50968 +
           (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
              C6541 * C50874) *
                 C51009 +
             (C32842 + C32843 + C32844 + C32845) * C50993 +
             (C32846 + C32847 + C32848 + C32849) * C22718) *
                C50801 -
            (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
             (C6137 * C50874 + C6136 * C31994 +
              (C117 * C310 + C50832 * C327) * C31991 +
              (C117 * C297 + C50832 * C311) * C31993) *
                 C51009) *
                C1725) *
               C50773) *
              C50960 +
          ((((C32333 + C32332 + C32331 + C32330) * C51009 +
             (C32329 + C32328 + C32327 + C32326) * C50993 +
             (C32642 + C32643 + C32644 + C32645) * C22718) *
                C50801 -
            (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
             (C31999 + C31998 + C31997 + C31996) * C51009) *
                C1725) *
               C50968 +
           (((C32171 + C32170 + C32169 + C32168) * C51009 +
             (C32167 + C32166 + C32165 + C32164) * C50993 +
             (C32489 + C32490 + C32491 + C32492) * C22718) *
                C1725 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C31994 + C970 * C31991 +
              C969 * C31993) *
                 C22718 +
             (C32849 + C32848 + C32847 + C32846) * C50993 +
             (C32845 + C32844 + C32843 + C32842) * C51009) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C51014 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C51015 +
           ((C5611 * C31993 + C5610 * C31991 + C7440 * C31994 +
             C7441 * C50874) *
                C51009 +
            (C32334 + C32335 + C32336 + C32337) * C50993 +
            (C32338 + C32339 + C32340 + C32341) * C22718) *
               C2141) *
              C50968 +
          (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
             C6541 * C50874) *
                C51009 +
            (C32842 + C32843 + C32844 + C32845) * C50993 +
            (C32846 + C32847 + C32848 + C32849) * C22718) *
               C51015 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C51014 -
           (((C117 * C4640 + C50832 * C4646) * C50874 +
             (C117 * C4637 + C50832 * C4641) * C31994 + C6141 * C31991 +
             C6140 * C31993) *
                C22718 +
            (C16266 * C50874 + C16265 * C31994 + C6139 * C31991 +
             C6138 * C31993) *
                C50993 +
            (C16668 * C50874 + C16667 * C31994 + C6541 * C31991 +
             C6540 * C31993) *
                C51009) *
               C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C1725 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C50801) *
              C289 +
          (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
             C6541 * C50874) *
                C51009 +
            (C32842 + C32843 + C32844 + C32845) * C50993 +
            (C32846 + C32847 + C32848 + C32849) * C22718) *
               C50801 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C31993 +
             (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
             C7033 * C50874) *
                C51009 +
            (C32172 + C32173 + C32174 + C32175) * C50993 +
            (C32176 + C32177 + C32178 + C32179) * C22718) *
               C1725 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C31994 + C5429 * C31991 +
             C5428 * C31993) *
                C22718 +
            (C15592 * C50874 + C15591 * C31994 + C5427 * C31991 +
             C5426 * C31993) *
                C50993 +
            (C17160 * C50874 + C17159 * C31994 + C7033 * C31991 +
             C7032 * C31993) *
                C51009) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C1725 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C50801) *
              C50721 * C1076 +
          (((C32333 + C32332 + C32331 + C32330) * C51009 +
            (C32329 + C32328 + C32327 + C32326) * C50993 +
            (C32642 + C32643 + C32644 + C32645) * C22718) *
               C50801 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C1725) *
              C50721 * C1077 +
          ((C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
            (C32008 + C32009 + C32010 + C32011) * C22718) *
               C1725 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C31994 + C800 * C31991 +
             C799 * C31993) *
                C22718 +
            (C32645 + C32644 + C32643 + C32642) * C50993 + C32647 * C51009) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C31993 +
            (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
            C5609 * C50874) *
               C51009 +
           (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
              C1891 -
          (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
           (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 + C5608 * C31993) *
               C51009) *
              C1892 +
          ((C5611 * C31993 + C5610 * C31991 + C7440 * C31994 + C7441 * C50874) *
               C51009 +
           (C32334 + C32335 + C32336 + C32337) * C50993 +
           (C32338 + C32339 + C32340 + C32341) * C22718) *
              C1893 -
          (((C117 * C7426 + C50832 * C7432) * C50874 +
            (C117 * C7423 + C50832 * C7427) * C31994 + C5615 * C31991 +
            C5614 * C31993) *
               C22718 +
           (C15756 * C50874 + C15755 * C31994 + C5613 * C31991 +
            C5612 * C31993) *
               C50993 +
           (C17564 * C50874 + C17563 * C31994 + C7441 * C31991 +
            C7440 * C31993) *
               C51009) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C51014 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C51015 +
           ((C5611 * C31993 + C5610 * C31991 + C7440 * C31994 +
             C7441 * C50874) *
                C51009 +
            (C32334 + C32335 + C32336 + C32337) * C50993 +
            (C32338 + C32339 + C32340 + C32341) * C22718) *
               C2141) *
              C50721 * C50960 +
          (((C32333 + C32332 + C32331 + C32330) * C51009 +
            (C32329 + C32328 + C32327 + C32326) * C50993 +
            (C32642 + C32643 + C32644 + C32645) * C22718) *
               C51015 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C51014 -
           (((C117 * C1899 + C50832 * C1907) * C50874 +
             (C117 * C1895 + C50832 * C1900) * C31994 + C559 * C31991 +
             C558 * C31993) *
                C22718 +
            (C32341 + C32340 + C32339 + C32338) * C50993 +
            (C32337 + C32336 + C32335 + C32334) * C51009) *
               C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C1725 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C50801) *
              C50721 * C1076 +
          (((C32333 + C32332 + C32331 + C32330) * C51009 +
            (C32329 + C32328 + C32327 + C32326) * C50993 +
            (C32642 + C32643 + C32644 + C32645) * C22718) *
               C50801 -
           (C32017 * C22718 + (C32003 + C32002 + C32001 + C32000) * C50993 +
            (C31999 + C31998 + C31997 + C31996) * C51009) *
               C1725) *
              C50721 * C1077 +
          ((C32016 * C51009 + (C32007 + C32006 + C32005 + C32004) * C50993 +
            (C32008 + C32009 + C32010 + C32011) * C22718) *
               C1725 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C31994 + C800 * C31991 +
             C799 * C31993) *
                C22718 +
            (C32645 + C32644 + C32643 + C32642) * C50993 + C32647 * C51009) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C31993 +
             (C117 * C127 + C50832 * C140) * C31991 + C5608 * C31994 +
             C5609 * C50874) *
                C51009 +
            (C31996 + C31997 + C31998 + C31999) * C50993 + C32016 * C22718) *
               C1725 -
           (C32647 * C22718 + (C32330 + C32331 + C32332 + C32333) * C50993 +
            (C5610 * C50874 + C5611 * C31994 + C5609 * C31991 +
             C5608 * C31993) *
                C51009) *
               C50801) *
              C289 +
          (((C6136 * C31993 + C6137 * C31991 + C6540 * C31994 +
             C6541 * C50874) *
                C51009 +
            (C32842 + C32843 + C32844 + C32845) * C50993 +
            (C32846 + C32847 + C32848 + C32849) * C22718) *
               C50801 -
           (C32494 * C22718 + (C32168 + C32169 + C32170 + C32171) * C50993 +
            (C6137 * C50874 + C6136 * C31994 +
             (C117 * C310 + C50832 * C327) * C31991 +
             (C117 * C297 + C50832 * C311) * C31993) *
                C51009) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C31993 +
             (C117 * C313 + C50832 * C328) * C31991 + C7032 * C31994 +
             C7033 * C50874) *
                C51009 +
            (C32172 + C32173 + C32174 + C32175) * C50993 +
            (C32176 + C32177 + C32178 + C32179) * C22718) *
               C1725 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C31994 + C5429 * C31991 +
             C5428 * C31993) *
                C22718 +
            (C15592 * C50874 + C15591 * C31994 + C5427 * C31991 +
             C5426 * C31993) *
                C50993 +
            (C17160 * C50874 + C17159 * C31994 + C7033 * C31991 +
             C7032 * C31993) *
                C51009) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C50737 * C50968 -
           (((C3331 + C3330) * C50874 + (C3329 + C3328) * C31994 +
             (C2586 + C2587) * C31991 + (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50737 * C50773) *
              C51010 +
          ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
             (C3328 + C3329) * C31994 + (C3330 + C3331) * C50874) *
                C25564 +
            ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
             (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C50737 * C50968) *
              C51011 +
          (((C2394 * C31993 + C2395 * C31991 + (C2779 + C2778) * C31994 +
             (C2777 + C2776) * C50874) *
                C25564 +
            ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
             (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
                C50680) *
               C50737 * C50968 -
           (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                 C50874 +
             (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                 C31994 +
             (C2953 + C2952) * C31991 + (C2951 + C2950) * C31993) *
                C50680 +
            ((C3335 + C3334) * C50874 + (C3333 + C3332) * C31994 +
             C2938 * C31991 + C2939 * C31993) *
                C25564) *
               C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C31993 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C31991 +
              (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                 C25564 +
             ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
              C35132 * C31994 + C35133 * C50874) *
                 C50680) *
                C50969 -
            ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
              C35135 * C31993) *
                 C50680 +
             ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
              (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                 C25564) *
                C50801) *
               C50968 +
           ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
              (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                 C25564 +
             (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
              (C19013 + C19014) * C50874) *
                 C50680) *
                C50801 -
            ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
              (C2588 + C2589) * C31993) *
                 C50680 +
             ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
              (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C31991 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C31993) *
                 C25564) *
                C50969) *
               C50773) *
              C292 +
          ((((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
              C35137 * C50874) *
                 C25564 +
             (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
              (C2790 + C2791) * C50874) *
                 C50680) *
                C50801 -
            ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
              (C2383 + C2382) * C31993) *
                 C50680 +
             (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
              (C2379 + C2378) * C31993) *
                 C25564) *
                C50969) *
               C50968 +
           ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
              C35786 * C31994 + C35787 * C50874) *
                 C25564 +
             ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
              (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                 C50680) *
                C50969 -
            (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 +
               C50978 * C1277) *
                  C50874 +
              (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 +
               C50978 * C1271) *
                  C31994 +
              (C3335 + C3334) * C31991 + (C3333 + C3332) * C31993) *
                 C50680 +
             ((C19014 + C19013) * C50874 + (C19012 + C19011) * C31994 +
              C35788 * C31991 + C35789 * C31993) *
                 C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             (C2783 + C2782) * C31994 + (C2781 + C2780) * C50874) *
                C50680) *
               C50737 * C289 -
           (((C3331 + C3330) * C50874 + (C3329 + C3328) * C31994 +
             (C2586 + C2587) * C31991 + (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50737 * C290 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C31993 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C31991 +
             (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
                C25564 +
            ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
             (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
             (C3328 + C3329) * C31994 + (C3330 + C3331) * C50874) *
                C25564 +
            ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
             (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                C50680) *
               C50737 * C290 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            ((C2780 + C2781) * C50874 + (C2782 + C2783) * C31994 +
             (C2381 + C2380) * C31991 + (C2379 + C2378) * C31993) *
                C25564) *
               C50737 * C289 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50874 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C31994 +
             (C2597 + C2596) * C31991 + (C2595 + C2594) * C31993) *
                C50680 +
            ((C34937 + C34936) * C50874 + (C34935 + C34934) * C31994 +
             (C2593 + C2592) * C31991 + (C2591 + C2590) * C31993) *
                C25564) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C31993 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C31991 +
            (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
               C25564 +
           ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
            (C2783 + C2782) * C31994 + (C2781 + C2780) * C50874) *
               C50680) *
              C50737 * C50721 * C113 -
          ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
            (C2383 + C2382) * C31993) *
               C50680 +
           ((C2780 + C2781) * C50874 + (C2782 + C2783) * C31994 +
            (C2381 + C2380) * C31991 + (C2379 + C2378) * C31993) *
               C25564) *
              C50737 * C50721 * C114 +
          ((C2394 * C31993 + C2395 * C31991 + (C2779 + C2778) * C31994 +
            (C2777 + C2776) * C50874) *
               C25564 +
           ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
            (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                C50874 +
            (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                C31994 +
            (C2393 + C2392) * C31991 + (C2391 + C2390) * C31993) *
               C50680 +
           ((C3116 + C3115) * C50874 + (C3114 + C3113) * C31994 +
            C2396 * C31991 + C2397 * C31993) *
               C25564) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C480 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C481 +
           ((C18491 * C31993 + C18492 * C31991 + (C18486 + C18485) * C31994 +
             (C18484 + C18483) * C50874) *
                C25564 +
            (C35136 * C31993 + C35137 * C31991 + (C18487 + C18488) * C31994 +
             (C18489 + C18490) * C50874) *
                C50680) *
               C482) *
              C50721 * C292 +
          (((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
             C35137 * C50874) *
                C25564 +
            ((C2779 + C2778) * C31993 + (C2777 + C2776) * C31991 +
             (C2788 + C2789) * C31994 + (C2790 + C2791) * C50874) *
                C50680) *
               C481 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C480 -
           (((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                 C50874 +
             (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                 C31994 +
             (C2791 + C2790) * C31991 + (C2789 + C2788) * C31993) *
                C50680 +
            ((C18490 + C18489) * C50874 + (C18488 + C18487) * C31994 +
             C18473 * C31991 + C18474 * C31993) *
                C25564) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C50969 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C50801) *
              C50721 * C51010 +
          (((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
             C35137 * C50874) *
                C25564 +
            (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
             (C2790 + C2791) * C50874) *
                C50680) *
               C50801 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C50969) *
              C50721 * C51011 +
          (((C2394 * C31993 + C2395 * C31991 + C35526 * C31994 +
             C35527 * C50874) *
                C25564 +
            ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
             (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
                C50680) *
               C50969 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50874 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C31994 +
             (C3116 + C3115) * C31991 + (C3114 + C3113) * C31993) *
                C50680 +
            ((C2791 + C2790) * C50874 + (C2789 + C2788) * C31994 +
             C3101 * C31991 + C3102 * C31993) *
                C25564) *
               C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C31993 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C31991 +
            (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
               C25564 +
           ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
            (C2783 + C2782) * C31994 + (C2781 + C2780) * C50874) *
               C50680) *
              C50737 * C50721 * C113 -
          ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
            (C2383 + C2382) * C31993) *
               C50680 +
           ((C2780 + C2781) * C50874 + (C2782 + C2783) * C31994 +
            (C2381 + C2380) * C31991 + (C2379 + C2378) * C31993) *
               C25564) *
              C50737 * C50721 * C114 +
          ((C2394 * C31993 + C2395 * C31991 + (C2779 + C2778) * C31994 +
            (C2777 + C2776) * C50874) *
               C25564 +
           ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
            (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                C50874 +
            (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                C31994 +
            (C2393 + C2392) * C31991 + (C2391 + C2390) * C31993) *
               C50680 +
           ((C3116 + C3115) * C50874 + (C3114 + C3113) * C31994 +
            C2396 * C31991 + C2397 * C31993) *
               C25564) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             (C2783 + C2782) * C31994 + (C2781 + C2780) * C50874) *
                C50680) *
               C50737 * C289 -
           (((C3331 + C3330) * C50874 + (C3329 + C3328) * C31994 +
             (C2586 + C2587) * C31991 + (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50737 * C290 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C31993 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C31991 +
             (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
                C25564 +
            ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
             (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
             (C3328 + C3329) * C31994 + (C3330 + C3331) * C50874) *
                C25564 +
            ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
             (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                C50680) *
               C50737 * C290 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            ((C2780 + C2781) * C50874 + (C2782 + C2783) * C31994 +
             (C2381 + C2380) * C31991 + (C2379 + C2378) * C31993) *
                C25564) *
               C50737 * C289 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50874 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C31994 +
             (C2597 + C2596) * C31991 + (C2595 + C2594) * C31993) *
                C50680 +
            ((C34937 + C34936) * C50874 + (C34935 + C34934) * C31994 +
             (C2593 + C2592) * C31991 + (C2591 + C2590) * C31993) *
                C25564) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C50737 * C51012 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50737 * C51013 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C31993 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C31991 +
             (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
                C25564 +
            ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
             (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
                C50680) *
               C50737 * C1380) *
              C50960 +
          ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
             C35786 * C31994 + C35787 * C50874) *
                C25564 +
            ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
             (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                C50680) *
               C50737 * C51013 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C50737 * C51012 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50874 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C31994 +
             (C2597 + C2596) * C31991 + (C2595 + C2594) * C31993) *
                C50680 +
            ((C34937 + C34936) * C50874 + (C34935 + C34934) * C31994 +
             (C2593 + C2592) * C31991 + (C2591 + C2590) * C31993) *
                C25564) *
               C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C50969 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C50801) *
              C51012 +
          ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
             (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                C25564 +
            (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
             (C19013 + C19014) * C50874) *
                C50680) *
               C50801 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50969) *
              C51013 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C31993 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C31991 +
             (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
                C25564 +
            ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
             (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
                C50680) *
               C50969 -
           (((C2344 * C9391 + C50848 * C9395 + C2343 * C3742 + C50978 * C3747) *
                 C50874 +
             (C2344 * C9389 + C50848 * C9392 + C2343 * C3738 + C50978 * C3743) *
                 C31994 +
             (C34937 + C34936) * C31991 + (C34935 + C34934) * C31993) *
                C50680 +
            ((C19928 + C19927) * C50874 + (C19926 + C19925) * C31994 +
             (C19924 + C19923) * C31991 + (C19922 + C19921) * C31993) *
                C25564) *
               C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C31993 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C31991 +
            (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
               C25564 +
           ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
            C35132 * C31994 + C35133 * C50874) *
               C50680) *
              C50737 * C1145 -
          ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
            (C2588 + C2589) * C31993) *
               C50680 +
           ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C31991 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C31993) *
               C25564) *
              C50737 * C1146 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C31993 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C31991 +
            (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
               C25564 +
           ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
            (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
               C50680) *
              C50737 * C1147 -
          (((C2344 * C9885 + C50848 * C9889 + C2343 * C4240 + C50978 * C4245) *
                C50874 +
            (C2344 * C9883 + C50848 * C9886 + C2343 * C4236 + C50978 * C4241) *
                C31994 +
            (C2344 * C3584 + C50848 * C3589 + C2343 * C1158 + C50978 * C1164) *
                C31991 +
            (C2344 * C3580 + C50848 * C3585 + C2343 * C1152 + C50978 * C1159) *
                C31993) *
               C50680 +
           ((C2344 * C9887 + C50848 * C9890 + C2343 * C4242 + C50978 * C4246) *
                C50874 +
            (C2344 * C9884 + C50848 * C9888 + C2343 * C4237 + C50978 * C4243) *
                C31994 +
            (C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
                C31991 +
            (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
                C31993) *
               C25564) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C50737 * C1074 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50737 * C50773) *
              C1076 +
          ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
             C35786 * C31994 + C35787 * C50874) *
                C25564 +
            ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
             (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C50737 * C1074) *
              C1077 +
          (((C2394 * C31993 + C2395 * C31991 + C35526 * C31994 +
             C35527 * C50874) *
                C25564 +
            ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
             (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
                C50680) *
               C50737 * C1074 -
           (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                 C50874 +
             (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                 C31994 +
             (C2953 + C2952) * C31991 + (C2951 + C2950) * C31993) *
                C50680 +
            ((C3335 + C3334) * C50874 + (C3333 + C3332) * C31994 +
             C2938 * C31991 + C2939 * C31993) *
                C25564) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C480 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C481 +
           ((C18491 * C31993 + C18492 * C31991 + (C18486 + C18485) * C31994 +
             (C18484 + C18483) * C50874) *
                C25564 +
            (C35136 * C31993 + C35137 * C31991 + (C18487 + C18488) * C31994 +
             (C18489 + C18490) * C50874) *
                C50680) *
               C482) *
              C1074 +
          ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
             (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                C25564 +
            (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
             (C19013 + C19014) * C50874) *
                C50680) *
               C481 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C480 -
           (((C2344 * C10283 + C50848 * C10287 + C2343 * C4642 +
              C50978 * C4647) *
                 C50874 +
             (C2344 * C10281 + C50848 * C10284 + C2343 * C4638 +
              C50978 * C4643) *
                 C31994 +
             (C19014 + C19013) * C31991 + (C19012 + C19011) * C31993) *
                C50680 +
            ((C19418 + C19417) * C50874 + (C19416 + C19415) * C31994 +
             C19413 * C31991 + C19414 * C31993) *
                C25564) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C31993 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C31991 +
              (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                 C25564 +
             ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
              C35132 * C31994 + C35133 * C50874) *
                 C50680) *
                C50969 -
            ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
              C35135 * C31993) *
                 C50680 +
             ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
              (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                 C25564) *
                C50801) *
               C1074 +
           ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
              (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                 C25564 +
             (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
              (C19013 + C19014) * C50874) *
                 C50680) *
                C50801 -
            ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
              (C2588 + C2589) * C31993) *
                 C50680 +
             ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
              (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C31991 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C31993) *
                 C25564) *
                C50969) *
               C50773) *
              C50960 +
          ((((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
              C35137 * C50874) *
                 C25564 +
             (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
              (C2790 + C2791) * C50874) *
                 C50680) *
                C50801 -
            ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
              (C2383 + C2382) * C31993) *
                 C50680 +
             (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
              (C2379 + C2378) * C31993) *
                 C25564) *
                C50969) *
               C1074 +
           ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
              C35786 * C31994 + C35787 * C50874) *
                 C25564 +
             ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
              (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                 C50680) *
                C50969 -
            (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 +
               C50978 * C1277) *
                  C50874 +
              (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 +
               C50978 * C1271) *
                  C31994 +
              (C3335 + C3334) * C31991 + (C3333 + C3332) * C31993) *
                 C50680 +
             ((C19014 + C19013) * C50874 + (C19012 + C19011) * C31994 +
              C35788 * C31991 + C35789 * C31993) *
                 C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C50737 * C1074 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C50737 * C50773) *
              C1076 +
          ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
             C35786 * C31994 + C35787 * C50874) *
                C25564 +
            ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
             (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                C50680) *
               C50737 * C50773 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C50737 * C1074) *
              C1077 +
          (((C2394 * C31993 + C2395 * C31991 + C35526 * C31994 +
             C35527 * C50874) *
                C25564 +
            ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
             (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
                C50680) *
               C50737 * C1074 -
           (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                 C50874 +
             (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                 C31994 +
             (C2953 + C2952) * C31991 + (C2951 + C2950) * C31993) *
                C50680 +
            ((C3335 + C3334) * C50874 + (C3333 + C3332) * C31994 +
             C2938 * C31991 + C2939 * C31993) *
                C25564) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C31993 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C31991 +
            (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
               C25564 +
           ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
            C35132 * C31994 + C35133 * C50874) *
               C50680) *
              C50737 * C1145 -
          ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
            (C2588 + C2589) * C31993) *
               C50680 +
           ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
            (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C31991 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C31993) *
               C25564) *
              C50737 * C1146 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C31993 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C31991 +
            (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
               C25564 +
           ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
            (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
               C50680) *
              C50737 * C1147 -
          (((C2344 * C9885 + C50848 * C9889 + C2343 * C4240 + C50978 * C4245) *
                C50874 +
            (C2344 * C9883 + C50848 * C9886 + C2343 * C4236 + C50978 * C4241) *
                C31994 +
            (C2344 * C3584 + C50848 * C3589 + C2343 * C1158 + C50978 * C1164) *
                C31991 +
            (C2344 * C3580 + C50848 * C3585 + C2343 * C1152 + C50978 * C1159) *
                C31993) *
               C50680 +
           ((C2344 * C9887 + C50848 * C9890 + C2343 * C4242 + C50978 * C4246) *
                C50874 +
            (C2344 * C9884 + C50848 * C9888 + C2343 * C4237 + C50978 * C4243) *
                C31994 +
            (C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
                C31991 +
            (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
                C31993) *
               C25564) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C31993 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C31991 +
              (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                 C25564 +
             ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
              C35132 * C31994 + C35133 * C50874) *
                 C50680) *
                C1725 -
            ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
              C35135 * C31993) *
                 C50680 +
             ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
              (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                 C25564) *
                C50801) *
               C50968 +
           ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
              (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                 C25564 +
             (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
              (C19013 + C19014) * C50874) *
                 C50680) *
                C50801 -
            ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
              (C2588 + C2589) * C31993) *
                 C50680 +
             ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
              (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C31991 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C31993) *
                 C25564) *
                C1725) *
               C50773) *
              C50960 +
          ((((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
              C35137 * C50874) *
                 C25564 +
             (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
              (C2790 + C2791) * C50874) *
                 C50680) *
                C50801 -
            ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
              (C2383 + C2382) * C31993) *
                 C50680 +
             (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
              (C2379 + C2378) * C31993) *
                 C25564) *
                C1725) *
               C50968 +
           ((((C2589 + C2588) * C31993 + (C2587 + C2586) * C31991 +
              C35786 * C31994 + C35787 * C50874) *
                 C25564 +
             ((C2585 + C2584) * C31993 + (C2583 + C2582) * C31991 +
              (C3332 + C3333) * C31994 + (C3334 + C3335) * C50874) *
                 C50680) *
                C1725 -
            (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 +
               C50978 * C1277) *
                  C50874 +
              (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 +
               C50978 * C1271) *
                  C31994 +
              (C3335 + C3334) * C31991 + (C3333 + C3332) * C31993) *
                 C50680 +
             ((C19014 + C19013) * C50874 + (C19012 + C19011) * C31994 +
              C35788 * C31991 + C35789 * C31993) *
                 C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C51014 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C51015 +
           ((C18491 * C31993 + C18492 * C31991 + (C18486 + C18485) * C31994 +
             (C18484 + C18483) * C50874) *
                C25564 +
            (C35136 * C31993 + C35137 * C31991 + (C18487 + C18488) * C31994 +
             (C18489 + C18490) * C50874) *
                C50680) *
               C2141) *
              C50968 +
          ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
             (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                C25564 +
            (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
             (C19013 + C19014) * C50874) *
                C50680) *
               C51015 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C51014 -
           (((C2344 * C10283 + C50848 * C10287 + C2343 * C4642 +
              C50978 * C4647) *
                 C50874 +
             (C2344 * C10281 + C50848 * C10284 + C2343 * C4638 +
              C50978 * C4643) *
                 C31994 +
             (C19014 + C19013) * C31991 + (C19012 + C19011) * C31993) *
                C50680 +
            ((C19418 + C19417) * C50874 + (C19416 + C19415) * C31994 +
             C19413 * C31991 + C19414 * C31993) *
                C25564) *
               C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C1725 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C50801) *
              C289 +
          ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
             (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                C25564 +
            (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
             (C19013 + C19014) * C50874) *
                C50680) *
               C50801 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C1725) *
              C290 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C31993 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C31991 +
             (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
                C25564 +
            ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
             (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
                C50680) *
               C1725 -
           (((C2344 * C9391 + C50848 * C9395 + C2343 * C3742 + C50978 * C3747) *
                 C50874 +
             (C2344 * C9389 + C50848 * C9392 + C2343 * C3738 + C50978 * C3743) *
                 C31994 +
             (C34937 + C34936) * C31991 + (C34935 + C34934) * C31993) *
                C50680 +
            ((C19928 + C19927) * C50874 + (C19926 + C19925) * C31994 +
             (C19924 + C19923) * C31991 + (C19922 + C19921) * C31993) *
                C25564) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C1725 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C50801) *
              C50721 * C1076 +
          (((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
             C35137 * C50874) *
                C25564 +
            (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
             (C2790 + C2791) * C50874) *
                C50680) *
               C50801 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C1725) *
              C50721 * C1077 +
          (((C2394 * C31993 + C2395 * C31991 + C35526 * C31994 +
             C35527 * C50874) *
                C25564 +
            ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
             (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
                C50680) *
               C1725 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50874 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C31994 +
             (C3116 + C3115) * C31991 + (C3114 + C3113) * C31993) *
                C50680 +
            ((C2791 + C2790) * C50874 + (C2789 + C2788) * C31994 +
             C3101 * C31991 + C3102 * C31993) *
                C25564) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C31993 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C31991 +
            (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
               C25564 +
           ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
            C35132 * C31994 + C35133 * C50874) *
               C50680) *
              C1891 -
          ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
            C35135 * C31993) *
               C50680 +
           ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
            (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
               C25564) *
              C1892 +
          ((C18491 * C31993 + C18492 * C31991 + (C18486 + C18485) * C31994 +
            (C18484 + C18483) * C50874) *
               C25564 +
           (C35136 * C31993 + C35137 * C31991 + (C18487 + C18488) * C31994 +
            (C18489 + C18490) * C50874) *
               C50680) *
              C1893 -
          (((C2344 * C16659 + C50848 * C16661 + C2343 * C7428 +
             C50978 * C7433) *
                C50874 +
            (C2344 * C16658 + C50848 * C16660 + C2343 * C7424 +
             C50978 * C7429) *
                C31994 +
            (C18490 + C18489) * C31991 + (C18488 + C18487) * C31993) *
               C50680 +
           ((C20336 + C20335) * C50874 + (C20334 + C20333) * C31994 +
            C20323 * C31991 + C20324 * C31993) *
               C25564) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C51014 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C51015 +
           ((C18491 * C31993 + C18492 * C31991 + (C18486 + C18485) * C31994 +
             (C18484 + C18483) * C50874) *
                C25564 +
            (C35136 * C31993 + C35137 * C31991 + (C18487 + C18488) * C31994 +
             (C18489 + C18490) * C50874) *
                C50680) *
               C2141) *
              C50721 * C50960 +
          (((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
             C35137 * C50874) *
                C25564 +
            (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
             (C2790 + C2791) * C50874) *
                C50680) *
               C51015 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C51014 -
           (((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                 C50874 +
             (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                 C31994 +
             (C2791 + C2790) * C31991 + (C2789 + C2788) * C31993) *
                C50680 +
            ((C18490 + C18489) * C50874 + (C18488 + C18487) * C31994 +
             C18473 * C31991 + C18474 * C31993) *
                C25564) *
               C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C1725 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C50801) *
              C50721 * C1076 +
          (((C35132 * C31993 + C35133 * C31991 + C35136 * C31994 +
             C35137 * C50874) *
                C25564 +
            (C35526 * C31993 + C35527 * C31991 + (C2788 + C2789) * C31994 +
             (C2790 + C2791) * C50874) *
                C50680) *
               C50801 -
           ((C3101 * C50874 + C3102 * C31994 + (C2385 + C2384) * C31991 +
             (C2383 + C2382) * C31993) *
                C50680 +
            (C35134 * C50874 + C35135 * C31994 + (C2381 + C2380) * C31991 +
             (C2379 + C2378) * C31993) *
                C25564) *
               C1725) *
              C50721 * C1077 +
          (((C2394 * C31993 + C2395 * C31991 + C35526 * C31994 +
             C35527 * C50874) *
                C25564 +
            ((C2389 + C2388) * C31993 + (C2387 + C2386) * C31991 +
             (C3113 + C3114) * C31994 + (C3115 + C3116) * C50874) *
                C50680) *
               C1725 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50874 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C31994 +
             (C3116 + C3115) * C31991 + (C3114 + C3113) * C31993) *
                C50680 +
            ((C2791 + C2790) * C50874 + (C2789 + C2788) * C31994 +
             C3101 * C31991 + C3102 * C31993) *
                C25564) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C31993 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C31991 +
             (C18475 + C18476) * C31994 + (C18477 + C18478) * C50874) *
                C25564 +
            ((C2378 + C2379) * C31993 + (C2380 + C2381) * C31991 +
             C35132 * C31994 + C35133 * C50874) *
                C50680) *
               C1725 -
           ((C18473 * C50874 + C18474 * C31994 + C35134 * C31991 +
             C35135 * C31993) *
                C50680 +
            ((C18482 + C18481) * C50874 + (C18480 + C18479) * C31994 +
             (C18478 + C18477) * C31991 + (C18476 + C18475) * C31993) *
                C25564) *
               C50801) *
              C289 +
          ((((C19003 + C19004) * C31993 + (C19005 + C19006) * C31991 +
             (C19007 + C19008) * C31994 + (C19009 + C19010) * C50874) *
                C25564 +
            (C35786 * C31993 + C35787 * C31991 + (C19011 + C19012) * C31994 +
             (C19013 + C19014) * C50874) *
                C50680) *
               C50801 -
           ((C35788 * C50874 + C35789 * C31994 + (C2586 + C2587) * C31991 +
             (C2588 + C2589) * C31993) *
                C50680 +
            ((C19006 + C19005) * C50874 + (C19004 + C19003) * C31994 +
             (C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C31991 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C31993) *
                C25564) *
               C1725) *
              C290 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C31993 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C31991 +
             (C19921 + C19922) * C31994 + (C19923 + C19924) * C50874) *
                C25564 +
            ((C2590 + C2591) * C31993 + (C2592 + C2593) * C31991 +
             (C34934 + C34935) * C31994 + (C34936 + C34937) * C50874) *
                C50680) *
               C1725 -
           (((C2344 * C9391 + C50848 * C9395 + C2343 * C3742 + C50978 * C3747) *
                 C50874 +
             (C2344 * C9389 + C50848 * C9392 + C2343 * C3738 + C50978 * C3743) *
                 C31994 +
             (C34937 + C34936) * C31991 + (C34935 + C34934) * C31993) *
                C50680 +
            ((C19928 + C19927) * C50874 + (C19926 + C19925) * C31994 +
             (C19924 + C19923) * C31991 + (C19922 + C19921) * C31993) *
                C25564) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50737 * C50968 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50737 * C50773) *
              C51010 +
          (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
            (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
               C50737 * C50773 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50737 * C50968) *
              C51011 +
          (((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
            (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
               C50737 * C50968 -
           (((C117 * C1268 + C50832 * C1276) * C38217 +
             (C117 * C1264 + C50832 * C1269) * C38220 + C970 * C51008 +
             C969 * C38219 + C359 * C51017 + C360 * C38218) *
                C50680 +
            (C38707 + C38706 + C38705 + C38704 + C38703 + C38702) * C25564) *
               C50737 * C50773) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C38218 +
              (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
              C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                 C25564 +
             (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
                C50969 -
            ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
             (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 +
              C5611 * C38219 + C5609 * C51017 + C5608 * C38218) *
                 C25564) *
                C50801) *
               C50968 +
           (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 +
              C6541 * C51008 + C16667 * C38220 + C16668 * C38217) *
                 C25564 +
             (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
                C50801 -
            ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
             (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 +
              C6136 * C38219 + (C117 * C310 + C50832 * C327) * C51017 +
              (C117 * C297 + C50832 * C311) * C38218) *
                 C25564) *
                C50969) *
               C50773) *
              C292 +
          ((((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
             (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
                C50801 -
            ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
             (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
                C50969) *
               C50968 +
           (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
             (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
                C50969 -
            (((C117 * C4640 + C50832 * C4646) * C38217 +
              (C117 * C4637 + C50832 * C4641) * C38220 + C6141 * C51008 +
              C6140 * C38219 + C968 * C51017 + C967 * C38218) *
                 C50680 +
             (C39059 + C39058 + C39057 + C39056 + C39055 + C39054) * C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50737 * C289 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C38218 +
             (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
             C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
                C25564 +
            (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
               C50737 * C291) *
              C292 +
          (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
            (C362 * C38218 + C361 * C51017 + C967 * C38219 + C968 * C51008 +
             C6140 * C38220 + C6141 * C38217) *
                C50680) *
               C50737 * C290 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50737 * C289 -
           (((C117 * C3740 + C50832 * C3746) * C38217 +
             (C117 * C3737 + C50832 * C3741) * C38220 + C5429 * C51008 +
             C5428 * C38219 + C368 * C51017 + C367 * C38218) *
                C50680 +
            (C38397 + C38396 + C38395 + C38394 + C38393 + C38392) * C25564) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C38218 +
            (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
            C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
               C25564 +
           (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
              C50737 * C50721 * C113 -
          ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
           (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
              C50737 * C50721 * C114 +
          ((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
           (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
              C50737 * C50721 * C115 -
          (((C117 * C511 + C50832 * C522) * C38217 +
            (C117 * C492 + C50832 * C512) * C38220 + C800 * C51008 +
            C799 * C38219 + C174 * C51017 + C175 * C38218) *
               C50680 +
           (C38239 + C38238 + C38237 + C38236 + C38235 + C38234) * C25564) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C480 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C481 +
           ((C5611 * C38218 + C5610 * C51017 + C7440 * C38219 + C7441 * C51008 +
             C17563 * C38220 + C17564 * C38217) *
                C25564 +
            (C38550 + C38551 + C38552 + C38553 + C38554 + C38555) * C50680) *
               C482) *
              C50721 * C292 +
          (((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
            (C551 * C38218 + C550 * C51017 + C556 * C38219 + C557 * C51008 +
             C5614 * C38220 + C5615 * C38217) *
                C50680) *
               C481 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C480 -
           (((C117 * C7426 + C50832 * C7432) * C38217 +
             (C117 * C7423 + C50832 * C7427) * C38220 + C5615 * C51008 +
             C5614 * C38219 + C557 * C51017 + C556 * C38218) *
                C50680 +
            (C38555 + C38554 + C38553 + C38552 + C38551 + C38550) * C25564) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50969 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C50801) *
              C50721 * C51010 +
          (((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
            (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
               C50801 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50969) *
              C50721 * C51011 +
          (((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
            (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
               C50969 -
           (((C117 * C1899 + C50832 * C1907) * C38217 +
             (C117 * C1895 + C50832 * C1900) * C38220 + C559 * C51008 +
             C558 * C38219 + C548 * C51017 + C549 * C38218) *
                C50680 +
            (C38859 + C38858 + C38857 + C38856 + C38855 + C38854) * C25564) *
               C50801) *
              C50721 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C38218 +
            (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
            C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
               C25564 +
           (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
              C50737 * C50721 * C113 -
          ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
           (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
              C50737 * C50721 * C114 +
          ((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
           (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
              C50737 * C50721 * C115 -
          (((C117 * C511 + C50832 * C522) * C38217 +
            (C117 * C492 + C50832 * C512) * C38220 + C800 * C51008 +
            C799 * C38219 + C174 * C51017 + C175 * C38218) *
               C50680 +
           (C38239 + C38238 + C38237 + C38236 + C38235 + C38234) * C25564) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50737 * C289 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C38218 +
             (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
             C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
                C25564 +
            (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
               C50737 * C291) *
              C292 +
          (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
            (C362 * C38218 + C361 * C51017 + C967 * C38219 + C968 * C51008 +
             C6140 * C38220 + C6141 * C38217) *
                C50680) *
               C50737 * C290 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50737 * C289 -
           (((C117 * C3740 + C50832 * C3746) * C38217 +
             (C117 * C3737 + C50832 * C3741) * C38220 + C5429 * C51008 +
             C5428 * C38219 + C368 * C51017 + C367 * C38218) *
                C50680 +
            (C38397 + C38396 + C38395 + C38394 + C38393 + C38392) * C25564) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50737 * C51012 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50737 * C51013 +
           (((C117 * C298 + C50832 * C312) * C38218 +
             (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
             C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
                C25564 +
            (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
               C50737 * C1380) *
              C50960 +
          (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
            (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
               C50737 * C51013 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50737 * C51012 -
           (((C117 * C3740 + C50832 * C3746) * C38217 +
             (C117 * C3737 + C50832 * C3741) * C38220 + C5429 * C51008 +
             C5428 * C38219 + C368 * C51017 + C367 * C38218) *
                C50680 +
            (C38397 + C38396 + C38395 + C38394 + C38393 + C38392) * C25564) *
               C50737 * C1380) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50969 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C50801) *
              C51012 +
          (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 + C6541 * C51008 +
             C16667 * C38220 + C16668 * C38217) *
                C25564 +
            (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
               C50801 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50969) *
              C51013 +
          ((((C117 * C298 + C50832 * C312) * C38218 +
             (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
             C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
                C25564 +
            (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
               C50969 -
           (((C117 * C10283 + C50832 * C10287) * C38217 +
             (C117 * C10281 + C50832 * C10284) * C38220 + C15592 * C51008 +
             C15591 * C38219 + C5427 * C51017 + C5426 * C38218) *
                C50680 +
            (C22018 * C38217 + C22017 * C38220 + C17160 * C51008 +
             C17159 * C38219 + C7033 * C51017 + C7032 * C38218) *
                C25564) *
               C50801) *
              C1380) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C38218 +
            (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
            C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
               C25564 +
           (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
              C50737 * C1145 -
          ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
           (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
            (C117 * C310 + C50832 * C327) * C51017 +
            (C117 * C297 + C50832 * C311) * C38218) *
               C25564) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C38218 +
            (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
            C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
               C25564 +
           (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
              C50737 * C1147 -
          (((C117 * C9391 + C50832 * C9395) * C38217 +
            (C117 * C9389 + C50832 * C9392) * C38220 +
            (C117 * C4240 + C50832 * C4245) * C51008 +
            (C117 * C4236 + C50832 * C4241) * C38219 +
            (C117 * C1158 + C50832 * C1164) * C51017 +
            (C117 * C1152 + C50832 * C1159) * C38218) *
               C50680 +
           ((C117 * C9393 + C50832 * C9396) * C38217 +
            (C117 * C9390 + C50832 * C9394) * C38220 +
            (C117 * C4242 + C50832 * C4246) * C51008 +
            (C117 * C4237 + C50832 * C4243) * C38219 +
            (C117 * C1160 + C50832 * C1165) * C51017 +
            (C117 * C1153 + C50832 * C1161) * C38218) *
               C25564) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50737 * C1074 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50737 * C50773) *
              C1076 +
          (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
            (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
               C50737 * C50773 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50737 * C1074) *
              C1077 +
          (((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
            (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
               C50737 * C1074 -
           (((C117 * C1268 + C50832 * C1276) * C38217 +
             (C117 * C1264 + C50832 * C1269) * C38220 + C970 * C51008 +
             C969 * C38219 + C359 * C51017 + C360 * C38218) *
                C50680 +
            (C38707 + C38706 + C38705 + C38704 + C38703 + C38702) * C25564) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C480 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C481 +
           ((C5611 * C38218 + C5610 * C51017 + C7440 * C38219 + C7441 * C51008 +
             C17563 * C38220 + C17564 * C38217) *
                C25564 +
            (C38550 + C38551 + C38552 + C38553 + C38554 + C38555) * C50680) *
               C482) *
              C1074 +
          (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 + C6541 * C51008 +
             C16667 * C38220 + C16668 * C38217) *
                C25564 +
            (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
               C481 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C480 -
           (((C117 * C16659 + C50832 * C16661) * C38217 +
             (C117 * C16658 + C50832 * C16660) * C38220 + C16266 * C51008 +
             C16265 * C38219 + C6139 * C51017 + C6138 * C38218) *
                C50680 +
            (C21686 * C38217 + C21685 * C38220 + C16668 * C51008 +
             C16667 * C38219 + C6541 * C51017 + C6540 * C38218) *
                C25564) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C38218 +
              (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
              C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                 C25564 +
             (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
                C50969 -
            ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
             (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 +
              C5611 * C38219 + C5609 * C51017 + C5608 * C38218) *
                 C25564) *
                C50801) *
               C1074 +
           (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 +
              C6541 * C51008 + C16667 * C38220 + C16668 * C38217) *
                 C25564 +
             (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
                C50801 -
            ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
             (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 +
              C6136 * C38219 + (C117 * C310 + C50832 * C327) * C51017 +
              (C117 * C297 + C50832 * C311) * C38218) *
                 C25564) *
                C50969) *
               C50773) *
              C50960 +
          ((((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
             (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
                C50801 -
            ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
             (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
                C50969) *
               C1074 +
           (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
             (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
                C50969 -
            (((C117 * C4640 + C50832 * C4646) * C38217 +
              (C117 * C4637 + C50832 * C4641) * C38220 + C6141 * C51008 +
              C6140 * C38219 + C968 * C51017 + C967 * C38218) *
                 C50680 +
             (C39059 + C39058 + C39057 + C39056 + C39055 + C39054) * C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C50737 * C1074 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C50737 * C50773) *
              C1076 +
          (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
            (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
               C50737 * C50773 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C50737 * C1074) *
              C1077 +
          (((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
            (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
               C50737 * C1074 -
           (((C117 * C1268 + C50832 * C1276) * C38217 +
             (C117 * C1264 + C50832 * C1269) * C38220 + C970 * C51008 +
             C969 * C38219 + C359 * C51017 + C360 * C38218) *
                C50680 +
            (C38707 + C38706 + C38705 + C38704 + C38703 + C38702) * C25564) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C38218 +
            (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
            C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
               C25564 +
           (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
              C50737 * C1145 -
          ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
           (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
            (C117 * C310 + C50832 * C327) * C51017 +
            (C117 * C297 + C50832 * C311) * C38218) *
               C25564) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C38218 +
            (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
            C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
               C25564 +
           (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
              C50737 * C1147 -
          (((C117 * C9391 + C50832 * C9395) * C38217 +
            (C117 * C9389 + C50832 * C9392) * C38220 +
            (C117 * C4240 + C50832 * C4245) * C51008 +
            (C117 * C4236 + C50832 * C4241) * C38219 +
            (C117 * C1158 + C50832 * C1164) * C51017 +
            (C117 * C1152 + C50832 * C1159) * C38218) *
               C50680 +
           ((C117 * C9393 + C50832 * C9396) * C38217 +
            (C117 * C9390 + C50832 * C9394) * C38220 +
            (C117 * C4242 + C50832 * C4246) * C51008 +
            (C117 * C4237 + C50832 * C4243) * C38219 +
            (C117 * C1160 + C50832 * C1165) * C51017 +
            (C117 * C1153 + C50832 * C1161) * C38218) *
               C25564) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C38218 +
              (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
              C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                 C25564 +
             (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
                C1725 -
            ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
             (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 +
              C5611 * C38219 + C5609 * C51017 + C5608 * C38218) *
                 C25564) *
                C50801) *
               C50968 +
           (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 +
              C6541 * C51008 + C16667 * C38220 + C16668 * C38217) *
                 C25564 +
             (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
                C50801 -
            ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
             (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 +
              C6136 * C38219 + (C117 * C310 + C50832 * C327) * C51017 +
              (C117 * C297 + C50832 * C311) * C38218) *
                 C25564) *
                C1725) *
               C50773) *
              C50960 +
          ((((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
             (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
                C50801 -
            ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
             (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
                C1725) *
               C50968 +
           (((C38391 + C38390 + C38389 + C38388 + C38387 + C38386) * C25564 +
             (C38702 + C38703 + C38704 + C38705 + C38706 + C38707) * C50680) *
                C1725 -
            (((C117 * C4640 + C50832 * C4646) * C38217 +
              (C117 * C4637 + C50832 * C4641) * C38220 + C6141 * C51008 +
              C6140 * C38219 + C968 * C51017 + C967 * C38218) *
                 C50680 +
             (C39059 + C39058 + C39057 + C39056 + C39055 + C39054) * C25564) *
                C50801) *
               C50773) *
              C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C51014 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C51015 +
           ((C5611 * C38218 + C5610 * C51017 + C7440 * C38219 + C7441 * C51008 +
             C17563 * C38220 + C17564 * C38217) *
                C25564 +
            (C38550 + C38551 + C38552 + C38553 + C38554 + C38555) * C50680) *
               C2141) *
              C50968 +
          (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 + C6541 * C51008 +
             C16667 * C38220 + C16668 * C38217) *
                C25564 +
            (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
               C51015 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C51014 -
           (((C117 * C16659 + C50832 * C16661) * C38217 +
             (C117 * C16658 + C50832 * C16660) * C38220 + C16266 * C51008 +
             C16265 * C38219 + C6139 * C51017 + C6138 * C38218) *
                C50680 +
            (C21686 * C38217 + C21685 * C38220 + C16668 * C51008 +
             C16667 * C38219 + C6541 * C51017 + C6540 * C38218) *
                C25564) *
               C2141) *
              C50773) *
         C50702) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C1725 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C50801) *
              C289 +
          (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 + C6541 * C51008 +
             C16667 * C38220 + C16668 * C38217) *
                C25564 +
            (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
               C50801 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C38218 +
             (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
             C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
                C25564 +
            (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
               C1725 -
           (((C117 * C10283 + C50832 * C10287) * C38217 +
             (C117 * C10281 + C50832 * C10284) * C38220 + C15592 * C51008 +
             C15591 * C38219 + C5427 * C51017 + C5426 * C38218) *
                C50680 +
            (C22018 * C38217 + C22017 * C38220 + C17160 * C51008 +
             C17159 * C38219 + C7033 * C51017 + C7032 * C38218) *
                C25564) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C1725 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C50801) *
              C50721 * C1076 +
          (((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
            (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
               C50801 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C1725) *
              C50721 * C1077 +
          (((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
            (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
               C1725 -
           (((C117 * C1899 + C50832 * C1907) * C38217 +
             (C117 * C1895 + C50832 * C1900) * C38220 + C559 * C51008 +
             C558 * C38219 + C548 * C51017 + C549 * C38218) *
                C50680 +
            (C38859 + C38858 + C38857 + C38856 + C38855 + C38854) * C25564) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C38218 +
            (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
            C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
               C25564 +
           (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
              C1891 -
          ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
           (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
            C5609 * C51017 + C5608 * C38218) *
               C25564) *
              C1892 +
          ((C5611 * C38218 + C5610 * C51017 + C7440 * C38219 + C7441 * C51008 +
            C17563 * C38220 + C17564 * C38217) *
               C25564 +
           (C38550 + C38551 + C38552 + C38553 + C38554 + C38555) * C50680) *
              C1893 -
          (((C117 * C17552 + C50832 * C17556) * C38217 +
            (C117 * C17550 + C50832 * C17553) * C38220 + C15756 * C51008 +
            C15755 * C38219 + C5613 * C51017 + C5612 * C38218) *
               C50680 +
           (C22290 * C38217 + C22289 * C38220 + C17564 * C51008 +
            C17563 * C38219 + C7441 * C51017 + C7440 * C38218) *
               C25564) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C51014 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C51015 +
           ((C5611 * C38218 + C5610 * C51017 + C7440 * C38219 + C7441 * C51008 +
             C17563 * C38220 + C17564 * C38217) *
                C25564 +
            (C38550 + C38551 + C38552 + C38553 + C38554 + C38555) * C50680) *
               C2141) *
              C50721 * C50960 +
          (((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
            (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
               C51015 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C51014 -
           (((C117 * C7426 + C50832 * C7432) * C38217 +
             (C117 * C7423 + C50832 * C7427) * C38220 + C5615 * C51008 +
             C5614 * C38219 + C557 * C51017 + C556 * C38218) *
                C50680 +
            (C38555 + C38554 + C38553 + C38552 + C38551 + C38550) * C25564) *
               C2141) *
              C50721 * C50708)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C1725 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C50801) *
              C50721 * C1076 +
          (((C38549 + C38548 + C38547 + C38546 + C38545 + C38544) * C25564 +
            (C38854 + C38855 + C38856 + C38857 + C38858 + C38859) * C50680) *
               C50801 -
           ((C38228 + C38229 + C38230 + C38231 + C38232 + C38233) * C50680 +
            (C38227 + C38226 + C38225 + C38224 + C38223 + C38222) * C25564) *
               C1725) *
              C50721 * C1077 +
          (((C38233 + C38232 + C38231 + C38230 + C38229 + C38228) * C25564 +
            (C38234 + C38235 + C38236 + C38237 + C38238 + C38239) * C50680) *
               C1725 -
           (((C117 * C1899 + C50832 * C1907) * C38217 +
             (C117 * C1895 + C50832 * C1900) * C38220 + C559 * C51008 +
             C558 * C38219 + C548 * C51017 + C549 * C38218) *
                C50680 +
            (C38859 + C38858 + C38857 + C38856 + C38855 + C38854) * C25564) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C38218 +
             (C117 * C127 + C50832 * C140) * C51017 + C5608 * C38219 +
             C5609 * C51008 + C5611 * C38220 + C5610 * C38217) *
                C25564 +
            (C38222 + C38223 + C38224 + C38225 + C38226 + C38227) * C50680) *
               C1725 -
           ((C38544 + C38545 + C38546 + C38547 + C38548 + C38549) * C50680 +
            (C7441 * C38217 + C7440 * C38220 + C5610 * C51008 + C5611 * C38219 +
             C5609 * C51017 + C5608 * C38218) *
                C25564) *
               C50801) *
              C289 +
          (((C6136 * C38218 + C6137 * C51017 + C6540 * C38219 + C6541 * C51008 +
             C16667 * C38220 + C16668 * C38217) *
                C25564 +
            (C39054 + C39055 + C39056 + C39057 + C39058 + C39059) * C50680) *
               C50801 -
           ((C38386 + C38387 + C38388 + C38389 + C38390 + C38391) * C50680 +
            (C6541 * C38217 + C6540 * C38220 + C6137 * C51008 + C6136 * C38219 +
             (C117 * C310 + C50832 * C327) * C51017 +
             (C117 * C297 + C50832 * C311) * C38218) *
                C25564) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C38218 +
             (C117 * C313 + C50832 * C328) * C51017 + C7032 * C38219 +
             C7033 * C51008 + C17159 * C38220 + C17160 * C38217) *
                C25564 +
            (C38392 + C38393 + C38394 + C38395 + C38396 + C38397) * C50680) *
               C1725 -
           (((C117 * C10283 + C50832 * C10287) * C38217 +
             (C117 * C10281 + C50832 * C10284) * C38220 + C15592 * C51008 +
             C15591 * C38219 + C5427 * C51017 + C5426 * C38218) *
                C50680 +
            (C22018 * C38217 + C22017 * C38220 + C17160 * C51008 +
             C17159 * C38219 + C7033 * C51017 + C7032 * C38218) *
                C25564) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[180] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50737 * C50968 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50832 * C327) * C50862 +
                      (C117 * C297 + C50832 * C311) * C118) *
                         C107) *
                        C50737 * C50773) *
                       C51010 +
                   (((C376 + C375) * C107 + (C374 + C373) * C108 +
                     (C372 + C371) * C109 + (C687 + C688) * C110) *
                        C50737 * C50773 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50737 * C50968) *
                       C51011 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C50737 * C50968 -
                    (((C117 * C675 + C50832 * C677) * C50862 +
                      (C117 * C674 + C50832 * C676) * C118) *
                         C110 +
                     (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
                        C50737 * C50773) *
                       C673)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C50737 * C50968 -
                    (((C8258 + C8259 + C8260) * C50862 +
                      (C8261 + C8262 + C8263) * C118) *
                         C50680 +
                     ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                       C8026 * C328 + C8030 * C310 + C8025 * C327) *
                          C50862 +
                      (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                       C8026 * C312 + C8030 * C297 + C8025 * C311) *
                          C118) *
                         C50951) *
                        C50737 * C50773) *
                       C51010 +
                   ((((C8263 + C8262 + C8261) * C118 +
                      (C8260 + C8259 + C8258) * C50862) *
                         C50951 +
                     ((C8610 + C8611 + C8612) * C118 +
                      (C8613 + C8614 + C8615) * C50862) *
                         C50680) *
                        C50737 * C50773 -
                    (((C8076 + C8077 + C8078) * C50862 +
                      (C8079 + C8080 + C8081) * C118) *
                         C50680 +
                     ((C8075 + C8074 + C8073) * C50862 +
                      (C8072 + C8071 + C8070) * C118) *
                         C50951) *
                        C50737 * C50968) *
                       C51011 +
                   ((((C8081 + C8080 + C8079) * C118 +
                      (C8078 + C8077 + C8076) * C50862) *
                         C50951 +
                     ((C8082 + C8083 + C8084) * C118 +
                      (C8085 + C8086 + C8087) * C50862) *
                         C50680) *
                        C50737 * C50968 -
                    (((C8032 * C1154 + C8027 * C1162 + C8031 * C319 +
                       C8026 * C331 + C8030 * C304 + C8025 * C324) *
                          C50862 +
                      (C8032 * C1150 + C8027 * C1155 + C8031 * C301 +
                       C8026 * C318 + C8030 * C294 + C8025 * C305) *
                          C118) *
                         C50680 +
                     ((C8615 + C8614 + C8613) * C50862 +
                      (C8612 + C8611 + C8610) * C118) *
                         C50951) *
                        C50737 * C50773) *
                       C673)) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C50832 * C126) * C118 +
                       (C117 * C127 + C50832 * C140) * C50862) *
                          C107 +
                      (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                         C50969 -
                     (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                      ((C117 * C499 + C50832 * C516) * C50862 +
                       (C117 * C486 + C50832 * C500) * C118) *
                          C107) *
                         C50801) *
                        C50968 +
                    ((((C117 * C932 + C50832 * C937) * C118 +
                       (C117 * C938 + C50832 * C947) * C50862) *
                          C107 +
                      (C971 + C972) * C108 + (C973 + C974) * C109 +
                      (C975 + C976) * C110) *
                         C50801 -
                     (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                      ((C117 * C310 + C50832 * C327) * C50862 +
                       (C117 * C297 + C50832 * C311) * C118) *
                          C107) *
                         C50969) *
                        C50773) *
                       C292 +
                   ((((C565 + C564) * C107 + (C563 + C562) * C108 +
                      (C561 + C560) * C109 + (C801 + C802) * C110) *
                         C50801 -
                     (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                      (C179 + C178) * C107) *
                         C50969) *
                        C50968 +
                    (((C376 + C375) * C107 + (C374 + C373) * C108 +
                      (C372 + C371) * C109 + (C687 + C688) * C110) *
                         C50969 -
                     (((C117 * C945 + C50832 * C951) * C50862 +
                       (C117 * C936 + C50832 * C946) * C118) *
                          C110 +
                      (C976 + C975) * C109 + (C974 + C973) * C108 +
                      (C972 + C971) * C107) *
                         C50801) *
                        C50773) *
                       C50708)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                        C8026 * C311 + C8032 * C298 + C8027 * C312) *
                           C118 +
                       (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                        C8026 * C327 + C8032 * C313 + C8027 * C328) *
                           C50862) *
                          C50951 +
                      ((C8070 + C8071 + C8072) * C118 +
                       (C8073 + C8074 + C8075) * C50862) *
                          C50680) *
                         C50969 -
                     (((C8440 + C8441 + C8442) * C50862 +
                       (C8443 + C8444 + C8445) * C118) *
                          C50680 +
                      ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                        C8026 * C947 + C8030 * C499 + C8025 * C516) *
                           C50862 +
                       (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                        C8026 * C937 + C8030 * C486 + C8025 * C500) *
                           C118) *
                          C50951) *
                         C50801) *
                        C50968 +
                    ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 +
                        C8026 * C1622 + C8032 * C4237 + C8027 * C4243) *
                           C118 +
                       (C8030 * C938 + C8025 * C947 + C8031 * C1621 +
                        C8026 * C1626 + C8032 * C4242 + C8027 * C4246) *
                           C50862) *
                          C50951 +
                      ((C8986 + C8987 + C8988) * C118 +
                       (C8989 + C8990 + C8991) * C50862) *
                          C50680) *
                         C50801 -
                     (((C8258 + C8259 + C8260) * C50862 +
                       (C8261 + C8262 + C8263) * C118) *
                          C50680 +
                      ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                        C8026 * C328 + C8030 * C310 + C8025 * C327) *
                           C50862 +
                       (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                        C8026 * C312 + C8030 * C297 + C8025 * C311) *
                           C118) *
                          C50951) *
                         C50969) *
                        C50773) *
                       C292 +
                   (((((C8445 + C8444 + C8443) * C118 +
                       (C8442 + C8441 + C8440) * C50862) *
                          C50951 +
                      ((C8774 + C8775 + C8776) * C118 +
                       (C8777 + C8778 + C8779) * C50862) *
                          C50680) *
                         C50801 -
                     (((C8076 + C8077 + C8078) * C50862 +
                       (C8079 + C8080 + C8081) * C118) *
                          C50680 +
                      ((C8075 + C8074 + C8073) * C50862 +
                       (C8072 + C8071 + C8070) * C118) *
                          C50951) *
                         C50969) *
                        C50968 +
                    ((((C8263 + C8262 + C8261) * C118 +
                       (C8260 + C8259 + C8258) * C50862) *
                          C50951 +
                      ((C8610 + C8611 + C8612) * C118 +
                       (C8613 + C8614 + C8615) * C50862) *
                          C50680) *
                         C50969 -
                     (((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 +
                        C8026 * C1624 + C8030 * C942 + C8025 * C949) *
                           C50862 +
                       (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 +
                        C8026 * C1618 + C8030 * C934 + C8025 * C941) *
                           C118) *
                          C50680 +
                      ((C8991 + C8990 + C8989) * C50862 +
                       (C8988 + C8987 + C8986) * C118) *
                          C50951) *
                         C50801) *
                        C50773) *
                       C50708)) /
                     (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50737 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C50832 * C320) * C118 +
             (C117 * C321 + C50832 * C332) * C50862) *
                C110) *
               C50737 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C289 -
           (((C117 * C322 + C50832 * C333) * C50862 +
             (C117 * C303 + C50832 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50737 * C50721 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50737 * C50721 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50737 * C50721 * C115 -
          (((C117 * C138 + C50832 * C146) * C50862 +
            (C117 * C125 + C50832 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           ((C560 + C561) * C110 + (C562 + C563) * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50832 * C501) * C118 +
             (C117 * C502 + C50832 * C517) * C50862) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C50721 * C292 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            ((C117 * C491 + C50832 * C509) * C118 +
             (C117 * C510 + C50832 * C521) * C50862) *
                C110) *
               C481 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C480 -
           (((C117 * C511 + C50832 * C522) * C50862 +
             (C117 * C492 + C50832 * C512) * C118) *
                C110 +
            (C571 + C570) * C109 + (C569 + C568) * C108 +
            (C567 + C566) * C107) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C50721 * C113 -
          (((C8076 + C8077 + C8078) * C50862 + (C8079 + C8080 + C8081) * C118) *
               C50680 +
           ((C8075 + C8074 + C8073) * C50862 + (C8072 + C8071 + C8070) * C118) *
               C50951) *
              C50737 * C50721 * C114 +
          (((C8081 + C8080 + C8079) * C118 + (C8078 + C8077 + C8076) * C50862) *
               C50951 +
           ((C8082 + C8083 + C8084) * C118 + (C8085 + C8086 + C8087) * C50862) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C8032 * C322 + C8027 * C333 + C8031 * C321 + C8026 * C332 +
             C8030 * C134 + C8025 * C144) *
                C50862 +
            (C8032 * C303 + C8027 * C323 + C8031 * C302 + C8026 * C320 +
             C8030 * C123 + C8025 * C135) *
                C118) *
               C50680 +
           ((C8087 + C8086 + C8085) * C50862 + (C8084 + C8083 + C8082) * C118) *
               C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C289 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C290 +
           (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8030 * C295 + C8025 * C307 + C8031 * C300 + C8026 * C316 +
              C8032 * C1151 + C8027 * C1157) *
                 C118 +
             (C8030 * C306 + C8025 * C325 + C8031 * C317 + C8026 * C330 +
              C8032 * C1156 + C8027 * C1163) *
                 C50862) *
                C50680) *
               C50737 * C290 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C289 -
           (((C8032 * C3582 + C8027 * C3588 + C8031 * C1156 + C8026 * C1163 +
              C8030 * C317 + C8025 * C330) *
                 C50862 +
             (C8032 * C3579 + C8027 * C3583 + C8031 * C1151 + C8026 * C1157 +
              C8030 * C300 + C8025 * C316) *
                 C118) *
                C50680 +
            ((C8269 + C8268 + C8267) * C50862 +
             (C8266 + C8265 + C8264) * C118) *
                C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C480 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C481 +
           (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
              C8032 * C3739 + C8027 * C3745) *
                 C118 +
             (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
              C8032 * C3744 + C8027 * C3748) *
                 C50862) *
                C50951 +
            ((C8446 + C8447 + C8448) * C118 +
             (C8449 + C8450 + C8451) * C50862) *
                C50680) *
               C482) *
              C50721 * C292 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8030 * C484 + C8025 * C496 + C8031 * C934 + C8026 * C941 +
              C8032 * C1612 + C8027 * C1618) *
                 C118 +
             (C8030 * C495 + C8025 * C514 + C8031 * C942 + C8026 * C949 +
              C8032 * C1617 + C8027 * C1624) *
                 C50862) *
                C50680) *
               C481 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C480 -
           (((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
              C8030 * C506 + C8025 * C519) *
                 C50862 +
             (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
              C8030 * C489 + C8025 * C505) *
                 C118) *
                C50680 +
            ((C8451 + C8450 + C8449) * C50862 +
             (C8448 + C8447 + C8446) * C118) *
                C50951) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50969 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50832 * C516) * C50862 +
                      (C117 * C486 + C50832 * C500) * C118) *
                         C107) *
                        C50801) *
                       C50721 * C51010 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50801 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50969) *
                       C50721 * C51011 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C50969 -
                    (((C117 * C789 + C50832 * C791) * C50862 +
                      (C117 * C788 + C50832 * C790) * C118) *
                         C110 +
                     (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                        C50801) *
                       C50721 * C673)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C50969 -
                    (((C8440 + C8441 + C8442) * C50862 +
                      (C8443 + C8444 + C8445) * C118) *
                         C50680 +
                     ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                       C8026 * C947 + C8030 * C499 + C8025 * C516) *
                          C50862 +
                      (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                       C8026 * C937 + C8030 * C486 + C8025 * C500) *
                          C118) *
                         C50951) *
                        C50801) *
                       C50721 * C51010 +
                   ((((C8445 + C8444 + C8443) * C118 +
                      (C8442 + C8441 + C8440) * C50862) *
                         C50951 +
                     ((C8774 + C8775 + C8776) * C118 +
                      (C8777 + C8778 + C8779) * C50862) *
                         C50680) *
                        C50801 -
                    (((C8076 + C8077 + C8078) * C50862 +
                      (C8079 + C8080 + C8081) * C118) *
                         C50680 +
                     ((C8075 + C8074 + C8073) * C50862 +
                      (C8072 + C8071 + C8070) * C118) *
                         C50951) *
                        C50969) *
                       C50721 * C51011 +
                   ((((C8081 + C8080 + C8079) * C118 +
                      (C8078 + C8077 + C8076) * C50862) *
                         C50951 +
                     ((C8082 + C8083 + C8084) * C118 +
                      (C8085 + C8086 + C8087) * C50862) *
                         C50680) *
                        C50969 -
                    (((C8032 * C1615 + C8027 * C1623 + C8031 * C944 +
                       C8026 * C950 + C8030 * C493 + C8025 * C513) *
                          C50862 +
                      (C8032 * C1611 + C8027 * C1616 + C8031 * C935 +
                       C8026 * C943 + C8030 * C483 + C8025 * C494) *
                          C118) *
                         C50680 +
                     ((C8779 + C8778 + C8777) * C50862 +
                      (C8776 + C8775 + C8774) * C118) *
                         C50951) *
                        C50801) *
                       C50721 * C673)) /
                     (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50737 * C50721 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50737 * C50721 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50737 * C50721 * C115 -
          (((C117 * C138 + C50832 * C146) * C50862 +
            (C117 * C125 + C50832 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50737 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C50832 * C320) * C118 +
             (C117 * C321 + C50832 * C332) * C50862) *
                C110) *
               C50737 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C289 -
           (((C117 * C322 + C50832 * C333) * C50862 +
             (C117 * C303 + C50832 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C50721 * C113 -
          (((C8076 + C8077 + C8078) * C50862 + (C8079 + C8080 + C8081) * C118) *
               C50680 +
           ((C8075 + C8074 + C8073) * C50862 + (C8072 + C8071 + C8070) * C118) *
               C50951) *
              C50737 * C50721 * C114 +
          (((C8081 + C8080 + C8079) * C118 + (C8078 + C8077 + C8076) * C50862) *
               C50951 +
           ((C8082 + C8083 + C8084) * C118 + (C8085 + C8086 + C8087) * C50862) *
               C50680) *
              C50737 * C50721 * C115 -
          (((C8032 * C322 + C8027 * C333 + C8031 * C321 + C8026 * C332 +
             C8030 * C134 + C8025 * C144) *
                C50862 +
            (C8032 * C303 + C8027 * C323 + C8031 * C302 + C8026 * C320 +
             C8030 * C123 + C8025 * C135) *
                C118) *
               C50680 +
           ((C8087 + C8086 + C8085) * C50862 + (C8084 + C8083 + C8082) * C118) *
               C50951) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C289 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C290 +
           (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C50737 * C291) *
              C292 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8030 * C295 + C8025 * C307 + C8031 * C300 + C8026 * C316 +
              C8032 * C1151 + C8027 * C1157) *
                 C118 +
             (C8030 * C306 + C8025 * C325 + C8031 * C317 + C8026 * C330 +
              C8032 * C1156 + C8027 * C1163) *
                 C50862) *
                C50680) *
               C50737 * C290 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C289 -
           (((C8032 * C3582 + C8027 * C3588 + C8031 * C1156 + C8026 * C1163 +
              C8030 * C317 + C8025 * C330) *
                 C50862 +
             (C8032 * C3579 + C8027 * C3583 + C8031 * C1151 + C8026 * C1157 +
              C8030 * C300 + C8025 * C316) *
                 C118) *
                C50680 +
            ((C8269 + C8268 + C8267) * C50862 +
             (C8266 + C8265 + C8264) * C118) *
                C50951) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50737 * C51012 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50832 * C327) * C50862 +
                      (C117 * C297 + C50832 * C311) * C118) *
                         C107) *
                        C50737 * C51013 +
                    (((C117 * C298 + C50832 * C312) * C118 +
                      (C117 * C313 + C50832 * C328) * C50862) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C50737 * C1380) *
                       C50960 +
                   (((C376 + C375) * C107 + (C374 + C373) * C108 +
                     (C372 + C371) * C109 + (C687 + C688) * C110) *
                        C50737 * C51013 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50737 * C51012 -
                    (((C117 * C322 + C50832 * C333) * C50862 +
                      (C117 * C303 + C50832 * C323) * C118) *
                         C110 +
                     (C382 + C381) * C109 + (C380 + C379) * C108 +
                     (C378 + C377) * C107) *
                        C50737 * C1380) *
                       C50708)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C50737 * C51012 -
                    (((C8258 + C8259 + C8260) * C50862 +
                      (C8261 + C8262 + C8263) * C118) *
                         C50680 +
                     ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                       C8026 * C328 + C8030 * C310 + C8025 * C327) *
                          C50862 +
                      (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                       C8026 * C312 + C8030 * C297 + C8025 * C311) *
                          C118) *
                         C50951) *
                        C50737 * C51013 +
                    (((C8030 * C298 + C8025 * C312 + C8031 * C1153 +
                       C8026 * C1161 + C8032 * C3581 + C8027 * C3587) *
                          C118 +
                      (C8030 * C313 + C8025 * C328 + C8031 * C1160 +
                       C8026 * C1165 + C8032 * C3586 + C8027 * C3590) *
                          C50862) *
                         C50951 +
                     ((C8264 + C8265 + C8266) * C118 +
                      (C8267 + C8268 + C8269) * C50862) *
                         C50680) *
                        C50737 * C1380) *
                       C50960 +
                   ((((C8263 + C8262 + C8261) * C118 +
                      (C8260 + C8259 + C8258) * C50862) *
                         C50951 +
                     ((C8610 + C8611 + C8612) * C118 +
                      (C8613 + C8614 + C8615) * C50862) *
                         C50680) *
                        C50737 * C51013 -
                    (((C8076 + C8077 + C8078) * C50862 +
                      (C8079 + C8080 + C8081) * C118) *
                         C50680 +
                     ((C8075 + C8074 + C8073) * C50862 +
                      (C8072 + C8071 + C8070) * C118) *
                         C50951) *
                        C50737 * C51012 -
                    (((C8032 * C3582 + C8027 * C3588 + C8031 * C1156 +
                       C8026 * C1163 + C8030 * C317 + C8025 * C330) *
                          C50862 +
                      (C8032 * C3579 + C8027 * C3583 + C8031 * C1151 +
                       C8026 * C1157 + C8030 * C300 + C8025 * C316) *
                          C118) *
                         C50680 +
                     ((C8269 + C8268 + C8267) * C50862 +
                      (C8266 + C8265 + C8264) * C118) *
                         C50951) *
                        C50737 * C1380) *
                       C50708)) /
                     (p * q * std::sqrt(p + q));
    d2ee[186] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50969 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50832 * C516) * C50862 +
                      (C117 * C486 + C50832 * C500) * C118) *
                         C107) *
                        C50801) *
                       C51012 +
                   ((((C117 * C932 + C50832 * C937) * C118 +
                      (C117 * C938 + C50832 * C947) * C50862) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50801 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50832 * C327) * C50862 +
                      (C117 * C297 + C50832 * C311) * C118) *
                         C107) *
                        C50969) *
                       C51013 +
                   ((((C117 * C298 + C50832 * C312) * C118 +
                      (C117 * C313 + C50832 * C328) * C50862) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C50969 -
                    (((C117 * C1615 + C50832 * C1623) * C50862 +
                      (C117 * C1611 + C50832 * C1616) * C118) *
                         C110 +
                     ((C117 * C1617 + C50832 * C1624) * C50862 +
                      (C117 * C1612 + C50832 * C1618) * C118) *
                         C109 +
                     ((C117 * C1619 + C50832 * C1625) * C50862 +
                      (C117 * C1613 + C50832 * C1620) * C118) *
                         C108 +
                     ((C117 * C1621 + C50832 * C1626) * C50862 +
                      (C117 * C1614 + C50832 * C1622) * C118) *
                         C107) *
                        C50801) *
                       C1380) *
                  C50702) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C50969 -
                    (((C8440 + C8441 + C8442) * C50862 +
                      (C8443 + C8444 + C8445) * C118) *
                         C50680 +
                     ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                       C8026 * C947 + C8030 * C499 + C8025 * C516) *
                          C50862 +
                      (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                       C8026 * C937 + C8030 * C486 + C8025 * C500) *
                          C118) *
                         C50951) *
                        C50801) *
                       C51012 +
                   ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 +
                       C8026 * C1622 + C8032 * C4237 + C8027 * C4243) *
                          C118 +
                      (C8030 * C938 + C8025 * C947 + C8031 * C1621 +
                       C8026 * C1626 + C8032 * C4242 + C8027 * C4246) *
                          C50862) *
                         C50951 +
                     ((C8986 + C8987 + C8988) * C118 +
                      (C8989 + C8990 + C8991) * C50862) *
                         C50680) *
                        C50801 -
                    (((C8258 + C8259 + C8260) * C50862 +
                      (C8261 + C8262 + C8263) * C118) *
                         C50680 +
                     ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                       C8026 * C328 + C8030 * C310 + C8025 * C327) *
                          C50862 +
                      (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                       C8026 * C312 + C8030 * C297 + C8025 * C311) *
                          C118) *
                         C50951) *
                        C50969) *
                       C51013 +
                   ((((C8030 * C298 + C8025 * C312 + C8031 * C1153 +
                       C8026 * C1161 + C8032 * C3581 + C8027 * C3587) *
                          C118 +
                      (C8030 * C313 + C8025 * C328 + C8031 * C1160 +
                       C8026 * C1165 + C8032 * C3586 + C8027 * C3590) *
                          C50862) *
                         C50951 +
                     ((C8264 + C8265 + C8266) * C118 +
                      (C8267 + C8268 + C8269) * C50862) *
                         C50680) *
                        C50969 -
                    (((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 +
                       C8026 * C4245 + C8030 * C1619 + C8025 * C1625) *
                          C50862 +
                      (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 +
                       C8026 * C4241 + C8030 * C1613 + C8025 * C1620) *
                          C118) *
                         C50680 +
                     ((C8032 * C9887 + C8027 * C9890 + C8031 * C4242 +
                       C8026 * C4246 + C8030 * C1621 + C8025 * C1626) *
                          C50862 +
                      (C8032 * C9884 + C8027 * C9888 + C8031 * C4237 +
                       C8026 * C4243 + C8030 * C1614 + C8025 * C1622) *
                          C118) *
                         C50951) *
                        C50801) *
                       C1380) *
                  C50702) /
                     (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50737 * C1145 -
          (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C50832 * C327) * C50862 +
            (C117 * C297 + C50832 * C311) * C118) *
               C107) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C118 +
            (C117 * C313 + C50832 * C328) * C50862) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C50737 * C1147 -
          (((C117 * C1154 + C50832 * C1162) * C50862 +
            (C117 * C1150 + C50832 * C1155) * C118) *
               C110 +
           ((C117 * C1156 + C50832 * C1163) * C50862 +
            (C117 * C1151 + C50832 * C1157) * C118) *
               C109 +
           ((C117 * C1158 + C50832 * C1164) * C50862 +
            (C117 * C1152 + C50832 * C1159) * C118) *
               C108 +
           ((C117 * C1160 + C50832 * C1165) * C50862 +
            (C117 * C1153 + C50832 * C1161) * C118) *
               C107) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C1074 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C50773) *
              C1076 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50737 * C50773 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C1074) *
              C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50737 * C1074 -
           (((C117 * C675 + C50832 * C677) * C50862 +
             (C117 * C674 + C50832 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50832 * C501) * C118 +
             (C117 * C502 + C50832 * C517) * C50862) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C1074 +
          ((((C117 * C932 + C50832 * C937) * C118 +
             (C117 * C938 + C50832 * C947) * C50862) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C481 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C480 -
           (((C117 * C1268 + C50832 * C1276) * C50862 +
             (C117 * C1264 + C50832 * C1269) * C118) *
                C110 +
            ((C117 * C1270 + C50832 * C1277) * C50862 +
             (C117 * C1265 + C50832 * C1271) * C118) *
                C109 +
            ((C117 * C1272 + C50832 * C1278) * C50862 +
             (C117 * C1266 + C50832 * C1273) * C118) *
                C108 +
            ((C117 * C1274 + C50832 * C1279) * C50862 +
             (C117 * C1267 + C50832 * C1275) * C118) *
                C107) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8610 + C8611 + C8612) * C118 +
             (C8613 + C8614 + C8615) * C50862) *
                C50680) *
               C50737 * C50773 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C1074) *
              C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8032 * C1154 + C8027 * C1162 + C8031 * C319 + C8026 * C331 +
              C8030 * C304 + C8025 * C324) *
                 C50862 +
             (C8032 * C1150 + C8027 * C1155 + C8031 * C301 + C8026 * C318 +
              C8030 * C294 + C8025 * C305) *
                 C118) *
                C50680 +
            ((C8615 + C8614 + C8613) * C50862 +
             (C8612 + C8611 + C8610) * C118) *
                C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C1145 -
          (((C8258 + C8259 + C8260) * C50862 + (C8261 + C8262 + C8263) * C118) *
               C50680 +
           ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50862 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C118) *
               C50951) *
              C50737 * C1146 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C118 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50862) *
               C50951 +
           ((C8264 + C8265 + C8266) * C118 + (C8267 + C8268 + C8269) * C50862) *
               C50680) *
              C50737 * C1147 -
          (((C8032 * C9237 + C8027 * C9241 + C8031 * C3584 + C8026 * C3589 +
             C8030 * C1158 + C8025 * C1164) *
                C50862 +
            (C8032 * C9235 + C8027 * C9238 + C8031 * C3580 + C8026 * C3585 +
             C8030 * C1152 + C8025 * C1159) *
                C118) *
               C50680 +
           ((C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
             C8030 * C1160 + C8025 * C1165) *
                C50862 +
            (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
             C8030 * C1153 + C8025 * C1161) *
                C118) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C480 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C481 +
           (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
              C8032 * C3739 + C8027 * C3745) *
                 C118 +
             (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
              C8032 * C3744 + C8027 * C3748) *
                 C50862) *
                C50951 +
            ((C8446 + C8447 + C8448) * C118 +
             (C8449 + C8450 + C8451) * C50862) *
                C50680) *
               C482) *
              C1074 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C481 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C480 -
           (((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50862 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C118) *
                C50680 +
            ((C8032 * C9393 + C8027 * C9396 + C8031 * C3744 + C8026 * C3748 +
              C8030 * C1274 + C8025 * C1279) *
                 C50862 +
             (C8032 * C9390 + C8027 * C9394 + C8031 * C3739 + C8026 * C3745 +
              C8030 * C1267 + C8025 * C1275) *
                 C118) *
                C50951) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[188] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C50832 * C126) * C118 +
                       (C117 * C127 + C50832 * C140) * C50862) *
                          C107 +
                      (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                         C50969 -
                     (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                      ((C117 * C499 + C50832 * C516) * C50862 +
                       (C117 * C486 + C50832 * C500) * C118) *
                          C107) *
                         C50801) *
                        C1074 +
                    ((((C117 * C932 + C50832 * C937) * C118 +
                       (C117 * C938 + C50832 * C947) * C50862) *
                          C107 +
                      (C971 + C972) * C108 + (C973 + C974) * C109 +
                      (C975 + C976) * C110) *
                         C50801 -
                     (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                      ((C117 * C310 + C50832 * C327) * C50862 +
                       (C117 * C297 + C50832 * C311) * C118) *
                          C107) *
                         C50969) *
                        C50773) *
                       C50960 +
                   ((((C565 + C564) * C107 + (C563 + C562) * C108 +
                      (C561 + C560) * C109 + (C801 + C802) * C110) *
                         C50801 -
                     (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                      (C179 + C178) * C107) *
                         C50969) *
                        C1074 +
                    (((C376 + C375) * C107 + (C374 + C373) * C108 +
                      (C372 + C371) * C109 + (C687 + C688) * C110) *
                         C50969 -
                     (((C117 * C945 + C50832 * C951) * C50862 +
                       (C117 * C936 + C50832 * C946) * C118) *
                          C110 +
                      (C976 + C975) * C109 + (C974 + C973) * C108 +
                      (C972 + C971) * C107) *
                         C50801) *
                        C50773) *
                       C50708)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                        C8026 * C311 + C8032 * C298 + C8027 * C312) *
                           C118 +
                       (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                        C8026 * C327 + C8032 * C313 + C8027 * C328) *
                           C50862) *
                          C50951 +
                      ((C8070 + C8071 + C8072) * C118 +
                       (C8073 + C8074 + C8075) * C50862) *
                          C50680) *
                         C50969 -
                     (((C8440 + C8441 + C8442) * C50862 +
                       (C8443 + C8444 + C8445) * C118) *
                          C50680 +
                      ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                        C8026 * C947 + C8030 * C499 + C8025 * C516) *
                           C50862 +
                       (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                        C8026 * C937 + C8030 * C486 + C8025 * C500) *
                           C118) *
                          C50951) *
                         C50801) *
                        C1074 +
                    ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 +
                        C8026 * C1622 + C8032 * C4237 + C8027 * C4243) *
                           C118 +
                       (C8030 * C938 + C8025 * C947 + C8031 * C1621 +
                        C8026 * C1626 + C8032 * C4242 + C8027 * C4246) *
                           C50862) *
                          C50951 +
                      ((C8986 + C8987 + C8988) * C118 +
                       (C8989 + C8990 + C8991) * C50862) *
                          C50680) *
                         C50801 -
                     (((C8258 + C8259 + C8260) * C50862 +
                       (C8261 + C8262 + C8263) * C118) *
                          C50680 +
                      ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                        C8026 * C328 + C8030 * C310 + C8025 * C327) *
                           C50862 +
                       (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                        C8026 * C312 + C8030 * C297 + C8025 * C311) *
                           C118) *
                          C50951) *
                         C50969) *
                        C50773) *
                       C50960 +
                   (((((C8445 + C8444 + C8443) * C118 +
                       (C8442 + C8441 + C8440) * C50862) *
                          C50951 +
                      ((C8774 + C8775 + C8776) * C118 +
                       (C8777 + C8778 + C8779) * C50862) *
                          C50680) *
                         C50801 -
                     (((C8076 + C8077 + C8078) * C50862 +
                       (C8079 + C8080 + C8081) * C118) *
                          C50680 +
                      ((C8075 + C8074 + C8073) * C50862 +
                       (C8072 + C8071 + C8070) * C118) *
                          C50951) *
                         C50969) *
                        C1074 +
                    ((((C8263 + C8262 + C8261) * C118 +
                       (C8260 + C8259 + C8258) * C50862) *
                          C50951 +
                      ((C8610 + C8611 + C8612) * C118 +
                       (C8613 + C8614 + C8615) * C50862) *
                          C50680) *
                         C50969 -
                     (((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 +
                        C8026 * C1624 + C8030 * C942 + C8025 * C949) *
                           C50862 +
                       (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 +
                        C8026 * C1618 + C8030 * C934 + C8025 * C941) *
                           C118) *
                          C50680 +
                      ((C8991 + C8990 + C8989) * C50862 +
                       (C8988 + C8987 + C8986) * C118) *
                          C50951) *
                         C50801) *
                        C50773) *
                       C50708)) /
                     (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50737 * C1074 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C50737 * C50773) *
              C1076 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50737 * C50773 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50737 * C1074) *
              C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50737 * C1074 -
           (((C117 * C675 + C50832 * C677) * C50862 +
             (C117 * C674 + C50832 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50737 * C1145 -
          (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C50832 * C327) * C50862 +
            (C117 * C297 + C50832 * C311) * C118) *
               C107) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C118 +
            (C117 * C313 + C50832 * C328) * C50862) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C50737 * C1147 -
          (((C117 * C1154 + C50832 * C1162) * C50862 +
            (C117 * C1150 + C50832 * C1155) * C118) *
               C110 +
           ((C117 * C1156 + C50832 * C1163) * C50862 +
            (C117 * C1151 + C50832 * C1157) * C118) *
               C109 +
           ((C117 * C1158 + C50832 * C1164) * C50862 +
            (C117 * C1152 + C50832 * C1159) * C118) *
               C108 +
           ((C117 * C1160 + C50832 * C1165) * C50862 +
            (C117 * C1153 + C50832 * C1161) * C118) *
               C107) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C50737 * C50773) *
              C1076 +
          ((((C8263 + C8262 + C8261) * C118 +
             (C8260 + C8259 + C8258) * C50862) *
                C50951 +
            ((C8610 + C8611 + C8612) * C118 +
             (C8613 + C8614 + C8615) * C50862) *
                C50680) *
               C50737 * C50773 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C50737 * C1074) *
              C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C50737 * C1074 -
           (((C8032 * C1154 + C8027 * C1162 + C8031 * C319 + C8026 * C331 +
              C8030 * C304 + C8025 * C324) *
                 C50862 +
             (C8032 * C1150 + C8027 * C1155 + C8031 * C301 + C8026 * C318 +
              C8030 * C294 + C8025 * C305) *
                 C118) *
                C50680 +
            ((C8615 + C8614 + C8613) * C50862 +
             (C8612 + C8611 + C8610) * C118) *
                C50951) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C50737 * C1145 -
          (((C8258 + C8259 + C8260) * C50862 + (C8261 + C8262 + C8263) * C118) *
               C50680 +
           ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50862 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C118) *
               C50951) *
              C50737 * C1146 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C118 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50862) *
               C50951 +
           ((C8264 + C8265 + C8266) * C118 + (C8267 + C8268 + C8269) * C50862) *
               C50680) *
              C50737 * C1147 -
          (((C8032 * C9237 + C8027 * C9241 + C8031 * C3584 + C8026 * C3589 +
             C8030 * C1158 + C8025 * C1164) *
                C50862 +
            (C8032 * C9235 + C8027 * C9238 + C8031 * C3580 + C8026 * C3585 +
             C8030 * C1152 + C8025 * C1159) *
                C118) *
               C50680 +
           ((C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
             C8030 * C1160 + C8025 * C1165) *
                C50862 +
            (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
             C8030 * C1153 + C8025 * C1161) *
                C118) *
               C50951) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[190] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C50832 * C126) * C118 +
                       (C117 * C127 + C50832 * C140) * C50862) *
                          C107 +
                      (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                         C1725 -
                     (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                      ((C117 * C499 + C50832 * C516) * C50862 +
                       (C117 * C486 + C50832 * C500) * C118) *
                          C107) *
                         C50801) *
                        C50968 +
                    ((((C117 * C932 + C50832 * C937) * C118 +
                       (C117 * C938 + C50832 * C947) * C50862) *
                          C107 +
                      (C971 + C972) * C108 + (C973 + C974) * C109 +
                      (C975 + C976) * C110) *
                         C50801 -
                     (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                      ((C117 * C310 + C50832 * C327) * C50862 +
                       (C117 * C297 + C50832 * C311) * C118) *
                          C107) *
                         C1725) *
                        C50773) *
                       C50960 +
                   ((((C565 + C564) * C107 + (C563 + C562) * C108 +
                      (C561 + C560) * C109 + (C801 + C802) * C110) *
                         C50801 -
                     (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                      (C179 + C178) * C107) *
                         C1725) *
                        C50968 +
                    (((C376 + C375) * C107 + (C374 + C373) * C108 +
                      (C372 + C371) * C109 + (C687 + C688) * C110) *
                         C1725 -
                     (((C117 * C945 + C50832 * C951) * C50862 +
                       (C117 * C936 + C50832 * C946) * C118) *
                          C110 +
                      (C976 + C975) * C109 + (C974 + C973) * C108 +
                      (C972 + C971) * C107) *
                         C50801) *
                        C50773) *
                       C50708)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                        C8026 * C311 + C8032 * C298 + C8027 * C312) *
                           C118 +
                       (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                        C8026 * C327 + C8032 * C313 + C8027 * C328) *
                           C50862) *
                          C50951 +
                      ((C8070 + C8071 + C8072) * C118 +
                       (C8073 + C8074 + C8075) * C50862) *
                          C50680) *
                         C1725 -
                     (((C8440 + C8441 + C8442) * C50862 +
                       (C8443 + C8444 + C8445) * C118) *
                          C50680 +
                      ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                        C8026 * C947 + C8030 * C499 + C8025 * C516) *
                           C50862 +
                       (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                        C8026 * C937 + C8030 * C486 + C8025 * C500) *
                           C118) *
                          C50951) *
                         C50801) *
                        C50968 +
                    ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 +
                        C8026 * C1622 + C8032 * C4237 + C8027 * C4243) *
                           C118 +
                       (C8030 * C938 + C8025 * C947 + C8031 * C1621 +
                        C8026 * C1626 + C8032 * C4242 + C8027 * C4246) *
                           C50862) *
                          C50951 +
                      ((C8986 + C8987 + C8988) * C118 +
                       (C8989 + C8990 + C8991) * C50862) *
                          C50680) *
                         C50801 -
                     (((C8258 + C8259 + C8260) * C50862 +
                       (C8261 + C8262 + C8263) * C118) *
                          C50680 +
                      ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                        C8026 * C328 + C8030 * C310 + C8025 * C327) *
                           C50862 +
                       (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                        C8026 * C312 + C8030 * C297 + C8025 * C311) *
                           C118) *
                          C50951) *
                         C1725) *
                        C50773) *
                       C50960 +
                   (((((C8445 + C8444 + C8443) * C118 +
                       (C8442 + C8441 + C8440) * C50862) *
                          C50951 +
                      ((C8774 + C8775 + C8776) * C118 +
                       (C8777 + C8778 + C8779) * C50862) *
                          C50680) *
                         C50801 -
                     (((C8076 + C8077 + C8078) * C50862 +
                       (C8079 + C8080 + C8081) * C118) *
                          C50680 +
                      ((C8075 + C8074 + C8073) * C50862 +
                       (C8072 + C8071 + C8070) * C118) *
                          C50951) *
                         C1725) *
                        C50968 +
                    ((((C8263 + C8262 + C8261) * C118 +
                       (C8260 + C8259 + C8258) * C50862) *
                          C50951 +
                      ((C8610 + C8611 + C8612) * C118 +
                       (C8613 + C8614 + C8615) * C50862) *
                          C50680) *
                         C1725 -
                     (((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 +
                        C8026 * C1624 + C8030 * C942 + C8025 * C949) *
                           C50862 +
                       (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 +
                        C8026 * C1618 + C8030 * C934 + C8025 * C941) *
                           C118) *
                          C50680 +
                      ((C8991 + C8990 + C8989) * C50862 +
                       (C8988 + C8987 + C8986) * C118) *
                          C50951) *
                         C50801) *
                        C50773) *
                       C50708)) /
                     (p * q * std::sqrt(p + q));
    d2ee[191] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C51014 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50832 * C516) * C50862 +
                      (C117 * C486 + C50832 * C500) * C118) *
                         C107) *
                        C51015 +
                    (((C117 * C487 + C50832 * C501) * C118 +
                      (C117 * C502 + C50832 * C517) * C50862) *
                         C107 +
                     (C566 + C567) * C108 + (C568 + C569) * C109 +
                     (C570 + C571) * C110) *
                        C2141) *
                       C50968 +
                   ((((C117 * C932 + C50832 * C937) * C118 +
                      (C117 * C938 + C50832 * C947) * C50862) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C51015 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50832 * C327) * C50862 +
                      (C117 * C297 + C50832 * C311) * C118) *
                         C107) *
                        C51014 -
                    (((C117 * C1268 + C50832 * C1276) * C50862 +
                      (C117 * C1264 + C50832 * C1269) * C118) *
                         C110 +
                     ((C117 * C1270 + C50832 * C1277) * C50862 +
                      (C117 * C1265 + C50832 * C1271) * C118) *
                         C109 +
                     ((C117 * C1272 + C50832 * C1278) * C50862 +
                      (C117 * C1266 + C50832 * C1273) * C118) *
                         C108 +
                     ((C117 * C1274 + C50832 * C1279) * C50862 +
                      (C117 * C1267 + C50832 * C1275) * C118) *
                         C107) *
                        C2141) *
                       C50773) *
                  C50702) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C51014 -
                    (((C8440 + C8441 + C8442) * C50862 +
                      (C8443 + C8444 + C8445) * C118) *
                         C50680 +
                     ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                       C8026 * C947 + C8030 * C499 + C8025 * C516) *
                          C50862 +
                      (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                       C8026 * C937 + C8030 * C486 + C8025 * C500) *
                          C118) *
                         C50951) *
                        C51015 +
                    (((C8030 * C487 + C8025 * C501 + C8031 * C1267 +
                       C8026 * C1275 + C8032 * C3739 + C8027 * C3745) *
                          C118 +
                      (C8030 * C502 + C8025 * C517 + C8031 * C1274 +
                       C8026 * C1279 + C8032 * C3744 + C8027 * C3748) *
                          C50862) *
                         C50951 +
                     ((C8446 + C8447 + C8448) * C118 +
                      (C8449 + C8450 + C8451) * C50862) *
                         C50680) *
                        C2141) *
                       C50968 +
                   ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 +
                       C8026 * C1622 + C8032 * C4237 + C8027 * C4243) *
                          C118 +
                      (C8030 * C938 + C8025 * C947 + C8031 * C1621 +
                       C8026 * C1626 + C8032 * C4242 + C8027 * C4246) *
                          C50862) *
                         C50951 +
                     ((C8986 + C8987 + C8988) * C118 +
                      (C8989 + C8990 + C8991) * C50862) *
                         C50680) *
                        C51015 -
                    (((C8258 + C8259 + C8260) * C50862 +
                      (C8261 + C8262 + C8263) * C118) *
                         C50680 +
                     ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                       C8026 * C328 + C8030 * C310 + C8025 * C327) *
                          C50862 +
                      (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                       C8026 * C312 + C8030 * C297 + C8025 * C311) *
                          C118) *
                         C50951) *
                        C51014 -
                    (((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 +
                       C8026 * C3747 + C8030 * C1272 + C8025 * C1278) *
                          C50862 +
                      (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 +
                       C8026 * C3743 + C8030 * C1266 + C8025 * C1273) *
                          C118) *
                         C50680 +
                     ((C8032 * C9393 + C8027 * C9396 + C8031 * C3744 +
                       C8026 * C3748 + C8030 * C1274 + C8025 * C1279) *
                          C50862 +
                      (C8032 * C9390 + C8027 * C9394 + C8031 * C3739 +
                       C8026 * C3745 + C8030 * C1267 + C8025 * C1275) *
                          C118) *
                         C50951) *
                        C2141) *
                       C50773) *
                  C50702) /
                     (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C1725 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C50801) *
              C289 +
          ((((C117 * C932 + C50832 * C937) * C118 +
             (C117 * C938 + C50832 * C947) * C50862) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C50801 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50832 * C327) * C50862 +
             (C117 * C297 + C50832 * C311) * C118) *
                C107) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C118 +
             (C117 * C313 + C50832 * C328) * C50862) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C1725 -
           (((C117 * C1615 + C50832 * C1623) * C50862 +
             (C117 * C1611 + C50832 * C1616) * C118) *
                C110 +
            ((C117 * C1617 + C50832 * C1624) * C50862 +
             (C117 * C1612 + C50832 * C1618) * C118) *
                C109 +
            ((C117 * C1619 + C50832 * C1625) * C50862 +
             (C117 * C1613 + C50832 * C1620) * C118) *
                C108 +
            ((C117 * C1621 + C50832 * C1626) * C50862 +
             (C117 * C1614 + C50832 * C1622) * C118) *
                C107) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C118 +
             (C117 * C127 + C50832 * C140) * C50862) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C1725 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50832 * C516) * C50862 +
             (C117 * C486 + C50832 * C500) * C118) *
                C107) *
               C50801) *
              C50721 * C1076 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            (C801 + C802) * C110) *
               C50801 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C1725) *
              C50721 * C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C1725 -
           (((C117 * C789 + C50832 * C791) * C50862 +
             (C117 * C788 + C50832 * C790) * C118) *
                C110 +
            (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C118 +
            (C117 * C127 + C50832 * C140) * C50862) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C1891 -
          (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
           ((C117 * C499 + C50832 * C516) * C50862 +
            (C117 * C486 + C50832 * C500) * C118) *
               C107) *
              C1892 +
          (((C117 * C487 + C50832 * C501) * C118 +
            (C117 * C502 + C50832 * C517) * C50862) *
               C107 +
           (C566 + C567) * C108 + (C568 + C569) * C109 + (C570 + C571) * C110) *
              C1893 -
          (((C117 * C1899 + C50832 * C1907) * C50862 +
            (C117 * C1895 + C50832 * C1900) * C118) *
               C110 +
           ((C117 * C1901 + C50832 * C1908) * C50862 +
            (C117 * C1896 + C50832 * C1902) * C118) *
               C109 +
           ((C117 * C1903 + C50832 * C1909) * C50862 +
            (C117 * C1897 + C50832 * C1904) * C118) *
               C108 +
           ((C117 * C1905 + C50832 * C1910) * C50862 +
            (C117 * C1898 + C50832 * C1906) * C118) *
               C107) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C1725 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C50721 * C1076 +
          ((((C8445 + C8444 + C8443) * C118 +
             (C8442 + C8441 + C8440) * C50862) *
                C50951 +
            ((C8774 + C8775 + C8776) * C118 +
             (C8777 + C8778 + C8779) * C50862) *
                C50680) *
               C50801 -
           (((C8076 + C8077 + C8078) * C50862 +
             (C8079 + C8080 + C8081) * C118) *
                C50680 +
            ((C8075 + C8074 + C8073) * C50862 +
             (C8072 + C8071 + C8070) * C118) *
                C50951) *
               C1725) *
              C50721 * C1077 +
          ((((C8081 + C8080 + C8079) * C118 +
             (C8078 + C8077 + C8076) * C50862) *
                C50951 +
            ((C8082 + C8083 + C8084) * C118 +
             (C8085 + C8086 + C8087) * C50862) *
                C50680) *
               C1725 -
           (((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
              C8030 * C493 + C8025 * C513) *
                 C50862 +
             (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
              C8030 * C483 + C8025 * C494) *
                 C118) *
                C50680 +
            ((C8779 + C8778 + C8777) * C50862 +
             (C8776 + C8775 + C8774) * C118) *
                C50951) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C118 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50862) *
                C50951 +
            ((C8070 + C8071 + C8072) * C118 +
             (C8073 + C8074 + C8075) * C50862) *
                C50680) *
               C1725 -
           (((C8440 + C8441 + C8442) * C50862 +
             (C8443 + C8444 + C8445) * C118) *
                C50680 +
            ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
              C8030 * C499 + C8025 * C516) *
                 C50862 +
             (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
              C8030 * C486 + C8025 * C500) *
                 C118) *
                C50951) *
               C50801) *
              C289 +
          ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 + C8026 * C1622 +
              C8032 * C4237 + C8027 * C4243) *
                 C118 +
             (C8030 * C938 + C8025 * C947 + C8031 * C1621 + C8026 * C1626 +
              C8032 * C4242 + C8027 * C4246) *
                 C50862) *
                C50951 +
            ((C8986 + C8987 + C8988) * C118 +
             (C8989 + C8990 + C8991) * C50862) *
                C50680) *
               C50801 -
           (((C8258 + C8259 + C8260) * C50862 +
             (C8261 + C8262 + C8263) * C118) *
                C50680 +
            ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50862 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C118) *
                C50951) *
               C1725) *
              C290 +
          ((((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
              C8032 * C3581 + C8027 * C3587) *
                 C118 +
             (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
              C8032 * C3586 + C8027 * C3590) *
                 C50862) *
                C50951 +
            ((C8264 + C8265 + C8266) * C118 +
             (C8267 + C8268 + C8269) * C50862) *
                C50680) *
               C1725 -
           (((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
              C8030 * C1619 + C8025 * C1625) *
                 C50862 +
             (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
              C8030 * C1613 + C8025 * C1620) *
                 C118) *
                C50680 +
            ((C8032 * C9887 + C8027 * C9890 + C8031 * C4242 + C8026 * C4246 +
              C8030 * C1621 + C8025 * C1626) *
                 C50862 +
             (C8032 * C9884 + C8027 * C9888 + C8031 * C4237 + C8026 * C4243 +
              C8030 * C1614 + C8025 * C1622) *
                 C118) *
                C50951) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C118 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50862) *
               C50951 +
           ((C8070 + C8071 + C8072) * C118 + (C8073 + C8074 + C8075) * C50862) *
               C50680) *
              C1891 -
          (((C8440 + C8441 + C8442) * C50862 + (C8443 + C8444 + C8445) * C118) *
               C50680 +
           ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 + C8026 * C947 +
             C8030 * C499 + C8025 * C516) *
                C50862 +
            (C8032 * C1614 + C8027 * C1622 + C8031 * C932 + C8026 * C937 +
             C8030 * C486 + C8025 * C500) *
                C118) *
               C50951) *
              C1892 +
          (((C8030 * C487 + C8025 * C501 + C8031 * C1267 + C8026 * C1275 +
             C8032 * C3739 + C8027 * C3745) *
                C118 +
            (C8030 * C502 + C8025 * C517 + C8031 * C1274 + C8026 * C1279 +
             C8032 * C3744 + C8027 * C3748) *
                C50862) *
               C50951 +
           ((C8446 + C8447 + C8448) * C118 + (C8449 + C8450 + C8451) * C50862) *
               C50680) *
              C1893 -
          (((C8032 * C10283 + C8027 * C10287 + C8031 * C4642 + C8026 * C4647 +
             C8030 * C1903 + C8025 * C1909) *
                C50862 +
            (C8032 * C10281 + C8027 * C10284 + C8031 * C4638 + C8026 * C4643 +
             C8030 * C1897 + C8025 * C1904) *
                C118) *
               C50680 +
           ((C8032 * C10285 + C8027 * C10288 + C8031 * C4644 + C8026 * C4648 +
             C8030 * C1905 + C8025 * C1910) *
                C50862 +
            (C8032 * C10282 + C8027 * C10286 + C8031 * C4639 + C8026 * C4645 +
             C8030 * C1898 + C8025 * C1906) *
                C118) *
               C50951) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[193] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C51014 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50832 * C516) * C50862 +
                      (C117 * C486 + C50832 * C500) * C118) *
                         C107) *
                        C51015 +
                    (((C117 * C487 + C50832 * C501) * C118 +
                      (C117 * C502 + C50832 * C517) * C50862) *
                         C107 +
                     (C566 + C567) * C108 + (C568 + C569) * C109 +
                     (C570 + C571) * C110) *
                        C2141) *
                       C50721 * C50960 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C51015 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C51014 -
                    (((C117 * C511 + C50832 * C522) * C50862 +
                      (C117 * C492 + C50832 * C512) * C118) *
                         C110 +
                     (C571 + C570) * C109 + (C569 + C568) * C108 +
                     (C567 + C566) * C107) *
                        C2141) *
                       C50721 * C50708)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C51014 -
                    (((C8440 + C8441 + C8442) * C50862 +
                      (C8443 + C8444 + C8445) * C118) *
                         C50680 +
                     ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                       C8026 * C947 + C8030 * C499 + C8025 * C516) *
                          C50862 +
                      (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                       C8026 * C937 + C8030 * C486 + C8025 * C500) *
                          C118) *
                         C50951) *
                        C51015 +
                    (((C8030 * C487 + C8025 * C501 + C8031 * C1267 +
                       C8026 * C1275 + C8032 * C3739 + C8027 * C3745) *
                          C118 +
                      (C8030 * C502 + C8025 * C517 + C8031 * C1274 +
                       C8026 * C1279 + C8032 * C3744 + C8027 * C3748) *
                          C50862) *
                         C50951 +
                     ((C8446 + C8447 + C8448) * C118 +
                      (C8449 + C8450 + C8451) * C50862) *
                         C50680) *
                        C2141) *
                       C50721 * C50960 +
                   ((((C8445 + C8444 + C8443) * C118 +
                      (C8442 + C8441 + C8440) * C50862) *
                         C50951 +
                     ((C8774 + C8775 + C8776) * C118 +
                      (C8777 + C8778 + C8779) * C50862) *
                         C50680) *
                        C51015 -
                    (((C8076 + C8077 + C8078) * C50862 +
                      (C8079 + C8080 + C8081) * C118) *
                         C50680 +
                     ((C8075 + C8074 + C8073) * C50862 +
                      (C8072 + C8071 + C8070) * C118) *
                         C50951) *
                        C51014 -
                    (((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 +
                       C8026 * C1277 + C8030 * C506 + C8025 * C519) *
                          C50862 +
                      (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 +
                       C8026 * C1271 + C8030 * C489 + C8025 * C505) *
                          C118) *
                         C50680 +
                     ((C8451 + C8450 + C8449) * C50862 +
                      (C8448 + C8447 + C8446) * C118) *
                         C50951) *
                        C2141) *
                       C50721 * C50708)) /
                     (p * q * std::sqrt(p + q));
    d2ee[194] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C1725 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50832 * C516) * C50862 +
                      (C117 * C486 + C50832 * C500) * C118) *
                         C107) *
                        C50801) *
                       C50721 * C1076 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50801 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C1725) *
                       C50721 * C1077 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C1725 -
                    (((C117 * C789 + C50832 * C791) * C50862 +
                      (C117 * C788 + C50832 * C790) * C118) *
                         C110 +
                     (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                        C50801) *
                       C50721 * C1078)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50832 * C126) * C118 +
                      (C117 * C127 + C50832 * C140) * C50862) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C1725 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50832 * C516) * C50862 +
                      (C117 * C486 + C50832 * C500) * C118) *
                         C107) *
                        C50801) *
                       C289 +
                   ((((C117 * C932 + C50832 * C937) * C118 +
                      (C117 * C938 + C50832 * C947) * C50862) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50801 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50832 * C327) * C50862 +
                      (C117 * C297 + C50832 * C311) * C118) *
                         C107) *
                        C1725) *
                       C290 +
                   ((((C117 * C298 + C50832 * C312) * C118 +
                      (C117 * C313 + C50832 * C328) * C50862) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C1725 -
                    (((C117 * C1615 + C50832 * C1623) * C50862 +
                      (C117 * C1611 + C50832 * C1616) * C118) *
                         C110 +
                     ((C117 * C1617 + C50832 * C1624) * C50862 +
                      (C117 * C1612 + C50832 * C1618) * C118) *
                         C109 +
                     ((C117 * C1619 + C50832 * C1625) * C50862 +
                      (C117 * C1613 + C50832 * C1620) * C118) *
                         C108 +
                     ((C117 * C1621 + C50832 * C1626) * C50862 +
                      (C117 * C1614 + C50832 * C1622) * C118) *
                         C107) *
                        C50801) *
                       C291) *
                  C50702) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C1725 -
                    (((C8440 + C8441 + C8442) * C50862 +
                      (C8443 + C8444 + C8445) * C118) *
                         C50680 +
                     ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                       C8026 * C947 + C8030 * C499 + C8025 * C516) *
                          C50862 +
                      (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                       C8026 * C937 + C8030 * C486 + C8025 * C500) *
                          C118) *
                         C50951) *
                        C50801) *
                       C50721 * C1076 +
                   ((((C8445 + C8444 + C8443) * C118 +
                      (C8442 + C8441 + C8440) * C50862) *
                         C50951 +
                     ((C8774 + C8775 + C8776) * C118 +
                      (C8777 + C8778 + C8779) * C50862) *
                         C50680) *
                        C50801 -
                    (((C8076 + C8077 + C8078) * C50862 +
                      (C8079 + C8080 + C8081) * C118) *
                         C50680 +
                     ((C8075 + C8074 + C8073) * C50862 +
                      (C8072 + C8071 + C8070) * C118) *
                         C50951) *
                        C1725) *
                       C50721 * C1077 +
                   ((((C8081 + C8080 + C8079) * C118 +
                      (C8078 + C8077 + C8076) * C50862) *
                         C50951 +
                     ((C8082 + C8083 + C8084) * C118 +
                      (C8085 + C8086 + C8087) * C50862) *
                         C50680) *
                        C1725 -
                    (((C8032 * C1615 + C8027 * C1623 + C8031 * C944 +
                       C8026 * C950 + C8030 * C493 + C8025 * C513) *
                          C50862 +
                      (C8032 * C1611 + C8027 * C1616 + C8031 * C935 +
                       C8026 * C943 + C8030 * C483 + C8025 * C494) *
                          C118) *
                         C50680 +
                     ((C8779 + C8778 + C8777) * C50862 +
                      (C8776 + C8775 + C8774) * C118) *
                         C50951) *
                        C50801) *
                       C50721 * C1078)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C8030 * C119 + C8025 * C126 + C8031 * C297 +
                       C8026 * C311 + C8032 * C298 + C8027 * C312) *
                          C118 +
                      (C8030 * C127 + C8025 * C140 + C8031 * C310 +
                       C8026 * C327 + C8032 * C313 + C8027 * C328) *
                          C50862) *
                         C50951 +
                     ((C8070 + C8071 + C8072) * C118 +
                      (C8073 + C8074 + C8075) * C50862) *
                         C50680) *
                        C1725 -
                    (((C8440 + C8441 + C8442) * C50862 +
                      (C8443 + C8444 + C8445) * C118) *
                         C50680 +
                     ((C8032 * C1621 + C8027 * C1626 + C8031 * C938 +
                       C8026 * C947 + C8030 * C499 + C8025 * C516) *
                          C50862 +
                      (C8032 * C1614 + C8027 * C1622 + C8031 * C932 +
                       C8026 * C937 + C8030 * C486 + C8025 * C500) *
                          C118) *
                         C50951) *
                        C50801) *
                       C289 +
                   ((((C8030 * C932 + C8025 * C937 + C8031 * C1614 +
                       C8026 * C1622 + C8032 * C4237 + C8027 * C4243) *
                          C118 +
                      (C8030 * C938 + C8025 * C947 + C8031 * C1621 +
                       C8026 * C1626 + C8032 * C4242 + C8027 * C4246) *
                          C50862) *
                         C50951 +
                     ((C8986 + C8987 + C8988) * C118 +
                      (C8989 + C8990 + C8991) * C50862) *
                         C50680) *
                        C50801 -
                    (((C8258 + C8259 + C8260) * C50862 +
                      (C8261 + C8262 + C8263) * C118) *
                         C50680 +
                     ((C8032 * C1160 + C8027 * C1165 + C8031 * C313 +
                       C8026 * C328 + C8030 * C310 + C8025 * C327) *
                          C50862 +
                      (C8032 * C1153 + C8027 * C1161 + C8031 * C298 +
                       C8026 * C312 + C8030 * C297 + C8025 * C311) *
                          C118) *
                         C50951) *
                        C1725) *
                       C290 +
                   ((((C8030 * C298 + C8025 * C312 + C8031 * C1153 +
                       C8026 * C1161 + C8032 * C3581 + C8027 * C3587) *
                          C118 +
                      (C8030 * C313 + C8025 * C328 + C8031 * C1160 +
                       C8026 * C1165 + C8032 * C3586 + C8027 * C3590) *
                          C50862) *
                         C50951 +
                     ((C8264 + C8265 + C8266) * C118 +
                      (C8267 + C8268 + C8269) * C50862) *
                         C50680) *
                        C1725 -
                    (((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 +
                       C8026 * C4245 + C8030 * C1619 + C8025 * C1625) *
                          C50862 +
                      (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 +
                       C8026 * C4241 + C8030 * C1613 + C8025 * C1620) *
                          C118) *
                         C50680 +
                     ((C8032 * C9887 + C8027 * C9890 + C8031 * C4242 +
                       C8026 * C4246 + C8030 * C1621 + C8025 * C1626) *
                          C50862 +
                      (C8032 * C9884 + C8027 * C9888 + C8031 * C4237 +
                       C8026 * C4243 + C8030 * C1614 + C8025 * C1622) *
                          C118) *
                         C50951) *
                        C50801) *
                       C291) *
                  C50702) /
                     (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C50968 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C50773) *
              C51010 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C50773 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C50968) *
              C51011 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50737 * C50968 -
           (((C2344 * C322 + C50848 * C333 + C2343 * C321 + C50978 * C332) *
                 C50862 +
             (C2344 * C303 + C50848 * C323 + C2343 * C302 + C50978 * C320) *
                 C118) *
                C2342 +
            ((C2953 + C2952) * C50862 + (C2951 + C2950) * C118) * C2341 +
            C2954 * C2340) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C50968 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C50773) *
              C51010 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C50773 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C50968) *
              C51011 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50737 * C50968 -
           ((C10849 * C3582 + C10844 * C3588 + C10848 * C1156 + C10843 * C1163 +
             C10847 * C317 + C10842 * C330 + C10846 * C306 + C10841 * C325) *
                C50862 +
            (C10849 * C3579 + C10844 * C3583 + C10848 * C1151 + C10843 * C1157 +
             C10847 * C300 + C10842 * C316 + C10846 * C295 + C10841 * C307) *
                C118) *
               C50675 * C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C118 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C50862) *
                 C2340 +
             ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
             C2402 * C2342) *
                C50969 -
            (C3117 * C2342 +
             ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
             ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                  C50862 +
              (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                  C118) *
                 C2340) *
                C50801) *
               C50968 +
           ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                  C118 +
              (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                  C50862) *
                 C2340 +
             ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
             ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                C50801 -
            (C2954 * C2342 +
             ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
             ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C50862 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C118) *
                 C2340) *
                C50969) *
               C50773) *
              C292 +
          (((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
             ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
             ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                C50801 -
            (C2403 * C2342 +
             ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
             ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                C50969) *
               C50968 +
           ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
             ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
             ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                C50969 -
            (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                  C50862 +
              (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                  C118) *
                 C2342 +
             ((C3335 + C3334) * C50862 + (C3333 + C3332) * C118) * C2341 +
             ((C3331 + C3330) * C50862 + (C3329 + C3328) * C118) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
              C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                 C118 +
             (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
              C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 +
              C10843 * C1626 + C10847 * C938 + C10842 * C947 + C10846 * C499 +
              C10841 * C516) *
                 C50862 +
             (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 +
              C10843 * C1622 + C10847 * C932 + C10842 * C937 + C10846 * C486 +
              C10841 * C500) *
                 C118) *
                C50675 * C50801) *
               C50968 +
           (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
              C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
              C10844 * C9888) *
                 C118 +
             (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
              C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
              C10844 * C9890) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 +
              C10843 * C1165 + C10847 * C313 + C10842 * C328 + C10846 * C310 +
              C10841 * C327) *
                 C50862 +
             (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 +
              C10843 * C1161 + C10847 * C298 + C10842 * C312 + C10846 * C297 +
              C10841 * C311) *
                 C118) *
                C50675 * C50969) *
               C50773) *
              C292 +
          ((((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
              C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
              C10844 * C4241) *
                 C118 +
             (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
              C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
              C10844 * C4245) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
              C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                 C50862 +
             (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
              C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                 C118) *
                C50675 * C50969) *
               C50968 +
           (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
              C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
              C10844 * C3585) *
                 C118 +
             (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
              C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
              C10844 * C3589) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C9885 + C10844 * C9889 + C10848 * C4240 +
              C10843 * C4245 + C10847 * C1619 + C10842 * C1625 + C10846 * C940 +
              C10841 * C948) *
                 C50862 +
             (C10849 * C9883 + C10844 * C9886 + C10848 * C4236 +
              C10843 * C4241 + C10847 * C1613 + C10842 * C1620 + C10846 * C933 +
              C10841 * C939) *
                 C118) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C289 -
           (((C2582 + C2583) * C50862 + (C2584 + C2585) * C118) * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C290 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50737 * C291) *
              C292 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2343 * C294 + C50978 * C305 + C2344 * C301 + C50848 * C318) *
                 C118 +
             (C2343 * C304 + C50978 * C324 + C2344 * C319 + C50848 * C331) *
                 C50862) *
                C2342) *
               C50737 * C290 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C289 -
           (((C2344 * C1154 + C50848 * C1162 + C2343 * C319 + C50978 * C331) *
                 C50862 +
             (C2344 * C1150 + C50848 * C1155 + C2343 * C301 + C50978 * C318) *
                 C118) *
                C2342 +
            ((C2597 + C2596) * C50862 + (C2595 + C2594) * C118) * C2341 +
            ((C2593 + C2592) * C50862 + (C2591 + C2590) * C118) * C2340) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C50737 * C50721 * C113 -
          (C2403 * C2342 +
           ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
           ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
              C50737 * C50721 * C114 +
          (C2402 * C2340 +
           ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
           ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
              C50737 * C50721 * C115 -
          (((C2344 * C675 + C50848 * C677 + C2343 * C137 + C50978 * C145) *
                C50862 +
            (C2344 * C674 + C50848 * C676 + C2343 * C124 + C50978 * C136) *
                C118) *
               C2342 +
           ((C2393 + C2392) * C50862 + (C2391 + C2390) * C118) * C2341 +
           C2403 * C2340) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C480 -
           (((C2776 + C2777) * C50862 + (C2778 + C2779) * C118) * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C482) *
              C50721 * C292 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C2343 * C483 + C50978 * C494 + C2344 * C935 + C50848 * C943) *
                 C118 +
             (C2343 * C493 + C50978 * C513 + C2344 * C944 + C50848 * C950) *
                 C50862) *
                C2342) *
               C481 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C480 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50862 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C118) *
                C2342 +
            ((C2791 + C2790) * C50862 + (C2789 + C2788) * C118) * C2341 +
            ((C2787 + C2786) * C50862 + (C2785 + C2784) * C118) * C2340) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C50721 * C113 -
          ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
            C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
               C50862 +
           (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
            C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
               C118) *
              C50675 * C50737 * C50721 * C114 +
          ((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
            C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
               C118 +
           (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
            C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
               C50862) *
              C50675 * C50737 * C50721 * C115 -
          ((C10849 * C1154 + C10844 * C1162 + C10848 * C319 + C10843 * C331 +
            C10847 * C304 + C10842 * C324 + C10846 * C133 + C10841 * C143) *
               C50862 +
           (C10849 * C1150 + C10844 * C1155 + C10848 * C301 + C10843 * C318 +
            C10847 * C294 + C10842 * C305 + C10846 * C122 + C10841 * C132) *
               C118) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C289 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C290 +
           ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50737 * C291) *
              C292 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C290 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C289 -
           ((C10849 * C9237 + C10844 * C9241 + C10848 * C3584 + C10843 * C3589 +
             C10847 * C1158 + C10842 * C1164 + C10846 * C315 + C10841 * C329) *
                C50862 +
            (C10849 * C9235 + C10844 * C9238 + C10848 * C3580 + C10843 * C3585 +
             C10847 * C1152 + C10842 * C1159 + C10846 * C299 + C10841 * C314) *
                C118) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C480 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C481 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C482) *
              C50721 * C292 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C481 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C480 -
           ((C10849 * C9391 + C10844 * C9395 + C10848 * C3742 + C10843 * C3747 +
             C10847 * C1272 + C10842 * C1278 + C10846 * C504 + C10841 * C518) *
                C50862 +
            (C10849 * C9389 + C10844 * C9392 + C10848 * C3738 + C10843 * C3743 +
             C10847 * C1266 + C10842 * C1273 + C10846 * C488 + C10841 * C503) *
                C118) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50969 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C50721 * C51010 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C50801 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50969) *
              C50721 * C51011 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50969 -
           (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                 C50862 +
             (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                 C118) *
                C2342 +
            ((C3116 + C3115) * C50862 + (C3114 + C3113) * C118) * C2341 +
            C3117 * C2340) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C50721 * C51010 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50969) *
              C50721 * C51011 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C4238 + C10844 * C4244 + C10848 * C1617 + C10843 * C1624 +
             C10847 * C942 + C10842 * C949 + C10846 * C495 + C10841 * C514) *
                C50862 +
            (C10849 * C4235 + C10844 * C4239 + C10848 * C1612 + C10843 * C1618 +
             C10847 * C934 + C10842 * C941 + C10846 * C484 + C10841 * C496) *
                C118) *
               C50675 * C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C50737 * C50721 * C113 -
          (C2403 * C2342 +
           ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
           ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
              C50737 * C50721 * C114 +
          (C2402 * C2340 +
           ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
           ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
              C50737 * C50721 * C115 -
          (((C2344 * C675 + C50848 * C677 + C2343 * C137 + C50978 * C145) *
                C50862 +
            (C2344 * C674 + C50848 * C676 + C2343 * C124 + C50978 * C136) *
                C118) *
               C2342 +
           ((C2393 + C2392) * C50862 + (C2391 + C2390) * C118) * C2341 +
           C2403 * C2340) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C289 -
           (((C2582 + C2583) * C50862 + (C2584 + C2585) * C118) * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C290 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50737 * C291) *
              C292 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2343 * C294 + C50978 * C305 + C2344 * C301 + C50848 * C318) *
                 C118 +
             (C2343 * C304 + C50978 * C324 + C2344 * C319 + C50848 * C331) *
                 C50862) *
                C2342) *
               C50737 * C290 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C289 -
           (((C2344 * C1154 + C50848 * C1162 + C2343 * C319 + C50978 * C331) *
                 C50862 +
             (C2344 * C1150 + C50848 * C1155 + C2343 * C301 + C50978 * C318) *
                 C118) *
                C2342 +
            ((C2597 + C2596) * C50862 + (C2595 + C2594) * C118) * C2341 +
            ((C2593 + C2592) * C50862 + (C2591 + C2590) * C118) * C2340) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C50721 * C113 -
          ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
            C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
               C50862 +
           (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
            C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
               C118) *
              C50675 * C50737 * C50721 * C114 +
          ((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
            C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
               C118 +
           (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
            C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
               C50862) *
              C50675 * C50737 * C50721 * C115 -
          ((C10849 * C1154 + C10844 * C1162 + C10848 * C319 + C10843 * C331 +
            C10847 * C304 + C10842 * C324 + C10846 * C133 + C10841 * C143) *
               C50862 +
           (C10849 * C1150 + C10844 * C1155 + C10848 * C301 + C10843 * C318 +
            C10847 * C294 + C10842 * C305 + C10846 * C122 + C10841 * C132) *
               C118) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C289 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C290 +
           ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50737 * C291) *
              C292 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C290 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C289 -
           ((C10849 * C9237 + C10844 * C9241 + C10848 * C3584 + C10843 * C3589 +
             C10847 * C1158 + C10842 * C1164 + C10846 * C315 + C10841 * C329) *
                C50862 +
            (C10849 * C9235 + C10844 * C9238 + C10848 * C3580 + C10843 * C3585 +
             C10847 * C1152 + C10842 * C1159 + C10846 * C299 + C10841 * C314) *
                C118) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C51012 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C51013 +
           (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50737 * C1380) *
              C50960 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C51013 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C51012 -
           (((C2344 * C1154 + C50848 * C1162 + C2343 * C319 + C50978 * C331) *
                 C50862 +
             (C2344 * C1150 + C50848 * C1155 + C2343 * C301 + C50978 * C318) *
                 C118) *
                C2342 +
            ((C2597 + C2596) * C50862 + (C2595 + C2594) * C118) * C2341 +
            ((C2593 + C2592) * C50862 + (C2591 + C2590) * C118) * C2340) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C51012 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C51013 +
           ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50737 * C1380) *
              C50960 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C51013 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C51012 -
           ((C10849 * C9237 + C10844 * C9241 + C10848 * C3584 + C10843 * C3589 +
             C10847 * C1158 + C10842 * C1164 + C10846 * C315 + C10841 * C329) *
                C50862 +
            (C10849 * C9235 + C10844 * C9238 + C10848 * C3580 + C10843 * C3585 +
             C10847 * C1152 + C10842 * C1159 + C10846 * C299 + C10841 * C314) *
                C118) *
               C50675 * C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50969 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C51012 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C50801 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50969) *
              C51013 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C50969 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50862 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C118) *
                C2342 +
            ((C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                 C50862 +
             (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                 C118) *
                C2341 +
            ((C2344 * C4242 + C50848 * C4246 + C2343 * C1621 + C50978 * C1626) *
                 C50862 +
             (C2344 * C4237 + C50848 * C4243 + C2343 * C1614 + C50978 * C1622) *
                 C118) *
                C2340) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C51012 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50969) *
              C51013 +
          (((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C50969 -
           ((C10849 * C11969 + C10844 * C11971 + C10848 * C9887 +
             C10843 * C9890 + C10847 * C4242 + C10842 * C4246 + C10846 * C1621 +
             C10841 * C1626) *
                C50862 +
            (C10849 * C11968 + C10844 * C11970 + C10848 * C9884 +
             C10843 * C9888 + C10847 * C4237 + C10842 * C4243 + C10846 * C1614 +
             C10841 * C1622) *
                C118) *
               C50675 * C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C50737 * C1145 -
          (C2954 * C2342 +
           ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
           ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C50862 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C118) *
               C2340) *
              C50737 * C1146 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C118 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C50862) *
               C2340 +
           ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
           ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
              C50737 * C1147 -
          (((C2344 * C3582 + C50848 * C3588 + C2343 * C1156 + C50978 * C1163) *
                C50862 +
            (C2344 * C3579 + C50848 * C3583 + C2343 * C1151 + C50978 * C1157) *
                C118) *
               C2342 +
           ((C2344 * C3584 + C50848 * C3589 + C2343 * C1158 + C50978 * C1164) *
                C50862 +
            (C2344 * C3580 + C50848 * C3585 + C2343 * C1152 + C50978 * C1159) *
                C118) *
               C2341 +
           ((C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
                C50862 +
            (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
                C118) *
               C2340) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C1074 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C50773) *
              C1076 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C50773 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C1074) *
              C1077 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50737 * C1074 -
           (((C2344 * C322 + C50848 * C333 + C2343 * C321 + C50978 * C332) *
                 C50862 +
             (C2344 * C303 + C50848 * C323 + C2343 * C302 + C50978 * C320) *
                 C118) *
                C2342 +
            ((C2953 + C2952) * C50862 + (C2951 + C2950) * C118) * C2341 +
            C2954 * C2340) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C480 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C482) *
              C1074 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C481 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C480 -
           (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                 C50862 +
             (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                 C118) *
                C2342 +
            ((C2344 * C3742 + C50848 * C3747 + C2343 * C1272 + C50978 * C1278) *
                 C50862 +
             (C2344 * C3738 + C50848 * C3743 + C2343 * C1266 + C50978 * C1273) *
                 C118) *
                C2341 +
            ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                 C50862 +
             (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                 C118) *
                C2340) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C50773 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3582 + C10844 * C3588 + C10848 * C1156 + C10843 * C1163 +
             C10847 * C317 + C10842 * C330 + C10846 * C306 + C10841 * C325) *
                C50862 +
            (C10849 * C3579 + C10844 * C3583 + C10848 * C1151 + C10843 * C1157 +
             C10847 * C300 + C10842 * C316 + C10846 * C295 + C10841 * C307) *
                C118) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C1145 -
          ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
            C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
               C50862 +
           (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
            C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
               C118) *
              C50675 * C50737 * C1146 +
          ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
            C10848 * C3581 + C10843 * C3587 + C10849 * C9236 + C10844 * C9240) *
               C118 +
           (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
            C10848 * C3586 + C10843 * C3590 + C10849 * C9239 + C10844 * C9242) *
               C50862) *
              C50675 * C50737 * C1147 -
          ((C10849 * C11537 + C10844 * C11539 + C10848 * C9239 +
            C10843 * C9242 + C10847 * C3586 + C10842 * C3590 + C10846 * C1160 +
            C10841 * C1165) *
               C50862 +
           (C10849 * C11536 + C10844 * C11538 + C10848 * C9236 +
            C10843 * C9240 + C10847 * C3581 + C10842 * C3587 + C10846 * C1153 +
            C10841 * C1161) *
               C118) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C480 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C481 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C482) *
              C1074 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C481 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C480 -
           ((C10849 * C11639 + C10844 * C11641 + C10848 * C9393 +
             C10843 * C9396 + C10847 * C3744 + C10842 * C3748 + C10846 * C1274 +
             C10841 * C1279) *
                C50862 +
            (C10849 * C11638 + C10844 * C11640 + C10848 * C9390 +
             C10843 * C9394 + C10847 * C3739 + C10842 * C3745 + C10846 * C1267 +
             C10841 * C1275) *
                C118) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C118 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C50862) *
                 C2340 +
             ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
             C2402 * C2342) *
                C50969 -
            (C3117 * C2342 +
             ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
             ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                  C50862 +
              (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                  C118) *
                 C2340) *
                C50801) *
               C1074 +
           ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                  C118 +
              (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                  C50862) *
                 C2340 +
             ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
             ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                C50801 -
            (C2954 * C2342 +
             ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
             ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C50862 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C118) *
                 C2340) *
                C50969) *
               C50773) *
              C50960 +
          (((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
             ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
             ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                C50801 -
            (C2403 * C2342 +
             ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
             ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                C50969) *
               C1074 +
           ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
             ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
             ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                C50969 -
            (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                  C50862 +
              (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                  C118) *
                 C2342 +
             ((C3335 + C3334) * C50862 + (C3333 + C3332) * C118) * C2341 +
             ((C3331 + C3330) * C50862 + (C3329 + C3328) * C118) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
              C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                 C118 +
             (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
              C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 +
              C10843 * C1626 + C10847 * C938 + C10842 * C947 + C10846 * C499 +
              C10841 * C516) *
                 C50862 +
             (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 +
              C10843 * C1622 + C10847 * C932 + C10842 * C937 + C10846 * C486 +
              C10841 * C500) *
                 C118) *
                C50675 * C50801) *
               C1074 +
           (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
              C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
              C10844 * C9888) *
                 C118 +
             (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
              C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
              C10844 * C9890) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 +
              C10843 * C1165 + C10847 * C313 + C10842 * C328 + C10846 * C310 +
              C10841 * C327) *
                 C50862 +
             (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 +
              C10843 * C1161 + C10847 * C298 + C10842 * C312 + C10846 * C297 +
              C10841 * C311) *
                 C118) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          ((((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
              C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
              C10844 * C4241) *
                 C118 +
             (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
              C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
              C10844 * C4245) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
              C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                 C50862 +
             (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
              C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                 C118) *
                C50675 * C50969) *
               C1074 +
           (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
              C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
              C10844 * C3585) *
                 C118 +
             (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
              C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
              C10844 * C3589) *
                 C50862) *
                C50675 * C50969 -
            ((C10849 * C9885 + C10844 * C9889 + C10848 * C4240 +
              C10843 * C4245 + C10847 * C1619 + C10842 * C1625 + C10846 * C940 +
              C10841 * C948) *
                 C50862 +
             (C10849 * C9883 + C10844 * C9886 + C10848 * C4236 +
              C10843 * C4241 + C10847 * C1613 + C10842 * C1620 + C10846 * C933 +
              C10841 * C939) *
                 C118) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C50737 * C1074 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C50737 * C50773) *
              C1076 +
          ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
            ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
            ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
               C50737 * C50773 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C50737 * C1074) *
              C1077 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C50737 * C1074 -
           (((C2344 * C322 + C50848 * C333 + C2343 * C321 + C50978 * C332) *
                 C50862 +
             (C2344 * C303 + C50848 * C323 + C2343 * C302 + C50978 * C320) *
                 C118) *
                C2342 +
            ((C2953 + C2952) * C50862 + (C2951 + C2950) * C118) * C2341 +
            C2954 * C2340) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C50737 * C1145 -
          (C2954 * C2342 +
           ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
           ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                C50862 +
            (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                C118) *
               C2340) *
              C50737 * C1146 +
          (((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                C118 +
            (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                C50862) *
               C2340 +
           ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
           ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
              C50737 * C1147 -
          (((C2344 * C3582 + C50848 * C3588 + C2343 * C1156 + C50978 * C1163) *
                C50862 +
            (C2344 * C3579 + C50848 * C3583 + C2343 * C1151 + C50978 * C1157) *
                C118) *
               C2342 +
           ((C2344 * C3584 + C50848 * C3589 + C2343 * C1158 + C50978 * C1164) *
                C50862 +
            (C2344 * C3580 + C50848 * C3585 + C2343 * C1152 + C50978 * C1159) *
                C118) *
               C2341 +
           ((C2344 * C3586 + C50848 * C3590 + C2343 * C1160 + C50978 * C1165) *
                C50862 +
            (C2344 * C3581 + C50848 * C3587 + C2343 * C1153 + C50978 * C1161) *
                C118) *
               C2340) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
             C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
             C10844 * C3585) *
                C118 +
            (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
             C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
             C10844 * C3589) *
                C50862) *
               C50675 * C50737 * C50773 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C50737 * C1074 -
           ((C10849 * C3582 + C10844 * C3588 + C10848 * C1156 + C10843 * C1163 +
             C10847 * C317 + C10842 * C330 + C10846 * C306 + C10841 * C325) *
                C50862 +
            (C10849 * C3579 + C10844 * C3583 + C10848 * C1151 + C10843 * C1157 +
             C10847 * C300 + C10842 * C316 + C10846 * C295 + C10841 * C307) *
                C118) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C50737 * C1145 -
          ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
            C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
               C50862 +
           (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
            C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
               C118) *
              C50675 * C50737 * C1146 +
          ((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
            C10848 * C3581 + C10843 * C3587 + C10849 * C9236 + C10844 * C9240) *
               C118 +
           (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
            C10848 * C3586 + C10843 * C3590 + C10849 * C9239 + C10844 * C9242) *
               C50862) *
              C50675 * C50737 * C1147 -
          ((C10849 * C11537 + C10844 * C11539 + C10848 * C9239 +
            C10843 * C9242 + C10847 * C3586 + C10842 * C3590 + C10846 * C1160 +
            C10841 * C1165) *
               C50862 +
           (C10849 * C11536 + C10844 * C11538 + C10848 * C9236 +
            C10843 * C9240 + C10847 * C3581 + C10842 * C3587 + C10846 * C1153 +
            C10841 * C1161) *
               C118) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                  C118 +
              (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                  C50862) *
                 C2340 +
             ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
             C2402 * C2342) *
                C1725 -
            (C3117 * C2342 +
             ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
             ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                  C50862 +
              (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                  C118) *
                 C2340) *
                C50801) *
               C50968 +
           ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                  C118 +
              (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                  C50862) *
                 C2340 +
             ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
             ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
                C50801 -
            (C2954 * C2342 +
             ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
             ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                  C50862 +
              (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                  C118) *
                 C2340) *
                C1725) *
               C50773) *
              C50960 +
          (((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
             ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
             ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
                C50801 -
            (C2403 * C2342 +
             ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
             ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
                C1725) *
               C50968 +
           ((((C2589 + C2588) * C118 + (C2587 + C2586) * C50862) * C2340 +
             ((C2585 + C2584) * C118 + (C2583 + C2582) * C50862) * C2341 +
             ((C2950 + C2951) * C118 + (C2952 + C2953) * C50862) * C2342) *
                C1725 -
            (((C2344 * C1615 + C50848 * C1623 + C2343 * C944 + C50978 * C950) *
                  C50862 +
              (C2344 * C1611 + C50848 * C1616 + C2343 * C935 + C50978 * C943) *
                  C118) *
                 C2342 +
             ((C3335 + C3334) * C50862 + (C3333 + C3332) * C118) * C2341 +
             ((C3331 + C3330) * C50862 + (C3329 + C3328) * C118) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
              C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                 C118 +
             (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
              C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                 C50862) *
                C50675 * C1725 -
            ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 +
              C10843 * C1626 + C10847 * C938 + C10842 * C947 + C10846 * C499 +
              C10841 * C516) *
                 C50862 +
             (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 +
              C10843 * C1622 + C10847 * C932 + C10842 * C937 + C10846 * C486 +
              C10841 * C500) *
                 C118) *
                C50675 * C50801) *
               C50968 +
           (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
              C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
              C10844 * C9888) *
                 C118 +
             (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
              C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
              C10844 * C9890) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 +
              C10843 * C1165 + C10847 * C313 + C10842 * C328 + C10846 * C310 +
              C10841 * C327) *
                 C50862 +
             (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 +
              C10843 * C1161 + C10847 * C298 + C10842 * C312 + C10846 * C297 +
              C10841 * C311) *
                 C118) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          ((((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
              C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
              C10844 * C4241) *
                 C118 +
             (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
              C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
              C10844 * C4245) *
                 C50862) *
                C50675 * C50801 -
            ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
              C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                 C50862 +
             (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
              C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                 C118) *
                C50675 * C1725) *
               C50968 +
           (((C10846 * C296 + C10841 * C309 + C10847 * C299 + C10842 * C314 +
              C10848 * C1152 + C10843 * C1159 + C10849 * C3580 +
              C10844 * C3585) *
                 C118 +
             (C10846 * C308 + C10841 * C326 + C10847 * C315 + C10842 * C329 +
              C10848 * C1158 + C10843 * C1164 + C10849 * C3584 +
              C10844 * C3589) *
                 C50862) *
                C50675 * C1725 -
            ((C10849 * C9885 + C10844 * C9889 + C10848 * C4240 +
              C10843 * C4245 + C10847 * C1619 + C10842 * C1625 + C10846 * C940 +
              C10841 * C948) *
                 C50862 +
             (C10849 * C9883 + C10844 * C9886 + C10848 * C4236 +
              C10843 * C4241 + C10847 * C1613 + C10842 * C1620 + C10846 * C933 +
              C10841 * C939) *
                 C118) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C51014 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C51015 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C2141) *
              C50968 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C51015 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C51014 -
           (((C2344 * C3740 + C50848 * C3746 + C2343 * C1270 + C50978 * C1277) *
                 C50862 +
             (C2344 * C3737 + C50848 * C3741 + C2343 * C1265 + C50978 * C1271) *
                 C118) *
                C2342 +
            ((C2344 * C3742 + C50848 * C3747 + C2343 * C1272 + C50978 * C1278) *
                 C50862 +
             (C2344 * C3738 + C50848 * C3743 + C2343 * C1266 + C50978 * C1273) *
                 C118) *
                C2341 +
            ((C2344 * C3744 + C50848 * C3748 + C2343 * C1274 + C50978 * C1279) *
                 C50862 +
             (C2344 * C3739 + C50848 * C3745 + C2343 * C1267 + C50978 * C1275) *
                 C118) *
                C2340) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C51014 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C51015 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C2141) *
              C50968 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C51015 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C51014 -
           ((C10849 * C11639 + C10844 * C11641 + C10848 * C9393 +
             C10843 * C9396 + C10847 * C3744 + C10842 * C3748 + C10846 * C1274 +
             C10841 * C1279) *
                C50862 +
            (C10849 * C11638 + C10844 * C11640 + C10848 * C9390 +
             C10843 * C9394 + C10847 * C3739 + C10842 * C3745 + C10846 * C1267 +
             C10841 * C1275) *
                C118) *
               C50675 * C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C1725 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C289 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C50801 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C1725) *
              C290 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C1725 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50862 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C118) *
                C2342 +
            ((C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                 C50862 +
             (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                 C118) *
                C2341 +
            ((C2344 * C4242 + C50848 * C4246 + C2343 * C1621 + C50978 * C1626) *
                 C50862 +
             (C2344 * C4237 + C50848 * C4243 + C2343 * C1614 + C50978 * C1622) *
                 C118) *
                C2340) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C1725 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C50721 * C1076 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C50801 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C1725) *
              C50721 * C1077 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C1725 -
           (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                 C50862 +
             (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                 C118) *
                C2342 +
            ((C3116 + C3115) * C50862 + (C3114 + C3113) * C118) * C2341 +
            C3117 * C2340) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                C118 +
            (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                C50862) *
               C2340 +
           ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
           C2402 * C2342) *
              C1891 -
          (C3117 * C2342 +
           ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
           ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                C50862 +
            (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                C118) *
               C2340) *
              C1892 +
          (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                C118 +
            (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                C50862) *
               C2340 +
           ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
           ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
              C1893 -
          (((C2344 * C4640 + C50848 * C4646 + C2343 * C1901 + C50978 * C1908) *
                C50862 +
            (C2344 * C4637 + C50848 * C4641 + C2343 * C1896 + C50978 * C1902) *
                C118) *
               C2342 +
           ((C2344 * C4642 + C50848 * C4647 + C2343 * C1903 + C50978 * C1909) *
                C50862 +
            (C2344 * C4638 + C50848 * C4643 + C2343 * C1897 + C50978 * C1904) *
                C118) *
               C2341 +
           ((C2344 * C4644 + C50848 * C4648 + C2343 * C1905 + C50978 * C1910) *
                C50862 +
            (C2344 * C4639 + C50848 * C4645 + C2343 * C1898 + C50978 * C1906) *
                C118) *
               C2340) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4238 + C10844 * C4244 + C10848 * C1617 + C10843 * C1624 +
             C10847 * C942 + C10842 * C949 + C10846 * C495 + C10841 * C514) *
                C50862 +
            (C10849 * C4235 + C10844 * C4239 + C10848 * C1612 + C10843 * C1618 +
             C10847 * C934 + C10842 * C941 + C10846 * C484 + C10841 * C496) *
                C118) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C289 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C1725) *
              C290 +
          (((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C11969 + C10844 * C11971 + C10848 * C9887 +
             C10843 * C9890 + C10847 * C4242 + C10842 * C4246 + C10846 * C1621 +
             C10841 * C1626) *
                C50862 +
            (C10849 * C11968 + C10844 * C11970 + C10848 * C9884 +
             C10843 * C9888 + C10847 * C4237 + C10842 * C4243 + C10846 * C1614 +
             C10841 * C1622) *
                C118) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
            C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
               C118 +
           (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
            C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
               C50862) *
              C50675 * C1891 -
          ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
            C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
               C50862 +
           (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
            C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
               C118) *
              C50675 * C1892 +
          ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
            C10848 * C3739 + C10843 * C3745 + C10849 * C9390 + C10844 * C9394) *
               C118 +
           (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
            C10848 * C3744 + C10843 * C3748 + C10849 * C9393 + C10844 * C9396) *
               C50862) *
              C50675 * C1893 -
          ((C10849 * C12235 + C10844 * C12237 + C10848 * C10285 +
            C10843 * C10288 + C10847 * C4644 + C10842 * C4648 + C10846 * C1905 +
            C10841 * C1910) *
               C50862 +
           (C10849 * C12234 + C10844 * C12236 + C10848 * C10282 +
            C10843 * C10286 + C10847 * C4639 + C10842 * C4645 + C10846 * C1898 +
            C10841 * C1906) *
               C118) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C51014 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C51015 +
           (((C2343 * C487 + C50978 * C501 + C2344 * C1267 + C50848 * C1275) *
                 C118 +
             (C2343 * C502 + C50978 * C517 + C2344 * C1274 + C50848 * C1279) *
                 C50862) *
                C2340 +
            ((C2784 + C2785) * C118 + (C2786 + C2787) * C50862) * C2341 +
            ((C2788 + C2789) * C118 + (C2790 + C2791) * C50862) * C2342) *
               C2141) *
              C50721 * C50960 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C51015 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C51014 -
           (((C2344 * C1268 + C50848 * C1276 + C2343 * C508 + C50978 * C520) *
                 C50862 +
             (C2344 * C1264 + C50848 * C1269 + C2343 * C490 + C50978 * C507) *
                 C118) *
                C2342 +
            ((C2791 + C2790) * C50862 + (C2789 + C2788) * C118) * C2341 +
            ((C2787 + C2786) * C50862 + (C2785 + C2784) * C118) * C2340) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C51014 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C51015 +
           ((C10846 * C487 + C10841 * C501 + C10847 * C1267 + C10842 * C1275 +
             C10848 * C3739 + C10843 * C3745 + C10849 * C9390 +
             C10844 * C9394) *
                C118 +
            (C10846 * C502 + C10841 * C517 + C10847 * C1274 + C10842 * C1279 +
             C10848 * C3744 + C10843 * C3748 + C10849 * C9393 +
             C10844 * C9396) *
                C50862) *
               C50675 * C2141) *
              C50721 * C50960 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C51015 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C51014 -
           ((C10849 * C9391 + C10844 * C9395 + C10848 * C3742 + C10843 * C3747 +
             C10847 * C1272 + C10842 * C1278 + C10846 * C504 + C10841 * C518) *
                C50862 +
            (C10849 * C9389 + C10844 * C9392 + C10848 * C3738 + C10843 * C3743 +
             C10847 * C1266 + C10842 * C1273 + C10846 * C488 + C10841 * C503) *
                C118) *
               C50675 * C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C1725 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C50721 * C1076 +
          ((((C2783 + C2782) * C118 + (C2781 + C2780) * C50862) * C2340 +
            ((C2779 + C2778) * C118 + (C2777 + C2776) * C50862) * C2341 +
            ((C3113 + C3114) * C118 + (C3115 + C3116) * C50862) * C2342) *
               C50801 -
           (C2403 * C2342 +
            ((C2385 + C2384) * C50862 + (C2383 + C2382) * C118) * C2341 +
            ((C2381 + C2380) * C50862 + (C2379 + C2378) * C118) * C2340) *
               C1725) *
              C50721 * C1077 +
          ((C2402 * C2340 +
            ((C2389 + C2388) * C118 + (C2387 + C2386) * C50862) * C2341 +
            ((C2390 + C2391) * C118 + (C2392 + C2393) * C50862) * C2342) *
               C1725 -
           (((C2344 * C945 + C50848 * C951 + C2343 * C510 + C50978 * C521) *
                 C50862 +
             (C2344 * C936 + C50848 * C946 + C2343 * C491 + C50978 * C509) *
                 C118) *
                C2342 +
            ((C3116 + C3115) * C50862 + (C3114 + C3113) * C118) * C2341 +
            C3117 * C2340) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2343 * C119 + C50978 * C126 + C2344 * C297 + C50848 * C311) *
                 C118 +
             (C2343 * C127 + C50978 * C140 + C2344 * C310 + C50848 * C327) *
                 C50862) *
                C2340 +
            ((C2378 + C2379) * C118 + (C2380 + C2381) * C50862) * C2341 +
            C2402 * C2342) *
               C1725 -
           (C3117 * C2342 +
            ((C2780 + C2781) * C50862 + (C2782 + C2783) * C118) * C2341 +
            ((C2344 * C938 + C50848 * C947 + C2343 * C499 + C50978 * C516) *
                 C50862 +
             (C2344 * C932 + C50848 * C937 + C2343 * C486 + C50978 * C500) *
                 C118) *
                C2340) *
               C50801) *
              C289 +
          ((((C2343 * C932 + C50978 * C937 + C2344 * C1614 + C50848 * C1622) *
                 C118 +
             (C2343 * C938 + C50978 * C947 + C2344 * C1621 + C50848 * C1626) *
                 C50862) *
                C2340 +
            ((C3328 + C3329) * C118 + (C3330 + C3331) * C50862) * C2341 +
            ((C3332 + C3333) * C118 + (C3334 + C3335) * C50862) * C2342) *
               C50801 -
           (C2954 * C2342 +
            ((C2586 + C2587) * C50862 + (C2588 + C2589) * C118) * C2341 +
            ((C2344 * C313 + C50848 * C328 + C2343 * C310 + C50978 * C327) *
                 C50862 +
             (C2344 * C298 + C50848 * C312 + C2343 * C297 + C50978 * C311) *
                 C118) *
                C2340) *
               C1725) *
              C290 +
          ((((C2343 * C298 + C50978 * C312 + C2344 * C1153 + C50848 * C1161) *
                 C118 +
             (C2343 * C313 + C50978 * C328 + C2344 * C1160 + C50848 * C1165) *
                 C50862) *
                C2340 +
            ((C2590 + C2591) * C118 + (C2592 + C2593) * C50862) * C2341 +
            ((C2594 + C2595) * C118 + (C2596 + C2597) * C50862) * C2342) *
               C1725 -
           (((C2344 * C4238 + C50848 * C4244 + C2343 * C1617 + C50978 * C1624) *
                 C50862 +
             (C2344 * C4235 + C50848 * C4239 + C2343 * C1612 + C50978 * C1618) *
                 C118) *
                C2342 +
            ((C2344 * C4240 + C50848 * C4245 + C2343 * C1619 + C50978 * C1625) *
                 C50862 +
             (C2344 * C4236 + C50848 * C4241 + C2343 * C1613 + C50978 * C1620) *
                 C118) *
                C2341 +
            ((C2344 * C4242 + C50848 * C4246 + C2343 * C1621 + C50978 * C1626) *
                 C50862 +
             (C2344 * C4237 + C50848 * C4243 + C2343 * C1614 + C50978 * C1622) *
                 C118) *
                C2340) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C10846 * C485 + C10841 * C498 + C10847 * C933 + C10842 * C939 +
             C10848 * C1613 + C10843 * C1620 + C10849 * C4236 +
             C10844 * C4241) *
                C118 +
            (C10846 * C497 + C10841 * C515 + C10847 * C940 + C10842 * C948 +
             C10848 * C1619 + C10843 * C1625 + C10849 * C4240 +
             C10844 * C4245) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C1158 + C10844 * C1164 + C10848 * C315 + C10843 * C329 +
             C10847 * C308 + C10842 * C326 + C10846 * C129 + C10841 * C141) *
                C50862 +
            (C10849 * C1152 + C10844 * C1159 + C10848 * C299 + C10843 * C314 +
             C10847 * C296 + C10842 * C309 + C10846 * C120 + C10841 * C128) *
                C118) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C10846 * C121 + C10841 * C130 + C10847 * C295 + C10842 * C307 +
             C10848 * C300 + C10843 * C316 + C10849 * C1151 + C10844 * C1157) *
                C118 +
            (C10846 * C131 + C10841 * C142 + C10847 * C306 + C10842 * C325 +
             C10848 * C317 + C10843 * C330 + C10849 * C1156 + C10844 * C1163) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4238 + C10844 * C4244 + C10848 * C1617 + C10843 * C1624 +
             C10847 * C942 + C10842 * C949 + C10846 * C495 + C10841 * C514) *
                C50862 +
            (C10849 * C4235 + C10844 * C4239 + C10848 * C1612 + C10843 * C1618 +
             C10847 * C934 + C10842 * C941 + C10846 * C484 + C10841 * C496) *
                C118) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10846 * C119 + C10841 * C126 + C10847 * C297 + C10842 * C311 +
             C10848 * C298 + C10843 * C312 + C10849 * C1153 + C10844 * C1161) *
                C118 +
            (C10846 * C127 + C10841 * C140 + C10847 * C310 + C10842 * C327 +
             C10848 * C313 + C10843 * C328 + C10849 * C1160 + C10844 * C1165) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C4242 + C10844 * C4246 + C10848 * C1621 + C10843 * C1626 +
             C10847 * C938 + C10842 * C947 + C10846 * C499 + C10841 * C516) *
                C50862 +
            (C10849 * C4237 + C10844 * C4243 + C10848 * C1614 + C10843 * C1622 +
             C10847 * C932 + C10842 * C937 + C10846 * C486 + C10841 * C500) *
                C118) *
               C50675 * C50801) *
              C289 +
          (((C10846 * C932 + C10841 * C937 + C10847 * C1614 + C10842 * C1622 +
             C10848 * C4237 + C10843 * C4243 + C10849 * C9884 +
             C10844 * C9888) *
                C118 +
            (C10846 * C938 + C10841 * C947 + C10847 * C1621 + C10842 * C1626 +
             C10848 * C4242 + C10843 * C4246 + C10849 * C9887 +
             C10844 * C9890) *
                C50862) *
               C50675 * C50801 -
           ((C10849 * C3586 + C10844 * C3590 + C10848 * C1160 + C10843 * C1165 +
             C10847 * C313 + C10842 * C328 + C10846 * C310 + C10841 * C327) *
                C50862 +
            (C10849 * C3581 + C10844 * C3587 + C10848 * C1153 + C10843 * C1161 +
             C10847 * C298 + C10842 * C312 + C10846 * C297 + C10841 * C311) *
                C118) *
               C50675 * C1725) *
              C290 +
          (((C10846 * C298 + C10841 * C312 + C10847 * C1153 + C10842 * C1161 +
             C10848 * C3581 + C10843 * C3587 + C10849 * C9236 +
             C10844 * C9240) *
                C118 +
            (C10846 * C313 + C10841 * C328 + C10847 * C1160 + C10842 * C1165 +
             C10848 * C3586 + C10843 * C3590 + C10849 * C9239 +
             C10844 * C9242) *
                C50862) *
               C50675 * C1725 -
           ((C10849 * C11969 + C10844 * C11971 + C10848 * C9887 +
             C10843 * C9890 + C10847 * C4242 + C10842 * C4246 + C10846 * C1621 +
             C10841 * C1626) *
                C50862 +
            (C10849 * C11968 + C10844 * C11970 + C10848 * C9884 +
             C10843 * C9888 + C10847 * C4237 + C10842 * C4243 + C10846 * C1614 +
             C10841 * C1622) *
                C118) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C50968 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            ((C117 * C938 + C50832 * C947) * C50874 +
             (C117 * C932 + C50832 * C937) * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C50773) *
              C51010 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C50773 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C50968) *
              C51011 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50737 * C50968 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C5236 + C686 * C50980 +
             C685 * C5235) *
                C2342 +
            (C5770 + C5769 + C5768 + C5767) * C2341 + C5772 * C2340) *
               C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C50968 -
           ((C8032 * C4242 + C8027 * C4246 + C8031 * C1621 + C8026 * C1626 +
             C8030 * C938 + C8025 * C947) *
                C50874 +
            (C8032 * C4237 + C8027 * C4243 + C8031 * C1614 + C8026 * C1622 +
             C8030 * C932 + C8025 * C937) *
                C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C50773) *
              C51010 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C50773 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C50968) *
              C51011 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50737 * C50968 -
           ((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
             C8030 * C942 + C8025 * C949) *
                C50874 +
            (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
             C8030 * C934 + C8025 * C941) *
                C5236 +
            (C8615 + C8614 + C8613) * C50980 +
            (C8612 + C8611 + C8610) * C5235) *
               C50675 * C50737 * C50773) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C5235 +
              (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
              C5609 * C50874) *
                 C2340 +
             (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                C50969 -
            (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
             (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                 C2340) *
                C50801) *
               C50968 +
           (((C6136 * C5235 + C6137 * C50980 +
              (C117 * C1267 + C50832 * C1275) * C5236 +
              (C117 * C1274 + C50832 * C1279) * C50874) *
                 C2340 +
             (C6124 + C6125 + C6142 + C6143) * C2341 +
             (C6130 + C6131 + C6144 + C6145) * C2342) *
                C50801 -
            (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
             (C6137 * C50874 + C6136 * C5236 +
              (C117 * C310 + C50832 * C327) * C50980 +
              (C117 * C297 + C50832 * C311) * C5235) *
                 C2340) *
                C50969) *
               C50773) *
              C292 +
          ((((C5591 + C5590 + C5589 + C5588) * C2340 +
             (C5587 + C5586 + C5585 + C5584) * C2341 +
             (C5920 + C5921 + C5922 + C5923) * C2342) *
                C50801 -
            (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
             (C5241 + C5240 + C5239 + C5238) * C2340) *
                C50969) *
               C50968 +
           (((C5413 + C5412 + C5411 + C5410) * C2340 +
             (C5409 + C5408 + C5407 + C5406) * C2341 +
             (C5767 + C5768 + C5769 + C5770) * C2342) *
                C50969 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C5236 + C970 * C50980 +
              C969 * C5235) *
                 C2342 +
             (C6145 + C6144 + C6131 + C6130) * C2341 +
             (C6143 + C6142 + C6125 + C6124) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C5235 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50980 +
             (C12979 + C12980 + C12981) * C5236 +
             (C12982 + C12983 + C12984) * C50874) *
                C50675 * C50969 -
            ((C12985 + C12986 + C12987) * C50874 +
             (C12988 + C12989 + C12990) * C5236 +
             (C12984 + C12983 + C12982) * C50980 +
             (C12981 + C12980 + C12979) * C5235) *
                C50675 * C50801) *
               C50968 +
           (((C13489 + C13490 + C13491) * C5235 +
             (C13492 + C13493 + C13494) * C50980 +
             (C8030 * C1267 + C8025 * C1275 + C8031 * C3739 + C8026 * C3745 +
              C8032 * C9390 + C8027 * C9394) *
                 C5236 +
             (C8030 * C1274 + C8025 * C1279 + C8031 * C3744 + C8026 * C3748 +
              C8032 * C9393 + C8027 * C9396) *
                 C50874) *
                C50675 * C50801 -
            ((C13494 + C13493 + C13492) * C50874 +
             (C13491 + C13490 + C13489) * C5236 +
             (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50980 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C5235) *
                C50675 * C50969) *
               C50773) *
              C292 +
          ((((C8445 + C8444 + C8443) * C5235 +
             (C8442 + C8441 + C8440) * C50980 +
             (C8446 + C8447 + C8448) * C5236 +
             (C8449 + C8450 + C8451) * C50874) *
                C50675 * C50801 -
            ((C8440 + C8441 + C8442) * C50874 +
             (C8443 + C8444 + C8445) * C5236 +
             (C8075 + C8074 + C8073) * C50980 +
             (C8072 + C8071 + C8070) * C5235) *
                C50675 * C50969) *
               C50968 +
           (((C8263 + C8262 + C8261) * C5235 +
             (C8260 + C8259 + C8258) * C50980 +
             (C8986 + C8987 + C8988) * C5236 +
             (C8989 + C8990 + C8991) * C50874) *
                C50675 * C50969 -
            ((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50874 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C5236 +
             (C8991 + C8990 + C8989) * C50980 +
             (C8988 + C8987 + C8986) * C5235) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 +
             (C117 * C486 + C50832 * C500) * C5236 +
             (C117 * C499 + C50832 * C516) * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C289 -
           ((C5406 + C5407 + C5408 + C5409) * C2342 +
            (C5410 + C5411 + C5412 + C5413) * C2341 +
            ((C117 * C938 + C50832 * C947) * C50874 +
             (C117 * C932 + C50832 * C937) * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 +
             (C117 * C1614 + C50832 * C1622) * C5236 +
             (C117 * C1621 + C50832 * C1626) * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50737 * C291) *
              C292 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C360 * C5235 + C359 * C50980 + C969 * C5236 + C970 * C50874) *
                C2342) *
               C50737 * C290 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C289 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C5236 + C370 * C50980 +
             C369 * C5235) *
                C2342 +
            (C5433 + C5432 + C5421 + C5420) * C2341 +
            (C5431 + C5430 + C5415 + C5414) * C2340) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 +
            (C117 * C486 + C50832 * C500) * C5236 +
            (C117 * C499 + C50832 * C516) * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C50737 * C50721 * C113 -
          (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
           (C5241 + C5240 + C5239 + C5238) * C2340) *
              C50737 * C50721 * C114 +
          (C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
           (C5250 + C5251 + C5252 + C5253) * C2342) *
              C50737 * C50721 * C115 -
          (((C117 * C789 + C50832 * C791) * C50874 +
            (C117 * C788 + C50832 * C790) * C5236 + C177 * C50980 +
            C176 * C5235) *
               C2342 +
           (C5253 + C5252 + C5251 + C5250) * C2341 + C5259 * C2340) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C480 -
           ((C5584 + C5585 + C5586 + C5587) * C2342 +
            (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C481 +
           ((C5611 * C5235 + C5610 * C50980 +
             (C117 * C1898 + C50832 * C1906) * C5236 +
             (C117 * C1905 + C50832 * C1910) * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C482) *
              C50721 * C292 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C549 * C5235 + C548 * C50980 + C558 * C5236 + C559 * C50874) *
                C2342) *
               C481 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C480 -
           (((C117 * C1899 + C50832 * C1907) * C50874 +
             (C117 * C1895 + C50832 * C1900) * C5236 + C559 * C50980 +
             C558 * C5235) *
                C2342 +
            (C5619 + C5618 + C5603 + C5602) * C2341 +
            (C5617 + C5616 + C5597 + C5596) * C2340) *
               C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
            C8032 * C1614 + C8027 * C1622) *
               C5236 +
           (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
            C8032 * C1621 + C8027 * C1626) *
               C50874) *
              C50675 * C50737 * C50721 * C113 -
          ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
           (C8075 + C8074 + C8073) * C50980 + (C8072 + C8071 + C8070) * C5235) *
              C50675 * C50737 * C50721 * C114 +
          ((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
           (C8774 + C8775 + C8776) * C5236 + (C8777 + C8778 + C8779) * C50874) *
              C50675 * C50737 * C50721 * C115 -
          ((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
            C8030 * C493 + C8025 * C513) *
               C50874 +
           (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
            C8030 * C483 + C8025 * C494) *
               C5236 +
           (C8087 + C8086 + C8085) * C50980 + (C8084 + C8083 + C8082) * C5235) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
             C8032 * C1614 + C8027 * C1622) *
                C5236 +
            (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
             C8032 * C1621 + C8027 * C1626) *
                C50874) *
               C50675 * C50737 * C289 -
           ((C8032 * C4242 + C8027 * C4246 + C8031 * C1621 + C8026 * C1626 +
             C8030 * C938 + C8025 * C947) *
                C50874 +
            (C8032 * C4237 + C8027 * C4243 + C8031 * C1614 + C8026 * C1622 +
             C8030 * C932 + C8025 * C937) *
                C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C290 +
           ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
             C8032 * C9884 + C8027 * C9888) *
                C5236 +
            (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
             C8032 * C9887 + C8027 * C9890) *
                C50874) *
               C50675 * C50737 * C291) *
              C292 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C290 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C289 -
           ((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
             C8030 * C1619 + C8025 * C1625) *
                C50874 +
            (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
             C8030 * C1613 + C8025 * C1620) *
                C5236 +
            (C8269 + C8268 + C8267) * C50980 +
            (C8266 + C8265 + C8264) * C5235) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C480 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C481 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C8030 * C1898 + C8025 * C1906 + C8031 * C4639 + C8026 * C4645 +
             C8032 * C10282 + C8027 * C10286) *
                C5236 +
            (C8030 * C1905 + C8025 * C1910 + C8031 * C4644 + C8026 * C4648 +
             C8032 * C10285 + C8027 * C10288) *
                C50874) *
               C50675 * C482) *
              C50721 * C292 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C481 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C480 -
           ((C8032 * C10283 + C8027 * C10287 + C8031 * C4642 + C8026 * C4647 +
             C8030 * C1903 + C8025 * C1909) *
                C50874 +
            (C8032 * C10281 + C8027 * C10284 + C8031 * C4638 + C8026 * C4643 +
             C8030 * C1897 + C8025 * C1904) *
                C5236 +
            (C8451 + C8450 + C8449) * C50980 +
            (C8448 + C8447 + C8446) * C5235) *
               C50675 * C482) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50969 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C50721 * C51010 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C50801 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50969) *
              C50721 * C51011 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50969 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C5236 + C800 * C50980 +
             C799 * C5235) *
                C2342 +
            (C5923 + C5922 + C5921 + C5920) * C2341 + C5925 * C2340) *
               C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50969 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C50721 * C51010 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C50801 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50969) *
              C50721 * C51011 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50969 -
           ((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
             C8030 * C506 + C8025 * C519) *
                C50874 +
            (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
             C8030 * C489 + C8025 * C505) *
                C5236 +
            (C8779 + C8778 + C8777) * C50980 +
            (C8776 + C8775 + C8774) * C5235) *
               C50675 * C50801) *
              C50721 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 +
            (C117 * C486 + C50832 * C500) * C5236 +
            (C117 * C499 + C50832 * C516) * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C50737 * C50721 * C113 -
          (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
           (C5241 + C5240 + C5239 + C5238) * C2340) *
              C50737 * C50721 * C114 +
          (C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
           (C5250 + C5251 + C5252 + C5253) * C2342) *
              C50737 * C50721 * C115 -
          (((C117 * C789 + C50832 * C791) * C50874 +
            (C117 * C788 + C50832 * C790) * C5236 + C177 * C50980 +
            C176 * C5235) *
               C2342 +
           (C5253 + C5252 + C5251 + C5250) * C2341 + C5259 * C2340) *
              C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 +
             (C117 * C486 + C50832 * C500) * C5236 +
             (C117 * C499 + C50832 * C516) * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C289 -
           ((C5406 + C5407 + C5408 + C5409) * C2342 +
            (C5410 + C5411 + C5412 + C5413) * C2341 +
            ((C117 * C938 + C50832 * C947) * C50874 +
             (C117 * C932 + C50832 * C937) * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C290 +
           (((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 +
             (C117 * C1614 + C50832 * C1622) * C5236 +
             (C117 * C1621 + C50832 * C1626) * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50737 * C291) *
              C292 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C360 * C5235 + C359 * C50980 + C969 * C5236 + C970 * C50874) *
                C2342) *
               C50737 * C290 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C289 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C5236 + C370 * C50980 +
             C369 * C5235) *
                C2342 +
            (C5433 + C5432 + C5421 + C5420) * C2341 +
            (C5431 + C5430 + C5415 + C5414) * C2340) *
               C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
            C8032 * C1614 + C8027 * C1622) *
               C5236 +
           (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
            C8032 * C1621 + C8027 * C1626) *
               C50874) *
              C50675 * C50737 * C50721 * C113 -
          ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
           (C8075 + C8074 + C8073) * C50980 + (C8072 + C8071 + C8070) * C5235) *
              C50675 * C50737 * C50721 * C114 +
          ((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
           (C8774 + C8775 + C8776) * C5236 + (C8777 + C8778 + C8779) * C50874) *
              C50675 * C50737 * C50721 * C115 -
          ((C8032 * C1615 + C8027 * C1623 + C8031 * C944 + C8026 * C950 +
            C8030 * C493 + C8025 * C513) *
               C50874 +
           (C8032 * C1611 + C8027 * C1616 + C8031 * C935 + C8026 * C943 +
            C8030 * C483 + C8025 * C494) *
               C5236 +
           (C8087 + C8086 + C8085) * C50980 + (C8084 + C8083 + C8082) * C5235) *
              C50675 * C50737 * C50721 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C8030 * C486 + C8025 * C500 + C8031 * C932 + C8026 * C937 +
             C8032 * C1614 + C8027 * C1622) *
                C5236 +
            (C8030 * C499 + C8025 * C516 + C8031 * C938 + C8026 * C947 +
             C8032 * C1621 + C8027 * C1626) *
                C50874) *
               C50675 * C50737 * C289 -
           ((C8032 * C4242 + C8027 * C4246 + C8031 * C1621 + C8026 * C1626 +
             C8030 * C938 + C8025 * C947) *
                C50874 +
            (C8032 * C4237 + C8027 * C4243 + C8031 * C1614 + C8026 * C1622 +
             C8030 * C932 + C8025 * C937) *
                C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C290 +
           ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
             C8032 * C9884 + C8027 * C9888) *
                C5236 +
            (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
             C8032 * C9887 + C8027 * C9890) *
                C50874) *
               C50675 * C50737 * C291) *
              C292 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C290 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C289 -
           ((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
             C8030 * C1619 + C8025 * C1625) *
                C50874 +
            (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
             C8030 * C1613 + C8025 * C1620) *
                C5236 +
            (C8269 + C8268 + C8267) * C50980 +
            (C8266 + C8265 + C8264) * C5235) *
               C50675 * C50737 * C291) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C51012 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C51013 +
           (((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 +
             (C117 * C1614 + C50832 * C1622) * C5236 +
             (C117 * C1621 + C50832 * C1626) * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50737 * C1380) *
              C50960 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C51013 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C51012 -
           (((C117 * C1615 + C50832 * C1623) * C50874 +
             (C117 * C1611 + C50832 * C1616) * C5236 + C370 * C50980 +
             C369 * C5235) *
                C2342 +
            (C5433 + C5432 + C5421 + C5420) * C2341 +
            (C5431 + C5430 + C5415 + C5414) * C2340) *
               C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C51012 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C51013 +
           ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
             C8032 * C9884 + C8027 * C9888) *
                C5236 +
            (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
             C8032 * C9887 + C8027 * C9890) *
                C50874) *
               C50675 * C50737 * C1380) *
              C50960 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C51013 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C51012 -
           ((C8032 * C9885 + C8027 * C9889 + C8031 * C4240 + C8026 * C4245 +
             C8030 * C1619 + C8025 * C1625) *
                C50874 +
            (C8032 * C9883 + C8027 * C9886 + C8031 * C4236 + C8026 * C4241 +
             C8030 * C1613 + C8025 * C1620) *
                C5236 +
            (C8269 + C8268 + C8267) * C50980 +
            (C8266 + C8265 + C8264) * C5235) *
               C50675 * C50737 * C1380) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50969 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C51012 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C50801 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50969) *
              C51013 +
          ((((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 + C7032 * C5236 +
             C7033 * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C50969 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C5236 + C5429 * C50980 +
             C5428 * C5235) *
                C2342 +
            ((C117 * C3742 + C50832 * C3747) * C50874 +
             (C117 * C3738 + C50832 * C3743) * C5236 + C5427 * C50980 +
             C5426 * C5235) *
                C2341 +
            ((C117 * C3744 + C50832 * C3748) * C50874 +
             (C117 * C3739 + C50832 * C3745) * C5236 + C7033 * C50980 +
             C7032 * C5235) *
                C2340) *
               C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50969 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C51012 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C50801 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50969) *
              C51013 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C14401 + C14402 + C14403) * C5236 +
            (C14404 + C14405 + C14406) * C50874) *
               C50675 * C50969 -
           ((C8032 * C11639 + C8027 * C11641 + C8031 * C9393 + C8026 * C9396 +
             C8030 * C3744 + C8025 * C3748) *
                C50874 +
            (C8032 * C11638 + C8027 * C11640 + C8031 * C9390 + C8026 * C9394 +
             C8030 * C3739 + C8025 * C3745) *
                C5236 +
            (C14406 + C14405 + C14404) * C50980 +
            (C14403 + C14402 + C14401) * C5235) *
               C50675 * C50801) *
              C1380) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
            C5609 * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C50737 * C1145 -
          (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
           (C6137 * C50874 + C6136 * C5236 +
            (C117 * C310 + C50832 * C327) * C50980 +
            (C117 * C297 + C50832 * C311) * C5235) *
               C2340) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C5235 +
            (C117 * C313 + C50832 * C328) * C50980 +
            (C117 * C1614 + C50832 * C1622) * C5236 +
            (C117 * C1621 + C50832 * C1626) * C50874) *
               C2340 +
           (C5414 + C5415 + C5430 + C5431) * C2341 +
           (C5420 + C5421 + C5432 + C5433) * C2342) *
              C50737 * C1147 -
          (((C117 * C4238 + C50832 * C4244) * C50874 +
            (C117 * C4235 + C50832 * C4239) * C5236 +
            (C117 * C1156 + C50832 * C1163) * C50980 +
            (C117 * C1151 + C50832 * C1157) * C5235) *
               C2342 +
           ((C117 * C4240 + C50832 * C4245) * C50874 +
            (C117 * C4236 + C50832 * C4241) * C5236 +
            (C117 * C1158 + C50832 * C1164) * C50980 +
            (C117 * C1152 + C50832 * C1159) * C5235) *
               C2341 +
           ((C117 * C4242 + C50832 * C4246) * C50874 +
            (C117 * C4237 + C50832 * C4243) * C5236 +
            (C117 * C1160 + C50832 * C1165) * C50980 +
            (C117 * C1153 + C50832 * C1161) * C5235) *
               C2340) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C1074 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C50773) *
              C1076 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C50773 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C1074) *
              C1077 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50737 * C1074 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C5236 + C686 * C50980 +
             C685 * C5235) *
                C2342 +
            (C5770 + C5769 + C5768 + C5767) * C2341 + C5772 * C2340) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C480 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C481 +
           ((C5611 * C5235 + C5610 * C50980 +
             (C117 * C1898 + C50832 * C1906) * C5236 +
             (C117 * C1905 + C50832 * C1910) * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C482) *
              C1074 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C481 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C480 -
           (((C117 * C4640 + C50832 * C4646) * C50874 +
             (C117 * C4637 + C50832 * C4641) * C5236 + C6141 * C50980 +
             C6140 * C5235) *
                C2342 +
            ((C117 * C4642 + C50832 * C4647) * C50874 +
             (C117 * C4638 + C50832 * C4643) * C5236 + C6139 * C50980 +
             C6138 * C5235) *
                C2341 +
            ((C117 * C4644 + C50832 * C4648) * C50874 +
             (C117 * C4639 + C50832 * C4645) * C5236 + C6541 * C50980 +
             C6540 * C5235) *
                C2340) *
               C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C1074 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C50773 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50737 * C1074 -
           ((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
             C8030 * C942 + C8025 * C949) *
                C50874 +
            (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
             C8030 * C934 + C8025 * C941) *
                C5236 +
            (C8615 + C8614 + C8613) * C50980 +
            (C8612 + C8611 + C8610) * C5235) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C12979 + C12980 + C12981) * C5236 +
           (C12982 + C12983 + C12984) * C50874) *
              C50675 * C50737 * C1145 -
          ((C13494 + C13493 + C13492) * C50874 +
           (C13491 + C13490 + C13489) * C5236 +
           (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
            C8030 * C310 + C8025 * C327) *
               C50980 +
           (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
            C8030 * C297 + C8025 * C311) *
               C5235) *
              C50675 * C50737 * C1146 +
          ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
            C8032 * C3581 + C8027 * C3587) *
               C5235 +
           (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
            C8032 * C3586 + C8027 * C3590) *
               C50980 +
           (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
            C8032 * C9884 + C8027 * C9888) *
               C5236 +
           (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
            C8032 * C9887 + C8027 * C9890) *
               C50874) *
              C50675 * C50737 * C1147 -
          ((C8032 * C11969 + C8027 * C11971 + C8031 * C9887 + C8026 * C9890 +
            C8030 * C4242 + C8025 * C4246) *
               C50874 +
           (C8032 * C11968 + C8027 * C11970 + C8031 * C9884 + C8026 * C9888 +
            C8030 * C4237 + C8025 * C4243) *
               C5236 +
           (C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
            C8030 * C1160 + C8025 * C1165) *
               C50980 +
           (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
            C8030 * C1153 + C8025 * C1161) *
               C5235) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C480 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C481 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C8030 * C1898 + C8025 * C1906 + C8031 * C4639 + C8026 * C4645 +
             C8032 * C10282 + C8027 * C10286) *
                C5236 +
            (C8030 * C1905 + C8025 * C1910 + C8031 * C4644 + C8026 * C4648 +
             C8032 * C10285 + C8027 * C10288) *
                C50874) *
               C50675 * C482) *
              C1074 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C481 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C480 -
           ((C8032 * C12235 + C8027 * C12237 + C8031 * C10285 + C8026 * C10288 +
             C8030 * C4644 + C8025 * C4648) *
                C50874 +
            (C8032 * C12234 + C8027 * C12236 + C8031 * C10282 + C8026 * C10286 +
             C8030 * C4639 + C8025 * C4645) *
                C5236 +
            (C13902 + C13901 + C13900) * C50980 +
            (C13899 + C13898 + C13897) * C5235) *
               C50675 * C482) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C5235 +
              (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
              C5609 * C50874) *
                 C2340 +
             (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                C50969 -
            (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
             (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                 C2340) *
                C50801) *
               C1074 +
           (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                 C2340 +
             (C6124 + C6125 + C6142 + C6143) * C2341 +
             (C6130 + C6131 + C6144 + C6145) * C2342) *
                C50801 -
            (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
             (C6137 * C50874 + C6136 * C5236 +
              (C117 * C310 + C50832 * C327) * C50980 +
              (C117 * C297 + C50832 * C311) * C5235) *
                 C2340) *
                C50969) *
               C50773) *
              C50960 +
          ((((C5591 + C5590 + C5589 + C5588) * C2340 +
             (C5587 + C5586 + C5585 + C5584) * C2341 +
             (C5920 + C5921 + C5922 + C5923) * C2342) *
                C50801 -
            (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
             (C5241 + C5240 + C5239 + C5238) * C2340) *
                C50969) *
               C1074 +
           (((C5413 + C5412 + C5411 + C5410) * C2340 +
             (C5409 + C5408 + C5407 + C5406) * C2341 +
             (C5767 + C5768 + C5769 + C5770) * C2342) *
                C50969 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C5236 + C970 * C50980 +
              C969 * C5235) *
                 C2342 +
             (C6145 + C6144 + C6131 + C6130) * C2341 +
             (C6143 + C6142 + C6125 + C6124) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C5235 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50980 +
             (C12979 + C12980 + C12981) * C5236 +
             (C12982 + C12983 + C12984) * C50874) *
                C50675 * C50969 -
            ((C12985 + C12986 + C12987) * C50874 +
             (C12988 + C12989 + C12990) * C5236 +
             (C12984 + C12983 + C12982) * C50980 +
             (C12981 + C12980 + C12979) * C5235) *
                C50675 * C50801) *
               C1074 +
           (((C13489 + C13490 + C13491) * C5235 +
             (C13492 + C13493 + C13494) * C50980 +
             (C13897 + C13898 + C13899) * C5236 +
             (C13900 + C13901 + C13902) * C50874) *
                C50675 * C50801 -
            ((C13494 + C13493 + C13492) * C50874 +
             (C13491 + C13490 + C13489) * C5236 +
             (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50980 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C5235) *
                C50675 * C50969) *
               C50773) *
              C50960 +
          ((((C8445 + C8444 + C8443) * C5235 +
             (C8442 + C8441 + C8440) * C50980 +
             (C8446 + C8447 + C8448) * C5236 +
             (C8449 + C8450 + C8451) * C50874) *
                C50675 * C50801 -
            ((C8440 + C8441 + C8442) * C50874 +
             (C8443 + C8444 + C8445) * C5236 +
             (C8075 + C8074 + C8073) * C50980 +
             (C8072 + C8071 + C8070) * C5235) *
                C50675 * C50969) *
               C1074 +
           (((C8263 + C8262 + C8261) * C5235 +
             (C8260 + C8259 + C8258) * C50980 +
             (C8986 + C8987 + C8988) * C5236 +
             (C8989 + C8990 + C8991) * C50874) *
                C50675 * C50969 -
            ((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50874 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C5236 +
             (C8991 + C8990 + C8989) * C50980 +
             (C8988 + C8987 + C8986) * C5235) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C50737 * C1074 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C50737 * C50773) *
              C1076 +
          (((C5413 + C5412 + C5411 + C5410) * C2340 +
            (C5409 + C5408 + C5407 + C5406) * C2341 +
            (C5767 + C5768 + C5769 + C5770) * C2342) *
               C50737 * C50773 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C50737 * C1074) *
              C1077 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C50737 * C1074 -
           (((C117 * C945 + C50832 * C951) * C50874 +
             (C117 * C936 + C50832 * C946) * C5236 + C686 * C50980 +
             C685 * C5235) *
                C2342 +
            (C5770 + C5769 + C5768 + C5767) * C2341 + C5772 * C2340) *
               C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
            C5609 * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C50737 * C1145 -
          (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
           (C6137 * C50874 + C6136 * C5236 +
            (C117 * C310 + C50832 * C327) * C50980 +
            (C117 * C297 + C50832 * C311) * C5235) *
               C2340) *
              C50737 * C1146 +
          (((C117 * C298 + C50832 * C312) * C5235 +
            (C117 * C313 + C50832 * C328) * C50980 +
            (C117 * C1614 + C50832 * C1622) * C5236 +
            (C117 * C1621 + C50832 * C1626) * C50874) *
               C2340 +
           (C5414 + C5415 + C5430 + C5431) * C2341 +
           (C5420 + C5421 + C5432 + C5433) * C2342) *
              C50737 * C1147 -
          (((C117 * C4238 + C50832 * C4244) * C50874 +
            (C117 * C4235 + C50832 * C4239) * C5236 +
            (C117 * C1156 + C50832 * C1163) * C50980 +
            (C117 * C1151 + C50832 * C1157) * C5235) *
               C2342 +
           ((C117 * C4240 + C50832 * C4245) * C50874 +
            (C117 * C4236 + C50832 * C4241) * C5236 +
            (C117 * C1158 + C50832 * C1164) * C50980 +
            (C117 * C1152 + C50832 * C1159) * C5235) *
               C2341 +
           ((C117 * C4242 + C50832 * C4246) * C50874 +
            (C117 * C4237 + C50832 * C4243) * C5236 +
            (C117 * C1160 + C50832 * C1165) * C50980 +
            (C117 * C1153 + C50832 * C1161) * C5235) *
               C2340) *
              C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C50737 * C1074 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C50737 * C50773) *
              C1076 +
          (((C8263 + C8262 + C8261) * C5235 + (C8260 + C8259 + C8258) * C50980 +
            (C8986 + C8987 + C8988) * C5236 +
            (C8989 + C8990 + C8991) * C50874) *
               C50675 * C50737 * C50773 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C50737 * C1074) *
              C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C50737 * C1074 -
           ((C8032 * C4238 + C8027 * C4244 + C8031 * C1617 + C8026 * C1624 +
             C8030 * C942 + C8025 * C949) *
                C50874 +
            (C8032 * C4235 + C8027 * C4239 + C8031 * C1612 + C8026 * C1618 +
             C8030 * C934 + C8025 * C941) *
                C5236 +
            (C8615 + C8614 + C8613) * C50980 +
            (C8612 + C8611 + C8610) * C5235) *
               C50675 * C50737 * C50773) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C12979 + C12980 + C12981) * C5236 +
           (C12982 + C12983 + C12984) * C50874) *
              C50675 * C50737 * C1145 -
          ((C13494 + C13493 + C13492) * C50874 +
           (C13491 + C13490 + C13489) * C5236 +
           (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
            C8030 * C310 + C8025 * C327) *
               C50980 +
           (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
            C8030 * C297 + C8025 * C311) *
               C5235) *
              C50675 * C50737 * C1146 +
          ((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
            C8032 * C3581 + C8027 * C3587) *
               C5235 +
           (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
            C8032 * C3586 + C8027 * C3590) *
               C50980 +
           (C8030 * C1614 + C8025 * C1622 + C8031 * C4237 + C8026 * C4243 +
            C8032 * C9884 + C8027 * C9888) *
               C5236 +
           (C8030 * C1621 + C8025 * C1626 + C8031 * C4242 + C8026 * C4246 +
            C8032 * C9887 + C8027 * C9890) *
               C50874) *
              C50675 * C50737 * C1147 -
          ((C8032 * C11969 + C8027 * C11971 + C8031 * C9887 + C8026 * C9890 +
            C8030 * C4242 + C8025 * C4246) *
               C50874 +
           (C8032 * C11968 + C8027 * C11970 + C8031 * C9884 + C8026 * C9888 +
            C8030 * C4237 + C8025 * C4243) *
               C5236 +
           (C8032 * C9239 + C8027 * C9242 + C8031 * C3586 + C8026 * C3590 +
            C8030 * C1160 + C8025 * C1165) *
               C50980 +
           (C8032 * C9236 + C8027 * C9240 + C8031 * C3581 + C8026 * C3587 +
            C8030 * C1153 + C8025 * C1161) *
               C5235) *
              C50675 * C50737 * C1148) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50832 * C126) * C5235 +
              (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
              C5609 * C50874) *
                 C2340 +
             (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
                C1725 -
            (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
             (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                 C2340) *
                C50801) *
               C50968 +
           (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                 C2340 +
             (C6124 + C6125 + C6142 + C6143) * C2341 +
             (C6130 + C6131 + C6144 + C6145) * C2342) *
                C50801 -
            (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
             (C6137 * C50874 + C6136 * C5236 +
              (C117 * C310 + C50832 * C327) * C50980 +
              (C117 * C297 + C50832 * C311) * C5235) *
                 C2340) *
                C1725) *
               C50773) *
              C50960 +
          ((((C5591 + C5590 + C5589 + C5588) * C2340 +
             (C5587 + C5586 + C5585 + C5584) * C2341 +
             (C5920 + C5921 + C5922 + C5923) * C2342) *
                C50801 -
            (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
             (C5241 + C5240 + C5239 + C5238) * C2340) *
                C1725) *
               C50968 +
           (((C5413 + C5412 + C5411 + C5410) * C2340 +
             (C5409 + C5408 + C5407 + C5406) * C2341 +
             (C5767 + C5768 + C5769 + C5770) * C2342) *
                C1725 -
            (((C117 * C1268 + C50832 * C1276) * C50874 +
              (C117 * C1264 + C50832 * C1269) * C5236 + C970 * C50980 +
              C969 * C5235) *
                 C2342 +
             (C6145 + C6144 + C6131 + C6130) * C2341 +
             (C6143 + C6142 + C6125 + C6124) * C2340) *
                C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
              C8032 * C298 + C8027 * C312) *
                 C5235 +
             (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
              C8032 * C313 + C8027 * C328) *
                 C50980 +
             (C12979 + C12980 + C12981) * C5236 +
             (C12982 + C12983 + C12984) * C50874) *
                C50675 * C1725 -
            ((C12985 + C12986 + C12987) * C50874 +
             (C12988 + C12989 + C12990) * C5236 +
             (C12984 + C12983 + C12982) * C50980 +
             (C12981 + C12980 + C12979) * C5235) *
                C50675 * C50801) *
               C50968 +
           (((C13489 + C13490 + C13491) * C5235 +
             (C13492 + C13493 + C13494) * C50980 +
             (C13897 + C13898 + C13899) * C5236 +
             (C13900 + C13901 + C13902) * C50874) *
                C50675 * C50801 -
            ((C13494 + C13493 + C13492) * C50874 +
             (C13491 + C13490 + C13489) * C5236 +
             (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
              C8030 * C310 + C8025 * C327) *
                 C50980 +
             (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
              C8030 * C297 + C8025 * C311) *
                 C5235) *
                C50675 * C1725) *
               C50773) *
              C50960 +
          ((((C8445 + C8444 + C8443) * C5235 +
             (C8442 + C8441 + C8440) * C50980 +
             (C8446 + C8447 + C8448) * C5236 +
             (C8449 + C8450 + C8451) * C50874) *
                C50675 * C50801 -
            ((C8440 + C8441 + C8442) * C50874 +
             (C8443 + C8444 + C8445) * C5236 +
             (C8075 + C8074 + C8073) * C50980 +
             (C8072 + C8071 + C8070) * C5235) *
                C50675 * C1725) *
               C50968 +
           (((C8263 + C8262 + C8261) * C5235 +
             (C8260 + C8259 + C8258) * C50980 +
             (C8986 + C8987 + C8988) * C5236 +
             (C8989 + C8990 + C8991) * C50874) *
                C50675 * C1725 -
            ((C8032 * C9391 + C8027 * C9395 + C8031 * C3742 + C8026 * C3747 +
              C8030 * C1272 + C8025 * C1278) *
                 C50874 +
             (C8032 * C9389 + C8027 * C9392 + C8031 * C3738 + C8026 * C3743 +
              C8030 * C1266 + C8025 * C1273) *
                 C5236 +
             (C8991 + C8990 + C8989) * C50980 +
             (C8988 + C8987 + C8986) * C5235) *
                C50675 * C50801) *
               C50773) *
              C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C51014 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C51015 +
           ((C5611 * C5235 + C5610 * C50980 + C7440 * C5236 + C7441 * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C2141) *
              C50968 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C51015 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C51014 -
           (((C117 * C4640 + C50832 * C4646) * C50874 +
             (C117 * C4637 + C50832 * C4641) * C5236 + C6141 * C50980 +
             C6140 * C5235) *
                C2342 +
            ((C117 * C4642 + C50832 * C4647) * C50874 +
             (C117 * C4638 + C50832 * C4643) * C5236 + C6139 * C50980 +
             C6138 * C5235) *
                C2341 +
            ((C117 * C4644 + C50832 * C4648) * C50874 +
             (C117 * C4639 + C50832 * C4645) * C5236 + C6541 * C50980 +
             C6540 * C5235) *
                C2340) *
               C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C51014 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C51015 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C14817 + C14818 + C14819) * C5236 +
            (C14820 + C14821 + C14822) * C50874) *
               C50675 * C2141) *
              C50968 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C51015 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C51014 -
           ((C8032 * C12235 + C8027 * C12237 + C8031 * C10285 + C8026 * C10288 +
             C8030 * C4644 + C8025 * C4648) *
                C50874 +
            (C8032 * C12234 + C8027 * C12236 + C8031 * C10282 + C8026 * C10286 +
             C8030 * C4639 + C8025 * C4645) *
                C5236 +
            (C13902 + C13901 + C13900) * C50980 +
            (C13899 + C13898 + C13897) * C5235) *
               C50675 * C2141) *
              C50773) *
         C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C1725 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C289 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C50801 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 + C7032 * C5236 +
             C7033 * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C1725 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C5236 + C5429 * C50980 +
             C5428 * C5235) *
                C2342 +
            ((C117 * C3742 + C50832 * C3747) * C50874 +
             (C117 * C3738 + C50832 * C3743) * C5236 + C5427 * C50980 +
             C5426 * C5235) *
                C2341 +
            ((C117 * C3744 + C50832 * C3748) * C50874 +
             (C117 * C3739 + C50832 * C3745) * C5236 + C7033 * C50980 +
             C7032 * C5235) *
                C2340) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C1725 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C50721 * C1076 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C50801 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C1725) *
              C50721 * C1077 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C1725 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C5236 + C800 * C50980 +
             C799 * C5235) *
                C2342 +
            (C5923 + C5922 + C5921 + C5920) * C2341 + C5925 * C2340) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50832 * C126) * C5235 +
            (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
            C5609 * C50874) *
               C2340 +
           (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
              C1891 -
          (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
           (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
               C2340) *
              C1892 +
          ((C5611 * C5235 + C5610 * C50980 + C7440 * C5236 + C7441 * C50874) *
               C2340 +
           (C5596 + C5597 + C5616 + C5617) * C2341 +
           (C5602 + C5603 + C5618 + C5619) * C2342) *
              C1893 -
          (((C117 * C7426 + C50832 * C7432) * C50874 +
            (C117 * C7423 + C50832 * C7427) * C5236 + C5615 * C50980 +
            C5614 * C5235) *
               C2342 +
           ((C117 * C7428 + C50832 * C7433) * C50874 +
            (C117 * C7424 + C50832 * C7429) * C5236 + C5613 * C50980 +
            C5612 * C5235) *
               C2341 +
           ((C117 * C7430 + C50832 * C7434) * C50874 +
            (C117 * C7425 + C50832 * C7431) * C5236 + C7441 * C50980 +
            C7440 * C5235) *
               C2340) *
              C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C50801 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C1725 -
           ((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
             C8030 * C506 + C8025 * C519) *
                C50874 +
            (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
             C8030 * C489 + C8025 * C505) *
                C5236 +
            (C8779 + C8778 + C8777) * C50980 +
            (C8776 + C8775 + C8774) * C5235) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C289 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C50801 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C1725) *
              C290 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C14401 + C14402 + C14403) * C5236 +
            (C14404 + C14405 + C14406) * C50874) *
               C50675 * C1725 -
           ((C8032 * C11639 + C8027 * C11641 + C8031 * C9393 + C8026 * C9396 +
             C8030 * C3744 + C8025 * C3748) *
                C50874 +
            (C8032 * C11638 + C8027 * C11640 + C8031 * C9390 + C8026 * C9394 +
             C8030 * C3739 + C8025 * C3745) *
                C5236 +
            (C14406 + C14405 + C14404) * C50980 +
            (C14403 + C14402 + C14401) * C5235) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
            C8032 * C298 + C8027 * C312) *
               C5235 +
           (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
            C8032 * C313 + C8027 * C328) *
               C50980 +
           (C12979 + C12980 + C12981) * C5236 +
           (C12982 + C12983 + C12984) * C50874) *
              C50675 * C1891 -
          ((C12985 + C12986 + C12987) * C50874 +
           (C12988 + C12989 + C12990) * C5236 +
           (C12984 + C12983 + C12982) * C50980 +
           (C12981 + C12980 + C12979) * C5235) *
              C50675 * C1892 +
          ((C12990 + C12989 + C12988) * C5235 +
           (C12987 + C12986 + C12985) * C50980 +
           (C14817 + C14818 + C14819) * C5236 +
           (C14820 + C14821 + C14822) * C50874) *
              C50675 * C1893 -
          ((C8032 * C14798 + C8027 * C14802 + C8031 * C14799 + C8026 * C14803 +
            C8030 * C7430 + C8025 * C7434) *
               C50874 +
           (C8032 * C14796 + C8027 * C14800 + C8031 * C14797 + C8026 * C14801 +
            C8030 * C7425 + C8025 * C7431) *
               C5236 +
           (C14822 + C14821 + C14820) * C50980 +
           (C14819 + C14818 + C14817) * C5235) *
              C50675 * C1894) *
         C50721 * C50702) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C51014 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C51015 +
           ((C5611 * C5235 + C5610 * C50980 + C7440 * C5236 + C7441 * C50874) *
                C2340 +
            (C5596 + C5597 + C5616 + C5617) * C2341 +
            (C5602 + C5603 + C5618 + C5619) * C2342) *
               C2141) *
              C50721 * C50960 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C51015 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C51014 -
           (((C117 * C1899 + C50832 * C1907) * C50874 +
             (C117 * C1895 + C50832 * C1900) * C5236 + C559 * C50980 +
             C558 * C5235) *
                C2342 +
            (C5619 + C5618 + C5603 + C5602) * C2341 +
            (C5617 + C5616 + C5597 + C5596) * C2340) *
               C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C51014 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C51015 +
           ((C12990 + C12989 + C12988) * C5235 +
            (C12987 + C12986 + C12985) * C50980 +
            (C14817 + C14818 + C14819) * C5236 +
            (C14820 + C14821 + C14822) * C50874) *
               C50675 * C2141) *
              C50721 * C50960 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C51015 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C51014 -
           ((C8032 * C10283 + C8027 * C10287 + C8031 * C4642 + C8026 * C4647 +
             C8030 * C1903 + C8025 * C1909) *
                C50874 +
            (C8032 * C10281 + C8027 * C10284 + C8031 * C4638 + C8026 * C4643 +
             C8030 * C1897 + C8025 * C1904) *
                C5236 +
            (C8451 + C8450 + C8449) * C50980 +
            (C8448 + C8447 + C8446) * C5235) *
               C50675 * C2141) *
              C50721 * C50708)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C1725 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C50721 * C1076 +
          (((C5591 + C5590 + C5589 + C5588) * C2340 +
            (C5587 + C5586 + C5585 + C5584) * C2341 +
            (C5920 + C5921 + C5922 + C5923) * C2342) *
               C50801 -
           (C5259 * C2342 + (C5245 + C5244 + C5243 + C5242) * C2341 +
            (C5241 + C5240 + C5239 + C5238) * C2340) *
               C1725) *
              C50721 * C1077 +
          ((C5258 * C2340 + (C5249 + C5248 + C5247 + C5246) * C2341 +
            (C5250 + C5251 + C5252 + C5253) * C2342) *
               C1725 -
           (((C117 * C511 + C50832 * C522) * C50874 +
             (C117 * C492 + C50832 * C512) * C5236 + C800 * C50980 +
             C799 * C5235) *
                C2342 +
            (C5923 + C5922 + C5921 + C5920) * C2341 + C5925 * C2340) *
               C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50832 * C126) * C5235 +
             (C117 * C127 + C50832 * C140) * C50980 + C5608 * C5236 +
             C5609 * C50874) *
                C2340 +
            (C5238 + C5239 + C5240 + C5241) * C2341 + C5258 * C2342) *
               C1725 -
           (C5925 * C2342 + (C5588 + C5589 + C5590 + C5591) * C2341 +
            (C5610 * C50874 + C5611 * C5236 + C5609 * C50980 + C5608 * C5235) *
                C2340) *
               C50801) *
              C289 +
          (((C6136 * C5235 + C6137 * C50980 + C6540 * C5236 + C6541 * C50874) *
                C2340 +
            (C6124 + C6125 + C6142 + C6143) * C2341 +
            (C6130 + C6131 + C6144 + C6145) * C2342) *
               C50801 -
           (C5772 * C2342 + (C5410 + C5411 + C5412 + C5413) * C2341 +
            (C6137 * C50874 + C6136 * C5236 +
             (C117 * C310 + C50832 * C327) * C50980 +
             (C117 * C297 + C50832 * C311) * C5235) *
                C2340) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50832 * C312) * C5235 +
             (C117 * C313 + C50832 * C328) * C50980 + C7032 * C5236 +
             C7033 * C50874) *
                C2340 +
            (C5414 + C5415 + C5430 + C5431) * C2341 +
            (C5420 + C5421 + C5432 + C5433) * C2342) *
               C1725 -
           (((C117 * C3740 + C50832 * C3746) * C50874 +
             (C117 * C3737 + C50832 * C3741) * C5236 + C5429 * C50980 +
             C5428 * C5235) *
                C2342 +
            ((C117 * C3742 + C50832 * C3747) * C50874 +
             (C117 * C3738 + C50832 * C3743) * C5236 + C5427 * C50980 +
             C5426 * C5235) *
                C2341 +
            ((C117 * C3744 + C50832 * C3748) * C50874 +
             (C117 * C3739 + C50832 * C3745) * C5236 + C7033 * C50980 +
             C7032 * C5235) *
                C2340) *
               C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C50721 * C1076 +
          (((C8445 + C8444 + C8443) * C5235 + (C8442 + C8441 + C8440) * C50980 +
            (C8446 + C8447 + C8448) * C5236 +
            (C8449 + C8450 + C8451) * C50874) *
               C50675 * C50801 -
           ((C8440 + C8441 + C8442) * C50874 + (C8443 + C8444 + C8445) * C5236 +
            (C8075 + C8074 + C8073) * C50980 +
            (C8072 + C8071 + C8070) * C5235) *
               C50675 * C1725) *
              C50721 * C1077 +
          (((C8081 + C8080 + C8079) * C5235 + (C8078 + C8077 + C8076) * C50980 +
            (C8774 + C8775 + C8776) * C5236 +
            (C8777 + C8778 + C8779) * C50874) *
               C50675 * C1725 -
           ((C8032 * C3740 + C8027 * C3746 + C8031 * C1270 + C8026 * C1277 +
             C8030 * C506 + C8025 * C519) *
                C50874 +
            (C8032 * C3737 + C8027 * C3741 + C8031 * C1265 + C8026 * C1271 +
             C8030 * C489 + C8025 * C505) *
                C5236 +
            (C8779 + C8778 + C8777) * C50980 +
            (C8776 + C8775 + C8774) * C5235) *
               C50675 * C50801) *
              C50721 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8030 * C119 + C8025 * C126 + C8031 * C297 + C8026 * C311 +
             C8032 * C298 + C8027 * C312) *
                C5235 +
            (C8030 * C127 + C8025 * C140 + C8031 * C310 + C8026 * C327 +
             C8032 * C313 + C8027 * C328) *
                C50980 +
            (C12979 + C12980 + C12981) * C5236 +
            (C12982 + C12983 + C12984) * C50874) *
               C50675 * C1725 -
           ((C12985 + C12986 + C12987) * C50874 +
            (C12988 + C12989 + C12990) * C5236 +
            (C12984 + C12983 + C12982) * C50980 +
            (C12981 + C12980 + C12979) * C5235) *
               C50675 * C50801) *
              C289 +
          (((C13489 + C13490 + C13491) * C5235 +
            (C13492 + C13493 + C13494) * C50980 +
            (C13897 + C13898 + C13899) * C5236 +
            (C13900 + C13901 + C13902) * C50874) *
               C50675 * C50801 -
           ((C13494 + C13493 + C13492) * C50874 +
            (C13491 + C13490 + C13489) * C5236 +
            (C8032 * C1160 + C8027 * C1165 + C8031 * C313 + C8026 * C328 +
             C8030 * C310 + C8025 * C327) *
                C50980 +
            (C8032 * C1153 + C8027 * C1161 + C8031 * C298 + C8026 * C312 +
             C8030 * C297 + C8025 * C311) *
                C5235) *
               C50675 * C1725) *
              C290 +
          (((C8030 * C298 + C8025 * C312 + C8031 * C1153 + C8026 * C1161 +
             C8032 * C3581 + C8027 * C3587) *
                C5235 +
            (C8030 * C313 + C8025 * C328 + C8031 * C1160 + C8026 * C1165 +
             C8032 * C3586 + C8027 * C3590) *
                C50980 +
            (C14401 + C14402 + C14403) * C5236 +
            (C14404 + C14405 + C14406) * C50874) *
               C50675 * C1725 -
           ((C8032 * C11639 + C8027 * C11641 + C8031 * C9393 + C8026 * C9396 +
             C8030 * C3744 + C8025 * C3748) *
                C50874 +
            (C8032 * C11638 + C8027 * C11640 + C8031 * C9390 + C8026 * C9394 +
             C8030 * C3739 + C8025 * C3745) *
                C5236 +
            (C14406 + C14405 + C14404) * C50980 +
            (C14403 + C14402 + C14401) * C5235) *
               C50675 * C50801) *
              C291) *
         C50702) /
            (p * q * std::sqrt(p + q));
}
