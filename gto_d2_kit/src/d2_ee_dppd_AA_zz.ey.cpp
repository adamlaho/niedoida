/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49731 = ae + be;
    const double C49730 = ae * be;
    const double C49729 = zA - zB;
    const double C49748 = 0 * be;
    const double C49781 = 0 * ae;
    const double C49773 = 0 * be;
    const double C49839 = p + q;
    const double C49838 = p * q;
    const double C49847 = std::pow(ae, 2);
    const double C49845 = bs[3];
    const double C49844 = zP - zQ;
    const double C49853 = bs[4];
    const double C49851 = xP - xQ;
    const double C49861 = bs[5];
    const double C49870 = bs[6];
    const double C49881 = bs[7];
    const double C49910 = bs[2];
    const double C49985 = yP - yQ;
    const double C119 = bs[0];
    const double C50728 = xA - xB;
    const double C50754 = ce + de;
    const double C50753 = ce * de;
    const double C50752 = xC - xD;
    const double C50776 = yC - yD;
    const double C50792 = zC - zD;
    const double C50874 = yA - yB;
    const double C49750 = 2 * C49731;
    const double C49749 = std::pow(C49731, 2);
    const double C49752 = 2 * C49730;
    const double C49736 = C49730 * C49729;
    const double C50919 = std::pow(C49729, 2);
    const double C50931 = C49729 * be;
    const double C50930 = C49729 * ae;
    const double C49776 = C49729 * C49748;
    const double C49775 = -2 * C49748;
    const double C49789 = C49781 / C49731;
    const double C49840 = 2 * C49838;
    const double C49848 = std::pow(C49844, 2);
    const double C49903 = C49844 * ae;
    const double C49863 = std::pow(C49851, 2);
    const double C50024 = std::pow(C49985, 2);
    const double C50731 = C50728 * be;
    const double C50730 = C50728 * ae;
    const double C50729 = std::pow(C50728, 2);
    const double C50756 = 2 * C50754;
    const double C50766 = std::pow(C50754, 2);
    const double C50758 = C50752 * de;
    const double C50757 = C50752 * ce;
    const double C50755 = std::pow(C50752, 2);
    const double C50777 = std::pow(C50776, 2);
    const double C50829 = C50776 * de;
    const double C50828 = C50776 * ce;
    const double C50793 = std::pow(C50792, 2);
    const double C50857 = C50792 * de;
    const double C50856 = C50792 * ce;
    const double C50889 = std::pow(C50874, 2);
    const double C50905 = C50874 * be;
    const double C50904 = C50874 * ae;
    const double C50739 = std::pow(C49750, -1);
    const double C51020 = std::pow(C49750, -2);
    const double C49777 = 2 * C49749;
    const double C49774 = C49749 * C49750;
    const double C50998 = 4 * C49749;
    const double C50920 = C50919 * C49730;
    const double C49784 = C49776 / C49731;
    const double C49783 = ae * C49775;
    const double C49842 = C49840 / C49839;
    const double C133 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C49840 / C49839, 2) -
          (bs[1] * C49840) / C49839) *
         std::pow(ae, 2)) /
        C49749;
    const double C120 = -(C49851 * bs[1] * C49840) / C49839;
    const double C283 = -(C49985 * bs[1] * C49840) / C49839;
    const double C460 = -(C49844 * bs[1] * C49840) / C49839;
    const double C49855 = C49848 * C49853;
    const double C49864 = C49848 * C49861;
    const double C49872 = C49848 * C49870;
    const double C49884 = C49848 * C49881;
    const double C49904 = C49853 * C49903;
    const double C49913 = C49845 * C49903;
    const double C49927 = C49861 * C49903;
    const double C49939 = C49870 * C49903;
    const double C49960 = C49881 * C49903;
    const double C126 = (-(bs[1] * C49903 * C49840) / C49839) / C49731;
    const double C50732 = C50729 * C49730;
    const double C50767 = std::pow(C50756, -1);
    const double C51007 = std::pow(C50756, -2);
    const double C50771 = 2 * C50766;
    const double C51005 = 4 * C50766;
    const double C50759 = C50755 * C50753;
    const double C50778 = C50777 * C50753;
    const double C50794 = C50793 * C50753;
    const double C50890 = C50889 * C49730;
    const double C49788 = C49748 / C49777;
    const double C49785 = C49773 / C49777;
    const double C50921 = C50920 / C49731;
    const double C49790 = 0 - C49784;
    const double C49846 = -C49842;
    const double C49854 = std::pow(C49842, 4);
    const double C49871 = std::pow(C49842, 6);
    const double C49909 = std::pow(C49842, 2);
    const double C134 = ((xP - xQ) *
                         (bs[2] * std::pow(C49842, 2) +
                          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C49842, 3)) *
                         std::pow(ae, 2)) /
                        C49749;
    const double C50733 = C50732 / C49731;
    const double C50760 = C50759 / C50754;
    const double C50779 = C50778 / C50754;
    const double C50795 = C50794 / C50754;
    const double C50891 = C50890 / C49731;
    const double C50922 = -C50921;
    const double C49794 = C49790 * ae;
    const double C49849 = std::pow(C49846, 3);
    const double C49862 = std::pow(C49846, 5);
    const double C49882 = std::pow(C49846, 7);
    const double C49856 = C49855 * C49854;
    const double C49860 = C49853 * C49854;
    const double C49905 = C49854 * C49904;
    const double C49873 = C49872 * C49871;
    const double C49880 = C49870 * C49871;
    const double C49943 = C49871 * C49939;
    const double C49912 = C49910 * C49909;
    const double C127 = (C49851 * C49909 * C49910 * C49903) / C49731;
    const double C293 = (C49985 * C49909 * C49910 * C49903) / C49731;
    const double C470 = (C49844 * C49909 * C49910 * C49903) / C49731 -
                        (ae * bs[1] * C49840) / (C49839 * C49731);
    const double C50734 = -C50733;
    const double C50761 = -C50760;
    const double C50780 = -C50779;
    const double C50796 = -C50795;
    const double C50892 = -C50891;
    const double C50923 = std::exp(C50922);
    const double C49796 = C49794 / C49731;
    const double C49852 = C49845 * C49849;
    const double C49914 = C49849 * C49913;
    const double C135 =
        ((bs[2] * std::pow(C49842, 2) + C49848 * C49845 * C49849) * C49847 +
         (C49845 * C49849 + C49848 * bs[4] * std::pow(C49842, 4)) * C49847 *
             std::pow(xP - xQ, 2)) /
        C49749;
    const double C303 =
        ((yP - yQ) * (bs[2] * std::pow(C49842, 2) + C49848 * C49845 * C49849) *
         C49847) /
        C49749;
    const double C480 =
        (2 * ae * C49909 * C49910 * C49903 +
         C49844 * (C49910 * C49909 + C49848 * C49845 * C49849) * C49847) /
        C49749;
    const double C49865 = C49864 * C49862;
    const double C49869 = C49861 * C49862;
    const double C49929 = C49862 * C49927;
    const double C49885 = C49884 * C49882;
    const double C49965 = C49882 * C49960;
    const double C49928 = C49860 * C49863;
    const double C49940 = C49851 * C49860;
    const double C50095 = C49860 * C50024;
    const double C50136 = C49985 * C49860;
    const double C50200 = C49860 * C49848;
    const double C50199 = C49844 * C49860;
    const double C50198 = C49860 * ae;
    const double C49920 = C49851 * C49905;
    const double C50017 = C49985 * C49905;
    const double C50062 = C49844 * C49905;
    const double C50194 = ae * C49905;
    const double C49963 = C49880 * C49863;
    const double C50227 = C49851 * C49880;
    const double C50292 = C49880 * C50024;
    const double C50472 = C49985 * C49880;
    const double C50515 = C49880 * C49848;
    const double C50514 = C49844 * C49880;
    const double C50513 = C49880 * ae;
    const double C49946 = C49943 * C49863;
    const double C49959 = C49851 * C49943;
    const double C50242 = C49943 * C50024;
    const double C50288 = C49985 * C49943;
    const double C50435 = C49844 * C49943;
    const double C50507 = ae * C49943;
    const double C49915 = C49912 * ae;
    const double C121 = C49912 * C49863 - (bs[1] * C49840) / C49839;
    const double C282 = C49985 * C49851 * C49912;
    const double C284 = C49912 * C50024 - (bs[1] * C49840) / C49839;
    const double C459 = C49844 * C49851 * C49912;
    const double C461 = C49912 * C49848 - (bs[1] * C49840) / C49839;
    const double C886 = C49844 * C49985 * C49912;
    const double C50735 = std::exp(C50734);
    const double C50762 = std::exp(C50761);
    const double C50781 = std::exp(C50780);
    const double C50797 = std::exp(C50796);
    const double C50893 = std::exp(C50892);
    const double C144 = C50923 * C134;
    const double C49737 = C49736 * C50923;
    const double C117 =
        -((C50923 - (C49729 * 2 * C49730 * C49729 * C50923) / C49731) * 2 *
          C49730) /
        C49731;
    const double C118 = -(2 * C49730 * C49729 * C50923) / C49731;
    const double C50932 = C50923 * C50930;
    const double C50935 = C50739 * C50923;
    const double C51028 = C50923 * C50931;
    const double C51027 = C50923 / C49750;
    const double C15251 = C51020 * C50923;
    const double C49797 = C49796 - C49785;
    const double C49857 = C49852 + C49856;
    const double C49921 = C49851 * C49852;
    const double C50018 = C49985 * C49852;
    const double C50064 = C49844 * C49852;
    const double C50063 = C49852 * ae;
    const double C122 =
        2 * C49851 * C49912 + C49851 * (C49912 + C49852 * C49863);
    const double C281 = C49985 * (C49912 + C49852 * C49863);
    const double C458 = C49844 * (C49912 + C49852 * C49863);
    const double C1101 =
        2 * C49985 * C49912 + C49985 * (C49912 + C49852 * C50024);
    const double C1562 = C49844 * (C49912 + C49852 * C50024);
    const double C1846 =
        2 * C49844 * C49912 + C49844 * (C49912 + C49852 * C49848);
    const double C49916 = C49844 * C49914;
    const double C128 = (C49909 * C49910 * C49903 + C49914 * C49863) / C49731;
    const double C129 =
        (2 * C49851 * C49914 + C49851 * (C49914 + C49905 * C49863)) / C49731;
    const double C291 = (C49985 * (C49914 + C49905 * C49863)) / C49731;
    const double C292 = (C49985 * C49851 * C49914) / C49731;
    const double C294 = (C49909 * C49910 * C49903 + C49914 * C50024) / C49731;
    const double C468 = (C49844 * (C49914 + C49905 * C49863) +
                         (C49912 + C49852 * C49863) * ae) /
                        C49731;
    const double C469 =
        (C49844 * C49851 * C49914 + C49851 * C49912 * ae) / C49731;
    const double C891 =
        (C49844 * C49985 * C49914 + C49985 * C49912 * ae) / C49731;
    const double C1105 =
        (2 * C49985 * C49914 + C49985 * (C49914 + C49905 * C50024)) / C49731;
    const double C1566 = (C49844 * (C49914 + C49905 * C50024) +
                          (C49912 + C49852 * C50024) * ae) /
                         C49731;
    const double C147 = C50923 * C135;
    const double C2449 = C50923 * C303;
    const double C49866 = C49860 + C49865;
    const double C49874 = C49869 + C49873;
    const double C49941 = C49869 * C49863;
    const double C49962 = C49851 * C49869;
    const double C50244 = C49869 * C50024;
    const double C50291 = C49985 * C49869;
    const double C50438 = C49869 * C49848;
    const double C50437 = C49844 * C49869;
    const double C50436 = C49869 * ae;
    const double C49931 = C49929 * C49863;
    const double C49938 = C49851 * C49929;
    const double C50094 = C49929 * C50024;
    const double C50135 = C49985 * C49929;
    const double C50197 = C49844 * C49929;
    const double C50431 = ae * C49929;
    const double C49886 = C49880 + C49885;
    const double C49968 = C49965 * C49863;
    const double C50225 = C49851 * C49965;
    const double C50289 = C49965 * C50024;
    const double C50471 = C49985 * C49965;
    const double C50512 = C49844 * C49965;
    const double C49930 = C49852 + C49928;
    const double C49944 = 2 * C49940;
    const double C50011 = C49985 * C49940;
    const double C50053 = C49844 * C49940;
    const double C50052 = C49940 * ae;
    const double C50097 = C49852 + C50095;
    const double C50139 = C49844 * C50136;
    const double C50138 = C50136 * ae;
    const double C50243 = 2 * C50136;
    const double C50204 = C49852 + C50200;
    const double C50203 = C50199 * ae;
    const double C50439 = 2 * C50199;
    const double C49922 = C49844 * C49920;
    const double C295 = (C49851 * C49914 + C49920 * C50024) / C49731;
    const double C50019 = C49844 * C50017;
    const double C50201 = 2 * C50194;
    const double C49967 = C49869 + C49963;
    const double C50229 = C50227 * C50024;
    const double C50372 = C49985 * C50227;
    const double C50402 = C50227 * C49848;
    const double C50401 = C49844 * C50227;
    const double C50400 = C50227 * ae;
    const double C50296 = C49869 + C50292;
    const double C50480 = C50472 * C49848;
    const double C50479 = C49844 * C50472;
    const double C50478 = C50472 * ae;
    const double C50523 = C49869 + C50515;
    const double C50522 = C50514 * ae;
    const double C49948 = C49929 + C49946;
    const double C49964 = 2 * C49959;
    const double C50085 = C49959 * C50024;
    const double C50121 = C49985 * C49959;
    const double C50174 = C49844 * C49959;
    const double C50395 = ae * C49959;
    const double C50245 = C49929 + C50242;
    const double C50293 = 2 * C50288;
    const double C50348 = C49844 * C50288;
    const double C50467 = ae * C50288;
    const double C50520 = 2 * C50507;
    const double C50736 = C50735 * C50730;
    const double C50740 = C50739 * C50735;
    const double C50994 = C50735 / C49750;
    const double C50993 = C50735 * C50731;
    const double C2290 = C51020 * C50735;
    const double C50763 = C50762 * C50757;
    const double C50768 = C50767 * C50762;
    const double C51002 = C50762 * C50758;
    const double C50999 = C50762 / C50756;
    const double C1026 = C51007 * C50762;
    const double C50830 = C50781 * C50828;
    const double C50833 = C50767 * C50781;
    const double C51011 = C50781 * C50829;
    const double C51006 = C50781 / C50756;
    const double C277 = C51007 * C50781;
    const double C50858 = C50797 * C50856;
    const double C50861 = C50767 * C50797;
    const double C51015 = C50797 * C50857;
    const double C51008 = C50797 / C50756;
    const double C456 = C51007 * C50797;
    const double C50906 = C50893 * C50904;
    const double C50909 = C50739 * C50893;
    const double C51023 = C50893 * C50905;
    const double C51022 = C50893 / C49750;
    const double C7956 = C51020 * C50893;
    const double C49751 = 2 * C49737;
    const double C49782 = C49737 / C49749;
    const double C49778 = -4 * C49737;
    const double C5065 =
        (((-4 * C49737) / C49731 -
          (C49729 * (C50923 - (C49729 * 2 * C49737) / C49731) * 2 * C49730) /
              C49731) *
         ae) /
        C49731;
    const double C5066 =
        ((C50923 - (C49729 * 2 * C49737) / C49731) * ae) / C49731 -
        (0 * be) / (2 * std::pow(C49731, 2));
    const double C5067 =
        (-((C50923 - (C49729 * 2 * C49737) / C49731) * 2 * C49730) / C49731) /
        (2 * C49731);
    const double C5068 = (0 * ae) / C49731 - C49737 / std::pow(C49731, 2);
    const double C145 = C117 * C121;
    const double C142 = C117 * C120;
    const double C317 = C117 * C282;
    const double C494 = C117 * C459;
    const double C2454 = C117 * C284;
    const double C2448 = C117 * C283;
    const double C3132 = C117 * C886;
    const double C143 = C118 * C127;
    const double C141 = C118 * C126;
    const double C320 = C118 * C293;
    const double C497 = C118 * C470;
    const double C51030 = C50932 / C49777;
    const double C51029 = C50932 * C50931;
    const double C51021 = C50932 / C49731;
    const double C50938 = C50935 * C50931;
    const double C20839 = C50935 / C50998;
    const double C38058 = C50935 / C49750;
    const double C51047 = C51028 / C49731;
    const double C15250 = (-2 * C50739 * C51028) / C49731;
    const double C15249 = (C50923 * std::pow(C50931, 2)) / C49749 + C51027;
    const double C49858 = C49857 * C49847;
    const double C49923 = C49921 * ae;
    const double C892 =
        (C49844 * C49985 * C49920 + C49985 * C49921 * ae) / C49731;
    const double C285 = C49851 * C49912 + C49921 * C50024;
    const double C462 = C49851 * C49912 + C49921 * C49848;
    const double C887 = C49844 * C49985 * C49921;
    const double C1100 =
        2 * C49985 * C49921 + C49985 * (C49921 + C49940 * C50024);
    const double C1561 = C49844 * (C49921 + C49940 * C50024);
    const double C1845 =
        2 * C49844 * C49921 + C49844 * (C49921 + C49940 * C49848);
    const double C50020 = C50018 * ae;
    const double C1215 = C49985 * C49912 + C50018 * C49848;
    const double C4469 =
        2 * C49844 * C50018 + C49844 * (C50018 + C50136 * C49848);
    const double C50066 = C50064 * ae;
    const double C50065 = C50062 + C50063;
    const double C148 = C117 * C122;
    const double C314 = C117 * C281;
    const double C491 = C117 * C458;
    const double C3404 = C117 * C1101;
    const double C4070 = C117 * C1562;
    const double C49917 = C49916 + C49915;
    const double C146 = C118 * C128;
    const double C149 = C118 * C129;
    const double C315 = C118 * C291;
    const double C318 = C118 * C292;
    const double C321 = C118 * C294;
    const double C492 = C118 * C468;
    const double C495 = C118 * C469;
    const double C902 = C118 * C891;
    const double C1114 = C118 * C1105;
    const double C1575 = C118 * C1566;
    const double C49867 = C49866 * C49847;
    const double C49875 = C49874 * C49847;
    const double C49945 = C49860 + C49941;
    const double C49966 = 2 * C49962;
    const double C50086 = C49962 * C50024;
    const double C50122 = C49985 * C49962;
    const double C50177 = C49962 * C49848;
    const double C50176 = C49844 * C49962;
    const double C50175 = C49962 * ae;
    const double C50246 = C49860 + C50244;
    const double C50295 = 2 * C50291;
    const double C50351 = C50291 * C49848;
    const double C50350 = C49844 * C50291;
    const double C50349 = C50291 * ae;
    const double C50444 = C49860 + C50438;
    const double C50443 = C50437 * ae;
    const double C50516 = 2 * C50437;
    const double C50442 = C50435 + C50436;
    const double C49933 = C49905 + C49931;
    const double C49942 = 2 * C49938;
    const double C50010 = C49985 * C49938;
    const double C50051 = C49844 * C49938;
    const double C50171 = ae * C49938;
    const double C1104 =
        (2 * C49985 * C49920 + C49985 * (C49920 + C49938 * C50024)) / C49731;
    const double C1565 = (C49844 * (C49920 + C49938 * C50024) +
                          (C49921 + C49940 * C50024) * ae) /
                         C49731;
    const double C50096 = C49905 + C50094;
    const double C50137 = C49844 * C50135;
    const double C50241 = 2 * C50135;
    const double C50345 = ae * C50135;
    const double C50202 = C50197 + C50198;
    const double C50441 = 2 * C50431;
    const double C49887 = C49886 * C49847;
    const double C49970 = C49943 + C49968;
    const double C50228 = C50225 * C50024;
    const double C50371 = C49985 * C50225;
    const double C50399 = C49844 * C50225;
    const double C50294 = C49943 + C50289;
    const double C50477 = C49844 * C50471;
    const double C50521 = C50512 + C50513;
    const double C49932 = C49930 * ae;
    const double C123 = 3 * (C49912 + C49852 * C49863) +
                        C49851 * (2 * C49921 + C49851 * C49930);
    const double C280 = C49985 * (2 * C49921 + C49851 * C49930);
    const double C286 = C49912 + C49852 * C49863 + C49930 * C50024;
    const double C457 = C49844 * (2 * C49921 + C49851 * C49930);
    const double C463 = C49912 + C49852 * C49863 + C49930 * C49848;
    const double C888 = C49844 * C49985 * C49930;
    const double C50013 = C50011 * ae;
    const double C1214 = C49985 * C49921 + C50011 * C49848;
    const double C50055 = C50053 * ae;
    const double C50099 = C50097 * ae;
    const double C3396 = 3 * (C49912 + C49852 * C50024) +
                         C49985 * (2 * C50018 + C49985 * C50097);
    const double C3559 = C49912 + C49852 * C50024 + C50097 * C49848;
    const double C4062 = C49844 * (2 * C50018 + C49985 * C50097);
    const double C50141 = C50139 * ae;
    const double C50207 = C50204 * ae;
    const double C7357 = 3 * (C49912 + C49852 * C49848) +
                         C49844 * (2 * C50064 + C49844 * C50204);
    const double C323 = C118 * C295;
    const double C49969 = C49851 * C49967;
    const double C50077 = C49967 * C50024;
    const double C50108 = C49985 * C49967;
    const double C50154 = C49967 * C49848;
    const double C50153 = C49844 * C49967;
    const double C50152 = C49967 * ae;
    const double C50231 = C49962 + C50229;
    const double C50378 = C50372 * C49848;
    const double C50377 = C49844 * C50372;
    const double C50376 = C50372 * ae;
    const double C50408 = C49962 + C50402;
    const double C50407 = C50401 * ae;
    const double C50298 = C49985 * C50296;
    const double C50328 = C50296 * C49848;
    const double C50327 = C49844 * C50296;
    const double C50326 = C50296 * ae;
    const double C50484 = C50291 + C50480;
    const double C50483 = C50479 * ae;
    const double C50528 = C49844 * C50523;
    const double C50527 = C50523 * ae;
    const double C49950 = C49851 * C49948;
    const double C49958 = 3 * C49948;
    const double C50003 = C49985 * C49948;
    const double C50040 = C49844 * C49948;
    const double C50148 = ae * C49948;
    const double C50087 = C49938 + C50085;
    const double C50123 = C49844 * C50121;
    const double C50224 = 2 * C50121;
    const double C50368 = ae * C50121;
    const double C50405 = 2 * C50395;
    const double C50247 = C49985 * C50245;
    const double C50269 = C49844 * C50245;
    const double C50287 = 3 * C50245;
    const double C50322 = ae * C50245;
    const double C50475 = 2 * C50467;
    const double C50996 = C50736 / C49777;
    const double C50995 = C50736 * C50731;
    const double C50992 = C50736 / C49731;
    const double C50743 = C50740 * C50731;
    const double C110 = C50740 / C50998;
    const double C22731 = C50740 / C49750;
    const double C2288 = (C50735 * std::pow(C50731, 2)) / C49749 + C50994;
    const double C51032 = C50993 / C49731;
    const double C2289 = (-2 * C50739 * C50993) / C49731;
    const double C51003 = C50763 / C50771;
    const double C51001 = C50763 / C50754;
    const double C51000 = C50763 * C50758;
    const double C1025 = (2 * C50767 * C50763) / C50754;
    const double C51004 = C50768 * C50758;
    const double C116 = C50768 / C51005;
    const double C635 = C50768 / C50756;
    const double C51036 = C51002 / C50754;
    const double C1024 = (C50762 * std::pow(C50757, 2)) / C50766 + C50999;
    const double C51013 = C50830 / C50771;
    const double C51012 = C50830 * C50829;
    const double C51009 = C50830 / C50754;
    const double C276 = (2 * C50767 * C50830) / C50754;
    const double C51014 = C50833 * C50829;
    const double C1096 = C50833 / C51005;
    const double C1328 = C50833 / C50756;
    const double C51038 = C51011 / C50754;
    const double C275 = (C50781 * std::pow(C50828, 2)) / C50766 + C51006;
    const double C51017 = C50858 / C50771;
    const double C51016 = C50858 * C50857;
    const double C51010 = C50858 / C50754;
    const double C455 = (2 * C50767 * C50858) / C50754;
    const double C51018 = C50861 * C50857;
    const double C1842 = C50861 / C51005;
    const double C2089 = C50861 / C50756;
    const double C51041 = C51015 / C50754;
    const double C454 = (C50797 * std::pow(C50856, 2)) / C50766 + C51008;
    const double C51025 = C50906 / C49777;
    const double C51024 = C50906 * C50905;
    const double C51019 = C50906 / C49731;
    const double C50912 = C50909 * C50905;
    const double C10650 = C50909 / C50998;
    const double C25398 = C50909 / C49750;
    const double C51044 = C51023 / C49731;
    const double C7955 = (-2 * C50739 * C51023) / C49731;
    const double C7954 = (C50893 * std::pow(C50905, 2)) / C49749 + C51022;
    const double C49753 = C49729 * C49751;
    const double C15257 =
        ((-C49751 / C49731) / C49750 - (0 * be) / C49731) / C49750 -
        (0 * be) / C49731;
    const double C31574 = (-C49751 / C49731) / C49750 - (0 * be) / C49731;
    const double C49793 = C49789 - C49782;
    const double C49786 = C49778 / C49731;
    const double C5087 = C5065 * C122;
    const double C5078 = C5065 * C121;
    const double C5072 = C5065 * C120;
    const double C5281 = C5065 * C282;
    const double C5275 = C5065 * C281;
    const double C5483 = C5065 * C459;
    const double C5477 = C5065 * C458;
    const double C12636 = C5065 * C1101;
    const double C12630 = C5065 * C284;
    const double C12626 = C5065 * C283;
    const double C13314 = C5065 * C886;
    const double C13310 = C5065 * C1562;
    const double C5088 = C5066 * C129;
    const double C5079 = C5066 * C128;
    const double C5073 = C5066 * C127;
    const double C5070 = C5066 * C126;
    const double C5289 = C5066 * C295;
    const double C5286 = C5066 * C294;
    const double C5285 = C5066 * C293;
    const double C5282 = C5066 * C292;
    const double C5276 = C5066 * C291;
    const double C5487 = C5066 * C470;
    const double C5484 = C5066 * C469;
    const double C5478 = C5066 * C468;
    const double C6044 = C5066 * C891;
    const double C6321 = C5066 * C1105;
    const double C6965 = C5066 * C1566;
    const double C5081 = C5067 * C458;
    const double C5075 = C5067 * C459;
    const double C12632 = C5067 * C1562;
    const double C12628 = C5067 * C886;
    const double C5082 = C5068 * C468;
    const double C5076 = C5068 * C469;
    const double C5071 = C5068 * C470;
    const double C5287 = C5068 * C1566;
    const double C5284 = C5068 * C891;
    const double C158 = C142 + C143;
    const double C2462 = C2448 + C320;
    const double C51048 = C51029 / C49749;
    const double C5080 = C51021 * C135;
    const double C5074 = C51021 * C134;
    const double C12627 = C51021 * C303;
    const double C51031 = C50938 / C49731;
    const double C31569 = -C51047;
    const double C15279 = C15249 * C135;
    const double C15264 = C15249 * C134;
    const double C18283 = C15249 * C303;
    const double C136 =
        (2 * C49851 * C49858 +
         C49851 * (C49858 +
                   (C49853 * C49854 + C49848 * bs[5] * std::pow(C49846, 5)) *
                       C49847 * std::pow(C49851, 2))) /
        C49749;
    const double C302 = ((yP - yQ) * C49851 * C49858) / C49749;
    const double C304 =
        ((bs[2] * std::pow(C49842, 2) + C49848 * C49845 * C49849) * C49847 +
         C49858 * std::pow(yP - yQ, 2)) /
        C49749;
    const double C479 = (2 * ae * C49851 * C49849 * C49845 * C49903 +
                         C49844 * C49851 * C49858) /
                        C49749;
    const double C896 =
        (2 * ae * C49985 * C49914 + C49844 * C49985 * C49858) / C49749;
    const double C49924 = C49922 + C49923;
    const double C904 = C118 * C892;
    const double C5279 = C5068 * C892;
    const double C6047 = C5066 * C892;
    const double C322 = C117 * C285;
    const double C5288 = C5065 * C285;
    const double C499 = C117 * C462;
    const double C5490 = C5065 * C462;
    const double C5480 = C5067 * C462;
    const double C903 = C117 * C887;
    const double C5278 = C5067 * C887;
    const double C6046 = C5065 * C887;
    const double C2457 = C117 * C1100;
    const double C12640 = C5065 * C1100;
    const double C3135 = C117 * C1561;
    const double C5291 = C5067 * C1561;
    const double C13318 = C5065 * C1561;
    const double C5493 = C5067 * C1845;
    const double C50021 = C50019 + C50020;
    const double C3567 = C117 * C1215;
    const double C13312 = C5067 * C1215;
    const double C13745 = C5065 * C1215;
    const double C13747 = C5067 * C4469;
    const double C50068 = ae * C50065;
    const double C50067 = C49844 * C50065;
    const double C50196 = 2 * C50065;
    const double C49918 = ae * C49917;
    const double C471 =
        (C49909 * C49910 * C49903 + C49844 * C49917 + C49844 * C49912 * ae) /
        C49731;
    const double C159 = C145 + C146;
    const double C160 = C148 + C149;
    const double C334 = C314 + C315;
    const double C335 = C317 + C318;
    const double C2463 = C2454 + C321;
    const double C511 = C491 + C492;
    const double C512 = C494 + C495;
    const double C3140 = C3132 + C902;
    const double C3409 = C3404 + C1114;
    const double C4075 = C4070 + C1575;
    const double C49993 = C49851 * C49867;
    const double C50134 = C49985 * C49867;
    const double C50195 = C49844 * C49867;
    const double C137 =
        (3 * (C49858 + C49867 * C49863) +
         C49851 * (2 * C49851 * C49867 +
                   C49851 * (C49867 + (C49861 * C49862 +
                                       C49848 * bs[6] * std::pow(C49842, 6)) *
                                          C49847 * C49863))) /
        C49749;
    const double C301 = ((yP - yQ) * (C49858 + C49867 * C49863)) / C49749;
    const double C305 =
        (C49851 * C49858 + C49851 * C49867 * std::pow(yP - yQ, 2)) / C49749;
    const double C478 = (2 * ae * (C49849 * C49845 * C49903 + C49905 * C49863) +
                         C49844 * (C49858 + C49867 * C49863)) /
                        C49749;
    const double C897 =
        (2 * ae * C49985 * C49920 + C49844 * C49985 * C49851 * C49867) / C49749;
    const double C1109 = (2 * C49985 * C49858 +
                          C49985 * (C49858 + C49867 * std::pow(C49985, 2))) /
                         C49749;
    const double C1570 = (2 * ae * (C49914 + C49905 * C50024) +
                          C49844 * (C49858 + C49867 * C50024)) /
                         C49749;
    const double C49876 = C49875 * C49863;
    const double C49879 = C49851 * C49875;
    const double C50221 = C49875 * C50024;
    const double C50280 = C49985 * C49875;
    const double C50432 = C49844 * C49875;
    const double C3402 =
        (3 * (C49858 + C49867 * C50024) +
         C49985 * (2 * C49985 * C49867 + C49985 * (C49867 + C49875 * C50024))) /
        C49749;
    const double C49947 = C49851 * C49945;
    const double C49961 = 3 * C49945;
    const double C50004 = C49985 * C49945;
    const double C50042 = C49844 * C49945;
    const double C50041 = C49945 * ae;
    const double C1099 =
        2 * C49985 * C49930 + C49985 * (C49930 + C49945 * C50024);
    const double C1560 = C49844 * (C49930 + C49945 * C50024);
    const double C1844 =
        2 * C49844 * C49930 + C49844 * (C49930 + C49945 * C49848);
    const double C50088 = C49940 + C50086;
    const double C50125 = C49844 * C50122;
    const double C50124 = C50122 * ae;
    const double C50226 = 2 * C50122;
    const double C4468 =
        2 * C49844 * C50011 + C49844 * (C50011 + C50122 * C49848);
    const double C50181 = C49940 + C50177;
    const double C50180 = C50176 * ae;
    const double C50403 = 2 * C50176;
    const double C50179 = C50174 + C50175;
    const double C50248 = C49985 * C50246;
    const double C50271 = C49844 * C50246;
    const double C50270 = C50246 * ae;
    const double C50290 = 3 * C50246;
    const double C10088 =
        2 * C49844 * C50097 + C49844 * (C50097 + C50246 * C49848);
    const double C50355 = C50136 + C50351;
    const double C50354 = C50350 * ae;
    const double C50473 = 2 * C50350;
    const double C50353 = C50348 + C50349;
    const double C50448 = C49844 * C50444;
    const double C50447 = C50444 * ae;
    const double C50517 = 3 * C50444;
    const double C50449 = ae * C50442;
    const double C50446 = C49844 * C50442;
    const double C50511 = 2 * C50442;
    const double C49934 = C49844 * C49933;
    const double C130 = (3 * (C49914 + C49905 * C49863) +
                         C49851 * (2 * C49920 + C49851 * C49933)) /
                        C49731;
    const double C290 = (C49985 * (2 * C49920 + C49851 * C49933)) / C49731;
    const double C296 = (C49914 + C49905 * C49863 + C49933 * C50024) / C49731;
    const double C467 = (C49844 * (2 * C49920 + C49851 * C49933) +
                         (2 * C49921 + C49851 * C49930) * ae) /
                        C49731;
    const double C893 =
        (C49844 * C49985 * C49933 + C49985 * C49930 * ae) / C49731;
    const double C1103 =
        (2 * C49985 * C49933 + C49985 * (C49933 + C49948 * C50024)) / C49731;
    const double C1564 = (C49844 * (C49933 + C49948 * C50024) +
                          (C49930 + C49945 * C50024) * ae) /
                         C49731;
    const double C50012 = C49844 * C50010;
    const double C50054 = C50051 + C50052;
    const double C50178 = 2 * C50171;
    const double C1113 = C118 * C1104;
    const double C6319 = C5066 * C1104;
    const double C1574 = C118 * C1565;
    const double C5292 = C5068 * C1565;
    const double C6963 = C5066 * C1565;
    const double C50098 = C49844 * C50096;
    const double C4068 =
        (2 * ae * (2 * C50017 + C49985 * C50096) +
         C49844 * (2 * C49985 * C49867 + C49985 * (C49867 + C49875 * C50024))) /
        C49749;
    const double C3399 = (3 * (C49914 + C49905 * C50024) +
                          C49985 * (2 * C50017 + C49985 * C50096)) /
                         C49731;
    const double C4065 = (C49844 * (2 * C50017 + C49985 * C50096) +
                          (2 * C50018 + C49985 * C50097) * ae) /
                         C49731;
    const double C50140 = C50137 + C50138;
    const double C50352 = 2 * C50345;
    const double C50208 = ae * C50202;
    const double C50206 = C49844 * C50202;
    const double C50434 = 2 * C50202;
    const double C49888 = C49887 * C49863;
    const double C50217 = C49851 * C49887;
    const double C50281 = C49887 * C50024;
    const double C50468 = C49985 * C49887;
    const double C50508 = C49844 * C49887;
    const double C49972 = C49851 * C49970;
    const double C50076 = C49970 * C50024;
    const double C50107 = C49985 * C49970;
    const double C50151 = C49844 * C49970;
    const double C50230 = C49959 + C50228;
    const double C50375 = C49844 * C50371;
    const double C50406 = C50399 + C50400;
    const double C50297 = C49985 * C50294;
    const double C50325 = C49844 * C50294;
    const double C50482 = C50477 + C50478;
    const double C50529 = ae * C50521;
    const double C50526 = C49844 * C50521;
    const double C151 = C117 * C123;
    const double C5090 = C5065 * C123;
    const double C311 = C117 * C280;
    const double C5677 = C5065 * C280;
    const double C325 = C117 * C286;
    const double C5294 = C5065 * C286;
    const double C488 = C117 * C457;
    const double C5084 = C5067 * C457;
    const double C5837 = C5065 * C457;
    const double C502 = C117 * C463;
    const double C5496 = C5065 * C463;
    const double C5474 = C5067 * C463;
    const double C906 = C117 * C888;
    const double C5272 = C5067 * C888;
    const double C6052 = C5065 * C888;
    const double C2627 = C117 * C1214;
    const double C6049 = C5067 * C1214;
    const double C28483 = C5065 * C1214;
    const double C9033 = C117 * C3396;
    const double C13587 = C5065 * C3396;
    const double C9192 = C117 * C3559;
    const double C13308 = C5067 * C3559;
    const double C13749 = C5065 * C3559;
    const double C9691 = C117 * C4062;
    const double C12634 = C5067 * C4062;
    const double C14254 = C5065 * C4062;
    const double C49971 = C49966 + C49969;
    const double C50079 = C49945 + C50077;
    const double C50111 = C49844 * C50108;
    const double C50110 = C50108 * ae;
    const double C50158 = C49945 + C50154;
    const double C50157 = C50153 * ae;
    const double C50233 = C49985 * C50231;
    const double C50260 = C49844 * C50231;
    const double C50259 = C50231 * ae;
    const double C50382 = C50122 + C50378;
    const double C50381 = C50377 * ae;
    const double C50412 = C49844 * C50408;
    const double C50411 = C50408 * ae;
    const double C50300 = C50295 + C50298;
    const double C50332 = C50246 + C50328;
    const double C50331 = C50327 * ae;
    const double C50488 = C49844 * C50484;
    const double C50487 = C50484 * ae;
    const double C50532 = C50516 + C50528;
    const double C49952 = C49942 + C49950;
    const double C50005 = C49844 * C50003;
    const double C50155 = 2 * C50148;
    const double C50089 = C49844 * C50087;
    const double C3398 = (3 * (C49920 + C49938 * C50024) +
                          C49985 * (2 * C50010 + C49985 * C50087)) /
                         C49731;
    const double C50373 = 2 * C50368;
    const double C50249 = C50241 + C50247;
    const double C50329 = 2 * C50322;
    const double C51033 = C50995 / C49749;
    const double C50997 = C50743 / C49731;
    const double C25399 = -C51032;
    const double C51035 = C51000 / C50766;
    const double C51037 = C51004 / C50754;
    const double C278 = -C51036;
    const double C51039 = C51012 / C50766;
    const double C51040 = C51014 / C50754;
    const double C1022 = -C51038;
    const double C51042 = C51016 / C50766;
    const double C51043 = C51018 / C50754;
    const double C1673 = -C51041;
    const double C51045 = C51024 / C49749;
    const double C51026 = C50912 / C49731;
    const double C22727 = -C51044;
    const double C49754 = C49753 / C49731;
    const double C31588 = C31574 * C468;
    const double C31582 = C31574 * C469;
    const double C31577 = C31574 * C470;
    const double C31798 = C31574 * C1565;
    const double C31793 = C31574 * C1566;
    const double C31790 = C31574 * C891;
    const double C31785 = C31574 * C892;
    const double C20847 =
        (C49793 / C49750 - (0 * be) / C49731) / C49750 - (0 * be) / C49731;
    const double C38064 = C49793 / C49750 - (0 * be) / C49731;
    const double C5103 = C5087 + C5088;
    const double C5100 = C5078 + C5079;
    const double C5098 = C5072 + C5073;
    const double C12649 = C12630 + C5286;
    const double C12647 = C12626 + C5285;
    const double C5307 = C5281 + C5282;
    const double C5305 = C5275 + C5276;
    const double C5509 = C5483 + C5484;
    const double C5507 = C5477 + C5478;
    const double C13327 = C13314 + C6044;
    const double C12652 = C12636 + C6321;
    const double C13325 = C13310 + C6965;
    const double C5101 = C5081 + C5082;
    const double C5099 = C5075 + C5076;
    const double C12650 = C12632 + C5287;
    const double C12648 = C12628 + C5284;
    const double C163 = C158 + C143;
    const double C2466 = C2462 + C320;
    const double C51058 = C51027 - C51048;
    const double C51049 = C51030 - C51031;
    const double C31586 = C31569 * C135;
    const double C31580 = C31569 * C134;
    const double C34679 = C31569 * C303;
    const double C150 = C50923 * C136;
    const double C5089 = C51021 * C136;
    const double C15282 = C15249 * C136;
    const double C31595 = C31569 * C136;
    const double C319 = C50923 * C302;
    const double C5283 = C51021 * C302;
    const double C15473 = C15249 * C302;
    const double C31789 = C31569 * C302;
    const double C2455 = C50923 * C304;
    const double C12631 = C51021 * C304;
    const double C18293 = C15249 * C304;
    const double C34688 = C31569 * C304;
    const double C496 = C50923 * C479;
    const double C5077 = C50935 * C479;
    const double C5485 = C51021 * C479;
    const double C15267 = C15250 * C479;
    const double C15667 = C15249 * C479;
    const double C31583 = C50935 * C479;
    const double C31991 = C31569 * C479;
    const double C3133 = C50923 * C896;
    const double C12629 = C50935 * C896;
    const double C13315 = C51021 * C896;
    const double C18285 = C15250 * C896;
    const double C18949 = C15249 * C896;
    const double C34681 = C50935 * C896;
    const double C35567 = C31569 * C896;
    const double C49925 = ae * C49924;
    const double C472 =
        (C49851 * C49914 + C49844 * C49924 + C49844 * C49921 * ae) / C49731;
    const double C336 = C322 + C323;
    const double C5308 = C5288 + C5289;
    const double C913 = C903 + C904;
    const double C5306 = C5278 + C5279;
    const double C6060 = C6046 + C6047;
    const double C50022 = ae * C50021;
    const double C1219 =
        (C49985 * C49914 + C49844 * C50021 + C49844 * C50018 * ae) / C49731;
    const double C50069 = C49914 + C50067;
    const double C481 =
        ((C49912 + C49848 * C49845 * C49849) * C49847 + C49918 + C49918 +
         C49844 * (2 * ae * C49914 + C49844 * C49858)) /
        C49749;
    const double C498 = C118 * C471;
    const double C5488 = C5066 * C471;
    const double C5486 = C5068 * C471;
    const double C15261 = C15257 * C471;
    const double C31992 = C31574 * C471;
    const double C164 = C159 + C146;
    const double C165 = C160 + C149;
    const double C340 = C334 + C315;
    const double C341 = C335 + C318;
    const double C2467 = C2463 + C321;
    const double C517 = C511 + C492;
    const double C518 = C512 + C495;
    const double C3143 = C3140 + C902;
    const double C3410 = C3409 + C1114;
    const double C4076 = C4075 + C1575;
    const double C50205 = C50201 + C50195;
    const double C153 = C50923 * C137;
    const double C5092 = C51021 * C137;
    const double C31598 = C31569 * C137;
    const double C316 = C50923 * C301;
    const double C5277 = C51021 * C301;
    const double C15854 = C15249 * C301;
    const double C31783 = C31569 * C301;
    const double C324 = C50923 * C305;
    const double C5290 = C51021 * C305;
    const double C15482 = C15249 * C305;
    const double C31796 = C31569 * C305;
    const double C493 = C50923 * C478;
    const double C5083 = C50935 * C478;
    const double C5479 = C51021 * C478;
    const double C15276 = C15250 * C478;
    const double C16018 = C15249 * C478;
    const double C31589 = C50935 * C478;
    const double C31985 = C31569 * C478;
    const double C905 = C50923 * C897;
    const double C5280 = C50935 * C897;
    const double C6048 = C51021 * C897;
    const double C15470 = C15250 * C897;
    const double C16234 = C15249 * C897;
    const double C31786 = C50935 * C897;
    const double C32554 = C31569 * C897;
    const double C3405 = C50923 * C1109;
    const double C12637 = C51021 * C1109;
    const double C19204 = C15249 * C1109;
    const double C35910 = C31569 * C1109;
    const double C4071 = C50923 * C1570;
    const double C12633 = C50935 * C1570;
    const double C13311 = C51021 * C1570;
    const double C18291 = C15250 * C1570;
    const double C19872 = C15249 * C1570;
    const double C34686 = C50935 * C1570;
    const double C36778 = C31569 * C1570;
    const double C49877 = C49867 + C49876;
    const double C49883 = 2 * C49879;
    const double C50120 = C49985 * C49879;
    const double C50172 = C49844 * C49879;
    const double C1108 = (2 * C49985 * C49993 +
                          C49985 * (C49993 + C49879 * std::pow(C49985, 2))) /
                         C49749;
    const double C1569 = (2 * ae * (C49920 + C49938 * C50024) +
                          C49844 * (C49993 + C49879 * C50024)) /
                         C49749;
    const double C3401 =
        (3 * (C49993 + C49879 * C50024) +
         C49985 * (2 * C49985 * C49879 +
                   C49985 * (C49879 + C49851 * C49887 * C50024))) /
        C49749;
    const double C4067 =
        (2 * ae * (2 * C50010 + C49985 * C50087) +
         C49844 * (2 * C49985 * C49879 +
                   C49985 * (C49879 + C49851 * C49887 * C50024))) /
        C49749;
    const double C50222 = C49867 + C50221;
    const double C50282 = 2 * C50280;
    const double C50346 = C49844 * C50280;
    const double C50445 = C50441 + C50432;
    const double C9034 = C50923 * C3402;
    const double C13588 = C51021 * C3402;
    const double C45451 = C31569 * C3402;
    const double C49949 = C49944 + C49947;
    const double C50006 = C50004 * ae;
    const double C1213 = C49985 * C49930 + C50004 * C49848;
    const double C4467 =
        2 * C49844 * C50004 + C49844 * (C50004 + C50108 * C49848);
    const double C50044 = C50042 * ae;
    const double C50043 = C50040 + C50041;
    const double C2460 = C117 * C1099;
    const double C3138 = C117 * C1560;
    const double C5297 = C5067 * C1560;
    const double C5499 = C5067 * C1844;
    const double C50090 = C50088 * ae;
    const double C4064 = (C49844 * (2 * C50010 + C49985 * C50087) +
                          (2 * C50011 + C49985 * C50088) * ae) /
                         C49731;
    const double C3395 = 3 * (C49921 + C49940 * C50024) +
                         C49985 * (2 * C50011 + C49985 * C50088);
    const double C3558 = C49921 + C49940 * C50024 + C50088 * C49848;
    const double C4061 = C49844 * (2 * C50011 + C49985 * C50088);
    const double C10087 =
        2 * C49844 * C50088 + C49844 * (C50088 + C50231 * C49848);
    const double C50127 = C50125 * ae;
    const double C50126 = C50123 + C50124;
    const double C28485 = C5067 * C4468;
    const double C50184 = C50181 * ae;
    const double C7356 = 3 * (C49921 + C49940 * C49848) +
                         C49844 * (2 * C50053 + C49844 * C50181);
    const double C50185 = ae * C50179;
    const double C50183 = C49844 * C50179;
    const double C50398 = 2 * C50179;
    const double C50250 = C50243 + C50248;
    const double C50273 = C50271 * ae;
    const double C50272 = C50269 + C50270;
    const double C13751 = C5067 * C10088;
    const double C50358 = C50355 * ae;
    const double C14656 = 3 * (C50018 + C50136 * C49848) +
                          C49844 * (2 * C50139 + C49844 * C50355);
    const double C50359 = ae * C50353;
    const double C50357 = C49844 * C50353;
    const double C50470 = 2 * C50353;
    const double C50452 = C50439 + C50448;
    const double C50506 = C49875 + C50449;
    const double C50451 = C49929 + C50446;
    const double C49935 = C49934 + C49932;
    const double C152 = C118 * C130;
    const double C5091 = C5066 * C130;
    const double C312 = C118 * C290;
    const double C5300 = C5066 * C290;
    const double C326 = C118 * C296;
    const double C5295 = C5066 * C296;
    const double C489 = C118 * C467;
    const double C5085 = C5068 * C467;
    const double C5502 = C5066 * C467;
    const double C31591 = C31574 * C467;
    const double C907 = C118 * C893;
    const double C5273 = C5068 * C893;
    const double C6053 = C5066 * C893;
    const double C31779 = C31574 * C893;
    const double C1112 = C118 * C1103;
    const double C6317 = C5066 * C1103;
    const double C1573 = C118 * C1564;
    const double C5298 = C5068 * C1564;
    const double C6961 = C5066 * C1564;
    const double C31804 = C31574 * C1564;
    const double C50014 = C50012 + C50013;
    const double C50057 = ae * C50054;
    const double C50056 = C49844 * C50054;
    const double C50173 = 2 * C50054;
    const double C2464 = C2457 + C1113;
    const double C12653 = C12640 + C6319;
    const double C3141 = C3135 + C1574;
    const double C5309 = C5291 + C5292;
    const double C13328 = C13318 + C6963;
    const double C50100 = C50098 + C50099;
    const double C9692 = C50923 * C4068;
    const double C12635 = C50935 * C4068;
    const double C14255 = C51021 * C4068;
    const double C19206 = C15250 * C4068;
    const double C35912 = C50935 * C4068;
    const double C46108 = C31569 * C4068;
    const double C3408 = C118 * C3399;
    const double C12638 = C5066 * C3399;
    const double C4074 = C118 * C4065;
    const double C6320 = C5068 * C4065;
    const double C13316 = C5066 * C4065;
    const double C32826 = C31574 * C4065;
    const double C50143 = ae * C50140;
    const double C50142 = C49844 * C50140;
    const double C50347 = 2 * C50140;
    const double C50430 = C49867 + C50208;
    const double C50209 = C49905 + C50206;
    const double C49889 = C49875 + C49888;
    const double C50218 = C50217 * C50024;
    const double C50369 = C49985 * C50217;
    const double C50396 = C49844 * C50217;
    const double C50283 = C49875 + C50281;
    const double C50476 = C49844 * C50468;
    const double C50525 = C50520 + C50508;
    const double C49974 = C49964 + C49972;
    const double C50078 = C49948 + C50076;
    const double C50109 = C49844 * C50107;
    const double C50156 = C50151 + C50152;
    const double C50232 = C49985 * C50230;
    const double C50258 = C49844 * C50230;
    const double C50380 = C50375 + C50376;
    const double C50413 = ae * C50406;
    const double C50410 = C49844 * C50406;
    const double C50299 = C50293 + C50297;
    const double C50330 = C50325 + C50326;
    const double C50489 = ae * C50482;
    const double C50486 = C49844 * C50482;
    const double C50531 = C49943 + C50526;
    const double C49973 = C49851 * C49971;
    const double C49997 = C49985 * C49971;
    const double C50031 = C49844 * C49971;
    const double C50030 = C49971 * ae;
    const double C50081 = C50079 * ae;
    const double C3394 = 3 * (C49930 + C49945 * C50024) +
                         C49985 * (2 * C50004 + C49985 * C50079);
    const double C3557 = C49930 + C49945 * C50024 + C50079 * C49848;
    const double C4060 = C49844 * (2 * C50004 + C49985 * C50079);
    const double C50113 = C50111 * ae;
    const double C50161 = C50158 * ae;
    const double C7355 = 3 * (C49930 + C49945 * C49848) +
                         C49844 * (2 * C50042 + C49844 * C50158);
    const double C50235 = C50226 + C50233;
    const double C50262 = C50260 * ae;
    const double C50384 = C50382 * ae;
    const double C16648 = 3 * (C50011 + C50122 * C49848) +
                          C49844 * (2 * C50125 + C49844 * C50382);
    const double C50416 = C50403 + C50412;
    const double C50302 = C49985 * C50300;
    const double C50313 = C49844 * C50300;
    const double C50312 = C50300 * ae;
    const double C50335 = C50332 * ae;
    const double C14655 = 3 * (C50097 + C50246 * C49848) +
                          C49844 * (2 * C50271 + C49844 * C50332);
    const double C50492 = C50473 + C50488;
    const double C50536 = C49844 * C50532;
    const double C50535 = C50532 * ae;
    const double C49953 = C49844 * C49952;
    const double C131 = (4 * (2 * C49920 + C49851 * C49933) +
                         C49851 * (3 * C49933 + C49851 * C49952)) /
                        C49731;
    const double C297 =
        (2 * C49920 + C49851 * C49933 + C49952 * C50024) / C49731;
    const double C298 = (C49985 * (3 * C49933 + C49851 * C49952)) / C49731;
    const double C3407 = C118 * C3398;
    const double C12646 = C5066 * C3398;
    const double C50251 = C49844 * C50249;
    const double C9029 = (4 * (2 * C50017 + C49985 * C50096) +
                          C49985 * (3 * C50096 + C49985 * C50249)) /
                         C49731;
    const double C51050 = C50994 - C51033;
    const double C51034 = C50996 - C50997;
    const double C51051 = C50999 - C51035;
    const double C51052 = C51003 - C51037;
    const double C51053 = C51006 - C51039;
    const double C51054 = C51013 - C51040;
    const double C51055 = C51008 - C51042;
    const double C51056 = C51017 - C51043;
    const double C51057 = C51022 - C51045;
    const double C51046 = C51025 - C51026;
    const double C49755 = C50923 - C49754;
    const double C38068 = C38064 * C471;
    const double C5111 = C5103 + C5088;
    const double C5108 = C5100 + C5079;
    const double C5106 = C5098 + C5073;
    const double C12657 = C12649 + C5286;
    const double C12655 = C12647 + C5285;
    const double C5315 = C5307 + C5282;
    const double C5313 = C5305 + C5276;
    const double C5517 = C5509 + C5484;
    const double C5515 = C5507 + C5478;
    const double C13333 = C13327 + C6044;
    const double C12660 = C12652 + C6321;
    const double C13331 = C13325 + C6965;
    const double C5109 = C5101 + C5082;
    const double C5107 = C5099 + C5076;
    const double C12658 = C12650 + C5287;
    const double C12656 = C12648 + C5284;
    const double C168 = C163 + C144;
    const double C2470 = C2466 + C2449;
    const double C38089 = C51058 * C136;
    const double C38086 = C51058 * C135;
    const double C38071 = C51058 * C134;
    const double C38289 = C51058 * C305;
    const double C38280 = C51058 * C302;
    const double C38474 = C51058 * C479;
    const double C38661 = C51058 * C301;
    const double C38825 = C51058 * C478;
    const double C39041 = C51058 * C897;
    const double C47252 = C51058 * C304;
    const double C47242 = C51058 * C303;
    const double C47908 = C51058 * C896;
    const double C48163 = C51058 * C1109;
    const double C48831 = C51058 * C1570;
    const double C20836 =
        (C51021 - C51047) / C49750 - (C51058 * C50931) / C49731;
    const double C38083 = C51049 * C478;
    const double C38074 = C51049 * C479;
    const double C38277 = C51049 * C897;
    const double C47250 = C51049 * C1570;
    const double C47244 = C51049 * C896;
    const double C48165 = C51049 * C4068;
    const double C20837 =
        (2 * C50935 + C51058) / C49750 - (C51049 * C50931) / C49731;
    const double C20838 = C51049 / C49750 - C50938 / C49777;
    const double C482 =
        (C49851 * C49858 + C49925 + C49925 +
         C49844 * (2 * ae * C49920 + C49844 * C49851 * C49867)) /
        C49749;
    const double C500 = C118 * C472;
    const double C5491 = C5066 * C472;
    const double C5481 = C5068 * C472;
    const double C15269 = C15257 * C472;
    const double C31987 = C31574 * C472;
    const double C38076 = C38064 * C472;
    const double C342 = C336 + C323;
    const double C5316 = C5308 + C5289;
    const double C916 = C913 + C904;
    const double C5314 = C5306 + C5279;
    const double C6064 = C6060 + C6047;
    const double C1223 =
        (C49985 * C49858 + C50022 + C50022 +
         C49844 * (2 * ae * C50017 + C49844 * C49985 * C49867)) /
        C49749;
    const double C1228 = C118 * C1219;
    const double C6045 = C5068 * C1219;
    const double C6473 = C5066 * C1219;
    const double C15474 = C15257 * C1219;
    const double C32551 = C31574 * C1219;
    const double C38281 = C38064 * C1219;
    const double C50070 = C50069 + C50066;
    const double C169 = C164 + C147;
    const double C170 = C165 + C150;
    const double C347 = C341 + C319;
    const double C2471 = C2467 + C2455;
    const double C524 = C518 + C496;
    const double C3146 = C3143 + C3133;
    const double C346 = C340 + C316;
    const double C523 = C517 + C493;
    const double C3411 = C3410 + C3405;
    const double C4077 = C4076 + C4071;
    const double C138 =
        (4 * (2 * C49851 * C49867 + C49851 * C49877) +
         C49851 * (3 * C49877 +
                   C49851 * (2 * C49851 * C49875 +
                             C49851 * (C49875 +
                                       (C49870 * C49871 +
                                        C49848 * bs[7] * std::pow(C49846, 7)) *
                                           C49847 * C49863)))) /
        C49749;
    const double C300 =
        ((yP - yQ) * (2 * C49851 * C49867 + C49851 * C49877)) / C49749;
    const double C306 =
        (C49858 + C49867 * C49863 + C49877 * std::pow(yP - yQ, 2)) / C49749;
    const double C477 =
        (2 * ae *
             (2 * C49851 * C49905 +
              C49851 * (C49905 + C49862 * C49861 * C49903 * C49863)) +
         C49844 * (2 * C49851 * C49867 + C49851 * C49877)) /
        C49749;
    const double C898 =
        (2 * ae * C49985 * C49933 + C49844 * C49985 * C49877) / C49749;
    const double C50182 = C50178 + C50172;
    const double C2458 = C50923 * C1108;
    const double C12641 = C51021 * C1108;
    const double C34691 = C31569 * C1108;
    const double C3136 = C50923 * C1569;
    const double C5293 = C50935 * C1569;
    const double C13319 = C51021 * C1569;
    const double C15485 = C15250 * C1569;
    const double C31799 = C50935 * C1569;
    const double C35570 = C31569 * C1569;
    const double C38292 = C51049 * C1569;
    const double C8121 = C50923 * C3401;
    const double C8778 = C50923 * C4067;
    const double C12643 = C50935 * C4067;
    const double C34693 = C50935 * C4067;
    const double C9031 =
        (4 * (2 * C50134 + C49985 * C50222) +
         C49985 *
             (3 * C50222 + C49985 * (2 * C49985 * C49875 +
                                     C49985 * (C49875 + C49887 * C50024)))) /
        C49749;
    const double C9689 =
        (2 * ae * (3 * C50096 + C49985 * C50249) +
         C49844 *
             (3 * C50222 + C49985 * (2 * C49985 * C49875 +
                                     C49985 * (C49875 + C49887 * C50024)))) /
        C49749;
    const double C50356 = C50352 + C50346;
    const double C50450 = C49844 * C50445;
    const double C50505 = 2 * C50445;
    const double C49951 = C49949 * ae;
    const double C475 = (C49844 * (3 * C49933 + C49851 * C49952) +
                         (3 * C49930 + C49851 * C49949) * ae) /
                        C49731;
    const double C894 =
        (C49844 * C49985 * C49952 + C49985 * C49949 * ae) / C49731;
    const double C124 = 4 * (2 * C49921 + C49851 * C49930) +
                        C49851 * (3 * C49930 + C49851 * C49949);
    const double C287 = 2 * C49921 + C49851 * C49930 + C49949 * C50024;
    const double C288 = C49985 * (3 * C49930 + C49851 * C49949);
    const double C464 = 2 * C49921 + C49851 * C49930 + C49949 * C49848;
    const double C465 = C49844 * (3 * C49930 + C49851 * C49949);
    const double C889 = C49844 * C49985 * C49949;
    const double C1098 =
        2 * C49985 * C49949 + C49985 * (C49949 + C49971 * C50024);
    const double C1559 = C49844 * (C49949 + C49971 * C50024);
    const double C1843 =
        2 * C49844 * C49949 + C49844 * (C49949 + C49971 * C49848);
    const double C50007 = C50005 + C50006;
    const double C2630 = C117 * C1213;
    const double C6055 = C5067 * C1213;
    const double C50046 = ae * C50043;
    const double C50045 = C49844 * C50043;
    const double C50150 = 2 * C50043;
    const double C50091 = C50089 + C50090;
    const double C4073 = C118 * C4064;
    const double C6318 = C5068 * C4064;
    const double C13323 = C5066 * C4064;
    const double C32824 = C31574 * C4064;
    const double C8120 = C117 * C3395;
    const double C8277 = C117 * C3558;
    const double C13320 = C5067 * C3558;
    const double C8777 = C117 * C4061;
    const double C12642 = C5067 * C4061;
    const double C50129 = ae * C50126;
    const double C50128 = C49844 * C50126;
    const double C50370 = 2 * C50126;
    const double C50394 = C49879 + C50185;
    const double C50186 = C49938 + C50183;
    const double C50252 = C50250 * ae;
    const double C9687 = (C49844 * (3 * C50096 + C49985 * C50249) +
                          (3 * C50097 + C49985 * C50250) * ae) /
                         C49731;
    const double C9027 = 4 * (2 * C50018 + C49985 * C50097) +
                         C49985 * (3 * C50097 + C49985 * C50250);
    const double C9186 = 2 * C50018 + C49985 * C50097 + C50250 * C49848;
    const double C9685 = C49844 * (3 * C50097 + C49985 * C50250);
    const double C12051 =
        2 * C49844 * C50250 + C49844 * (C50250 + C50300 * C49848);
    const double C50275 = ae * C50272;
    const double C50274 = C49844 * C50272;
    const double C50324 = 2 * C50272;
    const double C50466 = C50280 + C50359;
    const double C50360 = C50135 + C50357;
    const double C50455 = C50452 * ae;
    const double C17540 = 4 * (2 * C50064 + C49844 * C50204) +
                          C49844 * (3 * C50204 + C49844 * C50452);
    const double C50519 = C50506 + C50449;
    const double C50454 = C50451 + C50443;
    const double C49936 = ae * C49935;
    const double C473 =
        (C49914 + C49905 * C49863 + C49844 * C49935 + C49844 * C49930 * ae) /
        C49731;
    const double C161 = C151 + C152;
    const double C5104 = C5090 + C5091;
    const double C333 = C311 + C312;
    const double C5684 = C5677 + C5300;
    const double C337 = C325 + C326;
    const double C5310 = C5294 + C5295;
    const double C510 = C488 + C489;
    const double C5102 = C5084 + C5085;
    const double C5844 = C5837 + C5502;
    const double C914 = C906 + C907;
    const double C5304 = C5272 + C5273;
    const double C6062 = C6052 + C6053;
    const double C2465 = C2460 + C1112;
    const double C3142 = C3138 + C1573;
    const double C5311 = C5297 + C5298;
    const double C50015 = ae * C50014;
    const double C1218 =
        (C49985 * C49920 + C49844 * C50014 + C49844 * C50011 * ae) / C49731;
    const double C50058 = C49920 + C50056;
    const double C2468 = C2464 + C1113;
    const double C12661 = C12653 + C6319;
    const double C3144 = C3141 + C1574;
    const double C5317 = C5309 + C5292;
    const double C13334 = C13328 + C6963;
    const double C50101 = ae * C50100;
    const double C3562 =
        (C49914 + C49905 * C50024 + C49844 * C50100 + C49844 * C50097 * ae) /
        C49731;
    const double C9037 = C9033 + C3408;
    const double C13593 = C13587 + C12638;
    const double C9695 = C9691 + C4074;
    const double C12651 = C12634 + C6320;
    const double C14260 = C14254 + C13316;
    const double C50144 = C50017 + C50142;
    const double C50440 = C50430 + C50208;
    const double C50210 = C50209 + C50203;
    const double C49890 = C49851 * C49889;
    const double C50106 = C49985 * C49889;
    const double C50149 = C49844 * C49889;
    const double C1107 = (2 * C49985 * C49877 +
                          C49985 * (C49877 + C49889 * std::pow(C49985, 2))) /
                         C49749;
    const double C1568 = (2 * ae * (C49933 + C49948 * C50024) +
                          C49844 * (C49877 + C49889 * C50024)) /
                         C49749;
    const double C3400 =
        (3 * (C49877 + C49889 * C50024) +
         C49985 * (2 * C49985 * C49889 +
                   C49985 * (C49889 +
                             (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863) *
                                 C50024))) /
        C49749;
    const double C50219 = C49879 + C50218;
    const double C50374 = C49844 * C50369;
    const double C50409 = C50405 + C50396;
    const double C50284 = C49985 * C50283;
    const double C50323 = C49844 * C50283;
    const double C50481 = C50475 + C50476;
    const double C50530 = C49844 * C50525;
    const double C49976 = C49851 * C49974;
    const double C49996 = C49985 * C49974;
    const double C50029 = C49844 * C49974;
    const double C1102 =
        (2 * C49985 * C49952 + C49985 * (C49952 + C49974 * C50024)) / C49731;
    const double C1563 = (C49844 * (C49952 + C49974 * C50024) +
                          (C49949 + C49971 * C50024) * ae) /
                         C49731;
    const double C50080 = C49844 * C50078;
    const double C4066 =
        (2 * ae * (2 * C50003 + C49985 * C50078) +
         C49844 * (2 * C49985 * C49889 +
                   C49985 * (C49889 +
                             (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863) *
                                 C50024))) /
        C49749;
    const double C3397 = (3 * (C49933 + C49948 * C50024) +
                          C49985 * (2 * C50003 + C49985 * C50078)) /
                         C49731;
    const double C4063 = (C49844 * (2 * C50003 + C49985 * C50078) +
                          (2 * C50004 + C49985 * C50079) * ae) /
                         C49731;
    const double C50112 = C50109 + C50110;
    const double C50162 = ae * C50156;
    const double C50160 = C49844 * C50156;
    const double C50234 = C50224 + C50232;
    const double C50261 = C50258 + C50259;
    const double C50385 = ae * C50380;
    const double C50383 = C49844 * C50380;
    const double C50415 = C49959 + C50410;
    const double C50301 = C49985 * C50299;
    const double C50311 = C49844 * C50299;
    const double C50336 = ae * C50330;
    const double C50334 = C49844 * C50330;
    const double C50491 = C50288 + C50486;
    const double C50534 = C50531 + C50522;
    const double C49975 = C49961 + C49973;
    const double C49999 = C49997 * ae;
    const double C1212 = C49985 * C49949 + C49997 * C49848;
    const double C50033 = C50031 * ae;
    const double C50237 = C50235 * ae;
    const double C9026 = 4 * (2 * C50011 + C49985 * C50088) +
                         C49985 * (3 * C50088 + C49985 * C50235);
    const double C9185 = 2 * C50011 + C49985 * C50088 + C50235 * C49848;
    const double C9684 = C49844 * (3 * C50088 + C49985 * C50235);
    const double C50419 = C50416 * ae;
    const double C17539 = 4 * (2 * C50053 + C49844 * C50181) +
                          C49844 * (3 * C50181 + C49844 * C50416);
    const double C50304 = C50290 + C50302;
    const double C50315 = C50313 * ae;
    const double C50494 = C50492 * ae;
    const double C20278 = 4 * (2 * C50139 + C49844 * C50355) +
                          C49844 * (3 * C50355 + C49844 * C50492);
    const double C50539 = C50517 + C50536;
    const double C155 = C118 * C131;
    const double C5097 = C5066 * C131;
    const double C329 = C118 * C297;
    const double C5303 = C5066 * C297;
    const double C331 = C118 * C298;
    const double C5682 = C5066 * C298;
    const double C9036 = C118 * C9029;
    const double C13592 = C5066 * C9029;
    const double C107 = (C50992 - C51032) / C49750 - (C51050 * C50731) / C49731;
    const double C108 =
        (2 * C50740 + C51050) / C49750 - (C51034 * C50731) / C49731;
    const double C109 = C51034 / C49750 - C50743 / C49777;
    const double C113 = (C51051 * C50757) / C50754 + (C51001 - C51036) / C50756;
    const double C114 =
        (C51052 * C50757) / C50754 + (2 * C50768 + C51051) / C50756;
    const double C115 = (C50757 * C50768) / C50771 + C51052 / C50756;
    const double C1093 =
        (C51053 * C50828) / C50754 + (C51009 - C51038) / C50756;
    const double C1094 =
        (C51054 * C50828) / C50754 + (2 * C50833 + C51053) / C50756;
    const double C1095 = (C50828 * C50833) / C50771 + C51054 / C50756;
    const double C1839 =
        (C51055 * C50856) / C50754 + (C51010 - C51041) / C50756;
    const double C1840 =
        (C51056 * C50856) / C50754 + (2 * C50861 + C51055) / C50756;
    const double C1841 = (C50856 * C50861) / C50771 + C51056 / C50756;
    const double C10647 =
        (C51019 - C51044) / C49750 - (C51057 * C50905) / C49731;
    const double C10648 =
        (2 * C50909 + C51057) / C49750 - (C51046 * C50905) / C49731;
    const double C10649 = C51046 / C49750 - C50912 / C49777;
    const double C49756 = C49755 * C49752;
    const double C49780 = C49755 * ae;
    const double C15253 =
        ((-(0 * be) / C49731) / C49750 -
         ((0 - (C49729 * C49748) / C49731) * be) / C49731) /
            C49750 -
        ((C49729 * ((-C49748 / C49731) / C49750 - (C49755 * be) / C49731) +
          C31569) *
         be) /
            C49731 +
        (-C49751 / C49731) / C49750 - (0 * be) / C49731;
    const double C15255 =
        ((-C49748 / C49731) / C49750 - (C49755 * be) / C49731) / C49750 -
        ((C49729 * ((-C49751 / C49731) / C49750 - (0 * be) / C49731) + C50935) *
         be) /
            C49731;
    const double C31572 = (-C49748 / C49731) / C49750 - (C49755 * be) / C49731;
    const double C5119 = C5111 + C5089;
    const double C5116 = C5108 + C5080;
    const double C5114 = C5106 + C5074;
    const double C12665 = C12657 + C12631;
    const double C12663 = C12655 + C12627;
    const double C5323 = C5315 + C5283;
    const double C5321 = C5313 + C5277;
    const double C5525 = C5517 + C5485;
    const double C5523 = C5515 + C5479;
    const double C13339 = C13333 + C13315;
    const double C12668 = C12660 + C12637;
    const double C13337 = C13331 + C13311;
    const double C5117 = C5109 + C5083;
    const double C5115 = C5107 + C5077;
    const double C12666 = C12658 + C12633;
    const double C12664 = C12656 + C12629;
    const double C173 = C168 * C50893;
    const double C2292 = C168 * C51019;
    const double C7960 = C168 * C7954;
    const double C22733 = C168 * C22727;
    const double C25402 = C168 * C51057;
    const double C501 = C50923 * C482;
    const double C5492 = C51021 * C482;
    const double C5482 = C50935 * C482;
    const double C15270 = C15251 * C482;
    const double C15676 = C15249 * C482;
    const double C15664 = C15250 * C482;
    const double C31998 = C31569 * C482;
    const double C31988 = C50935 * C482;
    const double C38077 = C38058 * C482;
    const double C38483 = C51058 * C482;
    const double C38471 = C51049 * C482;
    const double C513 = C499 + C500;
    const double C5510 = C5490 + C5491;
    const double C5508 = C5480 + C5481;
    const double C348 = C342 + C324;
    const double C5324 = C5316 + C5290;
    const double C919 = C916 + C905;
    const double C5322 = C5314 + C5280;
    const double C6068 = C6064 + C6048;
    const double C3568 = C50923 * C1223;
    const double C13313 = C50935 * C1223;
    const double C13746 = C51021 * C1223;
    const double C18287 = C15251 * C1223;
    const double C18947 = C15250 * C1223;
    const double C19368 = C15249 * C1223;
    const double C35565 = C50935 * C1223;
    const double C36118 = C31569 * C1223;
    const double C47246 = C38058 * C1223;
    const double C47906 = C51049 * C1223;
    const double C48327 = C51058 * C1223;
    const double C3572 = C3567 + C1228;
    const double C13326 = C13312 + C6045;
    const double C13755 = C13745 + C6473;
    const double C50071 = ae * C50070;
    const double C1850 =
        (2 * C49917 + C49844 * C50070 + (C49912 + C49852 * C49848) * ae) /
        C49731;
    const double C174 = C169 * C50893;
    const double C2294 = C169 * C51019;
    const double C7965 = C169 * C7954;
    const double C22735 = C169 * C22727;
    const double C25407 = C169 * C51057;
    const double C175 = C170 * C50893;
    const double C2297 = C170 * C51019;
    const double C7966 = C170 * C7954;
    const double C22738 = C170 * C22727;
    const double C25408 = C170 * C51057;
    const double C353 = C347 * C50893;
    const double C2293 = C347 * C50909;
    const double C2453 = C347 * C51019;
    const double C7961 = C347 * C7955;
    const double C8117 = C347 * C7954;
    const double C22734 = C347 * C50909;
    const double C22892 = C347 * C22727;
    const double C25403 = C347 * C51046;
    const double C25559 = C347 * C51057;
    const double C530 = C524 * C50893;
    const double C2625 = C524 * C51019;
    const double C8274 = C524 * C7954;
    const double C23046 = C524 * C22727;
    const double C25711 = C524 * C51057;
    const double C352 = C346 * C50893;
    const double C2295 = C346 * C50909;
    const double C2451 = C346 * C51019;
    const double C7964 = C346 * C7955;
    const double C8429 = C346 * C7954;
    const double C22736 = C346 * C50909;
    const double C22890 = C346 * C22727;
    const double C25406 = C346 * C51046;
    const double C25861 = C346 * C51057;
    const double C529 = C523 * C50893;
    const double C2623 = C523 * C51019;
    const double C8578 = C523 * C7954;
    const double C23044 = C523 * C22727;
    const double C26010 = C523 * C51057;
    const double C156 = C50923 * C138;
    const double C313 = C50923 * C300;
    const double C5678 = C51021 * C300;
    const double C32184 = C31569 * C300;
    const double C327 = C50923 * C306;
    const double C5296 = C51021 * C306;
    const double C31802 = C31569 * C306;
    const double C490 = C50923 * C477;
    const double C5086 = C50935 * C477;
    const double C5838 = C51021 * C477;
    const double C15285 = C15250 * C477;
    const double C31592 = C50935 * C477;
    const double C32344 = C31569 * C477;
    const double C38092 = C51049 * C477;
    const double C908 = C50923 * C898;
    const double C5274 = C50935 * C898;
    const double C6054 = C51021 * C898;
    const double C15856 = C15250 * C898;
    const double C31780 = C50935 * C898;
    const double C32560 = C31569 * C898;
    const double C38663 = C51049 * C898;
    const double C11343 = C50923 * C9031;
    const double C11785 = C50923 * C9689;
    const double C13590 = C50935 * C9689;
    const double C45453 = C50935 * C9689;
    const double C49954 = C49953 + C49951;
    const double C508 = C118 * C475;
    const double C5094 = C5068 * C475;
    const double C5842 = C5066 * C475;
    const double C31600 = C31574 * C475;
    const double C910 = C118 * C894;
    const double C5301 = C5068 * C894;
    const double C6059 = C5066 * C894;
    const double C31807 = C31574 * C894;
    const double C154 = C117 * C124;
    const double C328 = C117 * C287;
    const double C640 = C117 * C288;
    const double C505 = C117 * C464;
    const double C5839 = C5067 * C464;
    const double C750 = C117 * C465;
    const double C5093 = C5067 * C465;
    const double C909 = C117 * C889;
    const double C5679 = C5067 * C889;
    const double C50008 = ae * C50007;
    const double C1217 =
        (C49985 * C49933 + C49844 * C50007 + C49844 * C50004 * ae) / C49731;
    const double C50047 = C49933 + C50045;
    const double C50092 = ae * C50091;
    const double C3561 =
        (C49920 + C49938 * C50024 + C49844 * C50091 + C49844 * C50088 * ae) /
        C49731;
    const double C8122 = C8120 + C3407;
    const double C8779 = C8777 + C4073;
    const double C12654 = C12642 + C6318;
    const double C50130 = C50010 + C50128;
    const double C50404 = C50394 + C50185;
    const double C50187 = C50186 + C50180;
    const double C50253 = C50251 + C50252;
    const double C9694 = C118 * C9687;
    const double C12639 = C5068 * C9687;
    const double C14259 = C5066 * C9687;
    const double C35915 = C31574 * C9687;
    const double C11342 = C117 * C9027;
    const double C11449 = C117 * C9186;
    const double C14256 = C5067 * C9186;
    const double C11784 = C117 * C9685;
    const double C13589 = C5067 * C9685;
    const double C50276 = C50096 + C50274;
    const double C50474 = C50466 + C50359;
    const double C50361 = C50360 + C50354;
    const double C50457 = ae * C50454;
    const double C50456 = C49844 * C50454;
    const double C50510 = 3 * C50454;
    const double C483 = (C49858 + C49867 * C49863 + C49936 + C49936 +
                         C49844 * (2 * ae * C49933 + C49844 * C49877)) /
                        C49749;
    const double C503 = C118 * C473;
    const double C5497 = C5066 * C473;
    const double C5475 = C5068 * C473;
    const double C15272 = C15257 * C473;
    const double C31981 = C31574 * C473;
    const double C38079 = C38064 * C473;
    const double C166 = C161 + C152;
    const double C5112 = C5104 + C5091;
    const double C339 = C333 + C312;
    const double C5686 = C5684 + C5300;
    const double C343 = C337 + C326;
    const double C5318 = C5310 + C5295;
    const double C516 = C510 + C489;
    const double C5110 = C5102 + C5085;
    const double C5846 = C5844 + C5502;
    const double C917 = C914 + C907;
    const double C5312 = C5304 + C5273;
    const double C6066 = C6062 + C6053;
    const double C2469 = C2465 + C1112;
    const double C3145 = C3142 + C1573;
    const double C5319 = C5311 + C5298;
    const double C1222 =
        (C49985 * C49993 + C50015 + C50015 +
         C49844 * (2 * ae * C50010 + C49844 * C49985 * C49879)) /
        C49749;
    const double C1227 = C118 * C1218;
    const double C6050 = C5068 * C1218;
    const double C6471 = C5066 * C1218;
    const double C15466 = C15257 * C1218;
    const double C32556 = C31574 * C1218;
    const double C38273 = C38064 * C1218;
    const double C50059 = C50058 + C50055;
    const double C2472 = C2468 + C2458;
    const double C12669 = C12661 + C12641;
    const double C3147 = C3144 + C3136;
    const double C5325 = C5317 + C5293;
    const double C13340 = C13334 + C13319;
    const double C3565 =
        (C49858 + C49867 * C50024 + C50101 + C50101 +
         C49844 * (2 * ae * C50096 + C49844 * (C49867 + C49875 * C50024))) /
        C49749;
    const double C3571 = C118 * C3562;
    const double C6964 = C5068 * C3562;
    const double C12818 = C5066 * C3562;
    const double C15479 = C15257 * C3562;
    const double C33470 = C31574 * C3562;
    const double C38286 = C38064 * C3562;
    const double C9038 = C9037 + C3408;
    const double C13595 = C13593 + C12638;
    const double C9696 = C9695 + C4074;
    const double C12659 = C12651 + C6320;
    const double C14262 = C14260 + C13316;
    const double C50145 = C50144 + C50141;
    const double C50453 = C50440 + C50450;
    const double C50212 = ae * C50210;
    const double C50211 = C49844 * C50210;
    const double C50433 = 3 * C50210;
    const double C49891 = C49883 + C49890;
    const double C50159 = C50155 + C50149;
    const double C2461 = C50923 * C1107;
    const double C3139 = C50923 * C1568;
    const double C5299 = C50935 * C1568;
    const double C31805 = C50935 * C1568;
    const double C9030 =
        (4 * (2 * C50120 + C49985 * C50219) +
         C49985 * (3 * C50219 +
                   C49985 * (2 * C49985 * C50217 +
                             C49985 * (C50217 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50024)))) /
        C49749;
    const double C50379 = C50373 + C50374;
    const double C50414 = C49844 * C50409;
    const double C50285 = C50282 + C50284;
    const double C50333 = C50329 + C50323;
    const double C50485 = C49844 * C50481;
    const double C50533 = C50519 + C50530;
    const double C49978 = C49958 + C49976;
    const double C49998 = C49844 * C49996;
    const double C50032 = C50029 + C50030;
    const double C1111 = C118 * C1102;
    const double C1572 = C118 * C1563;
    const double C5302 = C5068 * C1563;
    const double C31808 = C31574 * C1563;
    const double C50082 = C50080 + C50081;
    const double C3406 = C118 * C3397;
    const double C4072 = C118 * C4063;
    const double C6316 = C5068 * C4063;
    const double C32822 = C31574 * C4063;
    const double C50115 = ae * C50112;
    const double C50114 = C49844 * C50112;
    const double C50163 = C49948 + C50160;
    const double C50236 = C49844 * C50234;
    const double C9688 =
        (2 * ae * (3 * C50087 + C49985 * C50234) +
         C49844 * (3 * C50219 +
                   C49985 * (2 * C49985 * C50217 +
                             C49985 * (C50217 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50024)))) /
        C49749;
    const double C9028 = (4 * (2 * C50010 + C49985 * C50087) +
                          C49985 * (3 * C50087 + C49985 * C50234)) /
                         C49731;
    const double C9686 = (C49844 * (3 * C50087 + C49985 * C50234) +
                          (3 * C50088 + C49985 * C50235) * ae) /
                         C49731;
    const double C50264 = ae * C50261;
    const double C50263 = C49844 * C50261;
    const double C50386 = C50121 + C50383;
    const double C50418 = C50415 + C50407;
    const double C50303 = C50287 + C50301;
    const double C50314 = C50311 + C50312;
    const double C50337 = C50245 + C50334;
    const double C50493 = C50491 + C50483;
    const double C50540 = ae * C50534;
    const double C50538 = C49844 * C50534;
    const double C49977 = C49975 * ae;
    const double C125 = 5 * (3 * C49930 + C49851 * C49949) +
                        C49851 * (4 * C49949 + C49851 * C49975);
    const double C289 = 3 * C49930 + C49851 * C49949 + C49975 * C50024;
    const double C466 = 3 * C49930 + C49851 * C49949 + C49975 * C49848;
    const double C636 = C49985 * (4 * C49949 + C49851 * C49975);
    const double C746 = C49844 * (4 * C49949 + C49851 * C49975);
    const double C890 = C49844 * C49985 * C49975;
    const double C50306 = C50304 * ae;
    const double C11338 = 5 * (3 * C50097 + C49985 * C50250) +
                          C49985 * (4 * C50250 + C49985 * C50304);
    const double C11445 = 3 * C50097 + C49985 * C50250 + C50304 * C49848;
    const double C11780 = C49844 * (4 * C50250 + C49985 * C50304);
    const double C50543 = C50539 * ae;
    const double C22296 = 5 * (3 * C50204 + C49844 * C50452) +
                          C49844 * (4 * C50452 + C49844 * C50539);
    const double C49763 = C49729 * C49756;
    const double C15252 =
        (-(be * -2 * C49748) / C49749) / C49750 -
        ((2 * ((-C49748 / C49731) / C49750 - (C49755 * be) / C49731) -
          (C49729 * ((-4 * C49737) / C49731 - (C49729 * C49756) / C49731) *
           be) /
              C49731) *
         be) /
            C49731 -
        C49756 / (2 * C49749);
    const double C15256 = (-C49756 / C49731) / (4 * C49749);
    const double C20846 = (-C49756 / C49731) / (4 * C49774);
    const double C31573 = (-C49756 / C49731) / C49750;
    const double C38063 = (-C49756 / C49731) / (4 * C49749);
    const double C49787 = C49780 / C49731;
    const double C15291 = C15253 * C130;
    const double C15281 = C15253 * C129;
    const double C15278 = C15253 * C128;
    const double C15263 = C15253 * C127;
    const double C15259 = C15253 * C126;
    const double C15494 = C15253 * C296;
    const double C15489 = C15253 * C291;
    const double C15481 = C15253 * C295;
    const double C15477 = C15253 * C294;
    const double C15476 = C15253 * C293;
    const double C15472 = C15253 * C292;
    const double C15688 = C15253 * C473;
    const double C15683 = C15253 * C468;
    const double C15675 = C15253 * C472;
    const double C15671 = C15253 * C471;
    const double C15670 = C15253 * C470;
    const double C15666 = C15253 * C469;
    const double C15861 = C15253 * C290;
    const double C16025 = C15253 * C467;
    const double C16243 = C15253 * C893;
    const double C16233 = C15253 * C892;
    const double C16229 = C15253 * C891;
    const double C16502 = C15253 * C1105;
    const double C16499 = C15253 * C1104;
    const double C16657 = C15253 * C1219;
    const double C16654 = C15253 * C1218;
    const double C17149 = C15253 * C1566;
    const double C17146 = C15253 * C1565;
    const double C19211 = C15253 * C3399;
    const double C19375 = C15253 * C3562;
    const double C19879 = C15253 * C4065;
    const double C15290 = C15255 * C475;
    const double C15284 = C15255 * C467;
    const double C15275 = C15255 * C468;
    const double C15266 = C15255 * C469;
    const double C15260 = C15255 * C470;
    const double C15493 = C15255 * C1564;
    const double C15490 = C15255 * C893;
    const double C15484 = C15255 * C1565;
    const double C15478 = C15255 * C1566;
    const double C15475 = C15255 * C891;
    const double C15469 = C15255 * C892;
    const double C15684 = C15255 * C473;
    const double C15669 = C15255 * C471;
    const double C15663 = C15255 * C472;
    const double C15860 = C15255 * C894;
    const double C16236 = C15255 * C1218;
    const double C16230 = C15255 * C1219;
    const double C16501 = C15255 * C4065;
    const double C16498 = C15255 * C4064;
    const double C17148 = C15255 * C3562;
    const double C19210 = C15255 * C9687;
    const double C31603 = C31572 * C131;
    const double C31597 = C31572 * C130;
    const double C31594 = C31572 * C129;
    const double C31585 = C31572 * C128;
    const double C31579 = C31572 * C127;
    const double C31576 = C31572 * C126;
    const double C31809 = C31572 * C297;
    const double C31806 = C31572 * C290;
    const double C31801 = C31572 * C296;
    const double C31795 = C31572 * C295;
    const double C31792 = C31572 * C294;
    const double C31791 = C31572 * C293;
    const double C31788 = C31572 * C292;
    const double C31782 = C31572 * C291;
    const double C32008 = C31572 * C467;
    const double C32003 = C31572 * C473;
    const double C31997 = C31572 * C472;
    const double C31994 = C31572 * C471;
    const double C31993 = C31572 * C470;
    const double C31990 = C31572 * C469;
    const double C31984 = C31572 * C468;
    const double C32188 = C31572 * C298;
    const double C32348 = C31572 * C475;
    const double C32565 = C31572 * C894;
    const double C32559 = C31572 * C893;
    const double C32553 = C31572 * C892;
    const double C32550 = C31572 * C891;
    const double C32827 = C31572 * C1105;
    const double C32825 = C31572 * C1104;
    const double C32823 = C31572 * C1103;
    const double C32979 = C31572 * C1219;
    const double C32977 = C31572 * C1218;
    const double C33471 = C31572 * C1566;
    const double C33469 = C31572 * C1565;
    const double C33467 = C31572 * C1564;
    const double C35916 = C31572 * C3399;
    const double C35914 = C31572 * C3398;
    const double C36124 = C31572 * C3562;
    const double C36784 = C31572 * C4065;
    const double C36782 = C31572 * C4064;
    const double C45455 = C31572 * C9029;
    const double C46112 = C31572 * C9687;
    const double C5122 = C5116 + C5117;
    const double C12671 = C12665 + C12666;
    const double C519 = C513 + C500;
    const double C5518 = C5510 + C5491;
    const double C5516 = C5508 + C5481;
    const double C354 = C348 * C50893;
    const double C2456 = C348 * C51019;
    const double C2452 = C348 * C50909;
    const double C7962 = C348 * C7956;
    const double C8118 = C348 * C7954;
    const double C8116 = C348 * C7955;
    const double C22893 = C348 * C22727;
    const double C22891 = C348 * C50909;
    const double C25404 = C348 * C25398;
    const double C25560 = C348 * C51057;
    const double C25558 = C348 * C51046;
    const double C922 = C919 * C50893;
    const double C2624 = C919 * C50909;
    const double C3134 = C919 * C51019;
    const double C8273 = C919 * C7955;
    const double C8775 = C919 * C7954;
    const double C23045 = C919 * C50909;
    const double C23543 = C919 * C22727;
    const double C25710 = C919 * C51046;
    const double C26207 = C919 * C51057;
    const double C28287 = C5322 + C5323;
    const double C28286 = C5323 + C5322;
    const double C3573 = C3572 + C1228;
    const double C13332 = C13326 + C6045;
    const double C13759 = C13755 + C6473;
    const double C1854 =
        (2 * (2 * ae * C49914 + C49844 * C49858) + C50071 + C50071 +
         C49844 * (C49858 + C50068 + C50068 +
                   C49844 * (2 * ae * C49905 + C49844 * C49867))) /
        C49749;
    const double C1859 = C118 * C1850;
    const double C5489 = C5068 * C1850;
    const double C7370 = C5066 * C1850;
    const double C15672 = C15255 * C1850;
    const double C15668 = C15257 * C1850;
    const double C17551 = C15253 * C1850;
    const double C20852 = C20847 * C1850;
    const double C31995 = C31574 * C1850;
    const double C33867 = C31572 * C1850;
    const double C38475 = C38064 * C1850;
    const double C2300 = C2294 + C2295;
    const double C22741 = C22735 + C22736;
    const double C49955 = ae * C49954;
    const double C474 = (2 * C49920 + C49851 * C49933 + C49844 * C49954 +
                         C49844 * C49949 * ae) /
                        C49731;
    const double C162 = C154 + C155;
    const double C338 = C328 + C329;
    const double C643 = C640 + C331;
    const double C753 = C750 + C508;
    const double C5105 = C5093 + C5094;
    const double C915 = C909 + C910;
    const double C5685 = C5679 + C5301;
    const double C1221 =
        (C49985 * C49877 + C50008 + C50008 +
         C49844 * (2 * ae * C50003 + C49844 * C49985 * C49889)) /
        C49749;
    const double C1226 = C118 * C1217;
    const double C6056 = C5068 * C1217;
    const double C6469 = C5066 * C1217;
    const double C15491 = C15257 * C1217;
    const double C16242 = C15255 * C1217;
    const double C32562 = C31574 * C1217;
    const double C32975 = C31572 * C1217;
    const double C38298 = C38064 * C1217;
    const double C50048 = C50047 + C50044;
    const double C3564 =
        (C49993 + C49879 * C50024 + C50092 + C50092 +
         C49844 *
             (2 * ae * C50087 + C49844 * (C49879 + C49851 * C49887 * C50024))) /
        C49749;
    const double C3570 = C118 * C3561;
    const double C6962 = C5068 * C3561;
    const double C12821 = C5066 * C3561;
    const double C15487 = C15257 * C3561;
    const double C17145 = C15255 * C3561;
    const double C33468 = C31574 * C3561;
    const double C36122 = C31572 * C3561;
    const double C38294 = C38064 * C3561;
    const double C8123 = C8122 + C3407;
    const double C8780 = C8779 + C4073;
    const double C12662 = C12654 + C6318;
    const double C50131 = C50130 + C50127;
    const double C50189 = ae * C50187;
    const double C50188 = C49844 * C50187;
    const double C50397 = 3 * C50187;
    const double C50254 = ae * C50253;
    const double C9188 = (2 * C50017 + C49985 * C50096 + C49844 * C50253 +
                          C49844 * C50250 * ae) /
                         C49731;
    const double C11345 = C11342 + C9036;
    const double C11787 = C11784 + C9694;
    const double C13594 = C13589 + C12639;
    const double C50277 = C50276 + C50273;
    const double C50363 = ae * C50361;
    const double C50362 = C49844 * C50361;
    const double C50469 = 3 * C50361;
    const double C50518 = C50505 + C50457;
    const double C50458 = C50434 + C50456;
    const double C504 = C50923 * C483;
    const double C5498 = C51021 * C483;
    const double C5476 = C50935 * C483;
    const double C15273 = C15251 * C483;
    const double C16020 = C15250 * C483;
    const double C32004 = C31569 * C483;
    const double C31982 = C50935 * C483;
    const double C38080 = C38058 * C483;
    const double C38827 = C51049 * C483;
    const double C514 = C502 + C503;
    const double C5512 = C5496 + C5497;
    const double C5506 = C5474 + C5475;
    const double C171 = C166 + C153;
    const double C5120 = C5112 + C5092;
    const double C345 = C339 + C313;
    const double C5688 = C5686 + C5678;
    const double C349 = C343 + C327;
    const double C5326 = C5318 + C5296;
    const double C522 = C516 + C490;
    const double C5118 = C5110 + C5086;
    const double C5848 = C5846 + C5838;
    const double C920 = C917 + C908;
    const double C5320 = C5312 + C5274;
    const double C6070 = C6066 + C6054;
    const double C2628 = C50923 * C1222;
    const double C6051 = C50935 * C1222;
    const double C15467 = C15251 * C1222;
    const double C16237 = C15250 * C1222;
    const double C28484 = C51021 * C1222;
    const double C32557 = C50935 * C1222;
    const double C34907 = C31569 * C1222;
    const double C38274 = C38058 * C1222;
    const double C39044 = C51049 * C1222;
    const double C2632 = C2627 + C1227;
    const double C6061 = C6049 + C6050;
    const double C28487 = C28483 + C6471;
    const double C50060 = ae * C50059;
    const double C1849 =
        (2 * C49924 + C49844 * C50059 + (C49921 + C49940 * C49848) * ae) /
        C49731;
    const double C2474 = C2472 * C50909;
    const double C8119 = C2472 * C7955;
    const double C8115 = C2472 * C7956;
    const double C22894 = C2472 * C50909;
    const double C25561 = C2472 * C51046;
    const double C25557 = C2472 * C25398;
    const double C3149 = C3147 * C50909;
    const double C8272 = C3147 * C7956;
    const double C8776 = C3147 * C7955;
    const double C23544 = C3147 * C50909;
    const double C25709 = C3147 * C25398;
    const double C26208 = C3147 * C51046;
    const double C12644 = C5325 + C5324;
    const double C28288 = C5324 + C5325;
    const double C9193 = C50923 * C3565;
    const double C13309 = C50935 * C3565;
    const double C13750 = C51021 * C3565;
    const double C18289 = C15251 * C3565;
    const double C19874 = C15250 * C3565;
    const double C36780 = C50935 * C3565;
    const double C45609 = C31569 * C3565;
    const double C47248 = C38058 * C3565;
    const double C48833 = C51049 * C3565;
    const double C9196 = C9192 + C3571;
    const double C13324 = C13308 + C6964;
    const double C13757 = C13749 + C12818;
    const double C9039 = C9038 + C9034;
    const double C13597 = C13595 + C13588;
    const double C9697 = C9696 + C9692;
    const double C12667 = C12659 + C12635;
    const double C14264 = C14262 + C14255;
    const double C50146 = ae * C50145;
    const double C4472 =
        (2 * C50021 + C49844 * C50145 + (C50018 + C50136 * C49848) * ae) /
        C49731;
    const double C50213 = C50196 + C50211;
    const double C139 =
        (5 * (3 * C49877 + C49851 * C49891) +
         C49851 *
             (4 * C49891 +
              C49851 * (3 * C49889 +
                        C49851 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C307 = (2 * C49851 * C49867 + C49851 * C49877 +
                         C49891 * std::pow(yP - yQ, 2)) /
                        C49749;
    const double C308 = ((yP - yQ) * (3 * C49877 + C49851 * C49891)) / C49749;
    const double C309 =
        (3 * C49877 + C49851 * C49891 +
         (3 * C49889 +
          C49851 * (2 * C49851 * C49887 +
                    C49851 * (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863))) *
             std::pow(yP - yQ, 2)) /
        C49749;
    const double C485 = (2 * ae * (3 * C49933 + C49851 * C49952) +
                         C49844 * (3 * C49877 + C49851 * C49891)) /
                        C49749;
    const double C638 =
        ((yP - yQ) *
         (4 * C49891 +
          C49851 * (3 * C49889 +
                    C49851 * (2 * C49851 * C49887 +
                              C49851 * (C49887 +
                                        (C49881 * C49882 +
                                         C49848 * bs[8] * std::pow(C49842, 8)) *
                                            C49847 * C49863))))) /
        C49749;
    const double C899 =
        (2 * ae * C49985 * C49952 + C49844 * C49985 * C49891) / C49749;
    const double C1106 =
        (2 * C49985 * C49891 +
         C49985 * (C49891 +
                   (2 * C49851 * C49887 +
                    C49851 * (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863)) *
                       std::pow(C49985, 2))) /
        C49749;
    const double C1567 =
        (2 * ae * (C49952 + C49974 * C50024) +
         C49844 * (C49891 +
                   (2 * C49851 * C49887 +
                    C49851 * (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863)) *
                       C50024)) /
        C49749;
    const double C2473 = C2469 + C2461;
    const double C3148 = C3145 + C3139;
    const double C5327 = C5319 + C5299;
    const double C50417 = C50404 + C50414;
    const double C11340 =
        (5 * (3 * C50222 + C49985 * C50285) +
         C49985 *
             (4 * C50285 +
              C49985 * (3 * C50283 +
                        C49985 * (2 * C49985 * C49887 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50024))))) /
        C49749;
    const double C50490 = C50474 + C50485;
    const double C50537 = C49844 * C50533;
    const double C49979 = C49844 * C49978;
    const double C748 =
        (2 * ae * (4 * C49952 + C49851 * C49978) +
         C49844 *
             (4 * C49891 +
              C49851 * (3 * C49889 +
                        C49851 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C900 =
        (2 * ae * C49985 * C49978 +
         C49844 * C49985 *
             (3 * C49889 +
              C49851 *
                  (2 * C49851 * C49887 +
                   C49851 * (C49887 + (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49847 * C49863)))) /
        C49749;
    const double C132 = (5 * (3 * C49933 + C49851 * C49952) +
                         C49851 * (4 * C49952 + C49851 * C49978)) /
                        C49731;
    const double C299 =
        (3 * C49933 + C49851 * C49952 + C49978 * C50024) / C49731;
    const double C637 = (C49985 * (4 * C49952 + C49851 * C49978)) / C49731;
    const double C747 = (C49844 * (4 * C49952 + C49851 * C49978) +
                         (4 * C49949 + C49851 * C49975) * ae) /
                        C49731;
    const double C895 =
        (C49844 * C49985 * C49978 + C49985 * C49975 * ae) / C49731;
    const double C50000 = C49998 + C49999;
    const double C50035 = ae * C50032;
    const double C50034 = C49844 * C50032;
    const double C50083 = ae * C50082;
    const double C3560 =
        (C49933 + C49948 * C50024 + C49844 * C50082 + C49844 * C50079 * ae) /
        C49731;
    const double C50116 = C50003 + C50114;
    const double C50164 = C50163 + C50157;
    const double C50238 = C50236 + C50237;
    const double C9035 = C118 * C9028;
    const double C9693 = C118 * C9686;
    const double C12645 = C5068 * C9686;
    const double C35913 = C31574 * C9686;
    const double C50265 = C50087 + C50263;
    const double C50387 = C50386 + C50381;
    const double C50421 = ae * C50418;
    const double C50420 = C49844 * C50418;
    const double C50305 = C49844 * C50303;
    const double C11782 =
        (2 * ae * (4 * C50249 + C49985 * C50303) +
         C49844 *
             (4 * C50285 +
              C49985 * (3 * C50283 +
                        C49985 * (2 * C49985 * C49887 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50024))))) /
        C49749;
    const double C11339 = (5 * (3 * C50096 + C49985 * C50249) +
                           C49985 * (4 * C50249 + C49985 * C50303)) /
                          C49731;
    const double C11781 = (C49844 * (4 * C50249 + C49985 * C50303) +
                           (4 * C50250 + C49985 * C50304) * ae) /
                          C49731;
    const double C50317 = ae * C50314;
    const double C50316 = C49844 * C50314;
    const double C50338 = C50337 + C50331;
    const double C50496 = ae * C50493;
    const double C50495 = C49844 * C50493;
    const double C50542 = C50511 + C50538;
    const double C49779 = C49763 / C49731;
    const double C15254 =
        (-(((-4 * C49737) / C49731 - C49763 / C49731) * be) / C49731) / C49750 -
        ((2 * ((-C49751 / C49731) / C49750 - (0 * be) / C49731) -
          C49763 / (2 * C49749)) *
         be) /
            C49731;
    const double C15280 = C15252 * C122;
    const double C15277 = C15252 * C121;
    const double C15262 = C15252 * C120;
    const double C15480 = C15252 * C285;
    const double C15471 = C15252 * C282;
    const double C15674 = C15252 * C462;
    const double C15665 = C15252 * C459;
    const double C15853 = C15252 * C281;
    const double C16017 = C15252 * C458;
    const double C16232 = C15252 * C887;
    const double C18292 = C15252 * C284;
    const double C18282 = C15252 * C283;
    const double C18948 = C15252 * C886;
    const double C19203 = C15252 * C1101;
    const double C19367 = C15252 * C1215;
    const double C19871 = C15252 * C1562;
    const double C15286 = C15256 * C464;
    const double C15271 = C15256 * C463;
    const double C15268 = C15256 * C462;
    const double C15486 = C15256 * C3558;
    const double C15465 = C15256 * C1214;
    const double C15680 = C15256 * C7356;
    const double C15659 = C15256 * C1845;
    const double C15857 = C15256 * C1213;
    const double C16021 = C15256 * C1844;
    const double C16238 = C15256 * C4468;
    const double C18288 = C15256 * C3559;
    const double C18286 = C15256 * C1215;
    const double C18944 = C15256 * C4469;
    const double C19207 = C15256 * C9186;
    const double C19371 = C15256 * C14656;
    const double C19875 = C15256 * C10088;
    const double C31599 = C31573 * C465;
    const double C31590 = C31573 * C457;
    const double C31587 = C31573 * C458;
    const double C31581 = C31573 * C459;
    const double C31803 = C31573 * C1560;
    const double C31797 = C31573 * C1561;
    const double C31784 = C31573 * C887;
    const double C31778 = C31573 * C888;
    const double C32005 = C31573 * C1844;
    const double C31999 = C31573 * C1845;
    const double C31986 = C31573 * C462;
    const double C31980 = C31573 * C463;
    const double C32185 = C31573 * C889;
    const double C32345 = C31573 * C464;
    const double C32561 = C31573 * C1213;
    const double C32555 = C31573 * C1214;
    const double C34692 = C31573 * C4061;
    const double C34685 = C31573 * C1562;
    const double C34680 = C31573 * C886;
    const double C34908 = C31573 * C4468;
    const double C35571 = C31573 * C3558;
    const double C35564 = C31573 * C1215;
    const double C35911 = C31573 * C4062;
    const double C36119 = C31573 * C4469;
    const double C36779 = C31573 * C3559;
    const double C45452 = C31573 * C9685;
    const double C45610 = C31573 * C10088;
    const double C46109 = C31573 * C9186;
    const double C38093 = C38063 * C464;
    const double C38078 = C38063 * C463;
    const double C38075 = C38063 * C462;
    const double C38293 = C38063 * C3558;
    const double C38272 = C38063 * C1214;
    const double C38487 = C38063 * C7356;
    const double C38466 = C38063 * C1845;
    const double C38664 = C38063 * C1213;
    const double C38828 = C38063 * C1844;
    const double C39045 = C38063 * C4468;
    const double C47247 = C38063 * C3559;
    const double C47245 = C38063 * C1215;
    const double C47903 = C38063 * C4469;
    const double C48166 = C38063 * C9186;
    const double C48330 = C38063 * C14656;
    const double C48834 = C38063 * C10088;
    const double C49792 = C49787 - C49788;
    const double C5124 = C5122 * C50893;
    const double C525 = C519 + C501;
    const double C5526 = C5518 + C5492;
    const double C5524 = C5516 + C5482;
    const double C3574 = C3573 + C3568;
    const double C13338 = C13332 + C13313;
    const double C13763 = C13759 + C13746;
    const double C484 =
        (2 * C49851 * C49867 + C49851 * C49877 + C49955 + C49955 +
         C49844 * (2 * ae * C49952 + C49844 * C49891)) /
        C49749;
    const double C506 = C118 * C474;
    const double C5505 = C5066 * C474;
    const double C5503 = C5068 * C474;
    const double C15287 = C15257 * C474;
    const double C16024 = C15255 * C474;
    const double C32011 = C31572 * C474;
    const double C32009 = C31574 * C474;
    const double C38094 = C38064 * C474;
    const double C167 = C162 + C155;
    const double C344 = C338 + C329;
    const double C644 = C643 + C331;
    const double C754 = C753 + C508;
    const double C5113 = C5105 + C5094;
    const double C918 = C915 + C910;
    const double C5687 = C5685 + C5301;
    const double C2631 = C50923 * C1221;
    const double C6057 = C50935 * C1221;
    const double C15858 = C15251 * C1221;
    const double C32563 = C50935 * C1221;
    const double C38665 = C38058 * C1221;
    const double C2633 = C2630 + C1226;
    const double C6063 = C6055 + C6056;
    const double C50049 = ae * C50048;
    const double C1848 =
        (2 * C49935 + C49844 * C50048 + (C49930 + C49945 * C49848) * ae) /
        C49731;
    const double C8278 = C50923 * C3564;
    const double C13321 = C50935 * C3564;
    const double C15488 = C15251 * C3564;
    const double C35572 = C50935 * C3564;
    const double C38295 = C38058 * C3564;
    const double C8279 = C8277 + C3570;
    const double C13329 = C13320 + C6962;
    const double C8124 = C8123 + C8121;
    const double C8781 = C8780 + C8778;
    const double C12670 = C12662 + C12643;
    const double C50132 = ae * C50131;
    const double C4471 =
        (2 * C50014 + C49844 * C50131 + (C50011 + C50122 * C49848) * ae) /
        C49731;
    const double C50190 = C50173 + C50188;
    const double C9190 =
        (2 * C50134 + C49985 * C50222 + C50254 + C50254 +
         C49844 * (2 * ae * C50249 +
                   C49844 * (2 * C49985 * C49875 +
                             C49985 * (C49875 + C49887 * C50024)))) /
        C49749;
    const double C9195 = C118 * C9188;
    const double C13317 = C5068 * C9188;
    const double C13754 = C5066 * C9188;
    const double C16500 = C15257 * C9188;
    const double C19878 = C15255 * C9188;
    const double C36783 = C31574 * C9188;
    const double C39307 = C38064 * C9188;
    const double C45613 = C31572 * C9188;
    const double C11346 = C11345 + C9036;
    const double C11788 = C11787 + C9694;
    const double C13596 = C13594 + C12639;
    const double C50278 = ae * C50277;
    const double C10090 =
        (2 * C50100 + C49844 * C50277 + (C50097 + C50246 * C49848) * ae) /
        C49731;
    const double C50364 = C50347 + C50362;
    const double C50524 = C50518 + C50457;
    const double C50459 = C50458 + C50447;
    const double C520 = C514 + C503;
    const double C5520 = C5512 + C5497;
    const double C5514 = C5506 + C5475;
    const double C176 = C171 * C50893;
    const double C2298 = C171 * C51019;
    const double C22739 = C171 * C22727;
    const double C351 = C345 * C50893;
    const double C2296 = C345 * C50909;
    const double C2787 = C345 * C51019;
    const double C7967 = C345 * C7955;
    const double C22737 = C345 * C50909;
    const double C23198 = C345 * C22727;
    const double C25409 = C345 * C51046;
    const double C355 = C349 * C50893;
    const double C2459 = C349 * C51019;
    const double C2450 = C349 * C50909;
    const double C7963 = C349 * C7956;
    const double C8430 = C349 * C7955;
    const double C22895 = C349 * C22727;
    const double C22889 = C349 * C50909;
    const double C25405 = C349 * C25398;
    const double C25862 = C349 * C51046;
    const double C528 = C522 * C50893;
    const double C2936 = C522 * C51019;
    const double C23347 = C522 * C22727;
    const double C5123 = C5118 + C5119;
    const double C923 = C920 * C50893;
    const double C2622 = C920 * C50909;
    const double C3137 = C920 * C51019;
    const double C8579 = C920 * C7955;
    const double C23043 = C920 * C50909;
    const double C23545 = C920 * C22727;
    const double C26011 = C920 * C51046;
    const double C5676 = C5320 + C5321;
    const double C28687 = C5321 + C5320;
    const double C2634 = C2632 + C1227;
    const double C6065 = C6061 + C6050;
    const double C28489 = C28487 + C6471;
    const double C1853 =
        (2 * (2 * ae * C49920 + C49844 * C49993) + C50060 + C50060 +
         C49844 * (C49993 + C50057 + C50057 +
                   C49844 * (2 * ae * C49938 + C49844 * C49879))) /
        C49749;
    const double C1858 = C118 * C1849;
    const double C5494 = C5068 * C1849;
    const double C7368 = C5066 * C1849;
    const double C15678 = C15255 * C1849;
    const double C15660 = C15257 * C1849;
    const double C17548 = C15253 * C1849;
    const double C20853 = C20847 * C1849;
    const double C32000 = C31574 * C1849;
    const double C33865 = C31572 * C1849;
    const double C38467 = C38064 * C1849;
    const double C9197 = C9196 + C3571;
    const double C13330 = C13324 + C6964;
    const double C13761 = C13757 + C12818;
    const double C13586 = C12667 + C12668;
    const double C4475 =
        (2 * (2 * ae * C50017 + C49844 * C50134) + C50146 + C50146 +
         C49844 * (C50134 + C50143 + C50143 +
                   C49844 * (2 * ae * C50135 + C49844 * C49985 * C49875))) /
        C49749;
    const double C4479 = C118 * C4472;
    const double C6472 = C5068 * C4472;
    const double C14665 = C5066 * C4472;
    const double C16231 = C15257 * C4472;
    const double C16656 = C15255 * C4472;
    const double C20284 = C15253 * C4472;
    const double C20963 = C20847 * C4472;
    const double C32978 = C31574 * C4472;
    const double C37312 = C31572 * C4472;
    const double C39038 = C38064 * C4472;
    const double C50214 = C50213 + C50207;
    const double C330 = C50923 * C307;
    const double C641 = C50923 * C308;
    const double C751 = C50923 * C485;
    const double C5095 = C50935 * C485;
    const double C31601 = C50935 * C485;
    const double C911 = C50923 * C899;
    const double C5680 = C50935 * C899;
    const double C32186 = C50935 * C899;
    const double C2475 = C2473 * C50909;
    const double C8431 = C2473 * C7956;
    const double C22896 = C2473 * C50909;
    const double C25863 = C2473 * C25398;
    const double C3150 = C3148 * C50909;
    const double C8580 = C3148 * C7956;
    const double C23546 = C3148 * C50909;
    const double C26012 = C3148 * C25398;
    const double C49980 = C49979 + C49977;
    const double C157 = C118 * C132;
    const double C332 = C118 * C299;
    const double C642 = C118 * C637;
    const double C752 = C118 * C747;
    const double C5096 = C5068 * C747;
    const double C31602 = C31574 * C747;
    const double C912 = C118 * C895;
    const double C5681 = C5068 * C895;
    const double C32187 = C31574 * C895;
    const double C50001 = ae * C50000;
    const double C1216 =
        (C49985 * C49952 + C49844 * C50000 + C49844 * C49997 * ae) / C49731;
    const double C50036 = C49952 + C50034;
    const double C3563 =
        (C49877 + C49889 * C50024 + C50083 + C50083 +
         C49844 * (2 * ae * C50078 +
                   C49844 * (C49889 +
                             (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863) *
                                 C50024))) /
        C49749;
    const double C3569 = C118 * C3560;
    const double C6960 = C5068 * C3560;
    const double C15492 = C15257 * C3560;
    const double C33466 = C31574 * C3560;
    const double C38299 = C38064 * C3560;
    const double C50117 = C50116 + C50113;
    const double C50166 = ae * C50164;
    const double C50165 = C49844 * C50164;
    const double C50239 = ae * C50238;
    const double C9187 = (2 * C50010 + C49985 * C50087 + C49844 * C50238 +
                          C49844 * C50235 * ae) /
                         C49731;
    const double C50266 = C50265 + C50262;
    const double C50389 = ae * C50387;
    const double C50388 = C49844 * C50387;
    const double C50422 = C50398 + C50420;
    const double C50307 = C50305 + C50306;
    const double C11344 = C118 * C11339;
    const double C11786 = C118 * C11781;
    const double C13591 = C5068 * C11781;
    const double C45454 = C31574 * C11781;
    const double C50318 = C50249 + C50316;
    const double C50340 = ae * C50338;
    const double C50339 = C49844 * C50338;
    const double C50497 = C50470 + C50495;
    const double C50544 = C50542 + C50527;
    const double C49791 = C49786 - C49779;
    const double C15283 = C15254 * C457;
    const double C15274 = C15254 * C458;
    const double C15265 = C15254 * C459;
    const double C15483 = C15254 * C1561;
    const double C15468 = C15254 * C887;
    const double C15677 = C15254 * C1845;
    const double C15662 = C15254 * C462;
    const double C15855 = C15254 * C888;
    const double C16019 = C15254 * C463;
    const double C16235 = C15254 * C1214;
    const double C18290 = C15254 * C1562;
    const double C18284 = C15254 * C886;
    const double C18946 = C15254 * C1215;
    const double C19205 = C15254 * C4062;
    const double C19369 = C15254 * C4469;
    const double C19873 = C15254 * C3559;
    const double C15298 = C15280 + C15281;
    const double C15297 = C15277 + C15278;
    const double C15292 = C15262 + C15263;
    const double C15498 = C15480 + C15481;
    const double C15497 = C15471 + C15472;
    const double C15692 = C15674 + C15675;
    const double C15691 = C15665 + C15666;
    const double C15862 = C15853 + C15489;
    const double C16026 = C16017 + C15683;
    const double C16244 = C16232 + C16233;
    const double C18299 = C18292 + C15477;
    const double C18294 = C18282 + C15476;
    const double C18952 = C18948 + C16229;
    const double C19212 = C19203 + C16502;
    const double C19376 = C19367 + C16657;
    const double C19880 = C19871 + C17149;
    const double C15295 = C15271 + C15272;
    const double C15294 = C15268 + C15269;
    const double C15500 = C15486 + C15487;
    const double C15495 = C15465 + C15466;
    const double C15864 = C15857 + C15491;
    const double C18297 = C18288 + C15479;
    const double C18296 = C18286 + C15474;
    const double C31611 = C31599 + C31600;
    const double C31608 = C31590 + C31591;
    const double C31607 = C31587 + C31588;
    const double C31605 = C31581 + C31582;
    const double C31817 = C31803 + C31804;
    const double C31815 = C31797 + C31798;
    const double C31812 = C31784 + C31785;
    const double C31810 = C31778 + C31779;
    const double C32014 = C31986 + C31987;
    const double C32012 = C31980 + C31981;
    const double C32191 = C32185 + C31807;
    const double C32569 = C32561 + C32562;
    const double C32567 = C32555 + C32556;
    const double C34699 = C34692 + C32824;
    const double C34696 = C34685 + C31793;
    const double C34695 = C34680 + C31790;
    const double C35576 = C35571 + C33468;
    const double C35573 = C35564 + C32551;
    const double C35918 = C35911 + C32826;
    const double C36786 = C36779 + C33470;
    const double C45457 = C45452 + C35915;
    const double C38102 = C38078 + C38079;
    const double C38101 = C38075 + C38076;
    const double C38307 = C38293 + C38294;
    const double C38302 = C38272 + C38273;
    const double C38671 = C38664 + C38298;
    const double C47256 = C47247 + C38286;
    const double C47255 = C47245 + C38281;
    const double C20841 =
        ((((0 - (C49729 * C49773) / C49731) * ae) / C49731 - (0 * be) / C49777 +
          C49748 / C49731) /
             C49750 -
         ((C49729 * C49797 + 0) * be) / C49731) /
            C49750 -
        ((C49729 * (C49797 / C49750 -
                    ((C49729 * C49792 + C51021) * be) / C49731 + C49793) +
          C51058) *
         be) /
            C49731 +
        C49792 / C49750 - ((C49729 * C49793 + C50935) * be) / C49731;
    const double C20843 =
        (C49797 / C49750 - ((C49729 * C49792 + C51021) * be) / C49731 +
         C49793) /
            C49750 -
        ((C49729 *
              (C49792 / C49750 - ((C49729 * C49793 + C50935) * be) / C49731) +
          C51049) *
         be) /
            C49731 +
        2 * (C49793 / C49750 - (0 * be) / C49731);
    const double C20845 =
        (C49792 / C49750 - ((C49729 * C49793 + C50935) * be) / C49731) /
            C49750 -
        ((C49729 * (C49793 / C49750 - (0 * be) / C49731) + C38058) * be) /
            C49731;
    const double C38060 =
        C49797 / C49750 - ((C49729 * C49792 + C51021) * be) / C49731 + C49793;
    const double C38062 =
        C49792 / C49750 - ((C49729 * C49793 + C50935) * be) / C49731;
    const double C531 = C525 * C50893;
    const double C2626 = C525 * C51019;
    const double C8275 = C525 * C7954;
    const double C23047 = C525 * C22727;
    const double C25712 = C525 * C51057;
    const double C507 = C50923 * C484;
    const double C5840 = C50935 * C484;
    const double C15288 = C15251 * C484;
    const double C32346 = C50935 * C484;
    const double C38095 = C38058 * C484;
    const double C515 = C505 + C506;
    const double C5845 = C5839 + C5503;
    const double C15300 = C15286 + C15287;
    const double C32351 = C32345 + C32009;
    const double C38107 = C38093 + C38094;
    const double C172 = C167 + C156;
    const double C2635 = C2633 + C1226;
    const double C6067 = C6063 + C6056;
    const double C1852 =
        (2 * (2 * ae * C49933 + C49844 * C49877) + C50049 + C50049 +
         C49844 * (C49877 + C50046 + C50046 +
                   C49844 * (2 * ae * C49948 + C49844 * C49889))) /
        C49749;
    const double C1857 = C118 * C1848;
    const double C5500 = C5068 * C1848;
    const double C7366 = C5066 * C1848;
    const double C15687 = C15255 * C1848;
    const double C15685 = C15257 * C1848;
    const double C20860 = C20847 * C1848;
    const double C32006 = C31574 * C1848;
    const double C33863 = C31572 * C1848;
    const double C38492 = C38064 * C1848;
    const double C8280 = C8279 + C3570;
    const double C13335 = C13329 + C6962;
    const double C8125 = C8124 * C7956;
    const double C25562 = C8124 * C25398;
    const double C8782 = C8781 * C7956;
    const double C26209 = C8781 * C25398;
    const double C4474 =
        (2 * (2 * ae * C50010 + C49844 * C50120) + C50132 + C50132 +
         C49844 *
             (C50120 + C50129 + C50129 +
              C49844 * (2 * ae * C50121 + C49844 * C49985 * C49851 * C49887))) /
        C49749;
    const double C4478 = C118 * C4471;
    const double C6470 = C5068 * C4471;
    const double C16239 = C15257 * C4471;
    const double C16653 = C15255 * C4471;
    const double C20974 = C20847 * C4471;
    const double C30825 = C5066 * C4471;
    const double C32976 = C31574 * C4471;
    const double C37310 = C31572 * C4471;
    const double C39046 = C38064 * C4471;
    const double C50191 = C50190 + C50184;
    const double C11450 = C50923 * C9190;
    const double C14257 = C50935 * C9190;
    const double C19208 = C15251 * C9190;
    const double C46110 = C50935 * C9190;
    const double C48167 = C38058 * C9190;
    const double C11452 = C11449 + C9195;
    const double C14261 = C14256 + C13317;
    const double C19214 = C19207 + C16500;
    const double C46114 = C46109 + C36783;
    const double C48173 = C48166 + C39307;
    const double C11347 = C11346 + C11343;
    const double C11789 = C11788 + C11785;
    const double C13598 = C13596 + C13590;
    const double C10092 =
        (2 * (2 * ae * C50096 + C49844 * C50222) + C50278 + C50278 +
         C49844 * (C50222 + C50275 + C50275 +
                   C49844 * (2 * ae * C50245 +
                             C49844 * (C49875 + C49887 * C50024)))) /
        C49749;
    const double C10095 = C118 * C10090;
    const double C12819 = C5068 * C10090;
    const double C14663 = C5066 * C10090;
    const double C17147 = C15257 * C10090;
    const double C19374 = C15255 * C10090;
    const double C20970 = C20847 * C10090;
    const double C36123 = C31574 * C10090;
    const double C39951 = C38064 * C10090;
    const double C46510 = C31572 * C10090;
    const double C50365 = C50364 + C50358;
    const double C50541 = C50524 + C50537;
    const double C50461 = ae * C50459;
    const double C50460 = C49844 * C50459;
    const double C50509 = 4 * C50459;
    const double C526 = C520 + C504;
    const double C5528 = C5520 + C5498;
    const double C5522 = C5514 + C5476;
    const double C2301 = C2296 + C2297;
    const double C22742 = C22737 + C22738;
    const double C2786 = C2450 + C2451;
    const double C23197 = C22889 + C22890;
    const double C5125 = C5123 * C50893;
    const double C2935 = C2622 + C2623;
    const double C23346 = C23043 + C23044;
    const double C5683 = C5676 * C50893;
    const double C2636 = C2634 + C2628;
    const double C6069 = C6065 + C6051;
    const double C28491 = C28489 + C28484;
    const double C5495 = C50935 * C1853;
    const double C15679 = C15250 * C1853;
    const double C15661 = C15251 * C1853;
    const double C32001 = C50935 * C1853;
    const double C38486 = C51049 * C1853;
    const double C38468 = C38058 * C1853;
    const double C5511 = C5493 + C5494;
    const double C15689 = C15659 + C15660;
    const double C32017 = C31999 + C32000;
    const double C38496 = C38466 + C38467;
    const double C9198 = C9197 + C9193;
    const double C13336 = C13330 + C13309;
    const double C13765 = C13761 + C13750;
    const double C13748 = C50935 * C4475;
    const double C18945 = C15251 * C4475;
    const double C19370 = C15250 * C4475;
    const double C36120 = C50935 * C4475;
    const double C47904 = C38058 * C4475;
    const double C48329 = C51049 * C4475;
    const double C13756 = C13747 + C6472;
    const double C18950 = C18944 + C16231;
    const double C36126 = C36119 + C32978;
    const double C47909 = C47903 + C39038;
    const double C50215 = ae * C50214;
    const double C7360 =
        (3 * C50070 + C49844 * C50214 + (2 * C50064 + C49844 * C50204) * ae) /
        C49731;
    const double C350 = C344 + C330;
    const double C645 = C644 + C641;
    const double C755 = C754 + C751;
    const double C5121 = C5113 + C5095;
    const double C921 = C918 + C911;
    const double C5689 = C5687 + C5680;
    const double C49981 = ae * C49980;
    const double C476 = (3 * C49933 + C49851 * C49952 + C49844 * C49980 +
                         C49844 * C49975 * ae) /
                        C49731;
    const double C1220 =
        (C49985 * C49891 + C50001 + C50001 +
         C49844 *
             (2 * ae * C49996 +
              C49844 * C49985 *
                  (2 * C49851 * C49887 +
                   C49851 * (C49887 + (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49847 * C49863)))) /
        C49749;
    const double C1225 = C118 * C1216;
    const double C6058 = C5068 * C1216;
    const double C15859 = C15257 * C1216;
    const double C32564 = C31574 * C1216;
    const double C38666 = C38064 * C1216;
    const double C50037 = C50036 + C50033;
    const double C50118 = ae * C50117;
    const double C4470 =
        (2 * C50007 + C49844 * C50117 + (C50004 + C50108 * C49848) * ae) /
        C49731;
    const double C50167 = C50150 + C50165;
    const double C9189 =
        (2 * C50120 + C49985 * C50219 + C50239 + C50239 +
         C49844 * (2 * ae * C50234 +
                   C49844 * (2 * C49985 * C50217 +
                             C49985 * (C50217 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50024)))) /
        C49749;
    const double C9194 = C118 * C9187;
    const double C13322 = C5068 * C9187;
    const double C16497 = C15257 * C9187;
    const double C36781 = C31574 * C9187;
    const double C39304 = C38064 * C9187;
    const double C50267 = ae * C50266;
    const double C10089 =
        (2 * C50091 + C49844 * C50266 + (C50088 + C50231 * C49848) * ae) /
        C49731;
    const double C50390 = C50370 + C50388;
    const double C50423 = C50422 + C50411;
    const double C50308 = ae * C50307;
    const double C11446 = (3 * C50096 + C49985 * C50249 + C49844 * C50307 +
                           C49844 * C50304 * ae) /
                          C49731;
    const double C50319 = C50318 + C50315;
    const double C50341 = C50324 + C50339;
    const double C50498 = C50497 + C50487;
    const double C50546 = ae * C50544;
    const double C50545 = C49844 * C50544;
    const double C49795 = C49791 * ae;
    const double C31571 = -(C49791 * be) / C49731;
    const double C15299 = C15283 + C15284;
    const double C15296 = C15274 + C15275;
    const double C15293 = C15265 + C15266;
    const double C15499 = C15483 + C15484;
    const double C15496 = C15468 + C15469;
    const double C15693 = C15677 + C15678;
    const double C15690 = C15662 + C15663;
    const double C15863 = C15855 + C15490;
    const double C16027 = C16019 + C15684;
    const double C16245 = C16235 + C16236;
    const double C18298 = C18290 + C15478;
    const double C18295 = C18284 + C15475;
    const double C18951 = C18946 + C16230;
    const double C19213 = C19205 + C16501;
    const double C19377 = C19369 + C16656;
    const double C19881 = C19873 + C17148;
    const double C15307 = C15298 + C15281;
    const double C15306 = C15297 + C15278;
    const double C15301 = C15292 + C15263;
    const double C15504 = C15498 + C15481;
    const double C15503 = C15497 + C15472;
    const double C15698 = C15692 + C15675;
    const double C15697 = C15691 + C15666;
    const double C15865 = C15862 + C15489;
    const double C16029 = C16026 + C15683;
    const double C16247 = C16244 + C16233;
    const double C18305 = C18299 + C15477;
    const double C18300 = C18294 + C15476;
    const double C18955 = C18952 + C16229;
    const double C19215 = C19212 + C16502;
    const double C19379 = C19376 + C16657;
    const double C19883 = C19880 + C17149;
    const double C15304 = C15295 + C15272;
    const double C15303 = C15294 + C15269;
    const double C15506 = C15500 + C15487;
    const double C15501 = C15495 + C15466;
    const double C15867 = C15864 + C15491;
    const double C18303 = C18297 + C15479;
    const double C18302 = C18296 + C15474;
    const double C31619 = C31611 + C31600;
    const double C31616 = C31608 + C31591;
    const double C31615 = C31607 + C31588;
    const double C31613 = C31605 + C31582;
    const double C31825 = C31817 + C31804;
    const double C31823 = C31815 + C31798;
    const double C31820 = C31812 + C31785;
    const double C31818 = C31810 + C31779;
    const double C32022 = C32014 + C31987;
    const double C32020 = C32012 + C31981;
    const double C32193 = C32191 + C31807;
    const double C32573 = C32569 + C32562;
    const double C32571 = C32567 + C32556;
    const double C34705 = C34699 + C32824;
    const double C34702 = C34696 + C31793;
    const double C34701 = C34695 + C31790;
    const double C35580 = C35576 + C33468;
    const double C35577 = C35573 + C32551;
    const double C35920 = C35918 + C32826;
    const double C36788 = C36786 + C33470;
    const double C45459 = C45457 + C35915;
    const double C38111 = C38102 + C38079;
    const double C38110 = C38101 + C38076;
    const double C38313 = C38307 + C38294;
    const double C38308 = C38302 + C38273;
    const double C38674 = C38671 + C38298;
    const double C47262 = C47256 + C38286;
    const double C47261 = C47255 + C38281;
    const double C20864 = C20841 * C129;
    const double C20857 = C20841 * C128;
    const double C20856 = C20841 * C127;
    const double C20849 = C20841 * C126;
    const double C20978 = C20841 * C295;
    const double C20971 = C20841 * C292;
    const double C20967 = C20841 * C294;
    const double C20966 = C20841 * C293;
    const double C21092 = C20841 * C472;
    const double C21085 = C20841 * C469;
    const double C21081 = C20841 * C471;
    const double C21080 = C20841 * C470;
    const double C21194 = C20841 * C291;
    const double C21296 = C20841 * C468;
    const double C21434 = C20841 * C892;
    const double C21427 = C20841 * C891;
    const double C21602 = C20841 * C1105;
    const double C21704 = C20841 * C1219;
    const double C22034 = C20841 * C1566;
    const double C22303 = C20841 * C1850;
    const double C20863 = C20843 * C467;
    const double C20858 = C20843 * C468;
    const double C20855 = C20843 * C469;
    const double C20850 = C20843 * C470;
    const double C20977 = C20843 * C1565;
    const double C20972 = C20843 * C892;
    const double C20968 = C20843 * C1566;
    const double C20965 = C20843 * C891;
    const double C21091 = C20843 * C1849;
    const double C21086 = C20843 * C472;
    const double C21082 = C20843 * C1850;
    const double C21079 = C20843 * C471;
    const double C21193 = C20843 * C893;
    const double C21295 = C20843 * C473;
    const double C21433 = C20843 * C1218;
    const double C21428 = C20843 * C1219;
    const double C21601 = C20843 * C4065;
    const double C21703 = C20843 * C4472;
    const double C22033 = C20843 * C3562;
    const double C20862 = C20845 * C474;
    const double C20859 = C20845 * C473;
    const double C20854 = C20845 * C472;
    const double C20851 = C20845 * C471;
    const double C20976 = C20845 * C3561;
    const double C20973 = C20845 * C1218;
    const double C20969 = C20845 * C3562;
    const double C20964 = C20845 * C1219;
    const double C21087 = C20845 * C1849;
    const double C21078 = C20845 * C1850;
    const double C21192 = C20845 * C1217;
    const double C21294 = C20845 * C1848;
    const double C21432 = C20845 * C4471;
    const double C21429 = C20845 * C4472;
    const double C21600 = C20845 * C9188;
    const double C22032 = C20845 * C10090;
    const double C38098 = C38060 * C130;
    const double C38088 = C38060 * C129;
    const double C38085 = C38060 * C128;
    const double C38070 = C38060 * C127;
    const double C38066 = C38060 * C126;
    const double C38301 = C38060 * C296;
    const double C38296 = C38060 * C291;
    const double C38288 = C38060 * C295;
    const double C38284 = C38060 * C294;
    const double C38283 = C38060 * C293;
    const double C38279 = C38060 * C292;
    const double C38495 = C38060 * C473;
    const double C38490 = C38060 * C468;
    const double C38482 = C38060 * C472;
    const double C38478 = C38060 * C471;
    const double C38477 = C38060 * C470;
    const double C38473 = C38060 * C469;
    const double C38668 = C38060 * C290;
    const double C38832 = C38060 * C467;
    const double C39050 = C38060 * C893;
    const double C39040 = C38060 * C892;
    const double C39036 = C38060 * C891;
    const double C39309 = C38060 * C1105;
    const double C39306 = C38060 * C1104;
    const double C39461 = C38060 * C1219;
    const double C39458 = C38060 * C1218;
    const double C39953 = C38060 * C1566;
    const double C39950 = C38060 * C1565;
    const double C40349 = C38060 * C1850;
    const double C40346 = C38060 * C1849;
    const double C48170 = C38060 * C3399;
    const double C48334 = C38060 * C3562;
    const double C48838 = C38060 * C4065;
    const double C49240 = C38060 * C4472;
    const double C38097 = C38062 * C475;
    const double C38091 = C38062 * C467;
    const double C38082 = C38062 * C468;
    const double C38073 = C38062 * C469;
    const double C38067 = C38062 * C470;
    const double C38300 = C38062 * C1564;
    const double C38297 = C38062 * C893;
    const double C38291 = C38062 * C1565;
    const double C38285 = C38062 * C1566;
    const double C38282 = C38062 * C891;
    const double C38276 = C38062 * C892;
    const double C38494 = C38062 * C1848;
    const double C38491 = C38062 * C473;
    const double C38485 = C38062 * C1849;
    const double C38479 = C38062 * C1850;
    const double C38476 = C38062 * C471;
    const double C38470 = C38062 * C472;
    const double C38667 = C38062 * C894;
    const double C38831 = C38062 * C474;
    const double C39049 = C38062 * C1217;
    const double C39043 = C38062 * C1218;
    const double C39037 = C38062 * C1219;
    const double C39308 = C38062 * C4065;
    const double C39305 = C38062 * C4064;
    const double C39460 = C38062 * C4472;
    const double C39457 = C38062 * C4471;
    const double C39952 = C38062 * C3562;
    const double C39949 = C38062 * C3561;
    const double C48169 = C38062 * C9687;
    const double C48333 = C38062 * C10090;
    const double C48837 = C38062 * C9188;
    const double C521 = C515 + C506;
    const double C5847 = C5845 + C5503;
    const double C15309 = C15300 + C15287;
    const double C32353 = C32351 + C32009;
    const double C38116 = C38107 + C38094;
    const double C177 = C172 * C50893;
    const double C2637 = C2635 + C2631;
    const double C6071 = C6067 + C6057;
    const double C5501 = C50935 * C1852;
    const double C16022 = C15251 * C1852;
    const double C32007 = C50935 * C1852;
    const double C38829 = C38058 * C1852;
    const double C5513 = C5499 + C5500;
    const double C16028 = C16021 + C15685;
    const double C32019 = C32005 + C32006;
    const double C38835 = C38828 + C38492;
    const double C8281 = C8280 + C8278;
    const double C13341 = C13335 + C13321;
    const double C16240 = C15251 * C4474;
    const double C28486 = C50935 * C4474;
    const double C34909 = C50935 * C4474;
    const double C39047 = C38058 * C4474;
    const double C28488 = C28485 + C6470;
    const double C16246 = C16238 + C16239;
    const double C34911 = C34908 + C32976;
    const double C39053 = C39045 + C39046;
    const double C50192 = ae * C50191;
    const double C7359 =
        (3 * C50059 + C49844 * C50191 + (2 * C50053 + C49844 * C50181) * ae) /
        C49731;
    const double C11453 = C11452 + C9195;
    const double C14263 = C14261 + C13317;
    const double C19217 = C19214 + C16500;
    const double C46116 = C46114 + C36783;
    const double C48176 = C48173 + C39307;
    const double C13752 = C50935 * C10092;
    const double C19876 = C15251 * C10092;
    const double C45611 = C50935 * C10092;
    const double C48835 = C38058 * C10092;
    const double C13758 = C13751 + C12819;
    const double C19882 = C19875 + C17147;
    const double C45615 = C45610 + C36123;
    const double C48841 = C48834 + C39951;
    const double C50366 = ae * C50365;
    const double C14658 =
        (3 * C50145 + C49844 * C50365 + (2 * C50139 + C49844 * C50355) * ae) /
        C49731;
    const double C50462 = C50433 + C50460;
    const double C532 = C526 * C50893;
    const double C2629 = C526 * C51019;
    const double C23049 = C526 * C22727;
    const double C5836 = C5522 + C5523;
    const double C2638 = C2636 * C50909;
    const double C8276 = C2636 * C7955;
    const double C23048 = C2636 * C50909;
    const double C25713 = C2636 * C51046;
    const double C29141 = C6068 + C6069;
    const double C29140 = C6069 + C6068;
    const double C5519 = C5511 + C5494;
    const double C15695 = C15689 + C15660;
    const double C32025 = C32017 + C32000;
    const double C38502 = C38496 + C38467;
    const double C14253 = C13336 + C13337;
    const double C13760 = C13756 + C6472;
    const double C18953 = C18950 + C16231;
    const double C36128 = C36126 + C32978;
    const double C47912 = C47909 + C39038;
    const double C7363 =
        (3 * (C49858 + C50068 + C50068 + C49844 * C50205) + C50215 + C50215 +
         C49844 * (2 * C50205 + C50212 + C50212 +
                   C49844 * (C49867 + C50208 + C50208 +
                             C49844 * (2 * ae * C49929 + C49844 * C49875)))) /
        C49749;
    const double C7369 = C5068 * C7360;
    const double C15673 = C15257 * C7360;
    const double C17550 = C15255 * C7360;
    const double C21083 = C20845 * C7360;
    const double C21077 = C20847 * C7360;
    const double C22302 = C20843 * C7360;
    const double C33866 = C31574 * C7360;
    const double C38480 = C38064 * C7360;
    const double C40348 = C38062 * C7360;
    const double C356 = C350 * C50893;
    const double C2788 = C350 * C50909;
    const double C7968 = C350 * C7956;
    const double C23199 = C350 * C50909;
    const double C25410 = C350 * C25398;
    const double C646 = C645 * C50893;
    const double C2299 = C645 * C50909;
    const double C22740 = C645 * C50909;
    const double C756 = C755 * C50893;
    const double C924 = C921 * C50893;
    const double C2937 = C921 * C50909;
    const double C23348 = C921 * C50909;
    const double C486 =
        (3 * C49877 + C49851 * C49891 + C49981 + C49981 +
         C49844 *
             (2 * ae * C49978 +
              C49844 * (3 * C49889 +
                        C49851 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C509 = C118 * C476;
    const double C5841 = C5068 * C476;
    const double C15289 = C15257 * C476;
    const double C32347 = C31574 * C476;
    const double C38096 = C38064 * C476;
    const double C50038 = ae * C50037;
    const double C1847 =
        (2 * C49954 + C49844 * C50037 + (C49949 + C49971 * C49848) * ae) /
        C49731;
    const double C4473 =
        (2 * (2 * ae * C50003 + C49844 * C50106) + C50118 + C50118 +
         C49844 *
             (C50106 + C50115 + C50115 +
              C49844 * (2 * ae * C50107 +
                        C49844 * C49985 *
                            (C49887 + (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49847 * C49863)))) /
        C49749;
    const double C4477 = C118 * C4470;
    const double C6468 = C5068 * C4470;
    const double C16241 = C15257 * C4470;
    const double C21191 = C20847 * C4470;
    const double C32974 = C31574 * C4470;
    const double C39048 = C38064 * C4470;
    const double C50168 = C50167 + C50161;
    const double C10091 =
        (2 * (2 * ae * C50087 + C49844 * C50219) + C50267 + C50267 +
         C49844 * (C50219 + C50264 + C50264 +
                   C49844 * (2 * ae * C50230 +
                             C49844 * (C50217 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50024)))) /
        C49749;
    const double C10094 = C118 * C10089;
    const double C12820 = C5068 * C10089;
    const double C17144 = C15257 * C10089;
    const double C20975 = C20847 * C10089;
    const double C36121 = C31574 * C10089;
    const double C39948 = C38064 * C10089;
    const double C50391 = C50390 + C50384;
    const double C50425 = ae * C50423;
    const double C50424 = C49844 * C50423;
    const double C11447 =
        (3 * C50222 + C49985 * C50285 + C50308 + C50308 +
         C49844 *
             (2 * ae * C50303 +
              C49844 * (3 * C50283 +
                        C49985 * (2 * C49985 * C49887 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50024))))) /
        C49749;
    const double C11451 = C118 * C11446;
    const double C14258 = C5068 * C11446;
    const double C19209 = C15257 * C11446;
    const double C46111 = C31574 * C11446;
    const double C48168 = C38064 * C11446;
    const double C50320 = ae * C50319;
    const double C12052 =
        (2 * C50253 + C49844 * C50319 + (C50250 + C50300 * C49848) * ae) /
        C49731;
    const double C50342 = C50341 + C50335;
    const double C50500 = ae * C50498;
    const double C50499 = C49844 * C50498;
    const double C50547 = C50510 + C50545;
    const double C20840 =
        ((ae * -2 * C49773) / C49774 -
         (((C49729 * C49783) / C49749 + 2 * C49797) * be) / C49731) /
            C49750 -
        ((C49729 * (C49783 / C49774 -
                    (((C49729 * C49795) / C49731 + 2 * C49792) * be) / C49731 -
                    C49756 / C49777) +
          2 * (C49797 / C49750 - ((C49729 * C49792 + C51021) * be) / C49731 +
               C49793)) *
         be) /
            C49731 +
        C49795 / C49777 - ((2 * C49793 - C49763 / C49777) * be) / C49731;
    const double C20842 =
        (C49783 / C49774 -
         (((C49729 * C49795) / C49731 + 2 * C49792) * be) / C49731 -
         C49756 / C49777) /
            C49750 -
        ((C49729 * (C49795 / C49777 -
                    ((2 * C49793 - C49763 / C49777) * be) / C49731) +
          2 * (C49792 / C49750 - ((C49729 * C49793 + C50935) * be) / C49731)) *
         be) /
            C49731 +
        (-2 * C49756) / (C49731 * 4 * C49749);
    const double C20844 =
        (C49795 / C49777 - ((2 * C49793 - C49763 / C49777) * be) / C49731) /
            C49750 -
        ((2 * (C49793 / C49750 - (0 * be) / C49731) -
          C49763 / (C49731 * 4 * C49749)) *
         be) /
            C49731;
    const double C38059 =
        C49783 / C49774 -
        (((C49729 * C49795) / C49731 + 2 * C49792) * be) / C49731 -
        C49756 / C49777;
    const double C38061 =
        C49795 / C49777 - ((2 * C49793 - C49763 / C49777) * be) / C49731;
    const double C31596 = C31571 * C123;
    const double C31593 = C31571 * C122;
    const double C31584 = C31571 * C121;
    const double C31578 = C31571 * C120;
    const double C31800 = C31571 * C286;
    const double C31794 = C31571 * C285;
    const double C31787 = C31571 * C282;
    const double C31781 = C31571 * C281;
    const double C32002 = C31571 * C463;
    const double C31996 = C31571 * C462;
    const double C31989 = C31571 * C459;
    const double C31983 = C31571 * C458;
    const double C32183 = C31571 * C280;
    const double C32343 = C31571 * C457;
    const double C32558 = C31571 * C888;
    const double C32552 = C31571 * C887;
    const double C34690 = C31571 * C1100;
    const double C34687 = C31571 * C284;
    const double C34678 = C31571 * C283;
    const double C34906 = C31571 * C1214;
    const double C35569 = C31571 * C1561;
    const double C35566 = C31571 * C886;
    const double C35909 = C31571 * C1101;
    const double C36117 = C31571 * C1215;
    const double C36777 = C31571 * C1562;
    const double C45450 = C31571 * C3396;
    const double C45608 = C31571 * C3559;
    const double C46107 = C31571 * C4062;
    const double C15308 = C15299 + C15284;
    const double C15305 = C15296 + C15275;
    const double C15302 = C15293 + C15266;
    const double C15505 = C15499 + C15484;
    const double C15502 = C15496 + C15469;
    const double C15699 = C15693 + C15678;
    const double C15696 = C15690 + C15663;
    const double C15866 = C15863 + C15490;
    const double C16030 = C16027 + C15684;
    const double C16248 = C16245 + C16236;
    const double C18304 = C18298 + C15478;
    const double C18301 = C18295 + C15475;
    const double C18954 = C18951 + C16230;
    const double C19216 = C19213 + C16501;
    const double C19380 = C19377 + C16656;
    const double C19884 = C19881 + C17148;
    const double C15316 = C15307 + C15282;
    const double C15315 = C15306 + C15279;
    const double C15310 = C15301 + C15264;
    const double C15510 = C15504 + C15482;
    const double C15509 = C15503 + C15473;
    const double C15704 = C15698 + C15676;
    const double C15703 = C15697 + C15667;
    const double C15868 = C15865 + C15854;
    const double C16032 = C16029 + C16018;
    const double C16250 = C16247 + C16234;
    const double C18311 = C18305 + C18293;
    const double C18306 = C18300 + C18283;
    const double C18958 = C18955 + C18949;
    const double C19218 = C19215 + C19204;
    const double C19382 = C19379 + C19368;
    const double C19886 = C19883 + C19872;
    const double C15313 = C15304 + C15273;
    const double C15312 = C15303 + C15270;
    const double C15512 = C15506 + C15488;
    const double C15507 = C15501 + C15467;
    const double C15870 = C15867 + C15858;
    const double C18309 = C18303 + C18289;
    const double C18308 = C18302 + C18287;
    const double C31627 = C31619 + C31601;
    const double C31624 = C31616 + C31592;
    const double C31623 = C31615 + C31589;
    const double C31621 = C31613 + C31583;
    const double C31833 = C31825 + C31805;
    const double C31831 = C31823 + C31799;
    const double C31828 = C31820 + C31786;
    const double C31826 = C31818 + C31780;
    const double C32030 = C32022 + C31988;
    const double C32028 = C32020 + C31982;
    const double C32195 = C32193 + C32186;
    const double C32577 = C32573 + C32563;
    const double C32575 = C32571 + C32557;
    const double C34711 = C34705 + C34693;
    const double C34708 = C34702 + C34686;
    const double C34707 = C34701 + C34681;
    const double C35584 = C35580 + C35572;
    const double C35581 = C35577 + C35565;
    const double C35922 = C35920 + C35912;
    const double C36790 = C36788 + C36780;
    const double C45461 = C45459 + C45453;
    const double C38120 = C38111 + C38080;
    const double C38119 = C38110 + C38077;
    const double C38319 = C38313 + C38295;
    const double C38314 = C38308 + C38274;
    const double C38677 = C38674 + C38665;
    const double C47268 = C47262 + C47248;
    const double C47267 = C47261 + C47246;
    const double C527 = C521 + C507;
    const double C5849 = C5847 + C5840;
    const double C15318 = C15309 + C15288;
    const double C32355 = C32353 + C32346;
    const double C38125 = C38116 + C38095;
    const double C2639 = C2637 * C50909;
    const double C23050 = C2637 * C50909;
    const double C5521 = C5513 + C5500;
    const double C16031 = C16028 + C15685;
    const double C32027 = C32019 + C32006;
    const double C38838 = C38835 + C38492;
    const double C8282 = C8281 * C7956;
    const double C25714 = C8281 * C25398;
    const double C28490 = C28488 + C6470;
    const double C16249 = C16246 + C16239;
    const double C34913 = C34911 + C32976;
    const double C39056 = C39053 + C39046;
    const double C7362 =
        (3 * (C49993 + C50057 + C50057 + C49844 * C50182) + C50192 + C50192 +
         C49844 * (2 * C50182 + C50189 + C50189 +
                   C49844 * (C49879 + C50185 + C50185 +
                             C49844 * (2 * ae * C49959 +
                                       C49844 * C49851 * C49887)))) /
        C49749;
    const double C7367 = C5068 * C7359;
    const double C15681 = C15257 * C7359;
    const double C17547 = C15255 * C7359;
    const double C21090 = C20845 * C7359;
    const double C21088 = C20847 * C7359;
    const double C33864 = C31574 * C7359;
    const double C38488 = C38064 * C7359;
    const double C40345 = C38062 * C7359;
    const double C11454 = C11453 + C11450;
    const double C14265 = C14263 + C14257;
    const double C19220 = C19217 + C19208;
    const double C46118 = C46116 + C46110;
    const double C48179 = C48176 + C48167;
    const double C13762 = C13758 + C12819;
    const double C19885 = C19882 + C17147;
    const double C45617 = C45615 + C36123;
    const double C48844 = C48841 + C39951;
    const double C14660 =
        (3 * (C50134 + C50143 + C50143 + C49844 * C50356) + C50366 + C50366 +
         C49844 * (2 * C50356 + C50363 + C50363 +
                   C49844 * (C50280 + C50359 + C50359 +
                             C49844 * (2 * ae * C50288 +
                                       C49844 * C49985 * C49887)))) /
        C49749;
    const double C14664 = C5068 * C14658;
    const double C16655 = C15257 * C14658;
    const double C20283 = C15255 * C14658;
    const double C21430 = C20847 * C14658;
    const double C21702 = C20845 * C14658;
    const double C37311 = C31574 * C14658;
    const double C39459 = C38064 * C14658;
    const double C49239 = C38062 * C14658;
    const double C50463 = C50462 + C50455;
    const double C5843 = C5836 * C50893;
    const double C5527 = C5519 + C5495;
    const double C15701 = C15695 + C15661;
    const double C32033 = C32025 + C32001;
    const double C38508 = C38502 + C38468;
    const double C13764 = C13760 + C13748;
    const double C18956 = C18953 + C18945;
    const double C36130 = C36128 + C36120;
    const double C47915 = C47912 + C47904;
    const double C1851 =
        (2 * (2 * ae * C49952 + C49844 * C49891) + C50038 + C50038 +
         C49844 *
             (C49891 + C50035 + C50035 +
              C49844 * (2 * ae * C49974 +
                        C49844 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C1856 = C118 * C1847;
    const double C5504 = C5068 * C1847;
    const double C16023 = C15257 * C1847;
    const double C20861 = C20847 * C1847;
    const double C32010 = C31574 * C1847;
    const double C38830 = C38064 * C1847;
    const double C50169 = ae * C50168;
    const double C7358 =
        (3 * C50048 + C49844 * C50168 + (2 * C50042 + C49844 * C50158) * ae) /
        C49731;
    const double C50392 = ae * C50391;
    const double C16649 =
        (3 * C50131 + C49844 * C50391 + (2 * C50125 + C49844 * C50382) * ae) /
        C49731;
    const double C50426 = C50397 + C50424;
    const double C12053 =
        (2 * (2 * ae * C50249 + C49844 * C50285) + C50320 + C50320 +
         C49844 *
             (C50285 + C50317 + C50317 +
              C49844 * (2 * ae * C50299 +
                        C49844 * (2 * C49985 * C49887 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50024))))) /
        C49749;
    const double C12055 = C118 * C12052;
    const double C13753 = C5068 * C12052;
    const double C19877 = C15257 * C12052;
    const double C21599 = C20847 * C12052;
    const double C45612 = C31574 * C12052;
    const double C48836 = C38064 * C12052;
    const double C50343 = ae * C50342;
    const double C14657 =
        (3 * C50277 + C49844 * C50342 + (2 * C50271 + C49844 * C50332) * ae) /
        C49731;
    const double C50501 = C50469 + C50499;
    const double C50548 = C50547 + C50535;
    const double C38087 = C38059 * C122;
    const double C38084 = C38059 * C121;
    const double C38069 = C38059 * C120;
    const double C38287 = C38059 * C285;
    const double C38278 = C38059 * C282;
    const double C38481 = C38059 * C462;
    const double C38472 = C38059 * C459;
    const double C38660 = C38059 * C281;
    const double C38824 = C38059 * C458;
    const double C39039 = C38059 * C887;
    const double C47251 = C38059 * C284;
    const double C47241 = C38059 * C283;
    const double C47907 = C38059 * C886;
    const double C48162 = C38059 * C1101;
    const double C48326 = C38059 * C1215;
    const double C48830 = C38059 * C1562;
    const double C38090 = C38061 * C457;
    const double C38081 = C38061 * C458;
    const double C38072 = C38061 * C459;
    const double C38290 = C38061 * C1561;
    const double C38275 = C38061 * C887;
    const double C38484 = C38061 * C1845;
    const double C38469 = C38061 * C462;
    const double C38662 = C38061 * C888;
    const double C38826 = C38061 * C463;
    const double C39042 = C38061 * C1214;
    const double C47249 = C38061 * C1562;
    const double C47243 = C38061 * C886;
    const double C47905 = C38061 * C1215;
    const double C48164 = C38061 * C4062;
    const double C48328 = C38061 * C4469;
    const double C48832 = C38061 * C3559;
    const double C31610 = C31596 + C31597;
    const double C31609 = C31593 + C31594;
    const double C31606 = C31584 + C31585;
    const double C31604 = C31578 + C31579;
    const double C31816 = C31800 + C31801;
    const double C31814 = C31794 + C31795;
    const double C31813 = C31787 + C31788;
    const double C31811 = C31781 + C31782;
    const double C32018 = C32002 + C32003;
    const double C32016 = C31996 + C31997;
    const double C32015 = C31989 + C31990;
    const double C32013 = C31983 + C31984;
    const double C32190 = C32183 + C31806;
    const double C32350 = C32343 + C32008;
    const double C32568 = C32558 + C32559;
    const double C32566 = C32552 + C32553;
    const double C34698 = C34690 + C32825;
    const double C34697 = C34687 + C31792;
    const double C34694 = C34678 + C31791;
    const double C34910 = C34906 + C32977;
    const double C35575 = C35569 + C33469;
    const double C35574 = C35566 + C32550;
    const double C35917 = C35909 + C32827;
    const double C36125 = C36117 + C32979;
    const double C36785 = C36777 + C33471;
    const double C45456 = C45450 + C35916;
    const double C45614 = C45608 + C36124;
    const double C46113 = C46107 + C36784;
    const double C15317 = C15308 + C15285;
    const double C15314 = C15305 + C15276;
    const double C15311 = C15302 + C15267;
    const double C15511 = C15505 + C15485;
    const double C15508 = C15502 + C15470;
    const double C15705 = C15699 + C15679;
    const double C15702 = C15696 + C15664;
    const double C15869 = C15866 + C15856;
    const double C16033 = C16030 + C16020;
    const double C16251 = C16248 + C16237;
    const double C18310 = C18304 + C18291;
    const double C18307 = C18301 + C18285;
    const double C18957 = C18954 + C18947;
    const double C19219 = C19216 + C19206;
    const double C19383 = C19380 + C19370;
    const double C19887 = C19884 + C19874;
    const double C533 = C527 * C50893;
    const double C5529 = C5521 + C5501;
    const double C16034 = C16031 + C16022;
    const double C32035 = C32027 + C32007;
    const double C38841 = C38838 + C38829;
    const double C28492 = C28490 + C28486;
    const double C16252 = C16249 + C16240;
    const double C34915 = C34913 + C34909;
    const double C39059 = C39056 + C39047;
    const double C15682 = C15251 * C7362;
    const double C38489 = C38058 * C7362;
    const double C15694 = C15680 + C15681;
    const double C38501 = C38487 + C38488;
    const double C13766 = C13762 + C13752;
    const double C19888 = C19885 + C19876;
    const double C45619 = C45617 + C45611;
    const double C48847 = C48844 + C48835;
    const double C19372 = C15251 * C14660;
    const double C48331 = C38058 * C14660;
    const double C19378 = C19371 + C16655;
    const double C48337 = C48330 + C39459;
    const double C50464 = ae * C50463;
    const double C17542 =
        (4 * C50214 + C49844 * C50463 + (3 * C50204 + C49844 * C50452) * ae) /
        C49731;
    const double C7361 =
        (3 * (C49877 + C50046 + C50046 + C49844 * C50159) + C50169 + C50169 +
         C49844 *
             (2 * C50159 + C50166 + C50166 +
              C49844 * (C49889 + C50162 + C50162 +
                        C49844 * (2 * ae * C49970 +
                                  C49844 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C7365 = C5068 * C7358;
    const double C15686 = C15257 * C7358;
    const double C21293 = C20847 * C7358;
    const double C33862 = C31574 * C7358;
    const double C38493 = C38064 * C7358;
    const double C16650 =
        (3 * (C50120 + C50129 + C50129 + C49844 * C50379) + C50392 + C50392 +
         C49844 *
             (2 * C50379 + C50389 + C50389 +
              C49844 * (C50369 + C50385 + C50385 +
                        C49844 * (2 * ae * C50371 +
                                  C49844 * C49985 * C49851 *
                                      (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                      C49847)))) /
        C49749;
    const double C16652 = C15257 * C16649;
    const double C21431 = C20847 * C16649;
    const double C30824 = C5068 * C16649;
    const double C37309 = C31574 * C16649;
    const double C39456 = C38064 * C16649;
    const double C50427 = C50426 + C50419;
    const double C14659 =
        (3 * (C50222 + C50275 + C50275 + C49844 * C50333) + C50343 + C50343 +
         C49844 *
             (2 * C50333 + C50340 + C50340 +
              C49844 * (C50283 + C50336 + C50336 +
                        C49844 * (2 * ae * C50294 +
                                  C49844 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50024))))) /
        C49749;
    const double C14662 = C5068 * C14657;
    const double C19373 = C15257 * C14657;
    const double C22031 = C20847 * C14657;
    const double C46509 = C31574 * C14657;
    const double C48332 = C38064 * C14657;
    const double C50502 = C50501 + C50494;
    const double C50550 = ae * C50548;
    const double C50549 = C49844 * C50548;
    const double C38105 = C38087 + C38088;
    const double C38104 = C38084 + C38085;
    const double C38099 = C38069 + C38070;
    const double C38305 = C38287 + C38288;
    const double C38304 = C38278 + C38279;
    const double C38499 = C38481 + C38482;
    const double C38498 = C38472 + C38473;
    const double C38669 = C38660 + C38296;
    const double C38833 = C38824 + C38490;
    const double C39051 = C39039 + C39040;
    const double C47258 = C47251 + C38284;
    const double C47253 = C47241 + C38283;
    const double C47911 = C47907 + C39036;
    const double C48171 = C48162 + C39309;
    const double C48335 = C48326 + C39461;
    const double C48839 = C48830 + C39953;
    const double C38106 = C38090 + C38091;
    const double C38103 = C38081 + C38082;
    const double C38100 = C38072 + C38073;
    const double C38306 = C38290 + C38291;
    const double C38303 = C38275 + C38276;
    const double C38500 = C38484 + C38485;
    const double C38497 = C38469 + C38470;
    const double C38670 = C38662 + C38297;
    const double C38834 = C38826 + C38491;
    const double C39052 = C39042 + C39043;
    const double C47257 = C47249 + C38285;
    const double C47254 = C47243 + C38282;
    const double C47910 = C47905 + C39037;
    const double C48172 = C48164 + C39308;
    const double C48336 = C48328 + C39460;
    const double C48840 = C48832 + C39952;
    const double C31618 = C31610 + C31597;
    const double C31617 = C31609 + C31594;
    const double C31614 = C31606 + C31585;
    const double C31612 = C31604 + C31579;
    const double C31824 = C31816 + C31801;
    const double C31822 = C31814 + C31795;
    const double C31821 = C31813 + C31788;
    const double C31819 = C31811 + C31782;
    const double C32026 = C32018 + C32003;
    const double C32024 = C32016 + C31997;
    const double C32023 = C32015 + C31990;
    const double C32021 = C32013 + C31984;
    const double C32192 = C32190 + C31806;
    const double C32352 = C32350 + C32008;
    const double C32572 = C32568 + C32559;
    const double C32570 = C32566 + C32553;
    const double C34704 = C34698 + C32825;
    const double C34703 = C34697 + C31792;
    const double C34700 = C34694 + C31791;
    const double C34912 = C34910 + C32977;
    const double C35579 = C35575 + C33469;
    const double C35578 = C35574 + C32550;
    const double C35919 = C35917 + C32827;
    const double C36127 = C36125 + C32979;
    const double C36787 = C36785 + C33471;
    const double C45458 = C45456 + C35916;
    const double C45616 = C45614 + C36124;
    const double C46115 = C46113 + C36784;
    const double C15700 = C15694 + C15681;
    const double C38507 = C38501 + C38488;
    const double C19381 = C19378 + C16655;
    const double C48340 = C48337 + C39459;
    const double C17544 =
        (4 * (2 * C50205 + C50212 + C50212 + C49844 * C50453) + C50464 +
         C50464 +
         C49844 * (3 * C50453 + C50461 + C50461 +
                   C49844 * (2 * C50445 + C50457 + C50457 +
                             C49844 * (C49875 + C50449 + C50449 +
                                       C49844 * (2 * ae * C49943 +
                                                 C49844 * C49887))))) /
        C49749;
    const double C17549 = C15257 * C17542;
    const double C21084 = C20847 * C17542;
    const double C22301 = C20845 * C17542;
    const double C40347 = C38064 * C17542;
    const double C50428 = ae * C50427;
    const double C17541 =
        (4 * C50191 + C49844 * C50427 + (3 * C50181 + C49844 * C50416) * ae) /
        C49731;
    const double C50503 = ae * C50502;
    const double C20279 =
        (4 * C50365 + C49844 * C50502 + (3 * C50355 + C49844 * C50492) * ae) /
        C49731;
    const double C50551 = C50509 + C50549;
    const double C38114 = C38105 + C38088;
    const double C38113 = C38104 + C38085;
    const double C38108 = C38099 + C38070;
    const double C38311 = C38305 + C38288;
    const double C38310 = C38304 + C38279;
    const double C38505 = C38499 + C38482;
    const double C38504 = C38498 + C38473;
    const double C38672 = C38669 + C38296;
    const double C38836 = C38833 + C38490;
    const double C39054 = C39051 + C39040;
    const double C47264 = C47258 + C38284;
    const double C47259 = C47253 + C38283;
    const double C47914 = C47911 + C39036;
    const double C48174 = C48171 + C39309;
    const double C48338 = C48335 + C39461;
    const double C48842 = C48839 + C39953;
    const double C38115 = C38106 + C38091;
    const double C38112 = C38103 + C38082;
    const double C38109 = C38100 + C38073;
    const double C38312 = C38306 + C38291;
    const double C38309 = C38303 + C38276;
    const double C38506 = C38500 + C38485;
    const double C38503 = C38497 + C38470;
    const double C38673 = C38670 + C38297;
    const double C38837 = C38834 + C38491;
    const double C39055 = C39052 + C39043;
    const double C47263 = C47257 + C38285;
    const double C47260 = C47254 + C38282;
    const double C47913 = C47910 + C39037;
    const double C48175 = C48172 + C39308;
    const double C48339 = C48336 + C39460;
    const double C48843 = C48840 + C39952;
    const double C31626 = C31618 + C31598;
    const double C31625 = C31617 + C31595;
    const double C31622 = C31614 + C31586;
    const double C31620 = C31612 + C31580;
    const double C31832 = C31824 + C31802;
    const double C31830 = C31822 + C31796;
    const double C31829 = C31821 + C31789;
    const double C31827 = C31819 + C31783;
    const double C32034 = C32026 + C32004;
    const double C32032 = C32024 + C31998;
    const double C32031 = C32023 + C31991;
    const double C32029 = C32021 + C31985;
    const double C32194 = C32192 + C32184;
    const double C32354 = C32352 + C32344;
    const double C32576 = C32572 + C32560;
    const double C32574 = C32570 + C32554;
    const double C34710 = C34704 + C34691;
    const double C34709 = C34703 + C34688;
    const double C34706 = C34700 + C34679;
    const double C34914 = C34912 + C34907;
    const double C35583 = C35579 + C35570;
    const double C35582 = C35578 + C35567;
    const double C35921 = C35919 + C35910;
    const double C36129 = C36127 + C36118;
    const double C36789 = C36787 + C36778;
    const double C45460 = C45458 + C45451;
    const double C45618 = C45616 + C45609;
    const double C46117 = C46115 + C46108;
    const double C15706 = C15700 + C15682;
    const double C38513 = C38507 + C38489;
    const double C19384 = C19381 + C19372;
    const double C48343 = C48340 + C48331;
    const double C17543 =
        (4 * (2 * C50182 + C50189 + C50189 + C49844 * C50417) + C50428 +
         C50428 +
         C49844 * (3 * C50417 + C50425 + C50425 +
                   C49844 * (2 * C50409 + C50421 + C50421 +
                             C49844 * (C50217 + C50413 + C50413 +
                                       C49844 * (2 * ae * C50225 +
                                                 C49844 * C49851 *
                                                     (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49847))))) /
        C49749;
    const double C17546 = C15257 * C17541;
    const double C21089 = C20847 * C17541;
    const double C40344 = C38064 * C17541;
    const double C20280 =
        (4 * (2 * C50356 + C50363 + C50363 + C49844 * C50490) + C50503 +
         C50503 +
         C49844 * (3 * C50490 + C50500 + C50500 +
                   C49844 * (2 * C50481 + C50496 + C50496 +
                             C49844 * (C50468 + C50489 + C50489 +
                                       C49844 * (2 * ae * C50471 +
                                                 C49844 * C49985 *
                                                     (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49847))))) /
        C49749;
    const double C20282 = C15257 * C20279;
    const double C21701 = C20847 * C20279;
    const double C49238 = C38064 * C20279;
    const double C50552 = C50551 + C50543;
    const double C38123 = C38114 + C38089;
    const double C38122 = C38113 + C38086;
    const double C38117 = C38108 + C38071;
    const double C38317 = C38311 + C38289;
    const double C38316 = C38310 + C38280;
    const double C38511 = C38505 + C38483;
    const double C38510 = C38504 + C38474;
    const double C38675 = C38672 + C38661;
    const double C38839 = C38836 + C38825;
    const double C39057 = C39054 + C39041;
    const double C47270 = C47264 + C47252;
    const double C47265 = C47259 + C47242;
    const double C47917 = C47914 + C47908;
    const double C48177 = C48174 + C48163;
    const double C48341 = C48338 + C48327;
    const double C48845 = C48842 + C48831;
    const double C38124 = C38115 + C38092;
    const double C38121 = C38112 + C38083;
    const double C38118 = C38109 + C38074;
    const double C38318 = C38312 + C38292;
    const double C38315 = C38309 + C38277;
    const double C38512 = C38506 + C38486;
    const double C38509 = C38503 + C38471;
    const double C38676 = C38673 + C38663;
    const double C38840 = C38837 + C38827;
    const double C39058 = C39055 + C39044;
    const double C47269 = C47263 + C47250;
    const double C47266 = C47260 + C47244;
    const double C47916 = C47913 + C47906;
    const double C48178 = C48175 + C48165;
    const double C48342 = C48339 + C48329;
    const double C48846 = C48843 + C48833;
    const double C31629 = C31624 + C31625;
    const double C31628 = C31622 + C31623;
    const double C34689 = C31830 + C31831;
    const double C34683 = C31831 + C31830;
    const double C34684 = C31828 + C31829;
    const double C34682 = C31829 + C31828;
    const double C32182 = C31826 + C31827;
    const double C35110 = C31827 + C31826;
    const double C32342 = C32028 + C32029;
    const double C35568 = C32574 + C32575;
    const double C35563 = C32575 + C32574;
    const double C44572 = C34709 + C34708;
    const double C45449 = C35922 + C35921;
    const double C46106 = C36790 + C36789;
    const double C50553 = ae * C50552;
    const double C22297 =
        (5 * C50463 + C49844 * C50552 + (4 * C50452 + C49844 * C50539) * ae) /
        C49731;
    const double C31631 = C31629 * C50893;
    const double C31630 = C31628 * C50893;
    const double C32189 = C32182 * C50893;
    const double C32349 = C32342 * C50893;
    const double C22298 =
        (5 * (3 * C50453 + C50461 + C50461 + C49844 * C50541) + C50553 +
         C50553 +
         C49844 *
             (4 * C50541 + C50550 + C50550 +
              C49844 *
                  (3 * C50533 + C50546 + C50546 +
                   C49844 * (2 * C50525 + C50540 + C50540 +
                             C49844 * (C49887 + C50529 + C50529 +
                                       C49844 * (2 * ae * C49965 +
                                                 C49844 *
                                                     (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49847)))))) /
        C49749;
    const double C22300 = C20847 * C22297;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C50797 * C51009 -
                  (C23197 * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C50797 * C50833) *
                     C51051 +
                 (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                   (C23198 + C23199) * C22731) *
                      C50797 * C50833 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C50797 * C51009) *
                     C51052 +
                 ((C22741 * C51050 + (C22738 + C22737) * C51034 +
                   (C22739 + C22740) * C22731) *
                      C50797 * C51009 -
                  (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
                    C645 * C22727) *
                       C22731 +
                   (C23199 + C23198) * C51034 + C23197 * C51050) *
                      C50797 * C50833) *
                     C635)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C51010 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C50861) *
                      C51009 +
                  (((C3146 * C22727 + C4077 * C50909) * C51050 +
                    (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                       C50861 -
                   (C23197 * C22731 + (C22891 + C22892) * C51034 +
                    (C2471 * C50909 + C2470 * C22727) * C51050) *
                       C51010) *
                      C50833) *
                     C278 +
                 ((((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                    (C23347 + C23348) * C22731) *
                       C50861 -
                   (C22742 * C22731 + (C22736 + C22735) * C51034 +
                    (C22734 + C22733) * C51050) *
                       C51010) *
                      C51009 +
                  (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                    (C23198 + C23199) * C22731) *
                       C51010 -
                   (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
                     C921 * C22727) *
                        C22731 +
                    (C23546 + C23545) * C51034 + (C23544 + C23543) * C51050) *
                       C50861) *
                      C50833) *
                     C50768)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C50797 * C275 -
                  ((C22889 + C22890) * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C50797 * C276 +
                  ((C2471 * C22727 + C3411 * C50909) * C51050 +
                   (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                      C50797 * C277) *
                     C278 +
                 (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                   (C345 * C22727 + C350 * C50909) * C22731) *
                      C50797 * C276 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C50797 * C275 -
                  (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
                    C350 * C22727) *
                       C22731 +
                   (C22896 + C22895) * C51034 + (C22894 + C22893) * C51050) *
                      C50797 * C277) *
                     C50768)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                   C2470 * C50909) *
                      C51050 +
                  (C22733 + C22734) * C51034 + C22741 * C22731) *
                     C50797 * C50781 * C113 -
                 (C22742 * C22731 + (C22736 + C22735) * C51034 +
                  (C22734 + C22733) * C51050) *
                     C50797 * C50781 * C114 +
                 (C22741 * C51050 + (C22738 + C22737) * C51034 +
                  (C22739 + C22740) * C22731) *
                     C50797 * C50781 * C115 -
                 (((C117 * C636 + C642 + C642 + C50923 * C638) * C50909 +
                   C172 * C22727) *
                      C22731 +
                  (C22740 + C22739) * C51034 + C22742 * C51050) *
                     C50797 * C50781 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C454 -
                  ((C23043 + C23044) * C22731 + (C23045 + C23046) * C51034 +
                   (C3146 * C50909 +
                    (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                       C51050) *
                      C455 +
                  (((C117 * C461 + C498 + C498 + C50923 * C481) * C22727 +
                    C3574 * C50909) *
                       C51050 +
                   (C23047 + C23048) * C51034 + (C23049 + C23050) * C22731) *
                      C456) *
                     C50781 * C278 +
                 (((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                   (C522 * C22727 + C921 * C50909) * C22731) *
                      C455 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C454 -
                  (((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50909 +
                    C527 * C22727) *
                       C22731 +
                   (C23050 + C23049) * C51034 + (C23048 + C23047) * C51050) *
                      C456) *
                     C50781 * C50768)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C51010 -
                  (C23346 * C22731 + (C23045 + C23046) * C51034 +
                   (C3146 * C50909 +
                    (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                       C51050) *
                      C50861) *
                     C50781 * C51051 +
                 (((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                   (C23347 + C23348) * C22731) *
                      C50861 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C51010) *
                     C50781 * C51052 +
                 ((C22741 * C51050 + (C22738 + C22737) * C51034 +
                   (C22739 + C22740) * C22731) *
                      C51010 -
                  (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
                    C755 * C22727) *
                       C22731 +
                   (C23348 + C23347) * C51034 + C23346 * C51050) *
                      C50861) *
                     C50781 * C635)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                   C2470 * C50909) *
                      C51050 +
                  (C22733 + C22734) * C51034 + C22741 * C22731) *
                     C50797 * C50781 * C113 -
                 (C22742 * C22731 + (C22736 + C22735) * C51034 +
                  (C22734 + C22733) * C51050) *
                     C50797 * C50781 * C114 +
                 (C22741 * C51050 + (C22738 + C22737) * C51034 +
                  (C22739 + C22740) * C22731) *
                     C50797 * C50781 * C115 -
                 (((C117 * C636 + C642 + C642 + C50923 * C638) * C50909 +
                   C172 * C22727) *
                      C22731 +
                  (C22740 + C22739) * C51034 + C22742 * C51050) *
                     C50797 * C50781 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C50797 * C275 -
                  ((C22889 + C22890) * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C50797 * C276 +
                  ((C2471 * C22727 + C3411 * C50909) * C51050 +
                   (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                      C50797 * C277) *
                     C278 +
                 (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                   (C345 * C22727 + C350 * C50909) * C22731) *
                      C50797 * C276 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C50797 * C275 -
                  (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
                    C350 * C22727) *
                       C22731 +
                   (C22896 + C22895) * C51034 + (C22894 + C22893) * C51050) *
                      C50797 * C277) *
                     C50768)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C50797 * C51053 -
                  (C23197 * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C50797 * C51054 +
                  ((C2471 * C22727 + C3411 * C50909) * C51050 +
                   (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                      C50797 * C1328) *
                     C51001 +
                 (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                   (C23198 + C23199) * C22731) *
                      C50797 * C51054 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C50797 * C51053 -
                  (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
                    C350 * C22727) *
                       C22731 +
                   (C22896 + C22895) * C51034 + (C22894 + C22893) * C51050) *
                      C50797 * C1328) *
                     C50768)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C51010 -
                  (C23346 * C22731 + (C23045 + C23046) * C51034 +
                   (C3146 * C50909 +
                    (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                       C51050) *
                      C50861) *
                     C51053 +
                 (((C3146 * C22727 + C4077 * C50909) * C51050 +
                   (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                      C50861 -
                  (C23197 * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C51010) *
                     C51054 +
                 (((C2471 * C22727 + C3411 * C50909) * C51050 +
                   (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                      C51010 -
                  (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
                    C3148 * C22727) *
                       C22731 +
                   (C8781 * C50909 + C3147 * C22727) * C51034 +
                   (C9697 * C50909 + C4077 * C22727) * C51050) *
                      C50861) *
                     C1328) *
                C50762) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                   C2470 * C50909) *
                      C51050 +
                  (C22733 + C22734) * C51034 + C22741 * C22731) *
                     C50797 * C1093 -
                 (C23197 * C22731 + (C22891 + C22892) * C51034 +
                  (C2471 * C50909 + C2470 * C22727) * C51050) *
                     C50797 * C1094 +
                 ((C2471 * C22727 + C3411 * C50909) * C51050 +
                  (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                     C50797 * C1095 -
                 (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C50909 +
                   C2473 * C22727) *
                      C22731 +
                  (C8124 * C50909 + C2472 * C22727) * C51034 +
                  (C9039 * C50909 + C3411 * C22727) * C51050) *
                     C50797 * C1096) *
                C50762) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C50797 * C1022 -
                  (C23197 * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C50797 * C50833) *
                     C1024 +
                 (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                   (C23198 + C23199) * C22731) *
                      C50797 * C50833 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C50797 * C1022) *
                     C1025 +
                 ((C22741 * C51050 + (C22738 + C22737) * C51034 +
                   (C22739 + C22740) * C22731) *
                      C50797 * C1022 -
                  (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
                    C645 * C22727) *
                       C22731 +
                   (C23199 + C23198) * C51034 + C23197 * C51050) *
                      C50797 * C50833) *
                     C1026)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C454 -
                  (C23346 * C22731 + (C23045 + C23046) * C51034 +
                   (C3146 * C50909 +
                    (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                       C51050) *
                      C455 +
                  (((C117 * C461 + C498 + C498 + C50923 * C481) * C22727 +
                    C3574 * C50909) *
                       C51050 +
                   (C23047 + C23048) * C51034 + (C23049 + C23050) * C22731) *
                      C456) *
                     C1022 +
                 (((C3146 * C22727 + C4077 * C50909) * C51050 +
                   (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                      C455 -
                  (C23197 * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C454 -
                  (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C50909 +
                    C2637 * C22727) *
                       C22731 +
                   (C8281 * C50909 + C2636 * C22727) * C51034 +
                   (C9198 * C50909 + C3574 * C22727) * C51050) *
                      C456) *
                     C50833) *
                C50762) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C51010 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C50861) *
                      C1022 +
                  (((C3146 * C22727 + C4077 * C50909) * C51050 +
                    (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                       C50861 -
                   (C23197 * C22731 + (C22891 + C22892) * C51034 +
                    (C2471 * C50909 + C2470 * C22727) * C51050) *
                       C51010) *
                      C50833) *
                     C51001 +
                 ((((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                    (C23347 + C23348) * C22731) *
                       C50861 -
                   (C22742 * C22731 + (C22736 + C22735) * C51034 +
                    (C22734 + C22733) * C51050) *
                       C51010) *
                      C1022 +
                  (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                    (C23198 + C23199) * C22731) *
                       C51010 -
                   (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
                     C921 * C22727) *
                        C22731 +
                    (C23546 + C23545) * C51034 + (C23544 + C23543) * C51050) *
                       C50861) *
                      C50833) *
                     C50768)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C50797 * C1022 -
                  (C23197 * C22731 + (C22891 + C22892) * C51034 +
                   (C2471 * C50909 + C2470 * C22727) * C51050) *
                      C50797 * C50833) *
                     C1024 +
                 (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                   (C23198 + C23199) * C22731) *
                      C50797 * C50833 -
                  (C22742 * C22731 + (C22736 + C22735) * C51034 +
                   (C22734 + C22733) * C51050) *
                      C50797 * C1022) *
                     C1025 +
                 ((C22741 * C51050 + (C22738 + C22737) * C51034 +
                   (C22739 + C22740) * C22731) *
                      C50797 * C1022 -
                  (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
                    C645 * C22727) *
                       C22731 +
                   (C23199 + C23198) * C51034 + C23197 * C51050) *
                      C50797 * C50833) *
                     C1026)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                   C2470 * C50909) *
                      C51050 +
                  (C22733 + C22734) * C51034 + C22741 * C22731) *
                     C50797 * C1093 -
                 (C23197 * C22731 + (C22891 + C22892) * C51034 +
                  (C2471 * C50909 + C2470 * C22727) * C51050) *
                     C50797 * C1094 +
                 ((C2471 * C22727 + C3411 * C50909) * C51050 +
                  (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                     C50797 * C1095 -
                 (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C50909 +
                   C2473 * C22727) *
                      C22731 +
                  (C8124 * C50909 + C2472 * C22727) * C51034 +
                  (C9039 * C50909 + C3411 * C22727) * C51050) *
                     C50797 * C1096) *
                C50762) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                      C2470 * C50909) *
                         C51050 +
                     (C22733 + C22734) * C51034 + C22741 * C22731) *
                        C1673 -
                    (C23346 * C22731 + (C23045 + C23046) * C51034 +
                     (C3146 * C50909 +
                      (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                         C51050) *
                        C50861) *
                       C51009 +
                   (((C3146 * C22727 + C4077 * C50909) * C51050 +
                     (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                        C50861 -
                    (C23197 * C22731 + (C22891 + C22892) * C51034 +
                     (C2471 * C50909 + C2470 * C22727) * C51050) *
                        C1673) *
                       C50833) *
                      C51001 +
                  ((((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                     (C23347 + C23348) * C22731) *
                        C50861 -
                    (C22742 * C22731 + (C22736 + C22735) * C51034 +
                     (C22734 + C22733) * C51050) *
                        C1673) *
                       C51009 +
                   (((C22892 + C22891) * C51050 + (C22890 + C22889) * C51034 +
                     (C23198 + C23199) * C22731) *
                        C1673 -
                    (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
                      C921 * C22727) *
                         C22731 +
                     (C23546 + C23545) * C51034 + (C23544 + C23543) * C51050) *
                        C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C51055 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C51056 +
                   (((C117 * C461 + C498 + C498 + C50923 * C481) * C22727 +
                     C3574 * C50909) *
                        C51050 +
                    (C23047 + C23048) * C51034 + (C23049 + C23050) * C22731) *
                       C2089) *
                      C51009 +
                  (((C3146 * C22727 + C4077 * C50909) * C51050 +
                    (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                       C51056 -
                   (C23197 * C22731 + (C22891 + C22892) * C51034 +
                    (C2471 * C50909 + C2470 * C22727) * C51050) *
                       C51055 -
                   (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C50909 +
                     C2637 * C22727) *
                        C22731 +
                    (C8281 * C50909 + C2636 * C22727) * C51034 +
                    (C9198 * C50909 + C3574 * C22727) * C51050) *
                       C2089) *
                      C50833) *
                 C50762) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C1673 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C50861) *
                      C275 +
                  (((C3146 * C22727 + C4077 * C50909) * C51050 +
                    (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                       C50861 -
                   (C23197 * C22731 + (C22891 + C22892) * C51034 +
                    (C2471 * C50909 + C2470 * C22727) * C51050) *
                       C1673) *
                      C276 +
                  (((C2471 * C22727 + C3411 * C50909) * C51050 +
                    (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                       C1673 -
                   (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
                     C3148 * C22727) *
                        C22731 +
                    (C8781 * C50909 + C3147 * C22727) * C51034 +
                    (C9697 * C50909 + C4077 * C22727) * C51050) *
                       C50861) *
                      C277) *
                 C50762) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C1673 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C50861) *
                      C50781 * C1024 +
                  (((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                    (C23347 + C23348) * C22731) *
                       C50861 -
                   (C22742 * C22731 + (C22736 + C22735) * C51034 +
                    (C22734 + C22733) * C51050) *
                       C1673) *
                      C50781 * C1025 +
                  ((C22741 * C51050 + (C22738 + C22737) * C51034 +
                    (C22739 + C22740) * C22731) *
                       C1673 -
                   (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
                     C755 * C22727) *
                        C22731 +
                    (C23348 + C23347) * C51034 + C23346 * C51050) *
                       C50861) *
                      C50781 * C1026)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                    C2470 * C50909) *
                       C51050 +
                   (C22733 + C22734) * C51034 + C22741 * C22731) *
                      C1839 -
                  (C23346 * C22731 + (C23045 + C23046) * C51034 +
                   (C3146 * C50909 +
                    (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                       C51050) *
                      C1840 +
                  (((C117 * C461 + C498 + C498 + C50923 * C481) * C22727 +
                    C3574 * C50909) *
                       C51050 +
                   (C23047 + C23048) * C51034 + (C23049 + C23050) * C22731) *
                      C1841 -
                  (((C117 * C4467 + C4477 + C4477 + C50923 * C4473) * C50909 +
                    (C117 * C1844 + C1857 + C1857 + C50923 * C1852) * C22727) *
                       C22731 +
                   ((C117 * C4468 + C4478 + C4478 + C50923 * C4474) * C50909 +
                    (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C22727) *
                       C51034 +
                   ((C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C50909 +
                    (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C22727) *
                       C51050) *
                      C1842) *
                 C50781 * C50762) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C51055 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C51056 +
                   (((C117 * C461 + C498 + C498 + C50923 * C481) * C22727 +
                     C3574 * C50909) *
                        C51050 +
                    (C23047 + C23048) * C51034 + (C23049 + C23050) * C22731) *
                       C2089) *
                      C50781 * C51001 +
                  (((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                    (C23347 + C23348) * C22731) *
                       C51056 -
                   (C22742 * C22731 + (C22736 + C22735) * C51034 +
                    (C22734 + C22733) * C51050) *
                       C51055 -
                   (((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50909 +
                     C527 * C22727) *
                        C22731 +
                    (C23050 + C23049) * C51034 + (C23048 + C23047) * C51050) *
                       C2089) *
                      C50781 * C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C1673 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C50861) *
                      C50781 * C1024 +
                  (((C23046 + C23045) * C51050 + (C23044 + C23043) * C51034 +
                    (C23347 + C23348) * C22731) *
                       C50861 -
                   (C22742 * C22731 + (C22736 + C22735) * C51034 +
                    (C22734 + C22733) * C51050) *
                       C1673) *
                      C50781 * C1025 +
                  ((C22741 * C51050 + (C22738 + C22737) * C51034 +
                    (C22739 + C22740) * C22731) *
                       C1673 -
                   (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
                     C755 * C22727) *
                        C22731 +
                    (C23348 + C23347) * C51034 + C23346 * C51050) *
                       C50861) *
                      C50781 * C1026)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C22727 +
                     C2470 * C50909) *
                        C51050 +
                    (C22733 + C22734) * C51034 + C22741 * C22731) *
                       C1673 -
                   (C23346 * C22731 + (C23045 + C23046) * C51034 +
                    (C3146 * C50909 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C22727) *
                        C51050) *
                       C50861) *
                      C275 +
                  (((C3146 * C22727 + C4077 * C50909) * C51050 +
                    (C23543 + C23544) * C51034 + (C23545 + C23546) * C22731) *
                       C50861 -
                   (C23197 * C22731 + (C22891 + C22892) * C51034 +
                    (C2471 * C50909 + C2470 * C22727) * C51050) *
                       C1673) *
                      C276 +
                  (((C2471 * C22727 + C3411 * C50909) * C51050 +
                    (C22893 + C22894) * C51034 + (C22895 + C22896) * C22731) *
                       C1673 -
                   (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
                     C3148 * C22727) *
                        C22731 +
                    (C8781 * C50909 + C3147 * C22727) * C51034 +
                    (C9697 * C50909 + C4077 * C22727) * C51050) *
                       C50861) *
                      C277) *
                 C50762) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C50797 * C51009 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C50797 * C50833) *
              C51051 +
          (((C25559 + C25558 + C25557) * C25399 +
            (C25861 + C25862 + C25863) * C50740) *
               C50797 * C50833 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C50797 * C51009) *
              C51052 +
          (((C25407 + C25406 + C25405) * C25399 +
            (C25408 + C25409 + C25410) * C50740) *
               C50797 * C51009 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C25398 +
             C350 * C51046 + C345 * C51057) *
                C50740 +
            (C25863 + C25862 + C25861) * C25399) *
               C50797 * C50833) *
              C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
              C2470 * C51046 + C2471 * C25398) *
                 C25399 +
             (C25402 + C25403 + C25404) * C50740) *
                C51010 -
            ((C25709 + C25710 + C25711) * C50740 +
             (C4077 * C25398 + C3146 * C51046 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                 C25399) *
                C50861) *
               C51009 +
           (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
             (C26207 + C26208 + C26209) * C50740) *
                C50861 -
            ((C25557 + C25558 + C25559) * C50740 +
             (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
                C51010) *
               C50833) *
              C278 +
          ((((C25711 + C25710 + C25709) * C25399 +
             (C26010 + C26011 + C26012) * C50740) *
                C50861 -
            ((C25405 + C25406 + C25407) * C50740 +
             (C25404 + C25403 + C25402) * C25399) *
                C51010) *
               C51009 +
           (((C25559 + C25558 + C25557) * C25399 +
             (C25861 + C25862 + C25863) * C50740) *
                C51010 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C25398 +
              C3148 * C51046 + C920 * C51057) *
                 C50740 +
             (C26209 + C26208 + C26207) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C50797 * C275 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C50797 * C276 +
           ((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
            (C25560 + C25561 + C25562) * C50740) *
               C50797 * C277) *
              C278 +
          (((C25559 + C25558 + C25557) * C25399 +
            (C346 * C51057 + C349 * C51046 + C2473 * C25398) * C50740) *
               C50797 * C276 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C50797 * C275 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C25398 +
             C2473 * C51046 + C349 * C51057) *
                C50740 +
            (C25562 + C25561 + C25560) * C25399) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
            C2470 * C51046 + C2471 * C25398) *
               C25399 +
           (C25402 + C25403 + C25404) * C50740) *
              C50797 * C50781 * C113 -
          ((C25405 + C25406 + C25407) * C50740 +
           (C25404 + C25403 + C25402) * C25399) *
              C50797 * C50781 * C114 +
          ((C25407 + C25406 + C25405) * C25399 +
           (C25408 + C25409 + C25410) * C50740) *
              C50797 * C50781 * C115 -
          (((C117 * C289 + C332 + C332 + C50923 * C309) * C25398 +
            C645 * C51046 + C171 * C51057) *
               C50740 +
           (C25410 + C25409 + C25408) * C25399) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C454 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51057 +
             C3574 * C51046 + C9198 * C25398) *
                C25399 +
            (C25712 + C25713 + C25714) * C50740) *
               C456) *
              C50781 * C278 +
          (((C25711 + C25710 + C25709) * C25399 +
            (C523 * C51057 + C920 * C51046 + C3148 * C25398) * C50740) *
               C455 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C454 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C25398 +
             C2637 * C51046 + C526 * C51057) *
                C50740 +
            (C25714 + C25713 + C25712) * C25399) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
                     C2470 * C51046 + C2471 * C25398) *
                        C25399 +
                    (C25402 + C25403 + C25404) * C50740) *
                       C51010 -
                   ((C25709 + C25710 + C25711) * C50740 +
                    (C4077 * C25398 + C3146 * C51046 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                        C25399) *
                       C50861) *
                      C50781 * C51051 +
                  (((C25711 + C25710 + C25709) * C25399 +
                    (C26010 + C26011 + C26012) * C50740) *
                       C50861 -
                   ((C25405 + C25406 + C25407) * C50740 +
                    (C25404 + C25403 + C25402) * C25399) *
                       C51010) *
                      C50781 * C51052 +
                  (((C25407 + C25406 + C25405) * C25399 +
                    (C25408 + C25409 + C25410) * C50740) *
                       C51010 -
                   (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C25398 +
                     C921 * C51046 + C522 * C51057) *
                        C50740 +
                    (C26012 + C26011 + C26010) * C25399) *
                       C50861) *
                      C50781 * C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
            C2470 * C51046 + C2471 * C25398) *
               C25399 +
           (C25402 + C25403 + C25404) * C50740) *
              C50797 * C50781 * C113 -
          ((C25405 + C25406 + C25407) * C50740 +
           (C25404 + C25403 + C25402) * C25399) *
              C50797 * C50781 * C114 +
          ((C25407 + C25406 + C25405) * C25399 +
           (C25408 + C25409 + C25410) * C50740) *
              C50797 * C50781 * C115 -
          (((C117 * C289 + C332 + C332 + C50923 * C309) * C25398 +
            C645 * C51046 + C171 * C51057) *
               C50740 +
           (C25410 + C25409 + C25408) * C25399) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C50797 * C275 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C50797 * C276 +
           ((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
            (C25560 + C25561 + C25562) * C50740) *
               C50797 * C277) *
              C278 +
          (((C25559 + C25558 + C25557) * C25399 +
            (C346 * C51057 + C349 * C51046 + C2473 * C25398) * C50740) *
               C50797 * C276 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C50797 * C275 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C25398 +
             C2473 * C51046 + C349 * C51057) *
                C50740 +
            (C25562 + C25561 + C25560) * C25399) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C50797 * C51053 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C50797 * C51054 +
           ((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
            (C25560 + C25561 + C25562) * C50740) *
               C50797 * C1328) *
              C51001 +
          (((C25559 + C25558 + C25557) * C25399 +
            (C25861 + C25862 + C25863) * C50740) *
               C50797 * C51054 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C50797 * C51053 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C25398 +
             C2473 * C51046 + C349 * C51057) *
                C50740 +
            (C25562 + C25561 + C25560) * C25399) *
               C50797 * C1328) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C51010 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C50861) *
              C51053 +
          (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
            (C26207 + C26208 + C26209) * C50740) *
               C50861 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C51010) *
              C51054 +
          (((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
            (C25560 + C25561 + C25562) * C50740) *
               C51010 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C25398 +
             C8781 * C51046 + C3147 * C51057) *
                C50740 +
            (C11789 * C25398 + C9697 * C51046 + C4077 * C51057) * C25399) *
               C50861) *
              C1328) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
            C2470 * C51046 + C2471 * C25398) *
               C25399 +
           (C25402 + C25403 + C25404) * C50740) *
              C50797 * C1093 -
          ((C25557 + C25558 + C25559) * C50740 +
           (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
              C50797 * C1094 +
          ((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
           (C25560 + C25561 + C25562) * C50740) *
              C50797 * C1095 -
          (((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C25398 +
            C8124 * C51046 + C2472 * C51057) *
               C50740 +
           (C11347 * C25398 + C9039 * C51046 + C3411 * C51057) * C25399) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C50797 * C1022 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C50797 * C50833) *
              C1024 +
          (((C25559 + C25558 + C25557) * C25399 +
            (C25861 + C25862 + C25863) * C50740) *
               C50797 * C50833 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C50797 * C1022) *
              C1025 +
          (((C25407 + C25406 + C25405) * C25399 +
            (C25408 + C25409 + C25410) * C50740) *
               C50797 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C25398 +
             C350 * C51046 + C345 * C51057) *
                C50740 +
            (C25863 + C25862 + C25861) * C25399) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C454 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51057 +
             C3574 * C51046 + C9198 * C25398) *
                C25399 +
            (C25712 + C25713 + C25714) * C50740) *
               C456) *
              C1022 +
          (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
            (C26207 + C26208 + C26209) * C50740) *
               C455 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C454 -
           (((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C25398 +
             C8281 * C51046 + C2636 * C51057) *
                C50740 +
            (C11454 * C25398 + C9198 * C51046 + C3574 * C51057) * C25399) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
              C2470 * C51046 + C2471 * C25398) *
                 C25399 +
             (C25402 + C25403 + C25404) * C50740) *
                C51010 -
            ((C25709 + C25710 + C25711) * C50740 +
             (C4077 * C25398 + C3146 * C51046 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                 C25399) *
                C50861) *
               C1022 +
           (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
             (C26207 + C26208 + C26209) * C50740) *
                C50861 -
            ((C25557 + C25558 + C25559) * C50740 +
             (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
                C51010) *
               C50833) *
              C51001 +
          ((((C25711 + C25710 + C25709) * C25399 +
             (C26010 + C26011 + C26012) * C50740) *
                C50861 -
            ((C25405 + C25406 + C25407) * C50740 +
             (C25404 + C25403 + C25402) * C25399) *
                C51010) *
               C1022 +
           (((C25559 + C25558 + C25557) * C25399 +
             (C25861 + C25862 + C25863) * C50740) *
                C51010 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C25398 +
              C3148 * C51046 + C920 * C51057) *
                 C50740 +
             (C26209 + C26208 + C26207) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C50797 * C1022 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C50797 * C50833) *
              C1024 +
          (((C25559 + C25558 + C25557) * C25399 +
            (C25861 + C25862 + C25863) * C50740) *
               C50797 * C50833 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C50797 * C1022) *
              C1025 +
          (((C25407 + C25406 + C25405) * C25399 +
            (C25408 + C25409 + C25410) * C50740) *
               C50797 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C25398 +
             C350 * C51046 + C345 * C51057) *
                C50740 +
            (C25863 + C25862 + C25861) * C25399) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
            C2470 * C51046 + C2471 * C25398) *
               C25399 +
           (C25402 + C25403 + C25404) * C50740) *
              C50797 * C1093 -
          ((C25557 + C25558 + C25559) * C50740 +
           (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
              C50797 * C1094 +
          ((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
           (C25560 + C25561 + C25562) * C50740) *
              C50797 * C1095 -
          (((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C25398 +
            C8124 * C51046 + C2472 * C51057) *
               C50740 +
           (C11347 * C25398 + C9039 * C51046 + C3411 * C51057) * C25399) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
              C2470 * C51046 + C2471 * C25398) *
                 C25399 +
             (C25402 + C25403 + C25404) * C50740) *
                C1673 -
            ((C25709 + C25710 + C25711) * C50740 +
             (C4077 * C25398 + C3146 * C51046 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                 C25399) *
                C50861) *
               C51009 +
           (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
             (C26207 + C26208 + C26209) * C50740) *
                C50861 -
            ((C25557 + C25558 + C25559) * C50740 +
             (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
                C1673) *
               C50833) *
              C51001 +
          ((((C25711 + C25710 + C25709) * C25399 +
             (C26010 + C26011 + C26012) * C50740) *
                C50861 -
            ((C25405 + C25406 + C25407) * C50740 +
             (C25404 + C25403 + C25402) * C25399) *
                C1673) *
               C51009 +
           (((C25559 + C25558 + C25557) * C25399 +
             (C25861 + C25862 + C25863) * C50740) *
                C1673 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C25398 +
              C3148 * C51046 + C920 * C51057) *
                 C50740 +
             (C26209 + C26208 + C26207) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C51055 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51057 +
             C3574 * C51046 + C9198 * C25398) *
                C25399 +
            (C25712 + C25713 + C25714) * C50740) *
               C2089) *
              C51009 +
          (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
            (C26207 + C26208 + C26209) * C50740) *
               C51056 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C51055 -
           (((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C25398 +
             C8281 * C51046 + C2636 * C51057) *
                C50740 +
            (C11454 * C25398 + C9198 * C51046 + C3574 * C51057) * C25399) *
               C2089) *
              C50833) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C1673 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C50861) *
              C275 +
          (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
            (C26207 + C26208 + C26209) * C50740) *
               C50861 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C1673) *
              C276 +
          (((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
            (C25560 + C25561 + C25562) * C50740) *
               C1673 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C25398 +
             C8781 * C51046 + C3147 * C51057) *
                C50740 +
            (C11789 * C25398 + C9697 * C51046 + C4077 * C51057) * C25399) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C1673 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C50861) *
              C50781 * C1024 +
          (((C25711 + C25710 + C25709) * C25399 +
            (C26010 + C26011 + C26012) * C50740) *
               C50861 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C1673) *
              C50781 * C1025 +
          (((C25407 + C25406 + C25405) * C25399 +
            (C25408 + C25409 + C25410) * C50740) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C25398 +
             C921 * C51046 + C522 * C51057) *
                C50740 +
            (C26012 + C26011 + C26010) * C25399) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
            C2470 * C51046 + C2471 * C25398) *
               C25399 +
           (C25402 + C25403 + C25404) * C50740) *
              C1839 -
          ((C25709 + C25710 + C25711) * C50740 +
           (C4077 * C25398 + C3146 * C51046 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
               C25399) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50923 * C481) * C51057 +
            C3574 * C51046 + C9198 * C25398) *
               C25399 +
           (C25712 + C25713 + C25714) * C50740) *
              C1841 -
          (((C117 * C10087 + C10094 + C10094 + C50923 * C10091) * C25398 +
            (C117 * C4468 + C4478 + C4478 + C50923 * C4474) * C51046 +
            (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C51057) *
               C50740 +
           ((C117 * C10088 + C10095 + C10095 + C50923 * C10092) * C25398 +
            (C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C51046 +
            (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C51057) *
               C25399) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
                     C2470 * C51046 + C2471 * C25398) *
                        C25399 +
                    (C25402 + C25403 + C25404) * C50740) *
                       C51055 -
                   ((C25709 + C25710 + C25711) * C50740 +
                    (C4077 * C25398 + C3146 * C51046 +
                     (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                        C25399) *
                       C51056 +
                   (((C117 * C461 + C498 + C498 + C50923 * C481) * C51057 +
                     C3574 * C51046 + C9198 * C25398) *
                        C25399 +
                    (C25712 + C25713 + C25714) * C50740) *
                       C2089) *
                      C50781 * C51001 +
                  (((C25711 + C25710 + C25709) * C25399 +
                    (C26010 + C26011 + C26012) * C50740) *
                       C51056 -
                   ((C25405 + C25406 + C25407) * C50740 +
                    (C25404 + C25403 + C25402) * C25399) *
                       C51055 -
                   (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C25398 +
                     C2637 * C51046 + C526 * C51057) *
                        C50740 +
                    (C25714 + C25713 + C25712) * C25399) *
                       C2089) *
                      C50781 * C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C1673 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C50861) *
              C50781 * C1024 +
          (((C25711 + C25710 + C25709) * C25399 +
            (C26010 + C26011 + C26012) * C50740) *
               C50861 -
           ((C25405 + C25406 + C25407) * C50740 +
            (C25404 + C25403 + C25402) * C25399) *
               C1673) *
              C50781 * C1025 +
          (((C25407 + C25406 + C25405) * C25399 +
            (C25408 + C25409 + C25410) * C50740) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C25398 +
             C921 * C51046 + C522 * C51057) *
                C50740 +
            (C26012 + C26011 + C26010) * C25399) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51057 +
             C2470 * C51046 + C2471 * C25398) *
                C25399 +
            (C25402 + C25403 + C25404) * C50740) *
               C1673 -
           ((C25709 + C25710 + C25711) * C50740 +
            (C4077 * C25398 + C3146 * C51046 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51057) *
                C25399) *
               C50861) *
              C275 +
          (((C3146 * C51057 + C4077 * C51046 + C9697 * C25398) * C25399 +
            (C26207 + C26208 + C26209) * C50740) *
               C50861 -
           ((C25557 + C25558 + C25559) * C50740 +
            (C3411 * C25398 + C2471 * C51046 + C2470 * C51057) * C25399) *
               C1673) *
              C276 +
          (((C2471 * C51057 + C3411 * C51046 + C9039 * C25398) * C25399 +
            (C25560 + C25561 + C25562) * C50740) *
               C1673 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C25398 +
             C8781 * C51046 + C3147 * C51057) *
                C50740 +
            (C11789 * C25398 + C9697 * C51046 + C4077 * C51057) * C25399) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C50797 * C51009 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C50797 * C50833) *
              C51051 +
          (((C28286 * C22727 + C28288 * C50909) * C25399 +
            (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
               C50797 * C50833 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C50797 * C51009) *
              C51052 +
          (((C5122 * C22727 + C28687 * C50909) * C25399 +
            ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
               C50797 * C51009 -
           (((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
              C5303 + C5303 + C51021 * C307) *
                 C50909 +
             (C5689 + C5688) * C22727) *
                C50740 +
            ((C5327 + C5326) * C50909 + C5676 * C22727) * C25399) *
               C50797 * C50833) *
              C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
               C5071 + C5071 + C50935 * C480) *
                  C22727 +
              (C12663 + C12664) * C50909) *
                 C25399 +
             ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
                C51010 -
            ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
             ((C13338 + C13339) * C50909 +
              (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
               C5487 + C5487 + C51021 * C480) *
                  C22727) *
                 C25399) *
                C50861) *
               C51009 +
           ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) *
                 C25399 +
             (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
                C50861 -
            ((C12644 * C50909 + C28287 * C22727) * C50740 +
             ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                 C25399) *
                C51010) *
               C50833) *
              C278 +
          (((((C5525 + C5524) * C22727 + C29141 * C50909) * C25399 +
             ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
                C50861 -
            ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
             (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
                C51010) *
               C51009 +
           (((C28286 * C22727 + C28288 * C50909) * C25399 +
             (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
                C51010 -
            (((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
               C6961 + C6961 + C51021 * C1568) *
                  C50909 +
              (C6071 + C6070) * C22727) *
                 C50740 +
             ((C13341 + C13340) * C50909 + C29140 * C22727) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C50797 * C275 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C50797 * C276 +
           ((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
            (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
               C50797 * C277) *
              C278 +
          (((C28286 * C22727 + C28288 * C50909) * C25399 +
            ((C5321 + C5320) * C22727 + (C5326 + C5327) * C50909) * C50740) *
               C50797 * C276 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C50797 * C275 -
           (((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
              C6317 + C6317 + C51021 * C1107) *
                 C50909 +
             (C5327 + C5326) * C22727) *
                C50740 +
            ((C12670 + C12669) * C50909 + C12644 * C22727) * C25399) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C22727 +
            (C12663 + C12664) * C50909) *
               C25399 +
           ((C5114 + C5115) * C22727 + (C5323 + C5322) * C50909) * C50740) *
              C50797 * C50781 * C113 -
          ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
           ((C5322 + C5323) * C50909 + (C5115 + C5114) * C22727) * C25399) *
              C50797 * C50781 * C114 +
          ((C5122 * C22727 + (C5321 + C5320) * C50909) * C25399 +
           ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
              C50797 * C50781 * C115 -
          (((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50909 +
            (C5121 + C5120) * C22727) *
               C50740 +
           ((C5689 + C5688) * C50909 + C5123 * C22727) * C25399) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C454 -
           (((C6069 + C6068) * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C455 +
           (((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
              C5489 + C5489 + C50935 * C1854) *
                 C22727 +
             (C13763 + C13764) * C50909) *
                C25399 +
            ((C5526 + C5527) * C22727 + (C28491 + C28492) * C50909) * C50740) *
               C456) *
              C50781 * C278 +
          ((((C5525 + C5524) * C22727 + (C6068 + C6069) * C50909) * C25399 +
            ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
               C455 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C454 -
           (((C5067 * C4467 + C6468 + C6468 + C50935 * C4473 + C5065 * C1213 +
              C6469 + C6469 + C51021 * C1221) *
                 C50909 +
             (C5529 + C5528) * C22727) *
                C50740 +
            ((C28492 + C28491) * C50909 + (C5527 + C5526) * C22727) * C25399) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C51010 -
           (((C6069 + C6068) * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C50861) *
              C50781 * C51051 +
          ((((C5525 + C5524) * C22727 + (C6068 + C6069) * C50909) * C25399 +
            ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
               C50861 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C51010) *
              C50781 * C51052 +
          (((C5122 * C22727 + C28687 * C50909) * C25399 +
            ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
               C51010 -
           (((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 + C5065 * C889 +
              C6059 + C6059 + C51021 * C899) *
                 C50909 +
             (C5849 + C5848) * C22727) *
                C50740 +
            ((C6071 + C6070) * C50909 + C5836 * C22727) * C25399) *
               C50861) *
              C50781 * C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C22727 +
            (C12663 + C12664) * C50909) *
               C25399 +
           ((C5114 + C5115) * C22727 + (C5323 + C5322) * C50909) * C50740) *
              C50797 * C50781 * C113 -
          ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
           ((C5322 + C5323) * C50909 + (C5115 + C5114) * C22727) * C25399) *
              C50797 * C50781 * C114 +
          ((C5122 * C22727 + (C5321 + C5320) * C50909) * C25399 +
           ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
              C50797 * C50781 * C115 -
          (((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50909 +
            (C5121 + C5120) * C22727) *
               C50740 +
           ((C5689 + C5688) * C50909 + C5123 * C22727) * C25399) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C50797 * C275 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C50797 * C276 +
           ((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
            (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
               C50797 * C277) *
              C278 +
          (((C28286 * C22727 + C28288 * C50909) * C25399 +
            ((C5321 + C5320) * C22727 + (C5326 + C5327) * C50909) * C50740) *
               C50797 * C276 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C50797 * C275 -
           (((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
              C6317 + C6317 + C51021 * C1107) *
                 C50909 +
             (C5327 + C5326) * C22727) *
                C50740 +
            ((C12670 + C12669) * C50909 + C12644 * C22727) * C25399) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C22727 +
                     (C12663 + C12664) * C50909) *
                        C25399 +
                    ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
                       C50797 * C51053 -
                   ((C12644 * C50909 + C28287 * C22727) * C50740 +
                    ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                        C25399) *
                       C50797 * C51054 +
                   ((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
                    (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
                       C50797 * C1328) *
                      C51001 +
                  (((C28286 * C22727 + C28288 * C50909) * C25399 +
                    (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
                       C50797 * C51054 -
                   ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
                    (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
                       C50797 * C51053 -
                   (((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 +
                      C5065 * C1099 + C6317 + C6317 + C51021 * C1107) *
                         C50909 +
                     (C5327 + C5326) * C22727) *
                        C50740 +
                    ((C12670 + C12669) * C50909 + C12644 * C22727) * C25399) *
                       C50797 * C1328) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C51010 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C50861) *
              C51053 +
          ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) * C25399 +
            (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
               C50861 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C51010) *
              C51054 +
          (((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
            (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
               C51010 -
           (((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 + C5065 * C4061 +
              C13323 + C13323 + C51021 * C4067) *
                 C50909 +
             (C13341 + C13340) * C22727) *
                C50740 +
            ((C14265 + C14264) * C50909 + C14253 * C22727) * C25399) *
               C50861) *
              C1328) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C22727 +
            (C12663 + C12664) * C50909) *
               C25399 +
           ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
              C50797 * C1093 -
          ((C12644 * C50909 + C28287 * C22727) * C50740 +
           ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) * C25399) *
              C50797 * C1094 +
          ((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
           (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
              C50797 * C1095 -
          (((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C50909 +
            (C12670 + C12669) * C22727) *
               C50740 +
           ((C13598 + C13597) * C50909 + C13586 * C22727) * C25399) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C50797 * C1022 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C50797 * C50833) *
              C1024 +
          (((C28286 * C22727 + C28288 * C50909) * C25399 +
            (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
               C50797 * C50833 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C50797 * C1022) *
              C1025 +
          (((C5122 * C22727 + C28687 * C50909) * C25399 +
            ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
               C50797 * C1022 -
           (((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
              C5303 + C5303 + C51021 * C307) *
                 C50909 +
             (C5689 + C5688) * C22727) *
                C50740 +
            ((C5327 + C5326) * C50909 + C5676 * C22727) * C25399) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C454 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C455 +
           (((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
              C5489 + C5489 + C50935 * C1854) *
                 C22727 +
             (C13763 + C13764) * C50909) *
                C25399 +
            ((C5526 + C5527) * C22727 + (C28491 + C28492) * C50909) * C50740) *
               C456) *
              C1022 +
          ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) * C25399 +
            (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
               C455 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C454 -
           (((C5067 * C10087 + C12820 + C12820 + C50935 * C10091 +
              C5065 * C3558 + C12821 + C12821 + C51021 * C3564) *
                 C50909 +
             (C28492 + C28491) * C22727) *
                C50740 +
            ((C13766 + C13765) * C50909 + (C13764 + C13763) * C22727) *
                C25399) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
               C5071 + C5071 + C50935 * C480) *
                  C22727 +
              (C12663 + C12664) * C50909) *
                 C25399 +
             ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
                C51010 -
            ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
             ((C13338 + C13339) * C50909 +
              (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
               C5487 + C5487 + C51021 * C480) *
                  C22727) *
                 C25399) *
                C50861) *
               C1022 +
           ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) *
                 C25399 +
             (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
                C50861 -
            ((C12644 * C50909 + C28287 * C22727) * C50740 +
             ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                 C25399) *
                C51010) *
               C50833) *
              C51001 +
          (((((C5525 + C5524) * C22727 + C29141 * C50909) * C25399 +
             ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
                C50861 -
            ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
             (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
                C51010) *
               C1022 +
           (((C28286 * C22727 + C28288 * C50909) * C25399 +
             (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
                C51010 -
            (((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
               C6961 + C6961 + C51021 * C1568) *
                  C50909 +
              (C6071 + C6070) * C22727) *
                 C50740 +
             ((C13341 + C13340) * C50909 + C29140 * C22727) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C50797 * C1022 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C50797 * C50833) *
              C1024 +
          (((C28286 * C22727 + C28288 * C50909) * C25399 +
            (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
               C50797 * C50833 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C50797 * C1022) *
              C1025 +
          (((C5122 * C22727 + C28687 * C50909) * C25399 +
            ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
               C50797 * C1022 -
           (((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
              C5303 + C5303 + C51021 * C307) *
                 C50909 +
             (C5689 + C5688) * C22727) *
                C50740 +
            ((C5327 + C5326) * C50909 + C5676 * C22727) * C25399) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C22727 +
            (C12663 + C12664) * C50909) *
               C25399 +
           ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
              C50797 * C1093 -
          ((C12644 * C50909 + C28287 * C22727) * C50740 +
           ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) * C25399) *
              C50797 * C1094 +
          ((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
           (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
              C50797 * C1095 -
          (((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C50909 +
            (C12670 + C12669) * C22727) *
               C50740 +
           ((C13598 + C13597) * C50909 + C13586 * C22727) * C25399) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
               C5071 + C5071 + C50935 * C480) *
                  C22727 +
              (C12663 + C12664) * C50909) *
                 C25399 +
             ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
                C1673 -
            ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
             ((C13338 + C13339) * C50909 +
              (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
               C5487 + C5487 + C51021 * C480) *
                  C22727) *
                 C25399) *
                C50861) *
               C51009 +
           ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) *
                 C25399 +
             (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
                C50861 -
            ((C12644 * C50909 + C28287 * C22727) * C50740 +
             ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                 C25399) *
                C1673) *
               C50833) *
              C51001 +
          (((((C5525 + C5524) * C22727 + C29141 * C50909) * C25399 +
             ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
                C50861 -
            ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
             (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
                C1673) *
               C51009 +
           (((C28286 * C22727 + C28288 * C50909) * C25399 +
             (C28687 * C22727 + (C5326 + C5327) * C50909) * C50740) *
                C1673 -
            (((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
               C6961 + C6961 + C51021 * C1568) *
                  C50909 +
              (C6071 + C6070) * C22727) *
                 C50740 +
             ((C13341 + C13340) * C50909 + C29140 * C22727) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C51055 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C51056 +
           (((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
              C5489 + C5489 + C50935 * C1854) *
                 C22727 +
             (C13763 + C13764) * C50909) *
                C25399 +
            ((C5526 + C5527) * C22727 + (C28491 + C28492) * C50909) * C50740) *
               C2089) *
              C51009 +
          ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) * C25399 +
            (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
               C51056 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C51055 -
           (((C5067 * C10087 + C12820 + C12820 + C50935 * C10091 +
              C5065 * C3558 + C12821 + C12821 + C51021 * C3564) *
                 C50909 +
             (C28492 + C28491) * C22727) *
                C50740 +
            ((C13766 + C13765) * C50909 + (C13764 + C13763) * C22727) *
                C25399) *
               C2089) *
              C50833) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C1673 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C50861) *
              C275 +
          ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) * C25399 +
            (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
               C50861 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C1673) *
              C276 +
          (((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
            (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
               C1673 -
           (((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 + C5065 * C4061 +
              C13323 + C13323 + C51021 * C4067) *
                 C50909 +
             (C13341 + C13340) * C22727) *
                C50740 +
            ((C14265 + C14264) * C50909 + C14253 * C22727) * C25399) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C1673 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C50861) *
              C50781 * C1024 +
          ((((C5525 + C5524) * C22727 + C29141 * C50909) * C25399 +
            ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
               C50861 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C1673) *
              C50781 * C1025 +
          (((C5122 * C22727 + C28687 * C50909) * C25399 +
            ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
               C1673 -
           (((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 + C5065 * C889 +
              C6059 + C6059 + C51021 * C899) *
                 C50909 +
             (C5849 + C5848) * C22727) *
                C50740 +
            ((C6071 + C6070) * C50909 + C5836 * C22727) * C25399) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C22727 +
            (C12663 + C12664) * C50909) *
               C25399 +
           ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
              C1839 -
          ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
           ((C13338 + C13339) * C50909 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C22727) *
               C25399) *
              C1840 +
          (((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C22727 +
            (C13763 + C13764) * C50909) *
               C25399 +
           ((C5526 + C5527) * C22727 + (C28491 + C28492) * C50909) * C50740) *
              C1841 -
          (((C5067 * C16648 + C30824 + C30824 + C50935 * C16650 +
             C5065 * C4468 + C30825 + C30825 + C51021 * C4474) *
                C50909 +
            (C5067 * C7356 + C7367 + C7367 + C50935 * C7362 + C5065 * C1845 +
             C7368 + C7368 + C51021 * C1853) *
                C22727) *
               C50740 +
           ((C5067 * C14656 + C14664 + C14664 + C50935 * C14660 +
             C5065 * C4469 + C14665 + C14665 + C51021 * C4475) *
                C50909 +
            (C5067 * C7357 + C7369 + C7369 + C50935 * C7363 + C5065 * C1846 +
             C7370 + C7370 + C51021 * C1854) *
                C22727) *
               C25399) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C51055 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C51056 +
           (((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
              C5489 + C5489 + C50935 * C1854) *
                 C22727 +
             (C13763 + C13764) * C50909) *
                C25399 +
            ((C5526 + C5527) * C22727 + (C28491 + C28492) * C50909) * C50740) *
               C2089) *
              C50781 * C51001 +
          ((((C5525 + C5524) * C22727 + C29141 * C50909) * C25399 +
            ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
               C51056 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C51055 -
           (((C5067 * C4467 + C6468 + C6468 + C50935 * C4473 + C5065 * C1213 +
              C6469 + C6469 + C51021 * C1221) *
                 C50909 +
             (C5529 + C5528) * C22727) *
                C50740 +
            ((C28492 + C28491) * C50909 + (C5527 + C5526) * C22727) * C25399) *
               C2089) *
              C50781 * C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C1673 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C50861) *
              C50781 * C1024 +
          ((((C5525 + C5524) * C22727 + C29141 * C50909) * C25399 +
            ((C5523 + C5522) * C22727 + (C6070 + C6071) * C50909) * C50740) *
               C50861 -
           ((C5676 * C50909 + (C5117 + C5116) * C22727) * C50740 +
            (C28287 * C50909 + (C5115 + C5114) * C22727) * C25399) *
               C1673) *
              C50781 * C1025 +
          (((C5122 * C22727 + C28687 * C50909) * C25399 +
            ((C5119 + C5118) * C22727 + (C5688 + C5689) * C50909) * C50740) *
               C1673 -
           (((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 + C5065 * C889 +
              C6059 + C6059 + C51021 * C899) *
                 C50909 +
             (C5849 + C5848) * C22727) *
                C50740 +
            ((C6071 + C6070) * C50909 + C5836 * C22727) * C25399) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C22727 +
             (C12663 + C12664) * C50909) *
                C25399 +
            ((C5114 + C5115) * C22727 + C28286 * C50909) * C50740) *
               C1673 -
           ((C29140 * C50909 + (C5524 + C5525) * C22727) * C50740 +
            ((C13338 + C13339) * C50909 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C22727) *
                C25399) *
               C50861) *
              C275 +
          ((((C13339 + C13338) * C22727 + (C13337 + C13336) * C50909) * C25399 +
            (C29141 * C22727 + (C13340 + C13341) * C50909) * C50740) *
               C50861 -
           ((C12644 * C50909 + C28287 * C22727) * C50740 +
            ((C12666 + C12665) * C50909 + (C12664 + C12663) * C22727) *
                C25399) *
               C1673) *
              C276 +
          (((C12671 * C22727 + (C12668 + C12667) * C50909) * C25399 +
            (C28288 * C22727 + (C12669 + C12670) * C50909) * C50740) *
               C1673 -
           (((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 + C5065 * C4061 +
              C13323 + C13323 + C51021 * C4067) *
                 C50909 +
             (C13341 + C13340) * C22727) *
                C50740 +
            ((C14265 + C14264) * C50909 + C14253 * C22727) * C25399) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C22727 +
                     (C34706 + C34707) * C50909) *
                        C50992 +
                    ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
                       C50797 * C51009 -
                   ((C34683 * C50909 + C34684 * C22727) * C50740 +
                    ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                        C50992) *
                       C50797 * C50833) *
                      C51051 +
                  (((C34682 * C22727 + C34689 * C50909) * C50992 +
                    (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
                       C50797 * C50833 -
                   ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
                    (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
                       C50797 * C51009) *
                      C51052 +
                  (((C31628 * C22727 + C35110 * C50909) * C50992 +
                    ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) *
                        C50740) *
                       C50797 * C51009 -
                   (((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
                      C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                         C50909 +
                     (C32195 + C32194) * C22727) *
                        C50740 +
                    ((C31833 + C31832) * C50909 + C32182 * C22727) * C50992) *
                       C50797 * C50833) *
                      C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C22727 +
                      (C34706 + C34707) * C50909) *
                         C50992 +
                     ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
                        C51010 -
                    ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
                     ((C35581 + C35582) * C50909 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C22727) *
                         C50992) *
                        C50861) *
                       C51009 +
                   ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) *
                         C50992 +
                     (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
                        C50861 -
                    ((C34683 * C50909 + C34684 * C22727) * C50740 +
                     ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                         C50992) *
                        C51010) *
                       C50833) *
                      C278 +
                  (((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
                     ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                         C50740) *
                        C50861 -
                    ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
                     (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
                        C51010) *
                       C51009 +
                   (((C34682 * C22727 + C34689 * C50909) * C50992 +
                     (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
                        C51010 -
                    (((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
                       C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                          C50909 +
                      (C32577 + C32576) * C22727) *
                         C50740 +
                     ((C35584 + C35583) * C50909 + C35563 * C22727) * C50992) *
                        C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C50797 * C275 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C50797 * C276 +
           (((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
            (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
               C50797 * C277) *
              C278 +
          (((C34682 * C22727 + C34689 * C50909) * C50992 +
            (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C276 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C50797 * C275 -
           (((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
              C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                 C50909 +
             (C31833 + C31832) * C22727) *
                C50740 +
            ((C34711 + C34710) * C50909 + C34683 * C22727) * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C22727 +
            (C34706 + C34707) * C50909) *
               C50992 +
           ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
              C50797 * C50781 * C113 -
          ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
           (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
              C50797 * C50781 * C114 +
          ((C31628 * C22727 + C35110 * C50909) * C50992 +
           ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) * C50740) *
              C50797 * C50781 * C115 -
          (((C31573 * C890 + C32187 + C32187 + C50935 * C900 + C31571 * C288 +
             C32188 + C32188 + C31569 * C308) *
                C50909 +
            (C31627 + C31626) * C22727) *
               C50740 +
           ((C32195 + C32194) * C50909 + C31629 * C22727) * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C454 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C455 +
           (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
              C31995 + C31995 + C50935 * C1854) *
                 C22727 +
             (C36129 + C36130) * C50909) *
                C50992 +
            ((C32032 + C32033) * C22727 + (C34914 + C34915) * C50909) *
                C50740) *
               C456) *
              C50781 * C278 +
          ((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
            ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                C50740) *
               C455 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C454 -
           (((C31573 * C4467 + C32974 + C32974 + C50935 * C4473 +
              C31571 * C1213 + C32975 + C32975 + C31569 * C1221) *
                 C50909 +
             (C32035 + C32034) * C22727) *
                C50740 +
            ((C34915 + C34914) * C50909 + (C32033 + C32032) * C22727) *
                C50992) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C22727 +
                     (C34706 + C34707) * C50909) *
                        C50992 +
                    ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
                       C51010 -
                   ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
                    ((C35581 + C35582) * C50909 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C22727) *
                        C50992) *
                       C50861) *
                      C50781 * C51051 +
                  ((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
                    ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                        C50740) *
                       C50861 -
                   ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
                    (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
                       C51010) *
                      C50781 * C51052 +
                  (((C31628 * C22727 + C35110 * C50909) * C50992 +
                    ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) *
                        C50740) *
                       C51010 -
                   (((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
                      C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                         C50909 +
                     (C32355 + C32354) * C22727) *
                        C50740 +
                    ((C32577 + C32576) * C50909 + C32342 * C22727) * C50992) *
                       C50861) *
                      C50781 * C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C22727 +
            (C34706 + C34707) * C50909) *
               C50992 +
           ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
              C50797 * C50781 * C113 -
          ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
           (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
              C50797 * C50781 * C114 +
          ((C31628 * C22727 + C35110 * C50909) * C50992 +
           ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) * C50740) *
              C50797 * C50781 * C115 -
          (((C31573 * C890 + C32187 + C32187 + C50935 * C900 + C31571 * C288 +
             C32188 + C32188 + C31569 * C308) *
                C50909 +
            (C31627 + C31626) * C22727) *
               C50740 +
           ((C32195 + C32194) * C50909 + C31629 * C22727) * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C50797 * C275 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C50797 * C276 +
           (((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
            (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
               C50797 * C277) *
              C278 +
          (((C34682 * C22727 + C34689 * C50909) * C50992 +
            (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C276 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C50797 * C275 -
           (((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
              C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                 C50909 +
             (C31833 + C31832) * C22727) *
                C50740 +
            ((C34711 + C34710) * C50909 + C34683 * C22727) * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C50797 * C51053 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C50797 * C51054 +
           (((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
            (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
               C50797 * C1328) *
              C51001 +
          (((C34682 * C22727 + C34689 * C50909) * C50992 +
            (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C51054 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C50797 * C51053 -
           (((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
              C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                 C50909 +
             (C31833 + C31832) * C22727) *
                C50740 +
            ((C34711 + C34710) * C50909 + C34683 * C22727) * C50992) *
               C50797 * C1328) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C51010 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C50861) *
              C51053 +
          ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) * C50992 +
            (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
               C50861 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C51010) *
              C51054 +
          ((((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
            (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
               C51010 -
           (((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C50909 +
             (C35584 + C35583) * C22727) *
                C50740 +
            ((C31573 * C9186 + C36783 + C36783 + C50935 * C9190 +
              C31571 * C4062 + C36784 + C36784 + C31569 * C4068) *
                 C50909 +
             (C36790 + C36789) * C22727) *
                C50992) *
               C50861) *
              C1328) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C22727 +
            (C34706 + C34707) * C50909) *
               C50992 +
           ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
              C50797 * C1093 -
          ((C34683 * C50909 + C34684 * C22727) * C50740 +
           ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) * C50992) *
              C50797 * C1094 +
          (((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
           (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
              C50797 * C1095 -
          (((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C50909 +
            (C34711 + C34710) * C22727) *
               C50740 +
           ((C31573 * C9685 + C35915 + C35915 + C50935 * C9689 +
             C31571 * C3396 + C35916 + C35916 + C31569 * C3402) *
                C50909 +
            (C35922 + C35921) * C22727) *
               C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C50797 * C1022 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C50797 * C50833) *
              C1024 +
          (((C34682 * C22727 + C34689 * C50909) * C50992 +
            (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C50833 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C31628 * C22727 + C35110 * C50909) * C50992 +
            ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) *
                C50740) *
               C50797 * C1022 -
           (((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
              C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                 C50909 +
             (C32195 + C32194) * C22727) *
                C50740 +
            ((C31833 + C31832) * C50909 + C32182 * C22727) * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C454 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C455 +
           (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
              C31995 + C31995 + C50935 * C1854) *
                 C22727 +
             (C36129 + C36130) * C50909) *
                C50992 +
            ((C32032 + C32033) * C22727 + (C34914 + C34915) * C50909) *
                C50740) *
               C456) *
              C1022 +
          ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) * C50992 +
            (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
               C455 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C454 -
           (((C31573 * C10087 + C36121 + C36121 + C50935 * C10091 +
              C31571 * C3558 + C36122 + C36122 + C31569 * C3564) *
                 C50909 +
             (C34915 + C34914) * C22727) *
                C50740 +
            ((C31573 * C10088 + C36123 + C36123 + C50935 * C10092 +
              C31571 * C3559 + C36124 + C36124 + C31569 * C3565) *
                 C50909 +
             (C36130 + C36129) * C22727) *
                C50992) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C22727 +
                      (C34706 + C34707) * C50909) *
                         C50992 +
                     ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
                        C51010 -
                    ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
                     ((C35581 + C35582) * C50909 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C22727) *
                         C50992) *
                        C50861) *
                       C1022 +
                   ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) *
                         C50992 +
                     (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
                        C50861 -
                    ((C34683 * C50909 + C34684 * C22727) * C50740 +
                     ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                         C50992) *
                        C51010) *
                       C50833) *
                      C51001 +
                  (((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
                     ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                         C50740) *
                        C50861 -
                    ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
                     (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
                        C51010) *
                       C1022 +
                   (((C34682 * C22727 + C34689 * C50909) * C50992 +
                     (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
                        C51010 -
                    (((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
                       C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                          C50909 +
                      (C32577 + C32576) * C22727) *
                         C50740 +
                     ((C35584 + C35583) * C50909 + C35563 * C22727) * C50992) *
                        C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C50797 * C1022 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C50797 * C50833) *
              C1024 +
          (((C34682 * C22727 + C34689 * C50909) * C50992 +
            (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C50833 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C31628 * C22727 + C35110 * C50909) * C50992 +
            ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) *
                C50740) *
               C50797 * C1022 -
           (((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
              C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                 C50909 +
             (C32195 + C32194) * C22727) *
                C50740 +
            ((C31833 + C31832) * C50909 + C32182 * C22727) * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C22727 +
            (C34706 + C34707) * C50909) *
               C50992 +
           ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
              C50797 * C1093 -
          ((C34683 * C50909 + C34684 * C22727) * C50740 +
           ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) * C50992) *
              C50797 * C1094 +
          (((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
           (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
              C50797 * C1095 -
          (((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C50909 +
            (C34711 + C34710) * C22727) *
               C50740 +
           ((C31573 * C9685 + C35915 + C35915 + C50935 * C9689 +
             C31571 * C3396 + C35916 + C35916 + C31569 * C3402) *
                C50909 +
            (C35922 + C35921) * C22727) *
               C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C22727 +
                      (C34706 + C34707) * C50909) *
                         C50992 +
                     ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
                        C1673 -
                    ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
                     ((C35581 + C35582) * C50909 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C22727) *
                         C50992) *
                        C50861) *
                       C51009 +
                   ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) *
                         C50992 +
                     (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
                        C50861 -
                    ((C34683 * C50909 + C34684 * C22727) * C50740 +
                     ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                         C50992) *
                        C1673) *
                       C50833) *
                      C51001 +
                  (((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
                     ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                         C50740) *
                        C50861 -
                    ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
                     (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
                        C1673) *
                       C51009 +
                   (((C34682 * C22727 + C34689 * C50909) * C50992 +
                     (C35110 * C22727 + (C31832 + C31833) * C50909) * C50740) *
                        C1673 -
                    (((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
                       C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                          C50909 +
                      (C32577 + C32576) * C22727) *
                         C50740 +
                     ((C35584 + C35583) * C50909 + C35563 * C22727) * C50992) *
                        C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C51055 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C51056 +
           (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
              C31995 + C31995 + C50935 * C1854) *
                 C22727 +
             (C36129 + C36130) * C50909) *
                C50992 +
            ((C32032 + C32033) * C22727 + (C34914 + C34915) * C50909) *
                C50740) *
               C2089) *
              C51009 +
          ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) * C50992 +
            (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
               C51056 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C51055 -
           (((C31573 * C10087 + C36121 + C36121 + C50935 * C10091 +
              C31571 * C3558 + C36122 + C36122 + C31569 * C3564) *
                 C50909 +
             (C34915 + C34914) * C22727) *
                C50740 +
            ((C31573 * C10088 + C36123 + C36123 + C50935 * C10092 +
              C31571 * C3559 + C36124 + C36124 + C31569 * C3565) *
                 C50909 +
             (C36130 + C36129) * C22727) *
                C50992) *
               C2089) *
              C50833) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C50861) *
              C275 +
          ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) * C50992 +
            (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
               C50861 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C1673) *
              C276 +
          ((((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
            (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
               C1673 -
           (((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C50909 +
             (C35584 + C35583) * C22727) *
                C50740 +
            ((C31573 * C9186 + C36783 + C36783 + C50935 * C9190 +
              C31571 * C4062 + C36784 + C36784 + C31569 * C4068) *
                 C50909 +
             (C36790 + C36789) * C22727) *
                C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C50861) *
              C50781 * C1024 +
          ((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
            ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                C50740) *
               C50861 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C31628 * C22727 + C35110 * C50909) * C50992 +
            ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) *
                C50740) *
               C1673 -
           (((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
              C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                 C50909 +
             (C32355 + C32354) * C22727) *
                C50740 +
            ((C32577 + C32576) * C50909 + C32342 * C22727) * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C22727 +
            (C34706 + C34707) * C50909) *
               C50992 +
           ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
              C1839 -
          ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
           ((C35581 + C35582) * C50909 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C22727) *
               C50992) *
              C1840 +
          (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
             C31995 + C31995 + C50935 * C1854) *
                C22727 +
            (C36129 + C36130) * C50909) *
               C50992 +
           ((C32032 + C32033) * C22727 + (C34914 + C34915) * C50909) * C50740) *
              C1841 -
          (((C31573 * C16648 + C37309 + C37309 + C50935 * C16650 +
             C31571 * C4468 + C37310 + C37310 + C31569 * C4474) *
                C50909 +
            (C31573 * C7356 + C33864 + C33864 + C50935 * C7362 +
             C31571 * C1845 + C33865 + C33865 + C31569 * C1853) *
                C22727) *
               C50740 +
           ((C31573 * C14656 + C37311 + C37311 + C50935 * C14660 +
             C31571 * C4469 + C37312 + C37312 + C31569 * C4475) *
                C50909 +
            (C31573 * C7357 + C33866 + C33866 + C50935 * C7363 +
             C31571 * C1846 + C33867 + C33867 + C31569 * C1854) *
                C22727) *
               C50992) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C22727 +
                     (C34706 + C34707) * C50909) *
                        C50992 +
                    ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
                       C51055 -
                   ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
                    ((C35581 + C35582) * C50909 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C22727) *
                        C50992) *
                       C51056 +
                   (((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                      C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                         C22727 +
                     (C36129 + C36130) * C50909) *
                        C50992 +
                    ((C32032 + C32033) * C22727 + (C34914 + C34915) * C50909) *
                        C50740) *
                       C2089) *
                      C50781 * C51001 +
                  ((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
                    ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                        C50740) *
                       C51056 -
                   ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
                    (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
                       C51055 -
                   (((C31573 * C4467 + C32974 + C32974 + C50935 * C4473 +
                      C31571 * C1213 + C32975 + C32975 + C31569 * C1221) *
                         C50909 +
                     (C32035 + C32034) * C22727) *
                        C50740 +
                    ((C34915 + C34914) * C50909 + (C32033 + C32032) * C22727) *
                        C50992) *
                       C2089) *
                      C50781 * C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C50861) *
              C50781 * C1024 +
          ((((C32031 + C32030) * C22727 + C35568 * C50909) * C50992 +
            ((C32029 + C32028) * C22727 + (C32576 + C32577) * C50909) *
                C50740) *
               C50861 -
           ((C32182 * C50909 + (C31623 + C31622) * C22727) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C22727) * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C31628 * C22727 + C35110 * C50909) * C50992 +
            ((C31625 + C31624) * C22727 + (C32194 + C32195) * C50909) *
                C50740) *
               C1673 -
           (((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
              C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                 C50909 +
             (C32355 + C32354) * C22727) *
                C50740 +
            ((C32577 + C32576) * C50909 + C32342 * C22727) * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C22727 +
             (C34706 + C34707) * C50909) *
                C50992 +
            ((C31620 + C31621) * C22727 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C22727) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C22727) *
                C50992) *
               C50861) *
              C275 +
          ((((C35582 + C35581) * C22727 + (C36789 + C36790) * C50909) * C50992 +
            (C35568 * C22727 + (C35583 + C35584) * C50909) * C50740) *
               C50861 -
           ((C34683 * C50909 + C34684 * C22727) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C22727) *
                C50992) *
               C1673) *
              C276 +
          ((((C34709 + C34708) * C22727 + (C35921 + C35922) * C50909) * C50992 +
            (C34689 * C22727 + (C34710 + C34711) * C50909) * C50740) *
               C1673 -
           (((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C50909 +
             (C35584 + C35583) * C22727) *
                C50740 +
            ((C31573 * C9186 + C36783 + C36783 + C50935 * C9190 +
              C31571 * C4062 + C36784 + C36784 + C31569 * C4068) *
                 C50909 +
             (C36790 + C36789) * C22727) *
                C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C50797 * C51009 -
           ((C35922 + C35921) * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C50797 * C50833) *
              C51051 +
          ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
               C50735 * C50797 * C50833 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C50797 * C51009) *
              C51052 +
          ((C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
               C50735 * C50797 * C51009 -
           ((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
             C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                C25398 +
            (C31833 + C31832) * C51046 + C32182 * C51057) *
               C50735 * C50797 * C50833) *
              C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51057 +
             (C34706 + C34707) * C51046 + C44572 * C25398) *
                C50735 * C51010 -
            ((C36790 + C36789) * C25398 + (C35581 + C35582) * C51046 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51057) *
                C50735 * C50861) *
               C51009 +
           (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
             (C31571 * C4062 + C36784 + C36784 + C31569 * C4068 +
              C31573 * C9186 + C36783 + C36783 + C50935 * C9190) *
                 C25398) *
                C50735 * C50861 -
            ((C35922 + C35921) * C25398 + (C34708 + C34709) * C51046 +
             (C34707 + C34706) * C51057) *
                C50735 * C51010) *
               C50833) *
              C278 +
          ((((C32031 + C32030) * C51057 + C35568 * C51046 +
             (C35583 + C35584) * C25398) *
                C50735 * C50861 -
            (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
                C50735 * C51010) *
               C51009 +
           ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
                C50735 * C51010 -
            ((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C25398 +
             (C35584 + C35583) * C51046 + C35563 * C51057) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C50797 * C275 -
           ((C35922 + C35921) * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C50797 * C276 +
           (C44572 * C51057 + (C35921 + C35922) * C51046 +
            (C31571 * C3396 + C35916 + C35916 + C31569 * C3402 +
             C31573 * C9685 + C35915 + C35915 + C50935 * C9689) *
                C25398) *
               C50735 * C50797 * C277) *
              C278 +
          ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
               C50735 * C50797 * C276 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C50797 * C275 -
           ((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C25398 +
            (C34711 + C34710) * C51046 + C34683 * C51057) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
            C31577 + C31577 + C50935 * C480) *
               C51057 +
           (C34706 + C34707) * C51046 + (C34709 + C34708) * C25398) *
              C50735 * C50797 * C50781 * C113 -
          (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
              C50735 * C50797 * C50781 * C114 +
          (C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
              C50735 * C50797 * C50781 * C115 -
          ((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 + C31571 * C287 +
            C31809 + C31809 + C31569 * C307) *
               C25398 +
           (C32195 + C32194) * C51046 + C31629 * C51057) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C454 -
           ((C36790 + C36789) * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C455 +
           ((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
             C31995 + C31995 + C50935 * C1854) *
                C51057 +
            (C36129 + C36130) * C51046 +
            (C31571 * C3559 + C36124 + C36124 + C31569 * C3565 +
             C31573 * C10088 + C36123 + C36123 + C50935 * C10092) *
                C25398) *
               C50735 * C456) *
              C50781 * C278 +
          (((C32031 + C32030) * C51057 + C35568 * C51046 +
            (C35583 + C35584) * C25398) *
               C50735 * C455 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C454 -
           ((C31573 * C10087 + C36121 + C36121 + C50935 * C10091 +
             C31571 * C3558 + C36122 + C36122 + C31569 * C3564) *
                C25398 +
            (C34915 + C34914) * C51046 + (C32033 + C32032) * C51057) *
               C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C51010 -
           ((C36790 + C36789) * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C50861) *
              C50781 * C51051 +
          (((C32031 + C32030) * C51057 + C35568 * C51046 +
            (C35583 + C35584) * C25398) *
               C50735 * C50861 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C51010) *
              C50781 * C51052 +
          ((C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
               C50735 * C51010 -
           ((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
             C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                C25398 +
            (C32577 + C32576) * C51046 + C32342 * C51057) *
               C50735 * C50861) *
              C50781 * C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
            C31577 + C31577 + C50935 * C480) *
               C51057 +
           (C34706 + C34707) * C51046 + (C34709 + C34708) * C25398) *
              C50735 * C50797 * C50781 * C113 -
          (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
              C50735 * C50797 * C50781 * C114 +
          (C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
              C50735 * C50797 * C50781 * C115 -
          ((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 + C31571 * C287 +
            C31809 + C31809 + C31569 * C307) *
               C25398 +
           (C32195 + C32194) * C51046 + C31629 * C51057) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C50797 * C275 -
           ((C35922 + C35921) * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C50797 * C276 +
           (C44572 * C51057 + (C35921 + C35922) * C51046 +
            (C31571 * C3396 + C35916 + C35916 + C31569 * C3402 +
             C31573 * C9685 + C35915 + C35915 + C50935 * C9689) *
                C25398) *
               C50735 * C50797 * C277) *
              C278 +
          ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
               C50735 * C50797 * C276 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C50797 * C275 -
           ((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C25398 +
            (C34711 + C34710) * C51046 + C34683 * C51057) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C50797 * C51053 -
           (C45449 * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C50797 * C51054 +
           (C44572 * C51057 + (C35921 + C35922) * C51046 +
            (C45460 + C45461) * C25398) *
               C50735 * C50797 * C1328) *
              C51001 +
          ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
               C50735 * C50797 * C51054 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C50797 * C51053 -
           ((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C25398 +
            (C34711 + C34710) * C51046 + C34683 * C51057) *
               C50735 * C50797 * C1328) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C51057 +
                    (C34706 + C34707) * C51046 + C44572 * C25398) *
                       C50735 * C51010 -
                   (C46106 * C25398 + (C35581 + C35582) * C51046 +
                    (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                     C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                        C51057) *
                       C50735 * C50861) *
                      C51053 +
                  (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
                    (C46117 + C46118) * C25398) *
                       C50735 * C50861 -
                   (C45449 * C25398 + (C34708 + C34709) * C51046 +
                    (C34707 + C34706) * C51057) *
                       C50735 * C51010) *
                      C51054 +
                  ((C44572 * C51057 + (C35921 + C35922) * C51046 +
                    (C45460 + C45461) * C25398) *
                       C50735 * C51010 -
                   ((C31573 * C11445 + C46111 + C46111 + C50935 * C11447 +
                     C31571 * C9685 + C46112 + C46112 + C31569 * C9689) *
                        C25398 +
                    (C46118 + C46117) * C51046 + C46106 * C51057) *
                       C50735 * C50861) *
                      C1328) *
                 C50762) /
                (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
            C31577 + C31577 + C50935 * C480) *
               C51057 +
           (C34706 + C34707) * C51046 + C44572 * C25398) *
              C50735 * C50797 * C1093 -
          (C45449 * C25398 + (C34708 + C34709) * C51046 +
           (C34707 + C34706) * C51057) *
              C50735 * C50797 * C1094 +
          (C44572 * C51057 + (C35921 + C35922) * C51046 +
           (C45460 + C45461) * C25398) *
              C50735 * C50797 * C1095 -
          ((C31573 * C11780 + C45454 + C45454 + C50935 * C11782 +
            C31571 * C9027 + C45455 + C45455 + C31569 * C9031) *
               C25398 +
           (C45461 + C45460) * C51046 + C45449 * C51057) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C50797 * C1022 -
           ((C35922 + C35921) * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C50797 * C50833) *
              C1024 +
          ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
               C50735 * C50797 * C50833 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
               C50735 * C50797 * C1022 -
           ((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
             C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                C25398 +
            (C31833 + C31832) * C51046 + C32182 * C51057) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C454 -
           ((C36790 + C36789) * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C455 +
           ((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
             C31995 + C31995 + C50935 * C1854) *
                C51057 +
            (C36129 + C36130) * C51046 + (C45618 + C45619) * C25398) *
               C50735 * C456) *
              C1022 +
          (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
            (C31571 * C4062 + C36784 + C36784 + C31569 * C4068 +
             C31573 * C9186 + C36783 + C36783 + C50935 * C9190) *
                C25398) *
               C50735 * C455 -
           (C45449 * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C454 -
           ((C31573 * C12051 + C45612 + C45612 + C50935 * C12053 +
             C31571 * C9186 + C45613 + C45613 + C31569 * C9190) *
                C25398 +
            (C45619 + C45618) * C51046 + (C36130 + C36129) * C51057) *
               C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51057 +
             (C34706 + C34707) * C51046 + C44572 * C25398) *
                C50735 * C51010 -
            ((C36790 + C36789) * C25398 + (C35581 + C35582) * C51046 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51057) *
                C50735 * C50861) *
               C1022 +
           (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
             (C31571 * C4062 + C36784 + C36784 + C31569 * C4068 +
              C31573 * C9186 + C36783 + C36783 + C50935 * C9190) *
                 C25398) *
                C50735 * C50861 -
            (C45449 * C25398 + (C34708 + C34709) * C51046 +
             (C34707 + C34706) * C51057) *
                C50735 * C51010) *
               C50833) *
              C51001 +
          ((((C32031 + C32030) * C51057 + C35568 * C51046 +
             (C35583 + C35584) * C25398) *
                C50735 * C50861 -
            (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
                C50735 * C51010) *
               C1022 +
           ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
                C50735 * C51010 -
            ((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C25398 +
             (C35584 + C35583) * C51046 + C35563 * C51057) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C50797 * C1022 -
           ((C35922 + C35921) * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C50797 * C50833) *
              C1024 +
          ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
               C50735 * C50797 * C50833 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
               C50735 * C50797 * C1022 -
           ((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
             C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                C25398 +
            (C31833 + C31832) * C51046 + C32182 * C51057) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
            C31577 + C31577 + C50935 * C480) *
               C51057 +
           (C34706 + C34707) * C51046 + C44572 * C25398) *
              C50735 * C50797 * C1093 -
          (C45449 * C25398 + (C34708 + C34709) * C51046 +
           (C34707 + C34706) * C51057) *
              C50735 * C50797 * C1094 +
          (C44572 * C51057 + (C35921 + C35922) * C51046 +
           (C45460 + C45461) * C25398) *
              C50735 * C50797 * C1095 -
          ((C31573 * C11780 + C45454 + C45454 + C50935 * C11782 +
            C31571 * C9027 + C45455 + C45455 + C31569 * C9031) *
               C25398 +
           (C45461 + C45460) * C51046 + C45449 * C51057) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51057 +
             (C34706 + C34707) * C51046 + C44572 * C25398) *
                C50735 * C1673 -
            (C46106 * C25398 + (C35581 + C35582) * C51046 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51057) *
                C50735 * C50861) *
               C51009 +
           (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
             (C46117 + C46118) * C25398) *
                C50735 * C50861 -
            (C45449 * C25398 + (C34708 + C34709) * C51046 +
             (C34707 + C34706) * C51057) *
                C50735 * C1673) *
               C50833) *
              C51001 +
          ((((C32031 + C32030) * C51057 + C35568 * C51046 +
             (C35583 + C35584) * C25398) *
                C50735 * C50861 -
            (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
                C50735 * C1673) *
               C51009 +
           ((C34682 * C51057 + C34689 * C51046 + (C34710 + C34711) * C25398) *
                C50735 * C1673 -
            ((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C25398 +
             (C35584 + C35583) * C51046 + C35563 * C51057) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C51057 +
                    (C34706 + C34707) * C51046 + C44572 * C25398) *
                       C50735 * C51055 -
                   (C46106 * C25398 + (C35581 + C35582) * C51046 +
                    (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                     C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                        C51057) *
                       C50735 * C51056 +
                   ((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                     C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                        C51057 +
                    (C36129 + C36130) * C51046 + (C45618 + C45619) * C25398) *
                       C50735 * C2089) *
                      C51009 +
                  (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
                    (C46117 + C46118) * C25398) *
                       C50735 * C51056 -
                   (C45449 * C25398 + (C34708 + C34709) * C51046 +
                    (C34707 + C34706) * C51057) *
                       C50735 * C51055 -
                   ((C31573 * C12051 + C45612 + C45612 + C50935 * C12053 +
                     C31571 * C9186 + C45613 + C45613 + C31569 * C9190) *
                        C25398 +
                    (C45619 + C45618) * C51046 + (C36130 + C36129) * C51057) *
                       C50735 * C2089) *
                      C50833) *
                 C50762) /
                (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C1673 -
           (C46106 * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C50861) *
              C275 +
          (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
            (C46117 + C46118) * C25398) *
               C50735 * C50861 -
           (C45449 * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C1673) *
              C276 +
          ((C44572 * C51057 + (C35921 + C35922) * C51046 +
            (C45460 + C45461) * C25398) *
               C50735 * C1673 -
           ((C31573 * C11445 + C46111 + C46111 + C50935 * C11447 +
             C31571 * C9685 + C46112 + C46112 + C31569 * C9689) *
                C25398 +
            (C46118 + C46117) * C51046 + C46106 * C51057) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C1673 -
           (C46106 * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C32031 + C32030) * C51057 + C35568 * C51046 +
            (C35583 + C35584) * C25398) *
               C50735 * C50861 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
               C50735 * C1673 -
           ((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
             C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                C25398 +
            (C32577 + C32576) * C51046 + C32342 * C51057) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
            C31577 + C31577 + C50935 * C480) *
               C51057 +
           (C34706 + C34707) * C51046 + C44572 * C25398) *
              C50735 * C1839 -
          (C46106 * C25398 + (C35581 + C35582) * C51046 +
           (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
            C31993 + C31993 + C31569 * C480) *
               C51057) *
              C50735 * C1840 +
          ((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
            C31995 + C31995 + C50935 * C1854) *
               C51057 +
           (C36129 + C36130) * C51046 + (C45618 + C45619) * C25398) *
              C50735 * C1841 -
          ((C31573 * C14655 + C46509 + C46509 + C50935 * C14659 +
            C31571 * C10088 + C46510 + C46510 + C31569 * C10092) *
               C25398 +
           (C31573 * C14656 + C37311 + C37311 + C50935 * C14660 +
            C31571 * C4469 + C37312 + C37312 + C31569 * C4475) *
               C51046 +
           (C31573 * C7357 + C33866 + C33866 + C50935 * C7363 + C31571 * C1846 +
            C33867 + C33867 + C31569 * C1854) *
               C51057) *
              C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C51055 -
           (C46106 * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C51056 +
           ((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
             C31995 + C31995 + C50935 * C1854) *
                C51057 +
            (C36129 + C36130) * C51046 + (C45618 + C45619) * C25398) *
               C50735 * C2089) *
              C50781 * C51001 +
          (((C32031 + C32030) * C51057 + C35568 * C51046 +
            (C35583 + C35584) * C25398) *
               C50735 * C51056 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C51055 -
           ((C31573 * C10087 + C36121 + C36121 + C50935 * C10091 +
             C31571 * C3558 + C36122 + C36122 + C31569 * C3564) *
                C25398 +
            (C34915 + C34914) * C51046 + (C32033 + C32032) * C51057) *
               C50735 * C2089) *
              C50781 * C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C1673 -
           (C46106 * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C32031 + C32030) * C51057 + C35568 * C51046 +
            (C35583 + C35584) * C25398) *
               C50735 * C50861 -
           (C34683 * C25398 + C34684 * C51046 + (C31621 + C31620) * C51057) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C31628 * C51057 + C35110 * C51046 + (C31832 + C31833) * C25398) *
               C50735 * C1673 -
           ((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
             C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                C25398 +
            (C32577 + C32576) * C51046 + C32342 * C51057) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51057 +
            (C34706 + C34707) * C51046 + C44572 * C25398) *
               C50735 * C1673 -
           (C46106 * C25398 + (C35581 + C35582) * C51046 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51057) *
               C50735 * C50861) *
              C275 +
          (((C35582 + C35581) * C51057 + (C36789 + C36790) * C51046 +
            (C46117 + C46118) * C25398) *
               C50735 * C50861 -
           (C45449 * C25398 + (C34708 + C34709) * C51046 +
            (C34707 + C34706) * C51057) *
               C50735 * C1673) *
              C276 +
          ((C44572 * C51057 + (C35921 + C35922) * C51046 +
            (C45460 + C45461) * C25398) *
               C50735 * C1673 -
           ((C31573 * C11445 + C46111 + C46111 + C50935 * C11447 +
             C31571 * C9685 + C46112 + C46112 + C31569 * C9689) *
                C25398 +
            (C46118 + C46117) * C51046 + C46106 * C51057) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C50797 * C51009 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C50797 * C50833) *
                      C51051 +
                  (((C38316 + C38315 + C38314) * C22727 +
                    (C38317 + C38318 + C38319) * C50909) *
                       C50735 * C50797 * C50833 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C50797 * C51009) *
                      C51052 +
                  (((C38122 + C38121 + C38120) * C22727 +
                    (C38675 + C38676 + C38677) * C50909) *
                       C50735 * C50797 * C51009 -
                   ((C38063 * C3557 + C38299 + C38299 + C38058 * C3563 +
                     C38061 * C1560 + C38300 + C38300 + C51049 * C1568 +
                     C38059 * C286 + C38301 + C38301 + C51058 * C306) *
                        C50909 +
                    (C38677 + C38676 + C38675) * C22727) *
                       C50735 * C50797 * C50833) *
                      C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C22727 +
                     (C47265 + C47266 + C47267) * C50909) *
                        C50735 * C51010 -
                    ((C47915 + C47916 + C47917) * C50909 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C22727) *
                        C50735 * C50861) *
                       C51009 +
                   (((C47917 + C47916 + C47915) * C22727 +
                     (C38059 * C1562 + C39953 + C39953 + C51058 * C1570 +
                      C38061 * C3559 + C39952 + C39952 + C51049 * C3565 +
                      C38063 * C10088 + C39951 + C39951 + C38058 * C10092) *
                         C50909) *
                        C50735 * C50861 -
                    ((C47268 + C47269 + C47270) * C50909 +
                     (C47267 + C47266 + C47265) * C22727) *
                        C50735 * C51010) *
                       C50833) *
                      C278 +
                  ((((C38510 + C38509 + C38508) * C22727 +
                     (C39057 + C39058 + C39059) * C50909) *
                        C50735 * C50861 -
                    ((C38314 + C38315 + C38316) * C50909 +
                     (C38119 + C38118 + C38117) * C22727) *
                        C50735 * C51010) *
                       C51009 +
                   (((C38316 + C38315 + C38314) * C22727 +
                     (C38317 + C38318 + C38319) * C50909) *
                        C50735 * C51010 -
                    ((C38063 * C10087 + C39948 + C39948 + C38058 * C10091 +
                      C38061 * C3558 + C39949 + C39949 + C51049 * C3564 +
                      C38059 * C1561 + C39950 + C39950 + C51058 * C1569) *
                         C50909 +
                     (C39059 + C39058 + C39057) * C22727) *
                        C50735 * C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C50797 * C275 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C50797 * C276 +
                   ((C47270 + C47269 + C47268) * C22727 +
                    (C38059 * C1101 + C39309 + C39309 + C51058 * C1109 +
                     C38061 * C4062 + C39308 + C39308 + C51049 * C4068 +
                     C38063 * C9186 + C39307 + C39307 + C38058 * C9190) *
                        C50909) *
                       C50735 * C50797 * C277) *
                      C278 +
                  (((C38316 + C38315 + C38314) * C22727 +
                    (C38317 + C38318 + C38319) * C50909) *
                       C50735 * C50797 * C276 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C50797 * C275 -
                   ((C38063 * C9185 + C39304 + C39304 + C38058 * C9189 +
                     C38061 * C4061 + C39305 + C39305 + C51049 * C4067 +
                     C38059 * C1100 + C39306 + C39306 + C51058 * C1108) *
                        C50909 +
                    (C38319 + C38318 + C38317) * C22727) *
                       C50735 * C50797 * C277) *
                      C50768)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                    C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                    C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                       C22727 +
                   (C38059 * C283 + C38283 + C38283 + C51058 * C303 +
                    C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                    C38063 * C1215 + C38281 + C38281 + C38058 * C1223) *
                       C50909) *
                      C50735 * C50797 * C50781 * C113 -
                  ((C38314 + C38315 + C38316) * C50909 +
                   (C38119 + C38118 + C38117) * C22727) *
                      C50735 * C50797 * C50781 * C114 +
                  ((C38122 + C38121 + C38120) * C22727 +
                   (C38675 + C38676 + C38677) * C50909) *
                      C50735 * C50797 * C50781 * C115 -
                  ((C38063 * C1212 + C38666 + C38666 + C38058 * C1220 +
                    C38061 * C889 + C38667 + C38667 + C51049 * C899 +
                    C38059 * C280 + C38668 + C38668 + C51058 * C300) *
                       C50909 +
                   (C38125 + C38124 + C38123) * C22727) *
                      C50735 * C50797 * C50781 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C454 -
                   ((C38063 * C4469 + C39038 + C39038 + C38058 * C4475 +
                     C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                     C38059 * C886 + C39036 + C39036 + C51058 * C896) *
                        C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C455 +
                   ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                     C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                     C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                        C22727 +
                    (C38059 * C1215 + C39461 + C39461 + C51058 * C1223 +
                     C38061 * C4469 + C39460 + C39460 + C51049 * C4475 +
                     C38063 * C14656 + C39459 + C39459 + C38058 * C14660) *
                        C50909) *
                       C50735 * C456) *
                      C50781 * C278 +
                  (((C38510 + C38509 + C38508) * C22727 +
                    (C39057 + C39058 + C39059) * C50909) *
                       C50735 * C455 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C454 -
                   ((C38063 * C16648 + C39456 + C39456 + C38058 * C16650 +
                     C38061 * C4468 + C39457 + C39457 + C51049 * C4474 +
                     C38059 * C1214 + C39458 + C39458 + C51058 * C1222) *
                        C50909 +
                    (C38513 + C38512 + C38511) * C22727) *
                       C50735 * C456) *
                      C50781 * C50768)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C51010 -
                   ((C38063 * C4469 + C39038 + C39038 + C38058 * C4475 +
                     C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                     C38059 * C886 + C39036 + C39036 + C51058 * C896) *
                        C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C50861) *
                      C50781 * C51051 +
                  (((C38510 + C38509 + C38508) * C22727 +
                    (C39057 + C39058 + C39059) * C50909) *
                       C50735 * C50861 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C51010) *
                      C50781 * C51052 +
                  (((C38122 + C38121 + C38120) * C22727 +
                    (C38675 + C38676 + C38677) * C50909) *
                       C50735 * C51010 -
                   ((C38063 * C4467 + C39048 + C39048 + C38058 * C4473 +
                     C38061 * C1213 + C39049 + C39049 + C51049 * C1221 +
                     C38059 * C888 + C39050 + C39050 + C51058 * C898) *
                        C50909 +
                    (C38841 + C38840 + C38839) * C22727) *
                       C50735 * C50861) *
                      C50781 * C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                    C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                    C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                       C22727 +
                   (C38059 * C283 + C38283 + C38283 + C51058 * C303 +
                    C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                    C38063 * C1215 + C38281 + C38281 + C38058 * C1223) *
                       C50909) *
                      C50735 * C50797 * C50781 * C113 -
                  ((C38314 + C38315 + C38316) * C50909 +
                   (C38119 + C38118 + C38117) * C22727) *
                      C50735 * C50797 * C50781 * C114 +
                  ((C38122 + C38121 + C38120) * C22727 +
                   (C38675 + C38676 + C38677) * C50909) *
                      C50735 * C50797 * C50781 * C115 -
                  ((C38063 * C1212 + C38666 + C38666 + C38058 * C1220 +
                    C38061 * C889 + C38667 + C38667 + C51049 * C899 +
                    C38059 * C280 + C38668 + C38668 + C51058 * C300) *
                       C50909 +
                   (C38125 + C38124 + C38123) * C22727) *
                      C50735 * C50797 * C50781 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C50797 * C275 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C50797 * C276 +
                   ((C47270 + C47269 + C47268) * C22727 +
                    (C38059 * C1101 + C39309 + C39309 + C51058 * C1109 +
                     C38061 * C4062 + C39308 + C39308 + C51049 * C4068 +
                     C38063 * C9186 + C39307 + C39307 + C38058 * C9190) *
                        C50909) *
                       C50735 * C50797 * C277) *
                      C278 +
                  (((C38316 + C38315 + C38314) * C22727 +
                    (C38317 + C38318 + C38319) * C50909) *
                       C50735 * C50797 * C276 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C50797 * C275 -
                   ((C38063 * C9185 + C39304 + C39304 + C38058 * C9189 +
                     C38061 * C4061 + C39305 + C39305 + C51049 * C4067 +
                     C38059 * C1100 + C39306 + C39306 + C51058 * C1108) *
                        C50909 +
                    (C38319 + C38318 + C38317) * C22727) *
                       C50735 * C50797 * C277) *
                      C50768)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C50797 * C51053 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C50797 * C51054 +
                   ((C47270 + C47269 + C47268) * C22727 +
                    (C48177 + C48178 + C48179) * C50909) *
                       C50735 * C50797 * C1328) *
                      C51001 +
                  (((C38316 + C38315 + C38314) * C22727 +
                    (C38317 + C38318 + C38319) * C50909) *
                       C50735 * C50797 * C51054 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C50797 * C51053 -
                   ((C38063 * C9185 + C39304 + C39304 + C38058 * C9189 +
                     C38061 * C4061 + C39305 + C39305 + C51049 * C4067 +
                     C38059 * C1100 + C39306 + C39306 + C51058 * C1108) *
                        C50909 +
                    (C38319 + C38318 + C38317) * C22727) *
                       C50735 * C50797 * C1328) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C51010 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C50861) *
                      C51053 +
                  (((C47917 + C47916 + C47915) * C22727 +
                    (C48845 + C48846 + C48847) * C50909) *
                       C50735 * C50861 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C51010) *
                      C51054 +
                  (((C47270 + C47269 + C47268) * C22727 +
                    (C48177 + C48178 + C48179) * C50909) *
                       C50735 * C51010 -
                   ((C38063 * C12051 + C48836 + C48836 + C38058 * C12053 +
                     C38061 * C9186 + C48837 + C48837 + C51049 * C9190 +
                     C38059 * C4062 + C48838 + C48838 + C51058 * C4068) *
                        C50909 +
                    (C48847 + C48846 + C48845) * C22727) *
                       C50735 * C50861) *
                      C1328) *
                 C50762) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                    C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                    C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                       C22727 +
                   (C47265 + C47266 + C47267) * C50909) *
                      C50735 * C50797 * C1093 -
                  ((C47268 + C47269 + C47270) * C50909 +
                   (C47267 + C47266 + C47265) * C22727) *
                      C50735 * C50797 * C1094 +
                  ((C47270 + C47269 + C47268) * C22727 +
                   (C48177 + C48178 + C48179) * C50909) *
                      C50735 * C50797 * C1095 -
                  ((C38063 * C11445 + C48168 + C48168 + C38058 * C11447 +
                    C38061 * C9685 + C48169 + C48169 + C51049 * C9689 +
                    C38059 * C3396 + C48170 + C48170 + C51058 * C3402) *
                       C50909 +
                   (C48179 + C48178 + C48177) * C22727) *
                      C50735 * C50797 * C1096) *
                 C50762) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C50797 * C1022 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C50797 * C50833) *
                      C1024 +
                  (((C38316 + C38315 + C38314) * C22727 +
                    (C38317 + C38318 + C38319) * C50909) *
                       C50735 * C50797 * C50833 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C50797 * C1022) *
                      C1025 +
                  (((C38122 + C38121 + C38120) * C22727 +
                    (C38675 + C38676 + C38677) * C50909) *
                       C50735 * C50797 * C1022 -
                   ((C38063 * C3557 + C38299 + C38299 + C38058 * C3563 +
                     C38061 * C1560 + C38300 + C38300 + C51049 * C1568 +
                     C38059 * C286 + C38301 + C38301 + C51058 * C306) *
                        C50909 +
                    (C38677 + C38676 + C38675) * C22727) *
                       C50735 * C50797 * C50833) *
                      C1026)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C454 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C455 +
                   ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                     C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                     C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                        C22727 +
                    (C48341 + C48342 + C48343) * C50909) *
                       C50735 * C456) *
                      C1022 +
                  (((C47917 + C47916 + C47915) * C22727 +
                    (C38059 * C1562 + C39953 + C39953 + C51058 * C1570 +
                     C38061 * C3559 + C39952 + C39952 + C51049 * C3565 +
                     C38063 * C10088 + C39951 + C39951 + C38058 * C10092) *
                        C50909) *
                       C50735 * C455 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C454 -
                   ((C38063 * C14655 + C48332 + C48332 + C38058 * C14659 +
                     C38061 * C10088 + C48333 + C48333 + C51049 * C10092 +
                     C38059 * C3559 + C48334 + C48334 + C51058 * C3565) *
                        C50909 +
                    (C48343 + C48342 + C48341) * C22727) *
                       C50735 * C456) *
                      C50833) *
                 C50762) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C22727 +
                     (C47265 + C47266 + C47267) * C50909) *
                        C50735 * C51010 -
                    ((C47915 + C47916 + C47917) * C50909 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C22727) *
                        C50735 * C50861) *
                       C1022 +
                   (((C47917 + C47916 + C47915) * C22727 +
                     (C38059 * C1562 + C39953 + C39953 + C51058 * C1570 +
                      C38061 * C3559 + C39952 + C39952 + C51049 * C3565 +
                      C38063 * C10088 + C39951 + C39951 + C38058 * C10092) *
                         C50909) *
                        C50735 * C50861 -
                    ((C47268 + C47269 + C47270) * C50909 +
                     (C47267 + C47266 + C47265) * C22727) *
                        C50735 * C51010) *
                       C50833) *
                      C51001 +
                  ((((C38510 + C38509 + C38508) * C22727 +
                     (C39057 + C39058 + C39059) * C50909) *
                        C50735 * C50861 -
                    ((C38314 + C38315 + C38316) * C50909 +
                     (C38119 + C38118 + C38117) * C22727) *
                        C50735 * C51010) *
                       C1022 +
                   (((C38316 + C38315 + C38314) * C22727 +
                     (C38317 + C38318 + C38319) * C50909) *
                        C50735 * C51010 -
                    ((C38063 * C10087 + C39948 + C39948 + C38058 * C10091 +
                      C38061 * C3558 + C39949 + C39949 + C51049 * C3564 +
                      C38059 * C1561 + C39950 + C39950 + C51058 * C1569) *
                         C50909 +
                     (C39059 + C39058 + C39057) * C22727) *
                        C50735 * C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C50797 * C1022 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C50797 * C50833) *
                      C1024 +
                  (((C38316 + C38315 + C38314) * C22727 +
                    (C38317 + C38318 + C38319) * C50909) *
                       C50735 * C50797 * C50833 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C50797 * C1022) *
                      C1025 +
                  (((C38122 + C38121 + C38120) * C22727 +
                    (C38675 + C38676 + C38677) * C50909) *
                       C50735 * C50797 * C1022 -
                   ((C38063 * C3557 + C38299 + C38299 + C38058 * C3563 +
                     C38061 * C1560 + C38300 + C38300 + C51049 * C1568 +
                     C38059 * C286 + C38301 + C38301 + C51058 * C306) *
                        C50909 +
                    (C38677 + C38676 + C38675) * C22727) *
                       C50735 * C50797 * C50833) *
                      C1026)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                    C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                    C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                       C22727 +
                   (C47265 + C47266 + C47267) * C50909) *
                      C50735 * C50797 * C1093 -
                  ((C47268 + C47269 + C47270) * C50909 +
                   (C47267 + C47266 + C47265) * C22727) *
                      C50735 * C50797 * C1094 +
                  ((C47270 + C47269 + C47268) * C22727 +
                   (C48177 + C48178 + C48179) * C50909) *
                      C50735 * C50797 * C1095 -
                  ((C38063 * C11445 + C48168 + C48168 + C38058 * C11447 +
                    C38061 * C9685 + C48169 + C48169 + C51049 * C9689 +
                    C38059 * C3396 + C48170 + C48170 + C51058 * C3402) *
                       C50909 +
                   (C48179 + C48178 + C48177) * C22727) *
                      C50735 * C50797 * C1096) *
                 C50762) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C22727 +
                     (C47265 + C47266 + C47267) * C50909) *
                        C50735 * C1673 -
                    ((C47915 + C47916 + C47917) * C50909 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C22727) *
                        C50735 * C50861) *
                       C51009 +
                   (((C47917 + C47916 + C47915) * C22727 +
                     (C48845 + C48846 + C48847) * C50909) *
                        C50735 * C50861 -
                    ((C47268 + C47269 + C47270) * C50909 +
                     (C47267 + C47266 + C47265) * C22727) *
                        C50735 * C1673) *
                       C50833) *
                      C51001 +
                  ((((C38510 + C38509 + C38508) * C22727 +
                     (C39057 + C39058 + C39059) * C50909) *
                        C50735 * C50861 -
                    ((C38314 + C38315 + C38316) * C50909 +
                     (C38119 + C38118 + C38117) * C22727) *
                        C50735 * C1673) *
                       C51009 +
                   (((C38316 + C38315 + C38314) * C22727 +
                     (C38317 + C38318 + C38319) * C50909) *
                        C50735 * C1673 -
                    ((C38063 * C10087 + C39948 + C39948 + C38058 * C10091 +
                      C38061 * C3558 + C39949 + C39949 + C51049 * C3564 +
                      C38059 * C1561 + C39950 + C39950 + C51058 * C1569) *
                         C50909 +
                     (C39059 + C39058 + C39057) * C22727) *
                        C50735 * C50861) *
                       C50833) *
                      C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C51055 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C51056 +
                   ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                     C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                     C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                        C22727 +
                    (C48341 + C48342 + C48343) * C50909) *
                       C50735 * C2089) *
                      C51009 +
                  (((C47917 + C47916 + C47915) * C22727 +
                    (C48845 + C48846 + C48847) * C50909) *
                       C50735 * C51056 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C51055 -
                   ((C38063 * C14655 + C48332 + C48332 + C38058 * C14659 +
                     C38061 * C10088 + C48333 + C48333 + C51049 * C10092 +
                     C38059 * C3559 + C48334 + C48334 + C51058 * C3565) *
                        C50909 +
                    (C48343 + C48342 + C48341) * C22727) *
                       C50735 * C2089) *
                      C50833) *
                 C50762) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C1673 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C50861) *
                      C275 +
                  (((C47917 + C47916 + C47915) * C22727 +
                    (C48845 + C48846 + C48847) * C50909) *
                       C50735 * C50861 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C1673) *
                      C276 +
                  (((C47270 + C47269 + C47268) * C22727 +
                    (C48177 + C48178 + C48179) * C50909) *
                       C50735 * C1673 -
                   ((C38063 * C12051 + C48836 + C48836 + C38058 * C12053 +
                     C38061 * C9186 + C48837 + C48837 + C51049 * C9190 +
                     C38059 * C4062 + C48838 + C48838 + C51058 * C4068) *
                        C50909 +
                    (C48847 + C48846 + C48845) * C22727) *
                       C50735 * C50861) *
                      C277) *
                 C50762) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C1673 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C50861) *
                      C50781 * C1024 +
                  (((C38510 + C38509 + C38508) * C22727 +
                    (C39057 + C39058 + C39059) * C50909) *
                       C50735 * C50861 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C1673) *
                      C50781 * C1025 +
                  (((C38122 + C38121 + C38120) * C22727 +
                    (C38675 + C38676 + C38677) * C50909) *
                       C50735 * C1673 -
                   ((C38063 * C4467 + C39048 + C39048 + C38058 * C4473 +
                     C38061 * C1213 + C39049 + C39049 + C51049 * C1221 +
                     C38059 * C888 + C39050 + C39050 + C51058 * C898) *
                        C50909 +
                    (C38841 + C38840 + C38839) * C22727) *
                       C50735 * C50861) *
                      C50781 * C1026)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                    C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                    C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                       C22727 +
                   (C47265 + C47266 + C47267) * C50909) *
                      C50735 * C1839 -
                  ((C47915 + C47916 + C47917) * C50909 +
                   (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                    C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                    C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                       C22727) *
                      C50735 * C1840 +
                  ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                    C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                    C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                       C22727 +
                   (C48341 + C48342 + C48343) * C50909) *
                      C50735 * C1841 -
                  ((C38063 * C20278 + C49238 + C49238 + C38058 * C20280 +
                    C38061 * C14656 + C49239 + C49239 + C51049 * C14660 +
                    C38059 * C4469 + C49240 + C49240 + C51058 * C4475) *
                       C50909 +
                   (C38063 * C17540 + C40347 + C40347 + C38058 * C17544 +
                    C38061 * C7357 + C40348 + C40348 + C51049 * C7363 +
                    C38059 * C1846 + C40349 + C40349 + C51058 * C1854) *
                       C22727) *
                      C50735 * C1842) *
                 C50781 * C50762) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C51055 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C51056 +
                   ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                     C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                     C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                        C22727 +
                    (C48341 + C48342 + C48343) * C50909) *
                       C50735 * C2089) *
                      C50781 * C51001 +
                  (((C38510 + C38509 + C38508) * C22727 +
                    (C39057 + C39058 + C39059) * C50909) *
                       C50735 * C51056 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C51055 -
                   ((C38063 * C16648 + C39456 + C39456 + C38058 * C16650 +
                     C38061 * C4468 + C39457 + C39457 + C51049 * C4474 +
                     C38059 * C1214 + C39458 + C39458 + C51058 * C1222) *
                        C50909 +
                    (C38513 + C38512 + C38511) * C22727) *
                       C50735 * C2089) *
                      C50781 * C50768)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C1673 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C50861) *
                      C50781 * C1024 +
                  (((C38510 + C38509 + C38508) * C22727 +
                    (C39057 + C39058 + C39059) * C50909) *
                       C50735 * C50861 -
                   ((C38314 + C38315 + C38316) * C50909 +
                    (C38119 + C38118 + C38117) * C22727) *
                       C50735 * C1673) *
                      C50781 * C1025 +
                  (((C38122 + C38121 + C38120) * C22727 +
                    (C38675 + C38676 + C38677) * C50909) *
                       C50735 * C1673 -
                   ((C38063 * C4467 + C39048 + C39048 + C38058 * C4473 +
                     C38061 * C1213 + C39049 + C39049 + C51049 * C1221 +
                     C38059 * C888 + C39050 + C39050 + C51058 * C898) *
                        C50909 +
                    (C38841 + C38840 + C38839) * C22727) *
                       C50735 * C50861) *
                      C50781 * C1026)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C22727 +
                    (C47265 + C47266 + C47267) * C50909) *
                       C50735 * C1673 -
                   ((C47915 + C47916 + C47917) * C50909 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C22727) *
                       C50735 * C50861) *
                      C275 +
                  (((C47917 + C47916 + C47915) * C22727 +
                    (C48845 + C48846 + C48847) * C50909) *
                       C50735 * C50861 -
                   ((C47268 + C47269 + C47270) * C50909 +
                    (C47267 + C47266 + C47265) * C22727) *
                       C50735 * C1673) *
                      C276 +
                  (((C47270 + C47269 + C47268) * C22727 +
                    (C48177 + C48178 + C48179) * C50909) *
                       C50735 * C1673 -
                   ((C38063 * C12051 + C48836 + C48836 + C38058 * C12053 +
                     C38061 * C9186 + C48837 + C48837 + C51049 * C9190 +
                     C38059 * C4062 + C48838 + C48838 + C51058 * C4068) *
                        C50909 +
                    (C48847 + C48846 + C48845) * C22727) *
                       C50735 * C50861) *
                      C277) *
                 C50762) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C51009 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C50833) *
              C51051 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C50833 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C51009) *
              C51052 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C50797 * C51009 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C7956 +
             C350 * C7955 + C345 * C7954) *
                C50740 +
            (C8431 + C8430 + C8429) * C50992) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C51009 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C50833) *
              C51051 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C50833 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C51009) *
              C51052 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
               C51009 -
           ((C117 * C636 + C642 + C642 + C50923 * C638) * C50893 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C50797 * C51009 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C50797 * C50833) *
              C51051 +
          (((C15509 + C15508 + C15507) * C50893 * C50992 +
            (C15868 + C15869 + C15870) * C50893 * C50740) *
               C50797 * C50833 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C50797 * C51009) *
              C51052 +
          (((C15315 + C15314 + C15313) * C50893 * C50992 +
            (C15316 + C15317 + C15318) * C50893 * C50740) *
               C50797 * C51009 -
           ((C15256 * C1212 + C15859 + C15859 + C15251 * C1220 + C15254 * C889 +
             C15860 + C15860 + C15250 * C899 + C15252 * C280 + C15861 + C15861 +
             C15249 * C300) *
                C50893 * C50740 +
            (C15870 + C15869 + C15868) * C50893 * C50992) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
              C2470 * C7955 + C2471 * C7956) *
                 C50992 +
             (C7960 + C7961 + C7962) * C50740) *
                C51010 -
            ((C8272 + C8273 + C8274) * C50740 +
             (C4077 * C7956 + C3146 * C7955 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                 C50992) *
                C50861) *
               C51009 +
           (((C3146 * C7954 + C4077 * C7955 +
              (C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C7956) *
                 C50992 +
             (C8775 + C8776 + C8782) * C50740) *
                C50861 -
            ((C8115 + C8116 + C8117) * C50740 +
             (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
                C51010) *
               C50833) *
              C278 +
          ((((C8274 + C8273 + C8272) * C50992 +
             (C8578 + C8579 + C8580) * C50740) *
                C50861 -
            ((C7963 + C7964 + C7965) * C50740 +
             (C7962 + C7961 + C7960) * C50992) *
                C51010) *
               C51009 +
           (((C8117 + C8116 + C8115) * C50992 +
             (C8429 + C8430 + C8431) * C50740) *
                C51010 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C7956 +
              C3148 * C7955 + C920 * C7954) *
                 C50740 +
             (C8782 + C8776 + C8775) * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51010 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                C50861) *
               C51009 +
           (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50861 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                C51010) *
               C50833) *
              C278 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51010) *
               C51009 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51010 -
            ((C117 * C890 + C912 + C912 + C50923 * C900) * C50893 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
              C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 +
              C15261 + C15251 * C481) *
                 C50893 * C50992 +
             (C15310 + C15311 + C15312) * C50893 * C50740) *
                C51010 -
            ((C15701 + C15702 + C15703) * C50893 * C50740 +
             (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 +
              C15254 * C461 + C15669 + C15669 + C15250 * C481 + C15252 * C460 +
              C15670 + C15670 + C15249 * C480) *
                 C50893 * C50992) *
                C50861) *
               C51009 +
           (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
              C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
              C16231 + C15251 * C4475) *
                 C50893 * C50992 +
             (C16250 + C16251 + C16252) * C50893 * C50740) *
                C50861 -
            ((C15507 + C15508 + C15509) * C50893 * C50740 +
             (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 +
              C15254 * C886 + C15475 + C15475 + C15250 * C896 + C15252 * C283 +
              C15476 + C15476 + C15249 * C303) *
                 C50893 * C50992) *
                C51010) *
               C50833) *
              C278 +
          ((((C15703 + C15702 + C15701) * C50893 * C50992 +
             (C16032 + C16033 + C16034) * C50893 * C50740) *
                C50861 -
            ((C15313 + C15314 + C15315) * C50893 * C50740 +
             (C15312 + C15311 + C15310) * C50893 * C50992) *
                C51010) *
               C51009 +
           (((C15509 + C15508 + C15507) * C50893 * C50992 +
             (C15868 + C15869 + C15870) * C50893 * C50740) *
                C51010 -
            ((C15256 * C4467 + C16241 + C16241 + C15251 * C4473 +
              C15254 * C1213 + C16242 + C16242 + C15250 * C1221 +
              C15252 * C888 + C16243 + C16243 + C15249 * C898) *
                 C50893 * C50740 +
             (C16252 + C16251 + C16250) * C50893 * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
               C173 * C108 + C174 * C109 + C175 * C110) *
                  C50797 * C50781 * C113 -
              (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
                  C50781 * C114 +
              (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
                  C50781 * C115 -
              ((C117 * C125 + C157 + C157 + C50923 * C139) * C50893 * C110 +
               C177 * C109 + C176 * C108 + C175 * C107) *
                  C50797 * C50781 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C50797 * C275 -
               (C351 * C110 + C352 * C109 + C353 * C108 +
                (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                   C50797 * C276 +
               ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
                C354 * C108 + C355 * C109 + C356 * C110) *
                   C50797 * C277) *
                  C278 +
              ((C353 * C107 + C352 * C108 + C351 * C109 +
                (C117 * C288 + C331 + C331 + C50923 * C308) * C50893 * C110) *
                   C50797 * C276 -
               (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) *
                   C50797 * C275 -
               ((C117 * C289 + C332 + C332 + C50923 * C309) * C50893 * C110 +
                C356 * C109 + C355 * C108 + C354 * C107) *
                   C50797 * C277) *
                  C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C50781 * C278 +
          ((C530 * C107 + C529 * C108 + C528 * C109 +
            (C117 * C465 + C508 + C508 + C50923 * C485) * C50893 * C110) *
               C455 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C454 -
           ((C117 * C466 + C509 + C509 + C50923 * C486) * C50893 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C50781 * C113 -
          ((C7963 + C7964 + C7965) * C50740 +
           (C7962 + C7961 + C7960) * C50992) *
              C50797 * C50781 * C114 +
          ((C7965 + C7964 + C7963) * C50992 +
           (C7966 + C7967 + C7968) * C50740) *
              C50797 * C50781 * C115 -
          (((C117 * C289 + C332 + C332 + C50923 * C309) * C7956 + C645 * C7955 +
            C171 * C7954) *
               C50740 +
           (C7968 + C7967 + C7966) * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C275 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C276 +
           ((C2471 * C7954 + C3411 * C7955 +
             (C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C7956) *
                C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C50797 * C277) *
              C278 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C346 * C7954 + C349 * C7955 + C2473 * C7956) * C50740) *
               C50797 * C276 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C275 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C7956 +
             C2473 * C7955 + C349 * C7954) *
                C50740 +
            (C8125 + C8119 + C8118) * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C454 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 +
             (C117 * C3559 + C3571 + C3571 + C50923 * C3565) * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C456) *
              C50781 * C278 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C523 * C7954 + C920 * C7955 + C3148 * C7956) * C50740) *
               C455 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C454 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C7956 +
             C2637 * C7955 + C526 * C7954) *
                C50740 +
            (C8282 + C8276 + C8275) * C50992) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C50893 * C50992 +
           (C15310 + C15311 + C15312) * C50893 * C50740) *
              C50797 * C50781 * C113 -
          ((C15313 + C15314 + C15315) * C50893 * C50740 +
           (C15312 + C15311 + C15310) * C50893 * C50992) *
              C50797 * C50781 * C114 +
          ((C15315 + C15314 + C15313) * C50893 * C50992 +
           (C15316 + C15317 + C15318) * C50893 * C50740) *
              C50797 * C50781 * C115 -
          ((C15256 * C466 + C15289 + C15289 + C15251 * C486 + C15254 * C465 +
            C15290 + C15290 + C15250 * C485 + C15252 * C123 + C15291 + C15291 +
            C15249 * C137) *
               C50893 * C50740 +
           (C15318 + C15317 + C15316) * C50893 * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C50797 * C275 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C50797 * C276 +
           ((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
             C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
             C15479 + C15251 * C3565) *
                C50893 * C50992 +
            (C15510 + C15511 + C15512) * C50893 * C50740) *
               C50797 * C277) *
              C278 +
          (((C15509 + C15508 + C15507) * C50893 * C50992 +
            (C15252 * C281 + C15489 + C15489 + C15249 * C301 + C15254 * C888 +
             C15490 + C15490 + C15250 * C898 + C15256 * C1213 + C15491 +
             C15491 + C15251 * C1221) *
                C50893 * C50740) *
               C50797 * C276 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C50797 * C275 -
           ((C15256 * C3557 + C15492 + C15492 + C15251 * C3563 +
             C15254 * C1560 + C15493 + C15493 + C15250 * C1568 + C15252 * C286 +
             C15494 + C15494 + C15249 * C306) *
                C50893 * C50740 +
            (C15512 + C15511 + C15510) * C50893 * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C454 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C455 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C50893 * C50992 +
            (C15704 + C15705 + C15706) * C50893 * C50740) *
               C456) *
              C50781 * C278 +
          (((C15703 + C15702 + C15701) * C50893 * C50992 +
            (C15252 * C458 + C15683 + C15683 + C15249 * C478 + C15254 * C463 +
             C15684 + C15684 + C15250 * C483 + C15256 * C1844 + C15685 +
             C15685 + C15251 * C1852) *
                C50893 * C50740) *
               C455 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C454 -
           ((C15256 * C7355 + C15686 + C15686 + C15251 * C7361 +
             C15254 * C1844 + C15687 + C15687 + C15250 * C1852 + C15252 * C463 +
             C15688 + C15688 + C15249 * C483) *
                C50893 * C50740 +
            (C15706 + C15705 + C15704) * C50893 * C50992) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51010 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C50781 * C51051 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C50861 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C51010) *
              C50781 * C51052 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C51010 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C7956 +
             C921 * C7955 + C522 * C7954) *
                C50740 +
            (C8580 + C8579 + C8578) * C50992) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51010 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C50781 * C51051 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51010) *
              C50781 * C51052 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C51010 -
           ((C117 * C746 + C752 + C752 + C50923 * C748) * C50893 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C51010 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C50861) *
              C50781 * C51051 +
          (((C15703 + C15702 + C15701) * C50893 * C50992 +
            (C16032 + C16033 + C16034) * C50893 * C50740) *
               C50861 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C51010) *
              C50781 * C51052 +
          (((C15315 + C15314 + C15313) * C50893 * C50992 +
            (C15316 + C15317 + C15318) * C50893 * C50740) *
               C51010 -
           ((C15256 * C1843 + C16023 + C16023 + C15251 * C1851 + C15254 * C464 +
             C16024 + C16024 + C15250 * C484 + C15252 * C457 + C16025 + C16025 +
             C15249 * C477) *
                C50893 * C50740 +
            (C16034 + C16033 + C16032) * C50893 * C50992) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C275 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C276 +
           ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50797 * C277) *
              C278 +
          ((C353 * C107 + C352 * C108 + C351 * C109 +
            (C117 * C288 + C331 + C331 + C50923 * C308) * C50893 * C110) *
               C50797 * C276 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C275 -
           ((C117 * C289 + C332 + C332 + C50923 * C309) * C50893 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50797 * C50781 * C113 -
          (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
              C50781 * C114 +
          (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
              C50781 * C115 -
          ((C117 * C125 + C157 + C157 + C50923 * C139) * C50893 * C110 +
           C177 * C109 + C176 * C108 + C175 * C107) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C50781 * C113 -
          ((C7963 + C7964 + C7965) * C50740 +
           (C7962 + C7961 + C7960) * C50992) *
              C50797 * C50781 * C114 +
          ((C7965 + C7964 + C7963) * C50992 +
           (C7966 + C7967 + C7968) * C50740) *
              C50797 * C50781 * C115 -
          (((C117 * C289 + C332 + C332 + C50923 * C309) * C7956 + C645 * C7955 +
            C171 * C7954) *
               C50740 +
           (C7968 + C7967 + C7966) * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C275 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C276 +
           ((C2471 * C7954 + C3411 * C7955 +
             (C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C7956) *
                C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C50797 * C277) *
              C278 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C346 * C7954 + C349 * C7955 + C2473 * C7956) * C50740) *
               C50797 * C276 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C275 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C7956 +
             C2473 * C7955 + C349 * C7954) *
                C50740 +
            (C8125 + C8119 + C8118) * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C50893 * C50992 +
           (C15310 + C15311 + C15312) * C50893 * C50740) *
              C50797 * C50781 * C113 -
          ((C15313 + C15314 + C15315) * C50893 * C50740 +
           (C15312 + C15311 + C15310) * C50893 * C50992) *
              C50797 * C50781 * C114 +
          ((C15315 + C15314 + C15313) * C50893 * C50992 +
           (C15316 + C15317 + C15318) * C50893 * C50740) *
              C50797 * C50781 * C115 -
          ((C15256 * C466 + C15289 + C15289 + C15251 * C486 + C15254 * C465 +
            C15290 + C15290 + C15250 * C485 + C15252 * C123 + C15291 + C15291 +
            C15249 * C137) *
               C50893 * C50740 +
           (C15318 + C15317 + C15316) * C50893 * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C50797 * C275 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C50797 * C276 +
           ((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
             C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
             C15479 + C15251 * C3565) *
                C50893 * C50992 +
            (C15510 + C15511 + C15512) * C50893 * C50740) *
               C50797 * C277) *
              C278 +
          (((C15509 + C15508 + C15507) * C50893 * C50992 +
            (C15252 * C281 + C15489 + C15489 + C15249 * C301 + C15254 * C888 +
             C15490 + C15490 + C15250 * C898 + C15256 * C1213 + C15491 +
             C15491 + C15251 * C1221) *
                C50893 * C50740) *
               C50797 * C276 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C50797 * C275 -
           ((C15256 * C3557 + C15492 + C15492 + C15251 * C3563 +
             C15254 * C1560 + C15493 + C15493 + C15250 * C1568 + C15252 * C286 +
             C15494 + C15494 + C15249 * C306) *
                C50893 * C50740 +
            (C15512 + C15511 + C15510) * C50893 * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C51053 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C51054 +
           ((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C50797 * C1328) *
              C51001 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C51054 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C51053 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C7956 +
             C2473 * C7955 + C349 * C7954) *
                C50740 +
            (C8125 + C8119 + C8118) * C50992) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C51053 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C51054 +
           ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50797 * C1328) *
              C51001 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C51054 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C51053 -
           ((C117 * C289 + C332 + C332 + C50923 * C309) * C50893 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C50797 * C51053 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C50797 * C51054 +
           ((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
             C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
             C15479 + C15251 * C3565) *
                C50893 * C50992 +
            (C15510 + C15511 + C15512) * C50893 * C50740) *
               C50797 * C1328) *
              C51001 +
          (((C15509 + C15508 + C15507) * C50893 * C50992 +
            (C15868 + C15869 + C15870) * C50893 * C50740) *
               C50797 * C51054 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C50797 * C51053 -
           ((C15256 * C3557 + C15492 + C15492 + C15251 * C3563 +
             C15254 * C1560 + C15493 + C15493 + C15250 * C1568 + C15252 * C286 +
             C15494 + C15494 + C15249 * C306) *
                C50893 * C50740 +
            (C15512 + C15511 + C15510) * C50893 * C50992) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51010 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C51053 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C50861 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C51010) *
              C51054 +
          (((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C51010 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C7956 +
             C8781 * C7955 + C3147 * C7954) *
                C50740 +
            ((C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C7956 +
             C9697 * C7955 + C4077 * C7954) *
                C50992) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51010 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C51053 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50861 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C51010) *
              C51054 +
          (((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C51010 -
           ((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50893 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50923 * C1568) * C50893 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50923 * C1569) * C50893 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50893 * C107) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C51010 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C50861) *
              C51053 +
          (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
             C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
             C16231 + C15251 * C4475) *
                C50893 * C50992 +
            (C16250 + C16251 + C16252) * C50893 * C50740) *
               C50861 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C51010) *
              C51054 +
          (((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
             C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
             C15479 + C15251 * C3565) *
                C50893 * C50992 +
            (C15510 + C15511 + C15512) * C50893 * C50740) *
               C51010 -
           ((C15256 * C10087 + C17144 + C17144 + C15251 * C10091 +
             C15254 * C3558 + C17145 + C17145 + C15250 * C3564 +
             C15252 * C1561 + C17146 + C17146 + C15249 * C1569) *
                C50893 * C50740 +
            (C15256 * C10088 + C17147 + C17147 + C15251 * C10092 +
             C15254 * C3559 + C17148 + C17148 + C15250 * C3565 +
             C15252 * C1562 + C17149 + C17149 + C15249 * C1570) *
                C50893 * C50992) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C50797 * C1022 -
               (C351 * C110 + C352 * C109 + C353 * C108 +
                (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                   C50797 * C50833) *
                  C1024 +
              ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) *
                   C50797 * C50833 -
               (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) *
                   C50797 * C1022) *
                  C1025 +
              ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) *
                   C50797 * C1022 -
               ((C117 * C636 + C642 + C642 + C50923 * C638) * C50893 * C110 +
                C646 * C109 + C351 * C108 + C352 * C107) *
                   C50797 * C50833) *
                  C1026) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
               C173 * C108 + C174 * C109 + C175 * C110) *
                  C50797 * C1093 -
              (C351 * C110 + C352 * C109 + C353 * C108 +
               (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                  C50797 * C1094 +
              ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
               C354 * C108 + C355 * C109 + C356 * C110) *
                  C50797 * C1095 -
              ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50893 * C110 +
               (C117 * C1099 + C1112 + C1112 + C50923 * C1107) * C50893 * C109 +
               (C117 * C1100 + C1113 + C1113 + C50923 * C1108) * C50893 * C108 +
               (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50893 *
                   C107) *
                  C50797 * C1096) *
             C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C1022 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C455 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C454 -
           ((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50893 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50923 * C1221) * C50893 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50923 * C1222) * C50893 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50923 * C1223) * C50893 * C107) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C1022 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C50833) *
              C1024 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C50833 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C50797 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C7956 +
             C350 * C7955 + C345 * C7954) *
                C50740 +
            (C8431 + C8430 + C8429) * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C1093 -
          ((C8115 + C8116 + C8117) * C50740 +
           (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
              C50797 * C1094 +
          ((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
           (C8118 + C8119 + C8125) * C50740) *
              C50797 * C1095 -
          (((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C7956 +
            C8124 * C7955 + C2472 * C7954) *
               C50740 +
           ((C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C7956 +
            C9039 * C7955 + C3411 * C7954) *
               C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C454 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 + C9198 * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C456) *
              C1022 +
          (((C3146 * C7954 + C4077 * C7955 +
             (C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C7956) *
                C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C455 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C454 -
           (((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C7956 +
             C8281 * C7955 + C2636 * C7954) *
                C50740 +
            ((C117 * C9186 + C9195 + C9195 + C50923 * C9190) * C7956 +
             C9198 * C7955 + C3574 * C7954) *
                C50992) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C50797 * C1022 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C50797 * C50833) *
              C1024 +
          (((C15509 + C15508 + C15507) * C50893 * C50992 +
            (C15868 + C15869 + C15870) * C50893 * C50740) *
               C50797 * C50833 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C15315 + C15314 + C15313) * C50893 * C50992 +
            (C15316 + C15317 + C15318) * C50893 * C50740) *
               C50797 * C1022 -
           ((C15256 * C1212 + C15859 + C15859 + C15251 * C1220 + C15254 * C889 +
             C15860 + C15860 + C15250 * C899 + C15252 * C280 + C15861 + C15861 +
             C15249 * C300) *
                C50893 * C50740 +
            (C15870 + C15869 + C15868) * C50893 * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C50893 * C50992 +
           (C15310 + C15311 + C15312) * C50893 * C50740) *
              C50797 * C1093 -
          ((C15507 + C15508 + C15509) * C50893 * C50740 +
           (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
            C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
            C15249 * C303) *
               C50893 * C50992) *
              C50797 * C1094 +
          ((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
            C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
            C15479 + C15251 * C3565) *
               C50893 * C50992 +
           (C15510 + C15511 + C15512) * C50893 * C50740) *
              C50797 * C1095 -
          ((C15256 * C9185 + C16497 + C16497 + C15251 * C9189 + C15254 * C4061 +
            C16498 + C16498 + C15250 * C4067 + C15252 * C1100 + C16499 +
            C16499 + C15249 * C1108) *
               C50893 * C50740 +
           (C15256 * C9186 + C16500 + C16500 + C15251 * C9190 + C15254 * C4062 +
            C16501 + C16501 + C15250 * C4068 + C15252 * C1101 + C16502 +
            C16502 + C15249 * C1109) *
               C50893 * C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C454 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C455 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C50893 * C50992 +
            (C15704 + C15705 + C15706) * C50893 * C50740) *
               C456) *
              C1022 +
          (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
             C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
             C16231 + C15251 * C4475) *
                C50893 * C50992 +
            (C16250 + C16251 + C16252) * C50893 * C50740) *
               C455 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C454 -
           ((C15256 * C16648 + C16652 + C16652 + C15251 * C16650 +
             C15254 * C4468 + C16653 + C16653 + C15250 * C4474 +
             C15252 * C1214 + C16654 + C16654 + C15249 * C1222) *
                C50893 * C50740 +
            (C15256 * C14656 + C16655 + C16655 + C15251 * C14660 +
             C15254 * C4469 + C16656 + C16656 + C15250 * C4475 +
             C15252 * C1215 + C16657 + C16657 + C15249 * C1223) *
                C50893 * C50992) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
              C2470 * C7955 + C2471 * C7956) *
                 C50992 +
             (C7960 + C7961 + C7962) * C50740) *
                C51010 -
            ((C8272 + C8273 + C8274) * C50740 +
             (C4077 * C7956 + C3146 * C7955 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                 C50992) *
                C50861) *
               C1022 +
           (((C3146 * C7954 + C4077 * C7955 +
              (C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C7956) *
                 C50992 +
             (C8775 + C8776 + C8782) * C50740) *
                C50861 -
            ((C8115 + C8116 + C8117) * C50740 +
             (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
                C51010) *
               C50833) *
              C51001 +
          ((((C8274 + C8273 + C8272) * C50992 +
             (C8578 + C8579 + C8580) * C50740) *
                C50861 -
            ((C7963 + C7964 + C7965) * C50740 +
             (C7962 + C7961 + C7960) * C50992) *
                C51010) *
               C1022 +
           (((C8117 + C8116 + C8115) * C50992 +
             (C8429 + C8430 + C8431) * C50740) *
                C51010 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C7956 +
              C3148 * C7955 + C920 * C7954) *
                 C50740 +
             (C8782 + C8776 + C8775) * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51010 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                C50861) *
               C1022 +
           (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50861 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                C51010) *
               C50833) *
              C51001 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51010) *
               C1022 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51010 -
            ((C117 * C890 + C912 + C912 + C50923 * C900) * C50893 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
              C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 +
              C15261 + C15251 * C481) *
                 C50893 * C50992 +
             (C15310 + C15311 + C15312) * C50893 * C50740) *
                C51010 -
            ((C15701 + C15702 + C15703) * C50893 * C50740 +
             (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 +
              C15254 * C461 + C15669 + C15669 + C15250 * C481 + C15252 * C460 +
              C15670 + C15670 + C15249 * C480) *
                 C50893 * C50992) *
                C50861) *
               C1022 +
           (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
              C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
              C16231 + C15251 * C4475) *
                 C50893 * C50992 +
             (C16250 + C16251 + C16252) * C50893 * C50740) *
                C50861 -
            ((C15507 + C15508 + C15509) * C50893 * C50740 +
             (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 +
              C15254 * C886 + C15475 + C15475 + C15250 * C896 + C15252 * C283 +
              C15476 + C15476 + C15249 * C303) *
                 C50893 * C50992) *
                C51010) *
               C50833) *
              C51001 +
          ((((C15703 + C15702 + C15701) * C50893 * C50992 +
             (C16032 + C16033 + C16034) * C50893 * C50740) *
                C50861 -
            ((C15313 + C15314 + C15315) * C50893 * C50740 +
             (C15312 + C15311 + C15310) * C50893 * C50992) *
                C51010) *
               C1022 +
           (((C15509 + C15508 + C15507) * C50893 * C50992 +
             (C15868 + C15869 + C15870) * C50893 * C50740) *
                C51010 -
            ((C15256 * C4467 + C16241 + C16241 + C15251 * C4473 +
              C15254 * C1213 + C16242 + C16242 + C15250 * C1221 +
              C15252 * C888 + C16243 + C16243 + C15249 * C898) *
                 C50893 * C50740 +
             (C16252 + C16251 + C16250) * C50893 * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50797 * C1093 -
          (C351 * C110 + C352 * C109 + C353 * C108 +
           (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
              C50797 * C1094 +
          ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
           C354 * C108 + C355 * C109 + C356 * C110) *
              C50797 * C1095 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50893 * C110 +
           (C117 * C1099 + C1112 + C1112 + C50923 * C1107) * C50893 * C109 +
           (C117 * C1100 + C1113 + C1113 + C50923 * C1108) * C50893 * C108 +
           (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50893 * C107) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C1022 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C50833) *
              C1024 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C50833 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C1022) *
              C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
               C1022 -
           ((C117 * C636 + C642 + C642 + C50923 * C638) * C50893 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C1022 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C50833) *
              C1024 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C50833 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C50797 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C7956 +
             C350 * C7955 + C345 * C7954) *
                C50740 +
            (C8431 + C8430 + C8429) * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C1093 -
          ((C8115 + C8116 + C8117) * C50740 +
           (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
              C50797 * C1094 +
          ((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
           (C8118 + C8119 + C8125) * C50740) *
              C50797 * C1095 -
          (((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C7956 +
            C8124 * C7955 + C2472 * C7954) *
               C50740 +
           ((C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C7956 +
            C9039 * C7955 + C3411 * C7954) *
               C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C50797 * C1022 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C50797 * C50833) *
              C1024 +
          (((C15509 + C15508 + C15507) * C50893 * C50992 +
            (C15868 + C15869 + C15870) * C50893 * C50740) *
               C50797 * C50833 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C15315 + C15314 + C15313) * C50893 * C50992 +
            (C15316 + C15317 + C15318) * C50893 * C50740) *
               C50797 * C1022 -
           ((C15256 * C1212 + C15859 + C15859 + C15251 * C1220 + C15254 * C889 +
             C15860 + C15860 + C15250 * C899 + C15252 * C280 + C15861 + C15861 +
             C15249 * C300) *
                C50893 * C50740 +
            (C15870 + C15869 + C15868) * C50893 * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C50893 * C50992 +
           (C15310 + C15311 + C15312) * C50893 * C50740) *
              C50797 * C1093 -
          ((C15507 + C15508 + C15509) * C50893 * C50740 +
           (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
            C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
            C15249 * C303) *
               C50893 * C50992) *
              C50797 * C1094 +
          ((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
            C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
            C15479 + C15251 * C3565) *
               C50893 * C50992 +
           (C15510 + C15511 + C15512) * C50893 * C50740) *
              C50797 * C1095 -
          ((C15256 * C9185 + C16497 + C16497 + C15251 * C9189 + C15254 * C4061 +
            C16498 + C16498 + C15250 * C4067 + C15252 * C1100 + C16499 +
            C16499 + C15249 * C1108) *
               C50893 * C50740 +
           (C15256 * C9186 + C16500 + C16500 + C15251 * C9190 + C15254 * C4062 +
            C16501 + C16501 + C15250 * C4068 + C15252 * C1101 + C16502 +
            C16502 + C15249 * C1109) *
               C50893 * C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
              C2470 * C7955 + C2471 * C7956) *
                 C50992 +
             (C7960 + C7961 + C7962) * C50740) *
                C1673 -
            ((C8272 + C8273 + C8274) * C50740 +
             (C4077 * C7956 + C3146 * C7955 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                 C50992) *
                C50861) *
               C51009 +
           (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
             (C8775 + C8776 + C8782) * C50740) *
                C50861 -
            ((C8115 + C8116 + C8117) * C50740 +
             (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
                C1673) *
               C50833) *
              C51001 +
          ((((C8274 + C8273 + C8272) * C50992 +
             (C8578 + C8579 + C8580) * C50740) *
                C50861 -
            ((C7963 + C7964 + C7965) * C50740 +
             (C7962 + C7961 + C7960) * C50992) *
                C1673) *
               C51009 +
           (((C8117 + C8116 + C8115) * C50992 +
             (C8429 + C8430 + C8431) * C50740) *
                C1673 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C7956 +
              C3148 * C7955 + C920 * C7954) *
                 C50740 +
             (C8782 + C8776 + C8775) * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C1673 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                C50861) *
               C51009 +
           (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50861 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                C1673) *
               C50833) *
              C51001 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
               C51009 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C1673 -
            ((C117 * C890 + C912 + C912 + C50923 * C900) * C50893 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
              C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 +
              C15261 + C15251 * C481) *
                 C50893 * C50992 +
             (C15310 + C15311 + C15312) * C50893 * C50740) *
                C1673 -
            ((C15701 + C15702 + C15703) * C50893 * C50740 +
             (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 +
              C15254 * C461 + C15669 + C15669 + C15250 * C481 + C15252 * C460 +
              C15670 + C15670 + C15249 * C480) *
                 C50893 * C50992) *
                C50861) *
               C51009 +
           (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
              C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
              C16231 + C15251 * C4475) *
                 C50893 * C50992 +
             (C16250 + C16251 + C16252) * C50893 * C50740) *
                C50861 -
            ((C15507 + C15508 + C15509) * C50893 * C50740 +
             (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 +
              C15254 * C886 + C15475 + C15475 + C15250 * C896 + C15252 * C283 +
              C15476 + C15476 + C15249 * C303) *
                 C50893 * C50992) *
                C1673) *
               C50833) *
              C51001 +
          ((((C15703 + C15702 + C15701) * C50893 * C50992 +
             (C16032 + C16033 + C16034) * C50893 * C50740) *
                C50861 -
            ((C15313 + C15314 + C15315) * C50893 * C50740 +
             (C15312 + C15311 + C15310) * C50893 * C50992) *
                C1673) *
               C51009 +
           (((C15509 + C15508 + C15507) * C50893 * C50992 +
             (C15868 + C15869 + C15870) * C50893 * C50740) *
                C1673 -
            ((C15256 * C4467 + C16241 + C16241 + C15251 * C4473 +
              C15254 * C1213 + C16242 + C16242 + C15250 * C1221 +
              C15252 * C888 + C16243 + C16243 + C15249 * C898) *
                 C50893 * C50740 +
             (C16252 + C16251 + C16250) * C50893 * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51055 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 + C9198 * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C2089) *
              C51009 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C51056 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C51055 -
           (((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C7956 +
             C8281 * C7955 + C2636 * C7954) *
                C50740 +
            ((C117 * C9186 + C9195 + C9195 + C50923 * C9190) * C7956 +
             C9198 * C7955 + C3574 * C7954) *
                C50992) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51055 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C51009 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C51056 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C51055 -
           ((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50893 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50923 * C1221) * C50893 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50923 * C1222) * C50893 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50923 * C1223) * C50893 * C107) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C51055 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C51056 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C50893 * C50992 +
            (C15704 + C15705 + C15706) * C50893 * C50740) *
               C2089) *
              C51009 +
          (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
             C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
             C16231 + C15251 * C4475) *
                C50893 * C50992 +
            (C16250 + C16251 + C16252) * C50893 * C50740) *
               C51056 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C51055 -
           ((C15256 * C16648 + C16652 + C16652 + C15251 * C16650 +
             C15254 * C4468 + C16653 + C16653 + C15250 * C4474 +
             C15252 * C1214 + C16654 + C16654 + C15249 * C1222) *
                C50893 * C50740 +
            (C15256 * C14656 + C16655 + C16655 + C15251 * C14660 +
             C15254 * C4469 + C16656 + C16656 + C15250 * C4475 +
             C15252 * C1215 + C16657 + C16657 + C15249 * C1223) *
                C50893 * C50992) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C1673 -
               (C528 * C110 + C529 * C109 + C530 * C108 +
                (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                   C50861) *
                  C50781 * C1024 +
              ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) *
                   C50861 -
               (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) *
                   C1673) *
                  C50781 * C1025 +
              ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
               ((C117 * C746 + C752 + C752 + C50923 * C748) * C50893 * C110 +
                C756 * C109 + C528 * C108 + C529 * C107) *
                   C50861) *
                  C50781 * C1026) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C1673 -
               (C528 * C110 + C529 * C109 + C530 * C108 +
                (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                   C50861) *
                  C275 +
              (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
                C922 * C108 + C923 * C109 + C924 * C110) *
                   C50861 -
               (C351 * C110 + C352 * C109 + C353 * C108 +
                (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                   C1673) *
                  C276 +
              (((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
                C354 * C108 + C355 * C109 + C356 * C110) *
                   C1673 -
               ((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50893 *
                    C110 +
                (C117 * C1560 + C1573 + C1573 + C50923 * C1568) * C50893 *
                    C109 +
                (C117 * C1561 + C1574 + C1574 + C50923 * C1569) * C50893 *
                    C108 +
                (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50893 *
                    C107) *
                   C50861) *
                  C277) *
             C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C1839 -
          (C528 * C110 + C529 * C109 + C530 * C108 +
           (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
              C1840 +
          ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
           C531 * C108 + C532 * C109 + C533 * C110) *
              C1841 -
          ((C117 * C1843 + C1856 + C1856 + C50923 * C1851) * C50893 * C110 +
           (C117 * C1844 + C1857 + C1857 + C50923 * C1852) * C50893 * C109 +
           (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C50893 * C108 +
           (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C50893 * C107) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C50781 * C1024 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C50861 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C7956 +
             C921 * C7955 + C522 * C7954) *
                C50740 +
            (C8580 + C8579 + C8578) * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C275 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C50861 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C1673) *
              C276 +
          (((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C1673 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C7956 +
             C8781 * C7955 + C3147 * C7954) *
                C50740 +
            ((C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C7956 +
             C9697 * C7955 + C4077 * C7954) *
                C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C1839 -
          ((C8272 + C8273 + C8274) * C50740 +
           (C4077 * C7956 + C3146 * C7955 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
               C50992) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
            C3574 * C7955 + C9198 * C7956) *
               C50992 +
           (C8275 + C8276 + C8282) * C50740) *
              C1841 -
          (((C117 * C10087 + C10094 + C10094 + C50923 * C10091) * C7956 +
            (C117 * C4468 + C4478 + C4478 + C50923 * C4474) * C7955 +
            (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C7954) *
               C50740 +
           ((C117 * C10088 + C10095 + C10095 + C50923 * C10092) * C7956 +
            (C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C7955 +
            (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C7954) *
               C50992) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C1673 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C50861) *
              C50781 * C1024 +
          (((C15703 + C15702 + C15701) * C50893 * C50992 +
            (C16032 + C16033 + C16034) * C50893 * C50740) *
               C50861 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C15315 + C15314 + C15313) * C50893 * C50992 +
            (C15316 + C15317 + C15318) * C50893 * C50740) *
               C1673 -
           ((C15256 * C1843 + C16023 + C16023 + C15251 * C1851 + C15254 * C464 +
             C16024 + C16024 + C15250 * C484 + C15252 * C457 + C16025 + C16025 +
             C15249 * C477) *
                C50893 * C50740 +
            (C16034 + C16033 + C16032) * C50893 * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C1673 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C50861) *
              C275 +
          (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
             C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
             C16231 + C15251 * C4475) *
                C50893 * C50992 +
            (C16250 + C16251 + C16252) * C50893 * C50740) *
               C50861 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C1673) *
              C276 +
          (((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
             C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
             C15479 + C15251 * C3565) *
                C50893 * C50992 +
            (C15510 + C15511 + C15512) * C50893 * C50740) *
               C1673 -
           ((C15256 * C10087 + C17144 + C17144 + C15251 * C10091 +
             C15254 * C3558 + C17145 + C17145 + C15250 * C3564 +
             C15252 * C1561 + C17146 + C17146 + C15249 * C1569) *
                C50893 * C50740 +
            (C15256 * C10088 + C17147 + C17147 + C15251 * C10092 +
             C15254 * C3559 + C17148 + C17148 + C15250 * C3565 +
             C15252 * C1562 + C17149 + C17149 + C15249 * C1570) *
                C50893 * C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C50893 * C50992 +
           (C15310 + C15311 + C15312) * C50893 * C50740) *
              C1839 -
          ((C15701 + C15702 + C15703) * C50893 * C50740 +
           (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
            C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
            C15249 * C480) *
               C50893 * C50992) *
              C1840 +
          ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
            C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
            C15673 + C15251 * C7363) *
               C50893 * C50992 +
           (C15704 + C15705 + C15706) * C50893 * C50740) *
              C1841 -
          ((C15256 * C17539 + C17546 + C17546 + C15251 * C17543 +
            C15254 * C7356 + C17547 + C17547 + C15250 * C7362 + C15252 * C1845 +
            C17548 + C17548 + C15249 * C1853) *
               C50893 * C50740 +
           (C15256 * C17540 + C17549 + C17549 + C15251 * C17544 +
            C15254 * C7357 + C17550 + C17550 + C15250 * C7363 + C15252 * C1846 +
            C17551 + C17551 + C15249 * C1854) *
               C50893 * C50992) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51055 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 + C9198 * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C2089) *
              C50781 * C51001 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C51056 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C51055 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C7956 +
             C2637 * C7955 + C526 * C7954) *
                C50740 +
            (C8282 + C8276 + C8275) * C50992) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51055 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C50781 * C51001 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C51056 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51055 -
           ((C117 * C466 + C509 + C509 + C50923 * C486) * C50893 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C51055 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C51056 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C50893 * C50992 +
            (C15704 + C15705 + C15706) * C50893 * C50740) *
               C2089) *
              C50781 * C51001 +
          (((C15703 + C15702 + C15701) * C50893 * C50992 +
            (C16032 + C16033 + C16034) * C50893 * C50740) *
               C51056 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C51055 -
           ((C15256 * C7355 + C15686 + C15686 + C15251 * C7361 +
             C15254 * C1844 + C15687 + C15687 + C15250 * C1852 + C15252 * C463 +
             C15688 + C15688 + C15249 * C483) *
                C50893 * C50740 +
            (C15706 + C15705 + C15704) * C50893 * C50992) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C275 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50861 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C1673) *
              C276 +
          (((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C1673 -
           ((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50893 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50923 * C1568) * C50893 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50923 * C1569) * C50893 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50893 * C107) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C50781 * C1024 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
              C50781 * C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
           ((C117 * C746 + C752 + C752 + C50923 * C748) * C50893 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C50781 * C1024 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C50861 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C7956 +
             C921 * C7955 + C522 * C7954) *
                C50740 +
            (C8580 + C8579 + C8578) * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C275 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C50861 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C1673) *
              C276 +
          (((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C1673 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C7956 +
             C8781 * C7955 + C3147 * C7954) *
                C50740 +
            ((C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C7956 +
             C9697 * C7955 + C4077 * C7954) *
                C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C1673 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C50861) *
              C50781 * C1024 +
          (((C15703 + C15702 + C15701) * C50893 * C50992 +
            (C16032 + C16033 + C16034) * C50893 * C50740) *
               C50861 -
           ((C15313 + C15314 + C15315) * C50893 * C50740 +
            (C15312 + C15311 + C15310) * C50893 * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C15315 + C15314 + C15313) * C50893 * C50992 +
            (C15316 + C15317 + C15318) * C50893 * C50740) *
               C1673 -
           ((C15256 * C1843 + C16023 + C16023 + C15251 * C1851 + C15254 * C464 +
             C16024 + C16024 + C15250 * C484 + C15252 * C457 + C16025 + C16025 +
             C15249 * C477) *
                C50893 * C50740 +
            (C16034 + C16033 + C16032) * C50893 * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C50893 * C50992 +
            (C15310 + C15311 + C15312) * C50893 * C50740) *
               C1673 -
           ((C15701 + C15702 + C15703) * C50893 * C50740 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C50893 * C50992) *
               C50861) *
              C275 +
          (((C15252 * C886 + C16229 + C16229 + C15249 * C896 + C15254 * C1215 +
             C16230 + C16230 + C15250 * C1223 + C15256 * C4469 + C16231 +
             C16231 + C15251 * C4475) *
                C50893 * C50992 +
            (C16250 + C16251 + C16252) * C50893 * C50740) *
               C50861 -
           ((C15507 + C15508 + C15509) * C50893 * C50740 +
            (C15256 * C1215 + C15474 + C15474 + C15251 * C1223 + C15254 * C886 +
             C15475 + C15475 + C15250 * C896 + C15252 * C283 + C15476 + C15476 +
             C15249 * C303) *
                C50893 * C50992) *
               C1673) *
              C276 +
          (((C15252 * C284 + C15477 + C15477 + C15249 * C304 + C15254 * C1562 +
             C15478 + C15478 + C15250 * C1570 + C15256 * C3559 + C15479 +
             C15479 + C15251 * C3565) *
                C50893 * C50992 +
            (C15510 + C15511 + C15512) * C50893 * C50740) *
               C1673 -
           ((C15256 * C10087 + C17144 + C17144 + C15251 * C10091 +
             C15254 * C3558 + C17145 + C17145 + C15250 * C3564 +
             C15252 * C1561 + C17146 + C17146 + C15249 * C1569) *
                C50893 * C50740 +
            (C15256 * C10088 + C17147 + C17147 + C15251 * C10092 +
             C15254 * C3559 + C17148 + C17148 + C15250 * C3565 +
             C15252 * C1562 + C17149 + C17149 + C15249 * C1570) *
                C50893 * C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C51009 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C50833) *
              C51051 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C50833 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C51009) *
              C51052 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C50797 * C51009 -
           ((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C10650 +
            C2473 * C10649 + C349 * C10648 + C346 * C10647) *
               C50735 * C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C51009 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C50833) *
              C51051 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C50833 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C51009) *
              C51052 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C50797 * C51009 -
           (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
             C645 * C51019) *
                C2290 +
            (C2788 + C2787) * C2289 + C2786 * C2288) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C50797 * C51009 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C50797 * C50833) *
              C51051 +
          (((C15509 + C15508 + C15507) * C51019 +
            (C15510 + C15511 + C15512) * C50909) *
               C50735 * C50797 * C50833 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C50797 * C51009) *
              C51052 +
          (((C15315 + C15314 + C15313) * C51019 +
            (C15868 + C15869 + C15870) * C50909) *
               C50735 * C50797 * C51009 -
           ((C15256 * C3557 + C15492 + C15492 + C15251 * C3563 +
             C15254 * C1560 + C15493 + C15493 + C15250 * C1568 + C15252 * C286 +
             C15494 + C15494 + C15249 * C306) *
                C50909 +
            (C15870 + C15869 + C15868) * C51019) *
               C50735 * C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
             C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
                C50735 * C51010 -
            (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
                C50735 * C50861) *
               C51009 +
           ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
             (C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C10650) *
                C50735 * C50861 -
            (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 +
             C2470 * C10647) *
                C50735 * C51010) *
               C50833) *
              C278 +
          (((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
                C50735 * C50861 -
            (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
                C50735 * C51010) *
               C51009 +
           ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
                C50735 * C51010 -
            ((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C10650 +
             C8781 * C10649 + C3147 * C10648 + C919 * C10647) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
              C2470 * C50909) *
                 C2288 +
             (C2292 + C2293) * C2289 + C2300 * C2290) *
                C51010 -
            (C2935 * C2290 + (C2624 + C2625) * C2289 +
             (C3146 * C50909 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                 C2288) *
                C50861) *
               C51009 +
           (((C3146 * C51019 +
              (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50909) *
                 C2288 +
             (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                C50861 -
            (C2786 * C2290 + (C2452 + C2453) * C2289 +
             (C2471 * C50909 + C2470 * C51019) * C2288) *
                C51010) *
               C50833) *
              C278 +
          ((((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
             (C2936 + C2937) * C2290) *
                C50861 -
            (C2301 * C2290 + (C2295 + C2294) * C2289 +
             (C2293 + C2292) * C2288) *
                C51010) *
               C51009 +
           (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
             (C2787 + C2788) * C2290) *
                C51010 -
            (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
              C921 * C51019) *
                 C2290 +
             (C3150 + C3137) * C2289 + (C3149 + C3134) * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
              C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 +
              C15261 + C15251 * C481) *
                 C51019 +
             (C18306 + C18307 + C18308) * C50909) *
                C50735 * C51010 -
            ((C18956 + C18957 + C18958) * C50909 +
             (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 +
              C15254 * C461 + C15669 + C15669 + C15250 * C481 + C15252 * C460 +
              C15670 + C15670 + C15249 * C480) *
                 C51019) *
                C50735 * C50861) *
               C51009 +
           (((C18958 + C18957 + C18956) * C51019 +
             (C15252 * C1562 + C17149 + C17149 + C15249 * C1570 +
              C15254 * C3559 + C17148 + C17148 + C15250 * C3565 +
              C15256 * C10088 + C17147 + C17147 + C15251 * C10092) *
                 C50909) *
                C50735 * C50861 -
            ((C18309 + C18310 + C18311) * C50909 +
             (C18308 + C18307 + C18306) * C51019) *
                C50735 * C51010) *
               C50833) *
              C278 +
          ((((C15703 + C15702 + C15701) * C51019 +
             (C16250 + C16251 + C16252) * C50909) *
                C50735 * C50861 -
            ((C15507 + C15508 + C15509) * C50909 +
             (C15312 + C15311 + C15310) * C51019) *
                C50735 * C51010) *
               C51009 +
           (((C15509 + C15508 + C15507) * C51019 +
             (C15510 + C15511 + C15512) * C50909) *
                C50735 * C51010 -
            ((C15256 * C10087 + C17144 + C17144 + C15251 * C10091 +
              C15254 * C3558 + C17145 + C17145 + C15250 * C3564 +
              C15252 * C1561 + C17146 + C17146 + C15249 * C1569) *
                 C50909 +
             (C16252 + C16251 + C16250) * C51019) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
                (C117 * C283 + C320 + C320 + C50923 * C303) * C50909) *
                   C2288 +
               (C2292 + C2293) * C2289 + C2300 * C2290) *
                  C50797 * C50781 * C113 -
              (C2301 * C2290 + (C2295 + C2294) * C2289 +
               (C2293 + C2292) * C2288) *
                  C50797 * C50781 * C114 +
              (C2300 * C2288 + (C2297 + C2296) * C2289 +
               (C2298 + C2299) * C2290) *
                  C50797 * C50781 * C115 -
              (((C117 * C636 + C642 + C642 + C50923 * C638) * C50909 +
                C172 * C51019) *
                   C2290 +
               (C2299 + C2298) * C2289 + C2301 * C2288) *
                  C50797 * C50781 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
                 C2470 * C50909) *
                    C2288 +
                (C2292 + C2293) * C2289 + C2300 * C2290) *
                   C50797 * C275 -
               ((C2450 + C2451) * C2290 + (C2452 + C2453) * C2289 +
                (C2471 * C50909 + C2470 * C51019) * C2288) *
                   C50797 * C276 +
               ((C2471 * C51019 +
                 (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50909) *
                    C2288 +
                (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
                   C50797 * C277) *
                  C278 +
              (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
                (C345 * C51019 + C350 * C50909) * C2290) *
                   C50797 * C276 -
               (C2301 * C2290 + (C2295 + C2294) * C2289 +
                (C2293 + C2292) * C2288) *
                   C50797 * C275 -
               (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
                 C350 * C51019) *
                    C2290 +
                (C2475 + C2459) * C2289 + (C2474 + C2456) * C2288) *
                   C50797 * C277) *
                  C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C454 -
           ((C2622 + C2623) * C2290 + (C2624 + C2625) * C2289 +
            ((C117 * C886 + C902 + C902 + C50923 * C896) * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             (C117 * C1215 + C1228 + C1228 + C50923 * C1223) * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C456) *
              C50781 * C278 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C522 * C51019 + C921 * C50909) * C2290) *
               C455 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C454 -
           (((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50909 +
             C527 * C51019) *
                C2290 +
            (C2639 + C2629) * C2289 + (C2638 + C2626) * C2288) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C50781 * C113 -
          (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
              C50735 * C50797 * C50781 * C114 +
          (C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
              C50735 * C50797 * C50781 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C10650 +
           C350 * C10649 + C345 * C10648 + C170 * C10647) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C275 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C276 +
           (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            (C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C10650) *
               C50735 * C50797 * C277) *
              C278 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C276 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C275 -
           ((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C10650 +
            C8124 * C10649 + C2472 * C10648 + C348 * C10647) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C454 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 +
            (C117 * C9186 + C9195 + C9195 + C50923 * C9190) * C10650) *
               C50735 * C456) *
              C50781 * C278 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C455 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C454 -
           ((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C10650 +
            C8281 * C10649 + C2636 * C10648 + C525 * C10647) *
               C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C51019 +
           (C15252 * C283 + C15476 + C15476 + C15249 * C303 + C15254 * C886 +
            C15475 + C15475 + C15250 * C896 + C15256 * C1215 + C15474 + C15474 +
            C15251 * C1223) *
               C50909) *
              C50735 * C50797 * C50781 * C113 -
          ((C15507 + C15508 + C15509) * C50909 +
           (C15312 + C15311 + C15310) * C51019) *
              C50735 * C50797 * C50781 * C114 +
          ((C15315 + C15314 + C15313) * C51019 +
           (C15868 + C15869 + C15870) * C50909) *
              C50735 * C50797 * C50781 * C115 -
          ((C15256 * C1212 + C15859 + C15859 + C15251 * C1220 + C15254 * C889 +
            C15860 + C15860 + C15250 * C899 + C15252 * C280 + C15861 + C15861 +
            C15249 * C300) *
               C50909 +
           (C15318 + C15317 + C15316) * C51019) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C50797 * C275 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C50797 * C276 +
           ((C18311 + C18310 + C18309) * C51019 +
            (C15252 * C1101 + C16502 + C16502 + C15249 * C1109 +
             C15254 * C4062 + C16501 + C16501 + C15250 * C4068 +
             C15256 * C9186 + C16500 + C16500 + C15251 * C9190) *
                C50909) *
               C50735 * C50797 * C277) *
              C278 +
          (((C15509 + C15508 + C15507) * C51019 +
            (C15510 + C15511 + C15512) * C50909) *
               C50735 * C50797 * C276 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C50797 * C275 -
           ((C15256 * C9185 + C16497 + C16497 + C15251 * C9189 +
             C15254 * C4061 + C16498 + C16498 + C15250 * C4067 +
             C15252 * C1100 + C16499 + C16499 + C15249 * C1108) *
                C50909 +
            (C15512 + C15511 + C15510) * C51019) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C454 -
           ((C15256 * C4469 + C16231 + C16231 + C15251 * C4475 +
             C15254 * C1215 + C16230 + C16230 + C15250 * C1223 + C15252 * C886 +
             C16229 + C16229 + C15249 * C896) *
                C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C455 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C51019 +
            (C15252 * C1215 + C16657 + C16657 + C15249 * C1223 +
             C15254 * C4469 + C16656 + C16656 + C15250 * C4475 +
             C15256 * C14656 + C16655 + C16655 + C15251 * C14660) *
                C50909) *
               C50735 * C456) *
              C50781 * C278 +
          (((C15703 + C15702 + C15701) * C51019 +
            (C16250 + C16251 + C16252) * C50909) *
               C50735 * C455 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C454 -
           ((C15256 * C16648 + C16652 + C16652 + C15251 * C16650 +
             C15254 * C4468 + C16653 + C16653 + C15250 * C4474 +
             C15252 * C1214 + C16654 + C16654 + C15249 * C1222) *
                C50909 +
            (C15706 + C15705 + C15704) * C51019) *
               C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51010 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C50781 * C51051 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C50861 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C51010) *
              C50781 * C51052 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C51010 -
           ((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C10650 +
            C3148 * C10649 + C920 * C10648 + C523 * C10647) *
               C50735 * C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51010 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            ((C117 * C886 + C902 + C902 + C50923 * C896) * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C50781 * C51051 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C50861 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C51010) *
              C50781 * C51052 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C51010 -
           (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
             C755 * C51019) *
                C2290 +
            (C2937 + C2936) * C2289 + C2935 * C2288) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C51010 -
           ((C15256 * C4469 + C16231 + C16231 + C15251 * C4475 +
             C15254 * C1215 + C16230 + C16230 + C15250 * C1223 + C15252 * C886 +
             C16229 + C16229 + C15249 * C896) *
                C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C50861) *
              C50781 * C51051 +
          (((C15703 + C15702 + C15701) * C51019 +
            (C16250 + C16251 + C16252) * C50909) *
               C50735 * C50861 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C51010) *
              C50781 * C51052 +
          (((C15315 + C15314 + C15313) * C51019 +
            (C15868 + C15869 + C15870) * C50909) *
               C50735 * C51010 -
           ((C15256 * C4467 + C16241 + C16241 + C15251 * C4473 +
             C15254 * C1213 + C16242 + C16242 + C15250 * C1221 + C15252 * C888 +
             C16243 + C16243 + C15249 * C898) *
                C50909 +
            (C16034 + C16033 + C16032) * C51019) *
               C50735 * C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C275 -
           ((C2450 + C2451) * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C276 +
           ((C2471 * C51019 +
             (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50909) *
                C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C50797 * C277) *
              C278 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C345 * C51019 + C350 * C50909) * C2290) *
               C50797 * C276 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C275 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
             C350 * C51019) *
                C2290 +
            (C2475 + C2459) * C2289 + (C2474 + C2456) * C2288) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C50797 * C50781 * C113 -
          (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
              C50797 * C50781 * C114 +
          (C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
              C50797 * C50781 * C115 -
          (((C117 * C636 + C642 + C642 + C50923 * C638) * C50909 +
            C172 * C51019) *
               C2290 +
           (C2299 + C2298) * C2289 + C2301 * C2288) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C50781 * C113 -
          (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
              C50735 * C50797 * C50781 * C114 +
          (C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
              C50735 * C50797 * C50781 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C10650 +
           C350 * C10649 + C345 * C10648 + C170 * C10647) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C275 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C276 +
           (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            (C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C10650) *
               C50735 * C50797 * C277) *
              C278 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C276 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C275 -
           ((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C10650 +
            C8124 * C10649 + C2472 * C10648 + C348 * C10647) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C51019 +
           (C15252 * C283 + C15476 + C15476 + C15249 * C303 + C15254 * C886 +
            C15475 + C15475 + C15250 * C896 + C15256 * C1215 + C15474 + C15474 +
            C15251 * C1223) *
               C50909) *
              C50735 * C50797 * C50781 * C113 -
          ((C15507 + C15508 + C15509) * C50909 +
           (C15312 + C15311 + C15310) * C51019) *
              C50735 * C50797 * C50781 * C114 +
          ((C15315 + C15314 + C15313) * C51019 +
           (C15868 + C15869 + C15870) * C50909) *
              C50735 * C50797 * C50781 * C115 -
          ((C15256 * C1212 + C15859 + C15859 + C15251 * C1220 + C15254 * C889 +
            C15860 + C15860 + C15250 * C899 + C15252 * C280 + C15861 + C15861 +
            C15249 * C300) *
               C50909 +
           (C15318 + C15317 + C15316) * C51019) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C50797 * C275 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C50797 * C276 +
           ((C18311 + C18310 + C18309) * C51019 +
            (C15252 * C1101 + C16502 + C16502 + C15249 * C1109 +
             C15254 * C4062 + C16501 + C16501 + C15250 * C4068 +
             C15256 * C9186 + C16500 + C16500 + C15251 * C9190) *
                C50909) *
               C50735 * C50797 * C277) *
              C278 +
          (((C15509 + C15508 + C15507) * C51019 +
            (C15510 + C15511 + C15512) * C50909) *
               C50735 * C50797 * C276 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C50797 * C275 -
           ((C15256 * C9185 + C16497 + C16497 + C15251 * C9189 +
             C15254 * C4061 + C16498 + C16498 + C15250 * C4067 +
             C15252 * C1100 + C16499 + C16499 + C15249 * C1108) *
                C50909 +
            (C15512 + C15511 + C15510) * C51019) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C51053 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C51054 +
           (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C50797 * C1328) *
              C51001 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C51054 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C51053 -
           ((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C10650 +
            C8124 * C10649 + C2472 * C10648 + C348 * C10647) *
               C50735 * C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C51053 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C51054 +
           ((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C50797 * C1328) *
              C51001 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C51054 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C51053 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
             C350 * C51019) *
                C2290 +
            (C2475 + C2459) * C2289 + (C2474 + C2456) * C2288) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C50797 * C51053 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C50797 * C51054 +
           ((C18311 + C18310 + C18309) * C51019 +
            (C19218 + C19219 + C19220) * C50909) *
               C50735 * C50797 * C1328) *
              C51001 +
          (((C15509 + C15508 + C15507) * C51019 +
            (C15510 + C15511 + C15512) * C50909) *
               C50735 * C50797 * C51054 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C50797 * C51053 -
           ((C15256 * C9185 + C16497 + C16497 + C15251 * C9189 +
             C15254 * C4061 + C16498 + C16498 + C15250 * C4067 +
             C15252 * C1100 + C16499 + C16499 + C15249 * C1108) *
                C50909 +
            (C15512 + C15511 + C15510) * C51019) *
               C50735 * C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51010 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C51053 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C50861 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C51010) *
              C51054 +
          ((C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C51010 -
           ((C117 * C11780 + C11786 + C11786 + C50923 * C11782) * C10650 +
            C11789 * C10649 + C9697 * C10648 + C4077 * C10647) *
               C50735 * C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51010 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C51053 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C50861 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C51010) *
              C51054 +
          (((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C51010 -
           (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
             C3148 * C51019) *
                C2290 +
            ((C117 * C4061 + C4073 + C4073 + C50923 * C4067) * C50909 +
             C3147 * C51019) *
                C2289 +
            ((C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C50909 +
             C4077 * C51019) *
                C2288) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C51010 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C50861) *
              C51053 +
          (((C18958 + C18957 + C18956) * C51019 +
            (C19886 + C19887 + C19888) * C50909) *
               C50735 * C50861 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C51010) *
              C51054 +
          (((C18311 + C18310 + C18309) * C51019 +
            (C19218 + C19219 + C19220) * C50909) *
               C50735 * C51010 -
           ((C15256 * C12051 + C19877 + C19877 + C15251 * C12053 +
             C15254 * C9186 + C19878 + C19878 + C15250 * C9190 +
             C15252 * C4062 + C19879 + C19879 + C15249 * C4068) *
                C50909 +
            (C19888 + C19887 + C19886) * C51019) *
               C50735 * C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
                 C2470 * C50909) *
                    C2288 +
                (C2292 + C2293) * C2289 + C2300 * C2290) *
                   C50797 * C1022 -
               (C2786 * C2290 + (C2452 + C2453) * C2289 +
                (C2471 * C50909 + C2470 * C51019) * C2288) *
                   C50797 * C50833) *
                  C1024 +
              (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
                (C2787 + C2788) * C2290) *
                   C50797 * C50833 -
               (C2301 * C2290 + (C2295 + C2294) * C2289 +
                (C2293 + C2292) * C2288) *
                   C50797 * C1022) *
                  C1025 +
              ((C2300 * C2288 + (C2297 + C2296) * C2289 +
                (C2298 + C2299) * C2290) *
                   C50797 * C1022 -
               (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
                 C645 * C51019) *
                    C2290 +
                (C2788 + C2787) * C2289 + C2786 * C2288) *
                   C50797 * C50833) *
                  C1026) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
                C2470 * C50909) *
                   C2288 +
               (C2292 + C2293) * C2289 + C2300 * C2290) *
                  C50797 * C1093 -
              (C2786 * C2290 + (C2452 + C2453) * C2289 +
               (C2471 * C50909 + C2470 * C51019) * C2288) *
                  C50797 * C1094 +
              ((C2471 * C51019 + C3411 * C50909) * C2288 +
               (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
                  C50797 * C1095 -
              (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C50909 +
                C2473 * C51019) *
                   C2290 +
               ((C117 * C3395 + C3407 + C3407 + C50923 * C3401) * C50909 +
                C2472 * C51019) *
                   C2289 +
               ((C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C50909 +
                C3411 * C51019) *
                   C2288) *
                  C50797 * C1096) *
             C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C454 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             C3574 * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C456) *
              C1022 +
          (((C3146 * C51019 +
             (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50909) *
                C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C455 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C454 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C50909 +
             C2637 * C51019) *
                C2290 +
            ((C117 * C3558 + C3570 + C3570 + C50923 * C3564) * C50909 +
             C2636 * C51019) *
                C2289 +
            ((C117 * C3559 + C3571 + C3571 + C50923 * C3565) * C50909 +
             C3574 * C51019) *
                C2288) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C1022 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C50833) *
              C1024 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C50833 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C50797 * C1022 -
           ((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C10650 +
            C2473 * C10649 + C349 * C10648 + C346 * C10647) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C1093 -
          (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
              C50735 * C50797 * C1094 +
          (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 + C11347 * C10650) *
              C50735 * C50797 * C1095 -
          ((C117 * C11338 + C11344 + C11344 + C50923 * C11340) * C10650 +
           C11347 * C10649 + C9039 * C10648 + C3411 * C10647) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C454 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
               C50735 * C456) *
              C1022 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            (C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C10650) *
               C50735 * C455 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C454 -
           ((C117 * C11445 + C11451 + C11451 + C50923 * C11447) * C10650 +
            C11454 * C10649 + C9198 * C10648 + C3574 * C10647) *
               C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C50797 * C1022 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C50797 * C50833) *
              C1024 +
          (((C15509 + C15508 + C15507) * C51019 +
            (C15510 + C15511 + C15512) * C50909) *
               C50735 * C50797 * C50833 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C50797 * C1022) *
              C1025 +
          (((C15315 + C15314 + C15313) * C51019 +
            (C15868 + C15869 + C15870) * C50909) *
               C50735 * C50797 * C1022 -
           ((C15256 * C3557 + C15492 + C15492 + C15251 * C3563 +
             C15254 * C1560 + C15493 + C15493 + C15250 * C1568 + C15252 * C286 +
             C15494 + C15494 + C15249 * C306) *
                C50909 +
            (C15870 + C15869 + C15868) * C51019) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C51019 +
           (C18306 + C18307 + C18308) * C50909) *
              C50735 * C50797 * C1093 -
          ((C18309 + C18310 + C18311) * C50909 +
           (C18308 + C18307 + C18306) * C51019) *
              C50735 * C50797 * C1094 +
          ((C18311 + C18310 + C18309) * C51019 +
           (C19218 + C19219 + C19220) * C50909) *
              C50735 * C50797 * C1095 -
          ((C15256 * C11445 + C19209 + C19209 + C15251 * C11447 +
            C15254 * C9685 + C19210 + C19210 + C15250 * C9689 + C15252 * C3396 +
            C19211 + C19211 + C15249 * C3402) *
               C50909 +
           (C19220 + C19219 + C19218) * C51019) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C454 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C455 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C51019 +
            (C19382 + C19383 + C19384) * C50909) *
               C50735 * C456) *
              C1022 +
          (((C18958 + C18957 + C18956) * C51019 +
            (C15252 * C1562 + C17149 + C17149 + C15249 * C1570 +
             C15254 * C3559 + C17148 + C17148 + C15250 * C3565 +
             C15256 * C10088 + C17147 + C17147 + C15251 * C10092) *
                C50909) *
               C50735 * C455 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C454 -
           ((C15256 * C14655 + C19373 + C19373 + C15251 * C14659 +
             C15254 * C10088 + C19374 + C19374 + C15250 * C10092 +
             C15252 * C3559 + C19375 + C19375 + C15249 * C3565) *
                C50909 +
            (C19384 + C19383 + C19382) * C51019) *
               C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
             C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
                C50735 * C51010 -
            (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
                C50735 * C50861) *
               C1022 +
           ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
             (C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C10650) *
                C50735 * C50861 -
            (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 +
             C2470 * C10647) *
                C50735 * C51010) *
               C50833) *
              C51001 +
          (((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
                C50735 * C50861 -
            (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
                C50735 * C51010) *
               C1022 +
           ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
                C50735 * C51010 -
            ((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C10650 +
             C8781 * C10649 + C3147 * C10648 + C919 * C10647) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
              C2470 * C50909) *
                 C2288 +
             (C2292 + C2293) * C2289 + C2300 * C2290) *
                C51010 -
            (C2935 * C2290 + (C2624 + C2625) * C2289 +
             (C3146 * C50909 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                 C2288) *
                C50861) *
               C1022 +
           (((C3146 * C51019 +
              (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50909) *
                 C2288 +
             (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                C50861 -
            (C2786 * C2290 + (C2452 + C2453) * C2289 +
             (C2471 * C50909 + C2470 * C51019) * C2288) *
                C51010) *
               C50833) *
              C51001 +
          ((((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
             (C2936 + C2937) * C2290) *
                C50861 -
            (C2301 * C2290 + (C2295 + C2294) * C2289 +
             (C2293 + C2292) * C2288) *
                C51010) *
               C1022 +
           (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
             (C2787 + C2788) * C2290) *
                C51010 -
            (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
              C921 * C51019) *
                 C2290 +
             (C3150 + C3137) * C2289 + (C3149 + C3134) * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
              C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 +
              C15261 + C15251 * C481) *
                 C51019 +
             (C18306 + C18307 + C18308) * C50909) *
                C50735 * C51010 -
            ((C18956 + C18957 + C18958) * C50909 +
             (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 +
              C15254 * C461 + C15669 + C15669 + C15250 * C481 + C15252 * C460 +
              C15670 + C15670 + C15249 * C480) *
                 C51019) *
                C50735 * C50861) *
               C1022 +
           (((C18958 + C18957 + C18956) * C51019 +
             (C15252 * C1562 + C17149 + C17149 + C15249 * C1570 +
              C15254 * C3559 + C17148 + C17148 + C15250 * C3565 +
              C15256 * C10088 + C17147 + C17147 + C15251 * C10092) *
                 C50909) *
                C50735 * C50861 -
            ((C18309 + C18310 + C18311) * C50909 +
             (C18308 + C18307 + C18306) * C51019) *
                C50735 * C51010) *
               C50833) *
              C51001 +
          ((((C15703 + C15702 + C15701) * C51019 +
             (C16250 + C16251 + C16252) * C50909) *
                C50735 * C50861 -
            ((C15507 + C15508 + C15509) * C50909 +
             (C15312 + C15311 + C15310) * C51019) *
                C50735 * C51010) *
               C1022 +
           (((C15509 + C15508 + C15507) * C51019 +
             (C15510 + C15511 + C15512) * C50909) *
                C50735 * C51010 -
            ((C15256 * C10087 + C17144 + C17144 + C15251 * C10091 +
              C15254 * C3558 + C17145 + C17145 + C15250 * C3564 +
              C15252 * C1561 + C17146 + C17146 + C15249 * C1569) *
                 C50909 +
             (C16252 + C16251 + C16250) * C51019) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            C2470 * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C50797 * C1093 -
          (C2786 * C2290 + (C2452 + C2453) * C2289 +
           (C2471 * C50909 + C2470 * C51019) * C2288) *
              C50797 * C1094 +
          ((C2471 * C51019 + C3411 * C50909) * C2288 + (C2456 + C2474) * C2289 +
           (C2459 + C2475) * C2290) *
              C50797 * C1095 -
          (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C50909 +
            C2473 * C51019) *
               C2290 +
           ((C117 * C3395 + C3407 + C3407 + C50923 * C3401) * C50909 +
            C2472 * C51019) *
               C2289 +
           ((C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C50909 +
            C3411 * C51019) *
               C2288) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C1022 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C50833) *
              C1024 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C50833 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C1022) *
              C1025 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C50797 * C1022 -
           (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
             C645 * C51019) *
                C2290 +
            (C2788 + C2787) * C2289 + C2786 * C2288) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C1022 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C50833) *
              C1024 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C50833 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C50797 * C1022 -
           ((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C10650 +
            C2473 * C10649 + C349 * C10648 + C346 * C10647) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C1093 -
          (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
              C50735 * C50797 * C1094 +
          (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 + C11347 * C10650) *
              C50735 * C50797 * C1095 -
          ((C117 * C11338 + C11344 + C11344 + C50923 * C11340) * C10650 +
           C11347 * C10649 + C9039 * C10648 + C3411 * C10647) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C50797 * C1022 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C50797 * C50833) *
              C1024 +
          (((C15509 + C15508 + C15507) * C51019 +
            (C15510 + C15511 + C15512) * C50909) *
               C50735 * C50797 * C50833 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C50797 * C1022) *
              C1025 +
          (((C15315 + C15314 + C15313) * C51019 +
            (C15868 + C15869 + C15870) * C50909) *
               C50735 * C50797 * C1022 -
           ((C15256 * C3557 + C15492 + C15492 + C15251 * C3563 +
             C15254 * C1560 + C15493 + C15493 + C15250 * C1568 + C15252 * C286 +
             C15494 + C15494 + C15249 * C306) *
                C50909 +
            (C15870 + C15869 + C15868) * C51019) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C51019 +
           (C18306 + C18307 + C18308) * C50909) *
              C50735 * C50797 * C1093 -
          ((C18309 + C18310 + C18311) * C50909 +
           (C18308 + C18307 + C18306) * C51019) *
              C50735 * C50797 * C1094 +
          ((C18311 + C18310 + C18309) * C51019 +
           (C19218 + C19219 + C19220) * C50909) *
              C50735 * C50797 * C1095 -
          ((C15256 * C11445 + C19209 + C19209 + C15251 * C11447 +
            C15254 * C9685 + C19210 + C19210 + C15250 * C9689 + C15252 * C3396 +
            C19211 + C19211 + C15249 * C3402) *
               C50909 +
           (C19220 + C19219 + C19218) * C51019) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
             C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
                C50735 * C1673 -
            (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
                C50735 * C50861) *
               C51009 +
           ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
             C11789 * C10650) *
                C50735 * C50861 -
            (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 +
             C2470 * C10647) *
                C50735 * C1673) *
               C50833) *
              C51001 +
          (((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
                C50735 * C50861 -
            (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
                C50735 * C1673) *
               C51009 +
           ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
                C50735 * C1673 -
            ((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C10650 +
             C8781 * C10649 + C3147 * C10648 + C919 * C10647) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
              C2470 * C50909) *
                 C2288 +
             (C2292 + C2293) * C2289 + C2300 * C2290) *
                C1673 -
            (C2935 * C2290 + (C2624 + C2625) * C2289 +
             (C3146 * C50909 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                 C2288) *
                C50861) *
               C51009 +
           (((C3146 * C51019 + C4077 * C50909) * C2288 +
             (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                C50861 -
            (C2786 * C2290 + (C2452 + C2453) * C2289 +
             (C2471 * C50909 + C2470 * C51019) * C2288) *
                C1673) *
               C50833) *
              C51001 +
          ((((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
             (C2936 + C2937) * C2290) *
                C50861 -
            (C2301 * C2290 + (C2295 + C2294) * C2289 +
             (C2293 + C2292) * C2288) *
                C1673) *
               C51009 +
           (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
             (C2787 + C2788) * C2290) *
                C1673 -
            (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
              C921 * C51019) *
                 C2290 +
             (C3150 + C3137) * C2289 + (C3149 + C3134) * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
              C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 +
              C15261 + C15251 * C481) *
                 C51019 +
             (C18306 + C18307 + C18308) * C50909) *
                C50735 * C1673 -
            ((C18956 + C18957 + C18958) * C50909 +
             (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 +
              C15254 * C461 + C15669 + C15669 + C15250 * C481 + C15252 * C460 +
              C15670 + C15670 + C15249 * C480) *
                 C51019) *
                C50735 * C50861) *
               C51009 +
           (((C18958 + C18957 + C18956) * C51019 +
             (C19886 + C19887 + C19888) * C50909) *
                C50735 * C50861 -
            ((C18309 + C18310 + C18311) * C50909 +
             (C18308 + C18307 + C18306) * C51019) *
                C50735 * C1673) *
               C50833) *
              C51001 +
          ((((C15703 + C15702 + C15701) * C51019 +
             (C16250 + C16251 + C16252) * C50909) *
                C50735 * C50861 -
            ((C15507 + C15508 + C15509) * C50909 +
             (C15312 + C15311 + C15310) * C51019) *
                C50735 * C1673) *
               C51009 +
           (((C15509 + C15508 + C15507) * C51019 +
             (C15510 + C15511 + C15512) * C50909) *
                C50735 * C1673 -
            ((C15256 * C10087 + C17144 + C17144 + C15251 * C10091 +
              C15254 * C3558 + C17145 + C17145 + C15250 * C3564 +
              C15252 * C1561 + C17146 + C17146 + C15249 * C1569) *
                 C50909 +
             (C16252 + C16251 + C16250) * C51019) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51055 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
               C50735 * C2089) *
              C51009 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C51056 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C51055 -
           ((C117 * C11445 + C11451 + C11451 + C50923 * C11447) * C10650 +
            C11454 * C10649 + C9198 * C10648 + C3574 * C10647) *
               C50735 * C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51055 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             C3574 * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C2089) *
              C51009 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C51056 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C51055 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C50909 +
             C2637 * C51019) *
                C2290 +
            ((C117 * C3558 + C3570 + C3570 + C50923 * C3564) * C50909 +
             C2636 * C51019) *
                C2289 +
            ((C117 * C3559 + C3571 + C3571 + C50923 * C3565) * C50909 +
             C3574 * C51019) *
                C2288) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C51055 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C51056 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C51019 +
            (C19382 + C19383 + C19384) * C50909) *
               C50735 * C2089) *
              C51009 +
          (((C18958 + C18957 + C18956) * C51019 +
            (C19886 + C19887 + C19888) * C50909) *
               C50735 * C51056 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C51055 -
           ((C15256 * C14655 + C19373 + C19373 + C15251 * C14659 +
             C15254 * C10088 + C19374 + C19374 + C15250 * C10092 +
             C15252 * C3559 + C19375 + C19375 + C15249 * C3565) *
                C50909 +
            (C19384 + C19383 + C19382) * C51019) *
               C50735 * C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
                 C2470 * C50909) *
                    C2288 +
                (C2292 + C2293) * C2289 + C2300 * C2290) *
                   C1673 -
               (C2935 * C2290 + (C2624 + C2625) * C2289 +
                (C3146 * C50909 +
                 (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                    C2288) *
                   C50861) *
                  C50781 * C1024 +
              (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
                (C2936 + C2937) * C2290) *
                   C50861 -
               (C2301 * C2290 + (C2295 + C2294) * C2289 +
                (C2293 + C2292) * C2288) *
                   C1673) *
                  C50781 * C1025 +
              ((C2300 * C2288 + (C2297 + C2296) * C2289 +
                (C2298 + C2299) * C2290) *
                   C1673 -
               (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
                 C755 * C51019) *
                    C2290 +
                (C2937 + C2936) * C2289 + C2935 * C2288) *
                   C50861) *
                  C50781 * C1026) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
                 C2470 * C50909) *
                    C2288 +
                (C2292 + C2293) * C2289 + C2300 * C2290) *
                   C1673 -
               (C2935 * C2290 + (C2624 + C2625) * C2289 +
                (C3146 * C50909 +
                 (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                    C2288) *
                   C50861) *
                  C275 +
              (((C3146 * C51019 + C4077 * C50909) * C2288 +
                (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                   C50861 -
               (C2786 * C2290 + (C2452 + C2453) * C2289 +
                (C2471 * C50909 + C2470 * C51019) * C2288) *
                   C1673) *
                  C276 +
              (((C2471 * C51019 + C3411 * C50909) * C2288 +
                (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
                   C1673 -
               (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
                 C3148 * C51019) *
                    C2290 +
                ((C117 * C4061 + C4073 + C4073 + C50923 * C4067) * C50909 +
                 C3147 * C51019) *
                    C2289 +
                ((C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C50909 +
                 C4077 * C51019) *
                    C2288) *
                   C50861) *
                  C277) *
             C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            C2470 * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C1839 -
          (C2935 * C2290 + (C2624 + C2625) * C2289 +
           (C3146 * C50909 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
               C2288) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
            C3574 * C50909) *
               C2288 +
           (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
              C1841 -
          (((C117 * C4467 + C4477 + C4477 + C50923 * C4473) * C50909 +
            (C117 * C1844 + C1857 + C1857 + C50923 * C1852) * C51019) *
               C2290 +
           ((C117 * C4468 + C4478 + C4478 + C50923 * C4474) * C50909 +
            (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C51019) *
               C2289 +
           ((C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C50909 +
            (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C51019) *
               C2288) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C50781 * C1024 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C50861 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C1673 -
           ((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C10650 +
            C3148 * C10649 + C920 * C10648 + C523 * C10647) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C275 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C50861 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C1673) *
              C276 +
          ((C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C1673 -
           ((C117 * C11780 + C11786 + C11786 + C50923 * C11782) * C10650 +
            C11789 * C10649 + C9697 * C10648 + C4077 * C10647) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C1839 -
          (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
           (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
              C50735 * C1840 +
          ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
           C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
              C50735 * C1841 -
          ((C117 * C12051 + C12055 + C12055 + C50923 * C12053) * C10650 +
           (C117 * C10088 + C10095 + C10095 + C50923 * C10092) * C10649 +
           (C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C10648 +
           (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C10647) *
              C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C1673 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C15703 + C15702 + C15701) * C51019 +
            (C16250 + C16251 + C16252) * C50909) *
               C50735 * C50861 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C1673) *
              C50781 * C1025 +
          (((C15315 + C15314 + C15313) * C51019 +
            (C15868 + C15869 + C15870) * C50909) *
               C50735 * C1673 -
           ((C15256 * C4467 + C16241 + C16241 + C15251 * C4473 +
             C15254 * C1213 + C16242 + C16242 + C15250 * C1221 + C15252 * C888 +
             C16243 + C16243 + C15249 * C898) *
                C50909 +
            (C16034 + C16033 + C16032) * C51019) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C1673 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C50861) *
              C275 +
          (((C18958 + C18957 + C18956) * C51019 +
            (C19886 + C19887 + C19888) * C50909) *
               C50735 * C50861 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C1673) *
              C276 +
          (((C18311 + C18310 + C18309) * C51019 +
            (C19218 + C19219 + C19220) * C50909) *
               C50735 * C1673 -
           ((C15256 * C12051 + C19877 + C19877 + C15251 * C12053 +
             C15254 * C9186 + C19878 + C19878 + C15250 * C9190 +
             C15252 * C4062 + C19879 + C19879 + C15249 * C4068) *
                C50909 +
            (C19888 + C19887 + C19886) * C51019) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
            C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
            C15251 * C481) *
               C51019 +
           (C18306 + C18307 + C18308) * C50909) *
              C50735 * C1839 -
          ((C18956 + C18957 + C18958) * C50909 +
           (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
            C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
            C15249 * C480) *
               C51019) *
              C50735 * C1840 +
          ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
            C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
            C15673 + C15251 * C7363) *
               C51019 +
           (C19382 + C19383 + C19384) * C50909) *
              C50735 * C1841 -
          ((C15256 * C20278 + C20282 + C20282 + C15251 * C20280 +
            C15254 * C14656 + C20283 + C20283 + C15250 * C14660 +
            C15252 * C4469 + C20284 + C20284 + C15249 * C4475) *
               C50909 +
           (C15256 * C17540 + C17549 + C17549 + C15251 * C17544 +
            C15254 * C7357 + C17550 + C17550 + C15250 * C7363 + C15252 * C1846 +
            C17551 + C17551 + C15249 * C1854) *
               C51019) *
              C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51055 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
               C50735 * C2089) *
              C50781 * C51001 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C51056 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C51055 -
           ((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C10650 +
            C8281 * C10649 + C2636 * C10648 + C525 * C10647) *
               C50735 * C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51055 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             C3574 * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C2089) *
              C50781 * C51001 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C51056 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C51055 -
           (((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50909 +
             C527 * C51019) *
                C2290 +
            (C2639 + C2629) * C2289 + (C2638 + C2626) * C2288) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C51055 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C51056 +
           ((C15252 * C461 + C15671 + C15671 + C15249 * C481 + C15254 * C1846 +
             C15672 + C15672 + C15250 * C1854 + C15256 * C7357 + C15673 +
             C15673 + C15251 * C7363) *
                C51019 +
            (C19382 + C19383 + C19384) * C50909) *
               C50735 * C2089) *
              C50781 * C51001 +
          (((C15703 + C15702 + C15701) * C51019 +
            (C16250 + C16251 + C16252) * C50909) *
               C50735 * C51056 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C51055 -
           ((C15256 * C16648 + C16652 + C16652 + C15251 * C16650 +
             C15254 * C4468 + C16653 + C16653 + C15250 * C4474 +
             C15252 * C1214 + C16654 + C16654 + C15249 * C1222) *
                C50909 +
            (C15706 + C15705 + C15704) * C51019) *
               C50735 * C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C1673 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C275 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C50861 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C1673) *
              C276 +
          (((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C1673 -
           (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
             C3148 * C51019) *
                C2290 +
            ((C117 * C4061 + C4073 + C4073 + C50923 * C4067) * C50909 +
             C3147 * C51019) *
                C2289 +
            ((C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C50909 +
             C4077 * C51019) *
                C2288) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C1673 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C50781 * C1024 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C50861 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C1673) *
              C50781 * C1025 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C1673 -
           (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
             C755 * C51019) *
                C2290 +
            (C2937 + C2936) * C2289 + C2935 * C2288) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C50781 * C1024 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C50861 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C1673 -
           ((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C10650 +
            C3148 * C10649 + C920 * C10648 + C523 * C10647) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C275 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C50861 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C1673) *
              C276 +
          ((C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C1673 -
           ((C117 * C11780 + C11786 + C11786 + C50923 * C11782) * C10650 +
            C11789 * C10649 + C9697 * C10648 + C4077 * C10647) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C1673 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C15703 + C15702 + C15701) * C51019 +
            (C16250 + C16251 + C16252) * C50909) *
               C50735 * C50861 -
           ((C15507 + C15508 + C15509) * C50909 +
            (C15312 + C15311 + C15310) * C51019) *
               C50735 * C1673) *
              C50781 * C1025 +
          (((C15315 + C15314 + C15313) * C51019 +
            (C15868 + C15869 + C15870) * C50909) *
               C50735 * C1673 -
           ((C15256 * C4467 + C16241 + C16241 + C15251 * C4473 +
             C15254 * C1213 + C16242 + C16242 + C15250 * C1221 + C15252 * C888 +
             C16243 + C16243 + C15249 * C898) *
                C50909 +
            (C16034 + C16033 + C16032) * C51019) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15252 * C119 + C15259 + C15259 + C15249 * C133 + C15254 * C460 +
             C15260 + C15260 + C15250 * C480 + C15256 * C461 + C15261 + C15261 +
             C15251 * C481) *
                C51019 +
            (C18306 + C18307 + C18308) * C50909) *
               C50735 * C1673 -
           ((C18956 + C18957 + C18958) * C50909 +
            (C15256 * C1846 + C15668 + C15668 + C15251 * C1854 + C15254 * C461 +
             C15669 + C15669 + C15250 * C481 + C15252 * C460 + C15670 + C15670 +
             C15249 * C480) *
                C51019) *
               C50735 * C50861) *
              C275 +
          (((C18958 + C18957 + C18956) * C51019 +
            (C19886 + C19887 + C19888) * C50909) *
               C50735 * C50861 -
           ((C18309 + C18310 + C18311) * C50909 +
            (C18308 + C18307 + C18306) * C51019) *
               C50735 * C1673) *
              C276 +
          (((C18311 + C18310 + C18309) * C51019 +
            (C19218 + C19219 + C19220) * C50909) *
               C50735 * C1673 -
           ((C15256 * C12051 + C19877 + C19877 + C15251 * C12053 +
             C15254 * C9186 + C19878 + C19878 + C15250 * C9190 +
             C15252 * C4062 + C19879 + C19879 + C15249 * C4068) *
                C50909 +
            (C19888 + C19887 + C19886) * C51019) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C51009 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C50833) *
              C51051 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C50833 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C51009) *
              C51052 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C50797 * C51009 -
           ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
             C6317 + C6317 + C51021 * C1107) *
                C7956 +
            (C5327 + C5326) * C7955 + C5676 * C7954) *
               C50735 * C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C51009 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C50833) *
              C51051 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5688 + C5689) * C50893 * C2290) *
               C50797 * C50833 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C51009) *
              C51052 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C50797 * C51009 -
           ((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50893 * C2290 +
            (C5689 + C5688) * C50893 * C2289 + C5683 * C2288) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C50797 * C51009 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C50797 * C50833) *
              C51051 +
          ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
            C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 + C20973 +
            C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
            C20839 * C4474) *
               C50893 * C50735 * C50797 * C50833 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C50797 * C51009) *
              C51052 +
          ((C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
            C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
            C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
               C50893 * C50735 * C50797 * C51009 -
           (C20846 * C4467 + C21191 + C21191 + C20839 * C4473 + C20844 * C1213 +
            C21192 + C21192 + C20838 * C1221 + C20842 * C888 + C21193 + C21193 +
            C20837 * C898 + C20840 * C281 + C21194 + C21194 + C20836 * C301) *
               C50893 * C50735 * C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C7954 +
             (C12663 + C12664) * C7955 + C12671 * C7956) *
                C50735 * C51010 -
            ((C13336 + C13337) * C7956 + (C13338 + C13339) * C7955 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C7954) *
                C50735 * C50861) *
               C51009 +
           (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
             (C5065 * C4062 + C13316 + C13316 + C51021 * C4068 + C5067 * C9186 +
              C13317 + C13317 + C50935 * C9190) *
                 C7956) *
                C50735 * C50861 -
            ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
             (C12664 + C12663) * C7954) *
                C50735 * C51010) *
               C50833) *
              C278 +
          ((((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
             (C13340 + C13341) * C7956) *
                C50735 * C50861 -
            (C12644 * C7956 + (C5322 + C5323) * C7955 +
             (C5115 + C5114) * C7954) *
                C50735 * C51010) *
               C51009 +
           (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
             (C12669 + C12670) * C7956) *
                C50735 * C51010 -
            ((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 + C5065 * C4061 +
              C13323 + C13323 + C51021 * C4067) *
                 C7956 +
             (C13341 + C13340) * C7955 + (C6069 + C6068) * C7954) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C50893 * C2288 +
             (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                C51010 -
            (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C50893 * C2288) *
                C50861) *
               C51009 +
           (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
              C6045 + C6045 + C50935 * C1223) *
                 C50893 * C2288 +
             (C6068 + C6069) * C50893 * C2289 +
             (C6070 + C6071) * C50893 * C2290) *
                C50861 -
            (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
             (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
              C5285 + C5285 + C51021 * C303) *
                 C50893 * C2288) *
                C51010) *
               C50833) *
              C278 +
          ((((C5525 + C5524) * C50893 * C2288 +
             (C5523 + C5522) * C50893 * C2289 +
             (C5848 + C5849) * C50893 * C2290) *
                C50861 -
            (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
             (C5115 + C5114) * C50893 * C2288) *
                C51010) *
               C51009 +
           (((C5323 + C5322) * C50893 * C2288 +
             (C5321 + C5320) * C50893 * C2289 +
             (C5688 + C5689) * C50893 * C2290) *
                C51010 -
            ((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 + C5065 * C889 +
              C6059 + C6059 + C51021 * C899) *
                 C50893 * C2290 +
             (C6071 + C6070) * C50893 * C2289 +
             (C6069 + C6068) * C50893 * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
             C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
             C20838 * C481 + C20846 * C1846 + C20852 + C20852 +
             C20839 * C1854) *
                C50893 * C50735 * C51010 -
            (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 +
             C20844 * C1846 + C21078 + C21078 + C20838 * C1854 + C20842 * C461 +
             C21079 + C21079 + C20837 * C481 + C20840 * C460 + C21080 + C21080 +
             C20836 * C480) *
                C50893 * C50735 * C50861) *
               C51009 +
           ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
             C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
             C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
             C20839 * C14660) *
                C50893 * C50735 * C50861 -
            (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 +
             C20844 * C1215 + C20964 + C20964 + C20838 * C1223 + C20842 * C886 +
             C20965 + C20965 + C20837 * C896 + C20840 * C283 + C20966 + C20966 +
             C20836 * C303) *
                C50893 * C50735 * C51010) *
               C50833) *
              C278 +
          (((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
             C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 +
             C21087 + C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
             C20839 * C7362) *
                C50893 * C50735 * C50861 -
            (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
             C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
             C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
                C50893 * C50735 * C51010) *
               C51009 +
           ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
             C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 +
             C20973 + C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
             C20839 * C4474) *
                C50893 * C50735 * C51010 -
            (C20846 * C16648 + C21431 + C21431 + C20839 * C16650 +
             C20844 * C4468 + C21432 + C21432 + C20838 * C4474 +
             C20842 * C1214 + C21433 + C21433 + C20837 * C1222 + C20840 * C887 +
             C21434 + C21434 + C20836 * C897) *
                C50893 * C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
                C5071 + C5071 + C50935 * C480) *
                   C50893 * C2288 +
               (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                  C50797 * C50781 * C113 -
              (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
               (C5115 + C5114) * C50893 * C2288) *
                  C50797 * C50781 * C114 +
              (C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
               (C5120 + C5121) * C50893 * C2290) *
                  C50797 * C50781 * C115 -
              ((C5067 * C746 + C5096 + C5096 + C50935 * C748 + C5065 * C124 +
                C5097 + C5097 + C51021 * C138) *
                   C50893 * C2290 +
               (C5121 + C5120) * C50893 * C2289 + C5125 * C2288) *
                  C50797 * C50781 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
                 C5071 + C5071 + C50935 * C480) *
                    C50893 * C2288 +
                (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                   C50797 * C275 -
               ((C5320 + C5321) * C50893 * C2290 +
                (C5322 + C5323) * C50893 * C2289 +
                (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
                 C5285 + C5285 + C51021 * C303) *
                    C50893 * C2288) *
                   C50797 * C276 +
               ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
                 C5287 + C5287 + C50935 * C1570) *
                    C50893 * C2288 +
                (C5324 + C5325) * C50893 * C2289 +
                (C5326 + C5327) * C50893 * C2290) *
                   C50797 * C277) *
                  C278 +
              (((C5323 + C5322) * C50893 * C2288 +
                (C5321 + C5320) * C50893 * C2289 +
                (C5065 * C280 + C5300 + C5300 + C51021 * C300 + C5067 * C889 +
                 C5301 + C5301 + C50935 * C899) *
                    C50893 * C2290) *
                   C50797 * C276 -
               (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                (C5115 + C5114) * C50893 * C2288) *
                   C50797 * C275 -
               ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
                 C5303 + C5303 + C51021 * C307) *
                    C50893 * C2290 +
                (C5327 + C5326) * C50893 * C2289 +
                (C5325 + C5324) * C50893 * C2288) *
                   C50797 * C277) *
                  C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C454 -
           ((C5522 + C5523) * C50893 * C2290 +
            (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C50893 * C2288 +
            (C5526 + C5527) * C50893 * C2289 +
            (C5528 + C5529) * C50893 * C2290) *
               C456) *
              C50781 * C278 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5065 * C457 + C5502 + C5502 + C51021 * C477 + C5067 * C464 +
             C5503 + C5503 + C50935 * C484) *
                C50893 * C2290) *
               C455 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C454 -
           ((C5067 * C1843 + C5504 + C5504 + C50935 * C1851 + C5065 * C464 +
             C5505 + C5505 + C51021 * C484) *
                C50893 * C2290 +
            (C5529 + C5528) * C50893 * C2289 +
            (C5527 + C5526) * C50893 * C2288) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C5065 * C283 + C5285 + C5285 + C51021 * C303 + C5067 * C886 +
            C5284 + C5284 + C50935 * C896) *
               C7955 +
           (C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C7956) *
              C50735 * C50797 * C50781 * C113 -
          ((C5325 + C5324) * C7956 + (C5322 + C5323) * C7955 +
           (C5115 + C5114) * C7954) *
              C50735 * C50797 * C50781 * C114 +
          (C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
              C50735 * C50797 * C50781 * C115 -
          ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
            C5303 + C5303 + C51021 * C307) *
               C7956 +
           (C5689 + C5688) * C7955 + C5123 * C7954) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C275 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C276 +
           (C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C5065 * C3396 + C12638 + C12638 + C51021 * C3402 + C5067 * C9685 +
             C12639 + C12639 + C50935 * C9689) *
                C7956) *
               C50735 * C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C276 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C275 -
           ((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C7956 +
            (C12670 + C12669) * C7955 + C12644 * C7954) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C454 -
           ((C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C7956 +
            (C5067 * C1215 + C6045 + C6045 + C50935 * C1223 + C5065 * C886 +
             C6044 + C6044 + C51021 * C896) *
                C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C7954 +
            (C5065 * C1215 + C6473 + C6473 + C51021 * C1223 + C5067 * C4469 +
             C6472 + C6472 + C50935 * C4475) *
                C7955 +
            (C5065 * C3559 + C12818 + C12818 + C51021 * C3565 + C5067 * C10088 +
             C12819 + C12819 + C50935 * C10092) *
                C7956) *
               C50735 * C456) *
              C50781 * C278 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C5065 * C1561 + C6963 + C6963 + C51021 * C1569 + C5067 * C3558 +
             C6962 + C6962 + C50935 * C3564) *
                C7956) *
               C50735 * C455 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C454 -
           ((C5067 * C10087 + C12820 + C12820 + C50935 * C10091 +
             C5065 * C3558 + C12821 + C12821 + C51021 * C3564) *
                C7956 +
            (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 + C5065 * C1214 +
             C6471 + C6471 + C51021 * C1222) *
                C7955 +
            (C5527 + C5526) * C7954) *
               C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
           C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
           C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
              C50893 * C50735 * C50797 * C50781 * C113 -
          (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
           C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
           C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
              C50893 * C50735 * C50797 * C50781 * C114 +
          (C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
           C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
           C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
              C50893 * C50735 * C50797 * C50781 * C115 -
          (C20846 * C1843 + C20861 + C20861 + C20839 * C1851 + C20844 * C464 +
           C20862 + C20862 + C20838 * C484 + C20842 * C457 + C20863 + C20863 +
           C20837 * C477 + C20840 * C122 + C20864 + C20864 + C20836 * C136) *
              C50893 * C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C50797 * C275 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C50797 * C276 +
           (C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
            C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 +
            C20969 + C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
            C20839 * C10092) *
               C50893 * C50735 * C50797 * C277) *
              C278 +
          ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
            C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 + C20973 +
            C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
            C20839 * C4474) *
               C50893 * C50735 * C50797 * C276 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C50797 * C275 -
           (C20846 * C10087 + C20975 + C20975 + C20839 * C10091 +
            C20844 * C3558 + C20976 + C20976 + C20838 * C3564 + C20842 * C1561 +
            C20977 + C20977 + C20837 * C1569 + C20840 * C285 + C20978 + C20978 +
            C20836 * C305) *
               C50893 * C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C454 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C455 +
           (C20840 * C461 + C21081 + C21081 + C20836 * C481 + C20842 * C1846 +
            C21082 + C21082 + C20837 * C1854 + C20844 * C7357 + C21083 +
            C21083 + C20838 * C7363 + C20846 * C17540 + C21084 + C21084 +
            C20839 * C17544) *
               C50893 * C50735 * C456) *
              C50781 * C278 +
          ((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
            C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 + C21087 +
            C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
            C20839 * C7362) *
               C50893 * C50735 * C455 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C454 -
           (C20846 * C17539 + C21089 + C21089 + C20839 * C17543 +
            C20844 * C7356 + C21090 + C21090 + C20838 * C7362 + C20842 * C1845 +
            C21091 + C21091 + C20837 * C1853 + C20840 * C462 + C21092 + C21092 +
            C20836 * C482) *
               C50893 * C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C51010 -
           ((C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C7956 +
            (C5067 * C1215 + C6045 + C6045 + C50935 * C1223 + C5065 * C886 +
             C6044 + C6044 + C51021 * C896) *
                C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C50781 * C51051 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C5065 * C1561 + C6963 + C6963 + C51021 * C1569 + C5067 * C3558 +
             C6962 + C6962 + C50935 * C3564) *
                C7956) *
               C50735 * C50861 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C51010) *
              C50781 * C51052 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C51010 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C7956 +
            (C6071 + C6070) * C7955 + C5836 * C7954) *
               C50735 * C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C51010 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C50781 * C51051 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5848 + C5849) * C50893 * C2290) *
               C50861 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C51010) *
              C50781 * C51052 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C51010 -
           ((C5067 * C466 + C5841 + C5841 + C50935 * C486 + C5065 * C465 +
             C5842 + C5842 + C51021 * C485) *
                C50893 * C2290 +
            (C5849 + C5848) * C50893 * C2289 + C5843 * C2288) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C51010 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C50861) *
              C50781 * C51051 +
          ((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
            C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 + C21087 +
            C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
            C20839 * C7362) *
               C50893 * C50735 * C50861 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C51010) *
              C50781 * C51052 +
          ((C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
            C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
            C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
               C50893 * C50735 * C51010 -
           (C20846 * C7355 + C21293 + C21293 + C20839 * C7361 + C20844 * C1844 +
            C21294 + C21294 + C20838 * C1852 + C20842 * C463 + C21295 + C21295 +
            C20837 * C483 + C20840 * C458 + C21296 + C21296 + C20836 * C478) *
               C50893 * C50735 * C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C275 -
           ((C5320 + C5321) * C50893 * C2290 +
            (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C276 +
           ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5065 * C280 + C5300 + C5300 + C51021 * C300 + C5067 * C889 +
             C5301 + C5301 + C50935 * C899) *
                C50893 * C2290) *
               C50797 * C276 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C275 -
           ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
             C5303 + C5303 + C51021 * C307) *
                C50893 * C2290 +
            (C5327 + C5326) * C50893 * C2289 +
            (C5325 + C5324) * C50893 * C2288) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C50797 * C50781 * C113 -
          (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
           (C5115 + C5114) * C50893 * C2288) *
              C50797 * C50781 * C114 +
          (C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
           (C5120 + C5121) * C50893 * C2290) *
              C50797 * C50781 * C115 -
          ((C5067 * C746 + C5096 + C5096 + C50935 * C748 + C5065 * C124 +
            C5097 + C5097 + C51021 * C138) *
               C50893 * C2290 +
           (C5121 + C5120) * C50893 * C2289 + C5125 * C2288) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C5065 * C283 + C5285 + C5285 + C51021 * C303 + C5067 * C886 +
            C5284 + C5284 + C50935 * C896) *
               C7955 +
           (C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C7956) *
              C50735 * C50797 * C50781 * C113 -
          ((C5325 + C5324) * C7956 + (C5322 + C5323) * C7955 +
           (C5115 + C5114) * C7954) *
              C50735 * C50797 * C50781 * C114 +
          (C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
              C50735 * C50797 * C50781 * C115 -
          ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
            C5303 + C5303 + C51021 * C307) *
               C7956 +
           (C5689 + C5688) * C7955 + C5123 * C7954) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C275 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C276 +
           (C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C5065 * C3396 + C12638 + C12638 + C51021 * C3402 + C5067 * C9685 +
             C12639 + C12639 + C50935 * C9689) *
                C7956) *
               C50735 * C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C276 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C275 -
           ((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C7956 +
            (C12670 + C12669) * C7955 + C12644 * C7954) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
           C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
           C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
              C50893 * C50735 * C50797 * C50781 * C113 -
          (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
           C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
           C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
              C50893 * C50735 * C50797 * C50781 * C114 +
          (C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
           C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
           C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
              C50893 * C50735 * C50797 * C50781 * C115 -
          (C20846 * C1843 + C20861 + C20861 + C20839 * C1851 + C20844 * C464 +
           C20862 + C20862 + C20838 * C484 + C20842 * C457 + C20863 + C20863 +
           C20837 * C477 + C20840 * C122 + C20864 + C20864 + C20836 * C136) *
              C50893 * C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C50797 * C275 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C50797 * C276 +
           (C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
            C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 +
            C20969 + C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
            C20839 * C10092) *
               C50893 * C50735 * C50797 * C277) *
              C278 +
          ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
            C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 + C20973 +
            C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
            C20839 * C4474) *
               C50893 * C50735 * C50797 * C276 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C50797 * C275 -
           (C20846 * C10087 + C20975 + C20975 + C20839 * C10091 +
            C20844 * C3558 + C20976 + C20976 + C20838 * C3564 + C20842 * C1561 +
            C20977 + C20977 + C20837 * C1569 + C20840 * C285 + C20978 + C20978 +
            C20836 * C305) *
               C50893 * C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C51053 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C51054 +
           (C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C13597 + C13598) * C7956) *
               C50735 * C50797 * C1328) *
              C51001 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C51054 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C51053 -
           ((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C7956 +
            (C12670 + C12669) * C7955 + C12644 * C7954) *
               C50735 * C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C51053 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C51054 +
           ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C50797 * C1328) *
              C51001 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5688 + C5689) * C50893 * C2290) *
               C50797 * C51054 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C51053 -
           ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
             C5303 + C5303 + C51021 * C307) *
                C50893 * C2290 +
            (C5327 + C5326) * C50893 * C2289 +
            (C5325 + C5324) * C50893 * C2288) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C50797 * C51053 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C50797 * C51054 +
           (C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
            C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 +
            C20969 + C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
            C20839 * C10092) *
               C50893 * C50735 * C50797 * C1328) *
              C51001 +
          ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
            C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 + C20973 +
            C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
            C20839 * C4474) *
               C50893 * C50735 * C50797 * C51054 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C50797 * C51053 -
           (C20846 * C10087 + C20975 + C20975 + C20839 * C10091 +
            C20844 * C3558 + C20976 + C20976 + C20838 * C3564 + C20842 * C1561 +
            C20977 + C20977 + C20837 * C1569 + C20840 * C285 + C20978 + C20978 +
            C20836 * C305) *
               C50893 * C50735 * C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C51010 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C51053 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C14264 + C14265) * C7956) *
               C50735 * C50861 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C51010) *
              C51054 +
          ((C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C13597 + C13598) * C7956) *
               C50735 * C51010 -
           ((C5067 * C11445 + C14258 + C14258 + C50935 * C11447 +
             C5065 * C9685 + C14259 + C14259 + C51021 * C9689) *
                C7956 +
            (C14265 + C14264) * C7955 + C14253 * C7954) *
               C50735 * C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C51010 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C51053 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C50861 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C51010) *
              C51054 +
          (((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C51010 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C50893 * C2290 +
            (C5067 * C3558 + C6962 + C6962 + C50935 * C3564 + C5065 * C1561 +
             C6963 + C6963 + C51021 * C1569) *
                C50893 * C2289 +
            (C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C50893 * C2288) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C51010 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C50861) *
              C51053 +
          ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
            C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
            C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
            C20839 * C14660) *
               C50893 * C50735 * C50861 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C51010) *
              C51054 +
          ((C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
            C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 +
            C20969 + C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
            C20839 * C10092) *
               C50893 * C50735 * C51010 -
           (C20846 * C14655 + C22031 + C22031 + C20839 * C14659 +
            C20844 * C10088 + C22032 + C22032 + C20838 * C10092 +
            C20842 * C3559 + C22033 + C22033 + C20837 * C3565 + C20840 * C1562 +
            C22034 + C22034 + C20836 * C1570) *
               C50893 * C50735 * C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
                 C5071 + C5071 + C50935 * C480) *
                    C50893 * C2288 +
                (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                   C50797 * C1022 -
               (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
                 C5285 + C5285 + C51021 * C303) *
                    C50893 * C2288) *
                   C50797 * C50833) *
                  C1024 +
              (((C5323 + C5322) * C50893 * C2288 +
                (C5321 + C5320) * C50893 * C2289 +
                (C5688 + C5689) * C50893 * C2290) *
                   C50797 * C50833 -
               (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                (C5115 + C5114) * C50893 * C2288) *
                   C50797 * C1022) *
                  C1025 +
              ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
                (C5120 + C5121) * C50893 * C2290) *
                   C50797 * C1022 -
               ((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
                 C5682 + C5682 + C51021 * C308) *
                    C50893 * C2290 +
                (C5689 + C5688) * C50893 * C2289 + C5683 * C2288) *
                   C50797 * C50833) *
                  C1026) +
         0.5 * std::pow(Pi, 2.5) *
             (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
                C5071 + C5071 + C50935 * C480) *
                   C50893 * C2288 +
               (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                  C50797 * C1093 -
              (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
               (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
                C5285 + C5285 + C51021 * C303) *
                   C50893 * C2288) *
                  C50797 * C1094 +
              ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
                C5287 + C5287 + C50935 * C1570) *
                   C50893 * C2288 +
               (C5324 + C5325) * C50893 * C2289 +
               (C5326 + C5327) * C50893 * C2290) *
                  C50797 * C1095 -
              ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
                C6317 + C6317 + C51021 * C1107) *
                   C50893 * C2290 +
               (C5067 * C4061 + C6318 + C6318 + C50935 * C4067 + C5065 * C1100 +
                C6319 + C6319 + C51021 * C1108) *
                   C50893 * C2289 +
               (C5067 * C4062 + C6320 + C6320 + C50935 * C4068 + C5065 * C1101 +
                C6321 + C6321 + C51021 * C1109) *
                   C50893 * C2288) *
                  C50797 * C1096) *
             C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C454 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C50893 * C2288 +
            (C5526 + C5527) * C50893 * C2289 +
            (C5528 + C5529) * C50893 * C2290) *
               C456) *
              C1022 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C455 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C454 -
           ((C5067 * C4467 + C6468 + C6468 + C50935 * C4473 + C5065 * C1213 +
             C6469 + C6469 + C51021 * C1221) *
                C50893 * C2290 +
            (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 + C5065 * C1214 +
             C6471 + C6471 + C51021 * C1222) *
                C50893 * C2289 +
            (C5067 * C4469 + C6472 + C6472 + C50935 * C4475 + C5065 * C1215 +
             C6473 + C6473 + C51021 * C1223) *
                C50893 * C2288) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C1022 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C50833 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C50797 * C1022 -
           ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
             C6317 + C6317 + C51021 * C1107) *
                C7956 +
            (C5327 + C5326) * C7955 + C5676 * C7954) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C12663 + C12664) * C7955 + C12671 * C7956) *
              C50735 * C50797 * C1093 -
          (C13586 * C7956 + (C12666 + C12665) * C7955 +
           (C12664 + C12663) * C7954) *
              C50735 * C50797 * C1094 +
          (C12671 * C7954 + (C12668 + C12667) * C7955 +
           (C13597 + C13598) * C7956) *
              C50735 * C50797 * C1095 -
          ((C5067 * C11780 + C13591 + C13591 + C50935 * C11782 + C5065 * C9027 +
            C13592 + C13592 + C51021 * C9031) *
               C7956 +
           (C13598 + C13597) * C7955 + C13586 * C7954) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C454 -
           ((C13336 + C13337) * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C7954 +
            (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
               C50735 * C456) *
              C1022 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C5065 * C4062 + C13316 + C13316 + C51021 * C4068 + C5067 * C9186 +
             C13317 + C13317 + C50935 * C9190) *
                C7956) *
               C50735 * C455 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C454 -
           ((C5067 * C12051 + C13753 + C13753 + C50935 * C12053 +
             C5065 * C9186 + C13754 + C13754 + C51021 * C9190) *
                C7956 +
            (C13766 + C13765) * C7955 + (C13764 + C13763) * C7954) *
               C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C50797 * C1022 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C50797 * C50833) *
              C1024 +
          ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
            C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 + C20973 +
            C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
            C20839 * C4474) *
               C50893 * C50735 * C50797 * C50833 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C50797 * C1022) *
              C1025 +
          ((C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
            C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
            C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
               C50893 * C50735 * C50797 * C1022 -
           (C20846 * C4467 + C21191 + C21191 + C20839 * C4473 + C20844 * C1213 +
            C21192 + C21192 + C20838 * C1221 + C20842 * C888 + C21193 + C21193 +
            C20837 * C898 + C20840 * C281 + C21194 + C21194 + C20836 * C301) *
               C50893 * C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
           C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
           C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
              C50893 * C50735 * C50797 * C1093 -
          (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
           C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
           C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
              C50893 * C50735 * C50797 * C1094 +
          (C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
           C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 + C20969 +
           C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
           C20839 * C10092) *
              C50893 * C50735 * C50797 * C1095 -
          (C20846 * C12051 + C21599 + C21599 + C20839 * C12053 +
           C20844 * C9186 + C21600 + C21600 + C20838 * C9190 + C20842 * C4062 +
           C21601 + C21601 + C20837 * C4068 + C20840 * C1101 + C21602 + C21602 +
           C20836 * C1109) *
              C50893 * C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C454 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C455 +
           (C20840 * C461 + C21081 + C21081 + C20836 * C481 + C20842 * C1846 +
            C21082 + C21082 + C20837 * C1854 + C20844 * C7357 + C21083 +
            C21083 + C20838 * C7363 + C20846 * C17540 + C21084 + C21084 +
            C20839 * C17544) *
               C50893 * C50735 * C456) *
              C1022 +
          ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
            C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
            C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
            C20839 * C14660) *
               C50893 * C50735 * C455 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C454 -
           (C20846 * C20278 + C21701 + C21701 + C20839 * C20280 +
            C20844 * C14656 + C21702 + C21702 + C20838 * C14660 +
            C20842 * C4469 + C21703 + C21703 + C20837 * C4475 + C20840 * C1215 +
            C21704 + C21704 + C20836 * C1223) *
               C50893 * C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C7954 +
             (C12663 + C12664) * C7955 + C12671 * C7956) *
                C50735 * C51010 -
            ((C13336 + C13337) * C7956 + (C13338 + C13339) * C7955 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C7954) *
                C50735 * C50861) *
               C1022 +
           (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
             (C5065 * C4062 + C13316 + C13316 + C51021 * C4068 + C5067 * C9186 +
              C13317 + C13317 + C50935 * C9190) *
                 C7956) *
                C50735 * C50861 -
            (C13586 * C7956 + (C12666 + C12665) * C7955 +
             (C12664 + C12663) * C7954) *
                C50735 * C51010) *
               C50833) *
              C51001 +
          ((((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
             (C13340 + C13341) * C7956) *
                C50735 * C50861 -
            (C12644 * C7956 + (C5322 + C5323) * C7955 +
             (C5115 + C5114) * C7954) *
                C50735 * C51010) *
               C1022 +
           (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
             (C12669 + C12670) * C7956) *
                C50735 * C51010 -
            ((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 + C5065 * C4061 +
              C13323 + C13323 + C51021 * C4067) *
                 C7956 +
             (C13341 + C13340) * C7955 + (C6069 + C6068) * C7954) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C50893 * C2288 +
             (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                C51010 -
            (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C50893 * C2288) *
                C50861) *
               C1022 +
           (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
              C6045 + C6045 + C50935 * C1223) *
                 C50893 * C2288 +
             (C6068 + C6069) * C50893 * C2289 +
             (C6070 + C6071) * C50893 * C2290) *
                C50861 -
            (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
             (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
              C5285 + C5285 + C51021 * C303) *
                 C50893 * C2288) *
                C51010) *
               C50833) *
              C51001 +
          ((((C5525 + C5524) * C50893 * C2288 +
             (C5523 + C5522) * C50893 * C2289 +
             (C5848 + C5849) * C50893 * C2290) *
                C50861 -
            (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
             (C5115 + C5114) * C50893 * C2288) *
                C51010) *
               C1022 +
           (((C5323 + C5322) * C50893 * C2288 +
             (C5321 + C5320) * C50893 * C2289 +
             (C5688 + C5689) * C50893 * C2290) *
                C51010 -
            ((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 + C5065 * C889 +
              C6059 + C6059 + C51021 * C899) *
                 C50893 * C2290 +
             (C6071 + C6070) * C50893 * C2289 +
             (C6069 + C6068) * C50893 * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
             C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
             C20838 * C481 + C20846 * C1846 + C20852 + C20852 +
             C20839 * C1854) *
                C50893 * C50735 * C51010 -
            (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 +
             C20844 * C1846 + C21078 + C21078 + C20838 * C1854 + C20842 * C461 +
             C21079 + C21079 + C20837 * C481 + C20840 * C460 + C21080 + C21080 +
             C20836 * C480) *
                C50893 * C50735 * C50861) *
               C1022 +
           ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
             C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
             C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
             C20839 * C14660) *
                C50893 * C50735 * C50861 -
            (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 +
             C20844 * C1215 + C20964 + C20964 + C20838 * C1223 + C20842 * C886 +
             C20965 + C20965 + C20837 * C896 + C20840 * C283 + C20966 + C20966 +
             C20836 * C303) *
                C50893 * C50735 * C51010) *
               C50833) *
              C51001 +
          (((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
             C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 +
             C21087 + C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
             C20839 * C7362) *
                C50893 * C50735 * C50861 -
            (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
             C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
             C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
                C50893 * C50735 * C51010) *
               C1022 +
           ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
             C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 +
             C20973 + C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
             C20839 * C4474) *
                C50893 * C50735 * C51010 -
            (C20846 * C16648 + C21431 + C21431 + C20839 * C16650 +
             C20844 * C4468 + C21432 + C21432 + C20838 * C4474 +
             C20842 * C1214 + C21433 + C21433 + C20837 * C1222 + C20840 * C887 +
             C21434 + C21434 + C20836 * C897) *
                C50893 * C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C50797 * C1093 -
          (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
           (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
            C5285 + C5285 + C51021 * C303) *
               C50893 * C2288) *
              C50797 * C1094 +
          ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C50893 * C2288 +
           (C5324 + C5325) * C50893 * C2289 +
           (C5326 + C5327) * C50893 * C2290) *
              C50797 * C1095 -
          ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
            C6317 + C6317 + C51021 * C1107) *
               C50893 * C2290 +
           (C5067 * C4061 + C6318 + C6318 + C50935 * C4067 + C5065 * C1100 +
            C6319 + C6319 + C51021 * C1108) *
               C50893 * C2289 +
           (C5067 * C4062 + C6320 + C6320 + C50935 * C4068 + C5065 * C1101 +
            C6321 + C6321 + C51021 * C1109) *
               C50893 * C2288) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C1022 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5688 + C5689) * C50893 * C2290) *
               C50797 * C50833 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C1022) *
              C1025 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C50797 * C1022 -
           ((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50893 * C2290 +
            (C5689 + C5688) * C50893 * C2289 + C5683 * C2288) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C1022 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C50833 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C50797 * C1022 -
           ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
             C6317 + C6317 + C51021 * C1107) *
                C7956 +
            (C5327 + C5326) * C7955 + C5676 * C7954) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C12663 + C12664) * C7955 + C12671 * C7956) *
              C50735 * C50797 * C1093 -
          (C13586 * C7956 + (C12666 + C12665) * C7955 +
           (C12664 + C12663) * C7954) *
              C50735 * C50797 * C1094 +
          (C12671 * C7954 + (C12668 + C12667) * C7955 +
           (C13597 + C13598) * C7956) *
              C50735 * C50797 * C1095 -
          ((C5067 * C11780 + C13591 + C13591 + C50935 * C11782 + C5065 * C9027 +
            C13592 + C13592 + C51021 * C9031) *
               C7956 +
           (C13598 + C13597) * C7955 + C13586 * C7954) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C50797 * C1022 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C50797 * C50833) *
              C1024 +
          ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
            C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 + C20973 +
            C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
            C20839 * C4474) *
               C50893 * C50735 * C50797 * C50833 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C50797 * C1022) *
              C1025 +
          ((C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
            C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
            C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
               C50893 * C50735 * C50797 * C1022 -
           (C20846 * C4467 + C21191 + C21191 + C20839 * C4473 + C20844 * C1213 +
            C21192 + C21192 + C20838 * C1221 + C20842 * C888 + C21193 + C21193 +
            C20837 * C898 + C20840 * C281 + C21194 + C21194 + C20836 * C301) *
               C50893 * C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
           C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
           C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
              C50893 * C50735 * C50797 * C1093 -
          (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
           C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
           C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
              C50893 * C50735 * C50797 * C1094 +
          (C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
           C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 + C20969 +
           C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
           C20839 * C10092) *
              C50893 * C50735 * C50797 * C1095 -
          (C20846 * C12051 + C21599 + C21599 + C20839 * C12053 +
           C20844 * C9186 + C21600 + C21600 + C20838 * C9190 + C20842 * C4062 +
           C21601 + C21601 + C20837 * C4068 + C20840 * C1101 + C21602 + C21602 +
           C20836 * C1109) *
              C50893 * C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C7954 +
             (C12663 + C12664) * C7955 + C12671 * C7956) *
                C50735 * C1673 -
            (C14253 * C7956 + (C13338 + C13339) * C7955 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C7954) *
                C50735 * C50861) *
               C51009 +
           (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
             (C14264 + C14265) * C7956) *
                C50735 * C50861 -
            (C13586 * C7956 + (C12666 + C12665) * C7955 +
             (C12664 + C12663) * C7954) *
                C50735 * C1673) *
               C50833) *
              C51001 +
          ((((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
             (C13340 + C13341) * C7956) *
                C50735 * C50861 -
            (C12644 * C7956 + (C5322 + C5323) * C7955 +
             (C5115 + C5114) * C7954) *
                C50735 * C1673) *
               C51009 +
           (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
             (C12669 + C12670) * C7956) *
                C50735 * C1673 -
            ((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 + C5065 * C4061 +
              C13323 + C13323 + C51021 * C4067) *
                 C7956 +
             (C13341 + C13340) * C7955 + (C6069 + C6068) * C7954) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
              C5071 + C5071 + C50935 * C480) *
                 C50893 * C2288 +
             (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                C1673 -
            (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
             (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
              C5487 + C5487 + C51021 * C480) *
                 C50893 * C2288) *
                C50861) *
               C51009 +
           (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
              C6045 + C6045 + C50935 * C1223) *
                 C50893 * C2288 +
             (C6068 + C6069) * C50893 * C2289 +
             (C6070 + C6071) * C50893 * C2290) *
                C50861 -
            (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
             (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
              C5285 + C5285 + C51021 * C303) *
                 C50893 * C2288) *
                C1673) *
               C50833) *
              C51001 +
          ((((C5525 + C5524) * C50893 * C2288 +
             (C5523 + C5522) * C50893 * C2289 +
             (C5848 + C5849) * C50893 * C2290) *
                C50861 -
            (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
             (C5115 + C5114) * C50893 * C2288) *
                C1673) *
               C51009 +
           (((C5323 + C5322) * C50893 * C2288 +
             (C5321 + C5320) * C50893 * C2289 +
             (C5688 + C5689) * C50893 * C2290) *
                C1673 -
            ((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 + C5065 * C889 +
              C6059 + C6059 + C51021 * C899) *
                 C50893 * C2290 +
             (C6071 + C6070) * C50893 * C2289 +
             (C6069 + C6068) * C50893 * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
             C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
             C20838 * C481 + C20846 * C1846 + C20852 + C20852 +
             C20839 * C1854) *
                C50893 * C50735 * C1673 -
            (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 +
             C20844 * C1846 + C21078 + C21078 + C20838 * C1854 + C20842 * C461 +
             C21079 + C21079 + C20837 * C481 + C20840 * C460 + C21080 + C21080 +
             C20836 * C480) *
                C50893 * C50735 * C50861) *
               C51009 +
           ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
             C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
             C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
             C20839 * C14660) *
                C50893 * C50735 * C50861 -
            (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 +
             C20844 * C1215 + C20964 + C20964 + C20838 * C1223 + C20842 * C886 +
             C20965 + C20965 + C20837 * C896 + C20840 * C283 + C20966 + C20966 +
             C20836 * C303) *
                C50893 * C50735 * C1673) *
               C50833) *
              C51001 +
          (((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
             C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 +
             C21087 + C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
             C20839 * C7362) *
                C50893 * C50735 * C50861 -
            (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
             C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
             C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
                C50893 * C50735 * C1673) *
               C51009 +
           ((C20840 * C282 + C20971 + C20971 + C20836 * C302 + C20842 * C887 +
             C20972 + C20972 + C20837 * C897 + C20844 * C1214 + C20973 +
             C20973 + C20838 * C1222 + C20846 * C4468 + C20974 + C20974 +
             C20839 * C4474) *
                C50893 * C50735 * C1673 -
            (C20846 * C16648 + C21431 + C21431 + C20839 * C16650 +
             C20844 * C4468 + C21432 + C21432 + C20838 * C4474 +
             C20842 * C1214 + C21433 + C21433 + C20837 * C1222 + C20840 * C887 +
             C21434 + C21434 + C20836 * C897) *
                C50893 * C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C51055 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C51056 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C7954 +
            (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
               C50735 * C2089) *
              C51009 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C14264 + C14265) * C7956) *
               C50735 * C51056 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C51055 -
           ((C5067 * C12051 + C13753 + C13753 + C50935 * C12053 +
             C5065 * C9186 + C13754 + C13754 + C51021 * C9190) *
                C7956 +
            (C13766 + C13765) * C7955 + (C13764 + C13763) * C7954) *
               C50735 * C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C51055 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C51056 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C50893 * C2288 +
            (C5526 + C5527) * C50893 * C2289 +
            (C5528 + C5529) * C50893 * C2290) *
               C2089) *
              C51009 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C51056 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C51055 -
           ((C5067 * C4467 + C6468 + C6468 + C50935 * C4473 + C5065 * C1213 +
             C6469 + C6469 + C51021 * C1221) *
                C50893 * C2290 +
            (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 + C5065 * C1214 +
             C6471 + C6471 + C51021 * C1222) *
                C50893 * C2289 +
            (C5067 * C4469 + C6472 + C6472 + C50935 * C4475 + C5065 * C1215 +
             C6473 + C6473 + C51021 * C1223) *
                C50893 * C2288) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C51055 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C51056 +
           (C20840 * C461 + C21081 + C21081 + C20836 * C481 + C20842 * C1846 +
            C21082 + C21082 + C20837 * C1854 + C20844 * C7357 + C21083 +
            C21083 + C20838 * C7363 + C20846 * C17540 + C21084 + C21084 +
            C20839 * C17544) *
               C50893 * C50735 * C2089) *
              C51009 +
          ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
            C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
            C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
            C20839 * C14660) *
               C50893 * C50735 * C51056 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C51055 -
           (C20846 * C20278 + C21701 + C21701 + C20839 * C20280 +
            C20844 * C14656 + C21702 + C21702 + C20838 * C14660 +
            C20842 * C4469 + C21703 + C21703 + C20837 * C4475 + C20840 * C1215 +
            C21704 + C21704 + C20836 * C1223) *
               C50893 * C50735 * C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
                 C5071 + C5071 + C50935 * C480) *
                    C50893 * C2288 +
                (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                   C1673 -
               (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
                 C5487 + C5487 + C51021 * C480) *
                    C50893 * C2288) *
                   C50861) *
                  C50781 * C1024 +
              (((C5525 + C5524) * C50893 * C2288 +
                (C5523 + C5522) * C50893 * C2289 +
                (C5848 + C5849) * C50893 * C2290) *
                   C50861 -
               (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                (C5115 + C5114) * C50893 * C2288) *
                   C1673) *
                  C50781 * C1025 +
              ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
                (C5120 + C5121) * C50893 * C2290) *
                   C1673 -
               ((C5067 * C466 + C5841 + C5841 + C50935 * C486 + C5065 * C465 +
                 C5842 + C5842 + C51021 * C485) *
                    C50893 * C2290 +
                (C5849 + C5848) * C50893 * C2289 + C5843 * C2288) *
                   C50861) *
                  C50781 * C1026) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
                 C5071 + C5071 + C50935 * C480) *
                    C50893 * C2288 +
                (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                   C1673 -
               (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
                 C5487 + C5487 + C51021 * C480) *
                    C50893 * C2288) *
                   C50861) *
                  C275 +
              (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
                 C6045 + C6045 + C50935 * C1223) *
                    C50893 * C2288 +
                (C6068 + C6069) * C50893 * C2289 +
                (C6070 + C6071) * C50893 * C2290) *
                   C50861 -
               (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
                 C5285 + C5285 + C51021 * C303) *
                    C50893 * C2288) *
                   C1673) *
                  C276 +
              (((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
                 C5287 + C5287 + C50935 * C1570) *
                    C50893 * C2288 +
                (C5324 + C5325) * C50893 * C2289 +
                (C5326 + C5327) * C50893 * C2290) *
                   C1673 -
               ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 +
                 C5065 * C1560 + C6961 + C6961 + C51021 * C1568) *
                    C50893 * C2290 +
                (C5067 * C3558 + C6962 + C6962 + C50935 * C3564 +
                 C5065 * C1561 + C6963 + C6963 + C51021 * C1569) *
                    C50893 * C2289 +
                (C5067 * C3559 + C6964 + C6964 + C50935 * C3565 +
                 C5065 * C1562 + C6965 + C6965 + C51021 * C1570) *
                    C50893 * C2288) *
                   C50861) *
                  C277) *
             C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C1839 -
          (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
           (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
            C5487 + C5487 + C51021 * C480) *
               C50893 * C2288) *
              C1840 +
          ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
            C5489 + C5489 + C50935 * C1854) *
               C50893 * C2288 +
           (C5526 + C5527) * C50893 * C2289 +
           (C5528 + C5529) * C50893 * C2290) *
              C1841 -
          ((C5067 * C7355 + C7365 + C7365 + C50935 * C7361 + C5065 * C1844 +
            C7366 + C7366 + C51021 * C1852) *
               C50893 * C2290 +
           (C5067 * C7356 + C7367 + C7367 + C50935 * C7362 + C5065 * C1845 +
            C7368 + C7368 + C51021 * C1853) *
               C50893 * C2289 +
           (C5067 * C7357 + C7369 + C7369 + C50935 * C7363 + C5065 * C1846 +
            C7370 + C7370 + C51021 * C1854) *
               C50893 * C2288) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C13340 + C13341) * C7956) *
               C50735 * C50861 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C7956 +
            (C6071 + C6070) * C7955 + C5836 * C7954) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C275 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C14264 + C14265) * C7956) *
               C50735 * C50861 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C1673) *
              C276 +
          ((C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C13597 + C13598) * C7956) *
               C50735 * C1673 -
           ((C5067 * C11445 + C14258 + C14258 + C50935 * C11447 +
             C5065 * C9685 + C14259 + C14259 + C51021 * C9689) *
                C7956 +
            (C14265 + C14264) * C7955 + C14253 * C7954) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C12663 + C12664) * C7955 + C12671 * C7956) *
              C50735 * C1839 -
          (C14253 * C7956 + (C13338 + C13339) * C7955 +
           (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
            C5487 + C5487 + C51021 * C480) *
               C7954) *
              C50735 * C1840 +
          ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
            C5489 + C5489 + C50935 * C1854) *
               C7954 +
           (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
              C50735 * C1841 -
          ((C5067 * C14655 + C14662 + C14662 + C50935 * C14659 +
            C5065 * C10088 + C14663 + C14663 + C51021 * C10092) *
               C7956 +
           (C5067 * C14656 + C14664 + C14664 + C50935 * C14660 + C5065 * C4469 +
            C14665 + C14665 + C51021 * C4475) *
               C7955 +
           (C5067 * C7357 + C7369 + C7369 + C50935 * C7363 + C5065 * C1846 +
            C7370 + C7370 + C51021 * C1854) *
               C7954) *
              C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C1673 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C50861) *
              C50781 * C1024 +
          ((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
            C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 + C21087 +
            C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
            C20839 * C7362) *
               C50893 * C50735 * C50861 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C1673) *
              C50781 * C1025 +
          ((C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
            C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
            C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
               C50893 * C50735 * C1673 -
           (C20846 * C7355 + C21293 + C21293 + C20839 * C7361 + C20844 * C1844 +
            C21294 + C21294 + C20838 * C1852 + C20842 * C463 + C21295 + C21295 +
            C20837 * C483 + C20840 * C458 + C21296 + C21296 + C20836 * C478) *
               C50893 * C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C1673 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C50861) *
              C275 +
          ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
            C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
            C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
            C20839 * C14660) *
               C50893 * C50735 * C50861 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C1673) *
              C276 +
          ((C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
            C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 +
            C20969 + C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
            C20839 * C10092) *
               C50893 * C50735 * C1673 -
           (C20846 * C14655 + C22031 + C22031 + C20839 * C14659 +
            C20844 * C10088 + C22032 + C22032 + C20838 * C10092 +
            C20842 * C3559 + C22033 + C22033 + C20837 * C3565 + C20840 * C1562 +
            C22034 + C22034 + C20836 * C1570) *
               C50893 * C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
           C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
           C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
              C50893 * C50735 * C1839 -
          (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
           C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
           C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
              C50893 * C50735 * C1840 +
          (C20840 * C461 + C21081 + C21081 + C20836 * C481 + C20842 * C1846 +
           C21082 + C21082 + C20837 * C1854 + C20844 * C7357 + C21083 + C21083 +
           C20838 * C7363 + C20846 * C17540 + C21084 + C21084 +
           C20839 * C17544) *
              C50893 * C50735 * C1841 -
          (C20846 * C22296 + C22300 + C22300 + C20839 * C22298 +
           C20844 * C17540 + C22301 + C22301 + C20838 * C17544 +
           C20842 * C7357 + C22302 + C22302 + C20837 * C7363 + C20840 * C1846 +
           C22303 + C22303 + C20836 * C1854) *
              C50893 * C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C51055 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C51056 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C7954 +
            (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
               C50735 * C2089) *
              C50781 * C51001 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C13340 + C13341) * C7956) *
               C50735 * C51056 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C51055 -
           ((C5067 * C10087 + C12820 + C12820 + C50935 * C10091 +
             C5065 * C3558 + C12821 + C12821 + C51021 * C3564) *
                C7956 +
            (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 + C5065 * C1214 +
             C6471 + C6471 + C51021 * C1222) *
                C7955 +
            (C5527 + C5526) * C7954) *
               C50735 * C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C51055 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C51056 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C50893 * C2288 +
            (C5526 + C5527) * C50893 * C2289 +
            (C5528 + C5529) * C50893 * C2290) *
               C2089) *
              C50781 * C51001 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5848 + C5849) * C50893 * C2290) *
               C51056 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C51055 -
           ((C5067 * C1843 + C5504 + C5504 + C50935 * C1851 + C5065 * C464 +
             C5505 + C5505 + C51021 * C484) *
                C50893 * C2290 +
            (C5529 + C5528) * C50893 * C2289 +
            (C5527 + C5526) * C50893 * C2288) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C51055 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C51056 +
           (C20840 * C461 + C21081 + C21081 + C20836 * C481 + C20842 * C1846 +
            C21082 + C21082 + C20837 * C1854 + C20844 * C7357 + C21083 +
            C21083 + C20838 * C7363 + C20846 * C17540 + C21084 + C21084 +
            C20839 * C17544) *
               C50893 * C50735 * C2089) *
              C50781 * C51001 +
          ((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
            C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 + C21087 +
            C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
            C20839 * C7362) *
               C50893 * C50735 * C51056 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C51055 -
           (C20846 * C17539 + C21089 + C21089 + C20839 * C17543 +
            C20844 * C7356 + C21090 + C21090 + C20838 * C7362 + C20842 * C1845 +
            C21091 + C21091 + C20837 * C1853 + C20840 * C462 + C21092 + C21092 +
            C20836 * C482) *
               C50893 * C50735 * C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C1673 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C275 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C50861 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C1673) *
              C276 +
          (((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C50893 * C2290 +
            (C5067 * C3558 + C6962 + C6962 + C50935 * C3564 + C5065 * C1561 +
             C6963 + C6963 + C51021 * C1569) *
                C50893 * C2289 +
            (C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C50893 * C2288) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C1673 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5848 + C5849) * C50893 * C2290) *
               C50861 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C1673) *
              C50781 * C1025 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C1673 -
           ((C5067 * C466 + C5841 + C5841 + C50935 * C486 + C5065 * C465 +
             C5842 + C5842 + C51021 * C485) *
                C50893 * C2290 +
            (C5849 + C5848) * C50893 * C2289 + C5843 * C2288) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C13340 + C13341) * C7956) *
               C50735 * C50861 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C7956 +
            (C6071 + C6070) * C7955 + C5836 * C7954) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C275 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C14264 + C14265) * C7956) *
               C50735 * C50861 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C1673) *
              C276 +
          ((C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C13597 + C13598) * C7956) *
               C50735 * C1673 -
           ((C5067 * C11445 + C14258 + C14258 + C50935 * C11447 +
             C5065 * C9685 + C14259 + C14259 + C51021 * C9689) *
                C7956 +
            (C14265 + C14264) * C7955 + C14253 * C7954) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C1673 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C50861) *
              C50781 * C1024 +
          ((C20840 * C459 + C21085 + C21085 + C20836 * C479 + C20842 * C462 +
            C21086 + C21086 + C20837 * C482 + C20844 * C1845 + C21087 + C21087 +
            C20838 * C1853 + C20846 * C7356 + C21088 + C21088 +
            C20839 * C7362) *
               C50893 * C50735 * C50861 -
           (C20846 * C1845 + C20853 + C20853 + C20839 * C1853 + C20844 * C462 +
            C20854 + C20854 + C20838 * C482 + C20842 * C459 + C20855 + C20855 +
            C20837 * C479 + C20840 * C120 + C20856 + C20856 + C20836 * C134) *
               C50893 * C50735 * C1673) *
              C50781 * C1025 +
          ((C20840 * C121 + C20857 + C20857 + C20836 * C135 + C20842 * C458 +
            C20858 + C20858 + C20837 * C478 + C20844 * C463 + C20859 + C20859 +
            C20838 * C483 + C20846 * C1844 + C20860 + C20860 + C20839 * C1852) *
               C50893 * C50735 * C1673 -
           (C20846 * C7355 + C21293 + C21293 + C20839 * C7361 + C20844 * C1844 +
            C21294 + C21294 + C20838 * C1852 + C20842 * C463 + C21295 + C21295 +
            C20837 * C483 + C20840 * C458 + C21296 + C21296 + C20836 * C478) *
               C50893 * C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20840 * C119 + C20849 + C20849 + C20836 * C133 + C20842 * C460 +
            C20850 + C20850 + C20837 * C480 + C20844 * C461 + C20851 + C20851 +
            C20838 * C481 + C20846 * C1846 + C20852 + C20852 + C20839 * C1854) *
               C50893 * C50735 * C1673 -
           (C20846 * C7357 + C21077 + C21077 + C20839 * C7363 + C20844 * C1846 +
            C21078 + C21078 + C20838 * C1854 + C20842 * C461 + C21079 + C21079 +
            C20837 * C481 + C20840 * C460 + C21080 + C21080 + C20836 * C480) *
               C50893 * C50735 * C50861) *
              C275 +
          ((C20840 * C886 + C21427 + C21427 + C20836 * C896 + C20842 * C1215 +
            C21428 + C21428 + C20837 * C1223 + C20844 * C4469 + C21429 +
            C21429 + C20838 * C4475 + C20846 * C14656 + C21430 + C21430 +
            C20839 * C14660) *
               C50893 * C50735 * C50861 -
           (C20846 * C4469 + C20963 + C20963 + C20839 * C4475 + C20844 * C1215 +
            C20964 + C20964 + C20838 * C1223 + C20842 * C886 + C20965 + C20965 +
            C20837 * C896 + C20840 * C283 + C20966 + C20966 + C20836 * C303) *
               C50893 * C50735 * C1673) *
              C276 +
          ((C20840 * C284 + C20967 + C20967 + C20836 * C304 + C20842 * C1562 +
            C20968 + C20968 + C20837 * C1570 + C20844 * C3559 + C20969 +
            C20969 + C20838 * C3565 + C20846 * C10088 + C20970 + C20970 +
            C20839 * C10092) *
               C50893 * C50735 * C1673 -
           (C20846 * C14655 + C22031 + C22031 + C20839 * C14659 +
            C20844 * C10088 + C22032 + C22032 + C20838 * C10092 +
            C20842 * C3559 + C22033 + C22033 + C20837 * C3565 + C20840 * C1562 +
            C22034 + C22034 + C20836 * C1570) *
               C50893 * C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C50797 * C51009 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C50797 * C50833) *
                       C51051 +
                   (((C31829 + C31828) * C50893 * C51050 +
                     (C31827 + C31826) * C50893 * C51034 +
                     (C32194 + C32195) * C50893 * C22731) *
                        C50797 * C50833 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C50797 * C51009) *
                       C51052 +
                   ((C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                     (C31626 + C31627) * C50893 * C22731) *
                        C50797 * C51009 -
                    ((C31573 * C890 + C32187 + C32187 + C50935 * C900 +
                      C31571 * C288 + C32188 + C32188 + C31569 * C308) *
                         C50893 * C22731 +
                     (C32195 + C32194) * C50893 * C51034 + C32189 * C51050) *
                        C50797 * C50833) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C50893 * C51050 +
                      (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                         C51010 -
                     (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C50893 * C51050) *
                         C50861) *
                        C51009 +
                    (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                       C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                          C50893 * C51050 +
                      (C32574 + C32575) * C50893 * C51034 +
                      (C32576 + C32577) * C50893 * C22731) *
                         C50861 -
                     (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                      (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                       C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                          C50893 * C51050) *
                         C51010) *
                        C50833) *
                       C278 +
                   ((((C32031 + C32030) * C50893 * C51050 +
                      (C32029 + C32028) * C50893 * C51034 +
                      (C32354 + C32355) * C50893 * C22731) *
                         C50861 -
                     (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                      (C31621 + C31620) * C50893 * C51050) *
                         C51010) *
                        C51009 +
                    (((C31829 + C31828) * C50893 * C51050 +
                      (C31827 + C31826) * C50893 * C51034 +
                      (C32194 + C32195) * C50893 * C22731) *
                         C51010 -
                     ((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
                       C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                          C50893 * C22731 +
                      (C32577 + C32576) * C50893 * C51034 +
                      (C32575 + C32574) * C50893 * C51050) *
                         C50861) *
                        C50833) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[137] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C50797 * C275 -
                    ((C31826 + C31827) * C50893 * C22731 +
                     (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C50797 * C276 +
                    ((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                      C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                         C50893 * C51050 +
                     (C31830 + C31831) * C50893 * C51034 +
                     (C31832 + C31833) * C50893 * C22731) *
                        C50797 * C277) *
                       C278 +
                   (((C31829 + C31828) * C50893 * C51050 +
                     (C31827 + C31826) * C50893 * C51034 +
                     (C31571 * C280 + C31806 + C31806 + C31569 * C300 +
                      C31573 * C889 + C31807 + C31807 + C50935 * C899) *
                         C50893 * C22731) *
                        C50797 * C276 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C50797 * C275 -
                    ((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
                      C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                         C50893 * C22731 +
                     (C31833 + C31832) * C50893 * C51034 +
                     (C31831 + C31830) * C50893 * C51050) *
                        C50797 * C277) *
                       C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C50893 * C51050 +
                    (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                       C50797 * C50781 * C113 -
                   (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                    (C31621 + C31620) * C50893 * C51050) *
                       C50797 * C50781 * C114 +
                   (C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                    (C31626 + C31627) * C50893 * C22731) *
                       C50797 * C50781 * C115 -
                   ((C31573 * C746 + C31602 + C31602 + C50935 * C748 +
                     C31571 * C124 + C31603 + C31603 + C31569 * C138) *
                        C50893 * C22731 +
                    (C31627 + C31626) * C50893 * C51034 + C31631 * C51050) *
                       C50797 * C50781 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C454 -
                    ((C32028 + C32029) * C50893 * C22731 +
                     (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C455 +
                    ((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                      C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                         C50893 * C51050 +
                     (C32032 + C32033) * C50893 * C51034 +
                     (C32034 + C32035) * C50893 * C22731) *
                        C456) *
                       C50781 * C278 +
                   (((C32031 + C32030) * C50893 * C51050 +
                     (C32029 + C32028) * C50893 * C51034 +
                     (C31571 * C457 + C32008 + C32008 + C31569 * C477 +
                      C31573 * C464 + C32009 + C32009 + C50935 * C484) *
                         C50893 * C22731) *
                        C455 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C454 -
                    ((C31573 * C1843 + C32010 + C32010 + C50935 * C1851 +
                      C31571 * C464 + C32011 + C32011 + C31569 * C484) *
                         C50893 * C22731 +
                     (C32035 + C32034) * C50893 * C51034 +
                     (C32033 + C32032) * C50893 * C51050) *
                        C456) *
                       C50781 * C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C51010 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C50861) *
                       C50781 * C51051 +
                   (((C32031 + C32030) * C50893 * C51050 +
                     (C32029 + C32028) * C50893 * C51034 +
                     (C32354 + C32355) * C50893 * C22731) *
                        C50861 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C51010) *
                       C50781 * C51052 +
                   ((C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                     (C31626 + C31627) * C50893 * C22731) *
                        C51010 -
                    ((C31573 * C466 + C32347 + C32347 + C50935 * C486 +
                      C31571 * C465 + C32348 + C32348 + C31569 * C485) *
                         C50893 * C22731 +
                     (C32355 + C32354) * C50893 * C51034 + C32349 * C51050) *
                        C50861) *
                       C50781 * C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C50893 * C51050 +
                    (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                       C50797 * C50781 * C113 -
                   (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                    (C31621 + C31620) * C50893 * C51050) *
                       C50797 * C50781 * C114 +
                   (C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                    (C31626 + C31627) * C50893 * C22731) *
                       C50797 * C50781 * C115 -
                   ((C31573 * C746 + C31602 + C31602 + C50935 * C748 +
                     C31571 * C124 + C31603 + C31603 + C31569 * C138) *
                        C50893 * C22731 +
                    (C31627 + C31626) * C50893 * C51034 + C31631 * C51050) *
                       C50797 * C50781 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C50797 * C275 -
                    ((C31826 + C31827) * C50893 * C22731 +
                     (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C50797 * C276 +
                    ((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                      C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                         C50893 * C51050 +
                     (C31830 + C31831) * C50893 * C51034 +
                     (C31832 + C31833) * C50893 * C22731) *
                        C50797 * C277) *
                       C278 +
                   (((C31829 + C31828) * C50893 * C51050 +
                     (C31827 + C31826) * C50893 * C51034 +
                     (C31571 * C280 + C31806 + C31806 + C31569 * C300 +
                      C31573 * C889 + C31807 + C31807 + C50935 * C899) *
                         C50893 * C22731) *
                        C50797 * C276 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C50797 * C275 -
                    ((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
                      C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                         C50893 * C22731 +
                     (C31833 + C31832) * C50893 * C51034 +
                     (C31831 + C31830) * C50893 * C51050) *
                        C50797 * C277) *
                       C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C50797 * C51053 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C50797 * C51054 +
                    ((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                      C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                         C50893 * C51050 +
                     (C31830 + C31831) * C50893 * C51034 +
                     (C31832 + C31833) * C50893 * C22731) *
                        C50797 * C1328) *
                       C51001 +
                   (((C31829 + C31828) * C50893 * C51050 +
                     (C31827 + C31826) * C50893 * C51034 +
                     (C32194 + C32195) * C50893 * C22731) *
                        C50797 * C51054 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C50797 * C51053 -
                    ((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
                      C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                         C50893 * C22731 +
                     (C31833 + C31832) * C50893 * C51034 +
                     (C31831 + C31830) * C50893 * C51050) *
                        C50797 * C1328) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C51010 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C50861) *
                       C51053 +
                   (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                      C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                         C50893 * C51050 +
                     (C32574 + C32575) * C50893 * C51034 +
                     (C32576 + C32577) * C50893 * C22731) *
                        C50861 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C51010) *
                       C51054 +
                   (((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                      C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                         C50893 * C51050 +
                     (C31830 + C31831) * C50893 * C51034 +
                     (C31832 + C31833) * C50893 * C22731) *
                        C51010 -
                    ((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
                      C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                         C50893 * C22731 +
                     (C31573 * C3558 + C33468 + C33468 + C50935 * C3564 +
                      C31571 * C1561 + C33469 + C33469 + C31569 * C1569) *
                         C50893 * C51034 +
                     (C31573 * C3559 + C33470 + C33470 + C50935 * C3565 +
                      C31571 * C1562 + C33471 + C33471 + C31569 * C1570) *
                         C50893 * C51050) *
                        C50861) *
                       C1328) *
                  C50762) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C50893 * C51050 +
                    (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                       C50797 * C1093 -
                   (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                    (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                     C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                        C50893 * C51050) *
                       C50797 * C1094 +
                   ((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                     C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                        C50893 * C51050 +
                    (C31830 + C31831) * C50893 * C51034 +
                    (C31832 + C31833) * C50893 * C22731) *
                       C50797 * C1095 -
                   ((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
                     C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                        C50893 * C22731 +
                    (C31573 * C4061 + C32824 + C32824 + C50935 * C4067 +
                     C31571 * C1100 + C32825 + C32825 + C31569 * C1108) *
                        C50893 * C51034 +
                    (C31573 * C4062 + C32826 + C32826 + C50935 * C4068 +
                     C31571 * C1101 + C32827 + C32827 + C31569 * C1109) *
                        C50893 * C51050) *
                       C50797 * C1096) *
                  C50762) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C50797 * C1022 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C50797 * C50833) *
                       C1024 +
                   (((C31829 + C31828) * C50893 * C51050 +
                     (C31827 + C31826) * C50893 * C51034 +
                     (C32194 + C32195) * C50893 * C22731) *
                        C50797 * C50833 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C50797 * C1022) *
                       C1025 +
                   ((C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                     (C31626 + C31627) * C50893 * C22731) *
                        C50797 * C1022 -
                    ((C31573 * C890 + C32187 + C32187 + C50935 * C900 +
                      C31571 * C288 + C32188 + C32188 + C31569 * C308) *
                         C50893 * C22731 +
                     (C32195 + C32194) * C50893 * C51034 + C32189 * C51050) *
                        C50797 * C50833) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C454 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C455 +
                    ((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                      C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                         C50893 * C51050 +
                     (C32032 + C32033) * C50893 * C51034 +
                     (C32034 + C32035) * C50893 * C22731) *
                        C456) *
                       C1022 +
                   (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                      C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                         C50893 * C51050 +
                     (C32574 + C32575) * C50893 * C51034 +
                     (C32576 + C32577) * C50893 * C22731) *
                        C455 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C454 -
                    ((C31573 * C4467 + C32974 + C32974 + C50935 * C4473 +
                      C31571 * C1213 + C32975 + C32975 + C31569 * C1221) *
                         C50893 * C22731 +
                     (C31573 * C4468 + C32976 + C32976 + C50935 * C4474 +
                      C31571 * C1214 + C32977 + C32977 + C31569 * C1222) *
                         C50893 * C51034 +
                     (C31573 * C4469 + C32978 + C32978 + C50935 * C4475 +
                      C31571 * C1215 + C32979 + C32979 + C31569 * C1223) *
                         C50893 * C51050) *
                        C456) *
                       C50833) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C50893 * C51050 +
                      (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                         C51010 -
                     (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C50893 * C51050) *
                         C50861) *
                        C1022 +
                    (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                       C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                          C50893 * C51050 +
                      (C32574 + C32575) * C50893 * C51034 +
                      (C32576 + C32577) * C50893 * C22731) *
                         C50861 -
                     (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                      (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                       C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                          C50893 * C51050) *
                         C51010) *
                        C50833) *
                       C51001 +
                   ((((C32031 + C32030) * C50893 * C51050 +
                      (C32029 + C32028) * C50893 * C51034 +
                      (C32354 + C32355) * C50893 * C22731) *
                         C50861 -
                     (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                      (C31621 + C31620) * C50893 * C51050) *
                         C51010) *
                        C1022 +
                    (((C31829 + C31828) * C50893 * C51050 +
                      (C31827 + C31826) * C50893 * C51034 +
                      (C32194 + C32195) * C50893 * C22731) *
                         C51010 -
                     ((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
                       C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                          C50893 * C22731 +
                      (C32577 + C32576) * C50893 * C51034 +
                      (C32575 + C32574) * C50893 * C51050) *
                         C50861) *
                        C50833) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C50797 * C1022 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C50797 * C50833) *
                       C1024 +
                   (((C31829 + C31828) * C50893 * C51050 +
                     (C31827 + C31826) * C50893 * C51034 +
                     (C32194 + C32195) * C50893 * C22731) *
                        C50797 * C50833 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C50797 * C1022) *
                       C1025 +
                   ((C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                     (C31626 + C31627) * C50893 * C22731) *
                        C50797 * C1022 -
                    ((C31573 * C890 + C32187 + C32187 + C50935 * C900 +
                      C31571 * C288 + C32188 + C32188 + C31569 * C308) *
                         C50893 * C22731 +
                     (C32195 + C32194) * C50893 * C51034 + C32189 * C51050) *
                        C50797 * C50833) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C50893 * C51050 +
                    (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                       C50797 * C1093 -
                   (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                    (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                     C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                        C50893 * C51050) *
                       C50797 * C1094 +
                   ((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                     C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                        C50893 * C51050 +
                    (C31830 + C31831) * C50893 * C51034 +
                    (C31832 + C31833) * C50893 * C22731) *
                       C50797 * C1095 -
                   ((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
                     C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                        C50893 * C22731 +
                    (C31573 * C4061 + C32824 + C32824 + C50935 * C4067 +
                     C31571 * C1100 + C32825 + C32825 + C31569 * C1108) *
                        C50893 * C51034 +
                    (C31573 * C4062 + C32826 + C32826 + C50935 * C4068 +
                     C31571 * C1101 + C32827 + C32827 + C31569 * C1109) *
                        C50893 * C51050) *
                       C50797 * C1096) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C50893 * C51050 +
                      (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                         C1673 -
                     (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C50893 * C51050) *
                         C50861) *
                        C51009 +
                    (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                       C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                          C50893 * C51050 +
                      (C32574 + C32575) * C50893 * C51034 +
                      (C32576 + C32577) * C50893 * C22731) *
                         C50861 -
                     (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                      (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                       C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                          C50893 * C51050) *
                         C1673) *
                        C50833) *
                       C51001 +
                   ((((C32031 + C32030) * C50893 * C51050 +
                      (C32029 + C32028) * C50893 * C51034 +
                      (C32354 + C32355) * C50893 * C22731) *
                         C50861 -
                     (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                      (C31621 + C31620) * C50893 * C51050) *
                         C1673) *
                        C51009 +
                    (((C31829 + C31828) * C50893 * C51050 +
                      (C31827 + C31826) * C50893 * C51034 +
                      (C32194 + C32195) * C50893 * C22731) *
                         C1673 -
                     ((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
                       C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                          C50893 * C22731 +
                      (C32577 + C32576) * C50893 * C51034 +
                      (C32575 + C32574) * C50893 * C51050) *
                         C50861) *
                        C50833) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C51055 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C51056 +
                    ((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                      C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                         C50893 * C51050 +
                     (C32032 + C32033) * C50893 * C51034 +
                     (C32034 + C32035) * C50893 * C22731) *
                        C2089) *
                       C51009 +
                   (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                      C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                         C50893 * C51050 +
                     (C32574 + C32575) * C50893 * C51034 +
                     (C32576 + C32577) * C50893 * C22731) *
                        C51056 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C51055 -
                    ((C31573 * C4467 + C32974 + C32974 + C50935 * C4473 +
                      C31571 * C1213 + C32975 + C32975 + C31569 * C1221) *
                         C50893 * C22731 +
                     (C31573 * C4468 + C32976 + C32976 + C50935 * C4474 +
                      C31571 * C1214 + C32977 + C32977 + C31569 * C1222) *
                         C50893 * C51034 +
                     (C31573 * C4469 + C32978 + C32978 + C50935 * C4475 +
                      C31571 * C1215 + C32979 + C32979 + C31569 * C1223) *
                         C50893 * C51050) *
                        C2089) *
                       C50833) *
                  C50762) /
                 (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C1673 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C50861) *
                       C275 +
                   (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                      C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                         C50893 * C51050 +
                     (C32574 + C32575) * C50893 * C51034 +
                     (C32576 + C32577) * C50893 * C22731) *
                        C50861 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C1673) *
                       C276 +
                   (((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                      C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                         C50893 * C51050 +
                     (C31830 + C31831) * C50893 * C51034 +
                     (C31832 + C31833) * C50893 * C22731) *
                        C1673 -
                    ((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
                      C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                         C50893 * C22731 +
                     (C31573 * C3558 + C33468 + C33468 + C50935 * C3564 +
                      C31571 * C1561 + C33469 + C33469 + C31569 * C1569) *
                         C50893 * C51034 +
                     (C31573 * C3559 + C33470 + C33470 + C50935 * C3565 +
                      C31571 * C1562 + C33471 + C33471 + C31569 * C1570) *
                         C50893 * C51050) *
                        C50861) *
                       C277) *
                  C50762) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C1673 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C50861) *
                       C50781 * C1024 +
                   (((C32031 + C32030) * C50893 * C51050 +
                     (C32029 + C32028) * C50893 * C51034 +
                     (C32354 + C32355) * C50893 * C22731) *
                        C50861 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C1673) *
                       C50781 * C1025 +
                   ((C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                     (C31626 + C31627) * C50893 * C22731) *
                        C1673 -
                    ((C31573 * C466 + C32347 + C32347 + C50935 * C486 +
                      C31571 * C465 + C32348 + C32348 + C31569 * C485) *
                         C50893 * C22731 +
                     (C32355 + C32354) * C50893 * C51034 + C32349 * C51050) *
                        C50861) *
                       C50781 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                     C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                        C50893 * C51050 +
                    (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                       C1839 -
                   (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                    (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                     C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                        C50893 * C51050) *
                       C1840 +
                   ((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                     C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                        C50893 * C51050 +
                    (C32032 + C32033) * C50893 * C51034 +
                    (C32034 + C32035) * C50893 * C22731) *
                       C1841 -
                   ((C31573 * C7355 + C33862 + C33862 + C50935 * C7361 +
                     C31571 * C1844 + C33863 + C33863 + C31569 * C1852) *
                        C50893 * C22731 +
                    (C31573 * C7356 + C33864 + C33864 + C50935 * C7362 +
                     C31571 * C1845 + C33865 + C33865 + C31569 * C1853) *
                        C50893 * C51034 +
                    (C31573 * C7357 + C33866 + C33866 + C50935 * C7363 +
                     C31571 * C1846 + C33867 + C33867 + C31569 * C1854) *
                        C50893 * C51050) *
                       C1842) *
                  C50781 * C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C51055 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C51056 +
                    ((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                      C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                         C50893 * C51050 +
                     (C32032 + C32033) * C50893 * C51034 +
                     (C32034 + C32035) * C50893 * C22731) *
                        C2089) *
                       C50781 * C51001 +
                   (((C32031 + C32030) * C50893 * C51050 +
                     (C32029 + C32028) * C50893 * C51034 +
                     (C32354 + C32355) * C50893 * C22731) *
                        C51056 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C51055 -
                    ((C31573 * C1843 + C32010 + C32010 + C50935 * C1851 +
                      C31571 * C464 + C32011 + C32011 + C31569 * C484) *
                         C50893 * C22731 +
                     (C32035 + C32034) * C50893 * C51034 +
                     (C32033 + C32032) * C50893 * C51050) *
                        C2089) *
                       C50781 * C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C1673 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C50861) *
                       C50781 * C1024 +
                   (((C32031 + C32030) * C50893 * C51050 +
                     (C32029 + C32028) * C50893 * C51034 +
                     (C32354 + C32355) * C50893 * C22731) *
                        C50861 -
                    (C31631 * C22731 + (C31623 + C31622) * C50893 * C51034 +
                     (C31621 + C31620) * C50893 * C51050) *
                        C1673) *
                       C50781 * C1025 +
                   ((C31630 * C51050 + (C31625 + C31624) * C50893 * C51034 +
                     (C31626 + C31627) * C50893 * C22731) *
                        C1673 -
                    ((C31573 * C466 + C32347 + C32347 + C50935 * C486 +
                      C31571 * C465 + C32348 + C32348 + C31569 * C485) *
                         C50893 * C22731 +
                     (C32355 + C32354) * C50893 * C51034 + C32349 * C51050) *
                        C50861) *
                       C50781 * C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                      C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                         C50893 * C51050 +
                     (C31620 + C31621) * C50893 * C51034 + C31630 * C22731) *
                        C1673 -
                    (C32349 * C22731 + (C32030 + C32031) * C50893 * C51034 +
                     (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                      C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                         C50893 * C51050) *
                        C50861) *
                       C275 +
                   (((C31571 * C886 + C32550 + C32550 + C31569 * C896 +
                      C31573 * C1215 + C32551 + C32551 + C50935 * C1223) *
                         C50893 * C51050 +
                     (C32574 + C32575) * C50893 * C51034 +
                     (C32576 + C32577) * C50893 * C22731) *
                        C50861 -
                    (C32189 * C22731 + (C31828 + C31829) * C50893 * C51034 +
                     (C31573 * C886 + C31790 + C31790 + C50935 * C896 +
                      C31571 * C283 + C31791 + C31791 + C31569 * C303) *
                         C50893 * C51050) *
                        C1673) *
                       C276 +
                   (((C31571 * C284 + C31792 + C31792 + C31569 * C304 +
                      C31573 * C1562 + C31793 + C31793 + C50935 * C1570) *
                         C50893 * C51050 +
                     (C31830 + C31831) * C50893 * C51034 +
                     (C31832 + C31833) * C50893 * C22731) *
                        C1673 -
                    ((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
                      C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                         C50893 * C22731 +
                     (C31573 * C3558 + C33468 + C33468 + C50935 * C3564 +
                      C31571 * C1561 + C33469 + C33469 + C31569 * C1569) *
                         C50893 * C51034 +
                     (C31573 * C3559 + C33470 + C33470 + C50935 * C3565 +
                      C31571 * C1562 + C33471 + C33471 + C31569 * C1570) *
                         C50893 * C51050) *
                        C50861) *
                       C277) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C51019 +
                      (C34706 + C34707) * C50909) *
                         C25399 +
                     ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
                        C50797 * C51009 -
                    ((C34683 * C50909 + C34684 * C51019) * C50740 +
                     ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                         C25399) *
                        C50797 * C50833) *
                       C51051 +
                   (((C34682 * C51019 + C34689 * C50909) * C25399 +
                     (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
                        C50797 * C50833 -
                    ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
                     (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
                        C50797 * C51009) *
                       C51052 +
                   (((C31628 * C51019 + C35110 * C50909) * C25399 +
                     ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) *
                         C50740) *
                        C50797 * C51009 -
                    (((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
                       C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                          C50909 +
                      (C32195 + C32194) * C51019) *
                         C50740 +
                     ((C31833 + C31832) * C50909 + C32182 * C51019) * C25399) *
                        C50797 * C50833) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
               C31577 + C31577 + C50935 * C480) *
                  C51019 +
              (C34706 + C34707) * C50909) *
                 C25399 +
             ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
                C51010 -
            ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
             ((C35581 + C35582) * C50909 +
              (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
               C31993 + C31993 + C31569 * C480) *
                  C51019) *
                 C25399) *
                C50861) *
               C51009 +
           ((((C35582 + C35581) * C51019 +
              (C31571 * C1562 + C33471 + C33471 + C31569 * C1570 +
               C31573 * C3559 + C33470 + C33470 + C50935 * C3565) *
                  C50909) *
                 C25399 +
             (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
                C50861 -
            ((C34683 * C50909 + C34684 * C51019) * C50740 +
             ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                 C25399) *
                C51010) *
               C50833) *
              C278 +
          (((((C32031 + C32030) * C51019 + C35568 * C50909) * C25399 +
             ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                 C50740) *
                C50861 -
            ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
             (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
                C51010) *
               C51009 +
           (((C34682 * C51019 + C34689 * C50909) * C25399 +
             (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
                C51010 -
            (((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
               C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                  C50909 +
              (C32577 + C32576) * C51019) *
                 C50740 +
             ((C35584 + C35583) * C50909 + C35563 * C51019) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C50797 * C275 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C50797 * C276 +
           (((C34709 + C34708) * C51019 +
             (C31571 * C1101 + C32827 + C32827 + C31569 * C1109 +
              C31573 * C4062 + C32826 + C32826 + C50935 * C4068) *
                 C50909) *
                C25399 +
            (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
               C50797 * C277) *
              C278 +
          (((C34682 * C51019 + C34689 * C50909) * C25399 +
            ((C31827 + C31826) * C51019 + (C31832 + C31833) * C50909) *
                C50740) *
               C50797 * C276 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C50797 * C275 -
           (((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
              C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                 C50909 +
             (C31833 + C31832) * C51019) *
                C50740 +
            ((C34711 + C34710) * C50909 + C34683 * C51019) * C25399) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51019 +
            (C31571 * C283 + C31791 + C31791 + C31569 * C303 + C31573 * C886 +
             C31790 + C31790 + C50935 * C896) *
                C50909) *
               C25399 +
           ((C31620 + C31621) * C51019 + (C31829 + C31828) * C50909) * C50740) *
              C50797 * C50781 * C113 -
          ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
           ((C31828 + C31829) * C50909 + (C31621 + C31620) * C51019) * C25399) *
              C50797 * C50781 * C114 +
          ((C31628 * C51019 + (C31827 + C31826) * C50909) * C25399 +
           ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) * C50740) *
              C50797 * C50781 * C115 -
          (((C31573 * C890 + C32187 + C32187 + C50935 * C900 + C31571 * C288 +
             C32188 + C32188 + C31569 * C308) *
                C50909 +
            (C31627 + C31626) * C51019) *
               C50740 +
           ((C32195 + C32194) * C50909 + C31629 * C51019) * C25399) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C454 -
           (((C32575 + C32574) * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C31573 * C1215 + C32551 + C32551 + C50935 * C1223 +
              C31571 * C886 + C32550 + C32550 + C31569 * C896) *
                 C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C455 +
           (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
              C31995 + C31995 + C50935 * C1854) *
                 C51019 +
             (C31571 * C1215 + C32979 + C32979 + C31569 * C1223 +
              C31573 * C4469 + C32978 + C32978 + C50935 * C4475) *
                 C50909) *
                C25399 +
            ((C32032 + C32033) * C51019 + (C34914 + C34915) * C50909) *
                C50740) *
               C456) *
              C50781 * C278 +
          ((((C32031 + C32030) * C51019 + (C32574 + C32575) * C50909) * C25399 +
            ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                C50740) *
               C455 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C454 -
           (((C31573 * C4467 + C32974 + C32974 + C50935 * C4473 +
              C31571 * C1213 + C32975 + C32975 + C31569 * C1221) *
                 C50909 +
             (C32035 + C32034) * C51019) *
                C50740 +
            ((C34915 + C34914) * C50909 + (C32033 + C32032) * C51019) *
                C25399) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C51010 -
           (((C32575 + C32574) * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C31573 * C1215 + C32551 + C32551 + C50935 * C1223 +
              C31571 * C886 + C32550 + C32550 + C31569 * C896) *
                 C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C50861) *
              C50781 * C51051 +
          ((((C32031 + C32030) * C51019 + (C32574 + C32575) * C50909) * C25399 +
            ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                C50740) *
               C50861 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C51010) *
              C50781 * C51052 +
          (((C31628 * C51019 + C35110 * C50909) * C25399 +
            ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) *
                C50740) *
               C51010 -
           (((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
              C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                 C50909 +
             (C32355 + C32354) * C51019) *
                C50740 +
            ((C32577 + C32576) * C50909 + C32342 * C51019) * C25399) *
               C50861) *
              C50781 * C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51019 +
            (C31571 * C283 + C31791 + C31791 + C31569 * C303 + C31573 * C886 +
             C31790 + C31790 + C50935 * C896) *
                C50909) *
               C25399 +
           ((C31620 + C31621) * C51019 + (C31829 + C31828) * C50909) * C50740) *
              C50797 * C50781 * C113 -
          ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
           ((C31828 + C31829) * C50909 + (C31621 + C31620) * C51019) * C25399) *
              C50797 * C50781 * C114 +
          ((C31628 * C51019 + (C31827 + C31826) * C50909) * C25399 +
           ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) * C50740) *
              C50797 * C50781 * C115 -
          (((C31573 * C890 + C32187 + C32187 + C50935 * C900 + C31571 * C288 +
             C32188 + C32188 + C31569 * C308) *
                C50909 +
            (C31627 + C31626) * C51019) *
               C50740 +
           ((C32195 + C32194) * C50909 + C31629 * C51019) * C25399) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C50797 * C275 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C50797 * C276 +
           (((C34709 + C34708) * C51019 +
             (C31571 * C1101 + C32827 + C32827 + C31569 * C1109 +
              C31573 * C4062 + C32826 + C32826 + C50935 * C4068) *
                 C50909) *
                C25399 +
            (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
               C50797 * C277) *
              C278 +
          (((C34682 * C51019 + C34689 * C50909) * C25399 +
            ((C31827 + C31826) * C51019 + (C31832 + C31833) * C50909) *
                C50740) *
               C50797 * C276 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C50797 * C275 -
           (((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
              C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                 C50909 +
             (C31833 + C31832) * C51019) *
                C50740 +
            ((C34711 + C34710) * C50909 + C34683 * C51019) * C25399) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C50797 * C51053 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C50797 * C51054 +
           (((C34709 + C34708) * C51019 + (C35921 + C35922) * C50909) * C25399 +
            (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
               C50797 * C1328) *
              C51001 +
          (((C34682 * C51019 + C34689 * C50909) * C25399 +
            (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C51054 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C50797 * C51053 -
           (((C31573 * C4060 + C32822 + C32822 + C50935 * C4066 +
              C31571 * C1099 + C32823 + C32823 + C31569 * C1107) *
                 C50909 +
             (C31833 + C31832) * C51019) *
                C50740 +
            ((C34711 + C34710) * C50909 + C34683 * C51019) * C25399) *
               C50797 * C1328) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C51010 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C50861) *
              C51053 +
          ((((C35582 + C35581) * C51019 + (C36789 + C36790) * C50909) * C25399 +
            (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
               C50861 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C51010) *
              C51054 +
          ((((C34709 + C34708) * C51019 + (C35921 + C35922) * C50909) * C25399 +
            (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
               C51010 -
           (((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C50909 +
             (C35584 + C35583) * C51019) *
                C50740 +
            ((C31573 * C9186 + C36783 + C36783 + C50935 * C9190 +
              C31571 * C4062 + C36784 + C36784 + C31569 * C4068) *
                 C50909 +
             (C36790 + C36789) * C51019) *
                C25399) *
               C50861) *
              C1328) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51019 +
            (C34706 + C34707) * C50909) *
               C25399 +
           ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
              C50797 * C1093 -
          ((C34683 * C50909 + C34684 * C51019) * C50740 +
           ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) * C25399) *
              C50797 * C1094 +
          (((C34709 + C34708) * C51019 + (C35921 + C35922) * C50909) * C25399 +
           (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
              C50797 * C1095 -
          (((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C50909 +
            (C34711 + C34710) * C51019) *
               C50740 +
           ((C31573 * C9685 + C35915 + C35915 + C50935 * C9689 +
             C31571 * C3396 + C35916 + C35916 + C31569 * C3402) *
                C50909 +
            (C35922 + C35921) * C51019) *
               C25399) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C50797 * C1022 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C50797 * C50833) *
              C1024 +
          (((C34682 * C51019 + C34689 * C50909) * C25399 +
            (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C50833 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C50797 * C1022) *
              C1025 +
          (((C31628 * C51019 + C35110 * C50909) * C25399 +
            ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) *
                C50740) *
               C50797 * C1022 -
           (((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
              C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                 C50909 +
             (C32195 + C32194) * C51019) *
                C50740 +
            ((C31833 + C31832) * C50909 + C32182 * C51019) * C25399) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C454 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C455 +
           (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
              C31995 + C31995 + C50935 * C1854) *
                 C51019 +
             (C36129 + C36130) * C50909) *
                C25399 +
            ((C32032 + C32033) * C51019 + (C34914 + C34915) * C50909) *
                C50740) *
               C456) *
              C1022 +
          ((((C35582 + C35581) * C51019 +
             (C31571 * C1562 + C33471 + C33471 + C31569 * C1570 +
              C31573 * C3559 + C33470 + C33470 + C50935 * C3565) *
                 C50909) *
                C25399 +
            (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
               C455 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C454 -
           (((C31573 * C10087 + C36121 + C36121 + C50935 * C10091 +
              C31571 * C3558 + C36122 + C36122 + C31569 * C3564) *
                 C50909 +
             (C34915 + C34914) * C51019) *
                C50740 +
            ((C31573 * C10088 + C36123 + C36123 + C50935 * C10092 +
              C31571 * C3559 + C36124 + C36124 + C31569 * C3565) *
                 C50909 +
             (C36130 + C36129) * C51019) *
                C25399) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
               C31577 + C31577 + C50935 * C480) *
                  C51019 +
              (C34706 + C34707) * C50909) *
                 C25399 +
             ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
                C51010 -
            ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
             ((C35581 + C35582) * C50909 +
              (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
               C31993 + C31993 + C31569 * C480) *
                  C51019) *
                 C25399) *
                C50861) *
               C1022 +
           ((((C35582 + C35581) * C51019 +
              (C31571 * C1562 + C33471 + C33471 + C31569 * C1570 +
               C31573 * C3559 + C33470 + C33470 + C50935 * C3565) *
                  C50909) *
                 C25399 +
             (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
                C50861 -
            ((C34683 * C50909 + C34684 * C51019) * C50740 +
             ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                 C25399) *
                C51010) *
               C50833) *
              C51001 +
          (((((C32031 + C32030) * C51019 + C35568 * C50909) * C25399 +
             ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                 C50740) *
                C50861 -
            ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
             (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
                C51010) *
               C1022 +
           (((C34682 * C51019 + C34689 * C50909) * C25399 +
             (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
                C51010 -
            (((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
               C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                  C50909 +
              (C32577 + C32576) * C51019) *
                 C50740 +
             ((C35584 + C35583) * C50909 + C35563 * C51019) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C50797 * C1022 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C50797 * C50833) *
              C1024 +
          (((C34682 * C51019 + C34689 * C50909) * C25399 +
            (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
               C50797 * C50833 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C50797 * C1022) *
              C1025 +
          (((C31628 * C51019 + C35110 * C50909) * C25399 +
            ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) *
                C50740) *
               C50797 * C1022 -
           (((C31573 * C1559 + C31808 + C31808 + C50935 * C1567 +
              C31571 * C287 + C31809 + C31809 + C31569 * C307) *
                 C50909 +
             (C32195 + C32194) * C51019) *
                C50740 +
            ((C31833 + C31832) * C50909 + C32182 * C51019) * C25399) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51019 +
            (C34706 + C34707) * C50909) *
               C25399 +
           ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
              C50797 * C1093 -
          ((C34683 * C50909 + C34684 * C51019) * C50740 +
           ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) * C25399) *
              C50797 * C1094 +
          (((C34709 + C34708) * C51019 + (C35921 + C35922) * C50909) * C25399 +
           (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
              C50797 * C1095 -
          (((C31573 * C9684 + C35913 + C35913 + C50935 * C9688 +
             C31571 * C3395 + C35914 + C35914 + C31569 * C3401) *
                C50909 +
            (C34711 + C34710) * C51019) *
               C50740 +
           ((C31573 * C9685 + C35915 + C35915 + C50935 * C9689 +
             C31571 * C3396 + C35916 + C35916 + C31569 * C3402) *
                C50909 +
            (C35922 + C35921) * C51019) *
               C25399) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
               C31577 + C31577 + C50935 * C480) *
                  C51019 +
              (C34706 + C34707) * C50909) *
                 C25399 +
             ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
                C1673 -
            ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
             ((C35581 + C35582) * C50909 +
              (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
               C31993 + C31993 + C31569 * C480) *
                  C51019) *
                 C25399) *
                C50861) *
               C51009 +
           ((((C35582 + C35581) * C51019 + (C36789 + C36790) * C50909) *
                 C25399 +
             (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
                C50861 -
            ((C34683 * C50909 + C34684 * C51019) * C50740 +
             ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                 C25399) *
                C1673) *
               C50833) *
              C51001 +
          (((((C32031 + C32030) * C51019 + C35568 * C50909) * C25399 +
             ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                 C50740) *
                C50861 -
            ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
             (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
                C1673) *
               C51009 +
           (((C34682 * C51019 + C34689 * C50909) * C25399 +
             (C35110 * C51019 + (C31832 + C31833) * C50909) * C50740) *
                C1673 -
            (((C31573 * C3557 + C33466 + C33466 + C50935 * C3563 +
               C31571 * C1560 + C33467 + C33467 + C31569 * C1568) *
                  C50909 +
              (C32577 + C32576) * C51019) *
                 C50740 +
             ((C35584 + C35583) * C50909 + C35563 * C51019) * C25399) *
                C50861) *
               C50833) *
              C50768)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C51055 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C51056 +
           (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
              C31995 + C31995 + C50935 * C1854) *
                 C51019 +
             (C36129 + C36130) * C50909) *
                C25399 +
            ((C32032 + C32033) * C51019 + (C34914 + C34915) * C50909) *
                C50740) *
               C2089) *
              C51009 +
          ((((C35582 + C35581) * C51019 + (C36789 + C36790) * C50909) * C25399 +
            (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
               C51056 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C51055 -
           (((C31573 * C10087 + C36121 + C36121 + C50935 * C10091 +
              C31571 * C3558 + C36122 + C36122 + C31569 * C3564) *
                 C50909 +
             (C34915 + C34914) * C51019) *
                C50740 +
            ((C31573 * C10088 + C36123 + C36123 + C50935 * C10092 +
              C31571 * C3559 + C36124 + C36124 + C31569 * C3565) *
                 C50909 +
             (C36130 + C36129) * C51019) *
                C25399) *
               C2089) *
              C50833) *
         C50762) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C50861) *
              C275 +
          ((((C35582 + C35581) * C51019 + (C36789 + C36790) * C50909) * C25399 +
            (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
               C50861 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C1673) *
              C276 +
          ((((C34709 + C34708) * C51019 + (C35921 + C35922) * C50909) * C25399 +
            (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
               C1673 -
           (((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C50909 +
             (C35584 + C35583) * C51019) *
                C50740 +
            ((C31573 * C9186 + C36783 + C36783 + C50935 * C9190 +
              C31571 * C4062 + C36784 + C36784 + C31569 * C4068) *
                 C50909 +
             (C36790 + C36789) * C51019) *
                C25399) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C50861) *
              C50781 * C1024 +
          ((((C32031 + C32030) * C51019 + C35568 * C50909) * C25399 +
            ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                C50740) *
               C50861 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C1673) *
              C50781 * C1025 +
          (((C31628 * C51019 + C35110 * C50909) * C25399 +
            ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) *
                C50740) *
               C1673 -
           (((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
              C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                 C50909 +
             (C32355 + C32354) * C51019) *
                C50740 +
            ((C32577 + C32576) * C50909 + C32342 * C51019) * C25399) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
             C31577 + C31577 + C50935 * C480) *
                C51019 +
            (C34706 + C34707) * C50909) *
               C25399 +
           ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
              C1839 -
          ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
           ((C35581 + C35582) * C50909 +
            (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
             C31993 + C31993 + C31569 * C480) *
                C51019) *
               C25399) *
              C1840 +
          (((C31571 * C461 + C31994 + C31994 + C31569 * C481 + C31573 * C1846 +
             C31995 + C31995 + C50935 * C1854) *
                C51019 +
            (C36129 + C36130) * C50909) *
               C25399 +
           ((C32032 + C32033) * C51019 + (C34914 + C34915) * C50909) * C50740) *
              C1841 -
          (((C31573 * C16648 + C37309 + C37309 + C50935 * C16650 +
             C31571 * C4468 + C37310 + C37310 + C31569 * C4474) *
                C50909 +
            (C31573 * C7356 + C33864 + C33864 + C50935 * C7362 +
             C31571 * C1845 + C33865 + C33865 + C31569 * C1853) *
                C51019) *
               C50740 +
           ((C31573 * C14656 + C37311 + C37311 + C50935 * C14660 +
             C31571 * C4469 + C37312 + C37312 + C31569 * C4475) *
                C50909 +
            (C31573 * C7357 + C33866 + C33866 + C50935 * C7363 +
             C31571 * C1846 + C33867 + C33867 + C31569 * C1854) *
                C51019) *
               C25399) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[163] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 +
                       C31573 * C460 + C31577 + C31577 + C50935 * C480) *
                          C51019 +
                      (C34706 + C34707) * C50909) *
                         C25399 +
                     ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
                        C51055 -
                    ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
                     ((C35581 + C35582) * C50909 +
                      (C31573 * C461 + C31992 + C31992 + C50935 * C481 +
                       C31571 * C460 + C31993 + C31993 + C31569 * C480) *
                          C51019) *
                         C25399) *
                        C51056 +
                    (((C31571 * C461 + C31994 + C31994 + C31569 * C481 +
                       C31573 * C1846 + C31995 + C31995 + C50935 * C1854) *
                          C51019 +
                      (C36129 + C36130) * C50909) *
                         C25399 +
                     ((C32032 + C32033) * C51019 + (C34914 + C34915) * C50909) *
                         C50740) *
                        C2089) *
                       C50781 * C51001 +
                   ((((C32031 + C32030) * C51019 + C35568 * C50909) * C25399 +
                     ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                         C50740) *
                        C51056 -
                    ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
                     (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
                        C51055 -
                    (((C31573 * C4467 + C32974 + C32974 + C50935 * C4473 +
                       C31571 * C1213 + C32975 + C32975 + C31569 * C1221) *
                          C50909 +
                      (C32035 + C32034) * C51019) *
                         C50740 +
                     ((C34915 + C34914) * C50909 + (C32033 + C32032) * C51019) *
                         C25399) *
                        C2089) *
                       C50781 * C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C50861) *
              C50781 * C1024 +
          ((((C32031 + C32030) * C51019 + C35568 * C50909) * C25399 +
            ((C32029 + C32028) * C51019 + (C32576 + C32577) * C50909) *
                C50740) *
               C50861 -
           ((C32182 * C50909 + (C31623 + C31622) * C51019) * C50740 +
            (C34684 * C50909 + (C31621 + C31620) * C51019) * C25399) *
               C1673) *
              C50781 * C1025 +
          (((C31628 * C51019 + C35110 * C50909) * C25399 +
            ((C31625 + C31624) * C51019 + (C32194 + C32195) * C50909) *
                C50740) *
               C1673 -
           (((C31573 * C1212 + C32564 + C32564 + C50935 * C1220 +
              C31571 * C889 + C32565 + C32565 + C31569 * C899) *
                 C50909 +
             (C32355 + C32354) * C51019) *
                C50740 +
            ((C32577 + C32576) * C50909 + C32342 * C51019) * C25399) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31571 * C119 + C31576 + C31576 + C31569 * C133 + C31573 * C460 +
              C31577 + C31577 + C50935 * C480) *
                 C51019 +
             (C34706 + C34707) * C50909) *
                C25399 +
            ((C31620 + C31621) * C51019 + C34682 * C50909) * C50740) *
               C1673 -
           ((C35563 * C50909 + (C32030 + C32031) * C51019) * C50740 +
            ((C35581 + C35582) * C50909 +
             (C31573 * C461 + C31992 + C31992 + C50935 * C481 + C31571 * C460 +
              C31993 + C31993 + C31569 * C480) *
                 C51019) *
                C25399) *
               C50861) *
              C275 +
          ((((C35582 + C35581) * C51019 + (C36789 + C36790) * C50909) * C25399 +
            (C35568 * C51019 + (C35583 + C35584) * C50909) * C50740) *
               C50861 -
           ((C34683 * C50909 + C34684 * C51019) * C50740 +
            ((C34708 + C34709) * C50909 + (C34707 + C34706) * C51019) *
                C25399) *
               C1673) *
              C276 +
          ((((C34709 + C34708) * C51019 + (C35921 + C35922) * C50909) * C25399 +
            (C34689 * C51019 + (C34710 + C34711) * C50909) * C50740) *
               C1673 -
           (((C31573 * C9185 + C36781 + C36781 + C50935 * C9189 +
              C31571 * C4061 + C36782 + C36782 + C31569 * C4067) *
                 C50909 +
             (C35584 + C35583) * C51019) *
                C50740 +
            ((C31573 * C9186 + C36783 + C36783 + C50935 * C9190 +
              C31571 * C4062 + C36784 + C36784 + C31569 * C4068) *
                 C50909 +
             (C36790 + C36789) * C51019) *
                C25399) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C50797 * C51009 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C50797 * C50833) *
                       C51051 +
                   (((C38316 + C38315 + C38314) * C50893 * C25399 +
                     (C38675 + C38676 + C38677) * C50893 * C50740) *
                        C50797 * C50833 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C50797 * C51009) *
                       C51052 +
                   (((C38122 + C38121 + C38120) * C50893 * C25399 +
                     (C38123 + C38124 + C38125) * C50893 * C50740) *
                        C50797 * C51009 -
                    ((C38063 * C1212 + C38666 + C38666 + C38058 * C1220 +
                      C38061 * C889 + C38667 + C38667 + C51049 * C899 +
                      C38059 * C280 + C38668 + C38668 + C51058 * C300) *
                         C50893 * C50740 +
                     (C38677 + C38676 + C38675) * C50893 * C25399) *
                        C50797 * C50833) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                       C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                       C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                          C50893 * C25399 +
                      (C38117 + C38118 + C38119) * C50893 * C50740) *
                         C51010 -
                     ((C38508 + C38509 + C38510) * C50893 * C50740 +
                      (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                       C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                       C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                          C50893 * C25399) *
                         C50861) *
                        C51009 +
                    (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                       C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                       C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                          C50893 * C25399 +
                      (C39057 + C39058 + C39059) * C50893 * C50740) *
                         C50861 -
                     ((C38314 + C38315 + C38316) * C50893 * C50740 +
                      (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                       C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                       C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                          C50893 * C25399) *
                         C51010) *
                        C50833) *
                       C278 +
                   ((((C38510 + C38509 + C38508) * C50893 * C25399 +
                      (C38839 + C38840 + C38841) * C50893 * C50740) *
                         C50861 -
                     ((C38120 + C38121 + C38122) * C50893 * C50740 +
                      (C38119 + C38118 + C38117) * C50893 * C25399) *
                         C51010) *
                        C51009 +
                    (((C38316 + C38315 + C38314) * C50893 * C25399 +
                      (C38675 + C38676 + C38677) * C50893 * C50740) *
                         C51010 -
                     ((C38063 * C4467 + C39048 + C39048 + C38058 * C4473 +
                       C38061 * C1213 + C39049 + C39049 + C51049 * C1221 +
                       C38059 * C888 + C39050 + C39050 + C51058 * C898) *
                          C50893 * C50740 +
                      (C39059 + C39058 + C39057) * C50893 * C25399) *
                         C50861) *
                        C50833) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C50797 * C275 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C50797 * C276 +
                    ((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                      C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                      C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                         C50893 * C25399 +
                     (C38317 + C38318 + C38319) * C50893 * C50740) *
                        C50797 * C277) *
                       C278 +
                   (((C38316 + C38315 + C38314) * C50893 * C25399 +
                     (C38059 * C281 + C38296 + C38296 + C51058 * C301 +
                      C38061 * C888 + C38297 + C38297 + C51049 * C898 +
                      C38063 * C1213 + C38298 + C38298 + C38058 * C1221) *
                         C50893 * C50740) *
                        C50797 * C276 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C50797 * C275 -
                    ((C38063 * C3557 + C38299 + C38299 + C38058 * C3563 +
                      C38061 * C1560 + C38300 + C38300 + C51049 * C1568 +
                      C38059 * C286 + C38301 + C38301 + C51058 * C306) *
                         C50893 * C50740 +
                     (C38319 + C38318 + C38317) * C50893 * C25399) *
                        C50797 * C277) *
                       C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C50893 * C25399 +
                    (C38117 + C38118 + C38119) * C50893 * C50740) *
                       C50797 * C50781 * C113 -
                   ((C38120 + C38121 + C38122) * C50893 * C50740 +
                    (C38119 + C38118 + C38117) * C50893 * C25399) *
                       C50797 * C50781 * C114 +
                   ((C38122 + C38121 + C38120) * C50893 * C25399 +
                    (C38123 + C38124 + C38125) * C50893 * C50740) *
                       C50797 * C50781 * C115 -
                   ((C38063 * C466 + C38096 + C38096 + C38058 * C486 +
                     C38061 * C465 + C38097 + C38097 + C51049 * C485 +
                     C38059 * C123 + C38098 + C38098 + C51058 * C137) *
                        C50893 * C50740 +
                    (C38125 + C38124 + C38123) * C50893 * C25399) *
                       C50797 * C50781 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C454 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C455 +
                    ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                      C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                      C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                         C50893 * C25399 +
                     (C38511 + C38512 + C38513) * C50893 * C50740) *
                        C456) *
                       C50781 * C278 +
                   (((C38510 + C38509 + C38508) * C50893 * C25399 +
                     (C38059 * C458 + C38490 + C38490 + C51058 * C478 +
                      C38061 * C463 + C38491 + C38491 + C51049 * C483 +
                      C38063 * C1844 + C38492 + C38492 + C38058 * C1852) *
                         C50893 * C50740) *
                        C455 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C454 -
                    ((C38063 * C7355 + C38493 + C38493 + C38058 * C7361 +
                      C38061 * C1844 + C38494 + C38494 + C51049 * C1852 +
                      C38059 * C463 + C38495 + C38495 + C51058 * C483) *
                         C50893 * C50740 +
                     (C38513 + C38512 + C38511) * C50893 * C25399) *
                        C456) *
                       C50781 * C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C51010 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C50861) *
                       C50781 * C51051 +
                   (((C38510 + C38509 + C38508) * C50893 * C25399 +
                     (C38839 + C38840 + C38841) * C50893 * C50740) *
                        C50861 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C51010) *
                       C50781 * C51052 +
                   (((C38122 + C38121 + C38120) * C50893 * C25399 +
                     (C38123 + C38124 + C38125) * C50893 * C50740) *
                        C51010 -
                    ((C38063 * C1843 + C38830 + C38830 + C38058 * C1851 +
                      C38061 * C464 + C38831 + C38831 + C51049 * C484 +
                      C38059 * C457 + C38832 + C38832 + C51058 * C477) *
                         C50893 * C50740 +
                     (C38841 + C38840 + C38839) * C50893 * C25399) *
                        C50861) *
                       C50781 * C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C50893 * C25399 +
                    (C38117 + C38118 + C38119) * C50893 * C50740) *
                       C50797 * C50781 * C113 -
                   ((C38120 + C38121 + C38122) * C50893 * C50740 +
                    (C38119 + C38118 + C38117) * C50893 * C25399) *
                       C50797 * C50781 * C114 +
                   ((C38122 + C38121 + C38120) * C50893 * C25399 +
                    (C38123 + C38124 + C38125) * C50893 * C50740) *
                       C50797 * C50781 * C115 -
                   ((C38063 * C466 + C38096 + C38096 + C38058 * C486 +
                     C38061 * C465 + C38097 + C38097 + C51049 * C485 +
                     C38059 * C123 + C38098 + C38098 + C51058 * C137) *
                        C50893 * C50740 +
                    (C38125 + C38124 + C38123) * C50893 * C25399) *
                       C50797 * C50781 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C50797 * C275 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C50797 * C276 +
                    ((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                      C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                      C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                         C50893 * C25399 +
                     (C38317 + C38318 + C38319) * C50893 * C50740) *
                        C50797 * C277) *
                       C278 +
                   (((C38316 + C38315 + C38314) * C50893 * C25399 +
                     (C38059 * C281 + C38296 + C38296 + C51058 * C301 +
                      C38061 * C888 + C38297 + C38297 + C51049 * C898 +
                      C38063 * C1213 + C38298 + C38298 + C38058 * C1221) *
                         C50893 * C50740) *
                        C50797 * C276 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C50797 * C275 -
                    ((C38063 * C3557 + C38299 + C38299 + C38058 * C3563 +
                      C38061 * C1560 + C38300 + C38300 + C51049 * C1568 +
                      C38059 * C286 + C38301 + C38301 + C51058 * C306) *
                         C50893 * C50740 +
                     (C38319 + C38318 + C38317) * C50893 * C25399) *
                        C50797 * C277) *
                       C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C50797 * C51053 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C50797 * C51054 +
                    ((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                      C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                      C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                         C50893 * C25399 +
                     (C38317 + C38318 + C38319) * C50893 * C50740) *
                        C50797 * C1328) *
                       C51001 +
                   (((C38316 + C38315 + C38314) * C50893 * C25399 +
                     (C38675 + C38676 + C38677) * C50893 * C50740) *
                        C50797 * C51054 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C50797 * C51053 -
                    ((C38063 * C3557 + C38299 + C38299 + C38058 * C3563 +
                      C38061 * C1560 + C38300 + C38300 + C51049 * C1568 +
                      C38059 * C286 + C38301 + C38301 + C51058 * C306) *
                         C50893 * C50740 +
                     (C38319 + C38318 + C38317) * C50893 * C25399) *
                        C50797 * C1328) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C51010 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C50861) *
                       C51053 +
                   (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                      C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                      C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                         C50893 * C25399 +
                     (C39057 + C39058 + C39059) * C50893 * C50740) *
                        C50861 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C51010) *
                       C51054 +
                   (((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                      C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                      C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                         C50893 * C25399 +
                     (C38317 + C38318 + C38319) * C50893 * C50740) *
                        C51010 -
                    ((C38063 * C10087 + C39948 + C39948 + C38058 * C10091 +
                      C38061 * C3558 + C39949 + C39949 + C51049 * C3564 +
                      C38059 * C1561 + C39950 + C39950 + C51058 * C1569) *
                         C50893 * C50740 +
                     (C38063 * C10088 + C39951 + C39951 + C38058 * C10092 +
                      C38061 * C3559 + C39952 + C39952 + C51049 * C3565 +
                      C38059 * C1562 + C39953 + C39953 + C51058 * C1570) *
                         C50893 * C25399) *
                        C50861) *
                       C1328) *
                  C50762) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C50893 * C25399 +
                    (C38117 + C38118 + C38119) * C50893 * C50740) *
                       C50797 * C1093 -
                   ((C38314 + C38315 + C38316) * C50893 * C50740 +
                    (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                     C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                     C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                        C50893 * C25399) *
                       C50797 * C1094 +
                   ((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                     C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                     C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                        C50893 * C25399 +
                    (C38317 + C38318 + C38319) * C50893 * C50740) *
                       C50797 * C1095 -
                   ((C38063 * C9185 + C39304 + C39304 + C38058 * C9189 +
                     C38061 * C4061 + C39305 + C39305 + C51049 * C4067 +
                     C38059 * C1100 + C39306 + C39306 + C51058 * C1108) *
                        C50893 * C50740 +
                    (C38063 * C9186 + C39307 + C39307 + C38058 * C9190 +
                     C38061 * C4062 + C39308 + C39308 + C51049 * C4068 +
                     C38059 * C1101 + C39309 + C39309 + C51058 * C1109) *
                        C50893 * C25399) *
                       C50797 * C1096) *
                  C50762) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C50797 * C1022 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C50797 * C50833) *
                       C1024 +
                   (((C38316 + C38315 + C38314) * C50893 * C25399 +
                     (C38675 + C38676 + C38677) * C50893 * C50740) *
                        C50797 * C50833 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C50797 * C1022) *
                       C1025 +
                   (((C38122 + C38121 + C38120) * C50893 * C25399 +
                     (C38123 + C38124 + C38125) * C50893 * C50740) *
                        C50797 * C1022 -
                    ((C38063 * C1212 + C38666 + C38666 + C38058 * C1220 +
                      C38061 * C889 + C38667 + C38667 + C51049 * C899 +
                      C38059 * C280 + C38668 + C38668 + C51058 * C300) *
                         C50893 * C50740 +
                     (C38677 + C38676 + C38675) * C50893 * C25399) *
                        C50797 * C50833) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C454 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C455 +
                    ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                      C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                      C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                         C50893 * C25399 +
                     (C38511 + C38512 + C38513) * C50893 * C50740) *
                        C456) *
                       C1022 +
                   (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                      C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                      C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                         C50893 * C25399 +
                     (C39057 + C39058 + C39059) * C50893 * C50740) *
                        C455 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C454 -
                    ((C38063 * C16648 + C39456 + C39456 + C38058 * C16650 +
                      C38061 * C4468 + C39457 + C39457 + C51049 * C4474 +
                      C38059 * C1214 + C39458 + C39458 + C51058 * C1222) *
                         C50893 * C50740 +
                     (C38063 * C14656 + C39459 + C39459 + C38058 * C14660 +
                      C38061 * C4469 + C39460 + C39460 + C51049 * C4475 +
                      C38059 * C1215 + C39461 + C39461 + C51058 * C1223) *
                         C50893 * C25399) *
                        C456) *
                       C50833) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                       C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                       C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                          C50893 * C25399 +
                      (C38117 + C38118 + C38119) * C50893 * C50740) *
                         C51010 -
                     ((C38508 + C38509 + C38510) * C50893 * C50740 +
                      (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                       C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                       C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                          C50893 * C25399) *
                         C50861) *
                        C1022 +
                    (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                       C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                       C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                          C50893 * C25399 +
                      (C39057 + C39058 + C39059) * C50893 * C50740) *
                         C50861 -
                     ((C38314 + C38315 + C38316) * C50893 * C50740 +
                      (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                       C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                       C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                          C50893 * C25399) *
                         C51010) *
                        C50833) *
                       C51001 +
                   ((((C38510 + C38509 + C38508) * C50893 * C25399 +
                      (C38839 + C38840 + C38841) * C50893 * C50740) *
                         C50861 -
                     ((C38120 + C38121 + C38122) * C50893 * C50740 +
                      (C38119 + C38118 + C38117) * C50893 * C25399) *
                         C51010) *
                        C1022 +
                    (((C38316 + C38315 + C38314) * C50893 * C25399 +
                      (C38675 + C38676 + C38677) * C50893 * C50740) *
                         C51010 -
                     ((C38063 * C4467 + C39048 + C39048 + C38058 * C4473 +
                       C38061 * C1213 + C39049 + C39049 + C51049 * C1221 +
                       C38059 * C888 + C39050 + C39050 + C51058 * C898) *
                          C50893 * C50740 +
                      (C39059 + C39058 + C39057) * C50893 * C25399) *
                         C50861) *
                        C50833) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C50797 * C1022 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C50797 * C50833) *
                       C1024 +
                   (((C38316 + C38315 + C38314) * C50893 * C25399 +
                     (C38675 + C38676 + C38677) * C50893 * C50740) *
                        C50797 * C50833 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C50797 * C1022) *
                       C1025 +
                   (((C38122 + C38121 + C38120) * C50893 * C25399 +
                     (C38123 + C38124 + C38125) * C50893 * C50740) *
                        C50797 * C1022 -
                    ((C38063 * C1212 + C38666 + C38666 + C38058 * C1220 +
                      C38061 * C889 + C38667 + C38667 + C51049 * C899 +
                      C38059 * C280 + C38668 + C38668 + C51058 * C300) *
                         C50893 * C50740 +
                     (C38677 + C38676 + C38675) * C50893 * C25399) *
                        C50797 * C50833) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C50893 * C25399 +
                    (C38117 + C38118 + C38119) * C50893 * C50740) *
                       C50797 * C1093 -
                   ((C38314 + C38315 + C38316) * C50893 * C50740 +
                    (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                     C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                     C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                        C50893 * C25399) *
                       C50797 * C1094 +
                   ((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                     C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                     C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                        C50893 * C25399 +
                    (C38317 + C38318 + C38319) * C50893 * C50740) *
                       C50797 * C1095 -
                   ((C38063 * C9185 + C39304 + C39304 + C38058 * C9189 +
                     C38061 * C4061 + C39305 + C39305 + C51049 * C4067 +
                     C38059 * C1100 + C39306 + C39306 + C51058 * C1108) *
                        C50893 * C50740 +
                    (C38063 * C9186 + C39307 + C39307 + C38058 * C9190 +
                     C38061 * C4062 + C39308 + C39308 + C51049 * C4068 +
                     C38059 * C1101 + C39309 + C39309 + C51058 * C1109) *
                        C50893 * C25399) *
                       C50797 * C1096) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                       C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                       C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                          C50893 * C25399 +
                      (C38117 + C38118 + C38119) * C50893 * C50740) *
                         C1673 -
                     ((C38508 + C38509 + C38510) * C50893 * C50740 +
                      (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                       C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                       C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                          C50893 * C25399) *
                         C50861) *
                        C51009 +
                    (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                       C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                       C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                          C50893 * C25399 +
                      (C39057 + C39058 + C39059) * C50893 * C50740) *
                         C50861 -
                     ((C38314 + C38315 + C38316) * C50893 * C50740 +
                      (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                       C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                       C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                          C50893 * C25399) *
                         C1673) *
                        C50833) *
                       C51001 +
                   ((((C38510 + C38509 + C38508) * C50893 * C25399 +
                      (C38839 + C38840 + C38841) * C50893 * C50740) *
                         C50861 -
                     ((C38120 + C38121 + C38122) * C50893 * C50740 +
                      (C38119 + C38118 + C38117) * C50893 * C25399) *
                         C1673) *
                        C51009 +
                    (((C38316 + C38315 + C38314) * C50893 * C25399 +
                      (C38675 + C38676 + C38677) * C50893 * C50740) *
                         C1673 -
                     ((C38063 * C4467 + C39048 + C39048 + C38058 * C4473 +
                       C38061 * C1213 + C39049 + C39049 + C51049 * C1221 +
                       C38059 * C888 + C39050 + C39050 + C51058 * C898) *
                          C50893 * C50740 +
                      (C39059 + C39058 + C39057) * C50893 * C25399) *
                         C50861) *
                        C50833) *
                       C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C51055 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C51056 +
                    ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                      C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                      C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                         C50893 * C25399 +
                     (C38511 + C38512 + C38513) * C50893 * C50740) *
                        C2089) *
                       C51009 +
                   (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                      C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                      C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                         C50893 * C25399 +
                     (C39057 + C39058 + C39059) * C50893 * C50740) *
                        C51056 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C51055 -
                    ((C38063 * C16648 + C39456 + C39456 + C38058 * C16650 +
                      C38061 * C4468 + C39457 + C39457 + C51049 * C4474 +
                      C38059 * C1214 + C39458 + C39458 + C51058 * C1222) *
                         C50893 * C50740 +
                     (C38063 * C14656 + C39459 + C39459 + C38058 * C14660 +
                      C38061 * C4469 + C39460 + C39460 + C51049 * C4475 +
                      C38059 * C1215 + C39461 + C39461 + C51058 * C1223) *
                         C50893 * C25399) *
                        C2089) *
                       C50833) *
                  C50762) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C1673 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C50861) *
                       C275 +
                   (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                      C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                      C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                         C50893 * C25399 +
                     (C39057 + C39058 + C39059) * C50893 * C50740) *
                        C50861 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C1673) *
                       C276 +
                   (((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                      C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                      C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                         C50893 * C25399 +
                     (C38317 + C38318 + C38319) * C50893 * C50740) *
                        C1673 -
                    ((C38063 * C10087 + C39948 + C39948 + C38058 * C10091 +
                      C38061 * C3558 + C39949 + C39949 + C51049 * C3564 +
                      C38059 * C1561 + C39950 + C39950 + C51058 * C1569) *
                         C50893 * C50740 +
                     (C38063 * C10088 + C39951 + C39951 + C38058 * C10092 +
                      C38061 * C3559 + C39952 + C39952 + C51049 * C3565 +
                      C38059 * C1562 + C39953 + C39953 + C51058 * C1570) *
                         C50893 * C25399) *
                        C50861) *
                       C277) *
                  C50762) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C1673 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C50861) *
                       C50781 * C1024 +
                   (((C38510 + C38509 + C38508) * C50893 * C25399 +
                     (C38839 + C38840 + C38841) * C50893 * C50740) *
                        C50861 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C1673) *
                       C50781 * C1025 +
                   (((C38122 + C38121 + C38120) * C50893 * C25399 +
                     (C38123 + C38124 + C38125) * C50893 * C50740) *
                        C1673 -
                    ((C38063 * C1843 + C38830 + C38830 + C38058 * C1851 +
                      C38061 * C464 + C38831 + C38831 + C51049 * C484 +
                      C38059 * C457 + C38832 + C38832 + C51058 * C477) *
                         C50893 * C50740 +
                     (C38841 + C38840 + C38839) * C50893 * C25399) *
                        C50861) *
                       C50781 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                     C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                     C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                        C50893 * C25399 +
                    (C38117 + C38118 + C38119) * C50893 * C50740) *
                       C1839 -
                   ((C38508 + C38509 + C38510) * C50893 * C50740 +
                    (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                     C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                     C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                        C50893 * C25399) *
                       C1840 +
                   ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                     C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                     C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                        C50893 * C25399 +
                    (C38511 + C38512 + C38513) * C50893 * C50740) *
                       C1841 -
                   ((C38063 * C17539 + C40344 + C40344 + C38058 * C17543 +
                     C38061 * C7356 + C40345 + C40345 + C51049 * C7362 +
                     C38059 * C1845 + C40346 + C40346 + C51058 * C1853) *
                        C50893 * C50740 +
                    (C38063 * C17540 + C40347 + C40347 + C38058 * C17544 +
                     C38061 * C7357 + C40348 + C40348 + C51049 * C7363 +
                     C38059 * C1846 + C40349 + C40349 + C51058 * C1854) *
                        C50893 * C25399) *
                       C1842) *
                  C50781 * C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C51055 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C51056 +
                    ((C38059 * C461 + C38478 + C38478 + C51058 * C481 +
                      C38061 * C1846 + C38479 + C38479 + C51049 * C1854 +
                      C38063 * C7357 + C38480 + C38480 + C38058 * C7363) *
                         C50893 * C25399 +
                     (C38511 + C38512 + C38513) * C50893 * C50740) *
                        C2089) *
                       C50781 * C51001 +
                   (((C38510 + C38509 + C38508) * C50893 * C25399 +
                     (C38839 + C38840 + C38841) * C50893 * C50740) *
                        C51056 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C51055 -
                    ((C38063 * C7355 + C38493 + C38493 + C38058 * C7361 +
                      C38061 * C1844 + C38494 + C38494 + C51049 * C1852 +
                      C38059 * C463 + C38495 + C38495 + C51058 * C483) *
                         C50893 * C50740 +
                     (C38513 + C38512 + C38511) * C50893 * C25399) *
                        C2089) *
                       C50781 * C50768)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C1673 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C50861) *
                       C50781 * C1024 +
                   (((C38510 + C38509 + C38508) * C50893 * C25399 +
                     (C38839 + C38840 + C38841) * C50893 * C50740) *
                        C50861 -
                    ((C38120 + C38121 + C38122) * C50893 * C50740 +
                     (C38119 + C38118 + C38117) * C50893 * C25399) *
                        C1673) *
                       C50781 * C1025 +
                   (((C38122 + C38121 + C38120) * C50893 * C25399 +
                     (C38123 + C38124 + C38125) * C50893 * C50740) *
                        C1673 -
                    ((C38063 * C1843 + C38830 + C38830 + C38058 * C1851 +
                      C38061 * C464 + C38831 + C38831 + C51049 * C484 +
                      C38059 * C457 + C38832 + C38832 + C51058 * C477) *
                         C50893 * C50740 +
                     (C38841 + C38840 + C38839) * C50893 * C25399) *
                        C50861) *
                       C50781 * C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38059 * C119 + C38066 + C38066 + C51058 * C133 +
                      C38061 * C460 + C38067 + C38067 + C51049 * C480 +
                      C38063 * C461 + C38068 + C38068 + C38058 * C481) *
                         C50893 * C25399 +
                     (C38117 + C38118 + C38119) * C50893 * C50740) *
                        C1673 -
                    ((C38508 + C38509 + C38510) * C50893 * C50740 +
                     (C38063 * C1846 + C38475 + C38475 + C38058 * C1854 +
                      C38061 * C461 + C38476 + C38476 + C51049 * C481 +
                      C38059 * C460 + C38477 + C38477 + C51058 * C480) *
                         C50893 * C25399) *
                        C50861) *
                       C275 +
                   (((C38059 * C886 + C39036 + C39036 + C51058 * C896 +
                      C38061 * C1215 + C39037 + C39037 + C51049 * C1223 +
                      C38063 * C4469 + C39038 + C39038 + C38058 * C4475) *
                         C50893 * C25399 +
                     (C39057 + C39058 + C39059) * C50893 * C50740) *
                        C50861 -
                    ((C38314 + C38315 + C38316) * C50893 * C50740 +
                     (C38063 * C1215 + C38281 + C38281 + C38058 * C1223 +
                      C38061 * C886 + C38282 + C38282 + C51049 * C896 +
                      C38059 * C283 + C38283 + C38283 + C51058 * C303) *
                         C50893 * C25399) *
                        C1673) *
                       C276 +
                   (((C38059 * C284 + C38284 + C38284 + C51058 * C304 +
                      C38061 * C1562 + C38285 + C38285 + C51049 * C1570 +
                      C38063 * C3559 + C38286 + C38286 + C38058 * C3565) *
                         C50893 * C25399 +
                     (C38317 + C38318 + C38319) * C50893 * C50740) *
                        C1673 -
                    ((C38063 * C10087 + C39948 + C39948 + C38058 * C10091 +
                      C38061 * C3558 + C39949 + C39949 + C51049 * C3564 +
                      C38059 * C1561 + C39950 + C39950 + C51058 * C1569) *
                         C50893 * C50740 +
                     (C38063 * C10088 + C39951 + C39951 + C38058 * C10092 +
                      C38061 * C3559 + C39952 + C39952 + C51049 * C3565 +
                      C38059 * C1562 + C39953 + C39953 + C51058 * C1570) *
                         C50893 * C25399) *
                        C50861) *
                       C277) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C51009 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C50833) *
              C51051 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C50833 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C51009) *
              C51052 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
               C51009 -
           ((C117 * C636 + C642 + C642 + C50923 * C638) * C50893 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C51009 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C50833) *
              C51051 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C50833 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C51009) *
              C51052 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C50797 * C51009 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C7956 +
             C350 * C7955 + C345 * C7954) *
                C50740 +
            (C8431 + C8430 + C8429) * C50992) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51010 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                C50861) *
               C51009 +
           (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50861 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                C51010) *
               C50833) *
              C278 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51010) *
               C51009 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51010 -
            ((C117 * C890 + C912 + C912 + C50923 * C900) * C50893 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
              C2470 * C7955 + C2471 * C7956) *
                 C50992 +
             (C7960 + C7961 + C7962) * C50740) *
                C51010 -
            ((C8272 + C8273 + C8274) * C50740 +
             (C4077 * C7956 + C3146 * C7955 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                 C50992) *
                C50861) *
               C51009 +
           (((C3146 * C7954 + C4077 * C7955 +
              (C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C7956) *
                 C50992 +
             (C8775 + C8776 + C8782) * C50740) *
                C50861 -
            ((C8115 + C8116 + C8117) * C50740 +
             (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
                C51010) *
               C50833) *
              C278 +
          ((((C8274 + C8273 + C8272) * C50992 +
             (C8578 + C8579 + C8580) * C50740) *
                C50861 -
            ((C7963 + C7964 + C7965) * C50740 +
             (C7962 + C7961 + C7960) * C50992) *
                C51010) *
               C51009 +
           (((C8117 + C8116 + C8115) * C50992 +
             (C8429 + C8430 + C8431) * C50740) *
                C51010 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C7956 +
              C3148 * C7955 + C920 * C7954) *
                 C50740 +
             (C8782 + C8776 + C8775) * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C275 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C276 +
           ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50797 * C277) *
              C278 +
          ((C353 * C107 + C352 * C108 + C351 * C109 +
            (C117 * C288 + C331 + C331 + C50923 * C308) * C50893 * C110) *
               C50797 * C276 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C275 -
           ((C117 * C289 + C332 + C332 + C50923 * C309) * C50893 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50797 * C50781 * C113 -
          (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
              C50781 * C114 +
          (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
              C50781 * C115 -
          ((C117 * C125 + C157 + C157 + C50923 * C139) * C50893 * C110 +
           C177 * C109 + C176 * C108 + C175 * C107) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C50781 * C278 +
          ((C530 * C107 + C529 * C108 + C528 * C109 +
            (C117 * C465 + C508 + C508 + C50923 * C485) * C50893 * C110) *
               C455 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C454 -
           ((C117 * C466 + C509 + C509 + C50923 * C486) * C50893 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C50781 * C113 -
          ((C7963 + C7964 + C7965) * C50740 +
           (C7962 + C7961 + C7960) * C50992) *
              C50797 * C50781 * C114 +
          ((C7965 + C7964 + C7963) * C50992 +
           (C7966 + C7967 + C7968) * C50740) *
              C50797 * C50781 * C115 -
          (((C117 * C289 + C332 + C332 + C50923 * C309) * C7956 + C645 * C7955 +
            C171 * C7954) *
               C50740 +
           (C7968 + C7967 + C7966) * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C275 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C276 +
           ((C2471 * C7954 + C3411 * C7955 +
             (C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C7956) *
                C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C50797 * C277) *
              C278 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C346 * C7954 + C349 * C7955 + C2473 * C7956) * C50740) *
               C50797 * C276 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C275 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C7956 +
             C2473 * C7955 + C349 * C7954) *
                C50740 +
            (C8125 + C8119 + C8118) * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C454 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 +
             (C117 * C3559 + C3571 + C3571 + C50923 * C3565) * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C456) *
              C50781 * C278 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C523 * C7954 + C920 * C7955 + C3148 * C7956) * C50740) *
               C455 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C454 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C7956 +
             C2637 * C7955 + C526 * C7954) *
                C50740 +
            (C8282 + C8276 + C8275) * C50992) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51010 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C50781 * C51051 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51010) *
              C50781 * C51052 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C51010 -
           ((C117 * C746 + C752 + C752 + C50923 * C748) * C50893 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51010 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C50781 * C51051 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C50861 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C51010) *
              C50781 * C51052 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C51010 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C7956 +
             C921 * C7955 + C522 * C7954) *
                C50740 +
            (C8580 + C8579 + C8578) * C50992) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50797 * C50781 * C113 -
          (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
              C50781 * C114 +
          (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
              C50781 * C115 -
          ((C117 * C125 + C157 + C157 + C50923 * C139) * C50893 * C110 +
           C177 * C109 + C176 * C108 + C175 * C107) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C275 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C276 +
           ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50797 * C277) *
              C278 +
          ((C353 * C107 + C352 * C108 + C351 * C109 +
            (C117 * C288 + C331 + C331 + C50923 * C308) * C50893 * C110) *
               C50797 * C276 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C275 -
           ((C117 * C289 + C332 + C332 + C50923 * C309) * C50893 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C50781 * C113 -
          ((C7963 + C7964 + C7965) * C50740 +
           (C7962 + C7961 + C7960) * C50992) *
              C50797 * C50781 * C114 +
          ((C7965 + C7964 + C7963) * C50992 +
           (C7966 + C7967 + C7968) * C50740) *
              C50797 * C50781 * C115 -
          (((C117 * C289 + C332 + C332 + C50923 * C309) * C7956 + C645 * C7955 +
            C171 * C7954) *
               C50740 +
           (C7968 + C7967 + C7966) * C50992) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C275 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C276 +
           ((C2471 * C7954 + C3411 * C7955 +
             (C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C7956) *
                C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C50797 * C277) *
              C278 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C346 * C7954 + C349 * C7955 + C2473 * C7956) * C50740) *
               C50797 * C276 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C275 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C7956 +
             C2473 * C7955 + C349 * C7954) *
                C50740 +
            (C8125 + C8119 + C8118) * C50992) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C51053 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C51054 +
           ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50797 * C1328) *
              C51001 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C51054 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C51053 -
           ((C117 * C289 + C332 + C332 + C50923 * C309) * C50893 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C51053 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C51054 +
           ((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C50797 * C1328) *
              C51001 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C51054 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C51053 -
           (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C7956 +
             C2473 * C7955 + C349 * C7954) *
                C50740 +
            (C8125 + C8119 + C8118) * C50992) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51010 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C51053 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50861 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C51010) *
              C51054 +
          (((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C51010 -
           ((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50893 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50923 * C1568) * C50893 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50923 * C1569) * C50893 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50893 * C107) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51010 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C51053 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C50861 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C51010) *
              C51054 +
          (((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C51010 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C7956 +
             C8781 * C7955 + C3147 * C7954) *
                C50740 +
            ((C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C7956 +
             C9697 * C7955 + C4077 * C7954) *
                C50992) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50797 * C1093 -
          (C351 * C110 + C352 * C109 + C353 * C108 +
           (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
              C50797 * C1094 +
          ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
           C354 * C108 + C355 * C109 + C356 * C110) *
              C50797 * C1095 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50893 * C110 +
           (C117 * C1099 + C1112 + C1112 + C50923 * C1107) * C50893 * C109 +
           (C117 * C1100 + C1113 + C1113 + C50923 * C1108) * C50893 * C108 +
           (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50893 * C107) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C1022 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C50833) *
              C1024 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C50833 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C1022) *
              C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
               C1022 -
           ((C117 * C636 + C642 + C642 + C50923 * C638) * C50893 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C1022 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C455 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C454 -
           ((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50893 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50923 * C1221) * C50893 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50923 * C1222) * C50893 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50923 * C1223) * C50893 * C107) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C1022 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C50833) *
              C1024 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C50833 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C50797 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C7956 +
             C350 * C7955 + C345 * C7954) *
                C50740 +
            (C8431 + C8430 + C8429) * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C1093 -
          ((C8115 + C8116 + C8117) * C50740 +
           (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
              C50797 * C1094 +
          ((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
           (C8118 + C8119 + C8125) * C50740) *
              C50797 * C1095 -
          (((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C7956 +
            C8124 * C7955 + C2472 * C7954) *
               C50740 +
           ((C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C7956 +
            C9039 * C7955 + C3411 * C7954) *
               C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C454 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 + C9198 * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C456) *
              C1022 +
          (((C3146 * C7954 + C4077 * C7955 +
             (C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C7956) *
                C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C455 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C454 -
           (((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C7956 +
             C8281 * C7955 + C2636 * C7954) *
                C50740 +
            ((C117 * C9186 + C9195 + C9195 + C50923 * C9190) * C7956 +
             C9198 * C7955 + C3574 * C7954) *
                C50992) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51010 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                C50861) *
               C1022 +
           (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50861 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                C51010) *
               C50833) *
              C51001 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51010) *
               C1022 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51010 -
            ((C117 * C890 + C912 + C912 + C50923 * C900) * C50893 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
              C2470 * C7955 + C2471 * C7956) *
                 C50992 +
             (C7960 + C7961 + C7962) * C50740) *
                C51010 -
            ((C8272 + C8273 + C8274) * C50740 +
             (C4077 * C7956 + C3146 * C7955 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                 C50992) *
                C50861) *
               C1022 +
           (((C3146 * C7954 + C4077 * C7955 +
              (C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C7956) *
                 C50992 +
             (C8775 + C8776 + C8782) * C50740) *
                C50861 -
            ((C8115 + C8116 + C8117) * C50740 +
             (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
                C51010) *
               C50833) *
              C51001 +
          ((((C8274 + C8273 + C8272) * C50992 +
             (C8578 + C8579 + C8580) * C50740) *
                C50861 -
            ((C7963 + C7964 + C7965) * C50740 +
             (C7962 + C7961 + C7960) * C50992) *
                C51010) *
               C1022 +
           (((C8117 + C8116 + C8115) * C50992 +
             (C8429 + C8430 + C8431) * C50740) *
                C51010 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C7956 +
              C3148 * C7955 + C920 * C7954) *
                 C50740 +
             (C8782 + C8776 + C8775) * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50797 * C1022 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C50797 * C50833) *
              C1024 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50797 *
               C50833 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50797 *
               C1022) *
              C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50797 *
               C1022 -
           ((C117 * C636 + C642 + C642 + C50923 * C638) * C50893 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50797 * C1093 -
          (C351 * C110 + C352 * C109 + C353 * C108 +
           (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
              C50797 * C1094 +
          ((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
           C354 * C108 + C355 * C109 + C356 * C110) *
              C50797 * C1095 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50893 * C110 +
           (C117 * C1099 + C1112 + C1112 + C50923 * C1107) * C50893 * C109 +
           (C117 * C1100 + C1113 + C1113 + C50923 * C1108) * C50893 * C108 +
           (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50893 * C107) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C50797 * C1022 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C50797 * C50833) *
              C1024 +
          (((C8117 + C8116 + C8115) * C50992 +
            (C8429 + C8430 + C8431) * C50740) *
               C50797 * C50833 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C50797 * C1022) *
              C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C50797 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C7956 +
             C350 * C7955 + C345 * C7954) *
                C50740 +
            (C8431 + C8430 + C8429) * C50992) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C50797 * C1093 -
          ((C8115 + C8116 + C8117) * C50740 +
           (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
              C50797 * C1094 +
          ((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
           (C8118 + C8119 + C8125) * C50740) *
              C50797 * C1095 -
          (((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C7956 +
            C8124 * C7955 + C2472 * C7954) *
               C50740 +
           ((C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C7956 +
            C9039 * C7955 + C3411 * C7954) *
               C50992) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C1673 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
                C50861) *
               C51009 +
           (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50861 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
                C1673) *
               C50833) *
              C51001 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
               C51009 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C1673 -
            ((C117 * C890 + C912 + C912 + C50923 * C900) * C50893 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
              C2470 * C7955 + C2471 * C7956) *
                 C50992 +
             (C7960 + C7961 + C7962) * C50740) *
                C1673 -
            ((C8272 + C8273 + C8274) * C50740 +
             (C4077 * C7956 + C3146 * C7955 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                 C50992) *
                C50861) *
               C51009 +
           (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
             (C8775 + C8776 + C8782) * C50740) *
                C50861 -
            ((C8115 + C8116 + C8117) * C50740 +
             (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
                C1673) *
               C50833) *
              C51001 +
          ((((C8274 + C8273 + C8272) * C50992 +
             (C8578 + C8579 + C8580) * C50740) *
                C50861 -
            ((C7963 + C7964 + C7965) * C50740 +
             (C7962 + C7961 + C7960) * C50992) *
                C1673) *
               C51009 +
           (((C8117 + C8116 + C8115) * C50992 +
             (C8429 + C8430 + C8431) * C50740) *
                C1673 -
            (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C7956 +
              C3148 * C7955 + C920 * C7954) *
                 C50740 +
             (C8782 + C8776 + C8775) * C50992) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51055 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C51009 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C51056 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C51055 -
           ((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50893 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50923 * C1221) * C50893 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50923 * C1222) * C50893 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50923 * C1223) * C50893 * C107) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51055 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 + C9198 * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C2089) *
              C51009 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C51056 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C51055 -
           (((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C7956 +
             C8281 * C7955 + C2636 * C7954) *
                C50740 +
            ((C117 * C9186 + C9195 + C9195 + C50923 * C9190) * C7956 +
             C9198 * C7955 + C3574 * C7954) *
                C50992) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C275 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50861 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C1673) *
              C276 +
          (((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C1673 -
           ((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50893 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50923 * C1568) * C50893 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50923 * C1569) * C50893 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50893 * C107) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C50781 * C1024 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
              C50781 * C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
           ((C117 * C746 + C752 + C752 + C50923 * C748) * C50893 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C1839 -
          (C528 * C110 + C529 * C109 + C530 * C108 +
           (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
              C1840 +
          ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
           C531 * C108 + C532 * C109 + C533 * C110) *
              C1841 -
          ((C117 * C1843 + C1856 + C1856 + C50923 * C1851) * C50893 * C110 +
           (C117 * C1844 + C1857 + C1857 + C50923 * C1852) * C50893 * C109 +
           (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C50893 * C108 +
           (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C50893 * C107) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C50781 * C1024 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C50861 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C7956 +
             C921 * C7955 + C522 * C7954) *
                C50740 +
            (C8580 + C8579 + C8578) * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C275 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C50861 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C1673) *
              C276 +
          (((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C1673 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C7956 +
             C8781 * C7955 + C3147 * C7954) *
                C50740 +
            ((C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C7956 +
             C9697 * C7955 + C4077 * C7954) *
                C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
            C2470 * C7955 + C2471 * C7956) *
               C50992 +
           (C7960 + C7961 + C7962) * C50740) *
              C1839 -
          ((C8272 + C8273 + C8274) * C50740 +
           (C4077 * C7956 + C3146 * C7955 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
               C50992) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
            C3574 * C7955 + C9198 * C7956) *
               C50992 +
           (C8275 + C8276 + C8282) * C50740) *
              C1841 -
          (((C117 * C10087 + C10094 + C10094 + C50923 * C10091) * C7956 +
            (C117 * C4468 + C4478 + C4478 + C50923 * C4474) * C7955 +
            (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C7954) *
               C50740 +
           ((C117 * C10088 + C10095 + C10095 + C50923 * C10092) * C7956 +
            (C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C7955 +
            (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C7954) *
               C50992) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51055 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C50893 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C50781 * C51001 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C51056 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51055 -
           ((C117 * C466 + C509 + C509 + C50923 * C486) * C50893 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C51055 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C7954 +
             C3574 * C7955 + C9198 * C7956) *
                C50992 +
            (C8275 + C8276 + C8282) * C50740) *
               C2089) *
              C50781 * C51001 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C51056 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C51055 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C7956 +
             C2637 * C7955 + C526 * C7954) *
                C50740 +
            (C8282 + C8276 + C8275) * C50992) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C50781 * C1024 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50861 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
              C50781 * C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
           ((C117 * C746 + C752 + C752 + C50923 * C748) * C50893 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C50893 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C50893 * C107) *
               C50861) *
              C275 +
          (((C117 * C886 + C902 + C902 + C50923 * C896) * C50893 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50861 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50893 * C107) *
               C1673) *
              C276 +
          (((C117 * C284 + C321 + C321 + C50923 * C304) * C50893 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C1673 -
           ((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50893 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50923 * C1568) * C50893 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50923 * C1569) * C50893 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50893 * C107) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C50781 * C1024 +
          (((C8274 + C8273 + C8272) * C50992 +
            (C8578 + C8579 + C8580) * C50740) *
               C50861 -
           ((C7963 + C7964 + C7965) * C50740 +
            (C7962 + C7961 + C7960) * C50992) *
               C1673) *
              C50781 * C1025 +
          (((C7965 + C7964 + C7963) * C50992 +
            (C7966 + C7967 + C7968) * C50740) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C7956 +
             C921 * C7955 + C522 * C7954) *
                C50740 +
            (C8580 + C8579 + C8578) * C50992) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C7954 +
             C2470 * C7955 + C2471 * C7956) *
                C50992 +
            (C7960 + C7961 + C7962) * C50740) *
               C1673 -
           ((C8272 + C8273 + C8274) * C50740 +
            (C4077 * C7956 + C3146 * C7955 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C7954) *
                C50992) *
               C50861) *
              C275 +
          (((C3146 * C7954 + C4077 * C7955 + C9697 * C7956) * C50992 +
            (C8775 + C8776 + C8782) * C50740) *
               C50861 -
           ((C8115 + C8116 + C8117) * C50740 +
            (C3411 * C7956 + C2471 * C7955 + C2470 * C7954) * C50992) *
               C1673) *
              C276 +
          (((C2471 * C7954 + C3411 * C7955 + C9039 * C7956) * C50992 +
            (C8118 + C8119 + C8125) * C50740) *
               C1673 -
           (((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C7956 +
             C8781 * C7955 + C3147 * C7954) *
                C50740 +
            ((C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C7956 +
             C9697 * C7955 + C4077 * C7954) *
                C50992) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C51009 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C50833) *
              C51051 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C50833 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C51009) *
              C51052 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C50797 * C51009 -
           (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
             C645 * C51019) *
                C2290 +
            (C2788 + C2787) * C2289 + C2786 * C2288) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C51009 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C50833) *
              C51051 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C50833 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C51009) *
              C51052 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C50797 * C51009 -
           ((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C10650 +
            C2473 * C10649 + C349 * C10648 + C346 * C10647) *
               C50735 * C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
              C2470 * C50909) *
                 C2288 +
             (C2292 + C2293) * C2289 + C2300 * C2290) *
                C51010 -
            (C2935 * C2290 + (C2624 + C2625) * C2289 +
             (C3146 * C50909 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                 C2288) *
                C50861) *
               C51009 +
           (((C3146 * C51019 +
              (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50909) *
                 C2288 +
             (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                C50861 -
            (C2786 * C2290 + (C2452 + C2453) * C2289 +
             (C2471 * C50909 + C2470 * C51019) * C2288) *
                C51010) *
               C50833) *
              C278 +
          ((((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
             (C2936 + C2937) * C2290) *
                C50861 -
            (C2301 * C2290 + (C2295 + C2294) * C2289 +
             (C2293 + C2292) * C2288) *
                C51010) *
               C51009 +
           (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
             (C2787 + C2788) * C2290) *
                C51010 -
            (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
              C921 * C51019) *
                 C2290 +
             (C3150 + C3137) * C2289 + (C3149 + C3134) * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
             C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
                C50735 * C51010 -
            (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
                C50735 * C50861) *
               C51009 +
           ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
             (C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C10650) *
                C50735 * C50861 -
            (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 +
             C2470 * C10647) *
                C50735 * C51010) *
               C50833) *
              C278 +
          (((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
                C50735 * C50861 -
            (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
                C50735 * C51010) *
               C51009 +
           ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
                C50735 * C51010 -
            ((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C10650 +
             C8781 * C10649 + C3147 * C10648 + C919 * C10647) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C275 -
           ((C2450 + C2451) * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C276 +
           ((C2471 * C51019 +
             (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50909) *
                C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C50797 * C277) *
              C278 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C345 * C51019 + C350 * C50909) * C2290) *
               C50797 * C276 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C275 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
             C350 * C51019) *
                C2290 +
            (C2475 + C2459) * C2289 + (C2474 + C2456) * C2288) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C50797 * C50781 * C113 -
          (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
              C50797 * C50781 * C114 +
          (C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
              C50797 * C50781 * C115 -
          (((C117 * C636 + C642 + C642 + C50923 * C638) * C50909 +
            C172 * C51019) *
               C2290 +
           (C2299 + C2298) * C2289 + C2301 * C2288) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C454 -
           ((C2622 + C2623) * C2290 + (C2624 + C2625) * C2289 +
            ((C117 * C886 + C902 + C902 + C50923 * C896) * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             (C117 * C1215 + C1228 + C1228 + C50923 * C1223) * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C456) *
              C50781 * C278 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C522 * C51019 + C921 * C50909) * C2290) *
               C455 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C454 -
           (((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50909 +
             C527 * C51019) *
                C2290 +
            (C2639 + C2629) * C2289 + (C2638 + C2626) * C2288) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C50781 * C113 -
          (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
              C50735 * C50797 * C50781 * C114 +
          (C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
              C50735 * C50797 * C50781 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C10650 +
           C350 * C10649 + C345 * C10648 + C170 * C10647) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C275 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C276 +
           (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            (C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C10650) *
               C50735 * C50797 * C277) *
              C278 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C276 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C275 -
           ((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C10650 +
            C8124 * C10649 + C2472 * C10648 + C348 * C10647) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C454 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 +
            (C117 * C9186 + C9195 + C9195 + C50923 * C9190) * C10650) *
               C50735 * C456) *
              C50781 * C278 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C455 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C454 -
           ((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C10650 +
            C8281 * C10649 + C2636 * C10648 + C525 * C10647) *
               C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51010 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            ((C117 * C886 + C902 + C902 + C50923 * C896) * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C50781 * C51051 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C50861 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C51010) *
              C50781 * C51052 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C51010 -
           (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
             C755 * C51019) *
                C2290 +
            (C2937 + C2936) * C2289 + C2935 * C2288) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51010 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C50781 * C51051 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C50861 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C51010) *
              C50781 * C51052 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C51010 -
           ((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C10650 +
            C3148 * C10649 + C920 * C10648 + C523 * C10647) *
               C50735 * C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            (C117 * C283 + C320 + C320 + C50923 * C303) * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C50797 * C50781 * C113 -
          (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
              C50797 * C50781 * C114 +
          (C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
              C50797 * C50781 * C115 -
          (((C117 * C636 + C642 + C642 + C50923 * C638) * C50909 +
            C172 * C51019) *
               C2290 +
           (C2299 + C2298) * C2289 + C2301 * C2288) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C275 -
           ((C2450 + C2451) * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C276 +
           ((C2471 * C51019 +
             (C117 * C1101 + C1114 + C1114 + C50923 * C1109) * C50909) *
                C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C50797 * C277) *
              C278 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C345 * C51019 + C350 * C50909) * C2290) *
               C50797 * C276 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C275 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
             C350 * C51019) *
                C2290 +
            (C2475 + C2459) * C2289 + (C2474 + C2456) * C2288) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C50781 * C113 -
          (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
              C50735 * C50797 * C50781 * C114 +
          (C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
              C50735 * C50797 * C50781 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C10650 +
           C350 * C10649 + C345 * C10648 + C170 * C10647) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C275 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C276 +
           (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            (C117 * C9027 + C9036 + C9036 + C50923 * C9031) * C10650) *
               C50735 * C50797 * C277) *
              C278 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C276 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C275 -
           ((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C10650 +
            C8124 * C10649 + C2472 * C10648 + C348 * C10647) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C51053 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C51054 +
           ((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C50797 * C1328) *
              C51001 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C51054 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C51053 -
           (((C117 * C1098 + C1111 + C1111 + C50923 * C1106) * C50909 +
             C350 * C51019) *
                C2290 +
            (C2475 + C2459) * C2289 + (C2474 + C2456) * C2288) *
               C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C51053 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C51054 +
           (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C50797 * C1328) *
              C51001 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C51054 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C51053 -
           ((C117 * C9026 + C9035 + C9035 + C50923 * C9030) * C10650 +
            C8124 * C10649 + C2472 * C10648 + C348 * C10647) *
               C50735 * C50797 * C1328) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51010 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C51053 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C50861 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C51010) *
              C51054 +
          (((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C51010 -
           (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
             C3148 * C51019) *
                C2290 +
            ((C117 * C4061 + C4073 + C4073 + C50923 * C4067) * C50909 +
             C3147 * C51019) *
                C2289 +
            ((C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C50909 +
             C4077 * C51019) *
                C2288) *
               C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51010 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C51053 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C50861 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C51010) *
              C51054 +
          ((C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C51010 -
           ((C117 * C11780 + C11786 + C11786 + C50923 * C11782) * C10650 +
            C11789 * C10649 + C9697 * C10648 + C4077 * C10647) *
               C50735 * C50861) *
              C1328) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            C2470 * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C50797 * C1093 -
          (C2786 * C2290 + (C2452 + C2453) * C2289 +
           (C2471 * C50909 + C2470 * C51019) * C2288) *
              C50797 * C1094 +
          ((C2471 * C51019 + C3411 * C50909) * C2288 + (C2456 + C2474) * C2289 +
           (C2459 + C2475) * C2290) *
              C50797 * C1095 -
          (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C50909 +
            C2473 * C51019) *
               C2290 +
           ((C117 * C3395 + C3407 + C3407 + C50923 * C3401) * C50909 +
            C2472 * C51019) *
               C2289 +
           ((C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C50909 +
            C3411 * C51019) *
               C2288) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C1022 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C50833) *
              C1024 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C50833 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C1022) *
              C1025 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C50797 * C1022 -
           (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
             C645 * C51019) *
                C2290 +
            (C2788 + C2787) * C2289 + C2786 * C2288) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C454 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             C3574 * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C456) *
              C1022 +
          (((C3146 * C51019 +
             (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50909) *
                C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C455 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C454 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C50909 +
             C2637 * C51019) *
                C2290 +
            ((C117 * C3558 + C3570 + C3570 + C50923 * C3564) * C50909 +
             C2636 * C51019) *
                C2289 +
            ((C117 * C3559 + C3571 + C3571 + C50923 * C3565) * C50909 +
             C3574 * C51019) *
                C2288) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C1022 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C50833) *
              C1024 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C50833 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C50797 * C1022 -
           ((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C10650 +
            C2473 * C10649 + C349 * C10648 + C346 * C10647) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C1093 -
          (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
              C50735 * C50797 * C1094 +
          (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 + C11347 * C10650) *
              C50735 * C50797 * C1095 -
          ((C117 * C11338 + C11344 + C11344 + C50923 * C11340) * C10650 +
           C11347 * C10649 + C9039 * C10648 + C3411 * C10647) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C454 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C455 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
               C50735 * C456) *
              C1022 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            (C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C10650) *
               C50735 * C455 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C454 -
           ((C117 * C11445 + C11451 + C11451 + C50923 * C11447) * C10650 +
            C11454 * C10649 + C9198 * C10648 + C3574 * C10647) *
               C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
              C2470 * C50909) *
                 C2288 +
             (C2292 + C2293) * C2289 + C2300 * C2290) *
                C51010 -
            (C2935 * C2290 + (C2624 + C2625) * C2289 +
             (C3146 * C50909 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                 C2288) *
                C50861) *
               C1022 +
           (((C3146 * C51019 +
              (C117 * C1562 + C1575 + C1575 + C50923 * C1570) * C50909) *
                 C2288 +
             (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                C50861 -
            (C2786 * C2290 + (C2452 + C2453) * C2289 +
             (C2471 * C50909 + C2470 * C51019) * C2288) *
                C51010) *
               C50833) *
              C51001 +
          ((((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
             (C2936 + C2937) * C2290) *
                C50861 -
            (C2301 * C2290 + (C2295 + C2294) * C2289 +
             (C2293 + C2292) * C2288) *
                C51010) *
               C1022 +
           (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
             (C2787 + C2788) * C2290) *
                C51010 -
            (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
              C921 * C51019) *
                 C2290 +
             (C3150 + C3137) * C2289 + (C3149 + C3134) * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
             C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
                C50735 * C51010 -
            (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
                C50735 * C50861) *
               C1022 +
           ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
             (C117 * C9685 + C9694 + C9694 + C50923 * C9689) * C10650) *
                C50735 * C50861 -
            (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 +
             C2470 * C10647) *
                C50735 * C51010) *
               C50833) *
              C51001 +
          (((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
                C50735 * C50861 -
            (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
                C50735 * C51010) *
               C1022 +
           ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
                C50735 * C51010 -
            ((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C10650 +
             C8781 * C10649 + C3147 * C10648 + C919 * C10647) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C50797 * C1022 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C50797 * C50833) *
              C1024 +
          (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
            (C2787 + C2788) * C2290) *
               C50797 * C50833 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C50797 * C1022) *
              C1025 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C50797 * C1022 -
           (((C117 * C289 + C332 + C332 + C50923 * C309) * C50909 +
             C645 * C51019) *
                C2290 +
            (C2788 + C2787) * C2289 + C2786 * C2288) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            C2470 * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C50797 * C1093 -
          (C2786 * C2290 + (C2452 + C2453) * C2289 +
           (C2471 * C50909 + C2470 * C51019) * C2288) *
              C50797 * C1094 +
          ((C2471 * C51019 + C3411 * C50909) * C2288 + (C2456 + C2474) * C2289 +
           (C2459 + C2475) * C2290) *
              C50797 * C1095 -
          (((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C50909 +
            C2473 * C51019) *
               C2290 +
           ((C117 * C3395 + C3407 + C3407 + C50923 * C3401) * C50909 +
            C2472 * C51019) *
               C2289 +
           ((C117 * C3396 + C3408 + C3408 + C50923 * C3402) * C50909 +
            C3411 * C51019) *
               C2288) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C50797 * C1022 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C50797 * C50833) *
              C1024 +
          ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
               C50735 * C50797 * C50833 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C50797 * C1022 -
           ((C117 * C3394 + C3406 + C3406 + C50923 * C3400) * C10650 +
            C2473 * C10649 + C349 * C10648 + C346 * C10647) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C50797 * C1093 -
          (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
              C50735 * C50797 * C1094 +
          (C2471 * C10647 + C3411 * C10648 + C9039 * C10649 + C11347 * C10650) *
              C50735 * C50797 * C1095 -
          ((C117 * C11338 + C11344 + C11344 + C50923 * C11340) * C10650 +
           C11347 * C10649 + C9039 * C10648 + C3411 * C10647) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
              C2470 * C50909) *
                 C2288 +
             (C2292 + C2293) * C2289 + C2300 * C2290) *
                C1673 -
            (C2935 * C2290 + (C2624 + C2625) * C2289 +
             (C3146 * C50909 +
              (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                 C2288) *
                C50861) *
               C51009 +
           (((C3146 * C51019 + C4077 * C50909) * C2288 +
             (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
                C50861 -
            (C2786 * C2290 + (C2452 + C2453) * C2289 +
             (C2471 * C50909 + C2470 * C51019) * C2288) *
                C1673) *
               C50833) *
              C51001 +
          ((((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
             (C2936 + C2937) * C2290) *
                C50861 -
            (C2301 * C2290 + (C2295 + C2294) * C2289 +
             (C2293 + C2292) * C2288) *
                C1673) *
               C51009 +
           (((C2453 + C2452) * C2288 + (C2451 + C2450) * C2289 +
             (C2787 + C2788) * C2290) *
                C1673 -
            (((C117 * C1559 + C1572 + C1572 + C50923 * C1567) * C50909 +
              C921 * C51019) *
                 C2290 +
             (C3150 + C3137) * C2289 + (C3149 + C3134) * C2288) *
                C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
             C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
                C50735 * C1673 -
            (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
                C50735 * C50861) *
               C51009 +
           ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
             C11789 * C10650) *
                C50735 * C50861 -
            (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 +
             C2470 * C10647) *
                C50735 * C1673) *
               C50833) *
              C51001 +
          (((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
                C50735 * C50861 -
            (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
                C50735 * C1673) *
               C51009 +
           ((C347 * C10647 + C348 * C10648 + C2472 * C10649 + C8124 * C10650) *
                C50735 * C1673 -
            ((C117 * C9684 + C9693 + C9693 + C50923 * C9688) * C10650 +
             C8781 * C10649 + C3147 * C10648 + C919 * C10647) *
                C50735 * C50861) *
               C50833) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51055 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             C3574 * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C2089) *
              C51009 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C51056 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C51055 -
           (((C117 * C3557 + C3569 + C3569 + C50923 * C3563) * C50909 +
             C2637 * C51019) *
                C2290 +
            ((C117 * C3558 + C3570 + C3570 + C50923 * C3564) * C50909 +
             C2636 * C51019) *
                C2289 +
            ((C117 * C3559 + C3571 + C3571 + C50923 * C3565) * C50909 +
             C3574 * C51019) *
                C2288) *
               C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51055 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
               C50735 * C2089) *
              C51009 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C51056 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C51055 -
           ((C117 * C11445 + C11451 + C11451 + C50923 * C11447) * C10650 +
            C11454 * C10649 + C9198 * C10648 + C3574 * C10647) *
               C50735 * C2089) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C1673 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C275 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C50861 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C1673) *
              C276 +
          (((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C1673 -
           (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
             C3148 * C51019) *
                C2290 +
            ((C117 * C4061 + C4073 + C4073 + C50923 * C4067) * C50909 +
             C3147 * C51019) *
                C2289 +
            ((C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C50909 +
             C4077 * C51019) *
                C2288) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C1673 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C50781 * C1024 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C50861 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C1673) *
              C50781 * C1025 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C1673 -
           (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
             C755 * C51019) *
                C2290 +
            (C2937 + C2936) * C2289 + C2935 * C2288) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
            C2470 * C50909) *
               C2288 +
           (C2292 + C2293) * C2289 + C2300 * C2290) *
              C1839 -
          (C2935 * C2290 + (C2624 + C2625) * C2289 +
           (C3146 * C50909 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
               C2288) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
            C3574 * C50909) *
               C2288 +
           (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
              C1841 -
          (((C117 * C4467 + C4477 + C4477 + C50923 * C4473) * C50909 +
            (C117 * C1844 + C1857 + C1857 + C50923 * C1852) * C51019) *
               C2290 +
           ((C117 * C4468 + C4478 + C4478 + C50923 * C4474) * C50909 +
            (C117 * C1845 + C1858 + C1858 + C50923 * C1853) * C51019) *
               C2289 +
           ((C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C50909 +
            (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C51019) *
               C2288) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C50781 * C1024 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C50861 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C1673 -
           ((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C10650 +
            C3148 * C10649 + C920 * C10648 + C523 * C10647) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C275 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C50861 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C1673) *
              C276 +
          ((C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C1673 -
           ((C117 * C11780 + C11786 + C11786 + C50923 * C11782) * C10650 +
            C11789 * C10649 + C9697 * C10648 + C4077 * C10647) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
           C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
              C50735 * C1839 -
          (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
           (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
              C50735 * C1840 +
          ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
           C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
              C50735 * C1841 -
          ((C117 * C12051 + C12055 + C12055 + C50923 * C12053) * C10650 +
           (C117 * C10088 + C10095 + C10095 + C50923 * C10092) * C10649 +
           (C117 * C4469 + C4479 + C4479 + C50923 * C4475) * C10648 +
           (C117 * C1846 + C1859 + C1859 + C50923 * C1854) * C10647) *
              C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C51055 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C51056 +
           (((C117 * C461 + C498 + C498 + C50923 * C481) * C51019 +
             C3574 * C50909) *
                C2288 +
            (C2626 + C2638) * C2289 + (C2629 + C2639) * C2290) *
               C2089) *
              C50781 * C51001 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C51056 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C51055 -
           (((C117 * C1212 + C1225 + C1225 + C50923 * C1220) * C50909 +
             C527 * C51019) *
                C2290 +
            (C2639 + C2629) * C2289 + (C2638 + C2626) * C2288) *
               C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C51055 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C51056 +
           ((C117 * C461 + C498 + C498 + C50923 * C481) * C10647 +
            C3574 * C10648 + C9198 * C10649 + C11454 * C10650) *
               C50735 * C2089) *
              C50781 * C51001 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C51056 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C51055 -
           ((C117 * C9185 + C9194 + C9194 + C50923 * C9189) * C10650 +
            C8281 * C10649 + C2636 * C10648 + C525 * C10647) *
               C50735 * C2089) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C1673 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C50781 * C1024 +
          (((C2625 + C2624) * C2288 + (C2623 + C2622) * C2289 +
            (C2936 + C2937) * C2290) *
               C50861 -
           (C2301 * C2290 + (C2295 + C2294) * C2289 + (C2293 + C2292) * C2288) *
               C1673) *
              C50781 * C1025 +
          ((C2300 * C2288 + (C2297 + C2296) * C2289 + (C2298 + C2299) * C2290) *
               C1673 -
           (((C117 * C890 + C912 + C912 + C50923 * C900) * C50909 +
             C755 * C51019) *
                C2290 +
            (C2937 + C2936) * C2289 + C2935 * C2288) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50923 * C133) * C51019 +
             C2470 * C50909) *
                C2288 +
            (C2292 + C2293) * C2289 + C2300 * C2290) *
               C1673 -
           (C2935 * C2290 + (C2624 + C2625) * C2289 +
            (C3146 * C50909 +
             (C117 * C460 + C497 + C497 + C50923 * C480) * C51019) *
                C2288) *
               C50861) *
              C275 +
          (((C3146 * C51019 + C4077 * C50909) * C2288 +
            (C3134 + C3149) * C2289 + (C3137 + C3150) * C2290) *
               C50861 -
           (C2786 * C2290 + (C2452 + C2453) * C2289 +
            (C2471 * C50909 + C2470 * C51019) * C2288) *
               C1673) *
              C276 +
          (((C2471 * C51019 + C3411 * C50909) * C2288 +
            (C2456 + C2474) * C2289 + (C2459 + C2475) * C2290) *
               C1673 -
           (((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C50909 +
             C3148 * C51019) *
                C2290 +
            ((C117 * C4061 + C4073 + C4073 + C50923 * C4067) * C50909 +
             C3147 * C51019) *
                C2289 +
            ((C117 * C4062 + C4074 + C4074 + C50923 * C4068) * C50909 +
             C4077 * C51019) *
                C2288) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C50781 * C1024 +
          ((C524 * C10647 + C919 * C10648 + C3147 * C10649 + C8781 * C10650) *
               C50735 * C50861 -
           (C2472 * C10650 + C348 * C10649 + C347 * C10648 + C168 * C10647) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C169 * C10647 + C346 * C10648 + C349 * C10649 + C2473 * C10650) *
               C50735 * C1673 -
           ((C117 * C4060 + C4072 + C4072 + C50923 * C4066) * C10650 +
            C3148 * C10649 + C920 * C10648 + C523 * C10647) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50923 * C133) * C10647 +
            C2470 * C10648 + C2471 * C10649 + C3411 * C10650) *
               C50735 * C1673 -
           (C9697 * C10650 + C4077 * C10649 + C3146 * C10648 +
            (C117 * C460 + C497 + C497 + C50923 * C480) * C10647) *
               C50735 * C50861) *
              C275 +
          ((C3146 * C10647 + C4077 * C10648 + C9697 * C10649 +
            C11789 * C10650) *
               C50735 * C50861 -
           (C9039 * C10650 + C3411 * C10649 + C2471 * C10648 + C2470 * C10647) *
               C50735 * C1673) *
              C276 +
          ((C2471 * C10647 + C3411 * C10648 + C9039 * C10649 +
            C11347 * C10650) *
               C50735 * C1673 -
           ((C117 * C11780 + C11786 + C11786 + C50923 * C11782) * C10650 +
            C11789 * C10649 + C9697 * C10648 + C4077 * C10647) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C51009 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C50833) *
              C51051 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5688 + C5689) * C50893 * C2290) *
               C50797 * C50833 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C51009) *
              C51052 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C50797 * C51009 -
           ((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50893 * C2290 +
            (C5689 + C5688) * C50893 * C2289 + C5683 * C2288) *
               C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C51009 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C50833) *
              C51051 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C50833 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C51009) *
              C51052 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C50797 * C51009 -
           ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
             C6317 + C6317 + C51021 * C1107) *
                C7956 +
            (C5327 + C5326) * C7955 + C5676 * C7954) *
               C50735 * C50797 * C50833) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                       C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                          C50893 * C2288 +
                      (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                         C51010 -
                     (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                      (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                       C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                          C50893 * C2288) *
                         C50861) *
                        C51009 +
                    (((C5065 * C886 + C6044 + C6044 + C51021 * C896 +
                       C5067 * C1215 + C6045 + C6045 + C50935 * C1223) *
                          C50893 * C2288 +
                      (C6068 + C6069) * C50893 * C2289 +
                      (C6070 + C6071) * C50893 * C2290) *
                         C50861 -
                     (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                      (C5067 * C886 + C5284 + C5284 + C50935 * C896 +
                       C5065 * C283 + C5285 + C5285 + C51021 * C303) *
                          C50893 * C2288) *
                         C51010) *
                        C50833) *
                       C278 +
                   ((((C5525 + C5524) * C50893 * C2288 +
                      (C5523 + C5522) * C50893 * C2289 +
                      (C5848 + C5849) * C50893 * C2290) *
                         C50861 -
                     (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                      (C5115 + C5114) * C50893 * C2288) *
                         C51010) *
                        C51009 +
                    (((C5323 + C5322) * C50893 * C2288 +
                      (C5321 + C5320) * C50893 * C2289 +
                      (C5688 + C5689) * C50893 * C2290) *
                         C51010 -
                     ((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 +
                       C5065 * C889 + C6059 + C6059 + C51021 * C899) *
                          C50893 * C2290 +
                      (C6071 + C6070) * C50893 * C2289 +
                      (C6069 + C6068) * C50893 * C2288) *
                         C50861) *
                        C50833) *
                       C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                       C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                          C7954 +
                      (C12663 + C12664) * C7955 + C12671 * C7956) *
                         C50735 * C51010 -
                     ((C13336 + C13337) * C7956 + (C13338 + C13339) * C7955 +
                      (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                       C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                          C7954) *
                         C50735 * C50861) *
                        C51009 +
                    (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
                      (C5065 * C4062 + C13316 + C13316 + C51021 * C4068 +
                       C5067 * C9186 + C13317 + C13317 + C50935 * C9190) *
                          C7956) *
                         C50735 * C50861 -
                     ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
                      (C12664 + C12663) * C7954) *
                         C50735 * C51010) *
                        C50833) *
                       C278 +
                   ((((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
                      (C13340 + C13341) * C7956) *
                         C50735 * C50861 -
                     (C12644 * C7956 + (C5322 + C5323) * C7955 +
                      (C5115 + C5114) * C7954) *
                         C50735 * C51010) *
                        C51009 +
                    (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
                      (C12669 + C12670) * C7956) *
                         C50735 * C51010 -
                     ((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 +
                       C5065 * C4061 + C13323 + C13323 + C51021 * C4067) *
                          C7956 +
                      (C13341 + C13340) * C7955 + (C6069 + C6068) * C7954) *
                         C50735 * C50861) *
                        C50833) *
                       C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C275 -
           ((C5320 + C5321) * C50893 * C2290 +
            (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C276 +
           ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5065 * C280 + C5300 + C5300 + C51021 * C300 + C5067 * C889 +
             C5301 + C5301 + C50935 * C899) *
                C50893 * C2290) *
               C50797 * C276 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C275 -
           ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
             C5303 + C5303 + C51021 * C307) *
                C50893 * C2290 +
            (C5327 + C5326) * C50893 * C2289 +
            (C5325 + C5324) * C50893 * C2288) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C50797 * C50781 * C113 -
          (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
           (C5115 + C5114) * C50893 * C2288) *
              C50797 * C50781 * C114 +
          (C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
           (C5120 + C5121) * C50893 * C2290) *
              C50797 * C50781 * C115 -
          ((C5067 * C746 + C5096 + C5096 + C50935 * C748 + C5065 * C124 +
            C5097 + C5097 + C51021 * C138) *
               C50893 * C2290 +
           (C5121 + C5120) * C50893 * C2289 + C5125 * C2288) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C454 -
           ((C5522 + C5523) * C50893 * C2290 +
            (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C50893 * C2288 +
            (C5526 + C5527) * C50893 * C2289 +
            (C5528 + C5529) * C50893 * C2290) *
               C456) *
              C50781 * C278 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5065 * C457 + C5502 + C5502 + C51021 * C477 + C5067 * C464 +
             C5503 + C5503 + C50935 * C484) *
                C50893 * C2290) *
               C455 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C454 -
           ((C5067 * C1843 + C5504 + C5504 + C50935 * C1851 + C5065 * C464 +
             C5505 + C5505 + C51021 * C484) *
                C50893 * C2290 +
            (C5529 + C5528) * C50893 * C2289 +
            (C5527 + C5526) * C50893 * C2288) *
               C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C5065 * C283 + C5285 + C5285 + C51021 * C303 + C5067 * C886 +
            C5284 + C5284 + C50935 * C896) *
               C7955 +
           (C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C7956) *
              C50735 * C50797 * C50781 * C113 -
          ((C5325 + C5324) * C7956 + (C5322 + C5323) * C7955 +
           (C5115 + C5114) * C7954) *
              C50735 * C50797 * C50781 * C114 +
          (C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
              C50735 * C50797 * C50781 * C115 -
          ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
            C5303 + C5303 + C51021 * C307) *
               C7956 +
           (C5689 + C5688) * C7955 + C5123 * C7954) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C275 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C276 +
           (C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C5065 * C3396 + C12638 + C12638 + C51021 * C3402 + C5067 * C9685 +
             C12639 + C12639 + C50935 * C9689) *
                C7956) *
               C50735 * C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C276 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C275 -
           ((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C7956 +
            (C12670 + C12669) * C7955 + C12644 * C7954) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C454 -
           ((C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C7956 +
            (C5067 * C1215 + C6045 + C6045 + C50935 * C1223 + C5065 * C886 +
             C6044 + C6044 + C51021 * C896) *
                C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C7954 +
            (C5065 * C1215 + C6473 + C6473 + C51021 * C1223 + C5067 * C4469 +
             C6472 + C6472 + C50935 * C4475) *
                C7955 +
            (C5065 * C3559 + C12818 + C12818 + C51021 * C3565 + C5067 * C10088 +
             C12819 + C12819 + C50935 * C10092) *
                C7956) *
               C50735 * C456) *
              C50781 * C278 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C5065 * C1561 + C6963 + C6963 + C51021 * C1569 + C5067 * C3558 +
             C6962 + C6962 + C50935 * C3564) *
                C7956) *
               C50735 * C455 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C454 -
           ((C5067 * C10087 + C12820 + C12820 + C50935 * C10091 +
             C5065 * C3558 + C12821 + C12821 + C51021 * C3564) *
                C7956 +
            (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 + C5065 * C1214 +
             C6471 + C6471 + C51021 * C1222) *
                C7955 +
            (C5527 + C5526) * C7954) *
               C50735 * C456) *
              C50781 * C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C51010 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C50781 * C51051 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5848 + C5849) * C50893 * C2290) *
               C50861 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C51010) *
              C50781 * C51052 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C51010 -
           ((C5067 * C466 + C5841 + C5841 + C50935 * C486 + C5065 * C465 +
             C5842 + C5842 + C51021 * C485) *
                C50893 * C2290 +
            (C5849 + C5848) * C50893 * C2289 + C5843 * C2288) *
               C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C51010 -
           ((C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C7956 +
            (C5067 * C1215 + C6045 + C6045 + C50935 * C1223 + C5065 * C886 +
             C6044 + C6044 + C51021 * C896) *
                C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C50781 * C51051 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C5065 * C1561 + C6963 + C6963 + C51021 * C1569 + C5067 * C3558 +
             C6962 + C6962 + C50935 * C3564) *
                C7956) *
               C50735 * C50861 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C51010) *
              C50781 * C51052 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C51010 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C7956 +
            (C6071 + C6070) * C7955 + C5836 * C7954) *
               C50735 * C50861) *
              C50781 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C50797 * C50781 * C113 -
          (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
           (C5115 + C5114) * C50893 * C2288) *
              C50797 * C50781 * C114 +
          (C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
           (C5120 + C5121) * C50893 * C2290) *
              C50797 * C50781 * C115 -
          ((C5067 * C746 + C5096 + C5096 + C50935 * C748 + C5065 * C124 +
            C5097 + C5097 + C51021 * C138) *
               C50893 * C2290 +
           (C5121 + C5120) * C50893 * C2289 + C5125 * C2288) *
              C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C275 -
           ((C5320 + C5321) * C50893 * C2290 +
            (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C276 +
           ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5065 * C280 + C5300 + C5300 + C51021 * C300 + C5067 * C889 +
             C5301 + C5301 + C50935 * C899) *
                C50893 * C2290) *
               C50797 * C276 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C275 -
           ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
             C5303 + C5303 + C51021 * C307) *
                C50893 * C2290 +
            (C5327 + C5326) * C50893 * C2289 +
            (C5325 + C5324) * C50893 * C2288) *
               C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C5065 * C283 + C5285 + C5285 + C51021 * C303 + C5067 * C886 +
            C5284 + C5284 + C50935 * C896) *
               C7955 +
           (C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C7956) *
              C50735 * C50797 * C50781 * C113 -
          ((C5325 + C5324) * C7956 + (C5322 + C5323) * C7955 +
           (C5115 + C5114) * C7954) *
              C50735 * C50797 * C50781 * C114 +
          (C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
              C50735 * C50797 * C50781 * C115 -
          ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 + C5065 * C287 +
            C5303 + C5303 + C51021 * C307) *
               C7956 +
           (C5689 + C5688) * C7955 + C5123 * C7954) *
              C50735 * C50797 * C50781 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C275 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C276 +
           (C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C5065 * C3396 + C12638 + C12638 + C51021 * C3402 + C5067 * C9685 +
             C12639 + C12639 + C50935 * C9689) *
                C7956) *
               C50735 * C50797 * C277) *
              C278 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C276 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C275 -
           ((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 + C5065 * C3395 +
             C12646 + C12646 + C51021 * C3401) *
                C7956 +
            (C12670 + C12669) * C7955 + C12644 * C7954) *
               C50735 * C50797 * C277) *
              C50768)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C50893 * C2288 +
                     (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                        C50797 * C51053 -
                    (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                     (C5067 * C886 + C5284 + C5284 + C50935 * C896 +
                      C5065 * C283 + C5285 + C5285 + C51021 * C303) *
                         C50893 * C2288) *
                        C50797 * C51054 +
                    ((C5065 * C284 + C5286 + C5286 + C51021 * C304 +
                      C5067 * C1562 + C5287 + C5287 + C50935 * C1570) *
                         C50893 * C2288 +
                     (C5324 + C5325) * C50893 * C2289 +
                     (C5326 + C5327) * C50893 * C2290) *
                        C50797 * C1328) *
                       C51001 +
                   (((C5323 + C5322) * C50893 * C2288 +
                     (C5321 + C5320) * C50893 * C2289 +
                     (C5688 + C5689) * C50893 * C2290) *
                        C50797 * C51054 -
                    (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                     (C5115 + C5114) * C50893 * C2288) *
                        C50797 * C51053 -
                    ((C5067 * C1559 + C5302 + C5302 + C50935 * C1567 +
                      C5065 * C287 + C5303 + C5303 + C51021 * C307) *
                         C50893 * C2290 +
                     (C5327 + C5326) * C50893 * C2289 +
                     (C5325 + C5324) * C50893 * C2288) *
                        C50797 * C1328) *
                       C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C7954 +
                     (C12663 + C12664) * C7955 + C12671 * C7956) *
                        C50735 * C50797 * C51053 -
                    (C13586 * C7956 + (C12666 + C12665) * C7955 +
                     (C12664 + C12663) * C7954) *
                        C50735 * C50797 * C51054 +
                    (C12671 * C7954 + (C12668 + C12667) * C7955 +
                     (C13597 + C13598) * C7956) *
                        C50735 * C50797 * C1328) *
                       C51001 +
                   (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
                     (C12669 + C12670) * C7956) *
                        C50735 * C50797 * C51054 -
                    (C12644 * C7956 + (C5322 + C5323) * C7955 +
                     (C5115 + C5114) * C7954) *
                        C50735 * C50797 * C51053 -
                    ((C5067 * C9684 + C12645 + C12645 + C50935 * C9688 +
                      C5065 * C3395 + C12646 + C12646 + C51021 * C3401) *
                         C7956 +
                     (C12670 + C12669) * C7955 + C12644 * C7954) *
                        C50735 * C50797 * C1328) *
                       C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[216] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C50893 * C2288 +
                     (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                        C51010 -
                    (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                     (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                      C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                         C50893 * C2288) *
                        C50861) *
                       C51053 +
                   (((C5065 * C886 + C6044 + C6044 + C51021 * C896 +
                      C5067 * C1215 + C6045 + C6045 + C50935 * C1223) *
                         C50893 * C2288 +
                     (C6068 + C6069) * C50893 * C2289 +
                     (C6070 + C6071) * C50893 * C2290) *
                        C50861 -
                    (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                     (C5067 * C886 + C5284 + C5284 + C50935 * C896 +
                      C5065 * C283 + C5285 + C5285 + C51021 * C303) *
                         C50893 * C2288) *
                        C51010) *
                       C51054 +
                   (((C5065 * C284 + C5286 + C5286 + C51021 * C304 +
                      C5067 * C1562 + C5287 + C5287 + C50935 * C1570) *
                         C50893 * C2288 +
                     (C5324 + C5325) * C50893 * C2289 +
                     (C5326 + C5327) * C50893 * C2290) *
                        C51010 -
                    ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 +
                      C5065 * C1560 + C6961 + C6961 + C51021 * C1568) *
                         C50893 * C2290 +
                     (C5067 * C3558 + C6962 + C6962 + C50935 * C3564 +
                      C5065 * C1561 + C6963 + C6963 + C51021 * C1569) *
                         C50893 * C2289 +
                     (C5067 * C3559 + C6964 + C6964 + C50935 * C3565 +
                      C5065 * C1562 + C6965 + C6965 + C51021 * C1570) *
                         C50893 * C2288) *
                        C50861) *
                       C1328) *
                  C50762) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C7954 +
                     (C12663 + C12664) * C7955 + C12671 * C7956) *
                        C50735 * C51010 -
                    (C14253 * C7956 + (C13338 + C13339) * C7955 +
                     (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                      C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                         C7954) *
                        C50735 * C50861) *
                       C51053 +
                   (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
                     (C14264 + C14265) * C7956) *
                        C50735 * C50861 -
                    (C13586 * C7956 + (C12666 + C12665) * C7955 +
                     (C12664 + C12663) * C7954) *
                        C50735 * C51010) *
                       C51054 +
                   ((C12671 * C7954 + (C12668 + C12667) * C7955 +
                     (C13597 + C13598) * C7956) *
                        C50735 * C51010 -
                    ((C5067 * C11445 + C14258 + C14258 + C50935 * C11447 +
                      C5065 * C9685 + C14259 + C14259 + C51021 * C9689) *
                         C7956 +
                     (C14265 + C14264) * C7955 + C14253 * C7954) *
                        C50735 * C50861) *
                       C1328) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C50797 * C1093 -
          (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
           (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
            C5285 + C5285 + C51021 * C303) *
               C50893 * C2288) *
              C50797 * C1094 +
          ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C50893 * C2288 +
           (C5324 + C5325) * C50893 * C2289 +
           (C5326 + C5327) * C50893 * C2290) *
              C50797 * C1095 -
          ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
            C6317 + C6317 + C51021 * C1107) *
               C50893 * C2290 +
           (C5067 * C4061 + C6318 + C6318 + C50935 * C4067 + C5065 * C1100 +
            C6319 + C6319 + C51021 * C1108) *
               C50893 * C2289 +
           (C5067 * C4062 + C6320 + C6320 + C50935 * C4068 + C5065 * C1101 +
            C6321 + C6321 + C51021 * C1109) *
               C50893 * C2288) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C1022 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5688 + C5689) * C50893 * C2290) *
               C50797 * C50833 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C1022) *
              C1025 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C50797 * C1022 -
           ((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50893 * C2290 +
            (C5689 + C5688) * C50893 * C2289 + C5683 * C2288) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C454 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C50893 * C2288 +
            (C5526 + C5527) * C50893 * C2289 +
            (C5528 + C5529) * C50893 * C2290) *
               C456) *
              C1022 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C455 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C454 -
           ((C5067 * C4467 + C6468 + C6468 + C50935 * C4473 + C5065 * C1213 +
             C6469 + C6469 + C51021 * C1221) *
                C50893 * C2290 +
            (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 + C5065 * C1214 +
             C6471 + C6471 + C51021 * C1222) *
                C50893 * C2289 +
            (C5067 * C4469 + C6472 + C6472 + C50935 * C4475 + C5065 * C1215 +
             C6473 + C6473 + C51021 * C1223) *
                C50893 * C2288) *
               C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C1022 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C50833 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C50797 * C1022 -
           ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
             C6317 + C6317 + C51021 * C1107) *
                C7956 +
            (C5327 + C5326) * C7955 + C5676 * C7954) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C12663 + C12664) * C7955 + C12671 * C7956) *
              C50735 * C50797 * C1093 -
          (C13586 * C7956 + (C12666 + C12665) * C7955 +
           (C12664 + C12663) * C7954) *
              C50735 * C50797 * C1094 +
          (C12671 * C7954 + (C12668 + C12667) * C7955 +
           (C13597 + C13598) * C7956) *
              C50735 * C50797 * C1095 -
          ((C5067 * C11780 + C13591 + C13591 + C50935 * C11782 + C5065 * C9027 +
            C13592 + C13592 + C51021 * C9031) *
               C7956 +
           (C13598 + C13597) * C7955 + C13586 * C7954) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C454 -
           ((C13336 + C13337) * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C455 +
           ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
             C5489 + C5489 + C50935 * C1854) *
                C7954 +
            (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
               C50735 * C456) *
              C1022 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C5065 * C4062 + C13316 + C13316 + C51021 * C4068 + C5067 * C9186 +
             C13317 + C13317 + C50935 * C9190) *
                C7956) *
               C50735 * C455 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C454 -
           ((C5067 * C12051 + C13753 + C13753 + C50935 * C12053 +
             C5065 * C9186 + C13754 + C13754 + C51021 * C9190) *
                C7956 +
            (C13766 + C13765) * C7955 + (C13764 + C13763) * C7954) *
               C50735 * C456) *
              C50833) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[218] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                       C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                          C50893 * C2288 +
                      (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                         C51010 -
                     (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                      (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                       C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                          C50893 * C2288) *
                         C50861) *
                        C1022 +
                    (((C5065 * C886 + C6044 + C6044 + C51021 * C896 +
                       C5067 * C1215 + C6045 + C6045 + C50935 * C1223) *
                          C50893 * C2288 +
                      (C6068 + C6069) * C50893 * C2289 +
                      (C6070 + C6071) * C50893 * C2290) *
                         C50861 -
                     (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                      (C5067 * C886 + C5284 + C5284 + C50935 * C896 +
                       C5065 * C283 + C5285 + C5285 + C51021 * C303) *
                          C50893 * C2288) *
                         C51010) *
                        C50833) *
                       C51001 +
                   ((((C5525 + C5524) * C50893 * C2288 +
                      (C5523 + C5522) * C50893 * C2289 +
                      (C5848 + C5849) * C50893 * C2290) *
                         C50861 -
                     (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                      (C5115 + C5114) * C50893 * C2288) *
                         C51010) *
                        C1022 +
                    (((C5323 + C5322) * C50893 * C2288 +
                      (C5321 + C5320) * C50893 * C2289 +
                      (C5688 + C5689) * C50893 * C2290) *
                         C51010 -
                     ((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 +
                       C5065 * C889 + C6059 + C6059 + C51021 * C899) *
                          C50893 * C2290 +
                      (C6071 + C6070) * C50893 * C2289 +
                      (C6069 + C6068) * C50893 * C2288) *
                         C50861) *
                        C50833) *
                       C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                       C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                          C7954 +
                      (C12663 + C12664) * C7955 + C12671 * C7956) *
                         C50735 * C51010 -
                     ((C13336 + C13337) * C7956 + (C13338 + C13339) * C7955 +
                      (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                       C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                          C7954) *
                         C50735 * C50861) *
                        C1022 +
                    (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
                      (C5065 * C4062 + C13316 + C13316 + C51021 * C4068 +
                       C5067 * C9186 + C13317 + C13317 + C50935 * C9190) *
                          C7956) *
                         C50735 * C50861 -
                     (C13586 * C7956 + (C12666 + C12665) * C7955 +
                      (C12664 + C12663) * C7954) *
                         C50735 * C51010) *
                        C50833) *
                       C51001 +
                   ((((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
                      (C13340 + C13341) * C7956) *
                         C50735 * C50861 -
                     (C12644 * C7956 + (C5322 + C5323) * C7955 +
                      (C5115 + C5114) * C7954) *
                         C50735 * C51010) *
                        C1022 +
                    (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
                      (C12669 + C12670) * C7956) *
                         C50735 * C51010 -
                     ((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 +
                       C5065 * C4061 + C13323 + C13323 + C51021 * C4067) *
                          C7956 +
                      (C13341 + C13340) * C7955 + (C6069 + C6068) * C7954) *
                         C50735 * C50861) *
                        C50833) *
                       C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C50797 * C1022 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C50893 * C2288 +
            (C5321 + C5320) * C50893 * C2289 +
            (C5688 + C5689) * C50893 * C2290) *
               C50797 * C50833 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C50797 * C1022) *
              C1025 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C50797 * C1022 -
           ((C5067 * C890 + C5681 + C5681 + C50935 * C900 + C5065 * C288 +
             C5682 + C5682 + C51021 * C308) *
                C50893 * C2290 +
            (C5689 + C5688) * C50893 * C2289 + C5683 * C2288) *
               C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C50797 * C1093 -
          (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
           (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
            C5285 + C5285 + C51021 * C303) *
               C50893 * C2288) *
              C50797 * C1094 +
          ((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
            C5287 + C5287 + C50935 * C1570) *
               C50893 * C2288 +
           (C5324 + C5325) * C50893 * C2289 +
           (C5326 + C5327) * C50893 * C2290) *
              C50797 * C1095 -
          ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
            C6317 + C6317 + C51021 * C1107) *
               C50893 * C2290 +
           (C5067 * C4061 + C6318 + C6318 + C50935 * C4067 + C5065 * C1100 +
            C6319 + C6319 + C51021 * C1108) *
               C50893 * C2289 +
           (C5067 * C4062 + C6320 + C6320 + C50935 * C4068 + C5065 * C1101 +
            C6321 + C6321 + C51021 * C1109) *
               C50893 * C2288) *
              C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C50797 * C1022 -
           ((C12667 + C12668) * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C50797 * C50833) *
              C1024 +
          (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
            (C12669 + C12670) * C7956) *
               C50735 * C50797 * C50833 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C50797 * C1022) *
              C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C50797 * C1022 -
           ((C5067 * C4060 + C6316 + C6316 + C50935 * C4066 + C5065 * C1099 +
             C6317 + C6317 + C51021 * C1107) *
                C7956 +
            (C5327 + C5326) * C7955 + C5676 * C7954) *
               C50735 * C50797 * C50833) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C12663 + C12664) * C7955 + C12671 * C7956) *
              C50735 * C50797 * C1093 -
          (C13586 * C7956 + (C12666 + C12665) * C7955 +
           (C12664 + C12663) * C7954) *
              C50735 * C50797 * C1094 +
          (C12671 * C7954 + (C12668 + C12667) * C7955 +
           (C13597 + C13598) * C7956) *
              C50735 * C50797 * C1095 -
          ((C5067 * C11780 + C13591 + C13591 + C50935 * C11782 + C5065 * C9027 +
            C13592 + C13592 + C51021 * C9031) *
               C7956 +
           (C13598 + C13597) * C7955 + C13586 * C7954) *
              C50735 * C50797 * C1096) *
         C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[220] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                       C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                          C50893 * C2288 +
                      (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                         C1673 -
                     (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                      (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                       C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                          C50893 * C2288) *
                         C50861) *
                        C51009 +
                    (((C5065 * C886 + C6044 + C6044 + C51021 * C896 +
                       C5067 * C1215 + C6045 + C6045 + C50935 * C1223) *
                          C50893 * C2288 +
                      (C6068 + C6069) * C50893 * C2289 +
                      (C6070 + C6071) * C50893 * C2290) *
                         C50861 -
                     (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                      (C5067 * C886 + C5284 + C5284 + C50935 * C896 +
                       C5065 * C283 + C5285 + C5285 + C51021 * C303) *
                          C50893 * C2288) *
                         C1673) *
                        C50833) *
                       C51001 +
                   ((((C5525 + C5524) * C50893 * C2288 +
                      (C5523 + C5522) * C50893 * C2289 +
                      (C5848 + C5849) * C50893 * C2290) *
                         C50861 -
                     (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                      (C5115 + C5114) * C50893 * C2288) *
                         C1673) *
                        C51009 +
                    (((C5323 + C5322) * C50893 * C2288 +
                      (C5321 + C5320) * C50893 * C2289 +
                      (C5688 + C5689) * C50893 * C2290) *
                         C1673 -
                     ((C5067 * C1212 + C6058 + C6058 + C50935 * C1220 +
                       C5065 * C889 + C6059 + C6059 + C51021 * C899) *
                          C50893 * C2290 +
                      (C6071 + C6070) * C50893 * C2289 +
                      (C6069 + C6068) * C50893 * C2288) *
                         C50861) *
                        C50833) *
                       C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                       C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                          C7954 +
                      (C12663 + C12664) * C7955 + C12671 * C7956) *
                         C50735 * C1673 -
                     (C14253 * C7956 + (C13338 + C13339) * C7955 +
                      (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                       C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                          C7954) *
                         C50735 * C50861) *
                        C51009 +
                    (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
                      (C14264 + C14265) * C7956) *
                         C50735 * C50861 -
                     (C13586 * C7956 + (C12666 + C12665) * C7955 +
                      (C12664 + C12663) * C7954) *
                         C50735 * C1673) *
                        C50833) *
                       C51001 +
                   ((((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
                      (C13340 + C13341) * C7956) *
                         C50735 * C50861 -
                     (C12644 * C7956 + (C5322 + C5323) * C7955 +
                      (C5115 + C5114) * C7954) *
                         C50735 * C1673) *
                        C51009 +
                    (((C5323 + C5322) * C7954 + (C5324 + C5325) * C7955 +
                      (C12669 + C12670) * C7956) *
                         C50735 * C1673 -
                     ((C5067 * C9185 + C13322 + C13322 + C50935 * C9189 +
                       C5065 * C4061 + C13323 + C13323 + C51021 * C4067) *
                          C7956 +
                      (C13341 + C13340) * C7955 + (C6069 + C6068) * C7954) *
                         C50735 * C50861) *
                        C50833) *
                       C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[221] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C50893 * C2288 +
                     (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                        C51055 -
                    (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                     (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                      C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                         C50893 * C2288) *
                        C51056 +
                    ((C5065 * C461 + C5488 + C5488 + C51021 * C481 +
                      C5067 * C1846 + C5489 + C5489 + C50935 * C1854) *
                         C50893 * C2288 +
                     (C5526 + C5527) * C50893 * C2289 +
                     (C5528 + C5529) * C50893 * C2290) *
                        C2089) *
                       C51009 +
                   (((C5065 * C886 + C6044 + C6044 + C51021 * C896 +
                      C5067 * C1215 + C6045 + C6045 + C50935 * C1223) *
                         C50893 * C2288 +
                     (C6068 + C6069) * C50893 * C2289 +
                     (C6070 + C6071) * C50893 * C2290) *
                        C51056 -
                    (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
                     (C5067 * C886 + C5284 + C5284 + C50935 * C896 +
                      C5065 * C283 + C5285 + C5285 + C51021 * C303) *
                         C50893 * C2288) *
                        C51055 -
                    ((C5067 * C4467 + C6468 + C6468 + C50935 * C4473 +
                      C5065 * C1213 + C6469 + C6469 + C51021 * C1221) *
                         C50893 * C2290 +
                     (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 +
                      C5065 * C1214 + C6471 + C6471 + C51021 * C1222) *
                         C50893 * C2289 +
                     (C5067 * C4469 + C6472 + C6472 + C50935 * C4475 +
                      C5065 * C1215 + C6473 + C6473 + C51021 * C1223) *
                         C50893 * C2288) *
                        C2089) *
                       C50833) *
                  C50762) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C7954 +
                     (C12663 + C12664) * C7955 + C12671 * C7956) *
                        C50735 * C51055 -
                    (C14253 * C7956 + (C13338 + C13339) * C7955 +
                     (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                      C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                         C7954) *
                        C50735 * C51056 +
                    ((C5065 * C461 + C5488 + C5488 + C51021 * C481 +
                      C5067 * C1846 + C5489 + C5489 + C50935 * C1854) *
                         C7954 +
                     (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
                        C50735 * C2089) *
                       C51009 +
                   (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
                     (C14264 + C14265) * C7956) *
                        C50735 * C51056 -
                    (C13586 * C7956 + (C12666 + C12665) * C7955 +
                     (C12664 + C12663) * C7954) *
                        C50735 * C51055 -
                    ((C5067 * C12051 + C13753 + C13753 + C50935 * C12053 +
                      C5065 * C9186 + C13754 + C13754 + C51021 * C9190) *
                         C7956 +
                     (C13766 + C13765) * C7955 + (C13764 + C13763) * C7954) *
                        C50735 * C2089) *
                       C50833) *
                  C50762) /
                     (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C1673 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C275 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C50861 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C1673) *
              C276 +
          (((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C50893 * C2290 +
            (C5067 * C3558 + C6962 + C6962 + C50935 * C3564 + C5065 * C1561 +
             C6963 + C6963 + C51021 * C1569) *
                C50893 * C2289 +
            (C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C50893 * C2288) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C1673 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5848 + C5849) * C50893 * C2290) *
               C50861 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C1673) *
              C50781 * C1025 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C1673 -
           ((C5067 * C466 + C5841 + C5841 + C50935 * C486 + C5065 * C465 +
             C5842 + C5842 + C51021 * C485) *
                C50893 * C2290 +
            (C5849 + C5848) * C50893 * C2289 + C5843 * C2288) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C50893 * C2288 +
           (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
              C1839 -
          (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
           (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
            C5487 + C5487 + C51021 * C480) *
               C50893 * C2288) *
              C1840 +
          ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
            C5489 + C5489 + C50935 * C1854) *
               C50893 * C2288 +
           (C5526 + C5527) * C50893 * C2289 +
           (C5528 + C5529) * C50893 * C2290) *
              C1841 -
          ((C5067 * C7355 + C7365 + C7365 + C50935 * C7361 + C5065 * C1844 +
            C7366 + C7366 + C51021 * C1852) *
               C50893 * C2290 +
           (C5067 * C7356 + C7367 + C7367 + C50935 * C7362 + C5065 * C1845 +
            C7368 + C7368 + C51021 * C1853) *
               C50893 * C2289 +
           (C5067 * C7357 + C7369 + C7369 + C50935 * C7363 + C5065 * C1846 +
            C7370 + C7370 + C51021 * C1854) *
               C50893 * C2288) *
              C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C13340 + C13341) * C7956) *
               C50735 * C50861 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C7956 +
            (C6071 + C6070) * C7955 + C5836 * C7954) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C275 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C14264 + C14265) * C7956) *
               C50735 * C50861 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C1673) *
              C276 +
          ((C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C13597 + C13598) * C7956) *
               C50735 * C1673 -
           ((C5067 * C11445 + C14258 + C14258 + C50935 * C11447 +
             C5065 * C9685 + C14259 + C14259 + C51021 * C9689) *
                C7956 +
            (C14265 + C14264) * C7955 + C14253 * C7954) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
            C5071 + C5071 + C50935 * C480) *
               C7954 +
           (C12663 + C12664) * C7955 + C12671 * C7956) *
              C50735 * C1839 -
          (C14253 * C7956 + (C13338 + C13339) * C7955 +
           (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
            C5487 + C5487 + C51021 * C480) *
               C7954) *
              C50735 * C1840 +
          ((C5065 * C461 + C5488 + C5488 + C51021 * C481 + C5067 * C1846 +
            C5489 + C5489 + C50935 * C1854) *
               C7954 +
           (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
              C50735 * C1841 -
          ((C5067 * C14655 + C14662 + C14662 + C50935 * C14659 +
            C5065 * C10088 + C14663 + C14663 + C51021 * C10092) *
               C7956 +
           (C5067 * C14656 + C14664 + C14664 + C50935 * C14660 + C5065 * C4469 +
            C14665 + C14665 + C51021 * C4475) *
               C7955 +
           (C5067 * C7357 + C7369 + C7369 + C50935 * C7363 + C5065 * C1846 +
            C7370 + C7370 + C51021 * C1854) *
               C7954) *
              C50735 * C1842) *
         C50781 * C50762) /
            (p * q * std::sqrt(p + q));
    d2ee[223] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C50893 * C2288 +
                     (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
                        C51055 -
                    (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
                     (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                      C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                         C50893 * C2288) *
                        C51056 +
                    ((C5065 * C461 + C5488 + C5488 + C51021 * C481 +
                      C5067 * C1846 + C5489 + C5489 + C50935 * C1854) *
                         C50893 * C2288 +
                     (C5526 + C5527) * C50893 * C2289 +
                     (C5528 + C5529) * C50893 * C2290) *
                        C2089) *
                       C50781 * C51001 +
                   (((C5525 + C5524) * C50893 * C2288 +
                     (C5523 + C5522) * C50893 * C2289 +
                     (C5848 + C5849) * C50893 * C2290) *
                        C51056 -
                    (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
                     (C5115 + C5114) * C50893 * C2288) *
                        C51055 -
                    ((C5067 * C1843 + C5504 + C5504 + C50935 * C1851 +
                      C5065 * C464 + C5505 + C5505 + C51021 * C484) *
                         C50893 * C2290 +
                     (C5529 + C5528) * C50893 * C2289 +
                     (C5527 + C5526) * C50893 * C2288) *
                        C2089) *
                       C50781 * C50768)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 +
                      C5067 * C460 + C5071 + C5071 + C50935 * C480) *
                         C7954 +
                     (C12663 + C12664) * C7955 + C12671 * C7956) *
                        C50735 * C51055 -
                    (C14253 * C7956 + (C13338 + C13339) * C7955 +
                     (C5067 * C461 + C5486 + C5486 + C50935 * C481 +
                      C5065 * C460 + C5487 + C5487 + C51021 * C480) *
                         C7954) *
                        C50735 * C51056 +
                    ((C5065 * C461 + C5488 + C5488 + C51021 * C481 +
                      C5067 * C1846 + C5489 + C5489 + C50935 * C1854) *
                         C7954 +
                     (C13763 + C13764) * C7955 + (C13765 + C13766) * C7956) *
                        C50735 * C2089) *
                       C50781 * C51001 +
                   (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
                     (C13340 + C13341) * C7956) *
                        C50735 * C51056 -
                    (C12644 * C7956 + (C5322 + C5323) * C7955 +
                     (C5115 + C5114) * C7954) *
                        C50735 * C51055 -
                    ((C5067 * C10087 + C12820 + C12820 + C50935 * C10091 +
                      C5065 * C3558 + C12821 + C12821 + C51021 * C3564) *
                         C7956 +
                     (C5067 * C4468 + C6470 + C6470 + C50935 * C4474 +
                      C5065 * C1214 + C6471 + C6471 + C51021 * C1222) *
                         C7955 +
                     (C5527 + C5526) * C7954) *
                        C50735 * C2089) *
                       C50781 * C50768)) /
                     (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C1673 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C50893 * C2288 +
            (C5523 + C5522) * C50893 * C2289 +
            (C5848 + C5849) * C50893 * C2290) *
               C50861 -
           (C5125 * C2290 + (C5117 + C5116) * C50893 * C2289 +
            (C5115 + C5114) * C50893 * C2288) *
               C1673) *
              C50781 * C1025 +
          ((C5124 * C2288 + (C5119 + C5118) * C50893 * C2289 +
            (C5120 + C5121) * C50893 * C2290) *
               C1673 -
           ((C5067 * C466 + C5841 + C5841 + C50935 * C486 + C5065 * C465 +
             C5842 + C5842 + C51021 * C485) *
                C50893 * C2290 +
            (C5849 + C5848) * C50893 * C2289 + C5843 * C2288) *
               C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C50893 * C2288 +
            (C5114 + C5115) * C50893 * C2289 + C5124 * C2290) *
               C1673 -
           (C5843 * C2290 + (C5524 + C5525) * C50893 * C2289 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C50893 * C2288) *
               C50861) *
              C275 +
          (((C5065 * C886 + C6044 + C6044 + C51021 * C896 + C5067 * C1215 +
             C6045 + C6045 + C50935 * C1223) *
                C50893 * C2288 +
            (C6068 + C6069) * C50893 * C2289 +
            (C6070 + C6071) * C50893 * C2290) *
               C50861 -
           (C5683 * C2290 + (C5322 + C5323) * C50893 * C2289 +
            (C5067 * C886 + C5284 + C5284 + C50935 * C896 + C5065 * C283 +
             C5285 + C5285 + C51021 * C303) *
                C50893 * C2288) *
               C1673) *
              C276 +
          (((C5065 * C284 + C5286 + C5286 + C51021 * C304 + C5067 * C1562 +
             C5287 + C5287 + C50935 * C1570) *
                C50893 * C2288 +
            (C5324 + C5325) * C50893 * C2289 +
            (C5326 + C5327) * C50893 * C2290) *
               C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C50893 * C2290 +
            (C5067 * C3558 + C6962 + C6962 + C50935 * C3564 + C5065 * C1561 +
             C6963 + C6963 + C51021 * C1569) *
                C50893 * C2289 +
            (C5067 * C3559 + C6964 + C6964 + C50935 * C3565 + C5065 * C1562 +
             C6965 + C6965 + C51021 * C1570) *
                C50893 * C2288) *
               C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C50781 * C1024 +
          (((C5525 + C5524) * C7954 + (C6068 + C6069) * C7955 +
            (C13340 + C13341) * C7956) *
               C50735 * C50861 -
           (C12644 * C7956 + (C5322 + C5323) * C7955 +
            (C5115 + C5114) * C7954) *
               C50735 * C1673) *
              C50781 * C1025 +
          ((C5122 * C7954 + (C5321 + C5320) * C7955 + (C5326 + C5327) * C7956) *
               C50735 * C1673 -
           ((C5067 * C3557 + C6960 + C6960 + C50935 * C3563 + C5065 * C1560 +
             C6961 + C6961 + C51021 * C1568) *
                C7956 +
            (C6071 + C6070) * C7955 + C5836 * C7954) *
               C50735 * C50861) *
              C50781 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5065 * C119 + C5070 + C5070 + C51021 * C133 + C5067 * C460 +
             C5071 + C5071 + C50935 * C480) *
                C7954 +
            (C12663 + C12664) * C7955 + C12671 * C7956) *
               C50735 * C1673 -
           (C14253 * C7956 + (C13338 + C13339) * C7955 +
            (C5067 * C461 + C5486 + C5486 + C50935 * C481 + C5065 * C460 +
             C5487 + C5487 + C51021 * C480) *
                C7954) *
               C50735 * C50861) *
              C275 +
          (((C13339 + C13338) * C7954 + (C13337 + C13336) * C7955 +
            (C14264 + C14265) * C7956) *
               C50735 * C50861 -
           (C13586 * C7956 + (C12666 + C12665) * C7955 +
            (C12664 + C12663) * C7954) *
               C50735 * C1673) *
              C276 +
          ((C12671 * C7954 + (C12668 + C12667) * C7955 +
            (C13597 + C13598) * C7956) *
               C50735 * C1673 -
           ((C5067 * C11445 + C14258 + C14258 + C50935 * C11447 +
             C5065 * C9685 + C14259 + C14259 + C51021 * C9689) *
                C7956 +
            (C14265 + C14264) * C7955 + C14253 * C7954) *
               C50735 * C50861) *
              C277) *
         C50762) /
            (p * q * std::sqrt(p + q));
}
