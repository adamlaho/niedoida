/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dsdd_AA_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2022_11_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29952 = ae * be;
    const double C29951 = 0 * be;
    const double C29950 = xA - xB;
    const double C29949 = ae + be;
    const double C29971 = 0 * be;
    const double C29970 = zA - zB;
    const double C29993 = xP - xQ;
    const double C29992 = zP - zQ;
    const double C29991 = p + q;
    const double C29990 = p * q;
    const double C30000 = std::pow(ae, 2);
    const double C29998 = bs[3];
    const double C30008 = bs[4];
    const double C30017 = bs[5];
    const double C30031 = bs[6];
    const double C30053 = bs[7];
    const double C30162 = yP - yQ;
    const double C30371 = bs[2];
    const double C117 = bs[0];
    const double C30790 = ce + de;
    const double C30789 = ce * de;
    const double C30788 = xC - xD;
    const double C30822 = yC - yD;
    const double C30840 = zC - zD;
    const double C31008 = yA - yB;
    const double C29954 = C29952 * C29950;
    const double C30771 = std::pow(C29950, 2);
    const double C31062 = C29950 * be;
    const double C29953 = 2 * C29949;
    const double C138 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * std::pow(ae, 2)) /
                        std::pow(C29949, 2);
    const double C31063 = std::pow(C29949, 2);
    const double C29972 = C29952 * C29970;
    const double C31020 = std::pow(C29970, 2);
    const double C31097 = C29970 * be;
    const double C30018 = std::pow(C29993, 2);
    const double C30086 = C29993 * ae;
    const double C30001 = C29992 * ae;
    const double C29999 = C29993 * C29992;
    const double C30204 = std::pow(C29992, 2);
    const double C29994 = 2 * C29990;
    const double C30171 = std::pow(C30162, 2);
    const double C30794 = 2 * C30790;
    const double C30793 = std::pow(C30790, 2);
    const double C30795 = C30788 * de;
    const double C30792 = C30788 * ce;
    const double C30791 = std::pow(C30788, 2);
    const double C30823 = std::pow(C30822, 2);
    const double C30882 = C30822 * de;
    const double C30880 = C30822 * ce;
    const double C30841 = std::pow(C30840, 2);
    const double C30924 = C30840 * de;
    const double C30922 = C30840 * ce;
    const double C31009 = std::pow(C31008, 2);
    const double C31096 = C31008 * be;
    const double C30772 = C30771 * C29952;
    const double C31065 = std::pow(C29953, -2);
    const double C31064 = std::pow(C29953, -1);
    const double C31021 = C31020 * C29952;
    const double C30091 = C29998 * C30086;
    const double C30094 = C30008 * C30086;
    const double C30100 = C30017 * C30086;
    const double C30114 = C30031 * C30086;
    const double C30135 = C30053 * C30086;
    const double C30004 = C29998 * C30001;
    const double C30010 = C30008 * C30001;
    const double C30020 = C30017 * C30001;
    const double C30035 = C30031 * C30001;
    const double C30059 = C30053 * C30001;
    const double C30003 = C29999 * C30000;
    const double C29995 = C29994 / C29991;
    const double C124 = (-(bs[1] * C30001 * C29994) / C29991) / C29949;
    const double C125 = (-(bs[1] * C30086 * C29994) / C29991) / C29949;
    const double C118 = -(C29993 * bs[1] * C29994) / C29991;
    const double C293 = -(C30162 * bs[1] * C29994) / C29991;
    const double C482 = -(C29992 * bs[1] * C29994) / C29991;
    const double C30807 = std::pow(C30794, -1);
    const double C31073 = std::pow(C30794, -2);
    const double C30808 = 2 * C30793;
    const double C31077 = C30793 * C30794;
    const double C31076 = 4 * C30793;
    const double C31066 = std::pow(C30792, 2);
    const double C30796 = C30791 * C30789;
    const double C30824 = C30823 * C30789;
    const double C31078 = std::pow(C30880, 2);
    const double C30842 = C30841 * C30789;
    const double C31080 = std::pow(C30922, 2);
    const double C31010 = C31009 * C29952;
    const double C30773 = C30772 / C29949;
    const double C31022 = C31021 / C29949;
    const double C30009 = C30008 * C30003;
    const double C30019 = C30017 * C30003;
    const double C30033 = C30031 * C30003;
    const double C30057 = C30053 * C30003;
    const double C29997 = -C29995;
    const double C30007 = std::pow(C29995, 4);
    const double C30030 = std::pow(C29995, 6);
    const double C139 = (ae * std::pow(C29995, 2) * bs[2] * C29992 * ae +
                         C29993 * std::pow(-C29995, 3) * bs[3] * C29993 *
                             C29992 * std::pow(ae, 2)) /
                        std::pow(C29949, 2);
    const double C30370 = std::pow(C29995, 2);
    const double C126 =
        (C29993 * std::pow(C29995, 2) * bs[2] * C30001) / C29949;
    const double C127 =
        (C29993 * std::pow(C29995, 2) * bs[2] * C30086) / C29949 -
        (ae * bs[1] * C29994) / (C29991 * C29949);
    const double C31108 = 4 * C31077;
    const double C31107 = C30790 * C31076;
    const double C30797 = C30796 / C30790;
    const double C30825 = C30824 / C30790;
    const double C30843 = C30842 / C30790;
    const double C31011 = C31010 / C29949;
    const double C30774 = -C30773;
    const double C31023 = -C31022;
    const double C30002 = std::pow(C29997, 3);
    const double C30016 = std::pow(C29997, 5);
    const double C30052 = std::pow(C29997, 7);
    const double C30012 = C30007 * C30010;
    const double C30011 = C30007 * C30009;
    const double C30096 = C30007 * C30094;
    const double C30101 = C30008 * C30007;
    const double C30038 = C30030 * C30035;
    const double C30037 = C30030 * C30033;
    const double C30116 = C30030 * C30114;
    const double C30136 = C30031 * C30030;
    const double C30372 = C30371 * C30370;
    const double C305 = (C30162 * C30370 * C30371 * C30086) / C29949;
    const double C306 = (C30162 * C30370 * C30371 * C30001) / C29949;
    const double C494 = (C29992 * C30370 * C30371 * C30086) / C29949;
    const double C495 = (C29992 * C30370 * C30371 * C30001) / C29949 -
                        (ae * bs[1] * C29994) / (C29991 * C29949);
    const double C30798 = -C30797;
    const double C30826 = -C30825;
    const double C30844 = -C30843;
    const double C31012 = -C31011;
    const double C30775 = std::exp(C30774);
    const double C31024 = std::exp(C31023);
    const double C30005 = C30002 * C30004;
    const double C30087 = C29998 * C30002;
    const double C30092 = C30002 * C30091;
    const double C323 =
        ((yP - yQ) * C30002 * C29998 * C30003) / std::pow(C29949, 2);
    const double C512 = (ae * std::pow(C29995, 2) * bs[2] * C30086 +
                         C29992 * C30002 * C29998 * C30003) /
                        std::pow(C29949, 2);
    const double C30022 = C30016 * C30020;
    const double C30021 = C30016 * C30019;
    const double C30102 = C30016 * C30100;
    const double C30115 = C30017 * C30016;
    const double C30062 = C30052 * C30059;
    const double C30061 = C30052 * C30057;
    const double C30138 = C30052 * C30135;
    const double C30015 = ae * C30012;
    const double C30014 = C29993 * C30012;
    const double C30500 = C29992 * C30012;
    const double C30526 = C30162 * C30012;
    const double C324 =
        (C30002 * C29998 * C30003 + C30011 * std::pow(yP - yQ, 2)) /
        std::pow(C29949, 2);
    const double C30097 = C29993 * C30096;
    const double C30179 = C30162 * C30096;
    const double C30202 = ae * C30096;
    const double C30201 = C29992 * C30096;
    const double C30104 = C29993 * C30101;
    const double C30103 = C30101 * ae;
    const double C30378 = C30101 * C30018;
    const double C30472 = C30101 * C30171;
    const double C30502 = C30101 * C30204;
    const double C30527 = C30162 * C30101;
    const double C30609 = C29992 * C30101;
    const double C30040 = C30038 * C30018;
    const double C30051 = ae * C30038;
    const double C30050 = C29993 * C30038;
    const double C30543 = C30038 * C30171;
    const double C30622 = C29992 * C30038;
    const double C30667 = C30162 * C30038;
    const double C30039 = C29993 * C30037;
    const double C30235 = C30037 * C30171;
    const double C30238 = C30162 * C30037;
    const double C30292 = C29992 * C30037;
    const double C30120 = C29993 * C30116;
    const double C30246 = C30116 * C30171;
    const double C30253 = C30162 * C30116;
    const double C30293 = C30116 * C30204;
    const double C30307 = ae * C30116;
    const double C30306 = C29992 * C30116;
    const double C30141 = C30136 * C30018;
    const double C30140 = C29993 * C30136;
    const double C30139 = C30136 * ae;
    const double C30561 = C30136 * C30171;
    const double C30625 = C30136 * C30204;
    const double C30670 = C30162 * C30136;
    const double C119 = C30372 * C30018 - (bs[1] * C29994) / C29991;
    const double C292 = C30162 * C29993 * C30372;
    const double C294 = C30372 * C30171 - (bs[1] * C29994) / C29991;
    const double C481 = C29992 * C29993 * C30372;
    const double C483 = C30372 * C30204 - (bs[1] * C29994) / C29991;
    const double C926 = C29992 * C30162 * C30372;
    const double C30799 = std::exp(C30798);
    const double C30827 = std::exp(C30826);
    const double C30845 = std::exp(C30844);
    const double C31013 = std::exp(C31012);
    const double C29955 = C29954 * C30775;
    const double C31098 = C30775 * C31062;
    const double C102 =
        (C30775 * std::pow(C31062, 2)) / C31063 + C30775 / C29953;
    const double C104 = C31065 * C30775;
    const double C13223 = C31064 * C30775;
    const double C149 = C31024 * C139;
    const double C147 = C31024 * C126;
    const double C4852 = C31024 * C306;
    const double C29973 = C29972 * C31024;
    const double C113 = -(2 * ae * be * (zA - zB) * C31024) / (ae + be);
    const double C31129 = C31024 * C31097;
    const double C9072 =
        (C31024 * std::pow(C31097, 2)) / C31063 + C31024 / C29953;
    const double C9074 = C31065 * C31024;
    const double C18763 = C31064 * C31024;
    const double C140 = (C30002 * C29998 * C30003 + ae * C29993 * C30005 +
                         C29993 * (ae * C30005 + C29993 * std::pow(C29995, 4) *
                                                     bs[4] * C30003)) /
                        std::pow(C29949, 2);
    const double C141 =
        (2 * (ae * C30005 + C29993 * C30011) +
         ae * (C30005 + C30012 * std::pow(C29993, 2)) +
         C29993 * (C30011 + ae * C29993 * C30012 +
                   C29993 * (ae * C30012 +
                             C29993 * std::pow(C29997, 5) * bs[5] * C30003))) /
        std::pow(C29949, 2);
    const double C322 =
        ((yP - yQ) * (ae * C30005 + C29993 * C30011)) / std::pow(C29949, 2);
    const double C511 = (ae * (C29993 * C30002 * C29998 * C30086 +
                               bs[2] * std::pow(C29995, 2) * ae) +
                         C29992 * (ae * C30005 + C29993 * C30011)) /
                        std::pow(C29949, 2);
    const double C128 =
        (std::pow(C29995, 2) * bs[2] * C30001 + C30005 * C30018) / C29949;
    const double C131 =
        (2 * C29993 * C30005 + C29993 * (C30005 + C30012 * C30018)) / C29949;
    const double C302 = (C30162 * (C30005 + C30012 * C30018)) / C29949;
    const double C304 = (C30162 * C29993 * C30005) / C29949;
    const double C307 = (C30370 * C30371 * C30001 + C30005 * C30171) / C29949;
    const double C493 =
        (C29992 * C29993 * C30005 + C29993 * C30372 * ae) / C29949;
    const double C496 =
        (C30370 * C30371 * C30001 + C29992 * (C29992 * C30005 + C30372 * ae) +
         C29992 * C30372 * ae) /
        C29949;
    const double C931 =
        (C29992 * C30162 * C30005 + C30162 * C30372 * ae) / C29949;
    const double C1159 =
        (2 * C30162 * C30005 + C30162 * (C30005 + C30012 * C30171)) / C29949;
    const double C30095 = C30087 * ae;
    const double C30377 = C29993 * C30087;
    const double C30464 = C30162 * C30087;
    const double C30501 = C29992 * C30087;
    const double C491 = (C29992 * (C30005 + C30012 * C30018) +
                         (C30372 + C30087 * C30018) * ae) /
                        C29949;
    const double C1302 = (C29992 * (C30005 + C30012 * C30171) +
                          (C30372 + C30087 * C30171) * ae) /
                         C29949;
    const double C120 =
        2 * C29993 * C30372 + C29993 * (C30372 + C30087 * C30018);
    const double C291 = C30162 * (C30372 + C30087 * C30018);
    const double C480 = C29992 * (C30372 + C30087 * C30018);
    const double C1150 =
        2 * C30162 * C30372 + C30162 * (C30372 + C30087 * C30171);
    const double C1287 = C29992 * (C30372 + C30087 * C30171);
    const double C2002 =
        2 * C29992 * C30372 + C29992 * (C30372 + C30087 * C30204);
    const double C513 = (C30002 * C29998 * C30003 + ae * C29992 * C30092 +
                         C29992 * (ae * C30092 + C29992 * C30011)) /
                        std::pow(C29949, 2);
    const double C941 =
        (ae * C30162 * C30092 + C29992 * C30162 * C30011) / std::pow(C29949, 2);
    const double C129 =
        (C30370 * C30371 * C30086 + C29993 * (C29993 * C30092 + C30372 * ae) +
         C29993 * C30372 * ae) /
        C29949;
    const double C303 = (C30162 * (C29993 * C30092 + C30372 * ae)) / C29949;
    const double C308 = (C30370 * C30371 * C30086 + C30092 * C30171) / C29949;
    const double C492 = (C29992 * (C29993 * C30092 + C30372 * ae)) / C29949;
    const double C497 = (C30370 * C30371 * C30086 + C30092 * C30204) / C29949;
    const double C932 = (C29992 * C30162 * C30092) / C29949;
    const double C1158 =
        (2 * C30162 * C30092 + C30162 * (C30092 + C30096 * C30171)) / C29949;
    const double C1301 = (C29992 * (C30092 + C30096 * C30171)) / C29949;
    const double C2010 =
        (2 * C29992 * C30092 + C29992 * (C30092 + C30096 * C30204)) / C29949;
    const double C4854 = C31024 * C323;
    const double C30024 = C30022 * C30018;
    const double C30029 = ae * C30022;
    const double C30028 = C29993 * C30022;
    const double C30539 = C30022 * C30171;
    const double C30542 = C30162 * C30022;
    const double C30608 = C29992 * C30022;
    const double C1160 =
        (3 * (C30005 + C30012 * C30171) +
         C30162 * (2 * C30162 * C30012 + C30162 * (C30012 + C30022 * C30171))) /
        C29949;
    const double C30023 = C29993 * C30021;
    const double C30203 = C29992 * C30021;
    const double C30226 = C30162 * C30021;
    const double C1168 = (2 * C30162 * C30011 +
                          C30162 * (C30011 + C30021 * std::pow(C30162, 2))) /
                         std::pow(C29949, 2);
    const double C1169 =
        (3 * (C30011 + C30021 * C30171) +
         C30162 * (2 * C30162 * C30021 + C30162 * (C30021 + C30037 * C30171))) /
        std::pow(C29949, 2);
    const double C1314 = (ae * (C30092 + C30096 * C30171) +
                          C29992 * (C30011 + C30021 * C30171)) /
                         std::pow(C29949, 2);
    const double C2020 = (2 * (ae * C30092 + C29992 * C30011) +
                          ae * (C30092 + C30096 * std::pow(C29992, 2)) +
                          C29992 * (C30011 + ae * C29992 * C30096 +
                                    C29992 * (ae * C30096 + C29992 * C30021))) /
                         std::pow(C29949, 2);
    const double C30105 = C29993 * C30102;
    const double C30184 = C30102 * C30171;
    const double C30206 = C30102 * C30204;
    const double C30227 = C30162 * C30102;
    const double C30291 = ae * C30102;
    const double C30290 = C29992 * C30102;
    const double C30119 = C30115 * C30018;
    const double C30118 = C29993 * C30115;
    const double C30117 = C30115 * ae;
    const double C30552 = C30115 * C30171;
    const double C30560 = C30162 * C30115;
    const double C30610 = C30115 * C30204;
    const double C30623 = C29992 * C30115;
    const double C30064 = C30062 * C30018;
    const double C30063 = C29993 * C30061;
    const double C30239 = C30061 * C30171;
    const double C30308 = C29992 * C30061;
    const double C30351 = C30162 * C30061;
    const double C30142 = C29993 * C30138;
    const double C30254 = C30138 * C30171;
    const double C30310 = C30138 * C30204;
    const double C30352 = C30162 * C30138;
    const double C309 = (C29993 * C30005 + C30014 * C30171) / C29949;
    const double C4858 = C31024 * C324;
    const double C1311 = (C30162 * C30011 + ae * C29992 * C30179 +
                          C29992 * (ae * C30179 + C29992 * C30162 * C30021)) /
                         std::pow(C29949, 2);
    const double C1295 = (C30162 * C30092 + C30179 * C30204) / C29949;
    const double C30106 = C30104 * ae;
    const double C30381 = 2 * C30104;
    const double C30461 = C30162 * C30104;
    const double C30508 = C29992 * C30104;
    const double C30379 = C30087 + C30378;
    const double C30473 = C30087 + C30472;
    const double C30504 = C30087 + C30502;
    const double C30551 = 2 * C30527;
    const double C30582 = C29992 * C30527;
    const double C30581 = C30527 * ae;
    const double C30614 = 2 * C30609;
    const double C30612 = C30609 * ae;
    const double C30042 = C30022 + C30040;
    const double C30058 = 2 * C30050;
    const double C30056 = ae * C30050;
    const double C30570 = C30050 * C30171;
    const double C30643 = C30162 * C30050;
    const double C30653 = C29992 * C30050;
    const double C30545 = C30022 + C30543;
    const double C30671 = C29992 * C30667;
    const double C30236 = C30021 + C30235;
    const double C30240 = 2 * C30238;
    const double C30270 = C29992 * C30238;
    const double C30247 = C30102 + C30246;
    const double C30255 = 2 * C30253;
    const double C30271 = C30253 * C30204;
    const double C30350 = ae * C30253;
    const double C30349 = C29992 * C30253;
    const double C30297 = C30102 + C30293;
    const double C30314 = 2 * C30306;
    const double C30312 = ae * C30306;
    const double C30144 = C30115 + C30141;
    const double C30143 = C30140 * ae;
    const double C30597 = C30140 * C30171;
    const double C30646 = C30162 * C30140;
    const double C30655 = C30140 * C30204;
    const double C30563 = C30115 + C30561;
    const double C30629 = C30115 + C30625;
    const double C30673 = C30670 * C30204;
    const double C30801 = C30799 * C30792;
    const double C30800 = C30799 / C30794;
    const double C30810 = C30807 * C30799;
    const double C31069 = C30799 * C30795;
    const double C31105 = C31073 * C30799;
    const double C31099 = C30799 * C31066;
    const double C30881 = C30827 / C30794;
    const double C30883 = C30827 * C30880;
    const double C30890 = C30807 * C30827;
    const double C31084 = C30827 * C30882;
    const double C31111 = C31073 * C30827;
    const double C31109 = C30827 * C31078;
    const double C30923 = C30845 / C30794;
    const double C30925 = C30845 * C30922;
    const double C30932 = C30807 * C30845;
    const double C31090 = C30845 * C30924;
    const double C31114 = C31073 * C30845;
    const double C31112 = C30845 * C31080;
    const double C31128 = C31013 * C31096;
    const double C4736 =
        (C31013 * std::pow(C31096, 2)) / C31063 + C31013 / C29953;
    const double C4738 = C31065 * C31013;
    const double C13225 = C31064 * C31013;
    const double C29956 = 2 * C29955;
    const double C103 = (-2 * C31064 * C31098) / C29949;
    const double C13222 = -C31098 / C29949;
    const double C29974 = 2 * C29973;
    const double C150 = C113 * C119;
    const double C148 = C113 * C127;
    const double C146 = C113 * C118;
    const double C338 = C113 * C292;
    const double C527 = C113 * C481;
    const double C4855 = C113 * C294;
    const double C4853 = C113 * C305;
    const double C4851 = C113 * C293;
    const double C5352 = C113 * C926;
    const double C9073 = (-2 * C31064 * C31129) / C29949;
    const double C18762 = -C31129 / C29949;
    const double C153 = C31024 * C140;
    const double C155 = C31024 * C141;
    const double C337 = C31024 * C322;
    const double C526 = C31024 * C511;
    const double C18774 = C18763 * C511;
    const double C151 = C31024 * C128;
    const double C157 = C31024 * C131;
    const double C335 = C31024 * C302;
    const double C339 = C31024 * C304;
    const double C4856 = C31024 * C307;
    const double C528 = C31024 * C493;
    const double C18770 = C18763 * C493;
    const double C5353 = C31024 * C931;
    const double C24604 = C18763 * C931;
    const double C4862 = C31024 * C1159;
    const double C30098 = C30097 + C30095;
    const double C30503 = C30500 + C30095;
    const double C2011 =
        (2 * (C29992 * C30005 + C30372 * ae) +
         C29992 * (C30005 + C29992 * (C29992 * C30012 + C30095) +
                   C29992 * C30087 * ae) +
         (C30372 + C30087 * C30204) * ae) /
        C29949;
    const double C498 =
        (C29993 * C30005 + C29992 * (C29992 * C30014 + C30377 * ae) +
         C29992 * C30377 * ae) /
        C29949;
    const double C933 =
        (C29992 * C30162 * C30014 + C30162 * C30377 * ae) / C29949;
    const double C295 = C29993 * C30372 + C30377 * C30171;
    const double C484 = C29993 * C30372 + C30377 * C30204;
    const double C927 = C29992 * C30162 * C30377;
    const double C1149 =
        2 * C30162 * C30377 + C30162 * (C30377 + C30104 * C30171);
    const double C1286 = C29992 * (C30377 + C30104 * C30171);
    const double C2001 =
        2 * C29992 * C30377 + C29992 * (C30377 + C30104 * C30204);
    const double C1296 =
        (C30162 * C30005 + C29992 * (C29992 * C30162 * C30012 + C30464 * ae) +
         C29992 * C30464 * ae) /
        C29949;
    const double C2405 =
        (2 * (C29992 * C30526 + C30464 * ae) +
         C29992 * (C30526 + C29992 * (C29992 * C30162 * C30022 + C30527 * ae) +
                   C29992 * C30527 * ae) +
         (C30464 + C30527 * C30204) * ae) /
        C29949;
    const double C1284 = C30162 * C30372 + C30464 * C30204;
    const double C2402 =
        2 * C29992 * C30464 + C29992 * (C30464 + C30527 * C30204);
    const double C524 = C31024 * C491;
    const double C18780 = C18763 * C491;
    const double C5349 = C31024 * C1302;
    const double C24614 = C18763 * C1302;
    const double C156 = C113 * C120;
    const double C334 = C113 * C291;
    const double C523 = C113 * C480;
    const double C4861 = C113 * C1150;
    const double C5348 = C113 * C1287;
    const double C5351 = C31024 * C941;
    const double C24608 = C18763 * C941;
    const double C152 = C113 * C129;
    const double C336 = C113 * C303;
    const double C4857 = C113 * C308;
    const double C525 = C113 * C492;
    const double C5350 = C113 * C932;
    const double C4859 = C113 * C1158;
    const double C5346 = C113 * C1301;
    const double C30026 = C30012 + C30024;
    const double C30041 = C30029 + C30039;
    const double C30034 = 2 * C30028;
    const double C30032 = ae * C30028;
    const double C30507 = C29992 * C30028;
    const double C30530 = C30162 * C30028;
    const double C1157 =
        (2 * C30162 * C30014 + C30162 * (C30014 + C30028 * C30171)) / C29949;
    const double C1162 =
        (3 * (C30014 + C30028 * C30171) +
         C30162 * (2 * C30162 * C30028 + C30162 * (C30028 + C30050 * C30171))) /
        C29949;
    const double C1300 = (C29992 * (C30014 + C30028 * C30171) +
                          (C30377 + C30104 * C30171) * ae) /
                         C29949;
    const double C30540 = C30012 + C30539;
    const double C30544 = 2 * C30542;
    const double C30580 = C29992 * C30542;
    const double C30611 = C30608 + C30103;
    const double C5552 = C31024 * C1160;
    const double C30025 = C30015 + C30023;
    const double C30205 = C30202 + C30203;
    const double C4860 = C31024 * C1168;
    const double C5554 = C31024 * C1169;
    const double C5347 = C31024 * C1314;
    const double C24610 = C18763 * C1314;
    const double C30107 = C30105 + C30103;
    const double C30185 = C30096 + C30184;
    const double C30207 = C30096 + C30206;
    const double C30245 = 2 * C30227;
    const double C30269 = ae * C30227;
    const double C30268 = C29992 * C30227;
    const double C2411 =
        (2 * (ae * C30179 + C29992 * C30226) + ae * (C30179 + C30227 * C30204) +
         C29992 * (C30226 + ae * C29992 * C30227 +
                   C29992 * (ae * C30227 + C29992 * C30162 * C30037))) /
        std::pow(C29949, 2);
    const double C2406 =
        (2 * C29992 * C30179 + C29992 * (C30179 + C30227 * C30204)) / C29949;
    const double C30295 = C30291 + C30292;
    const double C30296 = 2 * C30290;
    const double C30294 = ae * C30290;
    const double C30122 = C30101 + C30119;
    const double C30121 = C30118 * ae;
    const double C30137 = 2 * C30118;
    const double C30476 = C30118 * C30171;
    const double C30509 = C30118 * C30204;
    const double C30531 = C30162 * C30118;
    const double C30654 = C29992 * C30118;
    const double C30123 = C30120 + C30117;
    const double C30627 = C30622 + C30117;
    const double C30553 = C30101 + C30552;
    const double C30562 = 2 * C30560;
    const double C30583 = C30560 * C30204;
    const double C30669 = C29992 * C30560;
    const double C30668 = C30560 * ae;
    const double C30613 = C30101 + C30610;
    const double C30630 = 2 * C30623;
    const double C30628 = C30623 * ae;
    const double C30066 = C30038 + C30064;
    const double C30065 = C30051 + C30063;
    const double C30241 = C30037 + C30239;
    const double C30313 = C30307 + C30308;
    const double C30354 = C29992 * C30351;
    const double C30145 = C30142 + C30139;
    const double C30256 = C30116 + C30254;
    const double C30315 = C30116 + C30310;
    const double C30356 = C30352 * C30204;
    const double C341 = C31024 * C309;
    const double C5694 = C31024 * C1311;
    const double C25226 = C18763 * C1311;
    const double C5693 = C113 * C1295;
    const double C2009 =
        (2 * (C29992 * C30014 + C30377 * ae) +
         C29992 * (C30014 + C29992 * (C29992 * C30028 + C30106) +
                   C29992 * C30104 * ae) +
         (C30377 + C30104 * C30204) * ae) /
        C29949;
    const double C1294 =
        (C30162 * C30014 + C29992 * (C29992 * C30162 * C30028 + C30461 * ae) +
         C29992 * C30461 * ae) /
        C29949;
    const double C1283 = C30162 * C30377 + C30461 * C30204;
    const double C121 = 3 * (C30372 + C30087 * C30018) +
                        C29993 * (2 * C30377 + C29993 * C30379);
    const double C296 = C30372 + C30087 * C30018 + C30379 * C30171;
    const double C297 = C30162 * (2 * C30377 + C29993 * C30379);
    const double C485 = C30372 + C30087 * C30018 + C30379 * C30204;
    const double C486 = C29992 * (2 * C30377 + C29993 * C30379);
    const double C928 = C29992 * C30162 * C30379;
    const double C1303 =
        (C30005 + C30012 * C30171 +
         C29992 * (C29992 * (C30012 + C30022 * C30171) + C30473 * ae) +
         C29992 * C30473 * ae) /
        C29949;
    const double C1701 =
        (C29992 * (2 * C30162 * C30012 + C30162 * (C30012 + C30022 * C30171)) +
         (2 * C30464 + C30162 * C30473) * ae) /
        C29949;
    const double C1151 = 3 * (C30372 + C30087 * C30171) +
                         C30162 * (2 * C30464 + C30162 * C30473);
    const double C1288 = C30372 + C30087 * C30171 + C30473 * C30204;
    const double C1698 = C29992 * (2 * C30464 + C30162 * C30473);
    const double C2003 = 3 * (C30372 + C30087 * C30204) +
                         C29992 * (2 * C30501 + C29992 * C30504);
    const double C30044 = C29993 * C30042;
    const double C30054 = 3 * C30042;
    const double C30049 = ae * C30042;
    const double C30514 = C29992 * C30042;
    const double C30534 = C30162 * C30042;
    const double C30060 = C30037 + C30056;
    const double C30571 = C30028 + C30570;
    const double C30647 = C29992 * C30643;
    const double C30546 = C30162 * C30545;
    const double C30588 = C29992 * C30545;
    const double C5547 =
        (4 * (2 * C30226 + C30162 * C30236) +
         C30162 *
             (3 * C30236 + C30162 * (2 * C30162 * C30037 +
                                     C30162 * (C30037 + C30061 * C30171)))) /
        std::pow(C29949, 2);
    const double C30248 = C30162 * C30247;
    const double C30252 = 3 * C30247;
    const double C30276 = ae * C30247;
    const double C30275 = C29992 * C30247;
    const double C30273 = C30227 + C30271;
    const double C30355 = 2 * C30349;
    const double C30353 = ae * C30349;
    const double C30300 = C29992 * C30297;
    const double C30309 = 3 * C30297;
    const double C30305 = ae * C30297;
    const double C30316 = C30037 + C30312;
    const double C30147 = C29993 * C30144;
    const double C30146 = C30144 * ae;
    const double C30480 = C30144 * C30171;
    const double C30516 = C30144 * C30204;
    const double C30535 = C30162 * C30144;
    const double C30598 = C30118 + C30597;
    const double C30648 = C30646 * C30204;
    const double C30658 = C30118 + C30655;
    const double C30564 = C30162 * C30563;
    const double C30591 = C30563 * C30204;
    const double C30632 = C29992 * C30629;
    const double C30676 = C30560 + C30673;
    const double C30802 = C30801 * C30795;
    const double C30809 = C30801 / C30808;
    const double C31070 = C30807 * C30801;
    const double C31068 = C30801 / C30790;
    const double C288 = (C30799 * std::pow(C30795, 2)) / C30793 + C30800;
    const double C30811 = C30810 * C30795;
    const double C31074 = C30792 * C30810;
    const double C31072 = 2 * C30810;
    const double C31115 = C30810 / C31076;
    const double C112 = C30810 / C31108;
    const double C2883 = C30810 / C30794;
    const double C31101 = C31069 / C30790;
    const double C289 = (-2 * C30807 * C31069) / C30790;
    const double C31130 = C31099 / C30793;
    const double C1074 = (C30827 * std::pow(C30882, 2)) / C30793 + C30881;
    const double C30884 = C30883 * C30882;
    const double C30889 = C30883 / C30808;
    const double C31082 = C30883 / C30790;
    const double C31079 = C30807 * C30883;
    const double C30891 = C30890 * C30882;
    const double C31088 = C30880 * C30890;
    const double C31087 = 2 * C30890;
    const double C31121 = C30890 / C31076;
    const double C1146 = C30890 / C31108;
    const double C2880 = C30890 / C30794;
    const double C31117 = C31084 / C30790;
    const double C1075 = (-2 * C30807 * C31084) / C30790;
    const double C31135 = C31109 / C30793;
    const double C1820 = (C30845 * std::pow(C30924, 2)) / C30793 + C30923;
    const double C30926 = C30925 * C30924;
    const double C30931 = C30925 / C30808;
    const double C31083 = C30925 / C30790;
    const double C31081 = C30807 * C30925;
    const double C30933 = C30932 * C30924;
    const double C31094 = C30922 * C30932;
    const double C31093 = 2 * C30932;
    const double C31127 = C30932 / C31076;
    const double C1999 = C30932 / C31108;
    const double C3782 = C30932 / C30794;
    const double C31123 = C31090 / C30790;
    const double C1821 = (-2 * C30807 * C31090) / C30790;
    const double C31137 = C31112 / C30793;
    const double C4737 = (-2 * C31064 * C31128) / C29949;
    const double C13224 = -C31128 / C29949;
    const double C115 =
        ((-C29951 / C29949) / C29953 -
         ((C30775 - (C29950 * C29956) / C29949) * be) / C29949) /
            C29953 -
        ((C29950 * ((-C29956 / C29949) / C29953 - (0 * be) / C29949) + C13223) *
         be) /
            C29949;
    const double C116 =
        ((-C29956 / C29949) / C29953 - (0 * be) / C29949) / C29953 -
        (0 * be) / C29949;
    const double C4739 = -C29956 / C29949;
    const double C13226 = (-C29951 / C29949) / C29953 -
                          ((C30775 - (C29950 * C29956) / C29949) * be) / C29949;
    const double C13227 = (-C29956 / C29949) / C29953 - (0 * be) / C29949;
    const double C114 =
        ((-(0 * be) / C29949) / C29953 -
         ((0 - (C29950 * C29951) / C29949) * be) / C29949) /
            C29953 -
        ((C29950 * ((-C29951 / C29949) / C29953 -
                    ((C30775 - (C29950 * C29956) / C29949) * be) / C29949) +
          C13222) *
         be) /
            C29949 +
        (-C29956 / C29949) / C29953 - (0 * be) / C29949;
    const double C9076 =
        ((-C29971 / C29949) / C29953 -
         ((C31024 - (C29970 * C29974) / C29949) * be) / C29949) /
            C29953 -
        ((C29970 * ((-C29974 / C29949) / C29953 - (0 * be) / C29949) + C18763) *
         be) /
            C29949;
    const double C9077 =
        ((-C29974 / C29949) / C29953 - (0 * be) / C29949) / C29953 -
        (0 * be) / C29949;
    const double C18764 = (-C29971 / C29949) / C29953 -
                          ((C31024 - (C29970 * C29974) / C29949) * be) / C29949;
    const double C18765 = (-C29974 / C29949) / C29953 - (0 * be) / C29949;
    const double C167 = C148 + C149;
    const double C166 = C146 + C147;
    const double C4876 = C4853 + C4854;
    const double C4875 = C4851 + C4852;
    const double C18788 = C18762 * C141;
    const double C18784 = C18762 * C131;
    const double C18782 = C18762 * C128;
    const double C18778 = C18762 * C140;
    const double C18772 = C18762 * C139;
    const double C18768 = C18762 * C126;
    const double C18978 = C18762 * C302;
    const double C18970 = C18762 * C309;
    const double C18968 = C18762 * C304;
    const double C18964 = C18762 * C322;
    const double C19172 = C18762 * C491;
    const double C19162 = C18762 * C493;
    const double C19158 = C18762 * C511;
    const double C24616 = C18762 * C307;
    const double C24612 = C18762 * C324;
    const double C24606 = C18762 * C323;
    const double C24602 = C18762 * C306;
    const double C25232 = C18762 * C931;
    const double C25228 = C18762 * C941;
    const double C25480 = C18762 * C1160;
    const double C25476 = C18762 * C1169;
    const double C25470 = C18762 * C1168;
    const double C25466 = C18762 * C1159;
    const double C25648 = C18762 * C1314;
    const double C25644 = C18762 * C1302;
    const double C25640 = C18762 * C1311;
    const double C9075 =
        ((-(0 * be) / C29949) / C29953 -
         ((0 - (C29970 * C29971) / C29949) * be) / C29949) /
            C29953 -
        ((C29970 * ((-C29971 / C29949) / C29953 -
                    ((C31024 - (C29970 * C29974) / C29949) * be) / C29949) +
          C18762) *
         be) /
            C29949 +
        (-C29974 / C29949) / C29953 - (0 * be) / C29949;
    const double C168 = C150 + C151;
    const double C359 = C338 + C339;
    const double C4877 = C4855 + C4856;
    const double C548 = C527 + C528;
    const double C5365 = C5352 + C5353;
    const double C130 =
        (2 * (C29993 * C30092 + C30372 * ae) +
         C29993 * (C30092 + C29993 * C30098 + C29993 * C30087 * ae) +
         (C30372 + C30087 * C30018) * ae) /
        C29949;
    const double C301 =
        (C30162 * (C30092 + C29993 * C30098 + C30377 * ae)) / C29949;
    const double C310 =
        (C29993 * C30092 + C30372 * ae + C30098 * C30171) / C29949;
    const double C490 =
        (C29992 * (C30092 + C29993 * C30098 + C30377 * ae)) / C29949;
    const double C499 =
        (C29993 * C30092 + C30372 * ae + C30098 * C30204) / C29949;
    const double C934 = (C29992 * C30162 * C30098) / C29949;
    const double C2012 =
        (3 * (C30005 + C29992 * C30503 + C30501 * ae) +
         C29992 * (2 * C30503 +
                   C29992 * (C30012 + C29992 * (C29992 * C30022 + C30103) +
                             C29992 * C30101 * ae) +
                   C30504 * ae) +
         (2 * C30501 + C29992 * C30504) * ae) /
        C29949;
    const double C530 = C31024 * C498;
    const double C19164 = C18762 * C498;
    const double C19160 = C18763 * C498;
    const double C948 = C31024 * C933;
    const double C18966 = C18763 * C933;
    const double C19682 = C18762 * C933;
    const double C340 = C113 * C295;
    const double C529 = C113 * C484;
    const double C947 = C113 * C927;
    const double C1433 = C113 * C1149;
    const double C1595 = C113 * C1286;
    const double C2299 = C113 * C2001;
    const double C5692 = C31024 * C1296;
    const double C25230 = C18763 * C1296;
    const double C25636 = C18762 * C1296;
    const double C6770 = C31024 * C2405;
    const double C25638 = C18763 * C2405;
    const double C26972 = C18762 * C2405;
    const double C5691 = C113 * C1284;
    const double C6769 = C113 * C2402;
    const double C171 = C156 + C157;
    const double C357 = C334 + C335;
    const double C546 = C523 + C524;
    const double C4880 = C4861 + C4862;
    const double C5363 = C5348 + C5349;
    const double C169 = C152 + C153;
    const double C358 = C336 + C337;
    const double C4878 = C4857 + C4858;
    const double C547 = C525 + C526;
    const double C5364 = C5350 + C5351;
    const double C132 = (3 * (C30005 + C30012 * C30018) +
                         C29993 * (2 * C30014 + C29993 * C30026)) /
                        C29949;
    const double C311 = (C30005 + C30012 * C30018 + C30026 * C30171) / C29949;
    const double C313 = (C30162 * (2 * C30014 + C29993 * C30026)) / C29949;
    const double C500 =
        (C30005 + C30012 * C30018 + C29992 * (C29992 * C30026 + C30379 * ae) +
         C29992 * C30379 * ae) /
        C29949;
    const double C502 = (C29992 * (2 * C30014 + C29993 * C30026) +
                         (2 * C30377 + C29993 * C30379) * ae) /
                        C29949;
    const double C935 =
        (C29992 * C30162 * C30026 + C30162 * C30379 * ae) / C29949;
    const double C1155 =
        (2 * C30162 * C30026 + C30162 * (C30026 + C30042 * C30171)) / C29949;
    const double C30043 = C29993 * C30041;
    const double C30048 = 2 * C30041;
    const double C30211 = C29992 * C30041;
    const double C30229 = C30162 * C30041;
    const double C30036 = C30021 + C30032;
    const double C30510 = C30507 + C30106;
    const double C1434 = C31024 * C1157;
    const double C20216 = C18762 * C1157;
    const double C5830 = C31024 * C1162;
    const double C1596 = C31024 * C1300;
    const double C18972 = C18763 * C1300;
    const double C20422 = C18762 * C1300;
    const double C5544 =
        (4 * (2 * C30526 + C30162 * C30540) +
         C30162 *
             (3 * C30540 + C30162 * (2 * C30162 * C30022 +
                                     C30162 * (C30022 + C30038 * C30171)))) /
        C29949;
    const double C30584 = C30580 + C30581;
    const double C30615 = C29992 * C30611;
    const double C30621 = 2 * C30611;
    const double C142 =
        (3 * (C30011 + ae * C30014 + C29993 * C30025) +
         ae * (2 * C30014 + C29993 * C30026) +
         C29993 *
             (2 * C30025 + ae * C30026 +
              C29993 * (C30021 + ae * C29993 * C30022 +
                        C29993 * (ae * C30022 + C29993 * std::pow(C29995, 6) *
                                                    bs[6] * C30003)))) /
        std::pow(C29949, 2);
    const double C321 = ((yP - yQ) * (C30011 + ae * C30014 + C29993 * C30025)) /
                        std::pow(C29949, 2);
    const double C325 =
        (ae * C30005 + C29993 * C30011 + C30025 * std::pow(yP - yQ, 2)) /
        std::pow(C29949, 2);
    const double C510 =
        (ae * (C30002 * C29998 * C30086 +
               C29993 * (C29993 * C30007 * C30008 * C30086 + C30087 * ae) +
               C29993 * C30087 * ae) +
         C29992 * (C30011 + ae * C30014 + C29993 * C30025)) /
        std::pow(C29949, 2);
    const double C514 = (ae * C30005 + C29993 * C30011 + ae * C29992 * C30098 +
                         C29992 * (ae * C30098 + C29992 * C30025)) /
                        std::pow(C29949, 2);
    const double C942 =
        (ae * C30162 * C30098 + C29992 * C30162 * C30025) / std::pow(C29949, 2);
    const double C1167 = (2 * C30162 * C30025 +
                          C30162 * (C30025 + C30041 * std::pow(C30162, 2))) /
                         std::pow(C29949, 2);
    const double C4879 = C4859 + C4860;
    const double C5362 = C5346 + C5347;
    const double C30108 = C29993 * C30107;
    const double C30113 = 2 * C30107;
    const double C30177 = C30162 * C30107;
    const double C30210 = ae * C30107;
    const double C30209 = C29992 * C30107;
    const double C1313 = (ae * (C30098 + C30107 * C30171) +
                          C29992 * (C30025 + C30041 * C30171)) /
                         std::pow(C29949, 2);
    const double C2019 = (2 * (ae * C30098 + C29992 * C30025) +
                          ae * (C30098 + C30107 * std::pow(C29992, 2)) +
                          C29992 * (C30025 + ae * C29992 * C30107 +
                                    C29992 * (ae * C30107 + C29992 * C30041))) /
                         std::pow(C29949, 2);
    const double C1156 =
        (2 * C30162 * C30098 + C30162 * (C30098 + C30107 * C30171)) / C29949;
    const double C1299 = (C29992 * (C30098 + C30107 * C30171)) / C29949;
    const double C2008 =
        (2 * C29992 * C30098 + C29992 * (C30098 + C30107 * C30204)) / C29949;
    const double C1315 =
        (C30011 + C30021 * C30171 + ae * C29992 * C30185 +
         C29992 * (ae * C30185 + C29992 * (C30021 + C30037 * C30171))) /
        std::pow(C29949, 2);
    const double C1707 =
        (ae * (2 * C30179 + C30162 * C30185) +
         C29992 * (2 * C30162 * C30021 + C30162 * (C30021 + C30037 * C30171))) /
        std::pow(C29949, 2);
    const double C1161 = (3 * (C30092 + C30096 * C30171) +
                          C30162 * (2 * C30179 + C30162 * C30185)) /
                         C29949;
    const double C1304 = (C30092 + C30096 * C30171 + C30185 * C30204) / C29949;
    const double C1702 = (C29992 * (2 * C30179 + C30162 * C30185)) / C29949;
    const double C6389 =
        (2 * C29992 * C30185 + C29992 * (C30185 + C30247 * C30204)) / C29949;
    const double C2021 =
        (3 * (C30011 + ae * C30201 + C29992 * C30205) +
         ae * (2 * C30201 + C29992 * C30207) +
         C29992 * (2 * C30205 + ae * C30207 +
                   C29992 * (C30021 + ae * C29992 * C30102 +
                             C29992 * (ae * C30102 + C29992 * C30037)))) /
        std::pow(C29949, 2);
    const double C2013 = (3 * (C30092 + C30096 * C30204) +
                          C29992 * (2 * C30201 + C29992 * C30207)) /
                         C29949;
    const double C30272 = C30269 + C30270;
    const double C6768 = C31024 * C2411;
    const double C25642 = C18763 * C2411;
    const double C26968 = C18762 * C2411;
    const double C6767 = C113 * C2406;
    const double C30299 = C29992 * C30295;
    const double C30304 = 2 * C30295;
    const double C30298 = C30021 + C30294;
    const double C30124 = C30122 * ae;
    const double C30382 = C29993 * C30122;
    const double C30387 = 3 * C30122;
    const double C30458 = C30162 * C30122;
    const double C30515 = C29992 * C30122;
    const double C1298 = (C29992 * (C30026 + C30042 * C30171) +
                          (C30379 + C30122 * C30171) * ae) /
                         C29949;
    const double C1148 =
        2 * C30162 * C30379 + C30162 * (C30379 + C30122 * C30171);
    const double C1285 = C29992 * (C30379 + C30122 * C30171);
    const double C2000 =
        2 * C29992 * C30379 + C29992 * (C30379 + C30122 * C30204);
    const double C30656 = C30653 + C30121;
    const double C30477 = C30104 + C30476;
    const double C30511 = C30104 + C30509;
    const double C30596 = 2 * C30531;
    const double C30645 = C29992 * C30531;
    const double C30644 = C30531 * ae;
    const double C2407 =
        (2 * (C29992 * C30530 + C30461 * ae) +
         C29992 * (C30530 + C29992 * (C29992 * C30162 * C30050 + C30531 * ae) +
                   C29992 * C30531 * ae) +
         (C30461 + C30531 * C30204) * ae) /
        C29949;
    const double C2403 =
        2 * C29992 * C30461 + C29992 * (C30461 + C30531 * C30204);
    const double C30659 = 2 * C30654;
    const double C30657 = C30654 * ae;
    const double C30125 = C29993 * C30123;
    const double C30134 = 2 * C30123;
    const double C30187 = C30123 * C30171;
    const double C30212 = C30123 * C30204;
    const double C30230 = C30162 * C30123;
    const double C30336 = ae * C30123;
    const double C30335 = C29992 * C30123;
    const double C30631 = C29992 * C30627;
    const double C30554 = C30162 * C30553;
    const double C30559 = 3 * C30553;
    const double C30590 = C29992 * C30553;
    const double C30589 = C30553 * ae;
    const double C6390 =
        (2 * (C29992 * C30540 + C30473 * ae) +
         C29992 * (C30540 + C29992 * (C29992 * C30545 + C30553 * ae) +
                   C29992 * C30553 * ae) +
         (C30473 + C30553 * C30204) * ae) /
        C29949;
    const double C6386 =
        2 * C29992 * C30473 + C29992 * (C30473 + C30553 * C30204);
    const double C30585 = C30527 + C30583;
    const double C30674 = 2 * C30669;
    const double C30672 = C30669 * ae;
    const double C30675 = C30671 + C30668;
    const double C30616 = C29992 * C30613;
    const double C30626 = 3 * C30613;
    const double C30624 = C30613 * ae;
    const double C30068 = C29993 * C30066;
    const double C1164 =
        (3 * (C30026 + C30042 * C30171) +
         C30162 * (2 * C30162 * C30042 + C30162 * (C30042 + C30066 * C30171))) /
        C29949;
    const double C30067 = C29993 * C30065;
    const double C30262 = C30065 * C30171;
    const double C30328 = C30162 * C30065;
    const double C30337 = C29992 * C30065;
    const double C1170 =
        (3 * (C30025 + C30041 * C30171) +
         C30162 * (2 * C30162 * C30041 + C30162 * (C30041 + C30065 * C30171))) /
        std::pow(C29949, 2);
    const double C30242 = C30162 * C30241;
    const double C30277 = C29992 * C30241;
    const double C6395 =
        (2 * (ae * C30185 + C29992 * C30236) + ae * (C30185 + C30247 * C30204) +
         C29992 * (C30236 + ae * C29992 * C30247 +
                   C29992 * (ae * C30247 + C29992 * C30241))) /
        std::pow(C29949, 2);
    const double C30317 = C29992 * C30313;
    const double C30358 = C30350 + C30354;
    const double C30148 = C29993 * C30145;
    const double C30283 = C30145 * C30171;
    const double C30329 = C30162 * C30145;
    const double C30338 = C30145 * C30204;
    const double C30257 = C30162 * C30256;
    const double C30278 = C30256 * C30204;
    const double C30318 = C29992 * C30315;
    const double C30359 = C30253 + C30356;
    const double C5708 = C5693 + C5694;
    const double C2300 = C31024 * C2009;
    const double C19166 = C18763 * C2009;
    const double C21274 = C18762 * C2009;
    const double C2182 = C31024 * C1294;
    const double C19684 = C18763 * C1294;
    const double C21132 = C18762 * C1294;
    const double C2181 = C113 * C1283;
    const double C158 = C113 * C121;
    const double C344 = C113 * C296;
    const double C348 = C113 * C297;
    const double C533 = C113 * C485;
    const double C537 = C113 * C486;
    const double C951 = C113 * C928;
    const double C5696 = C31024 * C1303;
    const double C25658 = C18762 * C1303;
    const double C25646 = C18763 * C1303;
    const double C5700 = C31024 * C1701;
    const double C25468 = C18763 * C1701;
    const double C26132 = C18762 * C1701;
    const double C5551 = C113 * C1151;
    const double C5695 = C113 * C1288;
    const double C5699 = C113 * C1698;
    const double C30046 = C30034 + C30044;
    const double C5822 =
        (4 * (2 * C30530 + C30162 * C30571) +
         C30162 * (3 * C30571 +
                   C30162 * (2 * C30162 * C30050 +
                             C30162 * (C30050 + C29993 * C30062 * C30171)))) /
        C29949;
    const double C30547 = C30544 + C30546;
    const double C5556 = C31024 * C5547;
    const double C30249 = C30245 + C30248;
    const double C6392 = (3 * (C30179 + C30227 * C30204) +
                          C29992 * (2 * C30268 + C29992 * C30273)) /
                         C29949;
    const double C30357 = C30238 + C30353;
    const double C30302 = C30296 + C30300;
    const double C30149 = C30137 + C30147;
    const double C30481 = C30122 + C30480;
    const double C30518 = C30122 + C30516;
    const double C30599 = C30162 * C30598;
    const double C30650 = C30531 + C30648;
    const double C30661 = C29992 * C30658;
    const double C30565 = C30562 + C30564;
    const double C30593 = C30553 + C30591;
    const double C30634 = C30630 + C30632;
    const double C30678 = C29992 * C30676;
    const double C30803 = C30802 / C30793;
    const double C31102 = 2 * C31070;
    const double C30812 = C30811 / C30790;
    const double C31106 = C31074 / C30808;
    const double C31131 = C31068 - C31101;
    const double C2620 = -C31101;
    const double C31145 = C31130 + C30800;
    const double C30885 = C30884 / C30793;
    const double C31110 = 2 * C31079;
    const double C30892 = C30891 / C30790;
    const double C31120 = C31088 / C30808;
    const double C31139 = C31082 - C31117;
    const double C2512 = -C31117;
    const double C31148 = C31135 + C30881;
    const double C30927 = C30926 / C30793;
    const double C31113 = 2 * C31081;
    const double C30934 = C30933 / C30790;
    const double C31126 = C31094 / C30808;
    const double C31142 = C31083 - C31123;
    const double C3274 = -C31123;
    const double C31149 = C31137 + C30923;
    const double C18797 = C18764 * C121;
    const double C18783 = C18764 * C120;
    const double C18781 = C18764 * C119;
    const double C18777 = C18764 * C129;
    const double C18771 = C18764 * C127;
    const double C18767 = C18764 * C118;
    const double C18991 = C18764 * C296;
    const double C18977 = C18764 * C291;
    const double C18969 = C18764 * C295;
    const double C18967 = C18764 * C292;
    const double C18963 = C18764 * C303;
    const double C19185 = C18764 * C485;
    const double C19171 = C18764 * C480;
    const double C19163 = C18764 * C484;
    const double C19161 = C18764 * C481;
    const double C19157 = C18764 * C492;
    const double C19339 = C18764 * C297;
    const double C19481 = C18764 * C486;
    const double C19695 = C18764 * C928;
    const double C19681 = C18764 * C927;
    const double C20215 = C18764 * C1149;
    const double C20421 = C18764 * C1286;
    const double C21131 = C18764 * C1283;
    const double C21273 = C18764 * C2001;
    const double C24615 = C18764 * C294;
    const double C24611 = C18764 * C308;
    const double C24605 = C18764 * C305;
    const double C24601 = C18764 * C293;
    const double C25231 = C18764 * C926;
    const double C25227 = C18764 * C932;
    const double C25479 = C18764 * C1151;
    const double C25469 = C18764 * C1158;
    const double C25465 = C18764 * C1150;
    const double C25657 = C18764 * C1288;
    const double C25647 = C18764 * C1301;
    const double C25643 = C18764 * C1287;
    const double C25639 = C18764 * C1295;
    const double C25635 = C18764 * C1284;
    const double C26131 = C18764 * C1698;
    const double C26971 = C18764 * C2402;
    const double C26967 = C18764 * C2406;
    const double C18785 = C18765 * C486;
    const double C18779 = C18765 * C480;
    const double C18773 = C18765 * C492;
    const double C18769 = C18765 * C481;
    const double C18979 = C18765 * C928;
    const double C18971 = C18765 * C1286;
    const double C18965 = C18765 * C927;
    const double C19173 = C18765 * C485;
    const double C19165 = C18765 * C2001;
    const double C19159 = C18765 * C484;
    const double C19683 = C18765 * C1283;
    const double C24613 = C18765 * C1287;
    const double C24609 = C18765 * C1301;
    const double C24607 = C18765 * C932;
    const double C24603 = C18765 * C926;
    const double C25229 = C18765 * C1284;
    const double C25225 = C18765 * C1295;
    const double C25467 = C18765 * C1698;
    const double C25645 = C18765 * C1288;
    const double C25641 = C18765 * C2406;
    const double C25637 = C18765 * C2402;
    const double C4884 = C4876 * C30775;
    const double C13376 = C4876 * C13222;
    const double C4883 = C4875 * C4739;
    const double C13375 = C4875 * C13226;
    const double C4863 = C359 * C4739;
    const double C13383 = C359 * C13226;
    const double C13377 = C359 * C13227;
    const double C4885 = C4877 * C4739;
    const double C13382 = C4877 * C13226;
    const double C5369 = C5365 * C4739;
    const double C14006 = C5365 * C13226;
    const double C154 = C113 * C130;
    const double C18787 = C18764 * C130;
    const double C332 = C113 * C301;
    const double C18981 = C18764 * C301;
    const double C342 = C113 * C310;
    const double C18973 = C18764 * C310;
    const double C521 = C113 * C490;
    const double C18775 = C18765 * C490;
    const double C19175 = C18764 * C490;
    const double C531 = C113 * C499;
    const double C19167 = C18764 * C499;
    const double C19155 = C18765 * C499;
    const double C949 = C113 * C934;
    const double C18961 = C18765 * C934;
    const double C19685 = C18764 * C934;
    const double C360 = C340 + C341;
    const double C549 = C529 + C530;
    const double C959 = C947 + C948;
    const double C5707 = C5691 + C5692;
    const double C6774 = C6769 + C6770;
    const double C4869 = C357 * C4739;
    const double C13391 = C357 * C13226;
    const double C13385 = C357 * C13227;
    const double C4888 = C4880 * C4739;
    const double C14243 = C4880 * C13226;
    const double C5367 = C5363 * C4739;
    const double C14401 = C5363 * C13226;
    const double C4864 = C358 * C30775;
    const double C13384 = C358 * C13222;
    const double C13378 = C358 * C13223;
    const double C4886 = C4878 * C30775;
    const double C13381 = C4878 * C13222;
    const double C5368 = C5364 * C30775;
    const double C14005 = C5364 * C13222;
    const double C159 = C31024 * C132;
    const double C18798 = C18762 * C132;
    const double C345 = C31024 * C311;
    const double C18992 = C18762 * C311;
    const double C349 = C31024 * C313;
    const double C19340 = C18762 * C313;
    const double C534 = C31024 * C500;
    const double C19186 = C18762 * C500;
    const double C19174 = C18763 * C500;
    const double C538 = C31024 * C502;
    const double C18786 = C18763 * C502;
    const double C19482 = C18762 * C502;
    const double C952 = C31024 * C935;
    const double C18980 = C18763 * C935;
    const double C19696 = C18762 * C935;
    const double C1430 = C31024 * C1155;
    const double C30055 = C30048 + C30049;
    const double C30045 = C30036 + C30043;
    const double C1438 = C1433 + C1434;
    const double C1600 = C1595 + C1596;
    const double C5558 = C31024 * C5544;
    const double C30617 = C30012 + C30615;
    const double C161 = C31024 * C142;
    const double C18794 = C18762 * C142;
    const double C333 = C31024 * C321;
    const double C18982 = C18762 * C321;
    const double C343 = C31024 * C325;
    const double C18974 = C18762 * C325;
    const double C522 = C31024 * C510;
    const double C18776 = C18763 * C510;
    const double C19176 = C18762 * C510;
    const double C532 = C31024 * C514;
    const double C19168 = C18762 * C514;
    const double C19156 = C18763 * C514;
    const double C950 = C31024 * C942;
    const double C18962 = C18763 * C942;
    const double C19686 = C18762 * C942;
    const double C1432 = C31024 * C1167;
    const double C20212 = C18762 * C1167;
    const double C4887 = C4879 * C30775;
    const double C14244 = C4879 * C13222;
    const double C5366 = C5362 * C30775;
    const double C14402 = C5362 * C13222;
    const double C30109 = C30096 + C30108;
    const double C1310 = (C30162 * C30025 + ae * C29992 * C30177 +
                          C29992 * (ae * C30177 + C29992 * C30162 * C30041)) /
                         std::pow(C29949, 2);
    const double C1293 = (C30162 * C30098 + C30177 * C30204) / C29949;
    const double C30213 = C30210 + C30211;
    const double C1594 = C31024 * C1313;
    const double C18976 = C18763 * C1313;
    const double C20418 = C18762 * C1313;
    const double C2298 = C31024 * C2019;
    const double C19170 = C18763 * C2019;
    const double C21270 = C18762 * C2019;
    const double C1431 = C113 * C1156;
    const double C20211 = C18764 * C1156;
    const double C1593 = C113 * C1299;
    const double C18975 = C18765 * C1299;
    const double C20417 = C18764 * C1299;
    const double C2297 = C113 * C2008;
    const double C19169 = C18765 * C2008;
    const double C21269 = C18764 * C2008;
    const double C5698 = C31024 * C1315;
    const double C25654 = C18762 * C1315;
    const double C25650 = C18763 * C1315;
    const double C5702 = C31024 * C1707;
    const double C25472 = C18763 * C1707;
    const double C26128 = C18762 * C1707;
    const double C5553 = C113 * C1161;
    const double C25475 = C18764 * C1161;
    const double C5697 = C113 * C1304;
    const double C25653 = C18764 * C1304;
    const double C25649 = C18765 * C1304;
    const double C5701 = C113 * C1702;
    const double C25471 = C18765 * C1702;
    const double C26127 = C18764 * C1702;
    const double C6763 = C113 * C6389;
    const double C25651 = C18765 * C6389;
    const double C6396 =
        (3 * (C30226 + ae * C30268 + C29992 * C30272) +
         ae * (2 * C30268 + C29992 * C30273) +
         C29992 *
             (2 * C30272 + ae * C30273 +
              C29992 * (C30238 + ae * C29992 * C30253 +
                        C29992 * (ae * C30253 + C29992 * C30162 * C30061)))) /
        std::pow(C29949, 2);
    const double C6773 = C6767 + C6768;
    const double C30311 = C30304 + C30305;
    const double C30301 = C30298 + C30299;
    const double C30517 = C30514 + C30124;
    const double C2007 =
        (2 * (C29992 * C30026 + C30379 * ae) +
         C29992 * (C30026 + C29992 * (C29992 * C30042 + C30124) +
                   C29992 * C30122 * ae) +
         (C30379 + C30122 * C30204) * ae) /
        C29949;
    const double C30383 = C30381 + C30382;
    const double C1292 =
        (C30162 * C30026 + C29992 * (C29992 * C30162 * C30042 + C30458 * ae) +
         C29992 * C30458 * ae) /
        C29949;
    const double C2409 =
        (2 * (C29992 * C30534 + C30458 * ae) +
         C29992 * (C30534 + C29992 * (C29992 * C30162 * C30066 + C30535 * ae) +
                   C29992 * C30535 * ae) +
         (C30458 + C30535 * C30204) * ae) /
        C29949;
    const double C1282 = C30162 * C30379 + C30458 * C30204;
    const double C2404 =
        2 * C29992 * C30458 + C29992 * (C30458 + C30535 * C30204);
    const double C1592 = C31024 * C1298;
    const double C18990 = C18763 * C1298;
    const double C1429 = C113 * C1148;
    const double C1591 = C113 * C1285;
    const double C18989 = C18765 * C1285;
    const double C2295 = C113 * C2000;
    const double C19183 = C18765 * C2000;
    const double C30660 = C29992 * C30656;
    const double C1305 =
        (C30014 + C30028 * C30171 +
         C29992 * (C29992 * (C30028 + C30050 * C30171) + C30477 * ae) +
         C29992 * C30477 * ae) /
        C29949;
    const double C1703 =
        (C29992 * (2 * C30162 * C30028 + C30162 * (C30028 + C30050 * C30171)) +
         (2 * C30461 + C30162 * C30477) * ae) /
        C29949;
    const double C5981 =
        (C29992 * (3 * C30571 +
                   C30162 * (2 * C30162 * C30050 +
                             C30162 * (C30050 + C29993 * C30062 * C30171))) +
         (3 * C30477 +
          C30162 * (2 * C30531 + C30162 * (C30118 + C30140 * C30171))) *
             ae) /
        C29949;
    const double C6657 =
        (2 * (C29992 * C30571 + C30477 * ae) +
         C29992 * (C30571 +
                   C29992 * (C29992 * (C30050 + C29993 * C30062 * C30171) +
                             C30598 * ae) +
                   C29992 * C30598 * ae) +
         (C30477 + C30598 * C30204) * ae) /
        C29949;
    const double C1152 = 3 * (C30377 + C30104 * C30171) +
                         C30162 * (2 * C30461 + C30162 * C30477);
    const double C1289 = C30377 + C30104 * C30171 + C30477 * C30204;
    const double C1699 = C29992 * (2 * C30461 + C30162 * C30477);
    const double C6656 =
        2 * C29992 * C30477 + C29992 * (C30477 + C30598 * C30204);
    const double C2014 =
        (3 * (C30014 + C29992 * C30510 + C30508 * ae) +
         C29992 * (2 * C30510 +
                   C29992 * (C30028 + C29992 * (C29992 * C30050 + C30121) +
                             C29992 * C30118 * ae) +
                   C30511 * ae) +
         (2 * C30508 + C29992 * C30511) * ae) /
        C29949;
    const double C2004 = 3 * (C30377 + C30104 * C30204) +
                         C29992 * (2 * C30508 + C29992 * C30511);
    const double C30649 = C30647 + C30644;
    const double C15580 = C31024 * C2407;
    const double C21130 = C18763 * C2407;
    const double C15579 = C113 * C2403;
    const double C21129 = C18765 * C2403;
    const double C30126 = C30102 + C30125;
    const double C30188 = C30107 + C30187;
    const double C30214 = C30107 + C30212;
    const double C30282 = 2 * C30230;
    const double C30327 = ae * C30230;
    const double C30326 = C29992 * C30230;
    const double C2412 =
        (2 * (ae * C30177 + C29992 * C30229) + ae * (C30177 + C30230 * C30204) +
         C29992 * (C30229 + ae * C29992 * C30230 +
                   C29992 * (ae * C30230 + C29992 * C30162 * C30065))) /
        std::pow(C29949, 2);
    const double C2408 =
        (2 * C29992 * C30177 + C29992 * (C30177 + C30230 * C30204)) / C29949;
    const double C30341 = 2 * C30335;
    const double C30339 = ae * C30335;
    const double C30633 = C30022 + C30631;
    const double C30555 = C30551 + C30554;
    const double C30592 = C30588 + C30589;
    const double C6766 = C31024 * C6390;
    const double C25656 = C18763 * C6390;
    const double C6765 = C113 * C6386;
    const double C25655 = C18765 * C6386;
    const double C6391 =
        (3 * (C30526 + C29992 * C30584 + C30582 * ae) +
         C29992 * (2 * C30584 +
                   C29992 * (C30542 +
                             C29992 * (C29992 * C30162 * C30038 + C30560 * ae) +
                             C29992 * C30560 * ae) +
                   C30585 * ae) +
         (2 * C30582 + C29992 * C30585) * ae) /
        C29949;
    const double C6387 = 3 * (C30464 + C30527 * C30204) +
                         C29992 * (2 * C30582 + C29992 * C30585);
    const double C30677 = C29992 * C30675;
    const double C30618 = C30614 + C30616;
    const double C30070 = C30058 + C30068;
    const double C30069 = C30060 + C30067;
    const double C30263 = C30041 + C30262;
    const double C30330 = C29992 * C30328;
    const double C30340 = C30336 + C30337;
    const double C5828 = C31024 * C1170;
    const double C30243 = C30240 + C30242;
    const double C30279 = C30276 + C30277;
    const double C6764 = C31024 * C6395;
    const double C25652 = C18763 * C6395;
    const double C30319 = C30316 + C30317;
    const double C30360 = C29992 * C30358;
    const double C30150 = C30116 + C30148;
    const double C30284 = C30123 + C30283;
    const double C30331 = C30329 * C30204;
    const double C30342 = C30123 + C30338;
    const double C30258 = C30255 + C30257;
    const double C30280 = C30247 + C30278;
    const double C30320 = C30314 + C30318;
    const double C30361 = C29992 * C30359;
    const double C5716 = C5708 * C30775;
    const double C14398 = C5708 * C13222;
    const double C2304 = C2299 + C2300;
    const double C2186 = C2181 + C2182;
    const double C5559 = C5551 + C5552;
    const double C5709 = C5695 + C5696;
    const double C5711 = C5699 + C5700;
    const double C135 = (4 * (2 * C30014 + C29993 * C30026) +
                         C29993 * (3 * C30026 + C29993 * C30046)) /
                        C29949;
    const double C316 =
        (2 * C30014 + C29993 * C30026 + C30046 * C30171) / C29949;
    const double C318 = (C30162 * (3 * C30026 + C29993 * C30046)) / C29949;
    const double C5545 =
        (5 * (3 * C30540 + C30162 * C30547) +
         C30162 * (4 * C30547 +
                   C30162 * (3 * C30545 +
                             C30162 * (2 * C30162 * C30038 +
                                       C30162 * (C30038 + C30062 * C30171))))) /
        C29949;
    const double C5543 = (4 * (2 * C30179 + C30162 * C30185) +
                          C30162 * (3 * C30185 + C30162 * C30249)) /
                         C29949;
    const double C5680 =
        (2 * C30179 + C30162 * C30185 + C30249 * C30204) / C29949;
    const double C5682 = (C29992 * (3 * C30185 + C30162 * C30249)) / C29949;
    const double C26965 = C18765 * C6392;
    const double C10548 = (4 * (2 * C30201 + C29992 * C30207) +
                           C29992 * (3 * C30207 + C29992 * C30302)) /
                          C29949;
    const double C30151 = C30149 * ae;
    const double C30388 = C29993 * C30149;
    const double C30521 = C30162 * C30149;
    const double C1307 =
        (C30026 + C30042 * C30171 +
         C29992 * (C29992 * (C30042 + C30066 * C30171) + C30481 * ae) +
         C29992 * C30481 * ae) /
        C29949;
    const double C1705 =
        (C29992 * (2 * C30162 * C30042 + C30162 * (C30042 + C30066 * C30171)) +
         (2 * C30458 + C30162 * C30481) * ae) /
        C29949;
    const double C1153 = 3 * (C30379 + C30122 * C30171) +
                         C30162 * (2 * C30458 + C30162 * C30481);
    const double C1290 = C30379 + C30122 * C30171 + C30481 * C30204;
    const double C1700 = C29992 * (2 * C30458 + C30162 * C30481);
    const double C2005 = 3 * (C30379 + C30122 * C30204) +
                         C29992 * (2 * C30515 + C29992 * C30518);
    const double C30600 = C30596 + C30599;
    const double C10700 = 3 * (C30461 + C30531 * C30204) +
                          C29992 * (2 * C30645 + C29992 * C30650);
    const double C30663 = C30659 + C30661;
    const double C30566 = C30162 * C30565;
    const double C6388 = 3 * (C30473 + C30553 * C30204) +
                         C29992 * (2 * C30590 + C29992 * C30593);
    const double C30636 = C29992 * C30634;
    const double C30680 = C30674 + C30678;
    const double C30804 = C30800 - C30803;
    const double C31132 = C31102 / C30790;
    const double C30813 = C30809 - C30812;
    const double C31146 = C31131 / C30794;
    const double C30886 = C30881 - C30885;
    const double C31136 = C31110 / C30790;
    const double C30893 = C30889 - C30892;
    const double C31150 = C31139 / C30794;
    const double C30928 = C30923 - C30927;
    const double C31138 = C31113 / C30790;
    const double C30935 = C30931 - C30934;
    const double C31152 = C31142 / C30794;
    const double C18807 = C18783 + C18784;
    const double C18806 = C18781 + C18782;
    const double C18804 = C18777 + C18778;
    const double C18801 = C18771 + C18772;
    const double C18799 = C18767 + C18768;
    const double C19001 = C18977 + C18978;
    const double C18997 = C18969 + C18970;
    const double C18996 = C18967 + C18968;
    const double C18994 = C18963 + C18964;
    const double C19195 = C19171 + C19172;
    const double C19191 = C19163 + C19164;
    const double C19190 = C19161 + C19162;
    const double C19188 = C19157 + C19158;
    const double C19697 = C19681 + C19682;
    const double C20220 = C20215 + C20216;
    const double C20426 = C20421 + C20422;
    const double C21136 = C21131 + C21132;
    const double C21278 = C21273 + C21274;
    const double C24624 = C24615 + C24616;
    const double C24622 = C24611 + C24612;
    const double C24619 = C24605 + C24606;
    const double C24617 = C24601 + C24602;
    const double C25236 = C25231 + C25232;
    const double C25234 = C25227 + C25228;
    const double C25488 = C25479 + C25480;
    const double C25483 = C25469 + C25470;
    const double C25481 = C25465 + C25466;
    const double C25670 = C25657 + C25658;
    const double C25665 = C25647 + C25648;
    const double C25663 = C25643 + C25644;
    const double C25661 = C25639 + C25640;
    const double C25659 = C25635 + C25636;
    const double C26136 = C26131 + C26132;
    const double C26976 = C26971 + C26972;
    const double C26974 = C26967 + C26968;
    const double C18805 = C18779 + C18780;
    const double C18802 = C18773 + C18774;
    const double C18800 = C18769 + C18770;
    const double C18998 = C18971 + C18972;
    const double C18995 = C18965 + C18966;
    const double C19192 = C19165 + C19166;
    const double C19189 = C19159 + C19160;
    const double C19698 = C19683 + C19684;
    const double C24623 = C24613 + C24614;
    const double C24621 = C24609 + C24610;
    const double C24620 = C24607 + C24608;
    const double C24618 = C24603 + C24604;
    const double C25235 = C25229 + C25230;
    const double C25233 = C25225 + C25226;
    const double C25482 = C25467 + C25468;
    const double C25664 = C25645 + C25646;
    const double C25662 = C25641 + C25642;
    const double C25660 = C25637 + C25638;
    const double C170 = C154 + C155;
    const double C18809 = C18787 + C18788;
    const double C4865 = C360 * C4739;
    const double C13387 = C360 * C13226;
    const double C13380 = C360 * C13227;
    const double C5354 = C959 * C4739;
    const double C14007 = C959 * C13226;
    const double C14004 = C959 * C13227;
    const double C5715 = C5707 * C4739;
    const double C14397 = C5707 * C13226;
    const double C6778 = C6774 * C4739;
    const double C15716 = C6774 * C13226;
    const double C4889 = C4885 + C4886;
    const double C172 = C158 + C159;
    const double C18814 = C18797 + C18798;
    const double C362 = C344 + C345;
    const double C19008 = C18991 + C18992;
    const double C364 = C348 + C349;
    const double C19344 = C19339 + C19340;
    const double C551 = C533 + C534;
    const double C19202 = C19185 + C19186;
    const double C19196 = C19173 + C19174;
    const double C553 = C537 + C538;
    const double C18808 = C18785 + C18786;
    const double C19486 = C19481 + C19482;
    const double C961 = C951 + C952;
    const double C19002 = C18979 + C18980;
    const double C19704 = C19695 + C19696;
    const double C143 =
        (4 * (2 * C30025 + ae * C30026 + C29993 * C30045) +
         ae * (3 * C30026 + C29993 * C30046) +
         C29993 * (3 * C30045 + ae * C30046 +
                   C29993 * (2 * C30041 + ae * C30042 +
                             C29993 * (C30037 + ae * C29993 * C30038 +
                                       C29993 * (ae * C30038 +
                                                 C29993 * std::pow(C29997, 7) *
                                                     bs[7] * C30003))))) /
        std::pow(C29949, 2);
    const double C326 = (C30011 + ae * C30014 + C29993 * C30025 +
                         C30045 * std::pow(yP - yQ, 2)) /
                        std::pow(C29949, 2);
    const double C327 =
        ((yP - yQ) * (2 * C30025 + ae * C30026 + C29993 * C30045)) /
        std::pow(C29949, 2);
    const double C4867 = C1438 * C4739;
    const double C14245 = C1438 * C13227;
    const double C14542 = C1438 * C13226;
    const double C5356 = C1600 * C4739;
    const double C14403 = C1600 * C13227;
    const double C14740 = C1600 * C13226;
    const double C30619 = C30617 + C30612;
    const double C356 = C332 + C333;
    const double C19003 = C18981 + C18982;
    const double C361 = C342 + C343;
    const double C18999 = C18973 + C18974;
    const double C545 = C521 + C522;
    const double C18803 = C18775 + C18776;
    const double C19197 = C19175 + C19176;
    const double C550 = C531 + C532;
    const double C19193 = C19167 + C19168;
    const double C19187 = C19155 + C19156;
    const double C960 = C949 + C950;
    const double C18993 = C18961 + C18962;
    const double C19699 = C19685 + C19686;
    const double C5550 = C4887 + C4888;
    const double C5690 = C5366 + C5367;
    const double C30110 = C30109 + C30106;
    const double C2180 = C31024 * C1310;
    const double C19688 = C18763 * C1310;
    const double C21128 = C18762 * C1310;
    const double C2179 = C113 * C1293;
    const double C19687 = C18765 * C1293;
    const double C21127 = C18764 * C1293;
    const double C1437 = C1431 + C1432;
    const double C20218 = C20211 + C20212;
    const double C1599 = C1593 + C1594;
    const double C19000 = C18975 + C18976;
    const double C20424 = C20417 + C20418;
    const double C2303 = C2297 + C2298;
    const double C19194 = C19169 + C19170;
    const double C21276 = C21269 + C21270;
    const double C5560 = C5553 + C5554;
    const double C25486 = C25475 + C25476;
    const double C5710 = C5697 + C5698;
    const double C25668 = C25653 + C25654;
    const double C25666 = C25649 + C25650;
    const double C5712 = C5701 + C5702;
    const double C25484 = C25471 + C25472;
    const double C26134 = C26127 + C26128;
    const double C26966 = C18763 * C6396;
    const double C6777 = C6773 * C30775;
    const double C15715 = C6773 * C13222;
    const double C10552 =
        (4 * (2 * C30205 + ae * C30207 + C29992 * C30301) +
         ae * (3 * C30207 + C29992 * C30302) +
         C29992 *
             (3 * C30301 + ae * C30302 +
              C29992 * (2 * C30295 + ae * C30297 +
                        C29992 * (C30037 + ae * C29992 * C30116 +
                                  C29992 * (ae * C30116 + C29992 * C30061))))) /
        std::pow(C29949, 2);
    const double C2016 =
        (3 * (C30026 + C29992 * C30517 + C30515 * ae) +
         C29992 * (2 * C30517 +
                   C29992 * (C30042 + C29992 * (C29992 * C30066 + C30146) +
                             C29992 * C30144 * ae) +
                   C30518 * ae) +
         (2 * C30515 + C29992 * C30518) * ae) /
        C29949;
    const double C2296 = C31024 * C2007;
    const double C19184 = C18763 * C2007;
    const double C505 =
        (2 * C30014 + C29993 * C30026 +
         C29992 * (C29992 * C30046 + C30383 * ae) + C29992 * C30383 * ae) /
        C29949;
    const double C507 = (C29992 * (3 * C30026 + C29993 * C30046) +
                         (3 * C30379 + C29993 * C30383) * ae) /
                        C29949;
    const double C938 =
        (C29992 * C30162 * C30046 + C30162 * C30383 * ae) / C29949;
    const double C122 = 4 * (2 * C30377 + C29993 * C30379) +
                        C29993 * (3 * C30379 + C29993 * C30383);
    const double C298 = 2 * C30377 + C29993 * C30379 + C30383 * C30171;
    const double C299 = C30162 * (3 * C30379 + C29993 * C30383);
    const double C487 = 2 * C30377 + C29993 * C30379 + C30383 * C30204;
    const double C488 = C29992 * (3 * C30379 + C29993 * C30383);
    const double C929 = C29992 * C30162 * C30383;
    const double C1422 =
        2 * C30162 * C30383 + C30162 * (C30383 + C30149 * C30171);
    const double C1584 = C29992 * (C30383 + C30149 * C30171);
    const double C2288 =
        2 * C29992 * C30383 + C29992 * (C30383 + C30149 * C30204);
    const double C2178 = C31024 * C1292;
    const double C19694 = C18763 * C1292;
    const double C2177 = C113 * C1282;
    const double C19693 = C18765 * C1282;
    const double C1436 = C1429 + C1430;
    const double C1598 = C1591 + C1592;
    const double C19007 = C18989 + C18990;
    const double C30662 = C30028 + C30660;
    const double C6552 = C31024 * C1305;
    const double C20420 = C18763 * C1305;
    const double C5989 = C31024 * C1703;
    const double C20214 = C18763 * C1703;
    const double C5829 = C113 * C1152;
    const double C6551 = C113 * C1289;
    const double C20419 = C18765 * C1289;
    const double C5988 = C113 * C1699;
    const double C20213 = C18765 * C1699;
    const double C21272 = C18763 * C2014;
    const double C21271 = C18765 * C2004;
    const double C10701 =
        (3 * (C30530 + C29992 * C30649 + C30645 * ae) +
         C29992 * (2 * C30649 +
                   C29992 * (C30643 +
                             C29992 * (C29992 * C30162 * C29993 * C30062 +
                                       C30646 * ae) +
                             C29992 * C30646 * ae) +
                   C30650 * ae) +
         (2 * C30645 + C29992 * C30650) * ae) /
        C29949;
    const double C15582 = C15579 + C15580;
    const double C21135 = C21129 + C21130;
    const double C30127 = C30126 + C30121;
    const double C1316 =
        (C30025 + C30041 * C30171 + ae * C29992 * C30188 +
         C29992 * (ae * C30188 + C29992 * (C30041 + C30065 * C30171))) /
        std::pow(C29949, 2);
    const double C1708 =
        (ae * (2 * C30177 + C30162 * C30188) +
         C29992 * (2 * C30162 * C30041 + C30162 * (C30041 + C30065 * C30171))) /
        std::pow(C29949, 2);
    const double C1163 = (3 * (C30098 + C30107 * C30171) +
                          C30162 * (2 * C30177 + C30162 * C30188)) /
                         C29949;
    const double C1306 = (C30098 + C30107 * C30171 + C30188 * C30204) / C29949;
    const double C1704 = (C29992 * (2 * C30177 + C30162 * C30188)) / C29949;
    const double C2022 =
        (3 * (C30025 + ae * C30209 + C29992 * C30213) +
         ae * (2 * C30209 + C29992 * C30214) +
         C29992 * (2 * C30213 + ae * C30214 +
                   C29992 * (C30041 + ae * C29992 * C30123 +
                             C29992 * (ae * C30123 + C29992 * C30065)))) /
        std::pow(C29949, 2);
    const double C2015 = (3 * (C30098 + C30107 * C30204) +
                          C29992 * (2 * C30209 + C29992 * C30214)) /
                         C29949;
    const double C15578 = C31024 * C2412;
    const double C21126 = C18763 * C2412;
    const double C15577 = C113 * C2408;
    const double C21125 = C18765 * C2408;
    const double C30343 = C30041 + C30339;
    const double C30635 = C30633 + C30628;
    const double C5681 =
        (2 * C30526 + C30162 * C30540 +
         C29992 * (C29992 * C30547 + C30555 * ae) + C29992 * C30555 * ae) /
        C29949;
    const double C5683 = (C29992 * (3 * C30540 + C30162 * C30547) +
                          (3 * C30473 + C30162 * C30555) * ae) /
                         C29949;
    const double C6759 =
        (2 * (C29992 * C30547 + C30555 * ae) +
         C29992 * (C30547 +
                   C29992 * (C29992 * (2 * C30162 * C30038 +
                                       C30162 * (C30038 + C30062 * C30171)) +
                             C30565 * ae) +
                   C29992 * C30565 * ae) +
         (C30555 + C30565 * C30204) * ae) /
        C29949;
    const double C5541 = 4 * (2 * C30464 + C30162 * C30473) +
                         C30162 * (3 * C30473 + C30162 * C30555);
    const double C5677 = 2 * C30464 + C30162 * C30473 + C30555 * C30204;
    const double C5678 = C29992 * (3 * C30473 + C30162 * C30555);
    const double C6758 =
        2 * C29992 * C30555 + C29992 * (C30555 + C30565 * C30204);
    const double C6393 =
        (3 * (C30540 + C29992 * C30592 + C30590 * ae) +
         C29992 * (2 * C30592 +
                   C29992 * (C30545 +
                             C29992 * (C29992 * (C30038 + C30062 * C30171) +
                                       C30563 * ae) +
                             C29992 * C30563 * ae) +
                   C30593 * ae) +
         (2 * C30590 + C29992 * C30593) * ae) /
        C29949;
    const double C6772 = C6765 + C6766;
    const double C25669 = C25655 + C25656;
    const double C26970 = C18763 * C6391;
    const double C26969 = C18765 * C6387;
    const double C30679 = C30542 + C30677;
    const double C10546 = 4 * (2 * C30501 + C29992 * C30504) +
                          C29992 * (3 * C30504 + C29992 * C30618);
    const double C30072 = C29993 * C30070;
    const double C1423 =
        (2 * C30162 * C30046 + C30162 * (C30046 + C30070 * C30171)) / C29949;
    const double C1585 = (C29992 * (C30046 + C30070 * C30171) +
                          (C30383 + C30149 * C30171) * ae) /
                         C29949;
    const double C30071 = C29993 * C30069;
    const double C30218 = C29992 * C30069;
    const double C30232 = C30162 * C30069;
    const double C1166 = (2 * C30162 * C30045 +
                          C30162 * (C30045 + C30069 * std::pow(C30162, 2))) /
                         std::pow(C29949, 2);
    const double C1171 =
        (3 * (C30045 + C30069 * C30171) +
         C30162 * (2 * C30162 * C30069 +
                   C30162 * (C30069 + (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)) *
                                          C30171))) /
        std::pow(C29949, 2);
    const double C5824 =
        (4 * (2 * C30229 + C30162 * C30263) +
         C30162 * (3 * C30263 +
                   C30162 * (2 * C30162 * C30065 +
                             C30162 * (C30065 + (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003) *
                                                    C30171)))) /
        std::pow(C29949, 2);
    const double C5983 =
        (ae * (3 * C30188 +
               C30162 * (2 * C30230 + C30162 * (C30123 + C30145 * C30171))) +
         C29992 * (3 * C30263 +
                   C30162 * (2 * C30162 * C30065 +
                             C30162 * (C30065 + (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003) *
                                                    C30171)))) /
        std::pow(C29949, 2);
    const double C30332 = C30327 + C30330;
    const double C30344 = C29992 * C30340;
    const double C5548 =
        (5 * (3 * C30236 + C30162 * C30243) +
         C30162 * (4 * C30243 +
                   C30162 * (3 * C30241 +
                             C30162 * (2 * C30162 * C30061 +
                                       C30162 * (C30061 + std::pow(C29995, 8) *
                                                              bs[8] * C30003 *
                                                              C30171))))) /
        std::pow(C29949, 2);
    const double C5686 = (2 * C30226 + C30162 * C30236 + ae * C29992 * C30249 +
                          C29992 * (ae * C30249 + C29992 * C30243)) /
                         std::pow(C29949, 2);
    const double C5687 = (ae * (3 * C30185 + C30162 * C30249) +
                          C29992 * (3 * C30236 + C30162 * C30243)) /
                         std::pow(C29949, 2);
    const double C6771 = C6763 + C6764;
    const double C25667 = C25651 + C25652;
    const double C30321 = C29992 * C30319;
    const double C30362 = C30357 + C30360;
    const double C30152 = C30150 + C30143;
    const double C30285 = C30162 * C30284;
    const double C6659 =
        (2 * (ae * C30188 + C29992 * C30263) + ae * (C30188 + C30284 * C30204) +
         C29992 * (C30263 + ae * C29992 * C30284 +
                   C29992 * (ae * C30284 +
                             C29992 * (C30065 + (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003) *
                                                    C30171)))) /
        std::pow(C29949, 2);
    const double C6658 =
        (2 * C29992 * C30188 + C29992 * (C30188 + C30284 * C30204)) / C29949;
    const double C30333 = C30230 + C30331;
    const double C30345 = C29992 * C30342;
    const double C30259 = C30162 * C30258;
    const double C6761 =
        (2 * (ae * C30249 + C29992 * C30243) + ae * (C30249 + C30258 * C30204) +
         C29992 * (C30243 + ae * C29992 * C30258 +
                   C29992 * (ae * C30258 +
                             C29992 * (2 * C30162 * C30061 +
                                       C30162 * (C30061 + std::pow(C29995, 8) *
                                                              bs[8] * C30003 *
                                                              C30171))))) /
        std::pow(C29949, 2);
    const double C6760 =
        (2 * C29992 * C30249 + C29992 * (C30249 + C30258 * C30204)) / C29949;
    const double C6397 =
        (3 * (C30236 + ae * C30275 + C29992 * C30279) +
         ae * (2 * C30275 + C29992 * C30280) +
         C29992 * (2 * C30279 + ae * C30280 +
                   C29992 * (C30241 + ae * C29992 * C30256 +
                             C29992 * (ae * C30256 +
                                       C29992 * (C30061 + std::pow(C29995, 8) *
                                                              bs[8] * C30003 *
                                                              C30171))))) /
        std::pow(C29949, 2);
    const double C6394 = (3 * (C30185 + C30247 * C30204) +
                          C29992 * (2 * C30275 + C29992 * C30280)) /
                         C29949;
    const double C30322 = C29992 * C30320;
    const double C30363 = C30355 + C30361;
    const double C6554 = C2186 * C4739;
    const double C14399 = C2186 * C13227;
    const double C15446 = C2186 * C13226;
    const double C5563 = C5559 * C4739;
    const double C14250 = C5559 * C13226;
    const double C5717 = C5709 * C4739;
    const double C14408 = C5709 * C13226;
    const double C5719 = C5711 * C4739;
    const double C14874 = C5711 * C13226;
    const double C165 = C31024 * C135;
    const double C355 = C31024 * C316;
    const double C668 = C31024 * C318;
    const double C5555 = C113 * C5543;
    const double C5703 = C113 * C5680;
    const double C26125 = C18765 * C5680;
    const double C6097 = C113 * C5682;
    const double C25473 = C18765 * C5682;
    const double C2289 =
        (2 * (C29992 * C30046 + C30383 * ae) +
         C29992 * (C30046 + C29992 * (C29992 * C30070 + C30151) +
                   C29992 * C30149 * ae) +
         (C30383 + C30149 * C30204) * ae) /
        C29949;
    const double C30389 = C30387 + C30388;
    const double C2171 =
        (C30162 * C30046 + C29992 * (C29992 * C30162 * C30070 + C30521 * ae) +
         C29992 * C30521 * ae) /
        C29949;
    const double C2170 = C30162 * C30383 + C30521 * C30204;
    const double C6545 =
        (2 * C30530 + C30162 * C30571 +
         C29992 * (C29992 * (2 * C30162 * C30050 +
                             C30162 * (C30050 + C29993 * C30062 * C30171)) +
                   C30600 * ae) +
         C29992 * C30600 * ae) /
        C29949;
    const double C5821 = 4 * (2 * C30461 + C30162 * C30477) +
                         C30162 * (3 * C30477 + C30162 * C30600);
    const double C5980 = C29992 * (3 * C30477 + C30162 * C30600);
    const double C6544 = 2 * C30461 + C30162 * C30477 + C30600 * C30204;
    const double C10802 = 4 * (2 * C30508 + C29992 * C30511) +
                          C29992 * (3 * C30511 + C29992 * C30663);
    const double C30567 = C30559 + C30566;
    const double C30638 = C30626 + C30636;
    const double C10904 = 4 * (2 * C30582 + C29992 * C30585) +
                          C29992 * (3 * C30585 + C29992 * C30680);
    const double C31067 = C30804 * C30792;
    const double C31104 = C31072 + C30804;
    const double C31075 = C30813 / C30794;
    const double C31071 = C30813 * C30792;
    const double C656 = C31146 - (C30804 * C30795) / C30790;
    const double C31085 = C30886 * C30880;
    const double C31119 = C31087 + C30886;
    const double C31089 = C30893 / C30794;
    const double C31086 = C30893 * C30880;
    const double C1416 = C31150 - (C30886 * C30882) / C30790;
    const double C31091 = C30928 * C30922;
    const double C31125 = C31093 + C30928;
    const double C31095 = C30935 / C30794;
    const double C31092 = C30935 * C30922;
    const double C2284 = C31152 - (C30928 * C30924) / C30790;
    const double C4871 = C362 * C4739;
    const double C13398 = C362 * C13226;
    const double C13389 = C362 * C13227;
    const double C5098 = C364 * C4739;
    const double C13393 = C364 * C13227;
    const double C13675 = C364 * C13226;
    const double C5361 = C961 * C4739;
    const double C14014 = C961 * C13226;
    const double C14009 = C961 * C13227;
    const double C163 = C31024 * C143;
    const double C347 = C31024 * C326;
    const double C18988 = C18762 * C326;
    const double C351 = C31024 * C327;
    const double C19336 = C18762 * C327;
    const double C10549 =
        (4 * (2 * C30503 + C29992 * C30619 + C30504 * ae) +
         C29992 *
             (3 * C30619 +
              C29992 * (2 * C30611 +
                        C29992 * (C30022 + C29992 * (C29992 * C30038 + C30117) +
                                  C29992 * C30115 * ae) +
                        C30613 * ae) +
              C30618 * ae) +
         (3 * C30504 + C29992 * C30618) * ae) /
        C29949;
    const double C4870 = C356 * C30775;
    const double C13392 = C356 * C13222;
    const double C13386 = C356 * C13223;
    const double C4866 = C361 * C30775;
    const double C13388 = C361 * C13222;
    const double C13379 = C361 * C13223;
    const double C5355 = C960 * C30775;
    const double C14008 = C960 * C13222;
    const double C14003 = C960 * C13223;
    const double C515 =
        (C30011 + ae * C30014 + C29993 * C30025 + ae * C29992 * C30110 +
         C29992 * (ae * C30110 + C29992 * C30045)) /
        std::pow(C29949, 2);
    const double C516 =
        (ae * (2 * C30098 + C29993 * C30110 + (C30087 + C30101 * C30018) * ae) +
         C29992 * (2 * C30025 + ae * C30026 + C29993 * C30045)) /
        std::pow(C29949, 2);
    const double C943 =
        (ae * C30162 * C30110 + C29992 * C30162 * C30045) / std::pow(C29949, 2);
    const double C133 = (3 * (C30092 + C29993 * C30098 + C30377 * ae) +
                         C29993 * (2 * C30098 + C29993 * C30110 + C30379 * ae) +
                         (2 * C30377 + C29993 * C30379) * ae) /
                        C29949;
    const double C312 =
        (C30092 + C29993 * C30098 + C30377 * ae + C30110 * C30171) / C29949;
    const double C314 =
        (C30162 * (2 * C30098 + C29993 * C30110 + C30379 * ae)) / C29949;
    const double C501 =
        (C30092 + C29993 * C30098 + C30377 * ae + C30110 * C30204) / C29949;
    const double C503 =
        (C29992 * (2 * C30098 + C29993 * C30110 + C30379 * ae)) / C29949;
    const double C936 = (C29992 * C30162 * C30110) / C29949;
    const double C2185 = C2179 + C2180;
    const double C19700 = C19687 + C19688;
    const double C21134 = C21127 + C21128;
    const double C4868 = C1437 * C30775;
    const double C14246 = C1437 * C13223;
    const double C14541 = C1437 * C13222;
    const double C5357 = C1599 * C30775;
    const double C14404 = C1599 * C13223;
    const double C14739 = C1599 * C13222;
    const double C5564 = C5560 * C30775;
    const double C14249 = C5560 * C13222;
    const double C5718 = C5710 * C30775;
    const double C14407 = C5710 * C13222;
    const double C5720 = C5712 * C30775;
    const double C14873 = C5712 * C13222;
    const double C26973 = C26965 + C26966;
    const double C2302 = C2295 + C2296;
    const double C19201 = C19183 + C19184;
    const double C544 = C31024 * C505;
    const double C19480 = C18763 * C505;
    const double C778 = C31024 * C507;
    const double C18796 = C18763 * C507;
    const double C958 = C31024 * C938;
    const double C19338 = C18763 * C938;
    const double C164 = C113 * C122;
    const double C354 = C113 * C298;
    const double C667 = C113 * C299;
    const double C543 = C113 * C487;
    const double C19479 = C18765 * C487;
    const double C777 = C113 * C488;
    const double C18795 = C18765 * C488;
    const double C957 = C113 * C929;
    const double C19337 = C18765 * C929;
    const double C2184 = C2177 + C2178;
    const double C19703 = C19693 + C19694;
    const double C4874 = C1436 * C4739;
    const double C14540 = C1436 * C13227;
    const double C5359 = C1598 * C4739;
    const double C14738 = C1598 * C13227;
    const double C30664 = C30662 + C30657;
    const double C5832 = C5829 + C5830;
    const double C6556 = C6551 + C6552;
    const double C20425 = C20419 + C20420;
    const double C5991 = C5988 + C5989;
    const double C20219 = C20213 + C20214;
    const double C21277 = C21271 + C21272;
    const double C15714 = C15582 * C13227;
    const double C30128 = C29993 * C30127;
    const double C30133 = 3 * C30127;
    const double C30175 = C30162 * C30127;
    const double C30217 = ae * C30127;
    const double C30216 = C29992 * C30127;
    const double C1312 = (ae * (C30110 + C30127 * C30171) +
                          C29992 * (C30045 + C30069 * C30171)) /
                         std::pow(C29949, 2);
    const double C2018 = (2 * (ae * C30110 + C29992 * C30045) +
                          ae * (C30110 + C30127 * std::pow(C29992, 2)) +
                          C29992 * (C30045 + ae * C29992 * C30127 +
                                    C29992 * (ae * C30127 + C29992 * C30069))) /
                         std::pow(C29949, 2);
    const double C1154 =
        (2 * C30162 * C30110 + C30162 * (C30110 + C30127 * C30171)) / C29949;
    const double C1297 = (C29992 * (C30110 + C30127 * C30171)) / C29949;
    const double C2006 =
        (2 * C29992 * C30110 + C29992 * (C30110 + C30127 * C30204)) / C29949;
    const double C6550 = C31024 * C1316;
    const double C20416 = C18763 * C1316;
    const double C5987 = C31024 * C1708;
    const double C20210 = C18763 * C1708;
    const double C5827 = C113 * C1163;
    const double C6549 = C113 * C1306;
    const double C20415 = C18765 * C1306;
    const double C5986 = C113 * C1704;
    const double C20209 = C18765 * C1704;
    const double C21268 = C18763 * C2022;
    const double C21267 = C18765 * C2015;
    const double C15581 = C15577 + C15578;
    const double C21133 = C21125 + C21126;
    const double C30637 = C29992 * C30635;
    const double C5706 = C31024 * C5681;
    const double C26130 = C18763 * C5681;
    const double C6100 = C31024 * C5683;
    const double C25478 = C18763 * C5683;
    const double C5557 = C113 * C5541;
    const double C5705 = C113 * C5677;
    const double C26129 = C18765 * C5677;
    const double C6099 = C113 * C5678;
    const double C25477 = C18765 * C5678;
    const double C6776 = C6772 * C4739;
    const double C26975 = C26969 + C26970;
    const double C30681 = C30679 + C30672;
    const double C30074 = C30054 + C30072;
    const double C30073 = C30055 + C30071;
    const double C1428 = C31024 * C1166;
    const double C30346 = C30343 + C30344;
    const double C5704 = C31024 * C5686;
    const double C26126 = C18763 * C5686;
    const double C6098 = C31024 * C5687;
    const double C25474 = C18763 * C5687;
    const double C6775 = C6771 * C30775;
    const double C30323 = C30311 + C30321;
    const double C30153 = C29993 * C30152;
    const double C30190 = C30152 * C30171;
    const double C30219 = C30152 * C30204;
    const double C30233 = C30162 * C30152;
    const double C30286 = C30282 + C30285;
    const double C10703 =
        (3 * (C30229 + ae * C30326 + C29992 * C30332) +
         ae * (2 * C30326 + C29992 * C30333) +
         C29992 * (2 * C30332 + ae * C30333 +
                   C29992 * (C30328 + ae * C29992 * C30329 +
                             C29992 * (ae * C30329 +
                                       C29992 * C30162 *
                                           (ae * C30062 +
                                            C29993 * std::pow(C29995, 8) *
                                                bs[8] * C30003))))) /
        std::pow(C29949, 2);
    const double C10702 = (3 * (C30177 + C30230 * C30204) +
                           C29992 * (2 * C30326 + C29992 * C30333)) /
                          C29949;
    const double C30347 = C30341 + C30345;
    const double C30260 = C30252 + C30259;
    const double C30324 = C30309 + C30322;
    const double C10907 =
        (4 * (2 * C30272 + ae * C30273 + C29992 * C30362) +
         ae * (3 * C30273 + C29992 * C30363) +
         C29992 * (3 * C30362 + ae * C30363 +
                   C29992 * (2 * C30358 + ae * C30359 +
                             C29992 * (C30351 + ae * C29992 * C30352 +
                                       C29992 * (ae * C30352 +
                                                 C29992 * C30162 *
                                                     std::pow(C29995, 8) *
                                                     bs[8] * C30003))))) /
        std::pow(C29949, 2);
    const double C10906 = (4 * (2 * C30268 + C29992 * C30273) +
                           C29992 * (3 * C30273 + C29992 * C30363)) /
                          C29949;
    const double C5561 = C5555 + C5556;
    const double C123 = 5 * (3 * C30379 + C29993 * C30383) +
                        C29993 * (4 * C30383 + C29993 * C30389);
    const double C300 = 3 * C30379 + C29993 * C30383 + C30389 * C30171;
    const double C489 = 3 * C30379 + C29993 * C30383 + C30389 * C30204;
    const double C660 = C30162 * (4 * C30383 + C29993 * C30389);
    const double C770 = C29992 * (4 * C30383 + C29993 * C30389);
    const double C930 = C29992 * C30162 * C30389;
    const double C5684 =
        (3 * C30540 + C30162 * C30547 +
         C29992 * (C29992 * (3 * C30545 +
                             C30162 * (2 * C30162 * C30038 +
                                       C30162 * (C30038 + C30062 * C30171))) +
                   C30567 * ae) +
         C29992 * C30567 * ae) /
        C29949;
    const double C6092 =
        (C29992 * (4 * C30547 +
                   C30162 * (3 * C30545 +
                             C30162 * (2 * C30162 * C30038 +
                                       C30162 * (C30038 + C30062 * C30171)))) +
         (4 * C30555 + C30162 * C30567) * ae) /
        C29949;
    const double C5542 = 5 * (3 * C30473 + C30162 * C30555) +
                         C30162 * (4 * C30555 + C30162 * C30567);
    const double C5679 = 3 * C30473 + C30162 * C30555 + C30567 * C30204;
    const double C6091 = C29992 * (4 * C30555 + C30162 * C30567);
    const double C10547 = 5 * (3 * C30504 + C29992 * C30618) +
                          C29992 * (4 * C30618 + C29992 * C30638);
    const double C31100 = C31067 / C30790;
    const double C31133 = C31104 / C30794;
    const double C31134 = C31106 + C31075;
    const double C658 = C31075 - C30811 / C30808;
    const double C31103 = C31071 / C30790;
    const double C31116 = C31085 / C30790;
    const double C31140 = C31119 / C30794;
    const double C31141 = C31120 + C31089;
    const double C1418 = C31089 - C30891 / C30808;
    const double C31118 = C31086 / C30790;
    const double C31122 = C31091 / C30790;
    const double C31143 = C31125 / C30794;
    const double C31144 = C31126 + C31095;
    const double C2286 = C31095 - C30933 / C30808;
    const double C31124 = C31092 / C30790;
    const double C4881 = C4866 + C4865;
    const double C536 = C31024 * C515;
    const double C19182 = C18762 * C515;
    const double C19178 = C18763 * C515;
    const double C540 = C31024 * C516;
    const double C18790 = C18763 * C516;
    const double C19478 = C18762 * C516;
    const double C954 = C31024 * C943;
    const double C18984 = C18763 * C943;
    const double C19692 = C18762 * C943;
    const double C160 = C113 * C133;
    const double C18793 = C18764 * C133;
    const double C346 = C113 * C312;
    const double C18987 = C18764 * C312;
    const double C350 = C113 * C314;
    const double C19335 = C18764 * C314;
    const double C535 = C113 * C501;
    const double C19181 = C18764 * C501;
    const double C19177 = C18765 * C501;
    const double C539 = C113 * C503;
    const double C18789 = C18765 * C503;
    const double C19477 = C18764 * C503;
    const double C953 = C113 * C936;
    const double C18983 = C18765 * C936;
    const double C19691 = C18764 * C936;
    const double C6553 = C2185 * C30775;
    const double C14400 = C2185 * C13223;
    const double C15445 = C2185 * C13222;
    const double C5826 = C4867 + C4868;
    const double C5985 = C5356 + C5357;
    const double C5567 = C5563 + C5564;
    const double C5723 = C5717 + C5718;
    const double C6096 = C5719 + C5720;
    const double C175 = C164 + C165;
    const double C367 = C354 + C355;
    const double C670 = C667 + C668;
    const double C556 = C543 + C544;
    const double C19485 = C19479 + C19480;
    const double C780 = C777 + C778;
    const double C18813 = C18795 + C18796;
    const double C964 = C957 + C958;
    const double C19343 = C19337 + C19338;
    const double C15444 = C2184 * C13227;
    const double C10803 =
        (4 * (2 * C30510 + C29992 * C30664 + C30511 * ae) +
         C29992 *
             (3 * C30664 +
              C29992 * (2 * C30656 +
                        C29992 * (C30050 +
                                  C29992 * (C29992 * C29993 * C30062 + C30143) +
                                  C29992 * C30140 * ae) +
                        C30658 * ae) +
              C30663 * ae) +
         (3 * C30511 + C29992 * C30663) * ae) /
        C29949;
    const double C5834 = C5832 * C4739;
    const double C14248 = C5832 * C13227;
    const double C6558 = C6556 * C4739;
    const double C14406 = C6556 * C13227;
    const double C5993 = C5991 * C4739;
    const double C14872 = C5991 * C13227;
    const double C30129 = C30113 + C30128;
    const double C1309 = (C30162 * C30045 + ae * C29992 * C30175 +
                          C29992 * (ae * C30175 + C29992 * C30162 * C30069)) /
                         std::pow(C29949, 2);
    const double C1291 = (C30162 * C30110 + C30175 * C30204) / C29949;
    const double C30220 = C30217 + C30218;
    const double C1590 = C31024 * C1312;
    const double C18986 = C18763 * C1312;
    const double C2294 = C31024 * C2018;
    const double C19180 = C18763 * C2018;
    const double C1427 = C113 * C1154;
    const double C1589 = C113 * C1297;
    const double C18985 = C18765 * C1297;
    const double C2293 = C113 * C2006;
    const double C19179 = C18765 * C2006;
    const double C5831 = C5827 + C5828;
    const double C6555 = C6549 + C6550;
    const double C20423 = C20415 + C20416;
    const double C5990 = C5986 + C5987;
    const double C20217 = C20209 + C20210;
    const double C21275 = C21267 + C21268;
    const double C15713 = C15581 * C13223;
    const double C30639 = C30621 + C30637;
    const double C5562 = C5557 + C5558;
    const double C5714 = C5705 + C5706;
    const double C26135 = C26129 + C26130;
    const double C6102 = C6099 + C6100;
    const double C25487 = C25477 + C25478;
    const double C10905 =
        (4 * (2 * C30584 + C29992 * C30681 + C30585 * ae) +
         C29992 * (3 * C30681 +
                   C29992 * (2 * C30675 +
                             C29992 * (C30667 +
                                       C29992 * (C29992 * C30162 * C30062 +
                                                 C30670 * ae) +
                                       C29992 * C30670 * ae) +
                             C30676 * ae) +
                   C30680 * ae) +
         (3 * C30585 + C29992 * C30680) * ae) /
        C29949;
    const double C136 = (5 * (3 * C30026 + C29993 * C30046) +
                         C29993 * (4 * C30046 + C29993 * C30074)) /
                        C29949;
    const double C319 =
        (3 * C30026 + C29993 * C30046 + C30074 * C30171) / C29949;
    const double C508 =
        (3 * C30026 + C29993 * C30046 +
         C29992 * (C29992 * C30074 + C30389 * ae) + C29992 * C30389 * ae) /
        C29949;
    const double C661 = (C30162 * (4 * C30046 + C29993 * C30074)) / C29949;
    const double C771 = (C29992 * (4 * C30046 + C29993 * C30074) +
                         (4 * C30383 + C29993 * C30389) * ae) /
                        C29949;
    const double C939 =
        (C29992 * C30162 * C30074 + C30162 * C30389 * ae) / C29949;
    const double C144 =
        (5 * (3 * C30045 + ae * C30046 + C29993 * C30073) +
         ae * (4 * C30046 + C29993 * C30074) +
         C29993 *
             (4 * C30073 + ae * C30074 +
              C29993 *
                  (3 * C30069 + ae * C30070 +
                   C29993 * (2 * C30065 + ae * C30066 +
                             C29993 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C328 = (2 * C30025 + ae * C30026 + C29993 * C30045 +
                         C30073 * std::pow(yP - yQ, 2)) /
                        std::pow(C29949, 2);
    const double C329 =
        ((yP - yQ) * (3 * C30045 + ae * C30046 + C29993 * C30073)) /
        std::pow(C29949, 2);
    const double C330 =
        (3 * C30045 + ae * C30046 + C29993 * C30073 +
         (3 * C30069 + ae * C30070 +
          C29993 *
              (2 * C30065 + ae * C30066 +
               C29993 * (C30061 + ae * C29993 * C30062 +
                         C29993 * (ae * C30062 + C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))) *
             std::pow(yP - yQ, 2)) /
        std::pow(C29949, 2);
    const double C663 =
        ((yP - yQ) *
         (4 * C30073 + ae * C30074 +
          C29993 * (3 * C30069 + ae * C30070 +
                    C29993 * (2 * C30065 + ae * C30066 +
                              C29993 * (C30061 + ae * C29993 * C30062 +
                                        C29993 * (ae * C30062 +
                                                  C29993 * std::pow(C29995, 8) *
                                                      bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C1425 =
        (2 * C30162 * C30073 +
         C30162 * (C30073 + (2 * C30065 + ae * C30066 +
                             C29993 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003))) *
                                C30171)) /
        std::pow(C29949, 2);
    const double C5713 = C5703 + C5704;
    const double C26133 = C26125 + C26126;
    const double C6101 = C6097 + C6098;
    const double C25485 = C25473 + C25474;
    const double C30154 = C30134 + C30153;
    const double C30191 = C30127 + C30190;
    const double C30221 = C30127 + C30219;
    const double C2413 =
        (2 * (ae * C30175 + C29992 * C30232) + ae * (C30175 + C30233 * C30204) +
         C29992 * (C30232 + ae * C29992 * C30233 +
                   C29992 * (ae * C30233 +
                             C29992 * C30162 *
                                 (C30061 + ae * C29993 * C30062 +
                                  C29993 * (ae * C30062 +
                                            C29993 * std::pow(C29995, 8) *
                                                bs[8] * C30003))))) /
        std::pow(C29949, 2);
    const double C2410 =
        (2 * C29992 * C30175 + C29992 * (C30175 + C30233 * C30204)) / C29949;
    const double C6547 =
        (2 * C30229 + C30162 * C30263 + ae * C29992 * C30286 +
         C29992 * (ae * C30286 +
                   C29992 * (2 * C30162 * C30065 +
                             C30162 * (C30065 + (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003) *
                                                    C30171)))) /
        std::pow(C29949, 2);
    const double C5823 = (4 * (2 * C30177 + C30162 * C30188) +
                          C30162 * (3 * C30188 + C30162 * C30286)) /
                         C29949;
    const double C5982 = (C29992 * (3 * C30188 + C30162 * C30286)) / C29949;
    const double C6546 =
        (2 * C30177 + C30162 * C30188 + C30286 * C30204) / C29949;
    const double C10805 =
        (4 * (2 * C30213 + ae * C30214 + C29992 * C30346) +
         ae * (3 * C30214 + C29992 * C30347) +
         C29992 *
             (3 * C30346 + ae * C30347 +
              C29992 *
                  (2 * C30340 + ae * C30342 +
                   C29992 * (C30065 + ae * C29992 * C30145 +
                             C29992 * (ae * C30145 +
                                       C29992 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C10804 = (4 * (2 * C30209 + C29992 * C30214) +
                           C29992 * (3 * C30214 + C29992 * C30347)) /
                          C29949;
    const double C5688 =
        (3 * C30236 + C30162 * C30243 + ae * C29992 * C30260 +
         C29992 * (ae * C30260 +
                   C29992 * (3 * C30241 +
                             C30162 * (2 * C30162 * C30061 +
                                       C30162 * (C30061 + std::pow(C29995, 8) *
                                                              bs[8] * C30003 *
                                                              C30171))))) /
        std::pow(C29949, 2);
    const double C6094 =
        (ae * (4 * C30249 + C30162 * C30260) +
         C29992 * (4 * C30243 +
                   C30162 * (3 * C30241 +
                             C30162 * (2 * C30162 * C30061 +
                                       C30162 * (C30061 + std::pow(C29995, 8) *
                                                              bs[8] * C30003 *
                                                              C30171))))) /
        std::pow(C29949, 2);
    const double C5546 = (5 * (3 * C30185 + C30162 * C30249) +
                          C30162 * (4 * C30249 + C30162 * C30260)) /
                         C29949;
    const double C5685 =
        (3 * C30185 + C30162 * C30249 + C30260 * C30204) / C29949;
    const double C6093 = (C29992 * (4 * C30249 + C30162 * C30260)) / C29949;
    const double C10553 =
        (5 * (3 * C30301 + ae * C30302 + C29992 * C30323) +
         ae * (4 * C30302 + C29992 * C30324) +
         C29992 *
             (4 * C30323 + ae * C30324 +
              C29992 *
                  (3 * C30319 + ae * C30320 +
                   C29992 * (2 * C30313 + ae * C30315 +
                             C29992 * (C30061 + ae * C29992 * C30138 +
                                       C29992 * (ae * C30138 +
                                                 C29992 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C10551 = (5 * (3 * C30207 + C29992 * C30302) +
                           C29992 * (4 * C30302 + C29992 * C30324)) /
                          C29949;
    const double C5565 = C5561 * C30775;
    const double C31154 = C31100 + C31146;
    const double C657 = C31133 - (C30813 * C30795) / C30790;
    const double C111 = C31134 / C30794 - C30811 / C31107;
    const double C31147 = C31103 + C31133;
    const double C31155 = C31116 + C31150;
    const double C1417 = C31140 - (C30893 * C30882) / C30790;
    const double C1145 = C31141 / C30794 - C30891 / C31107;
    const double C31151 = C31118 + C31140;
    const double C31156 = C31122 + C31152;
    const double C2285 = C31143 - (C30935 * C30924) / C30790;
    const double C1998 = C31144 / C30794 - C30933 / C31107;
    const double C31153 = C31124 + C31143;
    const double C173 = C160 + C161;
    const double C18812 = C18793 + C18794;
    const double C363 = C346 + C347;
    const double C19006 = C18987 + C18988;
    const double C365 = C350 + C351;
    const double C19342 = C19335 + C19336;
    const double C552 = C535 + C536;
    const double C19200 = C19181 + C19182;
    const double C19198 = C19177 + C19178;
    const double C554 = C539 + C540;
    const double C18810 = C18789 + C18790;
    const double C19484 = C19477 + C19478;
    const double C962 = C953 + C954;
    const double C19004 = C18983 + C18984;
    const double C19702 = C19691 + C19692;
    const double C5100 = C367 * C4739;
    const double C13396 = C367 * C13227;
    const double C13677 = C670 * C13227;
    const double C14012 = C964 * C13227;
    const double C30130 = C30129 + C30124;
    const double C2176 = C31024 * C1309;
    const double C19690 = C18763 * C1309;
    const double C2175 = C113 * C1291;
    const double C19689 = C18765 * C1291;
    const double C1435 = C1427 + C1428;
    const double C1597 = C1589 + C1590;
    const double C19005 = C18985 + C18986;
    const double C2301 = C2293 + C2294;
    const double C19199 = C19179 + C19180;
    const double C5833 = C5831 * C30775;
    const double C14247 = C5831 * C13223;
    const double C6557 = C6555 * C30775;
    const double C14405 = C6555 * C13223;
    const double C5992 = C5990 * C30775;
    const double C14871 = C5990 * C13223;
    const double C30640 = C30639 + C30624;
    const double C5566 = C5562 * C4739;
    const double C5722 = C5714 * C4739;
    const double C6104 = C6102 * C4739;
    const double C353 = C31024 * C328;
    const double C666 = C31024 * C329;
    const double C5721 = C5713 * C30775;
    const double C6103 = C6101 * C30775;
    const double C30155 = C30154 + C30146;
    const double C1317 =
        (C30045 + C30069 * C30171 + ae * C29992 * C30191 +
         C29992 * (ae * C30191 +
                   C29992 * (C30069 + (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)) *
                                          C30171))) /
        std::pow(C29949, 2);
    const double C1709 =
        (ae * (2 * C30175 + C30162 * C30191) +
         C29992 * (2 * C30162 * C30069 +
                   C30162 * (C30069 + (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)) *
                                          C30171))) /
        std::pow(C29949, 2);
    const double C1165 = (3 * (C30110 + C30127 * C30171) +
                          C30162 * (2 * C30175 + C30162 * C30191)) /
                         C29949;
    const double C1308 = (C30110 + C30127 * C30171 + C30191 * C30204) / C29949;
    const double C1706 = (C29992 * (2 * C30175 + C30162 * C30191)) / C29949;
    const double C2023 =
        (3 * (C30045 + ae * C30216 + C29992 * C30220) +
         ae * (2 * C30216 + C29992 * C30221) +
         C29992 *
             (2 * C30220 + ae * C30221 +
              C29992 *
                  (C30069 + ae * C29992 * C30152 +
                   C29992 * (ae * C30152 +
                             C29992 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C2017 = (3 * (C30110 + C30127 * C30204) +
                          C29992 * (2 * C30216 + C29992 * C30221)) /
                         C29949;
    const double C108 =
        (C31145 + 2 * C30804) / C30794 - (C31154 * C30795) / C30790;
    const double C109 =
        (C31132 + 2 * C30813 + C31154) / C30794 - (C31147 * C30795) / C30790;
    const double C110 = (C31105 + C30810 / C30790 + C31147) / C30794 -
                        (C31134 * C30795) / C30790;
    const double C1142 =
        (C31148 + 2 * C30886) / C30794 - (C31155 * C30882) / C30790;
    const double C1143 =
        (C31136 + 2 * C30893 + C31155) / C30794 - (C31151 * C30882) / C30790;
    const double C1144 = (C31111 + C30890 / C30790 + C31151) / C30794 -
                         (C31141 * C30882) / C30790;
    const double C1995 =
        (C31149 + 2 * C30928) / C30794 - (C31156 * C30924) / C30790;
    const double C1996 =
        (C31138 + 2 * C30935 + C31156) / C30794 - (C31153 * C30924) / C30790;
    const double C1997 = (C31114 + C30932 / C30790 + C31153) / C30794 -
                         (C31144 * C30924) / C30790;
    const double C4872 = C363 * C30775;
    const double C13397 = C363 * C13222;
    const double C13390 = C363 * C13223;
    const double C5099 = C365 * C30775;
    const double C13394 = C365 * C13223;
    const double C13676 = C365 * C13222;
    const double C5360 = C962 * C30775;
    const double C14013 = C962 * C13222;
    const double C14010 = C962 * C13223;
    const double C517 =
        (2 * C30025 + ae * C30026 + C29993 * C30045 + ae * C29992 * C30130 +
         C29992 * (ae * C30130 + C29992 * C30073)) /
        std::pow(C29949, 2);
    const double C518 =
        (ae * (3 * C30110 + C29993 * C30130 +
               (2 * C30104 + C29993 * C30122) * ae) +
         C29992 * (3 * C30045 + ae * C30046 + C29993 * C30073)) /
        std::pow(C29949, 2);
    const double C944 =
        (ae * C30162 * C30130 + C29992 * C30162 * C30073) / std::pow(C29949, 2);
    const double C134 = (4 * (2 * C30098 + C29993 * C30110 + C30379 * ae) +
                         C29993 * (3 * C30110 + C29993 * C30130 + C30383 * ae) +
                         (3 * C30379 + C29993 * C30383) * ae) /
                        C29949;
    const double C315 =
        (2 * C30098 + C29993 * C30110 + C30379 * ae + C30130 * C30171) / C29949;
    const double C317 =
        (C30162 * (3 * C30110 + C29993 * C30130 + C30383 * ae)) / C29949;
    const double C504 =
        (2 * C30098 + C29993 * C30110 + C30379 * ae + C30130 * C30204) / C29949;
    const double C506 =
        (C29992 * (3 * C30110 + C29993 * C30130 + C30383 * ae)) / C29949;
    const double C937 = (C29992 * C30162 * C30130) / C29949;
    const double C2183 = C2175 + C2176;
    const double C19701 = C19689 + C19690;
    const double C4873 = C1435 * C30775;
    const double C14539 = C1435 * C13223;
    const double C5358 = C1597 * C30775;
    const double C14737 = C1597 * C13223;
    const double C10550 =
        (5 * (3 * C30619 + C29992 * C30640 + C30618 * ae) +
         C29992 *
             (4 * C30640 +
              C29992 *
                  (3 * C30635 +
                   C29992 *
                       (2 * C30627 +
                        C29992 * (C30038 + C29992 * (C29992 * C30062 + C30139) +
                                  C29992 * C30136 * ae) +
                        C30629 * ae) +
                   C30634 * ae) +
              C30638 * ae) +
         (4 * C30618 + C29992 * C30638) * ae) /
        C29949;
    const double C30156 = C29993 * C30155;
    const double C30223 = C30162 * C30155;
    const double C1587 =
        (ae * (C30130 + C30155 * C30171) +
         C29992 * (C30073 + (2 * C30065 + ae * C30066 +
                             C29993 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003))) *
                                C30171)) /
        std::pow(C29949, 2);
    const double C2291 =
        (2 * (ae * C30130 + C29992 * C30073) + ae * (C30130 + C30155 * C30204) +
         C29992 *
             (C30073 + ae * C29992 * C30155 +
              C29992 *
                  (ae * C30155 +
                   C29992 * (2 * C30065 + ae * C30066 +
                             C29993 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C1424 =
        (2 * C30162 * C30130 + C30162 * (C30130 + C30155 * C30171)) / C29949;
    const double C1586 = (C29992 * (C30130 + C30155 * C30171)) / C29949;
    const double C2290 =
        (2 * C29992 * C30130 + C29992 * (C30130 + C30155 * C30204)) / C29949;
    const double C4882 = C4871 + C4872;
    const double C542 = C31024 * C517;
    const double C19476 = C18763 * C517;
    const double C776 = C31024 * C518;
    const double C18792 = C18763 * C518;
    const double C956 = C31024 * C944;
    const double C19334 = C18763 * C944;
    const double C162 = C113 * C134;
    const double C352 = C113 * C315;
    const double C665 = C113 * C317;
    const double C541 = C113 * C504;
    const double C19475 = C18765 * C504;
    const double C775 = C113 * C506;
    const double C18791 = C18765 * C506;
    const double C955 = C113 * C937;
    const double C19333 = C18765 * C937;
    const double C15443 = C2183 * C13223;
    const double C30157 = C30133 + C30156;
    const double C2173 =
        (C30162 * C30073 + ae * C29992 * C30223 +
         C29992 * (ae * C30223 +
                   C29992 * C30162 *
                       (2 * C30065 + ae * C30066 +
                        C29993 * (C30061 + ae * C29993 * C30062 +
                                  C29993 * (ae * C30062 +
                                            C29993 * std::pow(C29995, 8) *
                                                bs[8] * C30003))))) /
        std::pow(C29949, 2);
    const double C2172 = (C30162 * C30130 + C30223 * C30204) / C29949;
    const double C174 = C162 + C163;
    const double C366 = C352 + C353;
    const double C669 = C665 + C666;
    const double C555 = C541 + C542;
    const double C19483 = C19475 + C19476;
    const double C779 = C775 + C776;
    const double C18811 = C18791 + C18792;
    const double C963 = C955 + C956;
    const double C19341 = C19333 + C19334;
    const double C30158 = C30157 + C30151;
    const double C5101 = C366 * C30775;
    const double C13395 = C366 * C13223;
    const double C13678 = C669 * C13223;
    const double C14011 = C963 * C13223;
    const double C519 =
        (3 * C30045 + ae * C30046 + C29993 * C30073 + ae * C29992 * C30158 +
         C29992 *
             (ae * C30158 +
              C29992 *
                  (3 * C30069 + ae * C30070 +
                   C29993 * (2 * C30065 + ae * C30066 +
                             C29993 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C773 =
        (ae * (4 * C30130 + C29993 * C30158 +
               (3 * C30122 + C29993 * C30149) * ae) +
         C29992 *
             (4 * C30073 + ae * C30074 +
              C29993 *
                  (3 * C30069 + ae * C30070 +
                   C29993 * (2 * C30065 + ae * C30066 +
                             C29993 * (C30061 + ae * C29993 * C30062 +
                                       C29993 * (ae * C30062 +
                                                 C29993 * std::pow(C29995, 8) *
                                                     bs[8] * C30003)))))) /
        std::pow(C29949, 2);
    const double C945 =
        (ae * C30162 * C30158 +
         C29992 * C30162 *
             (3 * C30069 + ae * C30070 +
              C29993 * (2 * C30065 + ae * C30066 +
                        C29993 * (C30061 + ae * C29993 * C30062 +
                                  C29993 * (ae * C30062 +
                                            C29993 * std::pow(C29995, 8) *
                                                bs[8] * C30003))))) /
        std::pow(C29949, 2);
    const double C137 = (5 * (3 * C30110 + C29993 * C30130 + C30383 * ae) +
                         C29993 * (4 * C30130 + C29993 * C30158 + C30389 * ae) +
                         (4 * C30383 + C29993 * C30389) * ae) /
                        C29949;
    const double C320 =
        (3 * C30110 + C29993 * C30130 + C30383 * ae + C30158 * C30171) / C29949;
    const double C509 =
        (3 * C30110 + C29993 * C30130 + C30383 * ae + C30158 * C30204) / C29949;
    const double C662 =
        (C30162 * (4 * C30130 + C29993 * C30158 + C30389 * ae)) / C29949;
    const double C772 =
        (C29992 * (4 * C30130 + C29993 * C30158 + C30389 * ae)) / C29949;
    const double C940 = (C29992 * C30162 * C30158) / C29949;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C30886 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C30893 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C30845 * C2880) *
              C30804 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C30893 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C30886 -
           ((C14539 + C14540 + C14541 + C14542) * C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C2880) *
              C30813 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C30886 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C30893 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C2880) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31083 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C30886 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31083) *
               C30893 +
           (((C13382 + C13381 + C13380 + C13379) * C13224 +
             (C14243 + C14244 + C14245 + C14246) * C13225) *
                C31083 -
            ((C14871 + C14872 + C14873 + C14874) * C13225 +
             (C14404 + C14403 + C14402 + C14401) * C13224) *
                C30932) *
               C2880) *
              C2620 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31083) *
               C30886 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31083 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30893 +
           (((C14740 + C14739 + C14738 + C14737) * C13224 +
             (C5991 * C13226 + C5990 * C13222 +
              (C113 * C1700 + C31024 * C1705) * C13227 +
              (C113 * C1706 + C31024 * C1709) * C13223) *
                 C13225) *
                C30932 -
            ((C14539 + C14540 + C14541 + C14542) * C13225 +
             (C13390 + C13389 + C13388 + C13387) * C13224) *
                C31083) *
               C2880) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31155 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C31151 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C30845 * C31141 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C30845 * C31121) *
              C2620 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C31151 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31155 -
           ((C14539 + C14540 + C14541 + C14542) * C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31141 +
           ((C14542 + C14541 + C14540 + C14539) * C13224 +
            (C5832 * C13226 + C5831 * C13222 +
             (C113 * C1153 + C31024 * C1164) * C13227 +
             (C113 * C1165 + C31024 * C1171) * C13223) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C2512 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C30890) *
              C31154 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C30890 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C2512) *
              C31147 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C2512 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C30890) *
              C31134 +
          (((C13675 + C13676 + C13677 + C13678) * C13224 +
            (C367 * C13226 + C366 * C13222 +
             (C113 * C300 + C31024 * C319) * C13227 +
             (C113 * C320 + C31024 * C330) * C13223) *
                C13225) *
               C30845 * C30890 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31149 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C31138 +
            (((C113 * C483 + C31024 * C496) * C13226 +
              (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
              C550 * C13223) *
                 C13224 +
             (C14397 + C14398 + C14399 + C14400) * C13225) *
                C31114) *
               C2512 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C31138 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31149 -
            ((C14405 + C14406 + C14407 + C14408) * C13225 +
             (C14400 + C14399 + C14398 + C14397) * C13224) *
                C31114) *
               C30890) *
              C2620 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C31138 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31149 -
            ((C15443 + C15444 + C15445 + C15446) * C13225 +
             (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                 C13224) *
                C31114) *
               C2512 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31149 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C31138 +
            ((C15446 + C15445 + C15444 + C15443) * C13224 +
             (C6556 * C13226 + C6555 * C13222 +
              (C113 * C1290 + C31024 * C1307) * C13227 +
              (C113 * C1308 + C31024 * C1317) * C13223) *
                 C13225) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31083 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C2512 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31083) *
               C30890) *
              C30804 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31083) *
               C2512 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31083 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30890) *
              C30813 +
          ((((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                 C13224 +
             (C13391 + C13392 + C13393 + C13394) * C13225) *
                C31083 -
            ((C14011 + C14012 + C14013 + C14014) * C13225 +
             (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                 C13224) *
                C30932) *
               C2512 +
           (((C14014 + C14013 + C14012 + C14011) * C13224 +
             (C1598 * C13226 + C1597 * C13222 +
              (C113 * C1584 + C31024 * C1585) * C13227 +
              (C113 * C1586 + C31024 * C1587) * C13223) *
                 C13225) *
                C30932 -
            ((C13395 + C13396 + C13397 + C13398) * C13225 +
             (C13394 + C13393 + C13392 + C13391) * C13224) *
                C31083) *
               C30890) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C2512 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C30890) *
              C31154 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C30890 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C2512) *
              C31147 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C2512 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C30890) *
              C31134 +
          (((C13675 + C13676 + C13677 + C13678) * C13224 +
            (C367 * C13226 + C366 * C13222 +
             (C113 * C300 + C31024 * C319) * C13227 +
             (C113 * C320 + C31024 * C330) * C13223) *
                C13225) *
               C30845 * C30890 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31155 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C31151 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C30845 * C31141 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C30845 * C31121) *
              C2620 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C31151 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31155 -
           ((C14539 + C14540 + C14541 + C14542) * C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31141 +
           ((C14542 + C14541 + C14540 + C14539) * C13224 +
            (C5832 * C13226 + C5831 * C13222 +
             (C113 * C1153 + C31024 * C1164) * C13227 +
             (C113 * C1165 + C31024 * C1171) * C13223) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C3274 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C30886 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C3274) *
               C30893 +
           (((C13382 + C13381 + C13380 + C13379) * C13224 +
             (C14243 + C14244 + C14245 + C14246) * C13225) *
                C3274 -
            ((C14871 + C14872 + C14873 + C14874) * C13225 +
             (C14404 + C14403 + C14402 + C14401) * C13224) *
                C30932) *
               C2880) *
              C31068 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C3274) *
               C30886 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C3274 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30893 +
           (((C14740 + C14739 + C14738 + C14737) * C13224 +
             (C5991 * C13226 + C5990 * C13222 +
              (C113 * C1700 + C31024 * C1705) * C13227 +
              (C113 * C1706 + C31024 * C1709) * C13223) *
                 C13225) *
                C30932 -
            ((C14539 + C14540 + C14541 + C14542) * C13225 +
             (C13390 + C13389 + C13388 + C13387) * C13224) *
                C3274) *
               C2880) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C117 + C31024 * C124) * C13226 +
                    (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
                    C167 * C13223) *
                       C13224 +
                   (C13375 + C13376 + C13377 + C13378) * C13225) *
                      C30928 -
                  ((C14003 + C14004 + C14005 + C14006) * C13225 +
                   (C547 * C13223 + C548 * C13227 +
                    (C113 * C494 + C31024 * C512) * C13222 +
                    (C113 * C482 + C31024 * C495) * C13226) *
                       C13224) *
                      C30935 +
                  (((C113 * C483 + C31024 * C496) * C13226 +
                    (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
                    C550 * C13223) *
                       C13224 +
                   (C14397 + C14398 + C14399 + C14400) * C13225) *
                      C3782) *
                     C30886 +
                 (((C14006 + C14005 + C14004 + C14003) * C13224 +
                   (C14401 + C14402 + C14403 + C14404) * C13225) *
                      C30935 -
                  ((C13379 + C13380 + C13381 + C13382) * C13225 +
                   (C13378 + C13377 + C13376 + C13375) * C13224) *
                      C30928 -
                  ((C14405 + C14406 + C14407 + C14408) * C13225 +
                   (C14400 + C14399 + C14398 + C14397) * C13224) *
                      C3782) *
                     C30893 +
                 (((C13382 + C13381 + C13380 + C13379) * C13224 +
                   (C14243 + C14244 + C14245 + C14246) * C13225) *
                      C30928 -
                  ((C14871 + C14872 + C14873 + C14874) * C13225 +
                   (C14404 + C14403 + C14402 + C14401) * C13224) *
                      C30935 +
                  ((C14408 + C14407 + C14406 + C14405) * C13224 +
                   (C5714 * C13226 + C5713 * C13222 +
                    (C113 * C6544 + C31024 * C6545) * C13227 +
                    (C113 * C6546 + C31024 * C6547) * C13223) *
                       C13225) *
                      C3782) *
                     C2880) *
                C30799) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C3274 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C31155 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C30932 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C3274) *
              C31151 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C3274 -
           ((C14871 + C14872 + C14873 + C14874) * C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C30932) *
              C31141 +
          (((C14874 + C14873 + C14872 + C14871) * C13224 +
            (C6102 * C13226 + C6101 * C13222 +
             (C113 * C5980 + C31024 * C5981) * C13227 +
             (C113 * C5982 + C31024 * C5983) * C13223) *
                C13225) *
               C30932 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C3274 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C2512 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C3274) *
               C30890) *
              C31145 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C3274) *
               C2512 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C3274 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30890) *
              C31132 +
          ((((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                 C13224 +
             (C13391 + C13392 + C13393 + C13394) * C13225) *
                C3274 -
            ((C14011 + C14012 + C14013 + C14014) * C13225 +
             (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                 C13224) *
                C30932) *
               C2512 +
           (((C14014 + C14013 + C14012 + C14011) * C13224 +
             (C1598 * C13226 + C1597 * C13222 +
              (C113 * C1584 + C31024 * C1585) * C13227 +
              (C113 * C1586 + C31024 * C1587) * C13223) *
                 C13225) *
                C30932 -
            ((C13395 + C13396 + C13397 + C13398) * C13225 +
             (C13394 + C13393 + C13392 + C13391) * C13224) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31156 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C31153 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31144 -
           ((C15713 + C15714 + C15715 + C15716) * C13225 +
            (C2303 * C13223 + C2304 * C13227 +
             (C113 * C2010 + C31024 * C2020) * C13222 +
             (C113 * C2002 + C31024 * C2011) * C13226) *
                C13224) *
               C31127) *
              C2512 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C31153 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C31156 -
           ((C14405 + C14406 + C14407 + C14408) * C13225 +
            (C14400 + C14399 + C14398 + C14397) * C13224) *
               C31144 +
           ((C15716 + C15715 + C15714 + C15713) * C13224 +
            (C6772 * C13226 + C6771 * C13222 +
             (C113 * C6656 + C31024 * C6657) * C13227 +
             (C113 * C6658 + C31024 * C6659) * C13223) *
                C13225) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C30928 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30935 +
            (((C113 * C483 + C31024 * C496) * C13226 +
              (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
              C550 * C13223) *
                 C13224 +
             (C14397 + C14398 + C14399 + C14400) * C13225) *
                C3782) *
               C2512 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30935 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C30928 -
            ((C14405 + C14406 + C14407 + C14408) * C13225 +
             (C14400 + C14399 + C14398 + C14397) * C13224) *
                C3782) *
               C30890) *
              C31068 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30935 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C30928 -
            ((C15443 + C15444 + C15445 + C15446) * C13225 +
             (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                 C13224) *
                C3782) *
               C2512 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C30928 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30935 +
            ((C15446 + C15445 + C15444 + C15443) * C13224 +
             (C6556 * C13226 + C6555 * C13222 +
              (C113 * C1290 + C31024 * C1307) * C13227 +
              (C113 * C1308 + C31024 * C1317) * C13223) *
                 C13225) *
                C3782) *
               C30890) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C3274 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C2512 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C3274) *
               C30890) *
              C31145 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C3274) *
               C2512 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C3274 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30890) *
              C31132 +
          ((((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                 C13224 +
             (C13391 + C13392 + C13393 + C13394) * C13225) *
                C3274 -
            ((C14011 + C14012 + C14013 + C14014) * C13225 +
             (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                 C13224) *
                C30932) *
               C2512 +
           (((C14014 + C14013 + C14012 + C14011) * C13224 +
             (C1598 * C13226 + C1597 * C13222 +
              (C113 * C1584 + C31024 * C1585) * C13227 +
              (C113 * C1586 + C31024 * C1587) * C13223) *
                 C13225) *
                C30932 -
            ((C13395 + C13396 + C13397 + C13398) * C13225 +
             (C13394 + C13393 + C13392 + C13391) * C13224) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C3274 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C31155 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C30932 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C3274) *
              C31151 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C3274 -
           ((C14871 + C14872 + C14873 + C14874) * C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C30932) *
              C31141 +
          (((C14874 + C14873 + C14872 + C14871) * C13224 +
            (C6102 * C13226 + C6101 * C13222 +
             (C113 * C5980 + C31024 * C5981) * C13227 +
             (C113 * C5982 + C31024 * C5983) * C13223) *
                C13225) *
               C30932 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C1416 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C1417 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C30845 * C1418 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C30845 * C31121) *
              C31068 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C1417 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C1416 -
           ((C14539 + C14540 + C14541 + C14542) * C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C1418 +
           ((C14542 + C14541 + C14540 + C14539) * C13224 +
            (C5832 * C13226 + C5831 * C13222 +
             (C113 * C1153 + C31024 * C1164) * C13227 +
             (C113 * C1165 + C31024 * C1171) * C13223) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31082 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C30890) *
              C656 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C30890 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31082) *
              C657 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C31082 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C30890) *
              C658 +
          (((C13675 + C13676 + C13677 + C13678) * C13224 +
            (C367 * C13226 + C366 * C13222 +
             (C113 * C300 + C31024 * C319) * C13227 +
             (C113 * C320 + C31024 * C330) * C13223) *
                C13225) *
               C30845 * C30890 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C1820 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C1821 +
            (((C113 * C483 + C31024 * C496) * C13226 +
              (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
              C550 * C13223) *
                 C13224 +
             (C14397 + C14398 + C14399 + C14400) * C13225) *
                C31114) *
               C31082 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C1821 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C1820 -
            ((C14405 + C14406 + C14407 + C14408) * C13225 +
             (C14400 + C14399 + C14398 + C14397) * C13224) *
                C31114) *
               C30890) *
              C31068 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C1821 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C1820 -
            ((C15443 + C15444 + C15445 + C15446) * C13225 +
             (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                 C13224) *
                C31114) *
               C31082 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C1820 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C1821 +
            ((C15446 + C15445 + C15444 + C15443) * C13224 +
             (C6556 * C13226 + C6555 * C13222 +
              (C113 * C1290 + C31024 * C1307) * C13227 +
              (C113 * C1308 + C31024 * C1317) * C13223) *
                 C13225) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31083 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C1416 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C30932 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C31083) *
              C1417 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C31083 -
           ((C14871 + C14872 + C14873 + C14874) * C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C30932) *
              C1418 +
          (((C14874 + C14873 + C14872 + C14871) * C13224 +
            (C6102 * C13226 + C6101 * C13222 +
             (C113 * C5980 + C31024 * C5981) * C13227 +
             (C113 * C5982 + C31024 * C5983) * C13223) *
                C13225) *
               C30932 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31083 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C31082 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C5363 * C13226 + C5362 * C13222 + C1600 * C13227 +
              C1599 * C13223) *
                 C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31083) *
               C30890) *
              C288 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31083) *
               C31082 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31083 -
            ((C1597 * C13223 + C1598 * C13227 + C1599 * C13222 +
              C1600 * C13226) *
                 C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30890) *
              C289 +
          ((((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                 C13224 +
             (C13391 + C13392 + C13393 + C13394) * C13225) *
                C31083 -
            ((C14011 + C14012 + C14013 + C14014) * C13225 +
             (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                 C13224) *
                C30932) *
               C31082 +
           (((C14014 + C14013 + C14012 + C14011) * C13224 +
             (C1598 * C13226 + C1597 * C13222 +
              (C113 * C1584 + C31024 * C1585) * C13227 +
              (C113 * C1586 + C31024 * C1587) * C13223) *
                 C13225) *
                C30932 -
            ((C13395 + C13396 + C13397 + C13398) * C13225 +
             (C13394 + C13393 + C13392 + C13391) * C13224) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C2284 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C2285 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C2286 -
           ((C15713 + C15714 + C15715 + C15716) * C13225 +
            (C2303 * C13223 + C2304 * C13227 +
             (C113 * C2010 + C31024 * C2020) * C13222 +
             (C113 * C2002 + C31024 * C2011) * C13226) *
                C13224) *
               C31127) *
              C31082 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C2285 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C2284 -
           ((C14405 + C14406 + C14407 + C14408) * C13225 +
            (C14400 + C14399 + C14398 + C14397) * C13224) *
               C2286 +
           ((C15716 + C15715 + C15714 + C15713) * C13224 +
            (C6772 * C13226 + C6771 * C13222 +
             (C113 * C6656 + C31024 * C6657) * C13227 +
             (C113 * C6658 + C31024 * C6659) * C13223) *
                C13225) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C13226 +
                (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
                C167 * C13223) *
                   C13224 +
               (C4875 * C13226 + C4876 * C13222 + C359 * C13227 +
                C358 * C13223) *
                   C13225) *
                  C30845 * C30827 * C108 -
              ((C356 * C13223 + C357 * C13227 + C358 * C13222 + C359 * C13226) *
                   C13225 +
               (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                   C13224) *
                  C30845 * C30827 * C109 +
              ((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                   C13224 +
               (C357 * C13226 + C356 * C13222 + C364 * C13227 + C365 * C13223) *
                   C13225) *
                  C30845 * C30827 * C110 -
              ((C669 * C13223 + C670 * C13227 + C365 * C13222 + C364 * C13226) *
                   C13225 +
               (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                   C13224) *
                  C30845 * C30827 * C111 +
              ((C172 * C13226 + C173 * C13222 + C175 * C13227 + C174 * C13223) *
                   C13224 +
               (C670 * C13226 + C669 * C13222 +
                (C113 * C660 + C31024 * C661) * C13227 +
                (C113 * C662 + C31024 * C663) * C13223) *
                   C13225) *
                  C30845 * C30827 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C31024 * C124) * C13226 +
                 (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
                 C167 * C13223) *
                    C13224 +
                (C13375 + C13376 + C13377 + C13378) * C13225) *
                   C30845 * C31148 -
               ((C13379 + C13380 + C13381 + C13382) * C13225 +
                (C13378 + C13377 + C13376 + C13375) * C13224) *
                   C30845 * C31136 +
               ((C13382 + C13381 + C13380 + C13379) * C13224 +
                (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
                 C1437 * C13223) *
                    C13225) *
                   C30845 * C31111) *
                  C288 +
              (((C13383 + C13384 + C13385 + C13386) * C13224 +
                (C13387 + C13388 + C13389 + C13390) * C13225) *
                   C30845 * C31136 -
               ((C13386 + C13385 + C13384 + C13383) * C13225 +
                (C169 * C13223 + C168 * C13227 + C167 * C13222 +
                 C166 * C13226) *
                    C13224) *
                   C30845 * C31148 -
               ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
                 C1438 * C13226) *
                    C13225 +
                (C13390 + C13389 + C13388 + C13387) * C13224) *
                   C30845 * C31111) *
                  C289 +
              (((C168 * C13226 + C169 * C13222 + C171 * C13227 +
                 C170 * C13223) *
                    C13224 +
                (C13391 + C13392 + C13393 + C13394) * C13225) *
                   C30845 * C31148 -
               ((C13395 + C13396 + C13397 + C13398) * C13225 +
                (C13394 + C13393 + C13392 + C13391) * C13224) *
                   C30845 * C31136 +
               ((C13398 + C13397 + C13396 + C13395) * C13224 +
                (C1436 * C13226 + C1435 * C13222 +
                 (C113 * C1422 + C31024 * C1423) * C13227 +
                 (C113 * C1424 + C31024 * C1425) * C13223) *
                    C13225) *
                   C30845 * C31111) *
                  C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31149 -
           ((C960 * C13223 + C959 * C13227 + C5364 * C13222 + C5365 * C13226) *
                C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C5707 * C13226 + C5708 * C13222 + C2186 * C13227 +
             C2185 * C13223) *
                C13225) *
               C31114) *
              C30827 * C288 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C959 * C13226 + C960 * C13222 + C961 * C13227 + C962 * C13223) *
                C13225) *
               C31138 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C31149 -
           ((C2183 * C13223 + C2184 * C13227 + C2185 * C13222 +
             C2186 * C13226) *
                C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C31114) *
              C30827 * C289 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C31149 -
           ((C963 * C13223 + C964 * C13227 + C962 * C13222 + C961 * C13226) *
                C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C31138 +
           ((C551 * C13226 + C552 * C13222 + C556 * C13227 + C555 * C13223) *
                C13224 +
            (C2184 * C13226 + C2183 * C13222 +
             (C113 * C2170 + C31024 * C2171) * C13227 +
             (C113 * C2172 + C31024 * C2173) * C13223) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C1074 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C1075 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C1075 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C1074 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C1074 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C1075 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C13375 + C13376 + C13377 + C13378) * C13225) *
              C30845 * C1142 -
          ((C13379 + C13380 + C13381 + C13382) * C13225 +
           (C13378 + C13377 + C13376 + C13375) * C13224) *
              C30845 * C1143 +
          ((C13382 + C13381 + C13380 + C13379) * C13224 +
           (C14243 + C14244 + C14245 + C14246) * C13225) *
              C30845 * C1144 -
          ((C14247 + C14248 + C14249 + C14250) * C13225 +
           (C14246 + C14245 + C14244 + C14243) * C13224) *
              C30845 * C1145 +
          ((C14250 + C14249 + C14248 + C14247) * C13224 +
           (C5562 * C13226 + C5561 * C13222 +
            (C113 * C5821 + C31024 * C5822) * C13227 +
            (C113 * C5823 + C31024 * C5824) * C13223) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31149 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31114) *
              C1074 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C31138 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C31149 -
           ((C14405 + C14406 + C14407 + C14408) * C13225 +
            (C14400 + C14399 + C14398 + C14397) * C13224) *
               C31114) *
              C1075 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C31149 -
           ((C5990 * C13223 + C5991 * C13227 + C5712 * C13222 +
             C5711 * C13226) *
                C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C31138 +
           ((C14408 + C14407 + C14406 + C14405) * C13224 +
            (C5714 * C13226 + C5713 * C13222 +
             (C113 * C6544 + C31024 * C6545) * C13227 +
             (C113 * C6546 + C31024 * C6547) * C13223) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C1820 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31114) *
              C30827 * C31145 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C1821 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C1820 -
           ((C2183 * C13223 + C2184 * C13227 + C2185 * C13222 +
             C2186 * C13226) *
                C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C31114) *
              C30827 * C31132 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C1820 -
           ((C14011 + C14012 + C14013 + C14014) * C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C1821 +
           ((C551 * C13226 + C552 * C13222 + C556 * C13227 + C555 * C13223) *
                C13224 +
            (C2184 * C13226 + C2183 * C13222 +
             (C113 * C2170 + C31024 * C2171) * C13227 +
             (C113 * C2172 + C31024 * C2173) * C13223) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C1820 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31114) *
              C31148 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C1821 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C1820 -
           ((C14405 + C14406 + C14407 + C14408) * C13225 +
            (C14400 + C14399 + C14398 + C14397) * C13224) *
               C31114) *
              C31136 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C1820 -
           ((C14871 + C14872 + C14873 + C14874) * C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C1821 +
           ((C14408 + C14407 + C14406 + C14405) * C13224 +
            (C5714 * C13226 + C5713 * C13222 +
             (C113 * C6544 + C31024 * C6545) * C13227 +
             (C113 * C6546 + C31024 * C6547) * C13223) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C13375 + C13376 + C13377 + C13378) * C13225) *
              C1995 -
          ((C14003 + C14004 + C14005 + C14006) * C13225 +
           (C547 * C13223 + C548 * C13227 +
            (C113 * C494 + C31024 * C512) * C13222 +
            (C113 * C482 + C31024 * C495) * C13226) *
               C13224) *
              C1996 +
          (((C113 * C483 + C31024 * C496) * C13226 +
            (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
            C550 * C13223) *
               C13224 +
           (C14397 + C14398 + C14399 + C14400) * C13225) *
              C1997 -
          (((C113 * C2408 + C31024 * C2412) * C13223 +
            (C113 * C2403 + C31024 * C2407) * C13227 + C6773 * C13222 +
            C6774 * C13226) *
               C13225 +
           (C2303 * C13223 + C2304 * C13227 +
            (C113 * C2010 + C31024 * C2020) * C13222 +
            (C113 * C2002 + C31024 * C2011) * C13226) *
               C13224) *
              C1998 +
          (((C113 * C2003 + C31024 * C2012) * C13226 +
            (C113 * C2013 + C31024 * C2021) * C13222 +
            (C113 * C2004 + C31024 * C2014) * C13227 +
            (C113 * C2015 + C31024 * C2022) * C13223) *
               C13224 +
           ((C113 * C6387 + C31024 * C6391) * C13226 +
            (C113 * C6392 + C31024 * C6396) * C13222 +
            (C113 * C10700 + C31024 * C10701) * C13227 +
            (C113 * C10702 + C31024 * C10703) * C13223) *
               C13225) *
              C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31083 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C1074 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31083) *
               C1075 +
           (((C13382 + C13381 + C13380 + C13379) * C13224 +
             (C14243 + C14244 + C14245 + C14246) * C13225) *
                C31083 -
            ((C5990 * C13223 + C5991 * C13227 + C5712 * C13222 +
              C5711 * C13226) *
                 C13225 +
             (C14404 + C14403 + C14402 + C14401) * C13224) *
                C30932) *
               C31111) *
              C31068 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31083) *
               C1074 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31083 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C1075 +
           (((C14740 + C14739 + C14738 + C14737) * C13224 +
             (C5991 * C13226 + C5990 * C13222 +
              (C113 * C1700 + C31024 * C1705) * C13227 +
              (C113 * C1706 + C31024 * C1709) * C13223) *
                 C13225) *
                C30932 -
            ((C14539 + C14540 + C14541 + C14542) * C13225 +
             (C13390 + C13389 + C13388 + C13387) * C13224) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31083 -
           ((C960 * C13223 + C959 * C13227 + C5364 * C13222 + C5365 * C13226) *
                C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C30827 * C656 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C959 * C13226 + C960 * C13222 + C961 * C13227 + C962 * C13223) *
                C13225) *
               C30932 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C31083) *
              C30827 * C657 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C31083 -
           ((C963 * C13223 + C964 * C13227 + C962 * C13222 + C961 * C13226) *
                C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C30932) *
              C30827 * C658 +
          (((C553 * C13226 + C554 * C13222 + C780 * C13227 + C779 * C13223) *
                C13224 +
            (C964 * C13226 + C963 * C13222 +
             (C113 * C930 + C31024 * C939) * C13227 +
             (C113 * C940 + C31024 * C945) * C13223) *
                C13225) *
               C30932 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C2284 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C2285 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C2286 -
           ((C15581 * C13223 + C15582 * C13227 + C6773 * C13222 +
             C6774 * C13226) *
                C13225 +
            (C2303 * C13223 + C2304 * C13227 +
             (C113 * C2010 + C31024 * C2020) * C13222 +
             (C113 * C2002 + C31024 * C2011) * C13226) *
                C13224) *
               C31127) *
              C30827 * C31068 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C2285 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C2284 -
           ((C15443 + C15444 + C15445 + C15446) * C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C2286 +
           ((C2304 * C13226 + C2303 * C13222 + C2302 * C13227 +
             C2301 * C13223) *
                C13224 +
            (C15582 * C13226 + C15581 * C13222 +
             (C113 * C2404 + C31024 * C2409) * C13227 +
             (C113 * C2410 + C31024 * C2413) * C13223) *
                C13225) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31148 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C31136 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C288 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C31136 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31148 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C289 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C31148 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C31136 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C4875 * C13226 + C4876 * C13222 + C359 * C13227 + C358 * C13223) *
               C13225) *
              C30845 * C30827 * C108 -
          ((C356 * C13223 + C357 * C13227 + C358 * C13222 + C359 * C13226) *
               C13225 +
           (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
               C13224) *
              C30845 * C30827 * C109 +
          ((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
               C13224 +
           (C357 * C13226 + C356 * C13222 + C364 * C13227 + C365 * C13223) *
               C13225) *
              C30845 * C30827 * C110 -
          ((C669 * C13223 + C670 * C13227 + C365 * C13222 + C364 * C13226) *
               C13225 +
           (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
               C13224) *
              C30845 * C30827 * C111 +
          ((C172 * C13226 + C173 * C13222 + C175 * C13227 + C174 * C13223) *
               C13224 +
           (C670 * C13226 + C669 * C13222 +
            (C113 * C660 + C31024 * C661) * C13227 +
            (C113 * C662 + C31024 * C663) * C13223) *
               C13225) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C1074 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C1075 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C1075 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C1074 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C1074 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C1075 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C13375 + C13376 + C13377 + C13378) * C13225) *
              C30845 * C1142 -
          ((C13379 + C13380 + C13381 + C13382) * C13225 +
           (C13378 + C13377 + C13376 + C13375) * C13224) *
              C30845 * C1143 +
          ((C13382 + C13381 + C13380 + C13379) * C13224 +
           (C14243 + C14244 + C14245 + C14246) * C13225) *
              C30845 * C1144 -
          ((C14247 + C14248 + C14249 + C14250) * C13225 +
           (C14246 + C14245 + C14244 + C14243) * C13224) *
              C30845 * C1145 +
          ((C14250 + C14249 + C14248 + C14247) * C13224 +
           (C5562 * C13226 + C5561 * C13222 +
            (C113 * C5821 + C31024 * C5822) * C13227 +
            (C113 * C5823 + C31024 * C5824) * C13223) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C1820 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31114) *
              C30827 * C31145 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C1821 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C1820 -
           ((C2183 * C13223 + C2184 * C13227 + C2185 * C13222 +
             C2186 * C13226) *
                C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C31114) *
              C30827 * C31132 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C1820 -
           ((C14011 + C14012 + C14013 + C14014) * C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C1821 +
           ((C551 * C13226 + C552 * C13222 + C556 * C13227 + C555 * C13223) *
                C13224 +
            (C2184 * C13226 + C2183 * C13222 +
             (C113 * C2170 + C31024 * C2171) * C13227 +
             (C113 * C2172 + C31024 * C2173) * C13223) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C1820 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31114) *
              C31148 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C1821 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C1820 -
           ((C14405 + C14406 + C14407 + C14408) * C13225 +
            (C14400 + C14399 + C14398 + C14397) * C13224) *
               C31114) *
              C31136 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C1820 -
           ((C14871 + C14872 + C14873 + C14874) * C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C1821 +
           ((C14408 + C14407 + C14406 + C14405) * C13224 +
            (C5714 * C13226 + C5713 * C13222 +
             (C113 * C6544 + C31024 * C6545) * C13227 +
             (C113 * C6546 + C31024 * C6547) * C13223) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C3274 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C31082 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C3274) *
               C30890) *
              C30804 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C3274) *
               C31082 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C3274 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30890) *
              C30813 +
          ((((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                 C13224 +
             (C13391 + C13392 + C13393 + C13394) * C13225) *
                C3274 -
            ((C14011 + C14012 + C14013 + C14014) * C13225 +
             (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                 C13224) *
                C30932) *
               C31082 +
           (((C14014 + C14013 + C14012 + C14011) * C13224 +
             (C1598 * C13226 + C1597 * C13222 +
              (C113 * C1584 + C31024 * C1585) * C13227 +
              (C113 * C1586 + C31024 * C1587) * C13223) *
                 C13225) *
                C30932 -
            ((C13395 + C13396 + C13397 + C13398) * C13225 +
             (C13394 + C13393 + C13392 + C13391) * C13224) *
                C3274) *
               C30890) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C30928 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30935 +
            (((C113 * C483 + C31024 * C496) * C13226 +
              (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
              C550 * C13223) *
                 C13224 +
             (C14397 + C14398 + C14399 + C14400) * C13225) *
                C3782) *
               C31082 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30935 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C30928 -
            ((C14405 + C14406 + C14407 + C14408) * C13225 +
             (C14400 + C14399 + C14398 + C14397) * C13224) *
                C3782) *
               C30890) *
              C2620 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30935 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C30928 -
            ((C15443 + C15444 + C15445 + C15446) * C13225 +
             (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                 C13224) *
                C3782) *
               C31082 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C30928 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30935 +
            ((C15446 + C15445 + C15444 + C15443) * C13224 +
             (C6556 * C13226 + C6555 * C13222 +
              (C113 * C1290 + C31024 * C1307) * C13227 +
              (C113 * C1308 + C31024 * C1317) * C13223) *
                 C13225) *
                C3782) *
               C30890) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C3274 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C31148 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C3274) *
               C31136 +
           (((C13382 + C13381 + C13380 + C13379) * C13224 +
             (C14243 + C14244 + C14245 + C14246) * C13225) *
                C3274 -
            ((C14871 + C14872 + C14873 + C14874) * C13225 +
             (C14404 + C14403 + C14402 + C14401) * C13224) *
                C30932) *
               C31111) *
              C2620 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C3274) *
               C31148 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C3274 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C31136 +
           (((C14740 + C14739 + C14738 + C14737) * C13224 +
             (C5991 * C13226 + C5990 * C13222 +
              (C113 * C1700 + C31024 * C1705) * C13227 +
              (C113 * C1706 + C31024 * C1709) * C13223) *
                 C13225) *
                C30932 -
            ((C14539 + C14540 + C14541 + C14542) * C13225 +
             (C13390 + C13389 + C13388 + C13387) * C13224) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C3274 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C30827 * C31154 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C30932 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C3274) *
              C30827 * C31147 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C3274 -
           ((C14011 + C14012 + C14013 + C14014) * C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C30932) *
              C30827 * C31134 +
          (((C553 * C13226 + C554 * C13222 + C780 * C13227 + C779 * C13223) *
                C13224 +
            (C964 * C13226 + C963 * C13222 +
             (C113 * C930 + C31024 * C939) * C13227 +
             (C113 * C940 + C31024 * C945) * C13223) *
                C13225) *
               C30932 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31156 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C31153 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31144 -
           ((C15713 + C15714 + C15715 + C15716) * C13225 +
            (C2303 * C13223 + C2304 * C13227 +
             (C113 * C2010 + C31024 * C2020) * C13222 +
             (C113 * C2002 + C31024 * C2011) * C13226) *
                C13224) *
               C31127) *
              C30827 * C2620 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C31153 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C31156 -
           ((C15443 + C15444 + C15445 + C15446) * C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C31144 +
           ((C2304 * C13226 + C2303 * C13222 + C2302 * C13227 +
             C2301 * C13223) *
                C13224 +
            (C15582 * C13226 + C15581 * C13222 +
             (C113 * C2404 + C31024 * C2409) * C13227 +
             (C113 * C2410 + C31024 * C2413) * C13223) *
                C13225) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30928 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30935 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C3782) *
              C30827 * C30804 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C30935 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30928 -
           ((C15443 + C15444 + C15445 + C15446) * C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C3782) *
              C30827 * C30813 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30928 -
           ((C14011 + C14012 + C14013 + C14014) * C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C30935 +
           ((C551 * C13226 + C552 * C13222 + C556 * C13227 + C555 * C13223) *
                C13224 +
            (C2184 * C13226 + C2183 * C13222 +
             (C113 * C2170 + C31024 * C2171) * C13227 +
             (C113 * C2172 + C31024 * C2173) * C13223) *
                C13225) *
               C3782) *
              C30827 * C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C3274 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C30827 * C31154 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C14007 + C14008 + C14009 + C14010) * C13225) *
               C30932 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C3274) *
              C30827 * C31147 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C3274 -
           ((C14011 + C14012 + C14013 + C14014) * C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C30932) *
              C30827 * C31134 +
          (((C553 * C13226 + C554 * C13222 + C780 * C13227 + C779 * C13223) *
                C13224 +
            (C964 * C13226 + C963 * C13222 +
             (C113 * C930 + C31024 * C939) * C13227 +
             (C113 * C940 + C31024 * C945) * C13223) *
                C13225) *
               C30932 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C3274 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C31148 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C3274) *
               C31136 +
           (((C13382 + C13381 + C13380 + C13379) * C13224 +
             (C14243 + C14244 + C14245 + C14246) * C13225) *
                C3274 -
            ((C14871 + C14872 + C14873 + C14874) * C13225 +
             (C14404 + C14403 + C14402 + C14401) * C13224) *
                C30932) *
               C31111) *
              C2620 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C3274) *
               C31148 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C3274 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C31136 +
           (((C14740 + C14739 + C14738 + C14737) * C13224 +
             (C5991 * C13226 + C5990 * C13222 +
              (C113 * C1700 + C31024 * C1705) * C13227 +
              (C113 * C1706 + C31024 * C1709) * C13223) *
                 C13225) *
                C30932 -
            ((C14539 + C14540 + C14541 + C14542) * C13225 +
             (C13390 + C13389 + C13388 + C13387) * C13224) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31082 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C30890) *
              C656 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C30890 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31082) *
              C657 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C31082 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C30890) *
              C658 +
          (((C13675 + C13676 + C13677 + C13678) * C13224 +
            (C367 * C13226 + C366 * C13222 +
             (C113 * C300 + C31024 * C319) * C13227 +
             (C113 * C320 + C31024 * C330) * C13223) *
                C13225) *
               C30845 * C30890 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C1416 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C1417 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C30845 * C1418 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C30845 * C31121) *
              C31068 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C1417 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C1416 -
           ((C14539 + C14540 + C14541 + C14542) * C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C1418 +
           ((C14542 + C14541 + C14540 + C14539) * C13224 +
            (C5832 * C13226 + C5831 * C13222 +
             (C113 * C1153 + C31024 * C1164) * C13227 +
             (C113 * C1165 + C31024 * C1171) * C13223) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31083 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C31082 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C5363 * C13226 + C5362 * C13222 + C1600 * C13227 +
              C1599 * C13223) *
                 C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31083) *
               C30890) *
              C288 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31083) *
               C31082 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31083 -
            ((C1597 * C13223 + C1598 * C13227 + C1599 * C13222 +
              C1600 * C13226) *
                 C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C30890) *
              C289 +
          ((((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                 C13224 +
             (C13391 + C13392 + C13393 + C13394) * C13225) *
                C31083 -
            ((C14011 + C14012 + C14013 + C14014) * C13225 +
             (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                 C13224) *
                C30932) *
               C31082 +
           (((C14014 + C14013 + C14012 + C14011) * C13224 +
             (C1598 * C13226 + C1597 * C13222 +
              (C113 * C1584 + C31024 * C1585) * C13227 +
              (C113 * C1586 + C31024 * C1587) * C13223) *
                 C13225) *
                C30932 -
            ((C13395 + C13396 + C13397 + C13398) * C13225 +
             (C13394 + C13393 + C13392 + C13391) * C13224) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31083 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C1416 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C30932 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C31083) *
              C1417 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C31083 -
           ((C14871 + C14872 + C14873 + C14874) * C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C30932) *
              C1418 +
          (((C14874 + C14873 + C14872 + C14871) * C13224 +
            (C6102 * C13226 + C6101 * C13222 +
             (C113 * C5980 + C31024 * C5981) * C13227 +
             (C113 * C5982 + C31024 * C5983) * C13223) *
                C13225) *
               C30932 -
           ((C14247 + C14248 + C14249 + C14250) * C13225 +
            (C14246 + C14245 + C14244 + C14243) * C13224) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31148 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C31136 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C288 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C31136 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31148 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C289 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C31148 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C31136 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C4875 * C13226 + C4876 * C13222 + C359 * C13227 + C358 * C13223) *
               C13225) *
              C30845 * C30827 * C108 -
          ((C356 * C13223 + C357 * C13227 + C358 * C13222 + C359 * C13226) *
               C13225 +
           (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
               C13224) *
              C30845 * C30827 * C109 +
          ((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
               C13224 +
           (C357 * C13226 + C356 * C13222 + C364 * C13227 + C365 * C13223) *
               C13225) *
              C30845 * C30827 * C110 -
          ((C669 * C13223 + C670 * C13227 + C365 * C13222 + C364 * C13226) *
               C13225 +
           (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
               C13224) *
              C30845 * C30827 * C111 +
          ((C172 * C13226 + C173 * C13222 + C175 * C13227 + C174 * C13223) *
               C13224 +
           (C670 * C13226 + C669 * C13222 +
            (C113 * C660 + C31024 * C661) * C13227 +
            (C113 * C662 + C31024 * C663) * C13223) *
               C13225) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31149 -
           ((C960 * C13223 + C959 * C13227 + C5364 * C13222 + C5365 * C13226) *
                C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C5707 * C13226 + C5708 * C13222 + C2186 * C13227 +
             C2185 * C13223) *
                C13225) *
               C31114) *
              C30827 * C288 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C959 * C13226 + C960 * C13222 + C961 * C13227 + C962 * C13223) *
                C13225) *
               C31138 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C31149 -
           ((C2183 * C13223 + C2184 * C13227 + C2185 * C13222 +
             C2186 * C13226) *
                C13225 +
            (C552 * C13223 + C551 * C13227 + C550 * C13222 + C549 * C13226) *
                C13224) *
               C31114) *
              C30827 * C289 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C31149 -
           ((C963 * C13223 + C964 * C13227 + C962 * C13222 + C961 * C13226) *
                C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C31138 +
           ((C551 * C13226 + C552 * C13222 + C556 * C13227 + C555 * C13223) *
                C13224 +
            (C2184 * C13226 + C2183 * C13222 +
             (C113 * C2170 + C31024 * C2171) * C13227 +
             (C113 * C2172 + C31024 * C2173) * C13223) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C1074 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C1075 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C1075 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C1074 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C1074 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C1075 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C13375 + C13376 + C13377 + C13378) * C13225) *
              C30845 * C1142 -
          ((C13379 + C13380 + C13381 + C13382) * C13225 +
           (C13378 + C13377 + C13376 + C13375) * C13224) *
              C30845 * C1143 +
          ((C13382 + C13381 + C13380 + C13379) * C13224 +
           (C14243 + C14244 + C14245 + C14246) * C13225) *
              C30845 * C1144 -
          ((C14247 + C14248 + C14249 + C14250) * C13225 +
           (C14246 + C14245 + C14244 + C14243) * C13224) *
              C30845 * C1145 +
          ((C14250 + C14249 + C14248 + C14247) * C13224 +
           (C5562 * C13226 + C5561 * C13222 +
            (C113 * C5821 + C31024 * C5822) * C13227 +
            (C113 * C5823 + C31024 * C5824) * C13223) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31149 -
           ((C14003 + C14004 + C14005 + C14006) * C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C13226 +
             (C113 * C497 + C31024 * C513) * C13222 + C549 * C13227 +
             C550 * C13223) *
                C13224 +
            (C14397 + C14398 + C14399 + C14400) * C13225) *
               C31114) *
              C1074 +
          (((C14006 + C14005 + C14004 + C14003) * C13224 +
            (C14401 + C14402 + C14403 + C14404) * C13225) *
               C31138 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C31149 -
           ((C14405 + C14406 + C14407 + C14408) * C13225 +
            (C14400 + C14399 + C14398 + C14397) * C13224) *
               C31114) *
              C1075 +
          (((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C14243 + C14244 + C14245 + C14246) * C13225) *
               C31149 -
           ((C5990 * C13223 + C5991 * C13227 + C5712 * C13222 +
             C5711 * C13226) *
                C13225 +
            (C14404 + C14403 + C14402 + C14401) * C13224) *
               C31138 +
           ((C14408 + C14407 + C14406 + C14405) * C13224 +
            (C5714 * C13226 + C5713 * C13222 +
             (C113 * C6544 + C31024 * C6545) * C13227 +
             (C113 * C6546 + C31024 * C6547) * C13223) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C31083 -
           ((C960 * C13223 + C959 * C13227 + C5364 * C13222 + C5365 * C13226) *
                C13225 +
            (C547 * C13223 + C548 * C13227 +
             (C113 * C494 + C31024 * C512) * C13222 +
             (C113 * C482 + C31024 * C495) * C13226) *
                C13224) *
               C30932) *
              C30827 * C656 +
          (((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                C13224 +
            (C959 * C13226 + C960 * C13222 + C961 * C13227 + C962 * C13223) *
                C13225) *
               C30932 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C31083) *
              C30827 * C657 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C31083 -
           ((C963 * C13223 + C964 * C13227 + C962 * C13222 + C961 * C13226) *
                C13225 +
            (C554 * C13223 + C553 * C13227 + C545 * C13222 + C546 * C13226) *
                C13224) *
               C30932) *
              C30827 * C658 +
          (((C553 * C13226 + C554 * C13222 + C780 * C13227 + C779 * C13223) *
                C13224 +
            (C964 * C13226 + C963 * C13222 +
             (C113 * C930 + C31024 * C939) * C13227 +
             (C113 * C940 + C31024 * C945) * C13223) *
                C13225) *
               C30932 -
           ((C13678 + C13677 + C13676 + C13675) * C13225 +
            (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
                C13224) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C13226 +
              (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
              C167 * C13223) *
                 C13224 +
             (C13375 + C13376 + C13377 + C13378) * C13225) *
                C31083 -
            ((C14003 + C14004 + C14005 + C14006) * C13225 +
             (C547 * C13223 + C548 * C13227 +
              (C113 * C494 + C31024 * C512) * C13222 +
              (C113 * C482 + C31024 * C495) * C13226) *
                 C13224) *
                C30932) *
               C1074 +
           (((C14006 + C14005 + C14004 + C14003) * C13224 +
             (C14401 + C14402 + C14403 + C14404) * C13225) *
                C30932 -
            ((C13379 + C13380 + C13381 + C13382) * C13225 +
             (C13378 + C13377 + C13376 + C13375) * C13224) *
                C31083) *
               C1075 +
           (((C13382 + C13381 + C13380 + C13379) * C13224 +
             (C14243 + C14244 + C14245 + C14246) * C13225) *
                C31083 -
            ((C5990 * C13223 + C5991 * C13227 + C5712 * C13222 +
              C5711 * C13226) *
                 C13225 +
             (C14404 + C14403 + C14402 + C14401) * C13224) *
                C30932) *
               C31111) *
              C31068 +
          ((((C548 * C13226 + C547 * C13222 + C546 * C13227 + C545 * C13223) *
                 C13224 +
             (C14007 + C14008 + C14009 + C14010) * C13225) *
                C30932 -
            ((C13386 + C13385 + C13384 + C13383) * C13225 +
             (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                 C13224) *
                C31083) *
               C1074 +
           (((C13383 + C13384 + C13385 + C13386) * C13224 +
             (C13387 + C13388 + C13389 + C13390) * C13225) *
                C31083 -
            ((C14737 + C14738 + C14739 + C14740) * C13225 +
             (C14010 + C14009 + C14008 + C14007) * C13224) *
                C30932) *
               C1075 +
           (((C14740 + C14739 + C14738 + C14737) * C13224 +
             (C5991 * C13226 + C5990 * C13222 +
              (C113 * C1700 + C31024 * C1705) * C13227 +
              (C113 * C1706 + C31024 * C1709) * C13223) *
                 C13225) *
                C30932 -
            ((C14539 + C14540 + C14541 + C14542) * C13225 +
             (C13390 + C13389 + C13388 + C13387) * C13224) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C4875 * C13226 + C4876 * C13222 + C359 * C13227 + C358 * C13223) *
               C13225) *
              C30845 * C30827 * C108 -
          ((C356 * C13223 + C357 * C13227 + C358 * C13222 + C359 * C13226) *
               C13225 +
           (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
               C13224) *
              C30845 * C30827 * C109 +
          ((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
               C13224 +
           (C357 * C13226 + C356 * C13222 + C364 * C13227 + C365 * C13223) *
               C13225) *
              C30845 * C30827 * C110 -
          ((C669 * C13223 + C670 * C13227 + C365 * C13222 + C364 * C13226) *
               C13225 +
           (C173 * C13223 + C172 * C13227 + C170 * C13222 + C171 * C13226) *
               C13224) *
              C30845 * C30827 * C111 +
          ((C172 * C13226 + C173 * C13222 + C175 * C13227 + C174 * C13223) *
               C13224 +
           (C670 * C13226 + C669 * C13222 +
            (C113 * C660 + C31024 * C661) * C13227 +
            (C113 * C662 + C31024 * C663) * C13223) *
               C13225) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C31148 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C31136 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C288 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C31136 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C31148 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C289 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C31148 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C31136 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C13226 +
             (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
             C167 * C13223) *
                C13224 +
            (C13375 + C13376 + C13377 + C13378) * C13225) *
               C30845 * C1074 -
           ((C13379 + C13380 + C13381 + C13382) * C13225 +
            (C13378 + C13377 + C13376 + C13375) * C13224) *
               C30845 * C1075 +
           ((C13382 + C13381 + C13380 + C13379) * C13224 +
            (C4880 * C13226 + C4879 * C13222 + C1438 * C13227 +
             C1437 * C13223) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          (((C13383 + C13384 + C13385 + C13386) * C13224 +
            (C13387 + C13388 + C13389 + C13390) * C13225) *
               C30845 * C1075 -
           ((C13386 + C13385 + C13384 + C13383) * C13225 +
            (C169 * C13223 + C168 * C13227 + C167 * C13222 + C166 * C13226) *
                C13224) *
               C30845 * C1074 -
           ((C1435 * C13223 + C1436 * C13227 + C1437 * C13222 +
             C1438 * C13226) *
                C13225 +
            (C13390 + C13389 + C13388 + C13387) * C13224) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C13226 + C169 * C13222 + C171 * C13227 + C170 * C13223) *
                C13224 +
            (C13391 + C13392 + C13393 + C13394) * C13225) *
               C30845 * C1074 -
           ((C13395 + C13396 + C13397 + C13398) * C13225 +
            (C13394 + C13393 + C13392 + C13391) * C13224) *
               C30845 * C1075 +
           ((C13398 + C13397 + C13396 + C13395) * C13224 +
            (C1436 * C13226 + C1435 * C13222 +
             (C113 * C1422 + C31024 * C1423) * C13227 +
             (C113 * C1424 + C31024 * C1425) * C13223) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C13226 +
            (C113 * C125 + C31024 * C138) * C13222 + C166 * C13227 +
            C167 * C13223) *
               C13224 +
           (C13375 + C13376 + C13377 + C13378) * C13225) *
              C30845 * C1142 -
          ((C13379 + C13380 + C13381 + C13382) * C13225 +
           (C13378 + C13377 + C13376 + C13375) * C13224) *
              C30845 * C1143 +
          ((C13382 + C13381 + C13380 + C13379) * C13224 +
           (C14243 + C14244 + C14245 + C14246) * C13225) *
              C30845 * C1144 -
          ((C14247 + C14248 + C14249 + C14250) * C13225 +
           (C14246 + C14245 + C14244 + C14243) * C13224) *
              C30845 * C1145 +
          ((C14250 + C14249 + C14248 + C14247) * C13224 +
           (C5562 * C13226 + C5561 * C13222 +
            (C113 * C5821 + C31024 * C5822) * C13227 +
            (C113 * C5823 + C31024 * C5824) * C13223) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C30886 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C30893 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C30845 * C2880) *
              C30804 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C30893 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C30886 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C2880) *
              C30813 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C30886 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C30893 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C2880) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31083 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C30886 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31083) *
               C30893 +
           ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
             ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) *
                 C13225) *
                C31083 -
            (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
             ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) *
                 C13224) *
                C30932) *
               C2880) *
              C2620 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31083) *
               C30886 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31083 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30893 +
           ((((C20426 + C20425) * C4739 + (C20424 + C20423) * C30775) * C13224 +
             ((C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
               C18763 * C6545) *
                  C4739 +
              (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
               C18763 * C6547) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
             ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                 C13224) *
                C31083) *
               C2880) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31155 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C31151 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C30845 * C31141 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C30845 * C31121) *
              C2620 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C31151 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31155 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31141 +
           (((C20220 + C20219) * C4739 + (C20218 + C20217) * C30775) * C13224 +
            ((C18764 * C1152 + C18762 * C1162 + C18765 * C5980 +
              C18763 * C5981) *
                 C4739 +
             (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 +
              C18763 * C5983) *
                 C30775) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C2512 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C30890) *
              C31154 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C30890 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C2512) *
              C31147 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C2512 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C30890) *
              C31134 +
          ((((C19344 + C19343) * C4739 + (C19342 + C19341) * C30775) * C13224 +
            ((C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                 C4739 +
             (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                 C30775) *
                C13225) *
               C30845 * C30890 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31149 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C31138 +
            (((C18764 * C483 + C18762 * C496 + C18765 * C2002 +
               C18763 * C2011) *
                  C4739 +
              (C18764 * C497 + C18762 * C513 + C18765 * C2010 +
               C18763 * C2020) *
                  C30775) *
                 C13224 +
             ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) *
                 C13225) *
                C31114) *
               C2512 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C31138 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31149 -
            (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
             ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) *
                 C13224) *
                C31114) *
               C30890) *
              C2620 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C31138 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31149 -
            (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
             ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) *
                 C13224) *
                C31114) *
               C2512 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31149 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C31138 +
            (((C21136 + C21135) * C4739 + (C21134 + C21133) * C30775) * C13224 +
             ((C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
               C18763 * C6657) *
                  C4739 +
              (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
               C18763 * C6659) *
                  C30775) *
                 C13225) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31083 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C2512 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31083) *
               C30890) *
              C30804 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31083) *
               C2512 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31083 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30890) *
              C30813 +
          (((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
             ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                 C13225) *
                C31083 -
            (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
             ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) *
                 C13224) *
                C30932) *
               C2512 +
           ((((C19704 + C19703) * C4739 + (C19702 + C19701) * C30775) * C13224 +
             ((C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
               C18763 * C1307) *
                  C4739 +
              (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
               C18763 * C1317) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
             ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                 C13224) *
                C31083) *
               C30890) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C2512 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C30890) *
              C31154 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C30890 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C2512) *
              C31147 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C2512 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C30890) *
              C31134 +
          ((((C19344 + C19343) * C4739 + (C19342 + C19341) * C30775) * C13224 +
            ((C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                 C4739 +
             (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                 C30775) *
                C13225) *
               C30845 * C30890 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31155 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C31151 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C30845 * C31141 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C30845 * C31121) *
              C2620 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C31151 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31155 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31141 +
           (((C20220 + C20219) * C4739 + (C20218 + C20217) * C30775) * C13224 +
            ((C18764 * C1152 + C18762 * C1162 + C18765 * C5980 +
              C18763 * C5981) *
                 C4739 +
             (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 +
              C18763 * C5983) *
                 C30775) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C3274 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C30886 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C3274) *
               C30893 +
           ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
             ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) *
                 C13225) *
                C3274 -
            (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
             ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) *
                 C13224) *
                C30932) *
               C2880) *
              C31068 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C3274) *
               C30886 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C3274 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30893 +
           ((((C20426 + C20425) * C4739 + (C20424 + C20423) * C30775) * C13224 +
             ((C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
               C18763 * C6545) *
                  C4739 +
              (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
               C18763 * C6547) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
             ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                 C13224) *
                C3274) *
               C2880) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30928 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30935 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C3782) *
              C30886 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C30935 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30928 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C3782) *
              C30893 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C30928 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C30935 +
           (((C25670 + C25669) * C4739 + (C25668 + C25667) * C30775) * C13224 +
            ((C18764 * C5677 + C18762 * C5681 + C18765 * C6758 +
              C18763 * C6759) *
                 C4739 +
             (C18764 * C5680 + C18762 * C5686 + C18765 * C6760 +
              C18763 * C6761) *
                 C30775) *
                C13225) *
               C3782) *
              C2880) *
         C30799) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C3274 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C31155 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C30932 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C3274) *
              C31151 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C3274 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C30932) *
              C31141 +
          ((((C26136 + C26135) * C4739 + (C26134 + C26133) * C30775) * C13224 +
            ((C18764 * C5678 + C18762 * C5683 + C18765 * C5679 +
              C18763 * C5684) *
                 C4739 +
             (C18764 * C5682 + C18762 * C5687 + C18765 * C5685 +
              C18763 * C5688) *
                 C30775) *
                C13225) *
               C30932 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C3274 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C2512 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C3274) *
               C30890) *
              C31145 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C3274) *
               C2512 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C3274 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30890) *
              C31132 +
          (((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
             ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                 C13225) *
                C3274 -
            (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
             ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) *
                 C13224) *
                C30932) *
               C2512 +
           ((((C19704 + C19703) * C4739 + (C19702 + C19701) * C30775) * C13224 +
             ((C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
               C18763 * C1307) *
                  C4739 +
              (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
               C18763 * C1317) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
             ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                 C13224) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31156 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C31153 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31144 -
           (((C26973 + C26974) * C30775 + (C26975 + C26976) * C4739) * C13225 +
            ((C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
              C18762 * C2020) *
                 C30775 +
             (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
              C18762 * C2011) *
                 C4739) *
                C13224) *
               C31127) *
              C2512 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C31153 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C31156 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C31144 +
           (((C26976 + C26975) * C4739 + (C26974 + C26973) * C30775) * C13224 +
            ((C18764 * C6386 + C18762 * C6390 + C18765 * C6388 +
              C18763 * C6393) *
                 C4739 +
             (C18764 * C6389 + C18762 * C6395 + C18765 * C6394 +
              C18763 * C6397) *
                 C30775) *
                C13225) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C30928 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30935 +
            (((C18764 * C483 + C18762 * C496 + C18765 * C2002 +
               C18763 * C2011) *
                  C4739 +
              (C18764 * C497 + C18762 * C513 + C18765 * C2010 +
               C18763 * C2020) *
                  C30775) *
                 C13224 +
             ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) *
                 C13225) *
                C3782) *
               C2512 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30935 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C30928 -
            (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
             ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) *
                 C13224) *
                C3782) *
               C30890) *
              C31068 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30935 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C30928 -
            (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
             ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) *
                 C13224) *
                C3782) *
               C2512 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C30928 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30935 +
            (((C21136 + C21135) * C4739 + (C21134 + C21133) * C30775) * C13224 +
             ((C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
               C18763 * C6657) *
                  C4739 +
              (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
               C18763 * C6659) *
                  C30775) *
                 C13225) *
                C3782) *
               C30890) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C3274 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C2512 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C3274) *
               C30890) *
              C31145 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C3274) *
               C2512 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C3274 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30890) *
              C31132 +
          (((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
             ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                 C13225) *
                C3274 -
            (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
             ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) *
                 C13224) *
                C30932) *
               C2512 +
           ((((C19704 + C19703) * C4739 + (C19702 + C19701) * C30775) * C13224 +
             ((C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
               C18763 * C1307) *
                  C4739 +
              (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
               C18763 * C1317) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
             ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                 C13224) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C3274 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C31155 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C30932 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C3274) *
              C31151 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C3274 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C30932) *
              C31141 +
          ((((C26136 + C26135) * C4739 + (C26134 + C26133) * C30775) * C13224 +
            ((C18764 * C5678 + C18762 * C5683 + C18765 * C5679 +
              C18763 * C5684) *
                 C4739 +
             (C18764 * C5682 + C18762 * C5687 + C18765 * C5685 +
              C18763 * C5688) *
                 C30775) *
                C13225) *
               C30932 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C1416 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C1417 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C30845 * C1418 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C30845 * C31121) *
              C31068 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C1417 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C1416 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C1418 +
           (((C20220 + C20219) * C4739 + (C20218 + C20217) * C30775) * C13224 +
            ((C18764 * C1152 + C18762 * C1162 + C18765 * C5980 +
              C18763 * C5981) *
                 C4739 +
             (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 +
              C18763 * C5983) *
                 C30775) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31082 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C30890) *
              C656 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C30890 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31082) *
              C657 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C31082 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C30890) *
              C658 +
          ((((C19344 + C19343) * C4739 + (C19342 + C19341) * C30775) * C13224 +
            ((C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                 C4739 +
             (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                 C30775) *
                C13225) *
               C30845 * C30890 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C1820 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C1821 +
            (((C18764 * C483 + C18762 * C496 + C18765 * C2002 +
               C18763 * C2011) *
                  C4739 +
              (C18764 * C497 + C18762 * C513 + C18765 * C2010 +
               C18763 * C2020) *
                  C30775) *
                 C13224 +
             ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) *
                 C13225) *
                C31114) *
               C31082 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C1821 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C1820 -
            (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
             ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) *
                 C13224) *
                C31114) *
               C30890) *
              C31068 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C1821 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C1820 -
            (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
             ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) *
                 C13224) *
                C31114) *
               C31082 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C1820 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C1821 +
            (((C21136 + C21135) * C4739 + (C21134 + C21133) * C30775) * C13224 +
             ((C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
               C18763 * C6657) *
                  C4739 +
              (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
               C18763 * C6659) *
                  C30775) *
                 C13225) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31083 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C1416 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C30932 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C31083) *
              C1417 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C31083 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C30932) *
              C1418 +
          ((((C26136 + C26135) * C4739 + (C26134 + C26133) * C30775) * C13224 +
            ((C18764 * C5678 + C18762 * C5683 + C18765 * C5679 +
              C18763 * C5684) *
                 C4739 +
             (C18764 * C5682 + C18762 * C5687 + C18765 * C5685 +
              C18763 * C5688) *
                 C30775) *
                C13225) *
               C30932 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31083 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C31082 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C18764 * C1287 + C18762 * C1302 + C18765 * C1288 +
               C18763 * C1303) *
                  C4739 +
              (C18764 * C1301 + C18762 * C1314 + C18765 * C1304 +
               C18763 * C1315) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31083) *
               C30890) *
              C288 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31083) *
               C31082 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31083 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30890) *
              C289 +
          (((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
             ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                 C13225) *
                C31083 -
            (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
             ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) *
                 C13224) *
                C30932) *
               C31082 +
           ((((C19704 + C19703) * C4739 + (C19702 + C19701) * C30775) * C13224 +
             ((C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
               C18763 * C1307) *
                  C4739 +
              (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
               C18763 * C1317) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
             ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                 C13224) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C2284 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C2285 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C2286 -
           (((C26973 + C26974) * C30775 + (C26975 + C26976) * C4739) * C13225 +
            ((C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
              C18762 * C2020) *
                 C30775 +
             (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
              C18762 * C2011) *
                 C4739) *
                C13224) *
               C31127) *
              C31082 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C2285 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C2284 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C2286 +
           (((C26976 + C26975) * C4739 + (C26974 + C26973) * C30775) * C13224 +
            ((C18764 * C6386 + C18762 * C6390 + C18765 * C6388 +
              C18763 * C6393) *
                 C4739 +
             (C18764 * C6389 + C18762 * C6395 + C18765 * C6394 +
              C18763 * C6397) *
                 C30775) *
                C13225) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18764 * C117 + C18762 * C124 + C18765 * C482 +
                 C18763 * C495) *
                    C4739 +
                (C18764 * C125 + C18762 * C138 + C18765 * C494 +
                 C18763 * C512) *
                    C30775) *
                   C13224 +
               ((C18764 * C293 + C18762 * C306 + C18765 * C926 +
                 C18763 * C931) *
                    C4739 +
                (C18764 * C305 + C18762 * C323 + C18765 * C932 +
                 C18763 * C941) *
                    C30775) *
                   C13225) *
                  C30845 * C30827 * C108 -
              (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) *
                   C13225 +
               ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                   C13224) *
                  C30845 * C30827 * C109 +
              (((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) *
                   C13224 +
               ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                   C13225) *
                  C30845 * C30827 * C110 -
              (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) *
                   C13225 +
               ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) *
                   C13224) *
                  C30845 * C30827 * C111 +
              (((C18814 + C18813) * C4739 + (C18812 + C18811) * C30775) *
                   C13224 +
               ((C18764 * C299 + C18762 * C318 + C18765 * C930 +
                 C18763 * C939) *
                    C4739 +
                (C18764 * C317 + C18762 * C329 + C18765 * C940 +
                 C18763 * C945) *
                    C30775) *
                   C13225) *
                  C30845 * C30827 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C18764 * C117 + C18762 * C124 + C18765 * C482 +
                  C18763 * C495) *
                     C4739 +
                 (C18764 * C125 + C18762 * C138 + C18765 * C494 +
                  C18763 * C512) *
                     C30775) *
                    C13224 +
                ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                    C13225) *
                   C30845 * C31148 -
               (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) *
                    C13225 +
                ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                    C13224) *
                   C30845 * C31136 +
               (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) *
                    C13224 +
                ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
                  C18763 * C1701) *
                     C4739 +
                 (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
                  C18763 * C1707) *
                     C30775) *
                    C13225) *
                   C30845 * C31111) *
                  C288 +
              ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) *
                    C13224 +
                ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                    C13225) *
                   C30845 * C31136 -
               (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) *
                    C13225 +
                ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                    C13224) *
                   C30845 * C31148 -
               (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) *
                    C13225 +
                ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                    C13224) *
                   C30845 * C31111) *
                  C289 +
              ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) *
                    C13224 +
                ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                    C13225) *
                   C30845 * C31148 -
               (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) *
                    C13225 +
                ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                    C13224) *
                   C30845 * C31136 +
               (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) *
                    C13224 +
                ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
                  C18763 * C1705) *
                     C4739 +
                 (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
                  C18763 * C1709) *
                     C30775) *
                    C13225) *
                   C30845 * C31111) *
                  C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31149 -
           (((C18765 * C1295 + C18763 * C1311 + C18764 * C932 + C18762 * C941) *
                 C30775 +
             (C18765 * C1284 + C18763 * C1296 + C18764 * C926 + C18762 * C931) *
                 C4739) *
                C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C31138 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C18764 * C1284 + C18762 * C1296 + C18765 * C2402 +
              C18763 * C2405) *
                 C4739 +
             (C18764 * C1295 + C18762 * C1311 + C18765 * C2406 +
              C18763 * C2411) *
                 C30775) *
                C13225) *
               C31114) *
              C30827 * C288 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C31138 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C31149 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C31114) *
              C30827 * C289 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C31149 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C31138 +
           (((C19202 + C19201) * C4739 + (C19200 + C19199) * C30775) * C13224 +
            ((C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C4739 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C30775) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C1074 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C1075 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C1075 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C1074 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C31132 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C1074 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C1075 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
              C30845 * C1142 -
          (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
           ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
              C30845 * C1143 +
          (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
           ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
              C30845 * C1144 -
          (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
           ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
              C30845 * C1145 +
          (((C25488 + C25487) * C4739 + (C25486 + C25485) * C30775) * C13224 +
           ((C18764 * C5541 + C18762 * C5544 + C18765 * C6091 +
             C18763 * C6092) *
                C4739 +
            (C18764 * C5543 + C18762 * C5547 + C18765 * C6093 +
             C18763 * C6094) *
                C30775) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31149 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C31138 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31114) *
              C1074 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C31138 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C31149 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C31114) *
              C1075 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C31149 -
           (((C18765 * C5680 + C18763 * C5686 + C18764 * C1702 +
              C18762 * C1707) *
                 C30775 +
             (C18765 * C5677 + C18763 * C5681 + C18764 * C1698 +
              C18762 * C1701) *
                 C4739) *
                C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C31138 +
           (((C25670 + C25669) * C4739 + (C25668 + C25667) * C30775) * C13224 +
            ((C18764 * C5677 + C18762 * C5681 + C18765 * C6758 +
              C18763 * C6759) *
                 C4739 +
             (C18764 * C5680 + C18762 * C5686 + C18765 * C6760 +
              C18763 * C6761) *
                 C30775) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C1820 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C1821 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31114) *
              C30827 * C31145 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C1821 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C1820 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C31114) *
              C30827 * C31132 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C1820 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C1821 +
           (((C19202 + C19201) * C4739 + (C19200 + C19199) * C30775) * C13224 +
            ((C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C4739 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C30775) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C1820 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C1821 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31114) *
              C31148 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C1821 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C1820 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C31114) *
              C31136 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C1820 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C1821 +
           (((C25670 + C25669) * C4739 + (C25668 + C25667) * C30775) * C13224 +
            ((C18764 * C5677 + C18762 * C5681 + C18765 * C6758 +
              C18763 * C6759) *
                 C4739 +
             (C18764 * C5680 + C18762 * C5686 + C18765 * C6760 +
              C18763 * C6761) *
                 C30775) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
              C1995 -
          (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
           ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C30775 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C4739) *
               C13224) *
              C1996 +
          (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C4739 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C30775) *
               C13224 +
           ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
              C1997 -
          (((C18765 * C6392 + C18763 * C6396 + C18764 * C2406 +
             C18762 * C2411) *
                C30775 +
            (C18765 * C6387 + C18763 * C6391 + C18764 * C2402 +
             C18762 * C2405) *
                C4739) *
               C13225 +
           ((C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
             C18762 * C2020) *
                C30775 +
            (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
             C18762 * C2011) *
                C4739) *
               C13224) *
              C1998 +
          (((C18764 * C2003 + C18762 * C2012 + C18765 * C10546 +
             C18763 * C10549) *
                C4739 +
            (C18764 * C2013 + C18762 * C2021 + C18765 * C10548 +
             C18763 * C10552) *
                C30775) *
               C13224 +
           ((C18764 * C6387 + C18762 * C6391 + C18765 * C10904 +
             C18763 * C10905) *
                C4739 +
            (C18764 * C6392 + C18762 * C6396 + C18765 * C10906 +
             C18763 * C10907) *
                C30775) *
               C13225) *
              C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31083 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C1074 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31083) *
               C1075 +
           ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
             ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) *
                 C13225) *
                C31083 -
            (((C18765 * C5680 + C18763 * C5686 + C18764 * C1702 +
               C18762 * C1707) *
                  C30775 +
              (C18765 * C5677 + C18763 * C5681 + C18764 * C1698 +
               C18762 * C1701) *
                  C4739) *
                 C13225 +
             ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) *
                 C13224) *
                C30932) *
               C31111) *
              C31068 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31083) *
               C1074 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31083 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C1075 +
           ((((C20426 + C20425) * C4739 + (C20424 + C20423) * C30775) * C13224 +
             ((C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
               C18763 * C6545) *
                  C4739 +
              (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
               C18763 * C6547) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
             ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                 C13224) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31083 -
           (((C18765 * C1295 + C18763 * C1311 + C18764 * C932 + C18762 * C941) *
                 C30775 +
             (C18765 * C1284 + C18763 * C1296 + C18764 * C926 + C18762 * C931) *
                 C4739) *
                C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C30827 * C656 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C30932 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C31083) *
              C30827 * C657 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C31083 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C30932) *
              C30827 * C658 +
          ((((C19486 + C19485) * C4739 + (C19484 + C19483) * C30775) * C13224 +
            ((C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C4739 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C30775) *
                C13225) *
               C30932 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C2284 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C2285 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C2286 -
           (((C18765 * C6392 + C18763 * C6396 + C18764 * C2406 +
              C18762 * C2411) *
                 C30775 +
             (C18765 * C6387 + C18763 * C6391 + C18764 * C2402 +
              C18762 * C2405) *
                 C4739) *
                C13225 +
            ((C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
              C18762 * C2020) *
                 C30775 +
             (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
              C18762 * C2011) *
                 C4739) *
                C13224) *
               C31127) *
              C30827 * C31068 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C2285 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C2284 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C2286 +
           (((C21278 + C21277) * C4739 + (C21276 + C21275) * C30775) * C13224 +
            ((C18764 * C2403 + C18762 * C2407 + C18765 * C10700 +
              C18763 * C10701) *
                 C4739 +
             (C18764 * C2408 + C18762 * C2412 + C18765 * C10702 +
              C18763 * C10703) *
                 C30775) *
                C13225) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31148 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C31136 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C288 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C31136 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31148 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C289 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C31148 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C31136 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C18764 * C293 + C18762 * C306 + C18765 * C926 + C18763 * C931) *
                C4739 +
            (C18764 * C305 + C18762 * C323 + C18765 * C932 + C18763 * C941) *
                C30775) *
               C13225) *
              C30845 * C30827 * C108 -
          (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
           ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
              C30845 * C30827 * C109 +
          (((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
           ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
              C30845 * C30827 * C110 -
          (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
           ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
              C30845 * C30827 * C111 +
          (((C18814 + C18813) * C4739 + (C18812 + C18811) * C30775) * C13224 +
           ((C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C4739 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C30775) *
               C13225) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C1074 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C1075 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C1075 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C1074 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C31132 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C1074 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C1075 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
              C30845 * C1142 -
          (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
           ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
              C30845 * C1143 +
          (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
           ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
              C30845 * C1144 -
          (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
           ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
              C30845 * C1145 +
          (((C25488 + C25487) * C4739 + (C25486 + C25485) * C30775) * C13224 +
           ((C18764 * C5541 + C18762 * C5544 + C18765 * C6091 +
             C18763 * C6092) *
                C4739 +
            (C18764 * C5543 + C18762 * C5547 + C18765 * C6093 +
             C18763 * C6094) *
                C30775) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C1820 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C1821 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31114) *
              C30827 * C31145 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C1821 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C1820 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C31114) *
              C30827 * C31132 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C1820 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C1821 +
           (((C19202 + C19201) * C4739 + (C19200 + C19199) * C30775) * C13224 +
            ((C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C4739 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C30775) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C1820 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C1821 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31114) *
              C31148 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C1821 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C1820 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C31114) *
              C31136 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C1820 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C1821 +
           (((C25670 + C25669) * C4739 + (C25668 + C25667) * C30775) * C13224 +
            ((C18764 * C5677 + C18762 * C5681 + C18765 * C6758 +
              C18763 * C6759) *
                 C4739 +
             (C18764 * C5680 + C18762 * C5686 + C18765 * C6760 +
              C18763 * C6761) *
                 C30775) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C3274 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C31082 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C3274) *
               C30890) *
              C30804 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C3274) *
               C31082 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C3274 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30890) *
              C30813 +
          (((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
             ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                 C13225) *
                C3274 -
            (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
             ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) *
                 C13224) *
                C30932) *
               C31082 +
           ((((C19704 + C19703) * C4739 + (C19702 + C19701) * C30775) * C13224 +
             ((C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
               C18763 * C1307) *
                  C4739 +
              (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
               C18763 * C1317) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
             ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                 C13224) *
                C3274) *
               C30890) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C30928 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30935 +
            (((C18764 * C483 + C18762 * C496 + C18765 * C2002 +
               C18763 * C2011) *
                  C4739 +
              (C18764 * C497 + C18762 * C513 + C18765 * C2010 +
               C18763 * C2020) *
                  C30775) *
                 C13224 +
             ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) *
                 C13225) *
                C3782) *
               C31082 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30935 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C30928 -
            (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
             ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) *
                 C13224) *
                C3782) *
               C30890) *
              C2620 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30935 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C30928 -
            (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
             ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) *
                 C13224) *
                C3782) *
               C31082 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C30928 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30935 +
            (((C21136 + C21135) * C4739 + (C21134 + C21133) * C30775) * C13224 +
             ((C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
               C18763 * C6657) *
                  C4739 +
              (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
               C18763 * C6659) *
                  C30775) *
                 C13225) *
                C3782) *
               C30890) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C3274 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C31148 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C3274) *
               C31136 +
           ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
             ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) *
                 C13225) *
                C3274 -
            (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
             ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) *
                 C13224) *
                C30932) *
               C31111) *
              C2620 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C3274) *
               C31148 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C3274 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C31136 +
           ((((C20426 + C20425) * C4739 + (C20424 + C20423) * C30775) * C13224 +
             ((C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
               C18763 * C6545) *
                  C4739 +
              (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
               C18763 * C6547) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
             ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                 C13224) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C3274 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C30827 * C31154 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C30932 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C3274) *
              C30827 * C31147 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C3274 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C30932) *
              C30827 * C31134 +
          ((((C19486 + C19485) * C4739 + (C19484 + C19483) * C30775) * C13224 +
            ((C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C4739 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C30775) *
                C13225) *
               C30932 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31156 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C31153 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31144 -
           (((C26973 + C26974) * C30775 + (C26975 + C26976) * C4739) * C13225 +
            ((C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
              C18762 * C2020) *
                 C30775 +
             (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
              C18762 * C2011) *
                 C4739) *
                C13224) *
               C31127) *
              C30827 * C2620 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C31153 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C31156 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C31144 +
           (((C21278 + C21277) * C4739 + (C21276 + C21275) * C30775) * C13224 +
            ((C18764 * C2403 + C18762 * C2407 + C18765 * C10700 +
              C18763 * C10701) *
                 C4739 +
             (C18764 * C2408 + C18762 * C2412 + C18765 * C10702 +
              C18763 * C10703) *
                 C30775) *
                C13225) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30928 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30935 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C3782) *
              C30827 * C30804 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C30935 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30928 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C3782) *
              C30827 * C30813 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30928 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C30935 +
           (((C19202 + C19201) * C4739 + (C19200 + C19199) * C30775) * C13224 +
            ((C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C4739 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C30775) *
                C13225) *
               C3782) *
              C30827 * C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C3274 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C30827 * C31154 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C30932 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C3274) *
              C30827 * C31147 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C3274 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C30932) *
              C30827 * C31134 +
          ((((C19486 + C19485) * C4739 + (C19484 + C19483) * C30775) * C13224 +
            ((C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C4739 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C30775) *
                C13225) *
               C30932 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C3274 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C31148 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C3274) *
               C31136 +
           ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
             ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) *
                 C13225) *
                C3274 -
            (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
             ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) *
                 C13224) *
                C30932) *
               C31111) *
              C2620 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C3274) *
               C31148 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C3274 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C31136 +
           ((((C20426 + C20425) * C4739 + (C20424 + C20423) * C30775) * C13224 +
             ((C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
               C18763 * C6545) *
                  C4739 +
              (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
               C18763 * C6547) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
             ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                 C13224) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31082 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C30890) *
              C656 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C30890 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31082) *
              C657 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C31082 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C30890) *
              C658 +
          ((((C19344 + C19343) * C4739 + (C19342 + C19341) * C30775) * C13224 +
            ((C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                 C4739 +
             (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                 C30775) *
                C13225) *
               C30845 * C30890 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C1416 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C1417 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C30845 * C1418 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C30845 * C31121) *
              C31068 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C1417 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C1416 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C1418 +
           (((C20220 + C20219) * C4739 + (C20218 + C20217) * C30775) * C13224 +
            ((C18764 * C1152 + C18762 * C1162 + C18765 * C5980 +
              C18763 * C5981) *
                 C4739 +
             (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 +
              C18763 * C5983) *
                 C30775) *
                C13225) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31083 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C31082 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C18764 * C1287 + C18762 * C1302 + C18765 * C1288 +
               C18763 * C1303) *
                  C4739 +
              (C18764 * C1301 + C18762 * C1314 + C18765 * C1304 +
               C18763 * C1315) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31083) *
               C30890) *
              C288 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31083) *
               C31082 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31083 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C30890) *
              C289 +
          (((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
             ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) *
                 C13225) *
                C31083 -
            (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
             ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) *
                 C13224) *
                C30932) *
               C31082 +
           ((((C19704 + C19703) * C4739 + (C19702 + C19701) * C30775) * C13224 +
             ((C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
               C18763 * C1307) *
                  C4739 +
              (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
               C18763 * C1317) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
             ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) *
                 C13224) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31083 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C1416 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C30932 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C31083) *
              C1417 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C31083 -
           (((C26133 + C26134) * C30775 + (C26135 + C26136) * C4739) * C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C30932) *
              C1418 +
          ((((C26136 + C26135) * C4739 + (C26134 + C26133) * C30775) * C13224 +
            ((C18764 * C5678 + C18762 * C5683 + C18765 * C5679 +
              C18763 * C5684) *
                 C4739 +
             (C18764 * C5682 + C18762 * C5687 + C18765 * C5685 +
              C18763 * C5688) *
                 C30775) *
                C13225) *
               C30932 -
           (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
            ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31148 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C31136 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C288 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C31136 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31148 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C289 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C31148 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C31136 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C18764 * C293 + C18762 * C306 + C18765 * C926 + C18763 * C931) *
                C4739 +
            (C18764 * C305 + C18762 * C323 + C18765 * C932 + C18763 * C941) *
                C30775) *
               C13225) *
              C30845 * C30827 * C108 -
          (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
           ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
              C30845 * C30827 * C109 +
          (((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
           ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
              C30845 * C30827 * C110 -
          (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
           ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
              C30845 * C30827 * C111 +
          (((C18814 + C18813) * C4739 + (C18812 + C18811) * C30775) * C13224 +
           ((C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C4739 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C30775) *
               C13225) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31149 -
           (((C18765 * C1295 + C18763 * C1311 + C18764 * C932 + C18762 * C941) *
                 C30775 +
             (C18765 * C1284 + C18763 * C1296 + C18764 * C926 + C18762 * C931) *
                 C4739) *
                C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C31138 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C18764 * C1284 + C18762 * C1296 + C18765 * C2402 +
              C18763 * C2405) *
                 C4739 +
             (C18764 * C1295 + C18762 * C1311 + C18765 * C2406 +
              C18763 * C2411) *
                 C30775) *
                C13225) *
               C31114) *
              C30827 * C288 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C31138 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C31149 -
           (((C21133 + C21134) * C30775 + (C21135 + C21136) * C4739) * C13225 +
            ((C19194 + C19193) * C30775 + (C19192 + C19191) * C4739) * C13224) *
               C31114) *
              C30827 * C289 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C31149 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C31138 +
           (((C19202 + C19201) * C4739 + (C19200 + C19199) * C30775) * C13224 +
            ((C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C4739 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C30775) *
                C13225) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C1074 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C1075 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C1075 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C1074 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C31132 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C1074 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C1075 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
              C30845 * C1142 -
          (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
           ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
              C30845 * C1143 +
          (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
           ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
              C30845 * C1144 -
          (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
           ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
              C30845 * C1145 +
          (((C25488 + C25487) * C4739 + (C25486 + C25485) * C30775) * C13224 +
           ((C18764 * C5541 + C18762 * C5544 + C18765 * C6091 +
             C18763 * C6092) *
                C4739 +
            (C18764 * C5543 + C18762 * C5547 + C18765 * C6093 +
             C18763 * C6094) *
                C30775) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31149 -
           (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C31138 +
           (((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C4739 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C30775) *
                C13224 +
            ((C25659 + C25660) * C4739 + (C25661 + C25662) * C30775) * C13225) *
               C31114) *
              C1074 +
          ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
            ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) * C13225) *
               C31138 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C31149 -
           (((C25667 + C25668) * C30775 + (C25669 + C25670) * C4739) * C13225 +
            ((C25662 + C25661) * C30775 + (C25660 + C25659) * C4739) * C13224) *
               C31114) *
              C1075 +
          ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
               C31149 -
           (((C18765 * C5680 + C18763 * C5686 + C18764 * C1702 +
              C18762 * C1707) *
                 C30775 +
             (C18765 * C5677 + C18763 * C5681 + C18764 * C1698 +
              C18762 * C1701) *
                 C4739) *
                C13225 +
            ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) * C13224) *
               C31138 +
           (((C25670 + C25669) * C4739 + (C25668 + C25667) * C30775) * C13224 +
            ((C18764 * C5677 + C18762 * C5681 + C18765 * C6758 +
              C18763 * C6759) *
                 C4739 +
             (C18764 * C5680 + C18762 * C5686 + C18765 * C6760 +
              C18763 * C6761) *
                 C30775) *
                C13225) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C31083 -
           (((C18765 * C1295 + C18763 * C1311 + C18764 * C932 + C18762 * C941) *
                 C30775 +
             (C18765 * C1284 + C18763 * C1296 + C18764 * C926 + C18762 * C931) *
                 C4739) *
                C13225 +
            ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C30775 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C4739) *
                C13224) *
               C30932) *
              C30827 * C656 +
          ((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
            ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) * C13225) *
               C30932 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C31083) *
              C30827 * C657 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C31083 -
           (((C19701 + C19702) * C30775 + (C19703 + C19704) * C4739) * C13225 +
            ((C19198 + C19197) * C30775 + (C19196 + C19195) * C4739) * C13224) *
               C30932) *
              C30827 * C658 +
          ((((C19486 + C19485) * C4739 + (C19484 + C19483) * C30775) * C13224 +
            ((C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C4739 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C30775) *
                C13225) *
               C30932 -
           (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
            ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                  C4739 +
              (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                  C30775) *
                 C13224 +
             ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) *
                 C13225) *
                C31083 -
            (((C25233 + C25234) * C30775 + (C25235 + C25236) * C4739) * C13225 +
             ((C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                  C30775 +
              (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                  C4739) *
                 C13224) *
                C30932) *
               C1074 +
           ((((C25236 + C25235) * C4739 + (C25234 + C25233) * C30775) * C13224 +
             ((C25663 + C25664) * C4739 + (C25665 + C25666) * C30775) *
                 C13225) *
                C30932 -
            (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
             ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) *
                 C13224) *
                C31083) *
               C1075 +
           ((((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
             ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) *
                 C13225) *
                C31083 -
            (((C18765 * C5680 + C18763 * C5686 + C18764 * C1702 +
               C18762 * C1707) *
                  C30775 +
              (C18765 * C5677 + C18763 * C5681 + C18764 * C1698 +
               C18762 * C1701) *
                  C4739) *
                 C13225 +
             ((C25666 + C25665) * C30775 + (C25664 + C25663) * C4739) *
                 C13224) *
                C30932) *
               C31111) *
              C31068 +
          (((((C19190 + C19189) * C4739 + (C19188 + C19187) * C30775) * C13224 +
             ((C19697 + C19698) * C4739 + (C19699 + C19700) * C30775) *
                 C13225) *
                C30932 -
            (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
             ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) *
                 C13224) *
                C31083) *
               C1074 +
           ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
             ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) *
                 C13225) *
                C31083 -
            (((C20423 + C20424) * C30775 + (C20425 + C20426) * C4739) * C13225 +
             ((C19700 + C19699) * C30775 + (C19698 + C19697) * C4739) *
                 C13224) *
                C30932) *
               C1075 +
           ((((C20426 + C20425) * C4739 + (C20424 + C20423) * C30775) * C13224 +
             ((C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
               C18763 * C6545) *
                  C4739 +
              (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
               C18763 * C6547) *
                  C30775) *
                 C13225) *
                C30932 -
            (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
             ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) *
                 C13224) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C18764 * C293 + C18762 * C306 + C18765 * C926 + C18763 * C931) *
                C4739 +
            (C18764 * C305 + C18762 * C323 + C18765 * C932 + C18763 * C941) *
                C30775) *
               C13225) *
              C30845 * C30827 * C108 -
          (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
           ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
              C30845 * C30827 * C109 +
          (((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
           ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
              C30845 * C30827 * C110 -
          (((C19341 + C19342) * C30775 + (C19343 + C19344) * C4739) * C13225 +
           ((C18810 + C18809) * C30775 + (C18808 + C18807) * C4739) * C13224) *
              C30845 * C30827 * C111 +
          (((C18814 + C18813) * C4739 + (C18812 + C18811) * C30775) * C13224 +
           ((C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C4739 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C30775) *
               C13225) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C31148 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C31136 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C288 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C31136 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C31148 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C289 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C31148 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C31136 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C4739 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C30775) *
                C13224 +
            ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
               C30845 * C1074 -
           (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
            ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
               C30845 * C1075 +
           (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
            ((C18764 * C1150 + C18762 * C1159 + C18765 * C1698 +
              C18763 * C1701) *
                 C4739 +
             (C18764 * C1158 + C18762 * C1168 + C18765 * C1702 +
              C18763 * C1707) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31145 +
          ((((C18996 + C18995) * C4739 + (C18994 + C18993) * C30775) * C13224 +
            ((C18997 + C18998) * C4739 + (C18999 + C19000) * C30775) * C13225) *
               C30845 * C1075 -
           (((C18993 + C18994) * C30775 + (C18995 + C18996) * C4739) * C13225 +
            ((C18802 + C18801) * C30775 + (C18800 + C18799) * C4739) * C13224) *
               C30845 * C1074 -
           (((C20217 + C20218) * C30775 + (C20219 + C20220) * C4739) * C13225 +
            ((C19000 + C18999) * C30775 + (C18998 + C18997) * C4739) * C13224) *
               C30845 * C31111) *
              C31132 +
          ((((C18806 + C18805) * C4739 + (C18804 + C18803) * C30775) * C13224 +
            ((C19001 + C19002) * C4739 + (C19003 + C19004) * C30775) * C13225) *
               C30845 * C1074 -
           (((C19005 + C19006) * C30775 + (C19007 + C19008) * C4739) * C13225 +
            ((C19004 + C19003) * C30775 + (C19002 + C19001) * C4739) * C13224) *
               C30845 * C1075 +
           (((C19008 + C19007) * C4739 + (C19006 + C19005) * C30775) * C13224 +
            ((C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
              C18763 * C1705) *
                 C4739 +
             (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
              C18763 * C1709) *
                 C30775) *
                C13225) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C4739 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C30775) *
               C13224 +
           ((C24617 + C24618) * C4739 + (C24619 + C24620) * C30775) * C13225) *
              C30845 * C1142 -
          (((C24621 + C24622) * C30775 + (C24623 + C24624) * C4739) * C13225 +
           ((C24620 + C24619) * C30775 + (C24618 + C24617) * C4739) * C13224) *
              C30845 * C1143 +
          (((C24624 + C24623) * C4739 + (C24622 + C24621) * C30775) * C13224 +
           ((C25481 + C25482) * C4739 + (C25483 + C25484) * C30775) * C13225) *
              C30845 * C1144 -
          (((C25485 + C25486) * C30775 + (C25487 + C25488) * C4739) * C13225 +
           ((C25484 + C25483) * C30775 + (C25482 + C25481) * C4739) * C13224) *
              C30845 * C1145 +
          (((C25488 + C25487) * C4739 + (C25486 + C25485) * C30775) * C13224 +
           ((C18764 * C5541 + C18762 * C5544 + C18765 * C6091 +
             C18763 * C6092) *
                C4739 +
            (C18764 * C5543 + C18762 * C5547 + C18765 * C6093 +
             C18763 * C6094) *
                C30775) *
               C13225) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C30886 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C30893 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C2880) *
              C30804 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C30893 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C30886 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C2880) *
              C30813 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C30886 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30893 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C2880) *
              C2883)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C30886 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30893 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C2880) *
              C30804 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30893 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C30886 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C2880) *
              C30813 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C30886 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30893 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C2880) *
              C2883)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C30886 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C30893 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C2880) *
              C30804 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C30893 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C30886 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C2880) *
              C30813 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C30886 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C30893 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C2880) *
              C2883)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C30886 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C30893 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C2880) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C30886 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31083 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30893 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C31083) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C30886 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C30893 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C31083 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C2880) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C30886 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30893 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C31083) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C30886 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C31083) *
               C30893 +
           (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
              C9077 * C1288 + C9074 * C1303) *
                 C4739 +
             (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
              C9077 * C1304 + C9074 * C1315) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
              C9075 * C1301 + C9072 * C1314) *
                 C30775 +
             (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
              C9075 * C1287 + C9072 * C1302) *
                 C4739) *
                C31013 * C30932) *
               C2880) *
              C2620 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C31083) *
               C30886 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C30893 +
           (((C9075 * C1286 + C9072 * C1300 + C9076 * C1289 + C9073 * C1305 +
              C9077 * C6656 + C9074 * C6657) *
                 C4739 +
             (C9075 * C1299 + C9072 * C1313 + C9076 * C1306 + C9073 * C1316 +
              C9077 * C6658 + C9074 * C6659) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
              C9075 * C310 + C9072 * C325) *
                 C30775 +
             (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
              C9075 * C295 + C9072 * C309) *
                 C4739) *
                C31013 * C31083) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C2512 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C30890) *
                  C31154 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C30890 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C2512) *
                  C31147 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C30845 * C2512 -
               (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                C356 * C102 + C357 * C114) *
                   C31013 * C30845 * C30890) *
                  C31134 +
              ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
                (C113 * C660 + C31024 * C661) * C116 +
                (C113 * C662 + C31024 * C663) * C104) *
                   C31013 * C30845 * C30890 -
               (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
                C170 * C102 + C171 * C114) *
                   C31013 * C30845 * C2512) *
                  C31115) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C31155 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C31151 +
               ((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C30845 * C31141 -
               (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
                (C113 * C1158 + C31024 * C1168) * C102 +
                (C113 * C1150 + C31024 * C1159) * C114) *
                   C31013 * C30845 * C31121) *
                  C2620 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C31151 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C31155 -
               (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                C361 * C102 + C360 * C114) *
                   C31013 * C30845 * C31141 +
               (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
                (C113 * C1422 + C31024 * C1423) * C116 +
                (C113 * C1424 + C31024 * C1425) * C104) *
                   C31013 * C30845 * C31121) *
                  C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31149 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C31138 +
            ((C113 * C483 + C31024 * C496) * C114 +
             (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
             C551 * C116 + C552 * C104) *
                C31013 * C31114) *
               C2512 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C31138 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31149 -
            (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
             (C113 * C1295 + C31024 * C1311) * C102 +
             (C113 * C1284 + C31024 * C1296) * C114) *
                C31013 * C31114) *
               C30890) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C31138 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31149 -
            (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
             C550 * C102 + C549 * C114) *
                C31013 * C31114) *
               C2512 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31149 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C31138 +
            (C2186 * C114 + C2185 * C102 + C2184 * C115 + C2183 * C103 +
             (C113 * C2170 + C31024 * C2171) * C116 +
             (C113 * C2172 + C31024 * C2173) * C104) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C2512 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C31154 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C2512) *
              C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C2512 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C31134 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31155 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C31151 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C31141 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C2620 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C31151 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31155 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31141 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31149 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C31138 +
            (((C113 * C483 + C31024 * C496) * C4739 +
              (C113 * C497 + C31024 * C513) * C30775) *
                 C4736 +
             (C5715 + C5716) * C4737 + C5723 * C4738) *
                C31114) *
               C2512 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C31138 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31149 -
            ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
             (C5716 + C5715) * C4736) *
                C31114) *
               C30890) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C31138 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31149 -
            ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
             (C550 * C30775 + C549 * C4739) * C4736) *
                C31114) *
               C2512 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31149 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C31138 +
            ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
             ((C113 * C6544 + C31024 * C6545) * C4739 +
              (C113 * C6546 + C31024 * C6547) * C30775) *
                 C4738) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C2512 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C30890) *
              C31154 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C2512) *
              C31147 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C2512 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C30890) *
              C31134 +
          (((C9075 * C297 + C9072 * C313 + C9076 * C929 + C9073 * C938 +
             C9077 * C2170 + C9074 * C2171) *
                C4739 +
            (C9075 * C314 + C9072 * C327 + C9076 * C937 + C9073 * C944 +
             C9077 * C2172 + C9074 * C2173) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31155 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C31151 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31141 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C30845 * C31121) *
              C2620 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C31151 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31155 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31141 +
           ((C9075 * C1149 + C9072 * C1157 + C9076 * C1699 + C9073 * C1703 +
             C9077 * C6544 + C9074 * C6545) *
                C4739 +
            (C9075 * C1156 + C9072 * C1167 + C9076 * C1704 + C9073 * C1708 +
             C9077 * C6546 + C9074 * C6547) *
                C30775) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C31149 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C31138 +
            ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
              C9077 * C2003 + C9074 * C2012) *
                 C4739 +
             (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
              C9077 * C2013 + C9074 * C2021) *
                 C30775) *
                C31013 * C31114) *
               C2512 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C31138 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C31149 -
            ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
              C9075 * C1295 + C9072 * C1311) *
                 C30775 +
             (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
              C9075 * C1284 + C9072 * C1296) *
                 C4739) *
                C31013 * C31114) *
               C30890) *
              C2620 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C31138 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C31149 -
            ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
              C9075 * C499 + C9072 * C514) *
                 C30775 +
             (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
              C9075 * C484 + C9072 * C498) *
                 C4739) *
                C31013 * C31114) *
               C2512 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C31149 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C31138 +
            ((C9075 * C1283 + C9072 * C1294 + C9076 * C2403 + C9073 * C2407 +
              C9077 * C10700 + C9074 * C10701) *
                 C4739 +
             (C9075 * C1293 + C9072 * C1310 + C9076 * C2408 + C9073 * C2412 +
              C9077 * C10702 + C9074 * C10703) *
                 C30775) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C117 + C31024 * C124) * C4739 +
                      (C113 * C125 + C31024 * C138) * C30775) *
                         C4736 +
                     (C4883 + C4884) * C4737 + C4889 * C4738) *
                        C31083 -
                    (C5690 * C4738 + (C5368 + C5369) * C4737 +
                     ((C113 * C494 + C31024 * C512) * C30775 +
                      (C113 * C482 + C31024 * C495) * C4739) *
                         C4736) *
                        C30932) *
                       C2512 +
                   (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                     C6096 * C4738) *
                        C30932 -
                    (C5550 * C4738 + (C4886 + C4885) * C4737 +
                     (C4884 + C4883) * C4736) *
                        C31083) *
                       C30890) *
                      C30804 +
                  ((((C548 * C4739 + C547 * C30775) * C4736 +
                     (C5354 + C5355) * C4737 + C5985 * C4738) *
                        C30932 -
                    (C4881 * C4738 + (C4864 + C4863) * C4737 +
                     (C167 * C30775 + C166 * C4739) * C4736) *
                        C31083) *
                       C2512 +
                   (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                     C5826 * C4738) *
                        C31083 -
                    ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                     (C5355 + C5354) * C4736) *
                        C30932) *
                       C30890) *
                      C30813 +
                  ((((C168 * C4739 + C169 * C30775) * C4736 +
                     (C4869 + C4870) * C4737 + C4882 * C4738) *
                        C31083 -
                    ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
                     (C545 * C30775 + C546 * C4739) * C4736) *
                        C30932) *
                       C2512 +
                   (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
                     ((C113 * C1700 + C31024 * C1705) * C4739 +
                      (C113 * C1706 + C31024 * C1709) * C30775) *
                         C4738) *
                        C30932 -
                    ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
                     (C4870 + C4869) * C4736) *
                        C31083) *
                       C30890) *
                      C2883)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C31024 * C124) * C114 +
                     (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                     C167 * C103 + C168 * C116 + C169 * C104) *
                        C31013 * C31083 -
                    (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                     (C113 * C494 + C31024 * C512) * C102 +
                     (C113 * C482 + C31024 * C495) * C114) *
                        C31013 * C30932) *
                       C2512 +
                   (((C113 * C926 + C31024 * C931) * C114 +
                     (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                     C960 * C103 + C961 * C116 + C962 * C104) *
                        C31013 * C30932 -
                    (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                     (C113 * C305 + C31024 * C323) * C102 +
                     (C113 * C293 + C31024 * C306) * C114) *
                        C31013 * C31083) *
                       C30890) *
                      C30804 +
                  (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                     C553 * C116 + C554 * C104) *
                        C31013 * C30932 -
                    (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                     C167 * C102 + C166 * C114) *
                        C31013 * C31083) *
                       C2512 +
                   ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                     C364 * C116 + C365 * C104) *
                        C31013 * C31083 -
                    (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                     C960 * C102 + C959 * C114) *
                        C31013 * C30932) *
                       C30890) *
                      C30813 +
                  (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                     C172 * C116 + C173 * C104) *
                        C31013 * C31083 -
                    (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                     C545 * C102 + C546 * C114) *
                        C31013 * C30932) *
                       C2512 +
                   ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
                     (C113 * C930 + C31024 * C939) * C116 +
                     (C113 * C940 + C31024 * C945) * C104) *
                        C31013 * C30932 -
                    (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                     C356 * C102 + C357 * C114) *
                        C31013 * C31083) *
                       C30890) *
                      C2883)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C9075 * C117 + C9072 * C124 + C9076 * C482 +
                      C9073 * C495 + C9077 * C483 + C9074 * C496) *
                         C4739 +
                     (C9075 * C125 + C9072 * C138 + C9076 * C494 +
                      C9073 * C512 + C9077 * C497 + C9074 * C513) *
                         C30775) *
                        C31013 * C31083 -
                    ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 +
                      C9073 * C513 + C9075 * C494 + C9072 * C512) *
                         C30775 +
                     (C9077 * C2002 + C9074 * C2011 + C9076 * C483 +
                      C9073 * C496 + C9075 * C482 + C9072 * C495) *
                         C4739) *
                        C31013 * C30932) *
                       C2512 +
                   (((C9075 * C926 + C9072 * C931 + C9076 * C1284 +
                      C9073 * C1296 + C9077 * C2402 + C9074 * C2405) *
                         C4739 +
                     (C9075 * C932 + C9072 * C941 + C9076 * C1295 +
                      C9073 * C1311 + C9077 * C2406 + C9074 * C2411) *
                         C30775) *
                        C31013 * C30932 -
                    ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 +
                      C9073 * C941 + C9075 * C305 + C9072 * C323) *
                         C30775 +
                     (C9077 * C1284 + C9074 * C1296 + C9076 * C926 +
                      C9073 * C931 + C9075 * C293 + C9072 * C306) *
                         C4739) *
                        C31013 * C31083) *
                       C30890) *
                      C30804 +
                  ((((C9075 * C481 + C9072 * C493 + C9076 * C484 +
                      C9073 * C498 + C9077 * C2001 + C9074 * C2009) *
                         C4739 +
                     (C9075 * C492 + C9072 * C511 + C9076 * C499 +
                      C9073 * C514 + C9077 * C2008 + C9074 * C2019) *
                         C30775) *
                        C31013 * C30932 -
                    ((C9077 * C499 + C9074 * C514 + C9076 * C492 +
                      C9073 * C511 + C9075 * C127 + C9072 * C139) *
                         C30775 +
                     (C9077 * C484 + C9074 * C498 + C9076 * C481 +
                      C9073 * C493 + C9075 * C118 + C9072 * C126) *
                         C4739) *
                        C31013 * C31083) *
                       C2512 +
                   (((C9075 * C292 + C9072 * C304 + C9076 * C927 +
                      C9073 * C933 + C9077 * C1283 + C9074 * C1294) *
                         C4739 +
                     (C9075 * C303 + C9072 * C322 + C9076 * C934 +
                      C9073 * C942 + C9077 * C1293 + C9074 * C1310) *
                         C30775) *
                        C31013 * C31083 -
                    ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 +
                      C9073 * C1310 + C9075 * C934 + C9072 * C942) *
                         C30775 +
                     (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 +
                      C9073 * C1294 + C9075 * C927 + C9072 * C933) *
                         C4739) *
                        C31013 * C30932) *
                       C30890) *
                      C30813 +
                  ((((C9075 * C119 + C9072 * C128 + C9076 * C480 +
                      C9073 * C491 + C9077 * C485 + C9074 * C500) *
                         C4739 +
                     (C9075 * C129 + C9072 * C140 + C9076 * C490 +
                      C9073 * C510 + C9077 * C501 + C9074 * C515) *
                         C30775) *
                        C31013 * C31083 -
                    ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 +
                      C9073 * C515 + C9075 * C490 + C9072 * C510) *
                         C30775 +
                     (C9077 * C2000 + C9074 * C2007 + C9076 * C485 +
                      C9073 * C500 + C9075 * C480 + C9072 * C491) *
                         C4739) *
                        C31013 * C30932) *
                       C2512 +
                   (((C9075 * C928 + C9072 * C935 + C9076 * C1282 +
                      C9073 * C1292 + C9077 * C2404 + C9074 * C2409) *
                         C4739 +
                     (C9075 * C936 + C9072 * C943 + C9076 * C1291 +
                      C9073 * C1309 + C9077 * C2410 + C9074 * C2413) *
                         C30775) *
                        C31013 * C30932 -
                    ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 +
                      C9073 * C943 + C9075 * C301 + C9072 * C321) *
                         C30775 +
                     (C9077 * C1282 + C9074 * C1292 + C9076 * C928 +
                      C9073 * C935 + C9075 * C291 + C9072 * C302) *
                         C4739) *
                        C31013 * C31083) *
                       C30890) *
                      C2883)) /
                    (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31155 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31151 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31141 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C30845 * C31121) *
              C2620 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31151 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31155 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31141 +
           (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
            (C113 * C1422 + C31024 * C1423) * C116 +
            (C113 * C1424 + C31024 * C1425) * C104) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C2512 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30890) *
              C31154 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30890 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C2512) *
              C31147 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C2512 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30890) *
              C31134 +
          ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
            (C113 * C660 + C31024 * C661) * C116 +
            (C113 * C662 + C31024 * C663) * C104) *
               C31013 * C30845 * C30890 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C2512 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C31154 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C2512) *
              C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C2512 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C31134 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31155 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C31151 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C31141 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C2620 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C31151 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31155 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31141 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C2512 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C30890) *
              C31154 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C2512) *
              C31147 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C2512 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C30890) *
              C31134 +
          (((C9075 * C297 + C9072 * C313 + C9076 * C929 + C9073 * C938 +
             C9077 * C2170 + C9074 * C2171) *
                C4739 +
            (C9075 * C314 + C9072 * C327 + C9076 * C937 + C9073 * C944 +
             C9077 * C2172 + C9074 * C2173) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31155 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C31151 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31141 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C30845 * C31121) *
              C2620 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C31151 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31155 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31141 +
           ((C9075 * C1149 + C9072 * C1157 + C9076 * C1699 + C9073 * C1703 +
             C9077 * C6544 + C9074 * C6545) *
                C4739 +
            (C9075 * C1156 + C9072 * C1167 + C9076 * C1704 + C9073 * C1708 +
             C9077 * C6546 + C9074 * C6547) *
                C30775) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C30886 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C30893 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C2880) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C30886 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30893 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C3274) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C30886 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C30893 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C3274 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C2880) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C30886 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30893 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C3274) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C30886 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C3274) *
               C30893 +
           (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
              C9077 * C1288 + C9074 * C1303) *
                 C4739 +
             (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
              C9077 * C1304 + C9074 * C1315) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
              C9075 * C1301 + C9072 * C1314) *
                 C30775 +
             (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
              C9075 * C1287 + C9072 * C1302) *
                 C4739) *
                C31013 * C30932) *
               C2880) *
              C31068 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C3274) *
               C30886 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C30893 +
           (((C9075 * C1286 + C9072 * C1300 + C9076 * C1289 + C9073 * C1305 +
              C9077 * C6656 + C9074 * C6657) *
                 C4739 +
             (C9075 * C1299 + C9072 * C1313 + C9076 * C1306 + C9073 * C1316 +
              C9077 * C6658 + C9074 * C6659) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
              C9075 * C310 + C9072 * C325) *
                 C30775 +
             (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
              C9075 * C295 + C9072 * C309) *
                 C4739) *
                C31013 * C3274) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30928 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30935 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C3782) *
              C30886 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30935 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30928 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C3782) *
              C30893 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30928 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30935 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C3782) *
              C2880) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30928 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30935 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C3782) *
              C30886 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30935 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30928 -
           (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C3782) *
              C30893 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30928 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30935 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C3782) *
              C2880) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30928 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30935 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C3782) *
              C30886 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C30935 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30928 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C3782) *
              C30893 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30928 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C30935 +
           ((C9075 * C1288 + C9072 * C1303 + C9076 * C6386 + C9073 * C6390 +
             C9077 * C6388 + C9074 * C6393) *
                C4739 +
            (C9075 * C1304 + C9072 * C1315 + C9076 * C6389 + C9073 * C6395 +
             C9077 * C6394 + C9074 * C6397) *
                C30775) *
               C31013 * C3782) *
              C2880) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C31024 * C124) * C114 +
                 (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                 C167 * C103 + C168 * C116 + C169 * C104) *
                    C31013 * C3274 -
                (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                 (C113 * C494 + C31024 * C512) * C102 +
                 (C113 * C482 + C31024 * C495) * C114) *
                    C31013 * C30932) *
                   C2512 +
               (((C113 * C926 + C31024 * C931) * C114 +
                 (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                 C960 * C103 + C961 * C116 + C962 * C104) *
                    C31013 * C30932 -
                (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                 (C113 * C305 + C31024 * C323) * C102 +
                 (C113 * C293 + C31024 * C306) * C114) *
                    C31013 * C3274) *
                   C30890) *
                  C31145 +
              (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                 C553 * C116 + C554 * C104) *
                    C31013 * C30932 -
                (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                 C167 * C102 + C166 * C114) *
                    C31013 * C3274) *
                   C2512 +
               ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                 C364 * C116 + C365 * C104) *
                    C31013 * C3274 -
                (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                 C960 * C102 + C959 * C114) *
                    C31013 * C30932) *
                   C30890) *
                  C31132 +
              (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                 C172 * C116 + C173 * C104) *
                    C31013 * C3274 -
                (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                 C545 * C102 + C546 * C114) *
                    C31013 * C30932) *
                   C2512 +
               ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
                 (C113 * C930 + C31024 * C939) * C116 +
                 (C113 * C940 + C31024 * C945) * C104) *
                    C31013 * C30932 -
                (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                 C356 * C102 + C357 * C114) *
                    C31013 * C3274) *
                   C30890) *
                  C31105) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C3274 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C30932) *
                  C31155 +
              (((C113 * C926 + C31024 * C931) * C114 +
                (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                C960 * C103 + C961 * C116 + C962 * C104) *
                   C31013 * C30932 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C3274) *
                  C31151 +
              (((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C3274 -
               (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
                (C113 * C1301 + C31024 * C1314) * C102 +
                (C113 * C1287 + C31024 * C1302) * C114) *
                   C31013 * C30932) *
                  C31141 +
              (((C113 * C1698 + C31024 * C1701) * C114 +
                (C113 * C1702 + C31024 * C1707) * C102 +
                (C113 * C1699 + C31024 * C1703) * C115 +
                (C113 * C1704 + C31024 * C1708) * C103 +
                (C113 * C1700 + C31024 * C1705) * C116 +
                (C113 * C1706 + C31024 * C1709) * C104) *
                   C31013 * C30932 -
               (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
                (C113 * C1158 + C31024 * C1168) * C102 +
                (C113 * C1150 + C31024 * C1159) * C114) *
                   C31013 * C3274) *
                  C31121) *
             C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31156 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31153 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31144 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C2512 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C31153 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31156 -
           (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31144 +
           ((C113 * C2402 + C31024 * C2405) * C114 +
            (C113 * C2406 + C31024 * C2411) * C102 +
            (C113 * C2403 + C31024 * C2407) * C115 +
            (C113 * C2408 + C31024 * C2412) * C103 +
            (C113 * C2404 + C31024 * C2409) * C116 +
            (C113 * C2410 + C31024 * C2413) * C104) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C2512 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C30890) *
              C31145 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C2512 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C31132 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C3274 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C2512 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C31155 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C3274) *
              C31151 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C31141 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31156 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31153 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31144 -
           ((C6775 + C6776) * C4738 + (C6777 + C6778) * C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C2512 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C31153 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31156 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31144 +
           ((C6778 + C6777) * C4736 + (C6776 + C6775) * C4737 +
            ((C113 * C6758 + C31024 * C6759) * C4739 +
             (C113 * C6760 + C31024 * C6761) * C30775) *
                C4738) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C2512 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C3274) *
               C2512 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          ((((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
              C9077 * C485 + C9074 * C500) *
                 C4739 +
             (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
              C9077 * C501 + C9074 * C515) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
              C9075 * C490 + C9072 * C510) *
                 C30775 +
             (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
              C9075 * C480 + C9072 * C491) *
                 C4739) *
                C31013 * C30932) *
               C2512 +
           (((C9075 * C928 + C9072 * C935 + C9076 * C1282 + C9073 * C1292 +
              C9077 * C2404 + C9074 * C2409) *
                 C4739 +
             (C9075 * C936 + C9072 * C943 + C9076 * C1291 + C9073 * C1309 +
              C9077 * C2410 + C9074 * C2413) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
              C9075 * C301 + C9072 * C321) *
                 C30775 +
             (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
              C9075 * C291 + C9072 * C302) *
                 C4739) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C31155 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C3274) *
              C31151 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C30932) *
              C31141 +
          (((C9075 * C1698 + C9072 * C1701 + C9076 * C5677 + C9073 * C5681 +
             C9077 * C6758 + C9074 * C6759) *
                C4739 +
            (C9075 * C1702 + C9072 * C1707 + C9076 * C5680 + C9073 * C5686 +
             C9077 * C6760 + C9074 * C6761) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31156 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C31153 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31144 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2013 + C9073 * C2021 +
             C9075 * C2010 + C9072 * C2020) *
                C30775 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2003 + C9073 * C2012 +
             C9075 * C2002 + C9072 * C2011) *
                C4739) *
               C31013 * C31127) *
              C2512 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C31153 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C31156 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C31144 +
           ((C9075 * C2402 + C9072 * C2405 + C9076 * C6387 + C9073 * C6391 +
             C9077 * C10904 + C9074 * C10905) *
                C4739 +
            (C9075 * C2406 + C9072 * C2411 + C9076 * C6392 + C9073 * C6396 +
             C9077 * C10906 + C9074 * C10907) *
                C30775) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C117 + C31024 * C124) * C4739 +
                      (C113 * C125 + C31024 * C138) * C30775) *
                         C4736 +
                     (C4883 + C4884) * C4737 + C4889 * C4738) *
                        C30928 -
                    (C5690 * C4738 + (C5368 + C5369) * C4737 +
                     ((C113 * C494 + C31024 * C512) * C30775 +
                      (C113 * C482 + C31024 * C495) * C4739) *
                         C4736) *
                        C30935 +
                    (((C113 * C483 + C31024 * C496) * C4739 +
                      (C113 * C497 + C31024 * C513) * C30775) *
                         C4736 +
                     (C5715 + C5716) * C4737 + C5723 * C4738) *
                        C3782) *
                       C2512 +
                   (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                     C6096 * C4738) *
                        C30935 -
                    (C5550 * C4738 + (C4886 + C4885) * C4737 +
                     (C4884 + C4883) * C4736) *
                        C30928 -
                    ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
                     (C5716 + C5715) * C4736) *
                        C3782) *
                       C30890) *
                      C31068 +
                  ((((C548 * C4739 + C547 * C30775) * C4736 +
                     (C5354 + C5355) * C4737 + C5985 * C4738) *
                        C30935 -
                    (C4881 * C4738 + (C4864 + C4863) * C4737 +
                     (C167 * C30775 + C166 * C4739) * C4736) *
                        C30928 -
                    ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
                     (C550 * C30775 + C549 * C4739) * C4736) *
                        C3782) *
                       C2512 +
                   (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                     C5826 * C4738) *
                        C30928 -
                    ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                     (C5355 + C5354) * C4736) *
                        C30935 +
                    ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
                     ((C113 * C6544 + C31024 * C6545) * C4739 +
                      (C113 * C6546 + C31024 * C6547) * C30775) *
                         C4738) *
                        C3782) *
                       C30890) *
                      C30810)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C31024 * C124) * C114 +
                     (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                     C167 * C103 + C168 * C116 + C169 * C104) *
                        C31013 * C30928 -
                    (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                     (C113 * C494 + C31024 * C512) * C102 +
                     (C113 * C482 + C31024 * C495) * C114) *
                        C31013 * C30935 +
                    ((C113 * C483 + C31024 * C496) * C114 +
                     (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                     C550 * C103 + C551 * C116 + C552 * C104) *
                        C31013 * C3782) *
                       C2512 +
                   (((C113 * C926 + C31024 * C931) * C114 +
                     (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                     C960 * C103 + C961 * C116 + C962 * C104) *
                        C31013 * C30935 -
                    (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                     (C113 * C305 + C31024 * C323) * C102 +
                     (C113 * C293 + C31024 * C306) * C114) *
                        C31013 * C30928 -
                    (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
                     (C113 * C1295 + C31024 * C1311) * C102 +
                     (C113 * C1284 + C31024 * C1296) * C114) *
                        C31013 * C3782) *
                       C30890) *
                      C31068 +
                  (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                     C553 * C116 + C554 * C104) *
                        C31013 * C30935 -
                    (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                     C167 * C102 + C166 * C114) *
                        C31013 * C30928 -
                    (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                     C550 * C102 + C549 * C114) *
                        C31013 * C3782) *
                       C2512 +
                   ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                     C364 * C116 + C365 * C104) *
                        C31013 * C30928 -
                    (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                     C960 * C102 + C959 * C114) *
                        C31013 * C30935 +
                    (C2186 * C114 + C2185 * C102 + C2184 * C115 + C2183 * C103 +
                     (C113 * C2170 + C31024 * C2171) * C116 +
                     (C113 * C2172 + C31024 * C2173) * C104) *
                        C31013 * C3782) *
                       C30890) *
                      C30810)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C9075 * C117 + C9072 * C124 + C9076 * C482 +
                      C9073 * C495 + C9077 * C483 + C9074 * C496) *
                         C4739 +
                     (C9075 * C125 + C9072 * C138 + C9076 * C494 +
                      C9073 * C512 + C9077 * C497 + C9074 * C513) *
                         C30775) *
                        C31013 * C30928 -
                    ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 +
                      C9073 * C513 + C9075 * C494 + C9072 * C512) *
                         C30775 +
                     (C9077 * C2002 + C9074 * C2011 + C9076 * C483 +
                      C9073 * C496 + C9075 * C482 + C9072 * C495) *
                         C4739) *
                        C31013 * C30935 +
                    ((C9075 * C483 + C9072 * C496 + C9076 * C2002 +
                      C9073 * C2011 + C9077 * C2003 + C9074 * C2012) *
                         C4739 +
                     (C9075 * C497 + C9072 * C513 + C9076 * C2010 +
                      C9073 * C2020 + C9077 * C2013 + C9074 * C2021) *
                         C30775) *
                        C31013 * C3782) *
                       C2512 +
                   (((C9075 * C926 + C9072 * C931 + C9076 * C1284 +
                      C9073 * C1296 + C9077 * C2402 + C9074 * C2405) *
                         C4739 +
                     (C9075 * C932 + C9072 * C941 + C9076 * C1295 +
                      C9073 * C1311 + C9077 * C2406 + C9074 * C2411) *
                         C30775) *
                        C31013 * C30935 -
                    ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 +
                      C9073 * C941 + C9075 * C305 + C9072 * C323) *
                         C30775 +
                     (C9077 * C1284 + C9074 * C1296 + C9076 * C926 +
                      C9073 * C931 + C9075 * C293 + C9072 * C306) *
                         C4739) *
                        C31013 * C30928 -
                    ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 +
                      C9073 * C2411 + C9075 * C1295 + C9072 * C1311) *
                         C30775 +
                     (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 +
                      C9073 * C2405 + C9075 * C1284 + C9072 * C1296) *
                         C4739) *
                        C31013 * C3782) *
                       C30890) *
                      C31068 +
                  ((((C9075 * C481 + C9072 * C493 + C9076 * C484 +
                      C9073 * C498 + C9077 * C2001 + C9074 * C2009) *
                         C4739 +
                     (C9075 * C492 + C9072 * C511 + C9076 * C499 +
                      C9073 * C514 + C9077 * C2008 + C9074 * C2019) *
                         C30775) *
                        C31013 * C30935 -
                    ((C9077 * C499 + C9074 * C514 + C9076 * C492 +
                      C9073 * C511 + C9075 * C127 + C9072 * C139) *
                         C30775 +
                     (C9077 * C484 + C9074 * C498 + C9076 * C481 +
                      C9073 * C493 + C9075 * C118 + C9072 * C126) *
                         C4739) *
                        C31013 * C30928 -
                    ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 +
                      C9073 * C2019 + C9075 * C499 + C9072 * C514) *
                         C30775 +
                     (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 +
                      C9073 * C2009 + C9075 * C484 + C9072 * C498) *
                         C4739) *
                        C31013 * C3782) *
                       C2512 +
                   (((C9075 * C292 + C9072 * C304 + C9076 * C927 +
                      C9073 * C933 + C9077 * C1283 + C9074 * C1294) *
                         C4739 +
                     (C9075 * C303 + C9072 * C322 + C9076 * C934 +
                      C9073 * C942 + C9077 * C1293 + C9074 * C1310) *
                         C30775) *
                        C31013 * C30928 -
                    ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 +
                      C9073 * C1310 + C9075 * C934 + C9072 * C942) *
                         C30775 +
                     (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 +
                      C9073 * C1294 + C9075 * C927 + C9072 * C933) *
                         C4739) *
                        C31013 * C30935 +
                    ((C9075 * C1283 + C9072 * C1294 + C9076 * C2403 +
                      C9073 * C2407 + C9077 * C10700 + C9074 * C10701) *
                         C4739 +
                     (C9075 * C1293 + C9072 * C1310 + C9076 * C2408 +
                      C9073 * C2412 + C9077 * C10702 + C9074 * C10703) *
                         C30775) *
                        C31013 * C3782) *
                       C30890) *
                      C30810)) /
                    (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C3274 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C31155 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30932 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C3274) *
              C31151 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C3274 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30932) *
              C31141 +
          (((C113 * C1698 + C31024 * C1701) * C114 +
            (C113 * C1702 + C31024 * C1707) * C102 +
            (C113 * C1699 + C31024 * C1703) * C115 +
            (C113 * C1704 + C31024 * C1708) * C103 +
            (C113 * C1700 + C31024 * C1705) * C116 +
            (C113 * C1706 + C31024 * C1709) * C104) *
               C31013 * C30932 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C2512 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C2512 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
             C172 * C116 + C173 * C104) *
                C31013 * C3274 -
            (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
             C545 * C102 + C546 * C114) *
                C31013 * C30932) *
               C2512 +
           ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
             (C113 * C930 + C31024 * C939) * C116 +
             (C113 * C940 + C31024 * C945) * C104) *
                C31013 * C30932 -
            (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
             C356 * C102 + C357 * C114) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C2512 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C30890) *
              C31145 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C2512 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C31132 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C3274 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C2512 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C31155 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C3274) *
              C31151 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C31141 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C2512 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C3274) *
               C2512 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          ((((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
              C9077 * C485 + C9074 * C500) *
                 C4739 +
             (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
              C9077 * C501 + C9074 * C515) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
              C9075 * C490 + C9072 * C510) *
                 C30775 +
             (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
              C9075 * C480 + C9072 * C491) *
                 C4739) *
                C31013 * C30932) *
               C2512 +
           (((C9075 * C928 + C9072 * C935 + C9076 * C1282 + C9073 * C1292 +
              C9077 * C2404 + C9074 * C2409) *
                 C4739 +
             (C9075 * C936 + C9072 * C943 + C9076 * C1291 + C9073 * C1309 +
              C9077 * C2410 + C9074 * C2413) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
              C9075 * C301 + C9072 * C321) *
                 C30775 +
             (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
              C9075 * C291 + C9072 * C302) *
                 C4739) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C31155 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C3274) *
              C31151 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C30932) *
              C31141 +
          (((C9075 * C1698 + C9072 * C1701 + C9076 * C5677 + C9073 * C5681 +
             C9077 * C6758 + C9074 * C6759) *
                C4739 +
            (C9075 * C1702 + C9072 * C1707 + C9076 * C5680 + C9073 * C5686 +
             C9077 * C6760 + C9074 * C6761) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C31082 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C30890) *
                  C656 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C30890 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C31082) *
                  C657 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C30845 * C31082 -
               (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                C356 * C102 + C357 * C114) *
                   C31013 * C30845 * C30890) *
                  C658 +
              ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
                (C113 * C660 + C31024 * C661) * C116 +
                (C113 * C662 + C31024 * C663) * C104) *
                   C31013 * C30845 * C30890 -
               (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
                C170 * C102 + C171 * C114) *
                   C31013 * C30845 * C31082) *
                  C31115) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C1416 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C1417 +
               ((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C30845 * C1418 -
               (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
                (C113 * C1158 + C31024 * C1168) * C102 +
                (C113 * C1150 + C31024 * C1159) * C114) *
                   C31013 * C30845 * C31121) *
                  C31068 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C1417 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C1416 -
               (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                C361 * C102 + C360 * C114) *
                   C31013 * C30845 * C1418 +
               (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
                (C113 * C1422 + C31024 * C1423) * C116 +
                (C113 * C1424 + C31024 * C1425) * C104) *
                   C31013 * C30845 * C31121) *
                  C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C1820 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C1821 +
            ((C113 * C483 + C31024 * C496) * C114 +
             (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
             C551 * C116 + C552 * C104) *
                C31013 * C31114) *
               C31082 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C1821 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C1820 -
            (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
             (C113 * C1295 + C31024 * C1311) * C102 +
             (C113 * C1284 + C31024 * C1296) * C114) *
                C31013 * C31114) *
               C30890) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C1821 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C1820 -
            (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
             C550 * C102 + C549 * C114) *
                C31013 * C31114) *
               C31082 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C1820 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C1821 +
            (C2186 * C114 + C2185 * C102 + C2184 * C115 + C2183 * C103 +
             (C113 * C2170 + C31024 * C2171) * C116 +
             (C113 * C2172 + C31024 * C2173) * C104) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31082 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C656 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31082) *
              C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31082 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C658 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1416 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C1417 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C1418 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C31068 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C1417 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1416 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C1418 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C1820 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C1821 +
            (((C113 * C483 + C31024 * C496) * C4739 +
              (C113 * C497 + C31024 * C513) * C30775) *
                 C4736 +
             (C5715 + C5716) * C4737 + C5723 * C4738) *
                C31114) *
               C31082 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C1821 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C1820 -
            ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
             (C5716 + C5715) * C4736) *
                C31114) *
               C30890) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C1821 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C1820 -
            ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
             (C550 * C30775 + C549 * C4739) * C4736) *
                C31114) *
               C31082 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C1820 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C1821 +
            ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
             ((C113 * C6544 + C31024 * C6545) * C4739 +
              (C113 * C6546 + C31024 * C6547) * C30775) *
                 C4738) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31082 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C30890) *
              C656 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31082) *
              C657 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C31082 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C30890) *
              C658 +
          (((C9075 * C297 + C9072 * C313 + C9076 * C929 + C9073 * C938 +
             C9077 * C2170 + C9074 * C2171) *
                C4739 +
            (C9075 * C314 + C9072 * C327 + C9076 * C937 + C9073 * C944 +
             C9077 * C2172 + C9074 * C2173) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C1416 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C1417 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C1418 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C30845 * C31121) *
              C31068 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C1417 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C1416 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C1418 +
           ((C9075 * C1149 + C9072 * C1157 + C9076 * C1699 + C9073 * C1703 +
             C9077 * C6544 + C9074 * C6545) *
                C4739 +
            (C9075 * C1156 + C9072 * C1167 + C9076 * C1704 + C9073 * C1708 +
             C9077 * C6546 + C9074 * C6547) *
                C30775) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C1820 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C1821 +
            ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
              C9077 * C2003 + C9074 * C2012) *
                 C4739 +
             (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
              C9077 * C2013 + C9074 * C2021) *
                 C30775) *
                C31013 * C31114) *
               C31082 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C1821 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C1820 -
            ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
              C9075 * C1295 + C9072 * C1311) *
                 C30775 +
             (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
              C9075 * C1284 + C9072 * C1296) *
                 C4739) *
                C31013 * C31114) *
               C30890) *
              C31068 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C1821 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C1820 -
            ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
              C9075 * C499 + C9072 * C514) *
                 C30775 +
             (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
              C9075 * C484 + C9072 * C498) *
                 C4739) *
                C31013 * C31114) *
               C31082 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C1820 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C1821 +
            ((C9075 * C1283 + C9072 * C1294 + C9076 * C2403 + C9073 * C2407 +
              C9077 * C10700 + C9074 * C10701) *
                 C4739 +
             (C9075 * C1293 + C9072 * C1310 + C9076 * C2408 + C9073 * C2412 +
              C9077 * C10702 + C9074 * C10703) *
                 C30775) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C31024 * C124) * C114 +
                 (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                 C167 * C103 + C168 * C116 + C169 * C104) *
                    C31013 * C31083 -
                (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                 (C113 * C494 + C31024 * C512) * C102 +
                 (C113 * C482 + C31024 * C495) * C114) *
                    C31013 * C30932) *
                   C31082 +
               (((C113 * C926 + C31024 * C931) * C114 +
                 (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                 C960 * C103 + C961 * C116 + C962 * C104) *
                    C31013 * C30932 -
                (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                 (C113 * C305 + C31024 * C323) * C102 +
                 (C113 * C293 + C31024 * C306) * C114) *
                    C31013 * C31083) *
                   C30890) *
                  C288 +
              (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                 C553 * C116 + C554 * C104) *
                    C31013 * C30932 -
                (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                 C167 * C102 + C166 * C114) *
                    C31013 * C31083) *
                   C31082 +
               ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                 C364 * C116 + C365 * C104) *
                    C31013 * C31083 -
                (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                 C960 * C102 + C959 * C114) *
                    C31013 * C30932) *
                   C30890) *
                  C289 +
              (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                 C172 * C116 + C173 * C104) *
                    C31013 * C31083 -
                (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                 C545 * C102 + C546 * C114) *
                    C31013 * C30932) *
                   C31082 +
               ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
                 (C113 * C930 + C31024 * C939) * C116 +
                 (C113 * C940 + C31024 * C945) * C104) *
                    C31013 * C30932 -
                (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                 C356 * C102 + C357 * C114) *
                    C31013 * C31083) *
                   C30890) *
                  C31105) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C31083 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C30932) *
                  C1416 +
              (((C113 * C926 + C31024 * C931) * C114 +
                (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                C960 * C103 + C961 * C116 + C962 * C104) *
                   C31013 * C30932 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C31083) *
                  C1417 +
              (((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C31083 -
               (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
                (C113 * C1301 + C31024 * C1314) * C102 +
                (C113 * C1287 + C31024 * C1302) * C114) *
                   C31013 * C30932) *
                  C1418 +
              (((C113 * C1698 + C31024 * C1701) * C114 +
                (C113 * C1702 + C31024 * C1707) * C102 +
                (C113 * C1699 + C31024 * C1703) * C115 +
                (C113 * C1704 + C31024 * C1708) * C103 +
                (C113 * C1700 + C31024 * C1705) * C116 +
                (C113 * C1706 + C31024 * C1709) * C104) *
                   C31013 * C30932 -
               (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
                (C113 * C1158 + C31024 * C1168) * C102 +
                (C113 * C1150 + C31024 * C1159) * C114) *
                   C31013 * C31083) *
                  C31121) *
             C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C2284 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C2285 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C2286 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C31082 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C2285 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C2284 -
           (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C2286 +
           ((C113 * C2402 + C31024 * C2405) * C114 +
            (C113 * C2406 + C31024 * C2411) * C102 +
            (C113 * C2403 + C31024 * C2407) * C115 +
            (C113 * C2408 + C31024 * C2412) * C103 +
            (C113 * C2404 + C31024 * C2409) * C116 +
            (C113 * C2410 + C31024 * C2413) * C104) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            ((C5366 + C5367) * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31082 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             ((C113 * C1698 + C31024 * C1701) * C4739 +
              (C113 * C1702 + C31024 * C1707) * C30775) *
                 C4738) *
                C30932 -
            ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C30890) *
              C288 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             (C5356 + C5357) * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C31082 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             (C4867 + C4868) * C4738) *
                C31083 -
            (((C113 * C1704 + C31024 * C1708) * C30775 +
              (C113 * C1699 + C31024 * C1703) * C4739) *
                 C4738 +
             (C5357 + C5356) * C4737 + (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C289 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C31083 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C31082 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C1416 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31083) *
              C1417 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C1418 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C2284 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C2285 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C2286 -
           ((C6775 + C6776) * C4738 + (C6777 + C6778) * C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C31082 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C2285 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C2284 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C2286 +
           ((C6778 + C6777) * C4736 + (C6776 + C6775) * C4737 +
            ((C113 * C6758 + C31024 * C6759) * C4739 +
             (C113 * C6760 + C31024 * C6761) * C30775) *
                C4738) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C31082 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C31083) *
               C30890) *
              C288 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C31083) *
               C31082 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C30890) *
              C289 +
          ((((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
              C9077 * C485 + C9074 * C500) *
                 C4739 +
             (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
              C9077 * C501 + C9074 * C515) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
              C9075 * C490 + C9072 * C510) *
                 C30775 +
             (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
              C9075 * C480 + C9072 * C491) *
                 C4739) *
                C31013 * C30932) *
               C31082 +
           (((C9075 * C928 + C9072 * C935 + C9076 * C1282 + C9073 * C1292 +
              C9077 * C2404 + C9074 * C2409) *
                 C4739 +
             (C9075 * C936 + C9072 * C943 + C9076 * C1291 + C9073 * C1309 +
              C9077 * C2410 + C9074 * C2413) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
              C9075 * C301 + C9072 * C321) *
                 C30775 +
             (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
              C9075 * C291 + C9072 * C302) *
                 C4739) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C1416 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C31083) *
              C1417 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C30932) *
              C1418 +
          (((C9075 * C1698 + C9072 * C1701 + C9076 * C5677 + C9073 * C5681 +
             C9077 * C6758 + C9074 * C6759) *
                C4739 +
            (C9075 * C1702 + C9072 * C1707 + C9076 * C5680 + C9073 * C5686 +
             C9077 * C6760 + C9074 * C6761) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C2284 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C2285 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C2286 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2013 + C9073 * C2021 +
             C9075 * C2010 + C9072 * C2020) *
                C30775 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2003 + C9073 * C2012 +
             C9075 * C2002 + C9072 * C2011) *
                C4739) *
               C31013 * C31127) *
              C31082 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C2285 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C2284 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C2286 +
           ((C9075 * C2402 + C9072 * C2405 + C9076 * C6387 + C9073 * C6391 +
             C9077 * C10904 + C9074 * C10905) *
                C4739 +
            (C9075 * C2406 + C9072 * C2411 + C9076 * C6392 + C9073 * C6396 +
             C9077 * C10906 + C9074 * C10907) *
                C30775) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C31024 * C124) * C114 +
               (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
               C167 * C103 + C168 * C116 + C169 * C104) *
                  C31013 * C30845 * C30827 * C108 -
              (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
               C167 * C102 + C166 * C114) *
                  C31013 * C30845 * C30827 * C109 +
              (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
               C172 * C116 + C173 * C104) *
                  C31013 * C30845 * C30827 * C110 -
              (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
               C170 * C102 + C171 * C114) *
                  C31013 * C30845 * C30827 * C111 +
              (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
               (C113 * C123 + C31024 * C136) * C116 +
               (C113 * C137 + C31024 * C144) * C104) *
                  C31013 * C30845 * C30827 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C31148 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C31136 +
               ((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C30845 * C31111) *
                  C288 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C31136 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C31148 -
               (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                C361 * C102 + C360 * C114) *
                   C31013 * C30845 * C31111) *
                  C289 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C30845 * C31148 -
               ((C113 * C317 + C31024 * C329) * C104 +
                (C113 * C299 + C31024 * C318) * C116 + C365 * C103 +
                C364 * C115 + C356 * C102 + C357 * C114) *
                   C31013 * C30845 * C31136 +
               (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
                (C113 * C300 + C31024 * C319) * C116 +
                (C113 * C320 + C31024 * C330) * C104) *
                   C31013 * C30845 * C31111) *
                  C31105) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C31149 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C31138 +
               ((C113 * C483 + C31024 * C496) * C114 +
                (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                C550 * C103 + C551 * C116 + C552 * C104) *
                   C31013 * C31114) *
                  C30827 * C288 +
              ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                C553 * C116 + C554 * C104) *
                   C31013 * C31138 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C31149 -
               (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                C550 * C102 + C549 * C114) *
                   C31013 * C31114) *
                  C30827 * C289 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C31149 -
               ((C113 * C506 + C31024 * C518) * C104 +
                (C113 * C488 + C31024 * C507) * C116 + C554 * C103 +
                C553 * C115 + C545 * C102 + C546 * C114) *
                   C31013 * C31138 +
               (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
                (C113 * C489 + C31024 * C508) * C116 +
                (C113 * C509 + C31024 * C519) * C104) *
                   C31013 * C31114) *
                  C30827 * C31105) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C1074 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C1075 +
               ((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C30845 * C31111) *
                  C31145 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C1075 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C1074 -
               (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                C361 * C102 + C360 * C114) *
                   C31013 * C30845 * C31111) *
                  C31132 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C30845 * C1074 -
               (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                C356 * C102 + C357 * C114) *
                   C31013 * C30845 * C1075 +
               (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
                (C113 * C300 + C31024 * C319) * C116 +
                (C113 * C320 + C31024 * C330) * C104) *
                   C31013 * C30845 * C31111) *
                  C31105) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C31024 * C124) * C114 +
               (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
               C167 * C103 + C168 * C116 + C169 * C104) *
                  C31013 * C30845 * C1142 -
              (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
               (C113 * C305 + C31024 * C323) * C102 +
               (C113 * C293 + C31024 * C306) * C114) *
                  C31013 * C30845 * C1143 +
              ((C113 * C294 + C31024 * C307) * C114 +
               (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
               C361 * C103 + C362 * C116 + C363 * C104) *
                  C31013 * C30845 * C1144 -
              ((C113 * C1154 + C31024 * C1166) * C104 +
               (C113 * C1148 + C31024 * C1155) * C116 +
               (C113 * C1156 + C31024 * C1167) * C103 +
               (C113 * C1149 + C31024 * C1157) * C115 +
               (C113 * C1158 + C31024 * C1168) * C102 +
               (C113 * C1150 + C31024 * C1159) * C114) *
                  C31013 * C30845 * C1145 +
              ((C113 * C1151 + C31024 * C1160) * C114 +
               (C113 * C1161 + C31024 * C1169) * C102 +
               (C113 * C1152 + C31024 * C1162) * C115 +
               (C113 * C1163 + C31024 * C1170) * C103 +
               (C113 * C1153 + C31024 * C1164) * C116 +
               (C113 * C1165 + C31024 * C1171) * C104) *
                  C31013 * C30845 * C1146) *
             C30799 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C31149 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C31138 +
               ((C113 * C483 + C31024 * C496) * C114 +
                (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                C550 * C103 + C551 * C116 + C552 * C104) *
                   C31013 * C31114) *
                  C1074 +
              (((C113 * C926 + C31024 * C931) * C114 +
                (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                C960 * C103 + C961 * C116 + C962 * C104) *
                   C31013 * C31138 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C31149 -
               ((C113 * C1291 + C31024 * C1309) * C104 +
                (C113 * C1282 + C31024 * C1292) * C116 +
                (C113 * C1293 + C31024 * C1310) * C103 +
                (C113 * C1283 + C31024 * C1294) * C115 +
                (C113 * C1295 + C31024 * C1311) * C102 +
                (C113 * C1284 + C31024 * C1296) * C114) *
                   C31013 * C31114) *
                  C1075 +
              (((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C31149 -
               ((C113 * C1297 + C31024 * C1312) * C104 +
                (C113 * C1285 + C31024 * C1298) * C116 +
                (C113 * C1299 + C31024 * C1313) * C103 +
                (C113 * C1286 + C31024 * C1300) * C115 +
                (C113 * C1301 + C31024 * C1314) * C102 +
                (C113 * C1287 + C31024 * C1302) * C114) *
                   C31013 * C31138 +
               ((C113 * C1288 + C31024 * C1303) * C114 +
                (C113 * C1304 + C31024 * C1315) * C102 +
                (C113 * C1289 + C31024 * C1305) * C115 +
                (C113 * C1306 + C31024 * C1316) * C103 +
                (C113 * C1290 + C31024 * C1307) * C116 +
                (C113 * C1308 + C31024 * C1317) * C104) *
                   C31013 * C31114) *
                  C31111) *
             C30799 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C1820 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C1821 +
               ((C113 * C483 + C31024 * C496) * C114 +
                (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                C550 * C103 + C551 * C116 + C552 * C104) *
                   C31013 * C31114) *
                  C30827 * C31145 +
              ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                C553 * C116 + C554 * C104) *
                   C31013 * C1821 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C1820 -
               (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                C550 * C102 + C549 * C114) *
                   C31013 * C31114) *
                  C30827 * C31132 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C1820 -
               (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                C545 * C102 + C546 * C114) *
                   C31013 * C1821 +
               (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
                (C113 * C489 + C31024 * C508) * C116 +
                (C113 * C509 + C31024 * C519) * C104) *
                   C31013 * C31114) *
                  C30827 * C31105) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C1820 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C1821 +
               ((C113 * C483 + C31024 * C496) * C114 +
                (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                C550 * C103 + C551 * C116 + C552 * C104) *
                   C31013 * C31114) *
                  C31148 +
              (((C113 * C926 + C31024 * C931) * C114 +
                (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                C960 * C103 + C961 * C116 + C962 * C104) *
                   C31013 * C1821 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C1820 -
               ((C113 * C1291 + C31024 * C1309) * C104 +
                (C113 * C1282 + C31024 * C1292) * C116 +
                (C113 * C1293 + C31024 * C1310) * C103 +
                (C113 * C1283 + C31024 * C1294) * C115 +
                (C113 * C1295 + C31024 * C1311) * C102 +
                (C113 * C1284 + C31024 * C1296) * C114) *
                   C31013 * C31114) *
                  C31136 +
              (((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C1820 -
               (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
                (C113 * C1301 + C31024 * C1314) * C102 +
                (C113 * C1287 + C31024 * C1302) * C114) *
                   C31013 * C1821 +
               ((C113 * C1288 + C31024 * C1303) * C114 +
                (C113 * C1304 + C31024 * C1315) * C102 +
                (C113 * C1289 + C31024 * C1305) * C115 +
                (C113 * C1306 + C31024 * C1316) * C103 +
                (C113 * C1290 + C31024 * C1307) * C116 +
                (C113 * C1308 + C31024 * C1317) * C104) *
                   C31013 * C31114) *
                  C31111) *
             C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C1995 -
          (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
           (C113 * C494 + C31024 * C512) * C102 +
           (C113 * C482 + C31024 * C495) * C114) *
              C31013 * C1996 +
          ((C113 * C483 + C31024 * C496) * C114 +
           (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
           C551 * C116 + C552 * C104) *
              C31013 * C1997 -
          ((C113 * C2006 + C31024 * C2018) * C104 +
           (C113 * C2000 + C31024 * C2007) * C116 +
           (C113 * C2008 + C31024 * C2019) * C103 +
           (C113 * C2001 + C31024 * C2009) * C115 +
           (C113 * C2010 + C31024 * C2020) * C102 +
           (C113 * C2002 + C31024 * C2011) * C114) *
              C31013 * C1998 +
          ((C113 * C2003 + C31024 * C2012) * C114 +
           (C113 * C2013 + C31024 * C2021) * C102 +
           (C113 * C2004 + C31024 * C2014) * C115 +
           (C113 * C2015 + C31024 * C2022) * C103 +
           (C113 * C2005 + C31024 * C2016) * C116 +
           (C113 * C2017 + C31024 * C2023) * C104) *
              C31013 * C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            ((C113 * C1284 + C31024 * C1296) * C4739 +
             (C113 * C1295 + C31024 * C1311) * C30775) *
                C4737 +
            ((C113 * C1288 + C31024 * C1303) * C4739 +
             (C113 * C1304 + C31024 * C1315) * C30775) *
                C4738) *
               C31114) *
              C30827 * C288 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C31138 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31149 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31149 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C31138 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C1074 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
            (C5719 + C5720) * C4738) *
               C31138 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31149 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C1075 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31149 -
           (((C113 * C5682 + C31024 * C5687) * C30775 +
             (C113 * C5678 + C31024 * C5683) * C4739) *
                C4738 +
            (C5720 + C5719) * C4737 + C5690 * C4736) *
               C31138 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C30827 * C31145 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C1821 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C1820 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C1820 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C1821 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C31148 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C1821 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C1820 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C31136 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C1820 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C1821 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C1995 -
          (C5690 * C4738 + (C5368 + C5369) * C4737 +
           ((C113 * C494 + C31024 * C512) * C30775 +
            (C113 * C482 + C31024 * C495) * C4739) *
               C4736) *
              C1996 +
          (((C113 * C483 + C31024 * C496) * C4739 +
            (C113 * C497 + C31024 * C513) * C30775) *
               C4736 +
           (C5715 + C5716) * C4737 + C5723 * C4738) *
              C1997 -
          (((C113 * C6389 + C31024 * C6395) * C30775 +
            (C113 * C6386 + C31024 * C6390) * C4739) *
               C4738 +
           ((C113 * C2406 + C31024 * C2411) * C30775 +
            (C113 * C2402 + C31024 * C2405) * C4739) *
               C4737 +
           ((C113 * C2010 + C31024 * C2020) * C30775 +
            (C113 * C2002 + C31024 * C2011) * C4739) *
               C4736) *
              C1998 +
          (((C113 * C2003 + C31024 * C2012) * C4739 +
            (C113 * C2013 + C31024 * C2021) * C30775) *
               C4736 +
           ((C113 * C6387 + C31024 * C6391) * C4739 +
            (C113 * C6392 + C31024 * C6396) * C30775) *
               C4737 +
           ((C113 * C6388 + C31024 * C6393) * C4739 +
            (C113 * C6394 + C31024 * C6397) * C30775) *
               C4738) *
              C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C30827 * C108 -
          ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
            C9075 * C127 + C9072 * C139) *
               C30775 +
           (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
            C9075 * C118 + C9072 * C126) *
               C4739) *
              C31013 * C30845 * C30827 * C109 +
          ((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
            C9077 * C485 + C9074 * C500) *
               C4739 +
           (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
            C9077 * C501 + C9074 * C515) *
               C30775) *
              C31013 * C30845 * C30827 * C110 -
          ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
            C9075 * C130 + C9072 * C141) *
               C30775 +
           (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
            C9075 * C120 + C9072 * C131) *
               C4739) *
              C31013 * C30845 * C30827 * C111 +
          ((C9075 * C121 + C9072 * C132 + C9076 * C488 + C9073 * C507 +
            C9077 * C489 + C9074 * C508) *
               C4739 +
           (C9075 * C133 + C9072 * C142 + C9076 * C506 + C9073 * C518 +
            C9077 * C509 + C9074 * C519) *
               C30775) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C31136 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C30827 * C288 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C31138 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C31149 -
           ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
             C9075 * C499 + C9072 * C514) *
                C30775 +
            (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
             C9075 * C484 + C9072 * C498) *
                C4739) *
               C31013 * C31114) *
              C30827 * C289 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C485 + C9072 * C500 + C9076 * C2000 + C9073 * C2007 +
             C9077 * C2005 + C9074 * C2016) *
                C4739 +
            (C9075 * C501 + C9072 * C515 + C9076 * C2006 + C9073 * C2018 +
             C9077 * C2017 + C9074 * C2023) *
                C30775) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C1075 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C1142 -
          ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
            C9075 * C305 + C9072 * C323) *
               C30775 +
           (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
            C9075 * C293 + C9072 * C306) *
               C4739) *
              C31013 * C30845 * C1143 +
          ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
            C9077 * C1288 + C9074 * C1303) *
               C4739 +
           (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
            C9077 * C1304 + C9074 * C1315) *
               C30775) *
              C31013 * C30845 * C1144 -
          ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
            C9075 * C1158 + C9072 * C1168) *
               C30775 +
           (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
            C9075 * C1150 + C9072 * C1159) *
               C4739) *
              C31013 * C30845 * C1145 +
          ((C9075 * C1151 + C9072 * C1160 + C9076 * C5678 + C9073 * C5683 +
            C9077 * C5679 + C9074 * C5684) *
               C4739 +
           (C9075 * C1161 + C9072 * C1169 + C9076 * C5682 + C9073 * C5687 +
            C9077 * C5685 + C9074 * C5688) *
               C30775) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C1074 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C31138 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C31149 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C31114) *
              C1075 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C1288 + C9072 * C1303 + C9076 * C6386 + C9073 * C6390 +
             C9077 * C6388 + C9074 * C6393) *
                C4739 +
            (C9075 * C1304 + C9072 * C1315 + C9076 * C6389 + C9073 * C6395 +
             C9077 * C6394 + C9074 * C6397) *
                C30775) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C30827 * C31145 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C1821 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C1820 -
           ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
             C9075 * C499 + C9072 * C514) *
                C30775 +
            (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
             C9075 * C484 + C9072 * C498) *
                C4739) *
               C31013 * C31114) *
              C30827 * C31132 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C485 + C9072 * C500 + C9076 * C2000 + C9073 * C2007 +
             C9077 * C2005 + C9074 * C2016) *
                C4739 +
            (C9075 * C501 + C9072 * C515 + C9076 * C2006 + C9073 * C2018 +
             C9077 * C2017 + C9074 * C2023) *
                C30775) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C31148 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C1821 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C1820 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C31114) *
              C31136 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C1288 + C9072 * C1303 + C9076 * C6386 + C9073 * C6390 +
             C9077 * C6388 + C9074 * C6393) *
                C4739 +
            (C9075 * C1304 + C9072 * C1315 + C9076 * C6389 + C9073 * C6395 +
             C9077 * C6394 + C9074 * C6397) *
                C30775) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C1995 -
          ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
            C9075 * C494 + C9072 * C512) *
               C30775 +
           (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
            C9075 * C482 + C9072 * C495) *
               C4739) *
              C31013 * C1996 +
          ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
            C9077 * C2003 + C9074 * C2012) *
               C4739 +
           (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
            C9077 * C2013 + C9074 * C2021) *
               C30775) *
              C31013 * C1997 -
          ((C9077 * C10548 + C9074 * C10552 + C9076 * C2013 + C9073 * C2021 +
            C9075 * C2010 + C9072 * C2020) *
               C30775 +
           (C9077 * C10546 + C9074 * C10549 + C9076 * C2003 + C9073 * C2012 +
            C9075 * C2002 + C9072 * C2011) *
               C4739) *
              C31013 * C1998 +
          ((C9075 * C2003 + C9072 * C2012 + C9076 * C10546 + C9073 * C10549 +
            C9077 * C10547 + C9074 * C10550) *
               C4739 +
           (C9075 * C2013 + C9072 * C2021 + C9076 * C10548 + C9073 * C10552 +
            C9077 * C10551 + C9074 * C10553) *
               C30775) *
              C31013 * C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C31083 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C30932) *
                  C30827 * C656 +
              ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                C553 * C116 + C554 * C104) *
                   C31013 * C30932 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C31083) *
                  C30827 * C657 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C31083 -
               (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                C545 * C102 + C546 * C114) *
                   C31013 * C30932) *
                  C30827 * C658 +
              ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
                (C113 * C770 + C31024 * C771) * C116 +
                (C113 * C772 + C31024 * C773) * C104) *
                   C31013 * C30932 -
               (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
                C170 * C102 + C171 * C114) *
                   C31013 * C31083) *
                  C30827 * C31115) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C31024 * C124) * C114 +
                 (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                 C167 * C103 + C168 * C116 + C169 * C104) *
                    C31013 * C31083 -
                (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                 (C113 * C494 + C31024 * C512) * C102 +
                 (C113 * C482 + C31024 * C495) * C114) *
                    C31013 * C30932) *
                   C1074 +
               (((C113 * C926 + C31024 * C931) * C114 +
                 (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                 C960 * C103 + C961 * C116 + C962 * C104) *
                    C31013 * C30932 -
                (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                 (C113 * C305 + C31024 * C323) * C102 +
                 (C113 * C293 + C31024 * C306) * C114) *
                    C31013 * C31083) *
                   C1075 +
               (((C113 * C294 + C31024 * C307) * C114 +
                 (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                 C361 * C103 + C362 * C116 + C363 * C104) *
                    C31013 * C31083 -
                (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
                 (C113 * C1301 + C31024 * C1314) * C102 +
                 (C113 * C1287 + C31024 * C1302) * C114) *
                    C31013 * C30932) *
                   C31111) *
                  C31068 +
              (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                 C553 * C116 + C554 * C104) *
                    C31013 * C30932 -
                (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                 C167 * C102 + C166 * C114) *
                    C31013 * C31083) *
                   C1074 +
               ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                 C364 * C116 + C365 * C104) *
                    C31013 * C31083 -
                (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                 C960 * C102 + C959 * C114) *
                    C31013 * C30932) *
                   C1075 +
               ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
                 (C113 * C1584 + C31024 * C1585) * C116 +
                 (C113 * C1586 + C31024 * C1587) * C104) *
                    C31013 * C30932 -
                (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                 C361 * C102 + C360 * C114) *
                    C31013 * C31083) *
                   C31111) *
                  C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C2284 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C2285 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C2286 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C30827 * C31068 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C2285 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C2284 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C2286 +
           (C2304 * C114 + C2303 * C102 + C2302 * C115 + C2301 * C103 +
            (C113 * C2288 + C31024 * C2289) * C116 +
            (C113 * C2290 + C31024 * C2291) * C104) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C656 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31083) *
              C30827 * C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31083 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C658 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C1074 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             (C5719 + C5720) * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C1075 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
            (((C113 * C5682 + C31024 * C5687) * C30775 +
              (C113 * C5678 + C31024 * C5683) * C4739) *
                 C4738 +
             (C5720 + C5719) * C4737 + C5690 * C4736) *
                C30932) *
               C31111) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C1074 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31083 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C1075 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C2284 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C2285 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C2286 -
           (((C113 * C6389 + C31024 * C6395) * C30775 +
             (C113 * C6386 + C31024 * C6390) * C4739) *
                C4738 +
            ((C113 * C2406 + C31024 * C2411) * C30775 +
             (C113 * C2402 + C31024 * C2405) * C4739) *
                C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C30827 * C31068 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C2285 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C2284 -
           ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C2286 +
           ((C2304 * C4739 + C2303 * C30775) * C4736 +
            ((C113 * C2403 + C31024 * C2407) * C4739 +
             (C113 * C2408 + C31024 * C2412) * C30775) *
                C4737 +
            ((C113 * C6656 + C31024 * C6657) * C4739 +
             (C113 * C6658 + C31024 * C6659) * C30775) *
                C4738) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C30827 * C656 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C31083) *
              C30827 * C657 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C30932) *
              C30827 * C658 +
          (((C9075 * C486 + C9072 * C502 + C9076 * C487 + C9073 * C505 +
             C9077 * C2288 + C9074 * C2289) *
                C4739 +
            (C9075 * C503 + C9072 * C516 + C9076 * C504 + C9073 * C517 +
             C9077 * C2290 + C9074 * C2291) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C1074 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C31083) *
               C1075 +
           (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
              C9077 * C1288 + C9074 * C1303) *
                 C4739 +
             (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
              C9077 * C1304 + C9074 * C1315) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
              C9075 * C1301 + C9072 * C1314) *
                 C30775 +
             (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
              C9075 * C1287 + C9072 * C1302) *
                 C4739) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C31083) *
               C1074 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C1075 +
           (((C9075 * C1286 + C9072 * C1300 + C9076 * C1289 + C9073 * C1305 +
              C9077 * C6656 + C9074 * C6657) *
                 C4739 +
             (C9075 * C1299 + C9072 * C1313 + C9076 * C1306 + C9073 * C1316 +
              C9077 * C6658 + C9074 * C6659) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
              C9075 * C310 + C9072 * C325) *
                 C30775 +
             (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
              C9075 * C295 + C9072 * C309) *
                 C4739) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C2284 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C2285 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C2286 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2013 + C9073 * C2021 +
             C9075 * C2010 + C9072 * C2020) *
                C30775 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2003 + C9073 * C2012 +
             C9075 * C2002 + C9072 * C2011) *
                C4739) *
               C31013 * C31127) *
              C30827 * C31068 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C2285 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C2284 -
           ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
             C9075 * C499 + C9072 * C514) *
                C30775 +
            (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
             C9075 * C484 + C9072 * C498) *
                C4739) *
               C31013 * C2286 +
           ((C9075 * C2001 + C9072 * C2009 + C9076 * C2004 + C9073 * C2014 +
             C9077 * C10802 + C9074 * C10803) *
                C4739 +
            (C9075 * C2008 + C9072 * C2019 + C9076 * C2015 + C9073 * C2022 +
             C9077 * C10804 + C9074 * C10805) *
                C30775) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C30827 * C108 -
          (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 + C167 * C102 +
           C166 * C114) *
              C31013 * C30845 * C30827 * C109 +
          (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 + C172 * C116 +
           C173 * C104) *
              C31013 * C30845 * C30827 * C110 -
          (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 + C170 * C102 +
           C171 * C114) *
              C31013 * C30845 * C30827 * C111 +
          (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
           (C113 * C123 + C31024 * C136) * C116 +
           (C113 * C137 + C31024 * C144) * C104) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31148 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31136 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C288 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31136 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31148 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31148 -
           ((C113 * C317 + C31024 * C329) * C104 +
            (C113 * C299 + C31024 * C318) * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C31136 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C1820 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C1821 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C30827 * C31145 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C1821 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C1820 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31114) *
              C30827 * C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C1820 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C1821 +
           (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
            (C113 * C489 + C31024 * C508) * C116 +
            (C113 * C509 + C31024 * C519) * C104) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C1820 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C1821 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C31148 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C1821 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C1820 -
           ((C113 * C1291 + C31024 * C1309) * C104 +
            (C113 * C1282 + C31024 * C1292) * C116 +
            (C113 * C1293 + C31024 * C1310) * C103 +
            (C113 * C1283 + C31024 * C1294) * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31114) *
              C31136 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C1820 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C1821 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C30827 * C31145 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C1821 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C1820 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C1820 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C1821 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C31148 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C1821 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C1820 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C31136 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C1820 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C1821 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C30827 * C108 -
          ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
            C9075 * C127 + C9072 * C139) *
               C30775 +
           (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
            C9075 * C118 + C9072 * C126) *
               C4739) *
              C31013 * C30845 * C30827 * C109 +
          ((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
            C9077 * C485 + C9074 * C500) *
               C4739 +
           (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
            C9077 * C501 + C9074 * C515) *
               C30775) *
              C31013 * C30845 * C30827 * C110 -
          ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
            C9075 * C130 + C9072 * C141) *
               C30775 +
           (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
            C9075 * C120 + C9072 * C131) *
               C4739) *
              C31013 * C30845 * C30827 * C111 +
          ((C9075 * C121 + C9072 * C132 + C9076 * C488 + C9073 * C507 +
            C9077 * C489 + C9074 * C508) *
               C4739 +
           (C9075 * C133 + C9072 * C142 + C9076 * C506 + C9073 * C518 +
            C9077 * C509 + C9074 * C519) *
               C30775) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C31136 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C1075 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C1142 -
          ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
            C9075 * C305 + C9072 * C323) *
               C30775 +
           (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
            C9075 * C293 + C9072 * C306) *
               C4739) *
              C31013 * C30845 * C1143 +
          ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
            C9077 * C1288 + C9074 * C1303) *
               C4739 +
           (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
            C9077 * C1304 + C9074 * C1315) *
               C30775) *
              C31013 * C30845 * C1144 -
          ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
            C9075 * C1158 + C9072 * C1168) *
               C30775 +
           (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
            C9075 * C1150 + C9072 * C1159) *
               C4739) *
              C31013 * C30845 * C1145 +
          ((C9075 * C1151 + C9072 * C1160 + C9076 * C5678 + C9073 * C5683 +
            C9077 * C5679 + C9074 * C5684) *
               C4739 +
           (C9075 * C1161 + C9072 * C1169 + C9076 * C5682 + C9073 * C5687 +
            C9077 * C5685 + C9074 * C5688) *
               C30775) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C30827 * C31145 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C1821 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C1820 -
           ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
             C9075 * C499 + C9072 * C514) *
                C30775 +
            (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
             C9075 * C484 + C9072 * C498) *
                C4739) *
               C31013 * C31114) *
              C30827 * C31132 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C485 + C9072 * C500 + C9076 * C2000 + C9073 * C2007 +
             C9077 * C2005 + C9074 * C2016) *
                C4739 +
            (C9075 * C501 + C9072 * C515 + C9076 * C2006 + C9073 * C2018 +
             C9077 * C2017 + C9074 * C2023) *
                C30775) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C31148 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C1821 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C1820 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C31114) *
              C31136 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C1820 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C1821 +
           ((C9075 * C1288 + C9072 * C1303 + C9076 * C6386 + C9073 * C6390 +
             C9077 * C6388 + C9074 * C6393) *
                C4739 +
            (C9075 * C1304 + C9072 * C1315 + C9076 * C6389 + C9073 * C6395 +
             C9077 * C6394 + C9074 * C6397) *
                C30775) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[65] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C117 + C31024 * C124) * C4739 +
                      (C113 * C125 + C31024 * C138) * C30775) *
                         C4736 +
                     (C4883 + C4884) * C4737 + C4889 * C4738) *
                        C3274 -
                    (C5690 * C4738 + (C5368 + C5369) * C4737 +
                     ((C113 * C494 + C31024 * C512) * C30775 +
                      (C113 * C482 + C31024 * C495) * C4739) *
                         C4736) *
                        C30932) *
                       C31082 +
                   (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                     C6096 * C4738) *
                        C30932 -
                    (C5550 * C4738 + (C4886 + C4885) * C4737 +
                     (C4884 + C4883) * C4736) *
                        C3274) *
                       C30890) *
                      C30804 +
                  ((((C548 * C4739 + C547 * C30775) * C4736 +
                     (C5354 + C5355) * C4737 + C5985 * C4738) *
                        C30932 -
                    (C4881 * C4738 + (C4864 + C4863) * C4737 +
                     (C167 * C30775 + C166 * C4739) * C4736) *
                        C3274) *
                       C31082 +
                   (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                     C5826 * C4738) *
                        C3274 -
                    ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                     (C5355 + C5354) * C4736) *
                        C30932) *
                       C30890) *
                      C30813 +
                  ((((C168 * C4739 + C169 * C30775) * C4736 +
                     (C4869 + C4870) * C4737 + C4882 * C4738) *
                        C3274 -
                    ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
                     (C545 * C30775 + C546 * C4739) * C4736) *
                        C30932) *
                       C31082 +
                   (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
                     ((C113 * C1700 + C31024 * C1705) * C4739 +
                      (C113 * C1706 + C31024 * C1709) * C30775) *
                         C4738) *
                        C30932 -
                    ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
                     (C4870 + C4869) * C4736) *
                        C3274) *
                       C30890) *
                      C2883)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C31024 * C124) * C114 +
                     (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                     C167 * C103 + C168 * C116 + C169 * C104) *
                        C31013 * C3274 -
                    (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                     (C113 * C494 + C31024 * C512) * C102 +
                     (C113 * C482 + C31024 * C495) * C114) *
                        C31013 * C30932) *
                       C31082 +
                   (((C113 * C926 + C31024 * C931) * C114 +
                     (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                     C960 * C103 + C961 * C116 + C962 * C104) *
                        C31013 * C30932 -
                    (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                     (C113 * C305 + C31024 * C323) * C102 +
                     (C113 * C293 + C31024 * C306) * C114) *
                        C31013 * C3274) *
                       C30890) *
                      C30804 +
                  (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                     C553 * C116 + C554 * C104) *
                        C31013 * C30932 -
                    (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                     C167 * C102 + C166 * C114) *
                        C31013 * C3274) *
                       C31082 +
                   ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                     C364 * C116 + C365 * C104) *
                        C31013 * C3274 -
                    (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                     C960 * C102 + C959 * C114) *
                        C31013 * C30932) *
                       C30890) *
                      C30813 +
                  (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                     C172 * C116 + C173 * C104) *
                        C31013 * C3274 -
                    (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                     C545 * C102 + C546 * C114) *
                        C31013 * C30932) *
                       C31082 +
                   ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
                     (C113 * C930 + C31024 * C939) * C116 +
                     (C113 * C940 + C31024 * C945) * C104) *
                        C31013 * C30932 -
                    (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                     C356 * C102 + C357 * C114) *
                        C31013 * C3274) *
                       C30890) *
                      C2883)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C9075 * C117 + C9072 * C124 + C9076 * C482 +
                      C9073 * C495 + C9077 * C483 + C9074 * C496) *
                         C4739 +
                     (C9075 * C125 + C9072 * C138 + C9076 * C494 +
                      C9073 * C512 + C9077 * C497 + C9074 * C513) *
                         C30775) *
                        C31013 * C3274 -
                    ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 +
                      C9073 * C513 + C9075 * C494 + C9072 * C512) *
                         C30775 +
                     (C9077 * C2002 + C9074 * C2011 + C9076 * C483 +
                      C9073 * C496 + C9075 * C482 + C9072 * C495) *
                         C4739) *
                        C31013 * C30932) *
                       C31082 +
                   (((C9075 * C926 + C9072 * C931 + C9076 * C1284 +
                      C9073 * C1296 + C9077 * C2402 + C9074 * C2405) *
                         C4739 +
                     (C9075 * C932 + C9072 * C941 + C9076 * C1295 +
                      C9073 * C1311 + C9077 * C2406 + C9074 * C2411) *
                         C30775) *
                        C31013 * C30932 -
                    ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 +
                      C9073 * C941 + C9075 * C305 + C9072 * C323) *
                         C30775 +
                     (C9077 * C1284 + C9074 * C1296 + C9076 * C926 +
                      C9073 * C931 + C9075 * C293 + C9072 * C306) *
                         C4739) *
                        C31013 * C3274) *
                       C30890) *
                      C30804 +
                  ((((C9075 * C481 + C9072 * C493 + C9076 * C484 +
                      C9073 * C498 + C9077 * C2001 + C9074 * C2009) *
                         C4739 +
                     (C9075 * C492 + C9072 * C511 + C9076 * C499 +
                      C9073 * C514 + C9077 * C2008 + C9074 * C2019) *
                         C30775) *
                        C31013 * C30932 -
                    ((C9077 * C499 + C9074 * C514 + C9076 * C492 +
                      C9073 * C511 + C9075 * C127 + C9072 * C139) *
                         C30775 +
                     (C9077 * C484 + C9074 * C498 + C9076 * C481 +
                      C9073 * C493 + C9075 * C118 + C9072 * C126) *
                         C4739) *
                        C31013 * C3274) *
                       C31082 +
                   (((C9075 * C292 + C9072 * C304 + C9076 * C927 +
                      C9073 * C933 + C9077 * C1283 + C9074 * C1294) *
                         C4739 +
                     (C9075 * C303 + C9072 * C322 + C9076 * C934 +
                      C9073 * C942 + C9077 * C1293 + C9074 * C1310) *
                         C30775) *
                        C31013 * C3274 -
                    ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 +
                      C9073 * C1310 + C9075 * C934 + C9072 * C942) *
                         C30775 +
                     (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 +
                      C9073 * C1294 + C9075 * C927 + C9072 * C933) *
                         C4739) *
                        C31013 * C30932) *
                       C30890) *
                      C30813 +
                  ((((C9075 * C119 + C9072 * C128 + C9076 * C480 +
                      C9073 * C491 + C9077 * C485 + C9074 * C500) *
                         C4739 +
                     (C9075 * C129 + C9072 * C140 + C9076 * C490 +
                      C9073 * C510 + C9077 * C501 + C9074 * C515) *
                         C30775) *
                        C31013 * C3274 -
                    ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 +
                      C9073 * C515 + C9075 * C490 + C9072 * C510) *
                         C30775 +
                     (C9077 * C2000 + C9074 * C2007 + C9076 * C485 +
                      C9073 * C500 + C9075 * C480 + C9072 * C491) *
                         C4739) *
                        C31013 * C30932) *
                       C31082 +
                   (((C9075 * C928 + C9072 * C935 + C9076 * C1282 +
                      C9073 * C1292 + C9077 * C2404 + C9074 * C2409) *
                         C4739 +
                     (C9075 * C936 + C9072 * C943 + C9076 * C1291 +
                      C9073 * C1309 + C9077 * C2410 + C9074 * C2413) *
                         C30775) *
                        C31013 * C30932 -
                    ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 +
                      C9073 * C943 + C9075 * C301 + C9072 * C321) *
                         C30775 +
                     (C9077 * C1282 + C9074 * C1292 + C9076 * C928 +
                      C9073 * C935 + C9075 * C291 + C9072 * C302) *
                         C4739) *
                        C31013 * C3274) *
                       C30890) *
                      C2883)) /
                    (p * q * std::sqrt(p + q));
    d2ee[66] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C117 + C31024 * C124) * C4739 +
                      (C113 * C125 + C31024 * C138) * C30775) *
                         C4736 +
                     (C4883 + C4884) * C4737 + C4889 * C4738) *
                        C30928 -
                    (C5690 * C4738 + (C5368 + C5369) * C4737 +
                     ((C113 * C494 + C31024 * C512) * C30775 +
                      (C113 * C482 + C31024 * C495) * C4739) *
                         C4736) *
                        C30935 +
                    (((C113 * C483 + C31024 * C496) * C4739 +
                      (C113 * C497 + C31024 * C513) * C30775) *
                         C4736 +
                     (C5715 + C5716) * C4737 + C5723 * C4738) *
                        C3782) *
                       C31082 +
                   (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                     C6096 * C4738) *
                        C30935 -
                    (C5550 * C4738 + (C4886 + C4885) * C4737 +
                     (C4884 + C4883) * C4736) *
                        C30928 -
                    ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
                     (C5716 + C5715) * C4736) *
                        C3782) *
                       C30890) *
                      C2620 +
                  ((((C548 * C4739 + C547 * C30775) * C4736 +
                     (C5354 + C5355) * C4737 + C5985 * C4738) *
                        C30935 -
                    (C4881 * C4738 + (C4864 + C4863) * C4737 +
                     (C167 * C30775 + C166 * C4739) * C4736) *
                        C30928 -
                    ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
                     (C550 * C30775 + C549 * C4739) * C4736) *
                        C3782) *
                       C31082 +
                   (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                     C5826 * C4738) *
                        C30928 -
                    ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                     (C5355 + C5354) * C4736) *
                        C30935 +
                    ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
                     ((C113 * C6544 + C31024 * C6545) * C4739 +
                      (C113 * C6546 + C31024 * C6547) * C30775) *
                         C4738) *
                        C3782) *
                       C30890) *
                      C30810)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C31024 * C124) * C114 +
                     (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                     C167 * C103 + C168 * C116 + C169 * C104) *
                        C31013 * C30928 -
                    (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                     (C113 * C494 + C31024 * C512) * C102 +
                     (C113 * C482 + C31024 * C495) * C114) *
                        C31013 * C30935 +
                    ((C113 * C483 + C31024 * C496) * C114 +
                     (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                     C550 * C103 + C551 * C116 + C552 * C104) *
                        C31013 * C3782) *
                       C31082 +
                   (((C113 * C926 + C31024 * C931) * C114 +
                     (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                     C960 * C103 + C961 * C116 + C962 * C104) *
                        C31013 * C30935 -
                    (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                     (C113 * C305 + C31024 * C323) * C102 +
                     (C113 * C293 + C31024 * C306) * C114) *
                        C31013 * C30928 -
                    (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
                     (C113 * C1295 + C31024 * C1311) * C102 +
                     (C113 * C1284 + C31024 * C1296) * C114) *
                        C31013 * C3782) *
                       C30890) *
                      C2620 +
                  (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                     C553 * C116 + C554 * C104) *
                        C31013 * C30935 -
                    (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                     C167 * C102 + C166 * C114) *
                        C31013 * C30928 -
                    (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                     C550 * C102 + C549 * C114) *
                        C31013 * C3782) *
                       C31082 +
                   ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                     C364 * C116 + C365 * C104) *
                        C31013 * C30928 -
                    (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                     C960 * C102 + C959 * C114) *
                        C31013 * C30935 +
                    (C2186 * C114 + C2185 * C102 + C2184 * C115 + C2183 * C103 +
                     (C113 * C2170 + C31024 * C2171) * C116 +
                     (C113 * C2172 + C31024 * C2173) * C104) *
                        C31013 * C3782) *
                       C30890) *
                      C30810)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C9075 * C117 + C9072 * C124 + C9076 * C482 +
                      C9073 * C495 + C9077 * C483 + C9074 * C496) *
                         C4739 +
                     (C9075 * C125 + C9072 * C138 + C9076 * C494 +
                      C9073 * C512 + C9077 * C497 + C9074 * C513) *
                         C30775) *
                        C31013 * C30928 -
                    ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 +
                      C9073 * C513 + C9075 * C494 + C9072 * C512) *
                         C30775 +
                     (C9077 * C2002 + C9074 * C2011 + C9076 * C483 +
                      C9073 * C496 + C9075 * C482 + C9072 * C495) *
                         C4739) *
                        C31013 * C30935 +
                    ((C9075 * C483 + C9072 * C496 + C9076 * C2002 +
                      C9073 * C2011 + C9077 * C2003 + C9074 * C2012) *
                         C4739 +
                     (C9075 * C497 + C9072 * C513 + C9076 * C2010 +
                      C9073 * C2020 + C9077 * C2013 + C9074 * C2021) *
                         C30775) *
                        C31013 * C3782) *
                       C31082 +
                   (((C9075 * C926 + C9072 * C931 + C9076 * C1284 +
                      C9073 * C1296 + C9077 * C2402 + C9074 * C2405) *
                         C4739 +
                     (C9075 * C932 + C9072 * C941 + C9076 * C1295 +
                      C9073 * C1311 + C9077 * C2406 + C9074 * C2411) *
                         C30775) *
                        C31013 * C30935 -
                    ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 +
                      C9073 * C941 + C9075 * C305 + C9072 * C323) *
                         C30775 +
                     (C9077 * C1284 + C9074 * C1296 + C9076 * C926 +
                      C9073 * C931 + C9075 * C293 + C9072 * C306) *
                         C4739) *
                        C31013 * C30928 -
                    ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 +
                      C9073 * C2411 + C9075 * C1295 + C9072 * C1311) *
                         C30775 +
                     (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 +
                      C9073 * C2405 + C9075 * C1284 + C9072 * C1296) *
                         C4739) *
                        C31013 * C3782) *
                       C30890) *
                      C2620 +
                  ((((C9075 * C481 + C9072 * C493 + C9076 * C484 +
                      C9073 * C498 + C9077 * C2001 + C9074 * C2009) *
                         C4739 +
                     (C9075 * C492 + C9072 * C511 + C9076 * C499 +
                      C9073 * C514 + C9077 * C2008 + C9074 * C2019) *
                         C30775) *
                        C31013 * C30935 -
                    ((C9077 * C499 + C9074 * C514 + C9076 * C492 +
                      C9073 * C511 + C9075 * C127 + C9072 * C139) *
                         C30775 +
                     (C9077 * C484 + C9074 * C498 + C9076 * C481 +
                      C9073 * C493 + C9075 * C118 + C9072 * C126) *
                         C4739) *
                        C31013 * C30928 -
                    ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 +
                      C9073 * C2019 + C9075 * C499 + C9072 * C514) *
                         C30775 +
                     (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 +
                      C9073 * C2009 + C9075 * C484 + C9072 * C498) *
                         C4739) *
                        C31013 * C3782) *
                       C31082 +
                   (((C9075 * C292 + C9072 * C304 + C9076 * C927 +
                      C9073 * C933 + C9077 * C1283 + C9074 * C1294) *
                         C4739 +
                     (C9075 * C303 + C9072 * C322 + C9076 * C934 +
                      C9073 * C942 + C9077 * C1293 + C9074 * C1310) *
                         C30775) *
                        C31013 * C30928 -
                    ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 +
                      C9073 * C1310 + C9075 * C934 + C9072 * C942) *
                         C30775 +
                     (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 +
                      C9073 * C1294 + C9075 * C927 + C9072 * C933) *
                         C4739) *
                        C31013 * C30935 +
                    ((C9075 * C1283 + C9072 * C1294 + C9076 * C2403 +
                      C9073 * C2407 + C9077 * C10700 + C9074 * C10701) *
                         C4739 +
                     (C9075 * C1293 + C9072 * C1310 + C9076 * C2408 +
                      C9073 * C2412 + C9077 * C10702 + C9074 * C10703) *
                         C30775) *
                        C31013 * C3782) *
                       C30890) *
                      C30810)) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C3274 -
               (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                (C113 * C494 + C31024 * C512) * C102 +
                (C113 * C482 + C31024 * C495) * C114) *
                   C31013 * C30932) *
                  C30827 * C31154 +
              ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                C553 * C116 + C554 * C104) *
                   C31013 * C30932 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C3274) *
                  C30827 * C31147 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C3274 -
               (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                C545 * C102 + C546 * C114) *
                   C31013 * C30932) *
                  C30827 * C31134 +
              ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
                (C113 * C770 + C31024 * C771) * C116 +
                (C113 * C772 + C31024 * C773) * C104) *
                   C31013 * C30932 -
               (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
                C170 * C102 + C171 * C114) *
                   C31013 * C3274) *
                  C30827 * C31115) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C31024 * C124) * C114 +
                 (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                 C167 * C103 + C168 * C116 + C169 * C104) *
                    C31013 * C3274 -
                (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                 (C113 * C494 + C31024 * C512) * C102 +
                 (C113 * C482 + C31024 * C495) * C114) *
                    C31013 * C30932) *
                   C31148 +
               (((C113 * C926 + C31024 * C931) * C114 +
                 (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                 C960 * C103 + C961 * C116 + C962 * C104) *
                    C31013 * C30932 -
                (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                 (C113 * C305 + C31024 * C323) * C102 +
                 (C113 * C293 + C31024 * C306) * C114) *
                    C31013 * C3274) *
                   C31136 +
               (((C113 * C294 + C31024 * C307) * C114 +
                 (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                 C361 * C103 + C362 * C116 + C363 * C104) *
                    C31013 * C3274 -
                (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
                 (C113 * C1301 + C31024 * C1314) * C102 +
                 (C113 * C1287 + C31024 * C1302) * C114) *
                    C31013 * C30932) *
                   C31111) *
                  C2620 +
              (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                 C553 * C116 + C554 * C104) *
                    C31013 * C30932 -
                (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                 C167 * C102 + C166 * C114) *
                    C31013 * C3274) *
                   C31148 +
               ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                 C364 * C116 + C365 * C104) *
                    C31013 * C3274 -
                (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                 C960 * C102 + C959 * C114) *
                    C31013 * C30932) *
                   C31136 +
               ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
                 (C113 * C1584 + C31024 * C1585) * C116 +
                 (C113 * C1586 + C31024 * C1587) * C104) *
                    C31013 * C30932 -
                (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                 C361 * C102 + C360 * C114) *
                    C31013 * C3274) *
                   C31111) *
                  C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31156 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31153 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31144 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C30827 * C2620 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C31153 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31156 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31144 +
           (C2304 * C114 + C2303 * C102 + C2302 * C115 + C2301 * C103 +
            (C113 * C2288 + C31024 * C2289) * C116 +
            (C113 * C2290 + C31024 * C2291) * C104) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C31154 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C3274) *
              C30827 * C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C3274 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C31134 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31148 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C31136 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C31111) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C31148 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C31136 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31156 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31153 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31144 -
           ((C6775 + C6776) * C4738 + (C6777 + C6778) * C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C30827 * C2620 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C31153 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31156 -
           ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31144 +
           ((C2304 * C4739 + C2303 * C30775) * C4736 +
            ((C113 * C2403 + C31024 * C2407) * C4739 +
             (C113 * C2408 + C31024 * C2412) * C30775) *
                C4737 +
            ((C113 * C6656 + C31024 * C6657) * C4739 +
             (C113 * C6658 + C31024 * C6659) * C30775) *
                C4738) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C30827 * C31154 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C3274) *
              C30827 * C31147 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C30932) *
              C30827 * C31134 +
          (((C9075 * C486 + C9072 * C502 + C9076 * C487 + C9073 * C505 +
             C9077 * C2288 + C9074 * C2289) *
                C4739 +
            (C9075 * C503 + C9072 * C516 + C9076 * C504 + C9073 * C517 +
             C9077 * C2290 + C9074 * C2291) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C31148 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C3274) *
               C31136 +
           (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
              C9077 * C1288 + C9074 * C1303) *
                 C4739 +
             (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
              C9077 * C1304 + C9074 * C1315) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
              C9075 * C1301 + C9072 * C1314) *
                 C30775 +
             (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
              C9075 * C1287 + C9072 * C1302) *
                 C4739) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C3274) *
               C31148 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C31136 +
           (((C9075 * C1286 + C9072 * C1300 + C9076 * C1289 + C9073 * C1305 +
              C9077 * C6656 + C9074 * C6657) *
                 C4739 +
             (C9075 * C1299 + C9072 * C1313 + C9076 * C1306 + C9073 * C1316 +
              C9077 * C6658 + C9074 * C6659) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
              C9075 * C310 + C9072 * C325) *
                 C30775 +
             (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
              C9075 * C295 + C9072 * C309) *
                 C4739) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31156 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C31153 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31144 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2013 + C9073 * C2021 +
             C9075 * C2010 + C9072 * C2020) *
                C30775 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2003 + C9073 * C2012 +
             C9075 * C2002 + C9072 * C2011) *
                C4739) *
               C31013 * C31127) *
              C30827 * C2620 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C31153 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C31156 -
           ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
             C9075 * C499 + C9072 * C514) *
                C30775 +
            (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
             C9075 * C484 + C9072 * C498) *
                C4739) *
               C31013 * C31144 +
           ((C9075 * C2001 + C9072 * C2009 + C9076 * C2004 + C9073 * C2014 +
             C9077 * C10802 + C9074 * C10803) *
                C4739 +
            (C9075 * C2008 + C9072 * C2019 + C9076 * C2015 + C9073 * C2022 +
             C9077 * C10804 + C9074 * C10805) *
                C30775) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C31024 * C124) * C4739 +
                     (C113 * C125 + C31024 * C138) * C30775) *
                        C4736 +
                    (C4883 + C4884) * C4737 + C4889 * C4738) *
                       C30928 -
                   (C5690 * C4738 + (C5368 + C5369) * C4737 +
                    ((C113 * C494 + C31024 * C512) * C30775 +
                     (C113 * C482 + C31024 * C495) * C4739) *
                        C4736) *
                       C30935 +
                   (((C113 * C483 + C31024 * C496) * C4739 +
                     (C113 * C497 + C31024 * C513) * C30775) *
                        C4736 +
                    (C5715 + C5716) * C4737 + C5723 * C4738) *
                       C3782) *
                      C30827 * C30804 +
                  (((C548 * C4739 + C547 * C30775) * C4736 +
                    (C5354 + C5355) * C4737 + C5985 * C4738) *
                       C30935 -
                   (C4881 * C4738 + (C4864 + C4863) * C4737 +
                    (C167 * C30775 + C166 * C4739) * C4736) *
                       C30928 -
                   ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
                    (C550 * C30775 + C549 * C4739) * C4736) *
                       C3782) *
                      C30827 * C30813 +
                  (((C168 * C4739 + C169 * C30775) * C4736 +
                    (C4869 + C4870) * C4737 + C4882 * C4738) *
                       C30928 -
                   ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
                    (C545 * C30775 + C546 * C4739) * C4736) *
                       C30935 +
                   ((C551 * C4739 + C552 * C30775) * C4736 +
                    (C2184 * C4739 + C2183 * C30775) * C4737 +
                    ((C113 * C1290 + C31024 * C1307) * C4739 +
                     (C113 * C1308 + C31024 * C1317) * C30775) *
                        C4738) *
                       C3782) *
                      C30827 * C2883)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C117 + C31024 * C124) * C114 +
                    (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                    C167 * C103 + C168 * C116 + C169 * C104) *
                       C31013 * C30928 -
                   (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                    (C113 * C494 + C31024 * C512) * C102 +
                    (C113 * C482 + C31024 * C495) * C114) *
                       C31013 * C30935 +
                   ((C113 * C483 + C31024 * C496) * C114 +
                    (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                    C550 * C103 + C551 * C116 + C552 * C104) *
                       C31013 * C3782) *
                      C30827 * C30804 +
                  ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                    C553 * C116 + C554 * C104) *
                       C31013 * C30935 -
                   (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                    C167 * C102 + C166 * C114) *
                       C31013 * C30928 -
                   (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                    C550 * C102 + C549 * C114) *
                       C31013 * C3782) *
                      C30827 * C30813 +
                  ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                    C172 * C116 + C173 * C104) *
                       C31013 * C30928 -
                   (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                    C545 * C102 + C546 * C114) *
                       C31013 * C30935 +
                   (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
                    (C113 * C489 + C31024 * C508) * C116 +
                    (C113 * C509 + C31024 * C519) * C104) *
                       C31013 * C3782) *
                      C30827 * C2883)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
                     C9077 * C483 + C9074 * C496) *
                        C4739 +
                    (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
                     C9077 * C497 + C9074 * C513) *
                        C30775) *
                       C31013 * C30928 -
                   ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 +
                     C9073 * C513 + C9075 * C494 + C9072 * C512) *
                        C30775 +
                    (C9077 * C2002 + C9074 * C2011 + C9076 * C483 +
                     C9073 * C496 + C9075 * C482 + C9072 * C495) *
                        C4739) *
                       C31013 * C30935 +
                   ((C9075 * C483 + C9072 * C496 + C9076 * C2002 +
                     C9073 * C2011 + C9077 * C2003 + C9074 * C2012) *
                        C4739 +
                    (C9075 * C497 + C9072 * C513 + C9076 * C2010 +
                     C9073 * C2020 + C9077 * C2013 + C9074 * C2021) *
                        C30775) *
                       C31013 * C3782) *
                      C30827 * C30804 +
                  (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
                     C9077 * C2001 + C9074 * C2009) *
                        C4739 +
                    (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
                     C9077 * C2008 + C9074 * C2019) *
                        C30775) *
                       C31013 * C30935 -
                   ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
                     C9075 * C127 + C9072 * C139) *
                        C30775 +
                    (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
                     C9075 * C118 + C9072 * C126) *
                        C4739) *
                       C31013 * C30928 -
                   ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 +
                     C9073 * C2019 + C9075 * C499 + C9072 * C514) *
                        C30775 +
                    (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 +
                     C9073 * C2009 + C9075 * C484 + C9072 * C498) *
                        C4739) *
                       C31013 * C3782) *
                      C30827 * C30813 +
                  (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
                     C9077 * C485 + C9074 * C500) *
                        C4739 +
                    (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
                     C9077 * C501 + C9074 * C515) *
                        C30775) *
                       C31013 * C30928 -
                   ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 +
                     C9073 * C515 + C9075 * C490 + C9072 * C510) *
                        C30775 +
                    (C9077 * C2000 + C9074 * C2007 + C9076 * C485 +
                     C9073 * C500 + C9075 * C480 + C9072 * C491) *
                        C4739) *
                       C31013 * C30935 +
                   ((C9075 * C485 + C9072 * C500 + C9076 * C2000 +
                     C9073 * C2007 + C9077 * C2005 + C9074 * C2016) *
                        C4739 +
                    (C9075 * C501 + C9072 * C515 + C9076 * C2006 +
                     C9073 * C2018 + C9077 * C2017 + C9074 * C2023) *
                        C30775) *
                       C31013 * C3782) *
                      C30827 * C2883)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C31148 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C31136 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C3274 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C31148 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C31136 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C3274 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C30827 * C31154 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C30932 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C3274) *
              C30827 * C31147 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C3274 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C30932) *
              C30827 * C31134 +
          ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
            (C113 * C770 + C31024 * C771) * C116 +
            (C113 * C772 + C31024 * C773) * C104) *
               C31013 * C30932 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C31154 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C3274) *
              C30827 * C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C3274 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C31134 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31148 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C31136 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C31111) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C31148 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C31136 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C30827 * C31154 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C3274) *
              C30827 * C31147 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C3274 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C30932) *
              C30827 * C31134 +
          (((C9075 * C486 + C9072 * C502 + C9076 * C487 + C9073 * C505 +
             C9077 * C2288 + C9074 * C2289) *
                C4739 +
            (C9075 * C503 + C9072 * C516 + C9076 * C504 + C9073 * C517 +
             C9077 * C2290 + C9074 * C2291) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C31148 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C3274) *
               C31136 +
           (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
              C9077 * C1288 + C9074 * C1303) *
                 C4739 +
             (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
              C9077 * C1304 + C9074 * C1315) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
              C9075 * C1301 + C9072 * C1314) *
                 C30775 +
             (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
              C9075 * C1287 + C9072 * C1302) *
                 C4739) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C3274) *
               C31148 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C3274 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C31136 +
           (((C9075 * C1286 + C9072 * C1300 + C9076 * C1289 + C9073 * C1305 +
              C9077 * C6656 + C9074 * C6657) *
                 C4739 +
             (C9075 * C1299 + C9072 * C1313 + C9076 * C1306 + C9073 * C1316 +
              C9077 * C6658 + C9074 * C6659) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
              C9075 * C310 + C9072 * C325) *
                 C30775 +
             (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
              C9075 * C295 + C9072 * C309) *
                 C4739) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1416 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1417 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C1418 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C30845 * C31121) *
              C31068 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1417 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1416 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C1418 +
           (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
            (C113 * C1422 + C31024 * C1423) * C116 +
            (C113 * C1424 + C31024 * C1425) * C104) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31082 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30890) *
              C656 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30890 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31082) *
              C657 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31082 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30890) *
              C658 +
          ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
            (C113 * C660 + C31024 * C661) * C116 +
            (C113 * C662 + C31024 * C663) * C104) *
               C31013 * C30845 * C30890 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31082 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C656 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31082) *
              C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31082 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C658 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1416 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C1417 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C1418 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C31068 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C1417 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1416 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C1418 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31082 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C30890) *
              C656 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31082) *
              C657 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C31082 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C30890) *
              C658 +
          (((C9075 * C297 + C9072 * C313 + C9076 * C929 + C9073 * C938 +
             C9077 * C2170 + C9074 * C2171) *
                C4739 +
            (C9075 * C314 + C9072 * C327 + C9076 * C937 + C9073 * C944 +
             C9077 * C2172 + C9074 * C2173) *
                C30775) *
               C31013 * C30845 * C30890 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C1416 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C1417 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C1418 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C30845 * C31121) *
              C31068 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C1417 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C1416 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C1418 +
           ((C9075 * C1149 + C9072 * C1157 + C9076 * C1699 + C9073 * C1703 +
             C9077 * C6544 + C9074 * C6545) *
                C4739 +
            (C9075 * C1156 + C9072 * C1167 + C9076 * C1704 + C9073 * C1708 +
             C9077 * C6546 + C9074 * C6547) *
                C30775) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31083 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C1416 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30932 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31083) *
              C1417 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C31083 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30932) *
              C1418 +
          (((C113 * C1698 + C31024 * C1701) * C114 +
            (C113 * C1702 + C31024 * C1707) * C102 +
            (C113 * C1699 + C31024 * C1703) * C115 +
            (C113 * C1704 + C31024 * C1708) * C103 +
            (C113 * C1700 + C31024 * C1705) * C116 +
            (C113 * C1706 + C31024 * C1709) * C104) *
               C31013 * C30932 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C31082 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C30890) *
              C288 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C31082 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30890) *
              C289 +
          (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
             C172 * C116 + C173 * C104) *
                C31013 * C31083 -
            (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
             C545 * C102 + C546 * C114) *
                C31013 * C30932) *
               C31082 +
           ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
             (C113 * C930 + C31024 * C939) * C116 +
             (C113 * C940 + C31024 * C945) * C104) *
                C31013 * C30932 -
            (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
             C356 * C102 + C357 * C114) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            ((C5366 + C5367) * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31082 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             ((C113 * C1698 + C31024 * C1701) * C4739 +
              (C113 * C1702 + C31024 * C1707) * C30775) *
                 C4738) *
                C30932 -
            ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C30890) *
              C288 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             (C5356 + C5357) * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C31082 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             (C4867 + C4868) * C4738) *
                C31083 -
            (((C113 * C1704 + C31024 * C1708) * C30775 +
              (C113 * C1699 + C31024 * C1703) * C4739) *
                 C4738 +
             (C5357 + C5356) * C4737 + (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C289 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C31083 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C31082 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C1416 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31083) *
              C1417 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C1418 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C31082 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C31083) *
               C30890) *
              C288 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C31083) *
               C31082 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C30890) *
              C289 +
          ((((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
              C9077 * C485 + C9074 * C500) *
                 C4739 +
             (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
              C9077 * C501 + C9074 * C515) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
              C9075 * C490 + C9072 * C510) *
                 C30775 +
             (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
              C9075 * C480 + C9072 * C491) *
                 C4739) *
                C31013 * C30932) *
               C31082 +
           (((C9075 * C928 + C9072 * C935 + C9076 * C1282 + C9073 * C1292 +
              C9077 * C2404 + C9074 * C2409) *
                 C4739 +
             (C9075 * C936 + C9072 * C943 + C9076 * C1291 + C9073 * C1309 +
              C9077 * C2410 + C9074 * C2413) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
              C9075 * C301 + C9072 * C321) *
                 C30775 +
             (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
              C9075 * C291 + C9072 * C302) *
                 C4739) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C1416 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C31083) *
              C1417 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C30932) *
              C1418 +
          (((C9075 * C1698 + C9072 * C1701 + C9076 * C5677 + C9073 * C5681 +
             C9077 * C6758 + C9074 * C6759) *
                C4739 +
            (C9075 * C1702 + C9072 * C1707 + C9076 * C5680 + C9073 * C5686 +
             C9077 * C6760 + C9074 * C6761) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
             C9075 * C1158 + C9072 * C1168) *
                C30775 +
            (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
             C9075 * C1150 + C9072 * C1159) *
                C4739) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C31024 * C124) * C114 +
               (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
               C167 * C103 + C168 * C116 + C169 * C104) *
                  C31013 * C30845 * C30827 * C108 -
              (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
               C167 * C102 + C166 * C114) *
                  C31013 * C30845 * C30827 * C109 +
              (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
               C172 * C116 + C173 * C104) *
                  C31013 * C30845 * C30827 * C110 -
              (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
               C170 * C102 + C171 * C114) *
                  C31013 * C30845 * C30827 * C111 +
              (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
               (C113 * C123 + C31024 * C136) * C116 +
               (C113 * C137 + C31024 * C144) * C104) *
                  C31013 * C30845 * C30827 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C31148 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C31136 +
               ((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C30845 * C31111) *
                  C288 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C31136 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C31148 -
               (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                C361 * C102 + C360 * C114) *
                   C31013 * C30845 * C31111) *
                  C289 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C30845 * C31148 -
               ((C113 * C317 + C31024 * C329) * C104 +
                (C113 * C299 + C31024 * C318) * C116 + C365 * C103 +
                C364 * C115 + C356 * C102 + C357 * C114) *
                   C31013 * C30845 * C31136 +
               (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
                (C113 * C300 + C31024 * C319) * C116 +
                (C113 * C320 + C31024 * C330) * C104) *
                   C31013 * C30845 * C31111) *
                  C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31149 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31138 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C30827 * C288 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C31138 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31149 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31114) *
              C30827 * C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C31149 -
           ((C113 * C506 + C31024 * C518) * C104 +
            (C113 * C488 + C31024 * C507) * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C31138 +
           (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
            (C113 * C489 + C31024 * C508) * C116 +
            (C113 * C509 + C31024 * C519) * C104) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31149 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31138 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C1074 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C31138 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31149 -
           ((C113 * C1291 + C31024 * C1309) * C104 +
            (C113 * C1282 + C31024 * C1292) * C116 +
            (C113 * C1293 + C31024 * C1310) * C103 +
            (C113 * C1283 + C31024 * C1294) * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31114) *
              C1075 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C31149 -
           ((C113 * C1297 + C31024 * C1312) * C104 +
            (C113 * C1285 + C31024 * C1298) * C116 +
            (C113 * C1299 + C31024 * C1313) * C103 +
            (C113 * C1286 + C31024 * C1300) * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C31138 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            ((C113 * C1284 + C31024 * C1296) * C4739 +
             (C113 * C1295 + C31024 * C1311) * C30775) *
                C4737 +
            ((C113 * C1288 + C31024 * C1303) * C4739 +
             (C113 * C1304 + C31024 * C1315) * C30775) *
                C4738) *
               C31114) *
              C30827 * C288 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C31138 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31149 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31149 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C31138 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C1074 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
            (C5719 + C5720) * C4738) *
               C31138 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31149 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C1075 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31149 -
           (((C113 * C5682 + C31024 * C5687) * C30775 +
             (C113 * C5678 + C31024 * C5683) * C4739) *
                C4738 +
            (C5720 + C5719) * C4737 + C5690 * C4736) *
               C31138 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C30827 * C108 -
          ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
            C9075 * C127 + C9072 * C139) *
               C30775 +
           (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
            C9075 * C118 + C9072 * C126) *
               C4739) *
              C31013 * C30845 * C30827 * C109 +
          ((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
            C9077 * C485 + C9074 * C500) *
               C4739 +
           (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
            C9077 * C501 + C9074 * C515) *
               C30775) *
              C31013 * C30845 * C30827 * C110 -
          ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
            C9075 * C130 + C9072 * C141) *
               C30775 +
           (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
            C9075 * C120 + C9072 * C131) *
               C4739) *
              C31013 * C30845 * C30827 * C111 +
          ((C9075 * C121 + C9072 * C132 + C9076 * C488 + C9073 * C507 +
            C9077 * C489 + C9074 * C508) *
               C4739 +
           (C9075 * C133 + C9072 * C142 + C9076 * C506 + C9073 * C518 +
            C9077 * C509 + C9074 * C519) *
               C30775) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C31136 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C30827 * C288 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C31138 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C31149 -
           ((C9077 * C2015 + C9074 * C2022 + C9076 * C2008 + C9073 * C2019 +
             C9075 * C499 + C9072 * C514) *
                C30775 +
            (C9077 * C2004 + C9074 * C2014 + C9076 * C2001 + C9073 * C2009 +
             C9075 * C484 + C9072 * C498) *
                C4739) *
               C31013 * C31114) *
              C30827 * C289 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C485 + C9072 * C500 + C9076 * C2000 + C9073 * C2007 +
             C9077 * C2005 + C9074 * C2016) *
                C4739 +
            (C9075 * C501 + C9072 * C515 + C9076 * C2006 + C9073 * C2018 +
             C9077 * C2017 + C9074 * C2023) *
                C30775) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C1075 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C1142 -
          ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
            C9075 * C305 + C9072 * C323) *
               C30775 +
           (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
            C9075 * C293 + C9072 * C306) *
               C4739) *
              C31013 * C30845 * C1143 +
          ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
            C9077 * C1288 + C9074 * C1303) *
               C4739 +
           (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
            C9077 * C1304 + C9074 * C1315) *
               C30775) *
              C31013 * C30845 * C1144 -
          ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
            C9075 * C1158 + C9072 * C1168) *
               C30775 +
           (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
            C9075 * C1150 + C9072 * C1159) *
               C4739) *
              C31013 * C30845 * C1145 +
          ((C9075 * C1151 + C9072 * C1160 + C9076 * C5678 + C9073 * C5683 +
            C9077 * C5679 + C9074 * C5684) *
               C4739 +
           (C9075 * C1161 + C9072 * C1169 + C9076 * C5682 + C9073 * C5687 +
            C9077 * C5685 + C9074 * C5688) *
               C30775) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C483 + C9072 * C496 + C9076 * C2002 + C9073 * C2011 +
             C9077 * C2003 + C9074 * C2012) *
                C4739 +
            (C9075 * C497 + C9072 * C513 + C9076 * C2010 + C9073 * C2020 +
             C9077 * C2013 + C9074 * C2021) *
                C30775) *
               C31013 * C31114) *
              C1074 +
          (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
             C9077 * C2402 + C9074 * C2405) *
                C4739 +
            (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
             C9077 * C2406 + C9074 * C2411) *
                C30775) *
               C31013 * C31138 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C31149 -
           ((C9077 * C6392 + C9074 * C6396 + C9076 * C2406 + C9073 * C2411 +
             C9075 * C1295 + C9072 * C1311) *
                C30775 +
            (C9077 * C6387 + C9074 * C6391 + C9076 * C2402 + C9073 * C2405 +
             C9075 * C1284 + C9072 * C1296) *
                C4739) *
               C31013 * C31114) *
              C1075 +
          (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C31149 -
           ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
             C9075 * C1301 + C9072 * C1314) *
                C30775 +
            (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
             C9075 * C1287 + C9072 * C1302) *
                C4739) *
               C31013 * C31138 +
           ((C9075 * C1288 + C9072 * C1303 + C9076 * C6386 + C9073 * C6390 +
             C9077 * C6388 + C9074 * C6393) *
                C4739 +
            (C9075 * C1304 + C9072 * C1315 + C9076 * C6389 + C9073 * C6395 +
             C9077 * C6394 + C9074 * C6397) *
                C30775) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C1074 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C1075 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C31083 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C1074 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C1075 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31083 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C30827 * C656 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C30932 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31083) *
              C30827 * C657 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C31083 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C30932) *
              C30827 * C658 +
          ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
            (C113 * C770 + C31024 * C771) * C116 +
            (C113 * C772 + C31024 * C773) * C104) *
               C31013 * C30932 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C656 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31083) *
              C30827 * C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31083 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C658 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C1074 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             (C5719 + C5720) * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C1075 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
            (((C113 * C5682 + C31024 * C5687) * C30775 +
              (C113 * C5678 + C31024 * C5683) * C4739) *
                 C4738 +
             (C5720 + C5719) * C4737 + C5690 * C4736) *
                C30932) *
               C31111) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C1074 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31083 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C1075 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
             C9075 * C494 + C9072 * C512) *
                C30775 +
            (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
             C9075 * C482 + C9072 * C495) *
                C4739) *
               C31013 * C30932) *
              C30827 * C656 +
          (((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
             C9077 * C2001 + C9074 * C2009) *
                C4739 +
            (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
             C9077 * C2008 + C9074 * C2019) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C31083) *
              C30827 * C657 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C31083 -
           ((C9077 * C2006 + C9074 * C2018 + C9076 * C501 + C9073 * C515 +
             C9075 * C490 + C9072 * C510) *
                C30775 +
            (C9077 * C2000 + C9074 * C2007 + C9076 * C485 + C9073 * C500 +
             C9075 * C480 + C9072 * C491) *
                C4739) *
               C31013 * C30932) *
              C30827 * C658 +
          (((C9075 * C486 + C9072 * C502 + C9076 * C487 + C9073 * C505 +
             C9077 * C2288 + C9074 * C2289) *
                C4739 +
            (C9075 * C503 + C9072 * C516 + C9076 * C504 + C9073 * C517 +
             C9077 * C2290 + C9074 * C2291) *
                C30775) *
               C31013 * C30932 -
           ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
             C9075 * C130 + C9072 * C141) *
                C30775 +
            (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
             C9075 * C120 + C9072 * C131) *
                C4739) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
              C9077 * C483 + C9074 * C496) *
                 C4739 +
             (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
              C9077 * C497 + C9074 * C513) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2010 + C9074 * C2020 + C9076 * C497 + C9073 * C513 +
              C9075 * C494 + C9072 * C512) *
                 C30775 +
             (C9077 * C2002 + C9074 * C2011 + C9076 * C483 + C9073 * C496 +
              C9075 * C482 + C9072 * C495) *
                 C4739) *
                C31013 * C30932) *
               C1074 +
           (((C9075 * C926 + C9072 * C931 + C9076 * C1284 + C9073 * C1296 +
              C9077 * C2402 + C9074 * C2405) *
                 C4739 +
             (C9075 * C932 + C9072 * C941 + C9076 * C1295 + C9073 * C1311 +
              C9077 * C2406 + C9074 * C2411) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
              C9075 * C305 + C9072 * C323) *
                 C30775 +
             (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
              C9075 * C293 + C9072 * C306) *
                 C4739) *
                C31013 * C31083) *
               C1075 +
           (((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
              C9077 * C1288 + C9074 * C1303) *
                 C4739 +
             (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
              C9077 * C1304 + C9074 * C1315) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C6389 + C9074 * C6395 + C9076 * C1304 + C9073 * C1315 +
              C9075 * C1301 + C9072 * C1314) *
                 C30775 +
             (C9077 * C6386 + C9074 * C6390 + C9076 * C1288 + C9073 * C1303 +
              C9075 * C1287 + C9072 * C1302) *
                 C4739) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          ((((C9075 * C481 + C9072 * C493 + C9076 * C484 + C9073 * C498 +
              C9077 * C2001 + C9074 * C2009) *
                 C4739 +
             (C9075 * C492 + C9072 * C511 + C9076 * C499 + C9073 * C514 +
              C9077 * C2008 + C9074 * C2019) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
              C9075 * C127 + C9072 * C139) *
                 C30775 +
             (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
              C9075 * C118 + C9072 * C126) *
                 C4739) *
                C31013 * C31083) *
               C1074 +
           (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
              C9077 * C1283 + C9074 * C1294) *
                 C4739 +
             (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
              C9077 * C1293 + C9074 * C1310) *
                 C30775) *
                C31013 * C31083 -
            ((C9077 * C2408 + C9074 * C2412 + C9076 * C1293 + C9073 * C1310 +
              C9075 * C934 + C9072 * C942) *
                 C30775 +
             (C9077 * C2403 + C9074 * C2407 + C9076 * C1283 + C9073 * C1294 +
              C9075 * C927 + C9072 * C933) *
                 C4739) *
                C31013 * C30932) *
               C1075 +
           (((C9075 * C1286 + C9072 * C1300 + C9076 * C1289 + C9073 * C1305 +
              C9077 * C6656 + C9074 * C6657) *
                 C4739 +
             (C9075 * C1299 + C9072 * C1313 + C9076 * C1306 + C9073 * C1316 +
              C9077 * C6658 + C9074 * C6659) *
                 C30775) *
                C31013 * C30932 -
            ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
              C9075 * C310 + C9072 * C325) *
                 C30775 +
             (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
              C9075 * C295 + C9072 * C309) *
                 C4739) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31148 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31136 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C288 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31136 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31148 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31148 -
           ((C113 * C317 + C31024 * C329) * C104 +
            (C113 * C299 + C31024 * C318) * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C31136 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C30827 * C108 -
          (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 + C167 * C102 +
           C166 * C114) *
              C31013 * C30845 * C30827 * C109 +
          (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 + C172 * C116 +
           C173 * C104) *
              C31013 * C30845 * C30827 * C110 -
          (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 + C170 * C102 +
           C171 * C114) *
              C31013 * C30845 * C30827 * C111 +
          (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
           (C113 * C123 + C31024 * C136) * C116 +
           (C113 * C137 + C31024 * C144) * C104) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C30827 * C108 -
          ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
            C9075 * C127 + C9072 * C139) *
               C30775 +
           (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
            C9075 * C118 + C9072 * C126) *
               C4739) *
              C31013 * C30845 * C30827 * C109 +
          ((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
            C9077 * C485 + C9074 * C500) *
               C4739 +
           (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
            C9077 * C501 + C9074 * C515) *
               C30775) *
              C31013 * C30845 * C30827 * C110 -
          ((C9077 * C504 + C9074 * C517 + C9076 * C503 + C9073 * C516 +
            C9075 * C130 + C9072 * C141) *
               C30775 +
           (C9077 * C487 + C9074 * C505 + C9076 * C486 + C9073 * C502 +
            C9075 * C120 + C9072 * C131) *
               C4739) *
              C31013 * C30845 * C30827 * C111 +
          ((C9075 * C121 + C9072 * C132 + C9076 * C488 + C9073 * C507 +
            C9077 * C489 + C9074 * C508) *
               C4739 +
           (C9075 * C133 + C9072 * C142 + C9076 * C506 + C9073 * C518 +
            C9077 * C509 + C9074 * C519) *
               C30775) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C31136 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C31148 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C31136 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
             C9077 * C483 + C9074 * C496) *
                C4739 +
            (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
             C9077 * C497 + C9074 * C513) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
             C9075 * C305 + C9072 * C323) *
                C30775 +
            (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
             C9075 * C293 + C9072 * C306) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
             C9077 * C1288 + C9074 * C1303) *
                C4739 +
            (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
             C9077 * C1304 + C9074 * C1315) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C9075 * C292 + C9072 * C304 + C9076 * C927 + C9073 * C933 +
             C9077 * C1283 + C9074 * C1294) *
                C4739 +
            (C9075 * C303 + C9072 * C322 + C9076 * C934 + C9073 * C942 +
             C9077 * C1293 + C9074 * C1310) *
                C30775) *
               C31013 * C30845 * C1075 -
           ((C9077 * C499 + C9074 * C514 + C9076 * C492 + C9073 * C511 +
             C9075 * C127 + C9072 * C139) *
                C30775 +
            (C9077 * C484 + C9074 * C498 + C9076 * C481 + C9073 * C493 +
             C9075 * C118 + C9072 * C126) *
                C4739) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1306 + C9074 * C1316 + C9076 * C1299 + C9073 * C1313 +
             C9075 * C310 + C9072 * C325) *
                C30775 +
            (C9077 * C1289 + C9074 * C1305 + C9076 * C1286 + C9073 * C1300 +
             C9075 * C295 + C9072 * C309) *
                C4739) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C9075 * C119 + C9072 * C128 + C9076 * C480 + C9073 * C491 +
             C9077 * C485 + C9074 * C500) *
                C4739 +
            (C9075 * C129 + C9072 * C140 + C9076 * C490 + C9073 * C510 +
             C9077 * C501 + C9074 * C515) *
                C30775) *
               C31013 * C30845 * C1074 -
           ((C9077 * C1291 + C9074 * C1309 + C9076 * C936 + C9073 * C943 +
             C9075 * C301 + C9072 * C321) *
                C30775 +
            (C9077 * C1282 + C9074 * C1292 + C9076 * C928 + C9073 * C935 +
             C9075 * C291 + C9072 * C302) *
                C4739) *
               C31013 * C30845 * C1075 +
           ((C9075 * C296 + C9072 * C311 + C9076 * C1285 + C9073 * C1298 +
             C9077 * C1290 + C9074 * C1307) *
                C4739 +
            (C9075 * C312 + C9072 * C326 + C9076 * C1297 + C9073 * C1312 +
             C9077 * C1308 + C9074 * C1317) *
                C30775) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C117 + C9072 * C124 + C9076 * C482 + C9073 * C495 +
            C9077 * C483 + C9074 * C496) *
               C4739 +
           (C9075 * C125 + C9072 * C138 + C9076 * C494 + C9073 * C512 +
            C9077 * C497 + C9074 * C513) *
               C30775) *
              C31013 * C30845 * C1142 -
          ((C9077 * C1295 + C9074 * C1311 + C9076 * C932 + C9073 * C941 +
            C9075 * C305 + C9072 * C323) *
               C30775 +
           (C9077 * C1284 + C9074 * C1296 + C9076 * C926 + C9073 * C931 +
            C9075 * C293 + C9072 * C306) *
               C4739) *
              C31013 * C30845 * C1143 +
          ((C9075 * C294 + C9072 * C307 + C9076 * C1287 + C9073 * C1302 +
            C9077 * C1288 + C9074 * C1303) *
               C4739 +
           (C9075 * C308 + C9072 * C324 + C9076 * C1301 + C9073 * C1314 +
            C9077 * C1304 + C9074 * C1315) *
               C30775) *
              C31013 * C30845 * C1144 -
          ((C9077 * C5680 + C9074 * C5686 + C9076 * C1702 + C9073 * C1707 +
            C9075 * C1158 + C9072 * C1168) *
               C30775 +
           (C9077 * C5677 + C9074 * C5681 + C9076 * C1698 + C9073 * C1701 +
            C9075 * C1150 + C9072 * C1159) *
               C4739) *
              C31013 * C30845 * C1145 +
          ((C9075 * C1151 + C9072 * C1160 + C9076 * C5678 + C9073 * C5683 +
            C9077 * C5679 + C9074 * C5684) *
               C4739 +
           (C9075 * C1161 + C9072 * C1169 + C9076 * C5682 + C9073 * C5687 +
            C9077 * C5685 + C9074 * C5688) *
               C30775) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C30886 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C30893 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C2880) *
              C30804 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C30893 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C30886 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C2880) *
              C30813 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C30886 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C30893 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C2880) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31083 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C30886 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31083) *
               C30893 +
           (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                 C13226 +
             (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                 C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C31013 * C31083 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
              C18762 * C1314) *
                 C13222 +
             (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
              C18762 * C1302) *
                 C13226) *
                C31013 * C30932) *
               C2880) *
              C2620 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31083) *
               C30886 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31083 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30893 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
              C18763 * C1307) *
                 C13227 +
             (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
              C18763 * C1317) *
                 C13223) *
                C31013 * C30932 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C31013 * C31083) *
               C2880) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31155 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C31151 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31141 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C30845 * C31121) *
              C2620 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C31151 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31155 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31141 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
             C18763 * C1705) *
                C13227 +
            (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
             C18763 * C1709) *
                C13223) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C2512 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C30890) *
              C31154 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C30890 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C2512) *
              C31147 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C2512 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C30890) *
              C31134 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C13227 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C13223) *
               C31013 * C30845 * C30890 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31149 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C31138 +
            ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C13226 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C13222 +
             (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
                C31013 * C31114) *
               C2512 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C31138 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31149 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
              C18762 * C1311) *
                 C13222 +
             (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
              C18762 * C1296) *
                 C13226) *
                C31013 * C31114) *
               C30890) *
              C2620 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C31138 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31149 -
            ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C31013 * C31114) *
               C2512 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31149 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C31138 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C13227 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C13223) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31083 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C2512 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31083) *
               C30890) *
              C30804 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31083) *
               C2512 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31083 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30890) *
              C30813 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                C31013 * C31083 -
            ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C31013 * C30932) *
               C2512 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C13227 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C13223) *
                C31013 * C30932 -
            ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C31013 * C31083) *
               C30890) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C2512 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C30890) *
              C31154 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C30890 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C2512) *
              C31147 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C2512 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C30890) *
              C31134 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C13227 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C13223) *
               C31013 * C30845 * C30890 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31155 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C31151 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31141 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C30845 * C31121) *
              C2620 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C31151 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31155 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31141 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
             C18763 * C1705) *
                C13227 +
            (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
             C18763 * C1709) *
                C13223) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C3274 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C30886 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C3274) *
               C30893 +
           (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                 C13226 +
             (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                 C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C31013 * C3274 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
              C18762 * C1314) *
                 C13222 +
             (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
              C18762 * C1302) *
                 C13226) *
                C31013 * C30932) *
               C2880) *
              C31068 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C3274) *
               C30886 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C3274 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30893 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
              C18763 * C1307) *
                 C13227 +
             (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
              C18763 * C1317) *
                 C13223) *
                C31013 * C30932 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C31013 * C3274) *
               C2880) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30928 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30935 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C3782) *
              C30886 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C30935 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30928 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C3782) *
              C30893 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30928 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C30935 +
           ((C18764 * C1288 + C18762 * C1303 + C18765 * C6386 +
             C18763 * C6390) *
                C13226 +
            (C18764 * C1304 + C18762 * C1315 + C18765 * C6389 +
             C18763 * C6395) *
                C13222 +
            (C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
             C18763 * C6657) *
                C13227 +
            (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
             C18763 * C6659) *
                C13223) *
               C31013 * C3782) *
              C2880) *
         C30799) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C3274 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C31155 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C30932 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C3274) *
              C31151 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C3274 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C30932) *
              C31141 +
          (((C18764 * C1698 + C18762 * C1701 + C18765 * C5677 +
             C18763 * C5681) *
                C13226 +
            (C18764 * C1702 + C18762 * C1707 + C18765 * C5680 +
             C18763 * C5686) *
                C13222 +
            (C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
             C18763 * C6545) *
                C13227 +
            (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
             C18763 * C6547) *
                C13223) *
               C31013 * C30932 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C3274 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C2512 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C3274) *
               C2512 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C3274 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                C31013 * C3274 -
            ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C31013 * C30932) *
               C2512 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C13227 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C13223) *
                C31013 * C30932 -
            ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31156 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C31153 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31144 -
           ((C21275 + C21276) * C13223 + (C21277 + C21278) * C13227 +
            (C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
             C18762 * C2020) *
                C13222 +
            (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
             C18762 * C2011) *
                C13226) *
               C31013 * C31127) *
              C2512 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C31153 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C31156 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C31144 +
           ((C18764 * C2402 + C18762 * C2405 + C18765 * C6387 +
             C18763 * C6391) *
                C13226 +
            (C18764 * C2406 + C18762 * C2411 + C18765 * C6392 +
             C18763 * C6396) *
                C13222 +
            (C18764 * C2403 + C18762 * C2407 + C18765 * C10700 +
             C18763 * C10701) *
                C13227 +
            (C18764 * C2408 + C18762 * C2412 + C18765 * C10702 +
             C18763 * C10703) *
                C13223) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C30928 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30935 +
            ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C13226 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C13222 +
             (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
                C31013 * C3782) *
               C2512 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30935 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C30928 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
              C18762 * C1311) *
                 C13222 +
             (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
              C18762 * C1296) *
                 C13226) *
                C31013 * C3782) *
               C30890) *
              C31068 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30935 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C30928 -
            ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C31013 * C3782) *
               C2512 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C30928 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30935 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C13227 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C13223) *
                C31013 * C3782) *
               C30890) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C3274 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C2512 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C3274) *
               C2512 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C3274 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                C31013 * C3274 -
            ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C31013 * C30932) *
               C2512 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C13227 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C13223) *
                C31013 * C30932 -
            ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C3274 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C31155 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C30932 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C3274) *
              C31151 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C3274 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C30932) *
              C31141 +
          (((C18764 * C1698 + C18762 * C1701 + C18765 * C5677 +
             C18763 * C5681) *
                C13226 +
            (C18764 * C1702 + C18762 * C1707 + C18765 * C5680 +
             C18763 * C5686) *
                C13222 +
            (C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
             C18763 * C6545) *
                C13227 +
            (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
             C18763 * C6547) *
                C13223) *
               C31013 * C30932 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C1416 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C1417 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C1418 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C30845 * C31121) *
              C31068 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C1417 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C1416 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C1418 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
             C18763 * C1705) *
                C13227 +
            (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
             C18763 * C1709) *
                C13223) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31082 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C30890) *
              C656 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C30890 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31082) *
              C657 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C31082 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C30890) *
              C658 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C13227 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C13223) *
               C31013 * C30845 * C30890 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C1820 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C1821 +
            ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C13226 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C13222 +
             (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
                C31013 * C31114) *
               C31082 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C1821 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C1820 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
              C18762 * C1311) *
                 C13222 +
             (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
              C18762 * C1296) *
                 C13226) *
                C31013 * C31114) *
               C30890) *
              C31068 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C1821 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C1820 -
            ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C31013 * C31114) *
               C31082 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C1820 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C1821 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C13227 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C13223) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31083 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C1416 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C30932 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C31083) *
              C1417 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C31083 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C30932) *
              C1418 +
          (((C18764 * C1698 + C18762 * C1701 + C18765 * C5677 +
             C18763 * C5681) *
                C13226 +
            (C18764 * C1702 + C18762 * C1707 + C18765 * C5680 +
             C18763 * C5686) *
                C13222 +
            (C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
             C18763 * C6545) *
                C13227 +
            (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
             C18763 * C6547) *
                C13223) *
               C31013 * C30932 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31083 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C31082 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31083) *
               C30890) *
              C288 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31083) *
               C31082 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31083 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30890) *
              C289 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                C31013 * C31083 -
            ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C31013 * C30932) *
               C31082 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C13227 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C13223) *
                C31013 * C30932 -
            ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C2284 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C2285 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C2286 -
           ((C21275 + C21276) * C13223 + (C21277 + C21278) * C13227 +
            (C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
             C18762 * C2020) *
                C13222 +
            (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
             C18762 * C2011) *
                C13226) *
               C31013 * C31127) *
              C31082 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C2285 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C2284 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C2286 +
           ((C18764 * C2402 + C18762 * C2405 + C18765 * C6387 +
             C18763 * C6391) *
                C13226 +
            (C18764 * C2406 + C18762 * C2411 + C18765 * C6392 +
             C18763 * C6396) *
                C13222 +
            (C18764 * C2403 + C18762 * C2407 + C18765 * C10700 +
             C18763 * C10701) *
                C13227 +
            (C18764 * C2408 + C18762 * C2412 + C18765 * C10702 +
             C18763 * C10703) *
                C13223) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                   C13226 +
               (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                   C13222 +
               (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                  C31013 * C30845 * C30827 * C108 -
              ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
               (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                  C31013 * C30845 * C30827 * C109 +
              ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
               (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                  C31013 * C30845 * C30827 * C110 -
              ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
               (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
                  C31013 * C30845 * C30827 * C111 +
              ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
               (C18764 * C122 + C18762 * C135 + C18765 * C770 + C18763 * C771) *
                   C13227 +
               (C18764 * C134 + C18762 * C143 + C18765 * C772 + C18763 * C773) *
                   C13223) *
                  C31013 * C30845 * C30827 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18764 * C117 + C18762 * C124 + C18765 * C482 +
                 C18763 * C495) *
                    C13226 +
                (C18764 * C125 + C18762 * C138 + C18765 * C494 +
                 C18763 * C512) *
                    C13222 +
                (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                   C31013 * C30845 * C31148 -
               ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
                (C18765 * C932 + C18763 * C941 + C18764 * C305 +
                 C18762 * C323) *
                    C13222 +
                (C18765 * C926 + C18763 * C931 + C18764 * C293 +
                 C18762 * C306) *
                    C13226) *
                   C31013 * C30845 * C31136 +
               ((C18764 * C294 + C18762 * C307 + C18765 * C1287 +
                 C18763 * C1302) *
                    C13226 +
                (C18764 * C308 + C18762 * C324 + C18765 * C1301 +
                 C18763 * C1314) *
                    C13222 +
                (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                   C31013 * C30845 * C31111) *
                  C288 +
              (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
                (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                   C31013 * C30845 * C31136 -
               ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
                (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                   C31013 * C30845 * C31148 -
               ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
                (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                   C31013 * C30845 * C31111) *
                  C289 +
              (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
                (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                   C31013 * C30845 * C31148 -
               ((C18765 * C937 + C18763 * C944 + C18764 * C314 +
                 C18762 * C327) *
                    C13223 +
                (C18765 * C929 + C18763 * C938 + C18764 * C297 +
                 C18762 * C313) *
                    C13227 +
                (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                   C31013 * C30845 * C31136 +
               ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
                (C18764 * C298 + C18762 * C316 + C18765 * C1584 +
                 C18763 * C1585) *
                    C13227 +
                (C18764 * C315 + C18762 * C328 + C18765 * C1586 +
                 C18763 * C1587) *
                    C13223) *
                   C31013 * C30845 * C31111) *
                  C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31149 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C31138 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C30827 * C288 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C31138 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C31149 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C31114) *
              C30827 * C289 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C31149 -
           ((C18765 * C504 + C18763 * C517 + C18764 * C503 + C18762 * C516) *
                C13223 +
            (C18765 * C487 + C18763 * C505 + C18764 * C486 + C18762 * C502) *
                C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C31138 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C487 + C18762 * C505 + C18765 * C2288 + C18763 * C2289) *
                C13227 +
            (C18764 * C504 + C18762 * C517 + C18765 * C2290 + C18763 * C2291) *
                C13223) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C1074 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C1075 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C1075 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C1074 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C1074 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C1075 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C1142 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
               C13222 +
           (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
               C13226) *
              C31013 * C30845 * C1143 +
          ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
               C13226 +
           (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
               C13222 +
           (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
              C31013 * C30845 * C1144 -
          ((C18765 * C1704 + C18763 * C1708 + C18764 * C1156 + C18762 * C1167) *
               C13223 +
           (C18765 * C1699 + C18763 * C1703 + C18764 * C1149 + C18762 * C1157) *
               C13227 +
           (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 + C18762 * C1168) *
               C13222 +
           (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 + C18762 * C1159) *
               C13226) *
              C31013 * C30845 * C1145 +
          ((C18764 * C1151 + C18762 * C1160 + C18765 * C5678 + C18763 * C5683) *
               C13226 +
           (C18764 * C1161 + C18762 * C1169 + C18765 * C5682 + C18763 * C5687) *
               C13222 +
           (C18764 * C1152 + C18762 * C1162 + C18765 * C5980 + C18763 * C5981) *
               C13227 +
           (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 + C18763 * C5983) *
               C13223) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31149 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C31138 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C1074 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C31138 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C31149 -
           ((C18765 * C2408 + C18763 * C2412 + C18764 * C1293 +
             C18762 * C1310) *
                C13223 +
            (C18765 * C2403 + C18763 * C2407 + C18764 * C1283 +
             C18762 * C1294) *
                C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C31114) *
              C1075 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C31149 -
           ((C18765 * C1306 + C18763 * C1316 + C18764 * C1299 +
             C18762 * C1313) *
                C13223 +
            (C18765 * C1289 + C18763 * C1305 + C18764 * C1286 +
             C18762 * C1300) *
                C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C31138 +
           ((C18764 * C1288 + C18762 * C1303 + C18765 * C6386 +
             C18763 * C6390) *
                C13226 +
            (C18764 * C1304 + C18762 * C1315 + C18765 * C6389 +
             C18763 * C6395) *
                C13222 +
            (C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
             C18763 * C6657) *
                C13227 +
            (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
             C18763 * C6659) *
                C13223) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C1820 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C1821 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C30827 * C31145 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C1821 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C1820 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C31114) *
              C30827 * C31132 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C1820 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C1821 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C487 + C18762 * C505 + C18765 * C2288 + C18763 * C2289) *
                C13227 +
            (C18764 * C504 + C18762 * C517 + C18765 * C2290 + C18763 * C2291) *
                C13223) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C1820 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C1821 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C31148 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C1821 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C1820 -
           ((C18765 * C2408 + C18763 * C2412 + C18764 * C1293 +
             C18762 * C1310) *
                C13223 +
            (C18765 * C2403 + C18763 * C2407 + C18764 * C1283 +
             C18762 * C1294) *
                C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C31114) *
              C31136 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C1820 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C1821 +
           ((C18764 * C1288 + C18762 * C1303 + C18765 * C6386 +
             C18763 * C6390) *
                C13226 +
            (C18764 * C1304 + C18762 * C1315 + C18765 * C6389 +
             C18763 * C6395) *
                C13222 +
            (C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
             C18763 * C6657) *
                C13227 +
            (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
             C18763 * C6659) *
                C13223) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C1995 -
          ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
           (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
               C13222 +
           (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
               C13226) *
              C31013 * C1996 +
          ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
               C13226 +
           (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
               C13222 +
           (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
              C31013 * C1997 -
          ((C18765 * C2015 + C18763 * C2022 + C18764 * C2008 + C18762 * C2019) *
               C13223 +
           (C18765 * C2004 + C18763 * C2014 + C18764 * C2001 + C18762 * C2009) *
               C13227 +
           (C18765 * C2013 + C18763 * C2021 + C18764 * C2010 + C18762 * C2020) *
               C13222 +
           (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 + C18762 * C2011) *
               C13226) *
              C31013 * C1998 +
          ((C18764 * C2003 + C18762 * C2012 + C18765 * C10546 +
            C18763 * C10549) *
               C13226 +
           (C18764 * C2013 + C18762 * C2021 + C18765 * C10548 +
            C18763 * C10552) *
               C13222 +
           (C18764 * C2004 + C18762 * C2014 + C18765 * C10802 +
            C18763 * C10803) *
               C13227 +
           (C18764 * C2015 + C18762 * C2022 + C18765 * C10804 +
            C18763 * C10805) *
               C13223) *
              C31013 * C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31083 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C1074 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31083) *
               C1075 +
           (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                 C13226 +
             (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                 C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C31013 * C31083 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
              C18762 * C1314) *
                 C13222 +
             (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
              C18762 * C1302) *
                 C13226) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31083) *
               C1074 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31083 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C1075 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
              C18763 * C1307) *
                 C13227 +
             (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
              C18763 * C1317) *
                 C13223) *
                C31013 * C30932 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31083 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C30827 * C656 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C30932 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C31083) *
              C30827 * C657 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C31083 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C30932) *
              C30827 * C658 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C488 + C18762 * C507 + C18765 * C489 + C18763 * C508) *
                C13227 +
            (C18764 * C506 + C18762 * C518 + C18765 * C509 + C18763 * C519) *
                C13223) *
               C31013 * C30932 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C2284 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C2285 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C2286 -
           ((C21275 + C21276) * C13223 + (C21277 + C21278) * C13227 +
            (C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
             C18762 * C2020) *
                C13222 +
            (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
             C18762 * C2011) *
                C13226) *
               C31013 * C31127) *
              C30827 * C31068 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C2285 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C2284 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C2286 +
           ((C21278 + C21277) * C13226 + (C21276 + C21275) * C13222 +
            (C18764 * C2000 + C18762 * C2007 + C18765 * C2005 +
             C18763 * C2016) *
                C13227 +
            (C18764 * C2006 + C18762 * C2018 + C18765 * C2017 +
             C18763 * C2023) *
                C13223) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31148 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C31136 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C31136 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31148 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C31148 -
           ((C18765 * C937 + C18763 * C944 + C18764 * C314 + C18762 * C327) *
                C13223 +
            (C18765 * C929 + C18763 * C938 + C18764 * C297 + C18762 * C313) *
                C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C31136 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C30827 * C108 -
          ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
           (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
              C31013 * C30845 * C30827 * C109 +
          ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
           (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
              C31013 * C30845 * C30827 * C110 -
          ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
           (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
              C31013 * C30845 * C30827 * C111 +
          ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
           (C18764 * C122 + C18762 * C135 + C18765 * C770 + C18763 * C771) *
               C13227 +
           (C18764 * C134 + C18762 * C143 + C18765 * C772 + C18763 * C773) *
               C13223) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C1074 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C1075 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C1075 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C1074 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C1074 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C1075 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C1142 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
               C13222 +
           (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
               C13226) *
              C31013 * C30845 * C1143 +
          ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
               C13226 +
           (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
               C13222 +
           (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
              C31013 * C30845 * C1144 -
          ((C18765 * C1704 + C18763 * C1708 + C18764 * C1156 + C18762 * C1167) *
               C13223 +
           (C18765 * C1699 + C18763 * C1703 + C18764 * C1149 + C18762 * C1157) *
               C13227 +
           (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 + C18762 * C1168) *
               C13222 +
           (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 + C18762 * C1159) *
               C13226) *
              C31013 * C30845 * C1145 +
          ((C18764 * C1151 + C18762 * C1160 + C18765 * C5678 + C18763 * C5683) *
               C13226 +
           (C18764 * C1161 + C18762 * C1169 + C18765 * C5682 + C18763 * C5687) *
               C13222 +
           (C18764 * C1152 + C18762 * C1162 + C18765 * C5980 + C18763 * C5981) *
               C13227 +
           (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 + C18763 * C5983) *
               C13223) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C1820 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C1821 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C30827 * C31145 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C1821 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C1820 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C31114) *
              C30827 * C31132 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C1820 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C1821 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C487 + C18762 * C505 + C18765 * C2288 + C18763 * C2289) *
                C13227 +
            (C18764 * C504 + C18762 * C517 + C18765 * C2290 + C18763 * C2291) *
                C13223) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C1820 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C1821 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C31148 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C1821 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C1820 -
           ((C18765 * C2408 + C18763 * C2412 + C18764 * C1293 +
             C18762 * C1310) *
                C13223 +
            (C18765 * C2403 + C18763 * C2407 + C18764 * C1283 +
             C18762 * C1294) *
                C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C31114) *
              C31136 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C1820 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C1821 +
           ((C18764 * C1288 + C18762 * C1303 + C18765 * C6386 +
             C18763 * C6390) *
                C13226 +
            (C18764 * C1304 + C18762 * C1315 + C18765 * C6389 +
             C18763 * C6395) *
                C13222 +
            (C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
             C18763 * C6657) *
                C13227 +
            (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
             C18763 * C6659) *
                C13223) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C3274 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C31082 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C3274) *
               C30890) *
              C30804 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C3274) *
               C31082 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C3274 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30890) *
              C30813 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                C31013 * C3274 -
            ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C31013 * C30932) *
               C31082 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C13227 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C13223) *
                C31013 * C30932 -
            ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C31013 * C3274) *
               C30890) *
              C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C30928 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30935 +
            ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                 C13226 +
             (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                 C13222 +
             (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
                C31013 * C3782) *
               C31082 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30935 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C30928 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
              C18762 * C1311) *
                 C13222 +
             (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
              C18762 * C1296) *
                 C13226) *
                C31013 * C3782) *
               C30890) *
              C2620 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30935 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C30928 -
            ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C31013 * C3782) *
               C31082 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C30928 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30935 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1282 + C18762 * C1292 + C18765 * C2404 +
              C18763 * C2409) *
                 C13227 +
             (C18764 * C1291 + C18762 * C1309 + C18765 * C2410 +
              C18763 * C2413) *
                 C13223) *
                C31013 * C3782) *
               C30890) *
              C30810)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C3274 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C31148 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C3274) *
               C31136 +
           (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                 C13226 +
             (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                 C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C31013 * C3274 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
              C18762 * C1314) *
                 C13222 +
             (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
              C18762 * C1302) *
                 C13226) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C3274) *
               C31148 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C3274 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C31136 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
              C18763 * C1307) *
                 C13227 +
             (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
              C18763 * C1317) *
                 C13223) *
                C31013 * C30932 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C3274 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C30827 * C31154 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C30932 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C3274) *
              C30827 * C31147 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C3274 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C30932) *
              C30827 * C31134 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C488 + C18762 * C507 + C18765 * C489 + C18763 * C508) *
                C13227 +
            (C18764 * C506 + C18762 * C518 + C18765 * C509 + C18763 * C519) *
                C13223) *
               C31013 * C30932 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31156 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C31153 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31144 -
           ((C21275 + C21276) * C13223 + (C21277 + C21278) * C13227 +
            (C18765 * C2013 + C18763 * C2021 + C18764 * C2010 +
             C18762 * C2020) *
                C13222 +
            (C18765 * C2003 + C18763 * C2012 + C18764 * C2002 +
             C18762 * C2011) *
                C13226) *
               C31013 * C31127) *
              C30827 * C2620 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C31153 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C31156 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C31144 +
           ((C21278 + C21277) * C13226 + (C21276 + C21275) * C13222 +
            (C18764 * C2000 + C18762 * C2007 + C18765 * C2005 +
             C18763 * C2016) *
                C13227 +
            (C18764 * C2006 + C18762 * C2018 + C18765 * C2017 +
             C18763 * C2023) *
                C13223) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30928 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30935 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C3782) *
              C30827 * C30804 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C30935 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30928 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C3782) *
              C30827 * C30813 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30928 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C30935 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C487 + C18762 * C505 + C18765 * C2288 + C18763 * C2289) *
                C13227 +
            (C18764 * C504 + C18762 * C517 + C18765 * C2290 + C18763 * C2291) *
                C13223) *
               C31013 * C3782) *
              C30827 * C2883)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C3274 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C30827 * C31154 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C30932 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C3274) *
              C30827 * C31147 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C3274 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C30932) *
              C30827 * C31134 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C488 + C18762 * C507 + C18765 * C489 + C18763 * C508) *
                C13227 +
            (C18764 * C506 + C18762 * C518 + C18765 * C509 + C18763 * C519) *
                C13223) *
               C31013 * C30932 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C3274 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C31148 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C3274) *
               C31136 +
           (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                 C13226 +
             (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                 C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C31013 * C3274 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
              C18762 * C1314) *
                 C13222 +
             (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
              C18762 * C1302) *
                 C13226) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C3274) *
               C31148 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C3274 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C31136 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
              C18763 * C1307) *
                 C13227 +
             (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
              C18763 * C1317) *
                 C13223) *
                C31013 * C30932 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31082 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C30890) *
              C656 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C30890 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31082) *
              C657 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C31082 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C30890) *
              C658 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C299 + C18762 * C318 + C18765 * C930 + C18763 * C939) *
                C13227 +
            (C18764 * C317 + C18762 * C329 + C18765 * C940 + C18763 * C945) *
                C13223) *
               C31013 * C30845 * C30890 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C1416 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C1417 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C1418 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C30845 * C31121) *
              C31068 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C1417 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C1416 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C1418 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1148 + C18762 * C1155 + C18765 * C1700 +
             C18763 * C1705) *
                C13227 +
            (C18764 * C1154 + C18762 * C1166 + C18765 * C1706 +
             C18763 * C1709) *
                C13223) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31083 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C31082 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31083) *
               C30890) *
              C288 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31083) *
               C31082 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31083 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C30890) *
              C289 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
                C31013 * C31083 -
            ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C31013 * C30932) *
               C31082 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C929 + C18762 * C938 + C18765 * C2170 + C18763 * C2171) *
                 C13227 +
             (C18764 * C937 + C18762 * C944 + C18765 * C2172 + C18763 * C2173) *
                 C13223) *
                C31013 * C30932 -
            ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31083 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C1416 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C30932 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C31083) *
              C1417 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C31083 -
           ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C30932) *
              C1418 +
          (((C18764 * C1698 + C18762 * C1701 + C18765 * C5677 +
             C18763 * C5681) *
                C13226 +
            (C18764 * C1702 + C18762 * C1707 + C18765 * C5680 +
             C18763 * C5686) *
                C13222 +
            (C18764 * C1699 + C18762 * C1703 + C18765 * C6544 +
             C18763 * C6545) *
                C13227 +
            (C18764 * C1704 + C18762 * C1708 + C18765 * C6546 +
             C18763 * C6547) *
                C13223) *
               C31013 * C30932 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 +
             C18762 * C1168) *
                C13222 +
            (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 +
             C18762 * C1159) *
                C13226) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31148 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C31136 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C31136 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31148 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C31148 -
           ((C18765 * C937 + C18763 * C944 + C18764 * C314 + C18762 * C327) *
                C13223 +
            (C18765 * C929 + C18763 * C938 + C18764 * C297 + C18762 * C313) *
                C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C31136 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C30827 * C108 -
          ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
           (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
              C31013 * C30845 * C30827 * C109 +
          ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
           (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
              C31013 * C30845 * C30827 * C110 -
          ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
           (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
              C31013 * C30845 * C30827 * C111 +
          ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
           (C18764 * C122 + C18762 * C135 + C18765 * C770 + C18763 * C771) *
               C13227 +
           (C18764 * C134 + C18762 * C143 + C18765 * C772 + C18763 * C773) *
               C13223) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31149 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C31138 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C30827 * C288 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C31138 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C31149 -
           ((C19199 + C19200) * C13223 + (C19201 + C19202) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C31013 * C31114) *
              C30827 * C289 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C31149 -
           ((C18765 * C504 + C18763 * C517 + C18764 * C503 + C18762 * C516) *
                C13223 +
            (C18765 * C487 + C18763 * C505 + C18764 * C486 + C18762 * C502) *
                C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C31138 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C487 + C18762 * C505 + C18765 * C2288 + C18763 * C2289) *
                C13227 +
            (C18764 * C504 + C18762 * C517 + C18765 * C2290 + C18763 * C2291) *
                C13223) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C1074 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C1075 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C1075 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C1074 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C1074 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C1075 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C1142 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
               C13222 +
           (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
               C13226) *
              C31013 * C30845 * C1143 +
          ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
               C13226 +
           (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
               C13222 +
           (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
              C31013 * C30845 * C1144 -
          ((C18765 * C1704 + C18763 * C1708 + C18764 * C1156 + C18762 * C1167) *
               C13223 +
           (C18765 * C1699 + C18763 * C1703 + C18764 * C1149 + C18762 * C1157) *
               C13227 +
           (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 + C18762 * C1168) *
               C13222 +
           (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 + C18762 * C1159) *
               C13226) *
              C31013 * C30845 * C1145 +
          ((C18764 * C1151 + C18762 * C1160 + C18765 * C5678 + C18763 * C5683) *
               C13226 +
           (C18764 * C1161 + C18762 * C1169 + C18765 * C5682 + C18763 * C5687) *
               C13222 +
           (C18764 * C1152 + C18762 * C1162 + C18765 * C5980 + C18763 * C5981) *
               C13227 +
           (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 + C18763 * C5983) *
               C13223) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31149 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C31138 +
           ((C18764 * C483 + C18762 * C496 + C18765 * C2002 + C18763 * C2011) *
                C13226 +
            (C18764 * C497 + C18762 * C513 + C18765 * C2010 + C18763 * C2020) *
                C13222 +
            (C19191 + C19192) * C13227 + (C19193 + C19194) * C13223) *
               C31013 * C31114) *
              C1074 +
          (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                C13226 +
            (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C31013 * C31138 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C31149 -
           ((C18765 * C2408 + C18763 * C2412 + C18764 * C1293 +
             C18762 * C1310) *
                C13223 +
            (C18765 * C2403 + C18763 * C2407 + C18764 * C1283 +
             C18762 * C1294) *
                C13227 +
            (C18765 * C2406 + C18763 * C2411 + C18764 * C1295 +
             C18762 * C1311) *
                C13222 +
            (C18765 * C2402 + C18763 * C2405 + C18764 * C1284 +
             C18762 * C1296) *
                C13226) *
               C31013 * C31114) *
              C1075 +
          (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C31149 -
           ((C18765 * C1306 + C18763 * C1316 + C18764 * C1299 +
             C18762 * C1313) *
                C13223 +
            (C18765 * C1289 + C18763 * C1305 + C18764 * C1286 +
             C18762 * C1300) *
                C13227 +
            (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
             C18762 * C1314) *
                C13222 +
            (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
             C18762 * C1302) *
                C13226) *
               C31013 * C31138 +
           ((C18764 * C1288 + C18762 * C1303 + C18765 * C6386 +
             C18763 * C6390) *
                C13226 +
            (C18764 * C1304 + C18762 * C1315 + C18765 * C6389 +
             C18763 * C6395) *
                C13222 +
            (C18764 * C1289 + C18762 * C1305 + C18765 * C6656 +
             C18763 * C6657) *
                C13227 +
            (C18764 * C1306 + C18762 * C1316 + C18765 * C6658 +
             C18763 * C6659) *
                C13223) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C31083 -
           ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
            (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                C13222 +
            (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                C13226) *
               C31013 * C30932) *
              C30827 * C656 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
               C31013 * C30932 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C31083) *
              C30827 * C657 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C31083 -
           ((C19483 + C19484) * C13223 + (C19485 + C19486) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C31013 * C30932) *
              C30827 * C658 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C488 + C18762 * C507 + C18765 * C489 + C18763 * C508) *
                C13227 +
            (C18764 * C506 + C18762 * C518 + C18765 * C509 + C18763 * C519) *
                C13223) *
               C31013 * C30932 -
           ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                 C13226 +
             (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                 C13222 +
             (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
                C31013 * C31083 -
            ((C19187 + C19188) * C13223 + (C19189 + C19190) * C13227 +
             (C18765 * C497 + C18763 * C513 + C18764 * C494 + C18762 * C512) *
                 C13222 +
             (C18765 * C483 + C18763 * C496 + C18764 * C482 + C18762 * C495) *
                 C13226) *
                C31013 * C30932) *
               C1074 +
           (((C18764 * C926 + C18762 * C931 + C18765 * C1284 + C18763 * C1296) *
                 C13226 +
             (C18764 * C932 + C18762 * C941 + C18765 * C1295 + C18763 * C1311) *
                 C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C31013 * C30932 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                 C13222 +
             (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                 C13226) *
                C31013 * C31083) *
               C1075 +
           (((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                 C13226 +
             (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                 C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C31013 * C31083 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C18765 * C1304 + C18763 * C1315 + C18764 * C1301 +
              C18762 * C1314) *
                 C13222 +
             (C18765 * C1288 + C18763 * C1303 + C18764 * C1287 +
              C18762 * C1302) *
                 C13226) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19195 + C19196) * C13227 + (C19197 + C19198) * C13223) *
                C31013 * C30932 -
            ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C31013 * C31083) *
               C1074 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C31013 * C31083 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C31013 * C30932) *
               C1075 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1285 + C18762 * C1298 + C18765 * C1290 +
              C18763 * C1307) *
                 C13227 +
             (C18764 * C1297 + C18762 * C1312 + C18765 * C1308 +
              C18763 * C1317) *
                 C13223) *
                C31013 * C30932 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C30827 * C108 -
          ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
           (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
              C31013 * C30845 * C30827 * C109 +
          ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
           (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
              C31013 * C30845 * C30827 * C110 -
          ((C18811 + C18812) * C13223 + (C18813 + C18814) * C13227 +
           (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
              C31013 * C30845 * C30827 * C111 +
          ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
           (C18764 * C122 + C18762 * C135 + C18765 * C770 + C18763 * C771) *
               C13227 +
           (C18764 * C134 + C18762 * C143 + C18765 * C772 + C18763 * C773) *
               C13223) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C31148 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C31136 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C288 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C31136 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C31148 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C289 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C31148 -
           ((C18765 * C937 + C18763 * C944 + C18764 * C314 + C18762 * C327) *
                C13223 +
            (C18765 * C929 + C18763 * C938 + C18764 * C297 + C18762 * C313) *
                C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C31136 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
                C13226 +
            (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
                C13222 +
            (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
               C31013 * C30845 * C1074 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
                C13222 +
            (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
                C13226) *
               C31013 * C30845 * C1075 +
           ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
                C13226 +
            (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
                C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C31013 * C30845 * C31111) *
              C31145 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C31013 * C30845 * C1075 -
           ((C18803 + C18804) * C13223 + (C18805 + C18806) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C31013 * C30845 * C1074 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C31013 * C30845 * C31111) *
              C31132 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C18807 + C18808) * C13227 + (C18809 + C18810) * C13223) *
               C31013 * C30845 * C1074 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C31013 * C30845 * C1075 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C298 + C18762 * C316 + C18765 * C1584 + C18763 * C1585) *
                C13227 +
            (C18764 * C315 + C18762 * C328 + C18765 * C1586 + C18763 * C1587) *
                C13223) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C117 + C18762 * C124 + C18765 * C482 + C18763 * C495) *
               C13226 +
           (C18764 * C125 + C18762 * C138 + C18765 * C494 + C18763 * C512) *
               C13222 +
           (C18799 + C18800) * C13227 + (C18801 + C18802) * C13223) *
              C31013 * C30845 * C1142 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18765 * C932 + C18763 * C941 + C18764 * C305 + C18762 * C323) *
               C13222 +
           (C18765 * C926 + C18763 * C931 + C18764 * C293 + C18762 * C306) *
               C13226) *
              C31013 * C30845 * C1143 +
          ((C18764 * C294 + C18762 * C307 + C18765 * C1287 + C18763 * C1302) *
               C13226 +
           (C18764 * C308 + C18762 * C324 + C18765 * C1301 + C18763 * C1314) *
               C13222 +
           (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
              C31013 * C30845 * C1144 -
          ((C18765 * C1704 + C18763 * C1708 + C18764 * C1156 + C18762 * C1167) *
               C13223 +
           (C18765 * C1699 + C18763 * C1703 + C18764 * C1149 + C18762 * C1157) *
               C13227 +
           (C18765 * C1702 + C18763 * C1707 + C18764 * C1158 + C18762 * C1168) *
               C13222 +
           (C18765 * C1698 + C18763 * C1701 + C18764 * C1150 + C18762 * C1159) *
               C13226) *
              C31013 * C30845 * C1145 +
          ((C18764 * C1151 + C18762 * C1160 + C18765 * C5678 + C18763 * C5683) *
               C13226 +
           (C18764 * C1161 + C18762 * C1169 + C18765 * C5682 + C18763 * C5687) *
               C13222 +
           (C18764 * C1152 + C18762 * C1162 + C18765 * C5980 + C18763 * C5981) *
               C13227 +
           (C18764 * C1163 + C18762 * C1170 + C18765 * C5982 + C18763 * C5983) *
               C13223) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C30886 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30893 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C2880) *
              C30804 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30893 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C30886 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C2880) *
              C30813 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C30886 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30893 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C2880) *
              C2883)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C30886 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C30893 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C2880) *
              C30804 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C30893 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C30886 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C2880) *
              C30813 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C30886 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30893 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C2880) *
              C2883)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C30886 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C30893 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C31083 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C2880) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C30886 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30893 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C31083) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C30886 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C30893 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C2880) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C30886 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31083 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30893 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C31083) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31155 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31151 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31141 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C30845 * C31121) *
              C2620 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31151 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31155 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31141 +
           (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
            (C113 * C1422 + C31024 * C1423) * C116 +
            (C113 * C1424 + C31024 * C1425) * C104) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C2512 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30890) *
              C31154 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30890 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C2512) *
              C31147 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C2512 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30890) *
              C31134 +
          ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
            (C113 * C660 + C31024 * C661) * C116 +
            (C113 * C662 + C31024 * C663) * C104) *
               C31013 * C30845 * C30890 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31149 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C31138 +
            ((C113 * C483 + C31024 * C496) * C114 +
             (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
             C551 * C116 + C552 * C104) *
                C31013 * C31114) *
               C2512 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C31138 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31149 -
            (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
             (C113 * C1295 + C31024 * C1311) * C102 +
             (C113 * C1284 + C31024 * C1296) * C114) *
                C31013 * C31114) *
               C30890) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C31138 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31149 -
            (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
             C550 * C102 + C549 * C114) *
                C31013 * C31114) *
               C2512 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31149 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C31138 +
            (C2186 * C114 + C2185 * C102 + C2184 * C115 + C2183 * C103 +
             (C113 * C2170 + C31024 * C2171) * C116 +
             (C113 * C2172 + C31024 * C2173) * C104) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C2512 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C31154 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C2512) *
              C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C2512 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C31134 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31155 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C31151 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C31141 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C2620 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C31151 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31155 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31141 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31149 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C31138 +
            (((C113 * C483 + C31024 * C496) * C4739 +
              (C113 * C497 + C31024 * C513) * C30775) *
                 C4736 +
             (C5715 + C5716) * C4737 + C5723 * C4738) *
                C31114) *
               C2512 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C31138 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31149 -
            ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
             (C5716 + C5715) * C4736) *
                C31114) *
               C30890) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C31138 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31149 -
            ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
             (C550 * C30775 + C549 * C4739) * C4736) *
                C31114) *
               C2512 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31149 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C31138 +
            ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
             ((C113 * C6544 + C31024 * C6545) * C4739 +
              (C113 * C6546 + C31024 * C6547) * C30775) *
                 C4738) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C31024 * C124) * C114 +
                      (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                      C167 * C103 + C168 * C116 + C169 * C104) *
                         C31013 * C31083 -
                     (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                      (C113 * C494 + C31024 * C512) * C102 +
                      (C113 * C482 + C31024 * C495) * C114) *
                         C31013 * C30932) *
                        C2512 +
                    (((C113 * C926 + C31024 * C931) * C114 +
                      (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                      C960 * C103 + C961 * C116 + C962 * C104) *
                         C31013 * C30932 -
                     (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                      (C113 * C305 + C31024 * C323) * C102 +
                      (C113 * C293 + C31024 * C306) * C114) *
                         C31013 * C31083) *
                        C30890) *
                       C30804 +
                   (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                      C553 * C116 + C554 * C104) *
                         C31013 * C30932 -
                     (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                      C167 * C102 + C166 * C114) *
                         C31013 * C31083) *
                        C2512 +
                    ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                      C364 * C116 + C365 * C104) *
                         C31013 * C31083 -
                     (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                      C960 * C102 + C959 * C114) *
                         C31013 * C30932) *
                        C30890) *
                       C30813 +
                   (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                      C172 * C116 + C173 * C104) *
                         C31013 * C31083 -
                     (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                      C545 * C102 + C546 * C114) *
                         C31013 * C30932) *
                        C2512 +
                    ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
                      (C113 * C930 + C31024 * C939) * C116 +
                      (C113 * C940 + C31024 * C945) * C104) *
                         C31013 * C30932 -
                     (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                      C356 * C102 + C357 * C114) *
                         C31013 * C31083) *
                        C30890) *
                       C2883)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C113 * C117 + C31024 * C124) * C4739 +
                       (C113 * C125 + C31024 * C138) * C30775) *
                          C4736 +
                      (C4883 + C4884) * C4737 + C4889 * C4738) *
                         C31083 -
                     (C5690 * C4738 + (C5368 + C5369) * C4737 +
                      ((C113 * C494 + C31024 * C512) * C30775 +
                       (C113 * C482 + C31024 * C495) * C4739) *
                          C4736) *
                         C30932) *
                        C2512 +
                    (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                      C6096 * C4738) *
                         C30932 -
                     (C5550 * C4738 + (C4886 + C4885) * C4737 +
                      (C4884 + C4883) * C4736) *
                         C31083) *
                        C30890) *
                       C30804 +
                   ((((C548 * C4739 + C547 * C30775) * C4736 +
                      (C5354 + C5355) * C4737 + C5985 * C4738) *
                         C30932 -
                     (C4881 * C4738 + (C4864 + C4863) * C4737 +
                      (C167 * C30775 + C166 * C4739) * C4736) *
                         C31083) *
                        C2512 +
                    (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                      C5826 * C4738) *
                         C31083 -
                     ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                      (C5355 + C5354) * C4736) *
                         C30932) *
                        C30890) *
                       C30813 +
                   ((((C168 * C4739 + C169 * C30775) * C4736 +
                      (C4869 + C4870) * C4737 + C4882 * C4738) *
                         C31083 -
                     ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
                      (C545 * C30775 + C546 * C4739) * C4736) *
                         C30932) *
                        C2512 +
                    (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
                      ((C113 * C1700 + C31024 * C1705) * C4739 +
                       (C113 * C1706 + C31024 * C1709) * C30775) *
                          C4738) *
                         C30932 -
                     ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
                      (C4870 + C4869) * C4736) *
                         C31083) *
                        C30890) *
                       C2883)) /
                     (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C2512 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30890) *
              C31154 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30890 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C2512) *
              C31147 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C2512 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30890) *
              C31134 +
          ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
            (C113 * C660 + C31024 * C661) * C116 +
            (C113 * C662 + C31024 * C663) * C104) *
               C31013 * C30845 * C30890 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31155 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31151 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31141 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C30845 * C31121) *
              C2620 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31151 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31155 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31141 +
           (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
            (C113 * C1422 + C31024 * C1423) * C116 +
            (C113 * C1424 + C31024 * C1425) * C104) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C2512 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C31154 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C2512) *
              C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C2512 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C31134 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C2512) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31155 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C31151 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C31141 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C2620 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C31151 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31155 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31141 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C30886 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C30893 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C3274 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C2880) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C30886 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30893 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C3274) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C30886 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C30893 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C2880) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C30886 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30893 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C3274) *
               C2880) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30928 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30935 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C3782) *
              C30886 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30935 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30928 -
           (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C3782) *
              C30893 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30928 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30935 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C3782) *
              C2880) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30928 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30935 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C3782) *
              C30886 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30935 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30928 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C3782) *
              C30893 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30928 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30935 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C3782) *
              C2880) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C3274 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C31155 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30932 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C3274) *
              C31151 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C3274 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30932) *
              C31141 +
          (((C113 * C1698 + C31024 * C1701) * C114 +
            (C113 * C1702 + C31024 * C1707) * C102 +
            (C113 * C1699 + C31024 * C1703) * C115 +
            (C113 * C1704 + C31024 * C1708) * C103 +
            (C113 * C1700 + C31024 * C1705) * C116 +
            (C113 * C1706 + C31024 * C1709) * C104) *
               C31013 * C30932 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C2512 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C2512 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
             C172 * C116 + C173 * C104) *
                C31013 * C3274 -
            (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
             C545 * C102 + C546 * C114) *
                C31013 * C30932) *
               C2512 +
           ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
             (C113 * C930 + C31024 * C939) * C116 +
             (C113 * C940 + C31024 * C945) * C104) *
                C31013 * C30932 -
            (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
             C356 * C102 + C357 * C114) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31156 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31153 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31144 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C2512 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C31153 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31156 -
           (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31144 +
           ((C113 * C2402 + C31024 * C2405) * C114 +
            (C113 * C2406 + C31024 * C2411) * C102 +
            (C113 * C2403 + C31024 * C2407) * C115 +
            (C113 * C2408 + C31024 * C2412) * C103 +
            (C113 * C2404 + C31024 * C2409) * C116 +
            (C113 * C2410 + C31024 * C2413) * C104) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C2512 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C30890) *
              C31145 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C2512 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C31132 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C3274 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C2512 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C31155 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C3274) *
              C31151 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C31141 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31156 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31153 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31144 -
           ((C6775 + C6776) * C4738 + (C6777 + C6778) * C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C2512 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C31153 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31156 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31144 +
           ((C6778 + C6777) * C4736 + (C6776 + C6775) * C4737 +
            ((C113 * C6758 + C31024 * C6759) * C4739 +
             (C113 * C6760 + C31024 * C6761) * C30775) *
                C4738) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[108] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C31024 * C124) * C114 +
                      (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                      C167 * C103 + C168 * C116 + C169 * C104) *
                         C31013 * C30928 -
                     (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                      (C113 * C494 + C31024 * C512) * C102 +
                      (C113 * C482 + C31024 * C495) * C114) *
                         C31013 * C30935 +
                     ((C113 * C483 + C31024 * C496) * C114 +
                      (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                      C550 * C103 + C551 * C116 + C552 * C104) *
                         C31013 * C3782) *
                        C2512 +
                    (((C113 * C926 + C31024 * C931) * C114 +
                      (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                      C960 * C103 + C961 * C116 + C962 * C104) *
                         C31013 * C30935 -
                     (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                      (C113 * C305 + C31024 * C323) * C102 +
                      (C113 * C293 + C31024 * C306) * C114) *
                         C31013 * C30928 -
                     (C2183 * C104 + C2184 * C116 + C2185 * C103 +
                      C2186 * C115 + (C113 * C1295 + C31024 * C1311) * C102 +
                      (C113 * C1284 + C31024 * C1296) * C114) *
                         C31013 * C3782) *
                        C30890) *
                       C31068 +
                   (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                      C553 * C116 + C554 * C104) *
                         C31013 * C30935 -
                     (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                      C167 * C102 + C166 * C114) *
                         C31013 * C30928 -
                     (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                      C550 * C102 + C549 * C114) *
                         C31013 * C3782) *
                        C2512 +
                    ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                      C364 * C116 + C365 * C104) *
                         C31013 * C30928 -
                     (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                      C960 * C102 + C959 * C114) *
                         C31013 * C30935 +
                     (C2186 * C114 + C2185 * C102 + C2184 * C115 +
                      C2183 * C103 + (C113 * C2170 + C31024 * C2171) * C116 +
                      (C113 * C2172 + C31024 * C2173) * C104) *
                         C31013 * C3782) *
                        C30890) *
                       C30810)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C113 * C117 + C31024 * C124) * C4739 +
                       (C113 * C125 + C31024 * C138) * C30775) *
                          C4736 +
                      (C4883 + C4884) * C4737 + C4889 * C4738) *
                         C30928 -
                     (C5690 * C4738 + (C5368 + C5369) * C4737 +
                      ((C113 * C494 + C31024 * C512) * C30775 +
                       (C113 * C482 + C31024 * C495) * C4739) *
                          C4736) *
                         C30935 +
                     (((C113 * C483 + C31024 * C496) * C4739 +
                       (C113 * C497 + C31024 * C513) * C30775) *
                          C4736 +
                      (C5715 + C5716) * C4737 + C5723 * C4738) *
                         C3782) *
                        C2512 +
                    (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                      C6096 * C4738) *
                         C30935 -
                     (C5550 * C4738 + (C4886 + C4885) * C4737 +
                      (C4884 + C4883) * C4736) *
                         C30928 -
                     ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
                      (C5716 + C5715) * C4736) *
                         C3782) *
                        C30890) *
                       C31068 +
                   ((((C548 * C4739 + C547 * C30775) * C4736 +
                      (C5354 + C5355) * C4737 + C5985 * C4738) *
                         C30935 -
                     (C4881 * C4738 + (C4864 + C4863) * C4737 +
                      (C167 * C30775 + C166 * C4739) * C4736) *
                         C30928 -
                     ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
                      (C550 * C30775 + C549 * C4739) * C4736) *
                         C3782) *
                        C2512 +
                    (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                      C5826 * C4738) *
                         C30928 -
                     ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                      (C5355 + C5354) * C4736) *
                         C30935 +
                     ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
                      ((C113 * C6544 + C31024 * C6545) * C4739 +
                       (C113 * C6546 + C31024 * C6547) * C30775) *
                          C4738) *
                         C3782) *
                        C30890) *
                       C30810)) /
                     (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C2512 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C30890) *
              C31145 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C2512 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30890) *
              C31132 +
          (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
             C172 * C116 + C173 * C104) *
                C31013 * C3274 -
            (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
             C545 * C102 + C546 * C114) *
                C31013 * C30932) *
               C2512 +
           ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
             (C113 * C930 + C31024 * C939) * C116 +
             (C113 * C940 + C31024 * C945) * C104) *
                C31013 * C30932 -
            (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
             C356 * C102 + C357 * C114) *
                C31013 * C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C3274 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C31155 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30932 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C3274) *
              C31151 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C3274 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30932) *
              C31141 +
          (((C113 * C1698 + C31024 * C1701) * C114 +
            (C113 * C1702 + C31024 * C1707) * C102 +
            (C113 * C1699 + C31024 * C1703) * C115 +
            (C113 * C1704 + C31024 * C1708) * C103 +
            (C113 * C1700 + C31024 * C1705) * C116 +
            (C113 * C1706 + C31024 * C1709) * C104) *
               C31013 * C30932 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C2512 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C30890) *
              C31145 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C2512 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C31132 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C3274 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C2512 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C3274) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C31155 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C3274) *
              C31151 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C31141 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C3274) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1416 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1417 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C1418 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C30845 * C31121) *
              C31068 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1417 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1416 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C1418 +
           (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
            (C113 * C1422 + C31024 * C1423) * C116 +
            (C113 * C1424 + C31024 * C1425) * C104) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31082 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30890) *
              C656 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30890 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31082) *
              C657 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31082 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30890) *
              C658 +
          ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
            (C113 * C660 + C31024 * C661) * C116 +
            (C113 * C662 + C31024 * C663) * C104) *
               C31013 * C30845 * C30890 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C1820 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C1821 +
            ((C113 * C483 + C31024 * C496) * C114 +
             (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
             C551 * C116 + C552 * C104) *
                C31013 * C31114) *
               C31082 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C1821 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C1820 -
            (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
             (C113 * C1295 + C31024 * C1311) * C102 +
             (C113 * C1284 + C31024 * C1296) * C114) *
                C31013 * C31114) *
               C30890) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C1821 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C1820 -
            (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
             C550 * C102 + C549 * C114) *
                C31013 * C31114) *
               C31082 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C1820 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C1821 +
            (C2186 * C114 + C2185 * C102 + C2184 * C115 + C2183 * C103 +
             (C113 * C2170 + C31024 * C2171) * C116 +
             (C113 * C2172 + C31024 * C2173) * C104) *
                C31013 * C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31082 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C656 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31082) *
              C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31082 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C658 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1416 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C1417 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C1418 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C31068 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C1417 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1416 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C1418 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C1820 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C1821 +
            (((C113 * C483 + C31024 * C496) * C4739 +
              (C113 * C497 + C31024 * C513) * C30775) *
                 C4736 +
             (C5715 + C5716) * C4737 + C5723 * C4738) *
                C31114) *
               C31082 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C1821 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C1820 -
            ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
             (C5716 + C5715) * C4736) *
                C31114) *
               C30890) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C1821 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C1820 -
            ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
             (C550 * C30775 + C549 * C4739) * C4736) *
                C31114) *
               C31082 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C1820 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C1821 +
            ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
             ((C113 * C6544 + C31024 * C6545) * C4739 +
              (C113 * C6546 + C31024 * C6547) * C30775) *
                 C4738) *
                C31114) *
               C30890) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31083 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C1416 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30932 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31083) *
              C1417 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C31083 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30932) *
              C1418 +
          (((C113 * C1698 + C31024 * C1701) * C114 +
            (C113 * C1702 + C31024 * C1707) * C102 +
            (C113 * C1699 + C31024 * C1703) * C115 +
            (C113 * C1704 + C31024 * C1708) * C103 +
            (C113 * C1700 + C31024 * C1705) * C116 +
            (C113 * C1706 + C31024 * C1709) * C104) *
               C31013 * C30932 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C31082 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C30890) *
              C288 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C31082 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30890) *
              C289 +
          (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
             C172 * C116 + C173 * C104) *
                C31013 * C31083 -
            (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
             C545 * C102 + C546 * C114) *
                C31013 * C30932) *
               C31082 +
           ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
             (C113 * C930 + C31024 * C939) * C116 +
             (C113 * C940 + C31024 * C945) * C104) *
                C31013 * C30932 -
            (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
             C356 * C102 + C357 * C114) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C2284 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C2285 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C2286 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C31082 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C2285 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C2284 -
           (C2183 * C104 + C2184 * C116 + C2185 * C103 + C2186 * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C2286 +
           ((C113 * C2402 + C31024 * C2405) * C114 +
            (C113 * C2406 + C31024 * C2411) * C102 +
            (C113 * C2403 + C31024 * C2407) * C115 +
            (C113 * C2408 + C31024 * C2412) * C103 +
            (C113 * C2404 + C31024 * C2409) * C116 +
            (C113 * C2410 + C31024 * C2413) * C104) *
               C31013 * C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            ((C5366 + C5367) * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31082 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             ((C113 * C1698 + C31024 * C1701) * C4739 +
              (C113 * C1702 + C31024 * C1707) * C30775) *
                 C4738) *
                C30932 -
            ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C30890) *
              C288 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             (C5356 + C5357) * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C31082 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             (C4867 + C4868) * C4738) *
                C31083 -
            (((C113 * C1704 + C31024 * C1708) * C30775 +
              (C113 * C1699 + C31024 * C1703) * C4739) *
                 C4738 +
             (C5357 + C5356) * C4737 + (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C289 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C31083 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C31082 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C1416 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31083) *
              C1417 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C1418 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C2284 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C2285 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C2286 -
           ((C6775 + C6776) * C4738 + (C6777 + C6778) * C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C31082 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C2285 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C2284 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C2286 +
           ((C6778 + C6777) * C4736 + (C6776 + C6775) * C4737 +
            ((C113 * C6758 + C31024 * C6759) * C4739 +
             (C113 * C6760 + C31024 * C6761) * C30775) *
                C4738) *
               C31127) *
              C30890) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C31024 * C124) * C114 +
               (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
               C167 * C103 + C168 * C116 + C169 * C104) *
                  C31013 * C30845 * C30827 * C108 -
              (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
               C167 * C102 + C166 * C114) *
                  C31013 * C30845 * C30827 * C109 +
              (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
               C172 * C116 + C173 * C104) *
                  C31013 * C30845 * C30827 * C110 -
              (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
               C170 * C102 + C171 * C114) *
                  C31013 * C30845 * C30827 * C111 +
              (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
               (C113 * C123 + C31024 * C136) * C116 +
               (C113 * C137 + C31024 * C144) * C104) *
                  C31013 * C30845 * C30827 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C31024 * C124) * C114 +
                (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                C167 * C103 + C168 * C116 + C169 * C104) *
                   C31013 * C30845 * C31148 -
               (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                (C113 * C305 + C31024 * C323) * C102 +
                (C113 * C293 + C31024 * C306) * C114) *
                   C31013 * C30845 * C31136 +
               ((C113 * C294 + C31024 * C307) * C114 +
                (C113 * C308 + C31024 * C324) * C102 + C360 * C115 +
                C361 * C103 + C362 * C116 + C363 * C104) *
                   C31013 * C30845 * C31111) *
                  C288 +
              ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                C364 * C116 + C365 * C104) *
                   C31013 * C30845 * C31136 -
               (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                C167 * C102 + C166 * C114) *
                   C31013 * C30845 * C31148 -
               (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
                C361 * C102 + C360 * C114) *
                   C31013 * C30845 * C31111) *
                  C289 +
              ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                C172 * C116 + C173 * C104) *
                   C31013 * C30845 * C31148 -
               ((C113 * C317 + C31024 * C329) * C104 +
                (C113 * C299 + C31024 * C318) * C116 + C365 * C103 +
                C364 * C115 + C356 * C102 + C357 * C114) *
                   C31013 * C30845 * C31136 +
               (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
                (C113 * C300 + C31024 * C319) * C116 +
                (C113 * C320 + C31024 * C330) * C104) *
                   C31013 * C30845 * C31111) *
                  C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31149 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31138 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C30827 * C288 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C31138 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31149 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31114) *
              C30827 * C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C31149 -
           ((C113 * C506 + C31024 * C518) * C104 +
            (C113 * C488 + C31024 * C507) * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C31138 +
           (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
            (C113 * C489 + C31024 * C508) * C116 +
            (C113 * C509 + C31024 * C519) * C104) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31149 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31138 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C1074 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C31138 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31149 -
           ((C113 * C1291 + C31024 * C1309) * C104 +
            (C113 * C1282 + C31024 * C1292) * C116 +
            (C113 * C1293 + C31024 * C1310) * C103 +
            (C113 * C1283 + C31024 * C1294) * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31114) *
              C1075 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C31149 -
           ((C113 * C1297 + C31024 * C1312) * C104 +
            (C113 * C1285 + C31024 * C1298) * C116 +
            (C113 * C1299 + C31024 * C1313) * C103 +
            (C113 * C1286 + C31024 * C1300) * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C31138 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C1820 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C1821 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C30827 * C31145 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C1821 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C1820 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31114) *
              C30827 * C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C1820 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C1821 +
           (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
            (C113 * C489 + C31024 * C508) * C116 +
            (C113 * C509 + C31024 * C519) * C104) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C1820 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C1821 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C31148 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C1821 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C1820 -
           ((C113 * C1291 + C31024 * C1309) * C104 +
            (C113 * C1282 + C31024 * C1292) * C116 +
            (C113 * C1293 + C31024 * C1310) * C103 +
            (C113 * C1283 + C31024 * C1294) * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31114) *
              C31136 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C1820 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C1821 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C1995 -
          (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
           (C113 * C494 + C31024 * C512) * C102 +
           (C113 * C482 + C31024 * C495) * C114) *
              C31013 * C1996 +
          ((C113 * C483 + C31024 * C496) * C114 +
           (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
           C551 * C116 + C552 * C104) *
              C31013 * C1997 -
          ((C113 * C2006 + C31024 * C2018) * C104 +
           (C113 * C2000 + C31024 * C2007) * C116 +
           (C113 * C2008 + C31024 * C2019) * C103 +
           (C113 * C2001 + C31024 * C2009) * C115 +
           (C113 * C2010 + C31024 * C2020) * C102 +
           (C113 * C2002 + C31024 * C2011) * C114) *
              C31013 * C1998 +
          ((C113 * C2003 + C31024 * C2012) * C114 +
           (C113 * C2013 + C31024 * C2021) * C102 +
           (C113 * C2004 + C31024 * C2014) * C115 +
           (C113 * C2015 + C31024 * C2022) * C103 +
           (C113 * C2005 + C31024 * C2016) * C116 +
           (C113 * C2017 + C31024 * C2023) * C104) *
              C31013 * C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            ((C113 * C1284 + C31024 * C1296) * C4739 +
             (C113 * C1295 + C31024 * C1311) * C30775) *
                C4737 +
            ((C113 * C1288 + C31024 * C1303) * C4739 +
             (C113 * C1304 + C31024 * C1315) * C30775) *
                C4738) *
               C31114) *
              C30827 * C288 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C31138 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31149 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31149 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C31138 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C1074 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
            (C5719 + C5720) * C4738) *
               C31138 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31149 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C1075 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31149 -
           (((C113 * C5682 + C31024 * C5687) * C30775 +
             (C113 * C5678 + C31024 * C5683) * C4739) *
                C4738 +
            (C5720 + C5719) * C4737 + C5690 * C4736) *
               C31138 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C30827 * C31145 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C1821 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C1820 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C1820 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C1821 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C31148 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C1821 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C1820 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C31136 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C1820 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C1821 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C1995 -
          (C5690 * C4738 + (C5368 + C5369) * C4737 +
           ((C113 * C494 + C31024 * C512) * C30775 +
            (C113 * C482 + C31024 * C495) * C4739) *
               C4736) *
              C1996 +
          (((C113 * C483 + C31024 * C496) * C4739 +
            (C113 * C497 + C31024 * C513) * C30775) *
               C4736 +
           (C5715 + C5716) * C4737 + C5723 * C4738) *
              C1997 -
          (((C113 * C6389 + C31024 * C6395) * C30775 +
            (C113 * C6386 + C31024 * C6390) * C4739) *
               C4738 +
           ((C113 * C2406 + C31024 * C2411) * C30775 +
            (C113 * C2402 + C31024 * C2405) * C4739) *
               C4737 +
           ((C113 * C2010 + C31024 * C2020) * C30775 +
            (C113 * C2002 + C31024 * C2011) * C4739) *
               C4736) *
              C1998 +
          (((C113 * C2003 + C31024 * C2012) * C4739 +
            (C113 * C2013 + C31024 * C2021) * C30775) *
               C4736 +
           ((C113 * C6387 + C31024 * C6391) * C4739 +
            (C113 * C6392 + C31024 * C6396) * C30775) *
               C4737 +
           ((C113 * C6388 + C31024 * C6393) * C4739 +
            (C113 * C6394 + C31024 * C6397) * C30775) *
               C4738) *
              C1999) *
         C30827 * C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C1074 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C1075 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C31083 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C1074 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C1075 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31083 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C30827 * C656 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C30932 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31083) *
              C30827 * C657 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C31083 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C30932) *
              C30827 * C658 +
          ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
            (C113 * C770 + C31024 * C771) * C116 +
            (C113 * C772 + C31024 * C773) * C104) *
               C31013 * C30932 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C2284 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C2285 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C2286 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C30827 * C31068 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C2285 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C2284 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C2286 +
           (C2304 * C114 + C2303 * C102 + C2302 * C115 + C2301 * C103 +
            (C113 * C2288 + C31024 * C2289) * C116 +
            (C113 * C2290 + C31024 * C2291) * C104) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C656 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31083) *
              C30827 * C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31083 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C658 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C1074 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             (C5719 + C5720) * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C1075 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
            (((C113 * C5682 + C31024 * C5687) * C30775 +
              (C113 * C5678 + C31024 * C5683) * C4739) *
                 C4738 +
             (C5720 + C5719) * C4737 + C5690 * C4736) *
                C30932) *
               C31111) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C1074 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31083 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C1075 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C2284 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C2285 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C2286 -
           (((C113 * C6389 + C31024 * C6395) * C30775 +
             (C113 * C6386 + C31024 * C6390) * C4739) *
                C4738 +
            ((C113 * C2406 + C31024 * C2411) * C30775 +
             (C113 * C2402 + C31024 * C2405) * C4739) *
                C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C30827 * C31068 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C2285 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C2284 -
           ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C2286 +
           ((C2304 * C4739 + C2303 * C30775) * C4736 +
            ((C113 * C2403 + C31024 * C2407) * C4739 +
             (C113 * C2408 + C31024 * C2412) * C30775) *
                C4737 +
            ((C113 * C6656 + C31024 * C6657) * C4739 +
             (C113 * C6658 + C31024 * C6659) * C30775) *
                C4738) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31148 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31136 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C288 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31136 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31148 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31148 -
           ((C113 * C317 + C31024 * C329) * C104 +
            (C113 * C299 + C31024 * C318) * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C31136 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C30827 * C108 -
          (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 + C167 * C102 +
           C166 * C114) *
              C31013 * C30845 * C30827 * C109 +
          (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 + C172 * C116 +
           C173 * C104) *
              C31013 * C30845 * C30827 * C110 -
          (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 + C170 * C102 +
           C171 * C114) *
              C31013 * C30845 * C30827 * C111 +
          (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
           (C113 * C123 + C31024 * C136) * C116 +
           (C113 * C137 + C31024 * C144) * C104) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C1820 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C1821 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C30827 * C31145 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C1821 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C1820 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31114) *
              C30827 * C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C1820 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C1821 +
           (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
            (C113 * C489 + C31024 * C508) * C116 +
            (C113 * C509 + C31024 * C519) * C104) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C1820 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C1821 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C31148 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C1821 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C1820 -
           ((C113 * C1291 + C31024 * C1309) * C104 +
            (C113 * C1282 + C31024 * C1292) * C116 +
            (C113 * C1293 + C31024 * C1310) * C103 +
            (C113 * C1283 + C31024 * C1294) * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31114) *
              C31136 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C1820 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C1821 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C30827 * C31145 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C1821 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C1820 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C1820 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C1821 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C1820 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C1821 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C31148 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C1821 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C1820 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C31136 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C1820 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C1821 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[115] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C31024 * C124) * C114 +
                      (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                      C167 * C103 + C168 * C116 + C169 * C104) *
                         C31013 * C3274 -
                     (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                      (C113 * C494 + C31024 * C512) * C102 +
                      (C113 * C482 + C31024 * C495) * C114) *
                         C31013 * C30932) *
                        C31082 +
                    (((C113 * C926 + C31024 * C931) * C114 +
                      (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                      C960 * C103 + C961 * C116 + C962 * C104) *
                         C31013 * C30932 -
                     (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                      (C113 * C305 + C31024 * C323) * C102 +
                      (C113 * C293 + C31024 * C306) * C114) *
                         C31013 * C3274) *
                        C30890) *
                       C30804 +
                   (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                      C553 * C116 + C554 * C104) *
                         C31013 * C30932 -
                     (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                      C167 * C102 + C166 * C114) *
                         C31013 * C3274) *
                        C31082 +
                    ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                      C364 * C116 + C365 * C104) *
                         C31013 * C3274 -
                     (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                      C960 * C102 + C959 * C114) *
                         C31013 * C30932) *
                        C30890) *
                       C30813 +
                   (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                      C172 * C116 + C173 * C104) *
                         C31013 * C3274 -
                     (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                      C545 * C102 + C546 * C114) *
                         C31013 * C30932) *
                        C31082 +
                    ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
                      (C113 * C930 + C31024 * C939) * C116 +
                      (C113 * C940 + C31024 * C945) * C104) *
                         C31013 * C30932 -
                     (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
                      C356 * C102 + C357 * C114) *
                         C31013 * C3274) *
                        C30890) *
                       C2883)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C113 * C117 + C31024 * C124) * C4739 +
                       (C113 * C125 + C31024 * C138) * C30775) *
                          C4736 +
                      (C4883 + C4884) * C4737 + C4889 * C4738) *
                         C3274 -
                     (C5690 * C4738 + (C5368 + C5369) * C4737 +
                      ((C113 * C494 + C31024 * C512) * C30775 +
                       (C113 * C482 + C31024 * C495) * C4739) *
                          C4736) *
                         C30932) *
                        C31082 +
                    (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                      C6096 * C4738) *
                         C30932 -
                     (C5550 * C4738 + (C4886 + C4885) * C4737 +
                      (C4884 + C4883) * C4736) *
                         C3274) *
                        C30890) *
                       C30804 +
                   ((((C548 * C4739 + C547 * C30775) * C4736 +
                      (C5354 + C5355) * C4737 + C5985 * C4738) *
                         C30932 -
                     (C4881 * C4738 + (C4864 + C4863) * C4737 +
                      (C167 * C30775 + C166 * C4739) * C4736) *
                         C3274) *
                        C31082 +
                    (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                      C5826 * C4738) *
                         C3274 -
                     ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                      (C5355 + C5354) * C4736) *
                         C30932) *
                        C30890) *
                       C30813 +
                   ((((C168 * C4739 + C169 * C30775) * C4736 +
                      (C4869 + C4870) * C4737 + C4882 * C4738) *
                         C3274 -
                     ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
                      (C545 * C30775 + C546 * C4739) * C4736) *
                         C30932) *
                        C31082 +
                    (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
                      ((C113 * C1700 + C31024 * C1705) * C4739 +
                       (C113 * C1706 + C31024 * C1709) * C30775) *
                          C4738) *
                         C30932 -
                     ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
                      (C4870 + C4869) * C4736) *
                         C3274) *
                        C30890) *
                       C2883)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C31024 * C124) * C114 +
                      (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                      C167 * C103 + C168 * C116 + C169 * C104) *
                         C31013 * C30928 -
                     (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                      (C113 * C494 + C31024 * C512) * C102 +
                      (C113 * C482 + C31024 * C495) * C114) *
                         C31013 * C30935 +
                     ((C113 * C483 + C31024 * C496) * C114 +
                      (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                      C550 * C103 + C551 * C116 + C552 * C104) *
                         C31013 * C3782) *
                        C31082 +
                    (((C113 * C926 + C31024 * C931) * C114 +
                      (C113 * C932 + C31024 * C941) * C102 + C959 * C115 +
                      C960 * C103 + C961 * C116 + C962 * C104) *
                         C31013 * C30935 -
                     (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
                      (C113 * C305 + C31024 * C323) * C102 +
                      (C113 * C293 + C31024 * C306) * C114) *
                         C31013 * C30928 -
                     (C2183 * C104 + C2184 * C116 + C2185 * C103 +
                      C2186 * C115 + (C113 * C1295 + C31024 * C1311) * C102 +
                      (C113 * C1284 + C31024 * C1296) * C114) *
                         C31013 * C3782) *
                        C30890) *
                       C2620 +
                   (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                      C553 * C116 + C554 * C104) *
                         C31013 * C30935 -
                     (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                      C167 * C102 + C166 * C114) *
                         C31013 * C30928 -
                     (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                      C550 * C102 + C549 * C114) *
                         C31013 * C3782) *
                        C31082 +
                    ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
                      C364 * C116 + C365 * C104) *
                         C31013 * C30928 -
                     (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
                      C960 * C102 + C959 * C114) *
                         C31013 * C30935 +
                     (C2186 * C114 + C2185 * C102 + C2184 * C115 +
                      C2183 * C103 + (C113 * C2170 + C31024 * C2171) * C116 +
                      (C113 * C2172 + C31024 * C2173) * C104) *
                         C31013 * C3782) *
                        C30890) *
                       C30810)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C113 * C117 + C31024 * C124) * C4739 +
                       (C113 * C125 + C31024 * C138) * C30775) *
                          C4736 +
                      (C4883 + C4884) * C4737 + C4889 * C4738) *
                         C30928 -
                     (C5690 * C4738 + (C5368 + C5369) * C4737 +
                      ((C113 * C494 + C31024 * C512) * C30775 +
                       (C113 * C482 + C31024 * C495) * C4739) *
                          C4736) *
                         C30935 +
                     (((C113 * C483 + C31024 * C496) * C4739 +
                       (C113 * C497 + C31024 * C513) * C30775) *
                          C4736 +
                      (C5715 + C5716) * C4737 + C5723 * C4738) *
                         C3782) *
                        C31082 +
                    (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
                      C6096 * C4738) *
                         C30935 -
                     (C5550 * C4738 + (C4886 + C4885) * C4737 +
                      (C4884 + C4883) * C4736) *
                         C30928 -
                     ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
                      (C5716 + C5715) * C4736) *
                         C3782) *
                        C30890) *
                       C2620 +
                   ((((C548 * C4739 + C547 * C30775) * C4736 +
                      (C5354 + C5355) * C4737 + C5985 * C4738) *
                         C30935 -
                     (C4881 * C4738 + (C4864 + C4863) * C4737 +
                      (C167 * C30775 + C166 * C4739) * C4736) *
                         C30928 -
                     ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
                      (C550 * C30775 + C549 * C4739) * C4736) *
                         C3782) *
                        C31082 +
                    (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
                      C5826 * C4738) *
                         C30928 -
                     ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
                      (C5355 + C5354) * C4736) *
                         C30935 +
                     ((C6554 + C6553) * C4736 + (C6558 + C6557) * C4737 +
                      ((C113 * C6544 + C31024 * C6545) * C4739 +
                       (C113 * C6546 + C31024 * C6547) * C30775) *
                          C4738) *
                         C3782) *
                        C30890) *
                       C30810)) /
                     (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C31148 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C31136 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C3274 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C31148 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C31136 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C3274 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C30827 * C31154 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C30932 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C3274) *
              C30827 * C31147 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C3274 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C30932) *
              C30827 * C31134 +
          ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
            (C113 * C770 + C31024 * C771) * C116 +
            (C113 * C772 + C31024 * C773) * C104) *
               C31013 * C30932 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31156 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31153 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31144 -
           (C2301 * C104 + C2302 * C116 + C2303 * C103 + C2304 * C115 +
            (C113 * C2010 + C31024 * C2020) * C102 +
            (C113 * C2002 + C31024 * C2011) * C114) *
               C31013 * C31127) *
              C30827 * C2620 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C31153 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31156 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31144 +
           (C2304 * C114 + C2303 * C102 + C2302 * C115 + C2301 * C103 +
            (C113 * C2288 + C31024 * C2289) * C116 +
            (C113 * C2290 + C31024 * C2291) * C104) *
               C31013 * C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C31154 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C3274) *
              C30827 * C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C3274 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C31134 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31148 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C31136 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C31111) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C31148 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C31136 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31156 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31153 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31144 -
           ((C6775 + C6776) * C4738 + (C6777 + C6778) * C4737 +
            ((C113 * C2010 + C31024 * C2020) * C30775 +
             (C113 * C2002 + C31024 * C2011) * C4739) *
                C4736) *
               C31127) *
              C30827 * C2620 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C31153 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31156 -
           ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31144 +
           ((C2304 * C4739 + C2303 * C30775) * C4736 +
            ((C113 * C2403 + C31024 * C2407) * C4739 +
             (C113 * C2408 + C31024 * C2412) * C30775) *
                C4737 +
            ((C113 * C6656 + C31024 * C6657) * C4739 +
             (C113 * C6658 + C31024 * C6659) * C30775) *
                C4738) *
               C31127) *
              C30827 * C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C31024 * C124) * C114 +
                     (C113 * C125 + C31024 * C138) * C102 + C166 * C115 +
                     C167 * C103 + C168 * C116 + C169 * C104) *
                        C31013 * C30928 -
                    (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
                     (C113 * C494 + C31024 * C512) * C102 +
                     (C113 * C482 + C31024 * C495) * C114) *
                        C31013 * C30935 +
                    ((C113 * C483 + C31024 * C496) * C114 +
                     (C113 * C497 + C31024 * C513) * C102 + C549 * C115 +
                     C550 * C103 + C551 * C116 + C552 * C104) *
                        C31013 * C3782) *
                       C30827 * C30804 +
                   ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
                     C553 * C116 + C554 * C104) *
                        C31013 * C30935 -
                    (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
                     C167 * C102 + C166 * C114) *
                        C31013 * C30928 -
                    (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
                     C550 * C102 + C549 * C114) *
                        C31013 * C3782) *
                       C30827 * C30813 +
                   ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
                     C172 * C116 + C173 * C104) *
                        C31013 * C30928 -
                    (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
                     C545 * C102 + C546 * C114) *
                        C31013 * C30935 +
                    (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
                     (C113 * C489 + C31024 * C508) * C116 +
                     (C113 * C509 + C31024 * C519) * C104) *
                        C31013 * C3782) *
                       C30827 * C2883)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C31024 * C124) * C4739 +
                      (C113 * C125 + C31024 * C138) * C30775) *
                         C4736 +
                     (C4883 + C4884) * C4737 + C4889 * C4738) *
                        C30928 -
                    (C5690 * C4738 + (C5368 + C5369) * C4737 +
                     ((C113 * C494 + C31024 * C512) * C30775 +
                      (C113 * C482 + C31024 * C495) * C4739) *
                         C4736) *
                        C30935 +
                    (((C113 * C483 + C31024 * C496) * C4739 +
                      (C113 * C497 + C31024 * C513) * C30775) *
                         C4736 +
                     (C5715 + C5716) * C4737 + C5723 * C4738) *
                        C3782) *
                       C30827 * C30804 +
                   (((C548 * C4739 + C547 * C30775) * C4736 +
                     (C5354 + C5355) * C4737 + C5985 * C4738) *
                        C30935 -
                    (C4881 * C4738 + (C4864 + C4863) * C4737 +
                     (C167 * C30775 + C166 * C4739) * C4736) *
                        C30928 -
                    ((C6557 + C6558) * C4738 + (C6553 + C6554) * C4737 +
                     (C550 * C30775 + C549 * C4739) * C4736) *
                        C3782) *
                       C30827 * C30813 +
                   (((C168 * C4739 + C169 * C30775) * C4736 +
                     (C4869 + C4870) * C4737 + C4882 * C4738) *
                        C30928 -
                    ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
                     (C545 * C30775 + C546 * C4739) * C4736) *
                        C30935 +
                    ((C551 * C4739 + C552 * C30775) * C4736 +
                     (C2184 * C4739 + C2183 * C30775) * C4737 +
                     ((C113 * C1290 + C31024 * C1307) * C4739 +
                      (C113 * C1308 + C31024 * C1317) * C30775) *
                         C4738) *
                        C3782) *
                       C30827 * C2883)) /
                     (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C3274 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C30827 * C31154 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C30932 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C3274) *
              C30827 * C31147 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C3274 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C30932) *
              C30827 * C31134 +
          ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
            (C113 * C770 + C31024 * C771) * C116 +
            (C113 * C772 + C31024 * C773) * C104) *
               C31013 * C30932 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C3274 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C31148 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C3274) *
               C31136 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C3274 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C31111) *
              C2620 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C3274) *
               C31148 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C3274 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C31136 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C3274 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C31154 +
          (((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
            C5985 * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C3274) *
              C30827 * C31147 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C3274 -
           ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C31134 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C3274) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C3274 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31148 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             C6096 * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C3274) *
               C31136 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C3274 -
            ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 +
             C5690 * C4736) *
                C30932) *
               C31111) *
              C2620 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C3274) *
               C31148 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C3274 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C31136 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C3274) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31082 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C30890) *
              C656 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C30890 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31082) *
              C657 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31082 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C30890) *
              C658 +
          ((C364 * C114 + C365 * C102 + C670 * C115 + C669 * C103 +
            (C113 * C660 + C31024 * C661) * C116 +
            (C113 * C662 + C31024 * C663) * C104) *
               C31013 * C30845 * C30890 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1416 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1417 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C1418 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C30845 * C31121) *
              C31068 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1417 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1416 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C1418 +
           (C1438 * C114 + C1437 * C102 + C1436 * C115 + C1435 * C103 +
            (C113 * C1422 + C31024 * C1423) * C116 +
            (C113 * C1424 + C31024 * C1425) * C104) *
               C31013 * C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31082 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C30890) *
              C656 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C30890 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31082) *
              C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31082 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C30890) *
              C658 +
          (((C5098 + C5099) * C4736 + (C5100 + C5101) * C4737 +
            ((C113 * C1422 + C31024 * C1423) * C4739 +
             (C113 * C1424 + C31024 * C1425) * C30775) *
                C4738) *
               C30845 * C30890 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C30845 * C31082) *
              C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1416 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C30845 * C1417 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
               C1418 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C30845 * C31121) *
              C31068 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 + C5826 * C4738) *
               C30845 * C1417 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1416 -
           ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C1418 +
           (C5826 * C4736 + (C5834 + C5833) * C4737 +
            ((C113 * C5821 + C31024 * C5822) * C4739 +
             (C113 * C5823 + C31024 * C5824) * C30775) *
                C4738) *
               C30845 * C31121) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C31082 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C30890) *
              C288 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C31082 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C30890) *
              C289 +
          (((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
             C172 * C116 + C173 * C104) *
                C31013 * C31083 -
            (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
             C545 * C102 + C546 * C114) *
                C31013 * C30932) *
               C31082 +
           ((C961 * C114 + C962 * C102 + C964 * C115 + C963 * C103 +
             (C113 * C930 + C31024 * C939) * C116 +
             (C113 * C940 + C31024 * C945) * C104) *
                C31013 * C30932 -
            (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
             C356 * C102 + C357 * C114) *
                C31013 * C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31083 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C1416 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C30932 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31083) *
              C1417 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C31083 -
           (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C30932) *
              C1418 +
          (((C113 * C1698 + C31024 * C1701) * C114 +
            (C113 * C1702 + C31024 * C1707) * C102 +
            (C113 * C1699 + C31024 * C1703) * C115 +
            (C113 * C1704 + C31024 * C1708) * C103 +
            (C113 * C1700 + C31024 * C1705) * C116 +
            (C113 * C1706 + C31024 * C1709) * C104) *
               C31013 * C30932 -
           (C1435 * C104 + C1436 * C116 + C1437 * C103 + C1438 * C115 +
            (C113 * C1158 + C31024 * C1168) * C102 +
            (C113 * C1150 + C31024 * C1159) * C114) *
               C31013 * C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            ((C5366 + C5367) * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C31082 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             ((C113 * C1698 + C31024 * C1701) * C4739 +
              (C113 * C1702 + C31024 * C1707) * C30775) *
                 C4738) *
                C30932 -
            ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C30890) *
              C288 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             (C5356 + C5357) * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C31082 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             (C4867 + C4868) * C4738) *
                C31083 -
            (((C113 * C1704 + C31024 * C1708) * C30775 +
              (C113 * C1699 + C31024 * C1703) * C4739) *
                 C4738 +
             (C5357 + C5356) * C4737 + (C5355 + C5354) * C4736) *
                C30932) *
               C30890) *
              C289 +
          ((((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
             C4882 * C4738) *
                C31083 -
            ((C5358 + C5359) * C4738 + (C5360 + C5361) * C4737 +
             (C545 * C30775 + C546 * C4739) * C4736) *
                C30932) *
               C31082 +
           (((C5361 + C5360) * C4736 + (C5359 + C5358) * C4737 +
             ((C113 * C1700 + C31024 * C1705) * C4739 +
              (C113 * C1706 + C31024 * C1709) * C30775) *
                 C4738) *
                C30932 -
            ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
             (C4870 + C4869) * C4736) *
                C31083) *
               C30890) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C1416 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 + C6096 * C4738) *
               C30932 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31083) *
              C1417 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
           ((C6103 + C6104) * C4738 + (C5720 + C5719) * C4737 + C5690 * C4736) *
               C30932) *
              C1418 +
          ((C6096 * C4736 + (C6104 + C6103) * C4737 +
            ((C113 * C6091 + C31024 * C6092) * C4739 +
             (C113 * C6093 + C31024 * C6094) * C30775) *
                C4738) *
               C30932 -
           ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
               C31083) *
              C31121) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31148 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31136 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C288 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31136 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31148 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31148 -
           ((C113 * C317 + C31024 * C329) * C104 +
            (C113 * C299 + C31024 * C318) * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C31136 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C30827 * C108 -
          (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 + C167 * C102 +
           C166 * C114) *
              C31013 * C30845 * C30827 * C109 +
          (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 + C172 * C116 +
           C173 * C104) *
              C31013 * C30845 * C30827 * C110 -
          (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 + C170 * C102 +
           C171 * C114) *
              C31013 * C30845 * C30827 * C111 +
          (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
           (C113 * C123 + C31024 * C136) * C116 +
           (C113 * C137 + C31024 * C144) * C104) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31149 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31138 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C30827 * C288 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C31138 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31149 -
           (C555 * C104 + C556 * C116 + C552 * C103 + C551 * C115 +
            C550 * C102 + C549 * C114) *
               C31013 * C31114) *
              C30827 * C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C31149 -
           ((C113 * C506 + C31024 * C518) * C104 +
            (C113 * C488 + C31024 * C507) * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C31138 +
           (C551 * C114 + C552 * C102 + C556 * C115 + C555 * C103 +
            (C113 * C489 + C31024 * C508) * C116 +
            (C113 * C509 + C31024 * C519) * C104) *
               C31013 * C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31149 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C31138 +
           ((C113 * C483 + C31024 * C496) * C114 +
            (C113 * C497 + C31024 * C513) * C102 + C549 * C115 + C550 * C103 +
            C551 * C116 + C552 * C104) *
               C31013 * C31114) *
              C1074 +
          (((C113 * C926 + C31024 * C931) * C114 +
            (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
            C961 * C116 + C962 * C104) *
               C31013 * C31138 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C31149 -
           ((C113 * C1291 + C31024 * C1309) * C104 +
            (C113 * C1282 + C31024 * C1292) * C116 +
            (C113 * C1293 + C31024 * C1310) * C103 +
            (C113 * C1283 + C31024 * C1294) * C115 +
            (C113 * C1295 + C31024 * C1311) * C102 +
            (C113 * C1284 + C31024 * C1296) * C114) *
               C31013 * C31114) *
              C1075 +
          (((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C31149 -
           ((C113 * C1297 + C31024 * C1312) * C104 +
            (C113 * C1285 + C31024 * C1298) * C116 +
            (C113 * C1299 + C31024 * C1313) * C103 +
            (C113 * C1286 + C31024 * C1300) * C115 +
            (C113 * C1301 + C31024 * C1314) * C102 +
            (C113 * C1287 + C31024 * C1302) * C114) *
               C31013 * C31138 +
           ((C113 * C1288 + C31024 * C1303) * C114 +
            (C113 * C1304 + C31024 * C1315) * C102 +
            (C113 * C1289 + C31024 * C1305) * C115 +
            (C113 * C1306 + C31024 * C1316) * C103 +
            (C113 * C1290 + C31024 * C1307) * C116 +
            (C113 * C1308 + C31024 * C1317) * C104) *
               C31013 * C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            ((C113 * C1284 + C31024 * C1296) * C4739 +
             (C113 * C1295 + C31024 * C1311) * C30775) *
                C4737 +
            ((C113 * C1288 + C31024 * C1303) * C4739 +
             (C113 * C1304 + C31024 * C1315) * C30775) *
                C4738) *
               C31114) *
              C30827 * C288 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C31138 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31149 -
           (((C113 * C1306 + C31024 * C1316) * C30775 +
             (C113 * C1289 + C31024 * C1305) * C4739) *
                C4738 +
            (C2185 * C30775 + C2186 * C4739) * C4737 +
            (C550 * C30775 + C549 * C4739) * C4736) *
               C31114) *
              C30827 * C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31149 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C31138 +
           ((C551 * C4739 + C552 * C30775) * C4736 +
            (C2184 * C4739 + C2183 * C30775) * C4737 +
            ((C113 * C1290 + C31024 * C1307) * C4739 +
             (C113 * C1308 + C31024 * C1317) * C30775) *
                C4738) *
               C31114) *
              C30827 * C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31149 -
           (C5690 * C4738 + (C5368 + C5369) * C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C31138 +
           (((C113 * C483 + C31024 * C496) * C4739 +
             (C113 * C497 + C31024 * C513) * C30775) *
                C4736 +
            (C5715 + C5716) * C4737 + C5723 * C4738) *
               C31114) *
              C1074 +
          (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
            (C5719 + C5720) * C4738) *
               C31138 -
           (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
               C31149 -
           ((C5721 + C5722) * C4738 + (C5718 + C5717) * C4737 +
            (C5716 + C5715) * C4736) *
               C31114) *
              C1075 +
          ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31149 -
           (((C113 * C5682 + C31024 * C5687) * C30775 +
             (C113 * C5678 + C31024 * C5683) * C4739) *
                C4738 +
            (C5720 + C5719) * C4737 + C5690 * C4736) *
               C31138 +
           (C5723 * C4736 + (C5722 + C5721) * C4737 +
            ((C113 * C5679 + C31024 * C5684) * C4739 +
             (C113 * C5685 + C31024 * C5688) * C30775) *
                C4738) *
               C31114) *
              C31111) *
         C30799) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C31083 -
           (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
            (C113 * C494 + C31024 * C512) * C102 +
            (C113 * C482 + C31024 * C495) * C114) *
               C31013 * C30932) *
              C30827 * C656 +
          ((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
            C553 * C116 + C554 * C104) *
               C31013 * C30932 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C31083) *
              C30827 * C657 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C31083 -
           (C779 * C104 + C780 * C116 + C554 * C103 + C553 * C115 +
            C545 * C102 + C546 * C114) *
               C31013 * C30932) *
              C30827 * C658 +
          ((C553 * C114 + C554 * C102 + C780 * C115 + C779 * C103 +
            (C113 * C770 + C31024 * C771) * C116 +
            (C113 * C772 + C31024 * C773) * C104) *
               C31013 * C30932 -
           (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 +
            C170 * C102 + C171 * C114) *
               C31013 * C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C114 +
             (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
             C168 * C116 + C169 * C104) *
                C31013 * C31083 -
            (C545 * C104 + C546 * C116 + C547 * C103 + C548 * C115 +
             (C113 * C494 + C31024 * C512) * C102 +
             (C113 * C482 + C31024 * C495) * C114) *
                C31013 * C30932) *
               C1074 +
           (((C113 * C926 + C31024 * C931) * C114 +
             (C113 * C932 + C31024 * C941) * C102 + C959 * C115 + C960 * C103 +
             C961 * C116 + C962 * C104) *
                C31013 * C30932 -
            (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
             (C113 * C305 + C31024 * C323) * C102 +
             (C113 * C293 + C31024 * C306) * C114) *
                C31013 * C31083) *
               C1075 +
           (((C113 * C294 + C31024 * C307) * C114 +
             (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
             C362 * C116 + C363 * C104) *
                C31013 * C31083 -
            (C1597 * C104 + C1598 * C116 + C1599 * C103 + C1600 * C115 +
             (C113 * C1301 + C31024 * C1314) * C102 +
             (C113 * C1287 + C31024 * C1302) * C114) *
                C31013 * C30932) *
               C31111) *
              C31068 +
          (((C548 * C114 + C547 * C102 + C546 * C115 + C545 * C103 +
             C553 * C116 + C554 * C104) *
                C31013 * C30932 -
            (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
             C167 * C102 + C166 * C114) *
                C31013 * C31083) *
               C1074 +
           ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
             C364 * C116 + C365 * C104) *
                C31013 * C31083 -
            (C963 * C104 + C964 * C116 + C962 * C103 + C961 * C115 +
             C960 * C102 + C959 * C114) *
                C31013 * C30932) *
               C1075 +
           ((C1600 * C114 + C1599 * C102 + C1598 * C115 + C1597 * C103 +
             (C113 * C1584 + C31024 * C1585) * C116 +
             (C113 * C1586 + C31024 * C1587) * C104) *
                C31013 * C30932 -
            (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
             C361 * C102 + C360 * C114) *
                C31013 * C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C31083 -
           (((C113 * C1301 + C31024 * C1314) * C30775 +
             (C113 * C1287 + C31024 * C1302) * C4739) *
                C4738 +
            ((C113 * C932 + C31024 * C941) * C30775 +
             (C113 * C926 + C31024 * C931) * C4739) *
                C4737 +
            ((C113 * C494 + C31024 * C512) * C30775 +
             (C113 * C482 + C31024 * C495) * C4739) *
                C4736) *
               C30932) *
              C30827 * C656 +
          (((C548 * C4739 + C547 * C30775) * C4736 +
            (C959 * C4739 + C960 * C30775) * C4737 +
            (C1600 * C4739 + C1599 * C30775) * C4738) *
               C30932 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C31083) *
              C30827 * C657 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C31083 -
           ((C1597 * C30775 + C1598 * C4739) * C4738 +
            (C962 * C30775 + C961 * C4739) * C4737 +
            (C545 * C30775 + C546 * C4739) * C4736) *
               C30932) *
              C30827 * C658 +
          (((C553 * C4739 + C554 * C30775) * C4736 +
            (C964 * C4739 + C963 * C30775) * C4737 +
            ((C113 * C1584 + C31024 * C1585) * C4739 +
             (C113 * C1586 + C31024 * C1587) * C30775) *
                C4738) *
               C30932 -
           ((C5101 + C5100) * C4738 + (C5099 + C5098) * C4737 +
            (C170 * C30775 + C171 * C4739) * C4736) *
               C31083) *
              C30827 * C31115)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C117 + C31024 * C124) * C4739 +
              (C113 * C125 + C31024 * C138) * C30775) *
                 C4736 +
             (C4883 + C4884) * C4737 + C4889 * C4738) *
                C31083 -
            (C5690 * C4738 + (C5368 + C5369) * C4737 +
             ((C113 * C494 + C31024 * C512) * C30775 +
              (C113 * C482 + C31024 * C495) * C4739) *
                 C4736) *
                C30932) *
               C1074 +
           (((C5369 + C5368) * C4736 + (C5367 + C5366) * C4737 +
             (C5719 + C5720) * C4738) *
                C30932 -
            (C5550 * C4738 + (C4886 + C4885) * C4737 +
             (C4884 + C4883) * C4736) *
                C31083) *
               C1075 +
           ((C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C31083 -
            (((C113 * C5682 + C31024 * C5687) * C30775 +
              (C113 * C5678 + C31024 * C5683) * C4739) *
                 C4738 +
             (C5720 + C5719) * C4737 + C5690 * C4736) *
                C30932) *
               C31111) *
              C31068 +
          ((((C548 * C4739 + C547 * C30775) * C4736 + (C5354 + C5355) * C4737 +
             C5985 * C4738) *
                C30932 -
            (C4881 * C4738 + (C4864 + C4863) * C4737 +
             (C167 * C30775 + C166 * C4739) * C4736) *
                C31083) *
               C1074 +
           (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
             C5826 * C4738) *
                C31083 -
            ((C5992 + C5993) * C4738 + (C5357 + C5356) * C4737 +
             (C5355 + C5354) * C4736) *
                C30932) *
               C1075 +
           ((C5985 * C4736 + (C5993 + C5992) * C4737 +
             ((C113 * C5980 + C31024 * C5981) * C4739 +
              (C113 * C5982 + C31024 * C5983) * C30775) *
                 C4738) *
                C30932 -
            ((C5833 + C5834) * C4738 + (C4868 + C4867) * C4737 +
             C4881 * C4736) *
                C31083) *
               C31111) *
              C30810)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C30827 * C108 -
          (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 + C167 * C102 +
           C166 * C114) *
              C31013 * C30845 * C30827 * C109 +
          (C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 + C172 * C116 +
           C173 * C104) *
              C31013 * C30845 * C30827 * C110 -
          (C174 * C104 + C175 * C116 + C173 * C103 + C172 * C115 + C170 * C102 +
           C171 * C114) *
              C31013 * C30845 * C30827 * C111 +
          (C172 * C114 + C173 * C102 + C175 * C115 + C174 * C103 +
           (C113 * C123 + C31024 * C136) * C116 +
           (C113 * C137 + C31024 * C144) * C104) *
              C31013 * C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C31148 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C31136 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C288 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C31136 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C31148 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C289 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C31148 -
           ((C113 * C317 + C31024 * C329) * C104 +
            (C113 * C299 + C31024 * C318) * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C31136 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C114 +
            (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
            C168 * C116 + C169 * C104) *
               C31013 * C30845 * C1074 -
           (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
            (C113 * C305 + C31024 * C323) * C102 +
            (C113 * C293 + C31024 * C306) * C114) *
               C31013 * C30845 * C1075 +
           ((C113 * C294 + C31024 * C307) * C114 +
            (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
            C362 * C116 + C363 * C104) *
               C31013 * C30845 * C31111) *
              C31145 +
          ((C359 * C114 + C358 * C102 + C357 * C115 + C356 * C103 +
            C364 * C116 + C365 * C104) *
               C31013 * C30845 * C1075 -
           (C170 * C104 + C171 * C116 + C169 * C103 + C168 * C115 +
            C167 * C102 + C166 * C114) *
               C31013 * C30845 * C1074 -
           (C366 * C104 + C367 * C116 + C363 * C103 + C362 * C115 +
            C361 * C102 + C360 * C114) *
               C31013 * C30845 * C31111) *
              C31132 +
          ((C168 * C114 + C169 * C102 + C171 * C115 + C170 * C103 +
            C172 * C116 + C173 * C104) *
               C31013 * C30845 * C1074 -
           (C669 * C104 + C670 * C116 + C365 * C103 + C364 * C115 +
            C356 * C102 + C357 * C114) *
               C31013 * C30845 * C1075 +
           (C362 * C114 + C363 * C102 + C367 * C115 + C366 * C103 +
            (C113 * C300 + C31024 * C319) * C116 +
            (C113 * C320 + C31024 * C330) * C104) *
               C31013 * C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C31024 * C124) * C114 +
           (C113 * C125 + C31024 * C138) * C102 + C166 * C115 + C167 * C103 +
           C168 * C116 + C169 * C104) *
              C31013 * C30845 * C1142 -
          (C356 * C104 + C357 * C116 + C358 * C103 + C359 * C115 +
           (C113 * C305 + C31024 * C323) * C102 +
           (C113 * C293 + C31024 * C306) * C114) *
              C31013 * C30845 * C1143 +
          ((C113 * C294 + C31024 * C307) * C114 +
           (C113 * C308 + C31024 * C324) * C102 + C360 * C115 + C361 * C103 +
           C362 * C116 + C363 * C104) *
              C31013 * C30845 * C1144 -
          ((C113 * C1154 + C31024 * C1166) * C104 +
           (C113 * C1148 + C31024 * C1155) * C116 +
           (C113 * C1156 + C31024 * C1167) * C103 +
           (C113 * C1149 + C31024 * C1157) * C115 +
           (C113 * C1158 + C31024 * C1168) * C102 +
           (C113 * C1150 + C31024 * C1159) * C114) *
              C31013 * C30845 * C1145 +
          ((C113 * C1151 + C31024 * C1160) * C114 +
           (C113 * C1161 + C31024 * C1169) * C102 +
           (C113 * C1152 + C31024 * C1162) * C115 +
           (C113 * C1163 + C31024 * C1170) * C103 +
           (C113 * C1153 + C31024 * C1164) * C116 +
           (C113 * C1165 + C31024 * C1171) * C104) *
              C31013 * C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           ((C113 * C293 + C31024 * C306) * C4739 +
            (C113 * C305 + C31024 * C323) * C30775) *
               C4737 +
           ((C113 * C294 + C31024 * C307) * C4739 +
            (C113 * C308 + C31024 * C324) * C30775) *
               C4738) *
              C30845 * C30827 * C108 -
          ((C361 * C30775 + C360 * C4739) * C4738 +
           (C358 * C30775 + C359 * C4739) * C4737 +
           (C167 * C30775 + C166 * C4739) * C4736) *
              C30845 * C30827 * C109 +
          ((C168 * C4739 + C169 * C30775) * C4736 +
           (C357 * C4739 + C356 * C30775) * C4737 +
           (C362 * C4739 + C363 * C30775) * C4738) *
              C30845 * C30827 * C110 -
          ((C366 * C30775 + C367 * C4739) * C4738 +
           (C365 * C30775 + C364 * C4739) * C4737 +
           (C170 * C30775 + C171 * C4739) * C4736) *
              C30845 * C30827 * C111 +
          ((C172 * C4739 + C173 * C30775) * C4736 +
           (C670 * C4739 + C669 * C30775) * C4737 +
           ((C113 * C300 + C31024 * C319) * C4739 +
            (C113 * C320 + C31024 * C330) * C30775) *
               C4738) *
              C30845 * C30827 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C31148 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C31136 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C288 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C31136 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C31148 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C289 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C31148 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C31136 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C31024 * C124) * C4739 +
             (C113 * C125 + C31024 * C138) * C30775) *
                C4736 +
            (C4883 + C4884) * C4737 + C4889 * C4738) *
               C30845 * C1074 -
           ((C4887 + C4888) * C4738 + (C4886 + C4885) * C4737 +
            (C4884 + C4883) * C4736) *
               C30845 * C1075 +
           (C4889 * C4736 + (C4888 + C4887) * C4737 +
            ((C113 * C1151 + C31024 * C1160) * C4739 +
             (C113 * C1161 + C31024 * C1169) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31145 +
          (((C4863 + C4864) * C4736 + (C4865 + C4866) * C4737 +
            (C4867 + C4868) * C4738) *
               C30845 * C1075 -
           (C4881 * C4738 + (C4864 + C4863) * C4737 +
            (C167 * C30775 + C166 * C4739) * C4736) *
               C30845 * C1074 -
           (((C113 * C1163 + C31024 * C1170) * C30775 +
             (C113 * C1152 + C31024 * C1162) * C4739) *
                C4738 +
            (C4868 + C4867) * C4737 + C4881 * C4736) *
               C30845 * C31111) *
              C31132 +
          (((C168 * C4739 + C169 * C30775) * C4736 + (C4869 + C4870) * C4737 +
            C4882 * C4738) *
               C30845 * C1074 -
           ((C4873 + C4874) * C4738 + (C4872 + C4871) * C4737 +
            (C4870 + C4869) * C4736) *
               C30845 * C1075 +
           (C4882 * C4736 + (C4874 + C4873) * C4737 +
            ((C113 * C1153 + C31024 * C1164) * C4739 +
             (C113 * C1165 + C31024 * C1171) * C30775) *
                C4738) *
               C30845 * C31111) *
              C31105)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C31024 * C124) * C4739 +
            (C113 * C125 + C31024 * C138) * C30775) *
               C4736 +
           (C4883 + C4884) * C4737 + C4889 * C4738) *
              C30845 * C1142 -
          (C5550 * C4738 + (C4886 + C4885) * C4737 + (C4884 + C4883) * C4736) *
              C30845 * C1143 +
          (C4889 * C4736 + (C4888 + C4887) * C4737 + C5567 * C4738) * C30845 *
              C1144 -
          ((C5565 + C5566) * C4738 + (C5564 + C5563) * C4737 + C5550 * C4736) *
              C30845 * C1145 +
          (C5567 * C4736 + (C5566 + C5565) * C4737 +
           ((C113 * C5542 + C31024 * C5545) * C4739 +
            (C113 * C5546 + C31024 * C5548) * C30775) *
               C4738) *
              C30845 * C1146) *
         C30799) /
            (p * q * std::sqrt(p + q));
}
