/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dsdd_AA_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2022_11_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29954 = ae * be;
    const double C29953 = 0 * be;
    const double C29952 = yA - yB;
    const double C29951 = ae + be;
    const double C29971 = 0 * be;
    const double C29970 = zA - zB;
    const double C29995 = std::pow(ae, 2);
    const double C29994 = zP - zQ;
    const double C29993 = yP - yQ;
    const double C29992 = p + q;
    const double C29991 = p * q;
    const double C30003 = bs[4];
    const double C30001 = xP - xQ;
    const double C30008 = bs[5];
    const double C30015 = bs[6];
    const double C30023 = bs[7];
    const double C30037 = bs[3];
    const double C30403 = bs[2];
    const double C115 = bs[0];
    const double C30761 = xA - xB;
    const double C30779 = ce + de;
    const double C30778 = ce * de;
    const double C30777 = xC - xD;
    const double C30811 = yC - yD;
    const double C30829 = zC - zD;
    const double C29956 = C29954 * C29952;
    const double C30995 = std::pow(C29952, 2);
    const double C31084 = C29952 * be;
    const double C29955 = 2 * C29951;
    const double C136 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (zP - zQ) * std::pow(ae, 2)) /
                        std::pow(C29951, 2);
    const double C137 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (yP - yQ) * (zP - zQ) * std::pow(ae, 2)) /
                        std::pow(C29951, 2);
    const double C31051 = std::pow(C29951, 2);
    const double C29972 = C29954 * C29970;
    const double C31008 = std::pow(C29970, 2);
    const double C31085 = C29970 * be;
    const double C30032 = C29994 * ae;
    const double C30188 = std::pow(C29994, 2);
    const double C29997 = C29993 * C29994;
    const double C30073 = C29993 * ae;
    const double C30128 = std::pow(C29993, 2);
    const double C29996 = 2 * C29991;
    const double C30009 = std::pow(C30001, 2);
    const double C30762 = std::pow(C30761, 2);
    const double C31050 = C30761 * be;
    const double C30783 = 2 * C30779;
    const double C30782 = std::pow(C30779, 2);
    const double C30784 = C30777 * de;
    const double C30781 = C30777 * ce;
    const double C30780 = std::pow(C30777, 2);
    const double C30812 = std::pow(C30811, 2);
    const double C30871 = C30811 * de;
    const double C30869 = C30811 * ce;
    const double C30830 = std::pow(C30829, 2);
    const double C30913 = C30829 * de;
    const double C30911 = C30829 * ce;
    const double C30996 = C30995 * C29954;
    const double C31053 = std::pow(C29955, -2);
    const double C31052 = std::pow(C29955, -1);
    const double C31009 = C31008 * C29954;
    const double C30038 = C30037 * C30032;
    const double C30041 = C30003 * C30032;
    const double C30045 = C30008 * C30032;
    const double C30052 = C30015 * C30032;
    const double C30063 = C30023 * C30032;
    const double C29999 = C29997 * C29995;
    const double C30077 = C30037 * C30073;
    const double C30080 = C30003 * C30073;
    const double C30084 = C30008 * C30073;
    const double C30091 = C30015 * C30073;
    const double C30102 = C30023 * C30073;
    const double C29998 = C29996 / C29992;
    const double C122 = (-(bs[1] * C30032 * C29996) / C29992) / C29951;
    const double C123 = (-(bs[1] * C30073 * C29996) / C29992) / C29951;
    const double C116 = -(C30001 * bs[1] * C29996) / C29992;
    const double C304 = -(C29993 * bs[1] * C29996) / C29992;
    const double C507 = -(C29994 * bs[1] * C29996) / C29992;
    const double C30763 = C30762 * C29954;
    const double C30796 = std::pow(C30783, -1);
    const double C31061 = std::pow(C30783, -2);
    const double C30797 = 2 * C30782;
    const double C31065 = C30782 * C30783;
    const double C31064 = 4 * C30782;
    const double C31054 = std::pow(C30781, 2);
    const double C30785 = C30780 * C30778;
    const double C30813 = C30812 * C30778;
    const double C31066 = std::pow(C30869, 2);
    const double C30831 = C30830 * C30778;
    const double C31068 = std::pow(C30911, 2);
    const double C30997 = C30996 / C29951;
    const double C31010 = C31009 / C29951;
    const double C30004 = C30003 * C29999;
    const double C30011 = C30008 * C29999;
    const double C30016 = C30015 * C29999;
    const double C30025 = C30023 * C29999;
    const double C30002 = std::pow(C29998, 4);
    const double C30007 = -C29998;
    const double C30014 = std::pow(C29998, 6);
    const double C138 =
        (std::pow(-C29998, 3) * bs[3] * C29999 +
         std::pow(C29998, 4) * bs[4] * C29999 * std::pow(xP - xQ, 2)) /
        std::pow(C29951, 2);
    const double C30402 = std::pow(C29998, 2);
    const double C124 =
        (C30001 * std::pow(C29998, 2) * bs[2] * C30032) / C29951;
    const double C125 =
        (C30001 * std::pow(C29998, 2) * bs[2] * C30073) / C29951;
    const double C316 =
        (C29993 * std::pow(C29998, 2) * bs[2] * C30073) / C29951 -
        (ae * bs[1] * C29996) / (C29992 * C29951);
    const double C317 =
        (C29993 * std::pow(C29998, 2) * bs[2] * C30032) / C29951;
    const double C30764 = C30763 / C29951;
    const double C31096 = 4 * C31065;
    const double C31095 = C30779 * C31064;
    const double C30786 = C30785 / C30779;
    const double C30814 = C30813 / C30779;
    const double C30832 = C30831 / C30779;
    const double C30998 = -C30997;
    const double C31011 = -C31010;
    const double C30005 = C30002 * C30004;
    const double C30042 = C30002 * C30041;
    const double C30081 = C30002 * C30080;
    const double C30117 = C30003 * C30002;
    const double C30010 = std::pow(C30007, 5);
    const double C30022 = std::pow(C30007, 7);
    const double C30036 = std::pow(C30007, 3);
    const double C334 = (ae * std::pow(C29998, 2) * bs[2] * C30032 +
                         C29993 * std::pow(C30007, 3) * bs[3] * C29999) /
                        std::pow(C29951, 2);
    const double C30017 = C30014 * C30016;
    const double C30054 = C30014 * C30052;
    const double C30093 = C30014 * C30091;
    const double C30162 = C30015 * C30014;
    const double C30404 = C30403 * C30402;
    const double C519 = (C29994 * C30402 * C30403 * C30073) / C29951;
    const double C520 = (C29994 * C30402 * C30403 * C30032) / C29951 -
                        (ae * bs[1] * C29996) / (C29992 * C29951);
    const double C30765 = -C30764;
    const double C30787 = -C30786;
    const double C30815 = -C30814;
    const double C30833 = -C30832;
    const double C30999 = std::exp(C30998);
    const double C31012 = std::exp(C31011);
    const double C139 = (2 * C30001 * C30005 +
                         C30001 * (C30005 + std::pow(-C29998, 5) * bs[5] *
                                                C29999 * std::pow(C30001, 2))) /
                        std::pow(C29951, 2);
    const double C333 = (ae * C30001 * std::pow(C30007, 3) * bs[3] * C30032 +
                         C29993 * C30001 * C30005) /
                        std::pow(C29951, 2);
    const double C30043 = C30001 * C30042;
    const double C30126 = ae * C30042;
    const double C30125 = C29993 * C30042;
    const double C30525 = C29994 * C30042;
    const double C30082 = C30001 * C30081;
    const double C30172 = ae * C30081;
    const double C30187 = C29994 * C30081;
    const double C30468 = C29993 * C30081;
    const double C30150 = C30001 * C30117;
    const double C30157 = C29993 * C30117;
    const double C30254 = C30117 * ae;
    const double C30327 = C29994 * C30117;
    const double C30410 = C30117 * C30009;
    const double C30471 = C30117 * C30128;
    const double C30527 = C30117 * C30188;
    const double C30012 = C30010 * C30011;
    const double C30046 = C30010 * C30045;
    const double C30085 = C30010 * C30084;
    const double C30119 = C30008 * C30010;
    const double C30026 = C30022 * C30025;
    const double C30065 = C30022 * C30063;
    const double C30104 = C30022 * C30102;
    const double C30039 = C30036 * C30038;
    const double C30078 = C30036 * C30077;
    const double C30152 = C30037 * C30036;
    const double C536 =
        (ae * C30001 * C30036 * C30037 * C30073 + C29994 * C30001 * C30005) /
        std::pow(C29951, 2);
    const double C537 = (ae * std::pow(C29998, 2) * bs[2] * C30073 +
                         C29994 * C30036 * C30037 * C29999) /
                        std::pow(C29951, 2);
    const double C30018 = C30017 * C30009;
    const double C30021 = C30001 * C30017;
    const double C30207 = C29993 * C30017;
    const double C30243 = C29994 * C30017;
    const double C30055 = C30054 * C30009;
    const double C30062 = C30001 * C30054;
    const double C30208 = C30054 * C30128;
    const double C30222 = ae * C30054;
    const double C30221 = C29993 * C30054;
    const double C30260 = C29994 * C30054;
    const double C30094 = C30093 * C30009;
    const double C30101 = C30001 * C30093;
    const double C30264 = ae * C30093;
    const double C30263 = C29994 * C30093;
    const double C30329 = C30093 * C30188;
    const double C30570 = C29993 * C30093;
    const double C30163 = C30162 * C30009;
    const double C30268 = C29993 * C30162;
    const double C30267 = C30162 * C30128;
    const double C30306 = C30001 * C30162;
    const double C30335 = C30162 * C30188;
    const double C117 = C30404 * C30009 - (bs[1] * C29996) / C29992;
    const double C303 = C29993 * C30001 * C30404;
    const double C305 = C30404 * C30128 - (bs[1] * C29996) / C29992;
    const double C506 = C29994 * C30001 * C30404;
    const double C508 = C30404 * C30188 - (bs[1] * C29996) / C29992;
    const double C971 = C29994 * C29993 * C30404;
    const double C30766 = std::exp(C30765);
    const double C30788 = std::exp(C30787);
    const double C30816 = std::exp(C30815);
    const double C30834 = std::exp(C30833);
    const double C29957 = C29956 * C30999;
    const double C114 = -(2 * ae * be * (yA - yB) * C30999) / (ae + be);
    const double C31116 = C30999 * C31084;
    const double C4803 =
        (C30999 * std::pow(C31084, 2)) / C31051 + C30999 / C29955;
    const double C4805 = C31053 * C30999;
    const double C13223 = C31052 * C30999;
    const double C151 = C31012 * C138;
    const double C147 = C31012 * C137;
    const double C145 = C31012 * C124;
    const double C4924 = C31012 * C334;
    const double C4922 = C31012 * C317;
    const double C29973 = C29972 * C31012;
    const double C113 = -(2 * ae * be * (zA - zB) * C31012) / (ae + be);
    const double C31117 = C31012 * C31085;
    const double C9072 =
        (C31012 * std::pow(C31085, 2)) / C31051 + C31012 / C29955;
    const double C9074 = C31053 * C31012;
    const double C18763 = C31052 * C31012;
    const double C153 = C31012 * C139;
    const double C348 = C31012 * C333;
    const double C30415 = 2 * C30150;
    const double C30478 = C29993 * C30150;
    const double C30477 = C30150 * ae;
    const double C30533 = C29994 * C30150;
    const double C30559 = 2 * C30157;
    const double C30558 = C30157 * ae;
    const double C30607 = C29994 * C30157;
    const double C30629 = 2 * C30327;
    const double C30628 = C30327 * ae;
    const double C30122 = C30001 * C30012;
    const double C30127 = C29993 * C30012;
    const double C30173 = C29994 * C30012;
    const double C140 =
        (3 * (C30005 + C30012 * C30009) +
         C30001 * (2 * C30001 * C30012 +
                   C30001 * (C30012 +
                             std::pow(C29998, 6) * bs[6] * C29999 * C30009))) /
        std::pow(C29951, 2);
    const double C332 = (ae * (std::pow(C30007, 3) * bs[3] * C30032 +
                               C30002 * C30003 * C30032 * C30009) +
                         C29993 * (C30005 + C30012 * C30009)) /
                        std::pow(C29951, 2);
    const double C336 = (C30001 * C30005 + ae * C29993 * C30043 +
                         C29993 * (ae * C30043 + C29993 * C30001 * C30012)) /
                        std::pow(C29951, 2);
    const double C535 =
        (ae * (C30036 * C30037 * C30073 + C30002 * C30003 * C30073 * C30009) +
         C29994 * (C30005 + C30012 * C30009)) /
        std::pow(C29951, 2);
    const double C539 = (C30001 * C30005 + ae * C29994 * C30082 +
                         C29994 * (ae * C30082 + C29994 * C30001 * C30012)) /
                        std::pow(C29951, 2);
    const double C987 =
        (ae * (C29994 * C30043 + C30001 * C30037 * C30036 * ae) +
         C29993 * (ae * C30082 + C29994 * C30001 * C30012)) /
        std::pow(C29951, 2);
    const double C30047 = C30046 * C30009;
    const double C30051 = C30001 * C30046;
    const double C30130 = C30046 * C30128;
    const double C30206 = ae * C30046;
    const double C30205 = C29993 * C30046;
    const double C30253 = C29994 * C30046;
    const double C30086 = C30085 * C30009;
    const double C30090 = C30001 * C30085;
    const double C30189 = C30085 * C30188;
    const double C30242 = ae * C30085;
    const double C30241 = C29994 * C30085;
    const double C1367 =
        (C30005 + ae * C29994 * C30081 +
         C29994 * (ae * C30081 + C29994 * C30012) +
         ae * (C30125 + C29994 * (C29994 * C29993 * C30046 + C30157 * ae) +
               C29994 * C30157 * ae) +
         C29993 * (ae * (C30042 + C29994 * (C29994 * C30046 + C30117 * ae) +
                         C29994 * C30117 * ae) +
                   C29993 * (C30012 + ae * C29994 * C30085 +
                             C29994 * (ae * C30085 + C29994 * C30017)))) /
        std::pow(C29951, 2);
    const double C30557 = C29993 * C30085;
    const double C30147 = C30119 * C30009;
    const double C30159 = C30001 * C30119;
    const double C30245 = C29993 * C30119;
    const double C30244 = C30119 * C30128;
    const double C30262 = C29994 * C30119;
    const double C30261 = C30119 * ae;
    const double C30328 = C30119 * C30188;
    const double C30027 = C30026 * C30009;
    const double C30223 = C29993 * C30026;
    const double C30265 = C29994 * C30026;
    const double C30288 = C30001 * C30026;
    const double C30066 = C30065 * C30009;
    const double C30225 = C30065 * C30128;
    const double C30289 = C30001 * C30065;
    const double C30105 = C30104 * C30009;
    const double C30336 = C30104 * C30188;
    const double C30344 = C30001 * C30104;
    const double C335 = (C30036 * C30037 * C29999 + ae * C29993 * C30039 +
                         C29993 * (ae * C30039 + C29993 * C30005)) /
                        std::pow(C29951, 2);
    const double C1220 = (2 * (ae * C30039 + C29993 * C30005) +
                          ae * (C30039 + C30042 * std::pow(C29993, 2)) +
                          C29993 * (C30005 + ae * C29993 * C30042 +
                                    C29993 * (ae * C30042 + C29993 * C30012))) /
                         std::pow(C29951, 2);
    const double C126 =
        (std::pow(C29998, 2) * bs[2] * C30032 + C30039 * C30009) / C29951;
    const double C129 =
        (2 * C30001 * C30039 + C30001 * (C30039 + C30042 * C30009)) / C29951;
    const double C313 = (C29993 * (C30039 + C30042 * C30009)) / C29951;
    const double C315 = (C29993 * C30001 * C30039) / C29951;
    const double C318 =
        (std::pow(C29998, 2) * bs[2] * C30032 + C30039 * C30128) / C29951;
    const double C320 = (C30001 * C30039 + C30043 * C30128) / C29951;
    const double C518 =
        (C29994 * C30001 * C30039 + C30001 * C30404 * ae) / C29951;
    const double C521 =
        (C30402 * C30403 * C30032 + C29994 * (C29994 * C30039 + C30404 * ae) +
         C29994 * C30404 * ae) /
        C29951;
    const double C976 =
        (C29994 * C29993 * C30039 + C29993 * C30404 * ae) / C29951;
    const double C1211 =
        (2 * C29993 * C30039 + C29993 * (C30039 + C30042 * C30128)) / C29951;
    const double C538 = (C30036 * C30037 * C29999 + ae * C29994 * C30078 +
                         C29994 * (ae * C30078 + C29994 * C30005)) /
                        std::pow(C29951, 2);
    const double C986 =
        (ae * (C29994 * C30039 + bs[2] * std::pow(C29998, 2) * ae) +
         C29993 * (ae * C30078 + C29994 * C30005)) /
        std::pow(C29951, 2);
    const double C127 =
        (std::pow(C29998, 2) * bs[2] * C30073 + C30078 * C30009) / C29951;
    const double C128 =
        (2 * C30001 * C30078 + C30001 * (C30078 + C30081 * C30009)) / C29951;
    const double C314 =
        (C29993 * C30001 * C30078 + C30001 * bs[2] * std::pow(C29998, 2) * ae) /
        C29951;
    const double C319 =
        (C30402 * C30403 * C30073 + C29993 * (C29993 * C30078 + C30404 * ae) +
         C29993 * C30404 * ae) /
        C29951;
    const double C515 = (C29994 * (C30078 + C30081 * C30009)) / C29951;
    const double C517 = (C29994 * C30001 * C30078) / C29951;
    const double C522 = (C30402 * C30403 * C30073 + C30078 * C30188) / C29951;
    const double C524 = (C30001 * C30078 + C30082 * C30188) / C29951;
    const double C977 = (C29994 * (C29993 * C30078 + C30404 * ae)) / C29951;
    const double C2070 =
        (2 * C29994 * C30078 + C29994 * (C30078 + C30081 * C30188)) / C29951;
    const double C1363 =
        (ae * (C30039 + C29994 * (C29994 * C30042 + C30152 * ae) +
               C29994 * C30152 * ae) +
         C29993 * (C30005 + ae * C29994 * C30081 +
                   C29994 * (ae * C30081 + C29994 * C30012))) /
        std::pow(C29951, 2);
    const double C1366 = (ae * C30078 + C29994 * C30005 +
                          ae * (C29994 * C30125 + C29993 * C30152 * ae) +
                          C29993 * (ae * (C29994 * C30042 + C30152 * ae) +
                                    C29993 * (ae * C30081 + C29994 * C30012))) /
                         std::pow(C29951, 2);
    const double C30407 = C30001 * C30152;
    const double C30411 = C30152 + C30410;
    const double C30470 = C29993 * C30152;
    const double C30469 = C30152 * ae;
    const double C30473 = C30152 + C30471;
    const double C30526 = C29994 * C30152;
    const double C30529 = C30152 + C30527;
    const double C312 = (C29993 * (C30078 + C30081 * C30009) +
                         (bs[2] * std::pow(C29998, 2) + C30152 * C30009) * ae) /
                        C29951;
    const double C516 = (C29994 * (C30039 + C30042 * C30009) +
                         (C30404 + C30152 * C30009) * ae) /
                        C29951;
    const double C1210 =
        (2 * (C29993 * C30078 + C30404 * ae) +
         C29993 * (C30078 + C29993 * (C29993 * C30081 + C30152 * ae) +
                   C29993 * C30152 * ae) +
         (C30404 + C30152 * C30128) * ae) /
        C29951;
    const double C1354 = (C29994 * (C30039 + C30042 * C30128) +
                          (C30404 + C30152 * C30128) * ae) /
                         C29951;
    const double C118 =
        2 * C30001 * C30404 + C30001 * (C30404 + C30152 * C30009);
    const double C302 = C29993 * (C30404 + C30152 * C30009);
    const double C505 = C29994 * (C30404 + C30152 * C30009);
    const double C1202 =
        2 * C29993 * C30404 + C29993 * (C30404 + C30152 * C30128);
    const double C1339 = C29994 * (C30404 + C30152 * C30128);
    const double C2062 =
        2 * C29994 * C30404 + C29994 * (C30404 + C30152 * C30188);
    const double C551 = C31012 * C536;
    const double C30019 = C30012 + C30018;
    const double C30024 = 2 * C30021;
    const double C30135 = C29993 * C30021;
    const double C30177 = C29994 * C30021;
    const double C30056 = C30046 + C30055;
    const double C30064 = 2 * C30062;
    const double C30136 = C30062 * C30128;
    const double C30287 = ae * C30062;
    const double C30286 = C29993 * C30062;
    const double C30302 = C29994 * C30062;
    const double C30212 = C30046 + C30208;
    const double C30229 = 2 * C30221;
    const double C30227 = ae * C30221;
    const double C30315 = C29994 * C30221;
    const double C30095 = C30085 + C30094;
    const double C30103 = 2 * C30101;
    const double C30193 = C30101 * C30188;
    const double C30304 = ae * C30101;
    const double C30341 = C29994 * C30101;
    const double C30590 = C29993 * C30101;
    const double C30271 = ae * C30263;
    const double C30361 = 2 * C30263;
    const double C30331 = C30085 + C30329;
    const double C30164 = C30119 + C30163;
    const double C30334 = C30268 * C30188;
    const double C30273 = C30119 + C30267;
    const double C30309 = C30306 * C30128;
    const double C30343 = C29993 * C30306;
    const double C30368 = C30306 * C30188;
    const double C30338 = C30119 + C30335;
    const double C31086 = C30766 * C31050;
    const double C103 =
        (C30766 * std::pow(C31050, 2)) / C31051 + C30766 / C29955;
    const double C105 = C31053 * C30766;
    const double C13225 = C31052 * C30766;
    const double C30790 = C30788 * C30781;
    const double C30789 = C30788 / C30783;
    const double C30799 = C30796 * C30788;
    const double C31057 = C30788 * C30784;
    const double C31093 = C31061 * C30788;
    const double C31087 = C30788 * C31054;
    const double C30870 = C30816 / C30783;
    const double C30872 = C30816 * C30869;
    const double C30879 = C30796 * C30816;
    const double C31072 = C30816 * C30871;
    const double C31099 = C31061 * C30816;
    const double C31097 = C30816 * C31066;
    const double C30912 = C30834 / C30783;
    const double C30914 = C30834 * C30911;
    const double C30921 = C30796 * C30834;
    const double C31078 = C30834 * C30913;
    const double C31102 = C31061 * C30834;
    const double C31100 = C30834 * C31068;
    const double C29958 = 2 * C29957;
    const double C4804 = (-2 * C31052 * C31116) / C29951;
    const double C13222 = -C31116 / C29951;
    const double C29974 = 2 * C29973;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C349 = C113 * C303;
    const double C552 = C113 * C506;
    const double C4925 = C113 * C305;
    const double C4923 = C113 * C316;
    const double C4921 = C113 * C304;
    const double C5397 = C113 * C971;
    const double C9073 = (-2 * C31052 * C31117) / C29951;
    const double C18762 = -C31117 / C29951;
    const double C18774 = C18763 * C536;
    const double C30129 = C30126 + C30127;
    const double C30174 = C30172 + C30173;
    const double C159 = C31012 * C140;
    const double C344 = C31012 * C332;
    const double C354 = C31012 * C336;
    const double C547 = C31012 * C535;
    const double C18776 = C18763 * C535;
    const double C557 = C31012 * C539;
    const double C19156 = C18763 * C539;
    const double C995 = C31012 * C987;
    const double C18962 = C18763 * C987;
    const double C30048 = C30042 + C30047;
    const double C30053 = 2 * C30051;
    const double C30134 = ae * C30051;
    const double C30133 = C29993 * C30051;
    const double C1219 = (2 * (ae * C30043 + C29993 * C30122) +
                          ae * (C30043 + C30051 * std::pow(C29993, 2)) +
                          C29993 * (C30122 + ae * C29993 * C30051 +
                                    C29993 * (ae * C30051 + C29993 * C30021))) /
                         std::pow(C29951, 2);
    const double C30532 = C29994 * C30051;
    const double C1209 =
        (2 * C29993 * C30043 + C29993 * (C30043 + C30051 * C30128)) / C29951;
    const double C30131 = C30042 + C30130;
    const double C30210 = C30206 + C30207;
    const double C30211 = 2 * C30205;
    const double C30209 = ae * C30205;
    const double C30606 = C29994 * C30205;
    const double C30256 = C30253 + C30254;
    const double C30087 = C30081 + C30086;
    const double C30092 = 2 * C30090;
    const double C30176 = ae * C30090;
    const double C30192 = C29994 * C30090;
    const double C1362 =
        (ae * (C30043 + C29994 * (C29994 * C30051 + C30150 * ae) +
               C29994 * C30150 * ae) +
         C29993 * (C30122 + ae * C29994 * C30090 +
                   C29994 * (ae * C30090 + C29994 * C30021))) /
        std::pow(C29951, 2);
    const double C30476 = C29993 * C30090;
    const double C2068 =
        (2 * C29994 * C30082 + C29994 * (C30082 + C30090 * C30188)) / C29951;
    const double C30190 = C30081 + C30189;
    const double C30247 = C30242 + C30243;
    const double C30246 = ae * C30241;
    const double C30356 = 2 * C30241;
    const double C5724 = C31012 * C1367;
    const double C25650 = C18763 * C1367;
    const double C30561 = C30557 + C30254;
    const double C30148 = C30117 + C30147;
    const double C30160 = C29993 * C30159;
    const double C30168 = 2 * C30159;
    const double C30303 = C30159 * ae;
    const double C30367 = C29994 * C30159;
    const double C30479 = C30159 * C30128;
    const double C30534 = C30159 * C30188;
    const double C30266 = 2 * C30245;
    const double C30316 = C30245 * ae;
    const double C30333 = C29994 * C30245;
    const double C30608 = C30245 * C30188;
    const double C30248 = C30117 + C30244;
    const double C30270 = C30262 * ae;
    const double C30377 = 2 * C30262;
    const double C30269 = C30260 + C30261;
    const double C30574 = C30570 + C30261;
    const double C30330 = C30117 + C30328;
    const double C30028 = C30017 + C30027;
    const double C30228 = C30222 + C30223;
    const double C30272 = C30264 + C30265;
    const double C30291 = C29993 * C30288;
    const double C30305 = C29994 * C30288;
    const double C30067 = C30054 + C30066;
    const double C30230 = C30054 + C30225;
    const double C30293 = C30289 * C30128;
    const double C30106 = C30093 + C30105;
    const double C30339 = C30093 + C30336;
    const double C30369 = C30344 * C30188;
    const double C4928 = C31012 * C335;
    const double C4930 = C31012 * C1220;
    const double C149 = C31012 * C126;
    const double C155 = C31012 * C129;
    const double C346 = C31012 * C313;
    const double C350 = C31012 * C315;
    const double C4926 = C31012 * C318;
    const double C352 = C31012 * C320;
    const double C553 = C31012 * C518;
    const double C18770 = C18763 * C518;
    const double C5398 = C31012 * C976;
    const double C24604 = C18763 * C976;
    const double C4932 = C31012 * C1211;
    const double C5396 = C31012 * C986;
    const double C24608 = C18763 * C986;
    const double C150 = C113 * C127;
    const double C152 = C113 * C128;
    const double C347 = C113 * C314;
    const double C4927 = C113 * C319;
    const double C546 = C113 * C515;
    const double C550 = C113 * C517;
    const double C556 = C113 * C524;
    const double C5395 = C113 * C977;
    const double C5720 = C31012 * C1363;
    const double C25226 = C18763 * C1363;
    const double C5392 = C31012 * C1366;
    const double C24610 = C18763 * C1366;
    const double C321 =
        (C30001 * C30078 + C29993 * (C29993 * C30082 + C30407 * ae) +
         C29993 * C30407 * ae) /
        C29951;
    const double C523 =
        (C30001 * C30039 + C29994 * (C29994 * C30043 + C30407 * ae) +
         C29994 * C30407 * ae) /
        C29951;
    const double C978 =
        (C29994 * C29993 * C30043 + C29993 * C30407 * ae) / C29951;
    const double C979 = (C29994 * (C29993 * C30082 + C30407 * ae)) / C29951;
    const double C1208 =
        (2 * (C29993 * C30082 + C30407 * ae) +
         C29993 * (C30082 + C29993 * (C29993 * C30090 + C30150 * ae) +
                   C29993 * C30150 * ae) +
         (C30407 + C30150 * C30128) * ae) /
        C29951;
    const double C1352 = (C29994 * (C30043 + C30051 * C30128) +
                          (C30407 + C30150 * C30128) * ae) /
                         C29951;
    const double C2069 =
        (2 * (C29994 * C30043 + C30407 * ae) +
         C29994 * (C30043 + C29994 * (C29994 * C30051 + C30477) +
                   C29994 * C30150 * ae) +
         (C30407 + C30150 * C30188) * ae) /
        C29951;
    const double C306 = C30001 * C30404 + C30407 * C30128;
    const double C509 = C30001 * C30404 + C30407 * C30188;
    const double C972 = C29994 * C29993 * C30407;
    const double C1201 =
        2 * C29993 * C30407 + C29993 * (C30407 + C30150 * C30128);
    const double C1335 = C29993 * C30407 + C30478 * C30188;
    const double C1338 = C29994 * (C30407 + C30150 * C30128);
    const double C2061 =
        2 * C29994 * C30407 + C29994 * (C30407 + C30150 * C30188);
    const double C119 = 3 * (C30404 + C30152 * C30009) +
                        C30001 * (2 * C30407 + C30001 * C30411);
    const double C307 = C30404 + C30152 * C30009 + C30411 * C30128;
    const double C308 = C29993 * (2 * C30407 + C30001 * C30411);
    const double C510 = C30404 + C30152 * C30009 + C30411 * C30188;
    const double C511 = C29994 * (2 * C30407 + C30001 * C30411);
    const double C973 = C29994 * C29993 * C30411;
    const double C1348 =
        (C29993 * C30039 + C29994 * (C29994 * C30125 + C30470 * ae) +
         C29994 * C30470 * ae) /
        C29951;
    const double C2473 =
        (2 * (C29994 * C30125 + C30470 * ae) +
         C29994 * (C30125 + C29994 * (C29994 * C30205 + C30157 * ae) +
                   C29994 * C30157 * ae) +
         (C30470 + C30157 * C30188) * ae) /
        C29951;
    const double C1336 = C29993 * C30404 + C30470 * C30188;
    const double C2470 =
        2 * C29994 * C30470 + C29994 * (C30470 + C30157 * C30188);
    const double C30472 = C30468 + C30469;
    const double C30528 = C30525 + C30469;
    const double C2071 =
        (2 * (C29994 * C30039 + C30404 * ae) +
         C29994 * (C30039 + C29994 * (C29994 * C30042 + C30469) +
                   C29994 * C30152 * ae) +
         (C30404 + C30152 * C30188) * ae) /
        C29951;
    const double C1203 = 3 * (C30404 + C30152 * C30128) +
                         C29993 * (2 * C30470 + C29993 * C30473);
    const double C1340 = C30404 + C30152 * C30128 + C30473 * C30188;
    const double C1758 = C29994 * (2 * C30470 + C29993 * C30473);
    const double C2063 = 3 * (C30404 + C30152 * C30188) +
                         C29994 * (2 * C30526 + C29994 * C30529);
    const double C343 = C113 * C312;
    const double C549 = C31012 * C516;
    const double C18780 = C18763 * C516;
    const double C4929 = C113 * C1210;
    const double C5394 = C31012 * C1354;
    const double C24614 = C18763 * C1354;
    const double C154 = C113 * C118;
    const double C345 = C113 * C302;
    const double C548 = C113 * C505;
    const double C4931 = C113 * C1202;
    const double C5393 = C113 * C1339;
    const double C141 =
        (4 * (2 * C30001 * C30012 + C30001 * C30019) +
         C30001 * (3 * C30019 +
                   C30001 * (2 * C30001 * C30017 +
                             C30001 * (C30017 + std::pow(C30007, 7) * bs[7] *
                                                    C29999 * C30009)))) /
        std::pow(C29951, 2);
    const double C30057 = C30001 * C30056;
    const double C30061 = 3 * C30056;
    const double C30141 = ae * C30056;
    const double C30140 = C29993 * C30056;
    const double C30539 = C29994 * C30056;
    const double C30138 = C30051 + C30136;
    const double C30292 = 2 * C30286;
    const double C30290 = ae * C30286;
    const double C30645 = C29994 * C30286;
    const double C30215 = C29993 * C30212;
    const double C30224 = 3 * C30212;
    const double C30220 = ae * C30212;
    const double C30613 = C29994 * C30212;
    const double C30231 = C30017 + C30227;
    const double C30096 = C30001 * C30095;
    const double C30100 = 3 * C30095;
    const double C30180 = ae * C30095;
    const double C30196 = C29994 * C30095;
    const double C30484 = C29993 * C30095;
    const double C30194 = C30090 + C30193;
    const double C30345 = ae * C30341;
    const double C30373 = 2 * C30341;
    const double C30275 = C30017 + C30271;
    const double C30351 = ae * C30331;
    const double C30357 = C29994 * C30331;
    const double C30360 = 3 * C30331;
    const double C30165 = C29993 * C30164;
    const double C30169 = C30001 * C30164;
    const double C30487 = C30164 * C30128;
    const double C30541 = C30164 * C30188;
    const double C30337 = C30245 + C30334;
    const double C30277 = C29993 * C30273;
    const double C30615 = C30273 * C30188;
    const double C30312 = C30159 + C30309;
    const double C30647 = C30343 * C30188;
    const double C30370 = C30159 + C30368;
    const double C30378 = C29994 * C30338;
    const double C104 = (-2 * C31052 * C31086) / C29951;
    const double C13224 = -C31086 / C29951;
    const double C30791 = C30790 * C30784;
    const double C30798 = C30790 / C30797;
    const double C31058 = C30796 * C30790;
    const double C31056 = C30790 / C30779;
    const double C299 = (C30788 * std::pow(C30784, 2)) / C30782 + C30789;
    const double C30800 = C30799 * C30784;
    const double C31062 = C30781 * C30799;
    const double C31060 = 2 * C30799;
    const double C31103 = C30799 / C31064;
    const double C112 = C30799 / C31096;
    const double C2951 = C30799 / C30783;
    const double C31089 = C31057 / C30779;
    const double C300 = (-2 * C30796 * C31057) / C30779;
    const double C31118 = C31087 / C30782;
    const double C1126 = (C30816 * std::pow(C30871, 2)) / C30782 + C30870;
    const double C30873 = C30872 * C30871;
    const double C30878 = C30872 / C30797;
    const double C31070 = C30872 / C30779;
    const double C31067 = C30796 * C30872;
    const double C30880 = C30879 * C30871;
    const double C31076 = C30869 * C30879;
    const double C31075 = 2 * C30879;
    const double C31109 = C30879 / C31064;
    const double C1198 = C30879 / C31096;
    const double C2948 = C30879 / C30783;
    const double C31105 = C31072 / C30779;
    const double C1127 = (-2 * C30796 * C31072) / C30779;
    const double C31123 = C31097 / C30782;
    const double C1880 = (C30834 * std::pow(C30913, 2)) / C30782 + C30912;
    const double C30915 = C30914 * C30913;
    const double C30920 = C30914 / C30797;
    const double C31071 = C30914 / C30779;
    const double C31069 = C30796 * C30914;
    const double C30922 = C30921 * C30913;
    const double C31082 = C30911 * C30921;
    const double C31081 = 2 * C30921;
    const double C31115 = C30921 / C31064;
    const double C2059 = C30921 / C31096;
    const double C3850 = C30921 / C30783;
    const double C31111 = C31078 / C30779;
    const double C1881 = (-2 * C30796 * C31078) / C30779;
    const double C31125 = C31100 / C30782;
    const double C4808 =
        ((-C29953 / C29951) / C29955 -
         ((C30999 - (C29952 * C29958) / C29951) * be) / C29951) /
            C29955 -
        ((C29952 * ((-C29958 / C29951) / C29955 - (0 * be) / C29951) + C13223) *
         be) /
            C29951;
    const double C4809 =
        ((-C29958 / C29951) / C29955 - (0 * be) / C29951) / C29955 -
        (0 * be) / C29951;
    const double C13226 = (-C29953 / C29951) / C29955 -
                          ((C30999 - (C29952 * C29958) / C29951) * be) / C29951;
    const double C13227 = (-C29958 / C29951) / C29955 - (0 * be) / C29951;
    const double C4807 =
        ((-(0 * be) / C29951) / C29955 -
         ((0 - (C29952 * C29953) / C29951) * be) / C29951) /
            C29955 -
        ((C29952 * ((-C29953 / C29951) / C29955 -
                    ((C30999 - (C29952 * C29958) / C29951) * be) / C29951) +
          C13222) *
         be) /
            C29951 +
        (-C29958 / C29951) / C29955 - (0 * be) / C29951;
    const double C9076 =
        ((-C29971 / C29951) / C29955 -
         ((C31012 - (C29970 * C29974) / C29951) * be) / C29951) /
            C29955 -
        ((C29970 * ((-C29974 / C29951) / C29955 - (0 * be) / C29951) + C18763) *
         be) /
            C29951;
    const double C9077 =
        ((-C29974 / C29951) / C29955 - (0 * be) / C29951) / C29955 -
        (0 * be) / C29951;
    const double C18764 = (-C29971 / C29951) / C29955 -
                          ((C31012 - (C29970 * C29974) / C29951) * be) / C29951;
    const double C18765 = (-C29974 / C29951) / C29955 - (0 * be) / C29951;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C4934 = C4923 + C4924;
    const double C4933 = C4921 + C4922;
    const double C18794 = C18762 * C140;
    const double C18788 = C18762 * C139;
    const double C18784 = C18762 * C129;
    const double C18782 = C18762 * C126;
    const double C18778 = C18762 * C138;
    const double C18772 = C18762 * C137;
    const double C18768 = C18762 * C124;
    const double C18982 = C18762 * C332;
    const double C18978 = C18762 * C313;
    const double C18974 = C18762 * C336;
    const double C18970 = C18762 * C320;
    const double C18968 = C18762 * C315;
    const double C18964 = C18762 * C333;
    const double C19176 = C18762 * C535;
    const double C19172 = C18762 * C516;
    const double C19168 = C18762 * C539;
    const double C19162 = C18762 * C518;
    const double C19158 = C18762 * C536;
    const double C19686 = C18762 * C987;
    const double C24616 = C18762 * C318;
    const double C24612 = C18762 * C335;
    const double C24606 = C18762 * C334;
    const double C24602 = C18762 * C317;
    const double C25232 = C18762 * C976;
    const double C25228 = C18762 * C986;
    const double C25470 = C18762 * C1220;
    const double C25466 = C18762 * C1211;
    const double C25654 = C18762 * C1367;
    const double C25648 = C18762 * C1366;
    const double C25644 = C18762 * C1354;
    const double C25640 = C18762 * C1363;
    const double C9075 =
        ((-(0 * be) / C29951) / C29955 -
         ((0 - (C29970 * C29971) / C29951) * be) / C29951) /
            C29955 -
        ((C29970 * ((-C29971 / C29951) / C29955 -
                    ((C31012 - (C29970 * C29974) / C29951) * be) / C29951) +
          C18762) *
         be) /
            C29951 +
        (-C29974 / C29951) / C29955 - (0 * be) / C29951;
    const double C2080 =
        (2 * (ae * C30078 + C29994 * C30005) +
         ae * (C30078 + C30081 * std::pow(C29994, 2)) +
         C29994 * (C30005 + ae * C29994 * C30081 + C29994 * C30174)) /
        std::pow(C29951, 2);
    const double C337 = (C30005 + C30012 * C30009 + ae * C29993 * C30048 +
                         C29993 * (ae * C30048 + C29993 * C30019)) /
                        std::pow(C29951, 2);
    const double C338 = (ae * (2 * C30043 + C30001 * C30048) +
                         C29993 * (2 * C30001 * C30012 + C30001 * C30019)) /
                        std::pow(C29951, 2);
    const double C130 = (3 * (C30039 + C30042 * C30009) +
                         C30001 * (2 * C30043 + C30001 * C30048)) /
                        C29951;
    const double C322 = (C30039 + C30042 * C30009 + C30048 * C30128) / C29951;
    const double C324 = (C29993 * (2 * C30043 + C30001 * C30048)) / C29951;
    const double C525 =
        (C30039 + C30042 * C30009 + C29994 * (C29994 * C30048 + C30411 * ae) +
         C29994 * C30411 * ae) /
        C29951;
    const double C527 = (C29994 * (2 * C30043 + C30001 * C30048) +
                         (2 * C30407 + C30001 * C30411) * ae) /
                        C29951;
    const double C980 =
        (C29994 * C29993 * C30048 + C29993 * C30411 * ae) / C29951;
    const double C1207 =
        (2 * C29993 * C30048 + C29993 * (C30048 + C30056 * C30128)) / C29951;
    const double C30137 = C30134 + C30135;
    const double C1365 = (ae * C30082 + C29994 * C30122 +
                          ae * (C29994 * C30133 + C29993 * C30150 * ae) +
                          C29993 * (ae * (C29994 * C30051 + C30150 * ae) +
                                    C29993 * (ae * C30090 + C29994 * C30021))) /
                         std::pow(C29951, 2);
    const double C1346 =
        (C29993 * C30043 + C29994 * (C29994 * C30133 + C30478 * ae) +
         C29994 * C30478 * ae) /
        C29951;
    const double C1484 = C31012 * C1219;
    const double C20212 = C18762 * C1219;
    const double C30535 = C30532 + C30477;
    const double C1486 = C31012 * C1209;
    const double C20216 = C18762 * C1209;
    const double C1221 =
        (3 * (C30005 + ae * C30125 + C29993 * C30129) +
         ae * (2 * C30125 + C29993 * C30131) +
         C29993 * (2 * C30129 + ae * C30131 +
                   C29993 * (C30012 + ae * C29993 * C30046 +
                             C29993 * (ae * C30046 + C29993 * C30017)))) /
        std::pow(C29951, 2);
    const double C1767 =
        (2 * (ae * (C29994 * C30042 + C30152 * ae) + C29993 * C30174) +
         ae * (C29994 * C30131 + (C30152 + C30117 * C30128) * ae) +
         C29993 * (C30174 + ae * (C29994 * C29993 * C30046 + C30157 * ae) +
                   C29993 * (ae * (C29994 * C30046 + C30117 * ae) +
                             C29993 * (ae * C30085 + C29994 * C30017)))) /
        std::pow(C29951, 2);
    const double C1212 = (3 * (C30039 + C30042 * C30128) +
                          C29993 * (2 * C30125 + C29993 * C30131)) /
                         C29951;
    const double C1355 =
        (C30039 + C30042 * C30128 + C29994 * (C29994 * C30131 + C30473 * ae) +
         C29994 * C30473 * ae) /
        C29951;
    const double C1761 = (C29994 * (2 * C30125 + C29993 * C30131) +
                          (2 * C30470 + C29993 * C30473) * ae) /
                         C29951;
    const double C30214 = C29993 * C30210;
    const double C30219 = 2 * C30210;
    const double C30213 = C30012 + C30209;
    const double C30609 = C30606 + C30558;
    const double C30257 = ae * C30256;
    const double C30627 = C29994 * C30256;
    const double C30635 = 2 * C30256;
    const double C540 = (C30005 + C30012 * C30009 + ae * C29994 * C30087 +
                         C29994 * (ae * C30087 + C29994 * C30019)) /
                        std::pow(C29951, 2);
    const double C541 = (ae * (2 * C30082 + C30001 * C30087) +
                         C29994 * (2 * C30001 * C30012 + C30001 * C30019)) /
                        std::pow(C29951, 2);
    const double C988 =
        (ae * (C29994 * C30048 +
               (C30037 * C30036 + C30003 * C30002 * C30009) * ae) +
         C29993 * (ae * C30087 + C29994 * C30019)) /
        std::pow(C29951, 2);
    const double C131 = (3 * (C30078 + C30081 * C30009) +
                         C30001 * (2 * C30082 + C30001 * C30087)) /
                        C29951;
    const double C323 =
        (C30078 + C30081 * C30009 + C29993 * (C29993 * C30087 + C30411 * ae) +
         C29993 * C30411 * ae) /
        C29951;
    const double C325 = (C29993 * (2 * C30082 + C30001 * C30087) +
                         (2 * C30407 + C30001 * C30411) * ae) /
                        C29951;
    const double C526 = (C30078 + C30081 * C30009 + C30087 * C30188) / C29951;
    const double C528 = (C29994 * (2 * C30082 + C30001 * C30087)) / C29951;
    const double C981 = (C29994 * (C29993 * C30087 + C30411 * ae)) / C29951;
    const double C2066 =
        (2 * C29994 * C30087 + C29994 * (C30087 + C30095 * C30188)) / C29951;
    const double C30178 = C30176 + C30177;
    const double C2240 = C31012 * C1362;
    const double C19688 = C18763 * C1362;
    const double C21128 = C18762 * C1362;
    const double C30480 = C30476 + C30477;
    const double C2361 = C113 * C2068;
    const double C2081 =
        (3 * (C30005 + ae * C30187 + C29994 * C30174) +
         ae * (2 * C30187 + C29994 * C30190) +
         C29994 * (2 * C30174 + ae * C30190 +
                   C29994 * (C30012 + ae * C29994 * C30085 +
                             C29994 * (ae * C30085 + C29994 * C30017)))) /
        std::pow(C29951, 2);
    const double C2479 =
        (ae * (2 * (C29994 * C30042 + C30152 * ae) +
               C29994 * (C30042 + C29994 * (C29994 * C30046 + C30117 * ae) +
                         C29994 * C30117 * ae) +
               (C30152 + C30117 * C30188) * ae) +
         C29993 * (2 * C30174 + ae * C30190 +
                   C29994 * (C30012 + ae * C29994 * C30085 +
                             C29994 * (ae * C30085 + C29994 * C30017)))) /
        std::pow(C29951, 2);
    const double C2073 = (3 * (C30078 + C30081 * C30188) +
                          C29994 * (2 * C30187 + C29994 * C30190)) /
                         C29951;
    const double C30250 = C29994 * C30247;
    const double C30255 = C29993 * C30247;
    const double C30350 = 2 * C30247;
    const double C30249 = C30012 + C30246;
    const double C30563 = C29993 * C30561;
    const double C30569 = 2 * C30561;
    const double C30416 = C30001 * C30148;
    const double C30423 = 3 * C30148;
    const double C30486 = C29993 * C30148;
    const double C30485 = C30148 * ae;
    const double C30540 = C29994 * C30148;
    const double C1206 =
        (2 * (C29993 * C30087 + C30411 * ae) +
         C29993 * (C30087 + C29993 * (C29993 * C30095 + C30148 * ae) +
                   C29993 * C30148 * ae) +
         (C30411 + C30148 * C30128) * ae) /
        C29951;
    const double C1350 = (C29994 * (C30048 + C30056 * C30128) +
                          (C30411 + C30148 * C30128) * ae) /
                         C29951;
    const double C1200 =
        2 * C29993 * C30411 + C29993 * (C30411 + C30148 * C30128);
    const double C1337 = C29994 * (C30411 + C30148 * C30128);
    const double C2060 =
        2 * C29994 * C30411 + C29994 * (C30411 + C30148 * C30188);
    const double C1368 =
        (C30122 + ae * C29994 * C30090 +
         C29994 * (ae * C30090 + C29994 * C30021) +
         ae * (C30133 + C29994 * (C29994 * C29993 * C30062 + C30160 * ae) +
               C29994 * C30160 * ae) +
         C29993 *
             (ae * (C30051 + C29994 * (C29994 * C30062 + C30159 * ae) +
                    C29994 * C30159 * ae) +
              C29993 * (C30021 + ae * C29994 * C30101 +
                        C29994 * (ae * C30101 + C29994 * C30001 * C30026)))) /
        std::pow(C29951, 2);
    const double C30592 = 2 * C30160;
    const double C30591 = C30160 * ae;
    const double C30646 = C29994 * C30160;
    const double C2475 =
        (2 * (C29994 * C30133 + C30478 * ae) +
         C29994 * (C30133 + C29994 * (C29994 * C30286 + C30160 * ae) +
                   C29994 * C30160 * ae) +
         (C30478 + C30160 * C30188) * ae) /
        C29951;
    const double C2471 =
        2 * C29994 * C30478 + C29994 * (C30478 + C30160 * C30188);
    const double C30307 = C30302 + C30303;
    const double C30594 = C30590 + C30303;
    const double C30654 = 2 * C30367;
    const double C30653 = C30367 * ae;
    const double C30481 = C30150 + C30479;
    const double C30536 = C30150 + C30534;
    const double C30319 = C30315 + C30316;
    const double C30663 = 2 * C30333;
    const double C30662 = C30333 * ae;
    const double C30610 = C30157 + C30608;
    const double C30560 = C29993 * C30248;
    const double C30572 = 3 * C30248;
    const double C30571 = C30248 * ae;
    const double C30614 = C29994 * C30248;
    const double C6394 =
        2 * C29994 * C30473 + C29994 * (C30473 + C30248 * C30188);
    const double C30274 = C29994 * C30269;
    const double C30317 = ae * C30269;
    const double C30576 = C29993 * C30574;
    const double C30669 = C30574 * C30188;
    const double C30630 = C29994 * C30330;
    const double C30638 = 3 * C30330;
    const double C30637 = C30330 * ae;
    const double C30029 = C30001 * C30028;
    const double C30142 = C29993 * C30028;
    const double C30181 = C29994 * C30028;
    const double C1218 = (2 * (ae * C30048 + C29993 * C30019) +
                          ae * (C30048 + C30056 * std::pow(C29993, 2)) +
                          C29993 * (C30019 + ae * C29993 * C30056 +
                                    C29993 * (ae * C30056 + C29993 * C30028))) /
                         std::pow(C29951, 2);
    const double C1361 =
        (ae * (C30048 + C29994 * (C29994 * C30056 + C30148 * ae) +
               C29994 * C30148 * ae) +
         C29993 * (C30019 + ae * C29994 * C30095 +
                   C29994 * (ae * C30095 + C29994 * C30028))) /
        std::pow(C29951, 2);
    const double C30232 = C29993 * C30228;
    const double C30276 = C29994 * C30272;
    const double C30318 = C29993 * C30272;
    const double C30295 = C30287 + C30291;
    const double C30308 = C30304 + C30305;
    const double C30068 = C30001 * C30067;
    const double C30143 = C30067 * C30128;
    const double C30233 = C29993 * C30230;
    const double C30296 = C30062 + C30293;
    const double C30107 = C30001 * C30106;
    const double C30197 = C30106 * C30188;
    const double C30362 = C29994 * C30339;
    const double C30371 = C30101 + C30369;
    const double C166 = C148 + C149;
    const double C370 = C349 + C350;
    const double C4935 = C4925 + C4926;
    const double C573 = C552 + C553;
    const double C5402 = C5397 + C5398;
    const double C167 = C150 + C151;
    const double C168 = C152 + C153;
    const double C369 = C347 + C348;
    const double C4936 = C4927 + C4928;
    const double C570 = C546 + C547;
    const double C572 = C550 + C551;
    const double C575 = C556 + C557;
    const double C5401 = C5395 + C5396;
    const double C353 = C113 * C321;
    const double C555 = C31012 * C523;
    const double C19164 = C18762 * C523;
    const double C19160 = C18763 * C523;
    const double C993 = C31012 * C978;
    const double C18966 = C18763 * C978;
    const double C19682 = C18762 * C978;
    const double C994 = C113 * C979;
    const double C1483 = C113 * C1208;
    const double C1652 = C31012 * C1352;
    const double C18972 = C18763 * C1352;
    const double C20422 = C18762 * C1352;
    const double C2364 = C31012 * C2069;
    const double C19166 = C18763 * C2069;
    const double C21274 = C18762 * C2069;
    const double C351 = C113 * C306;
    const double C554 = C113 * C509;
    const double C992 = C113 * C972;
    const double C1485 = C113 * C1201;
    const double C2241 = C113 * C1335;
    const double C1651 = C113 * C1338;
    const double C2363 = C113 * C2061;
    const double C156 = C113 * C119;
    const double C355 = C113 * C307;
    const double C359 = C113 * C308;
    const double C558 = C113 * C510;
    const double C562 = C113 * C511;
    const double C996 = C113 * C973;
    const double C5718 = C31012 * C1348;
    const double C25230 = C18763 * C1348;
    const double C25636 = C18762 * C1348;
    const double C6774 = C31012 * C2473;
    const double C25638 = C18763 * C2473;
    const double C26972 = C18762 * C2473;
    const double C5717 = C113 * C1336;
    const double C6773 = C113 * C2470;
    const double C1213 =
        (3 * (C30078 + C29993 * C30472 + C30470 * ae) +
         C29993 * (2 * C30472 +
                   C29993 * (C30081 + C29993 * (C29993 * C30085 + C30254) +
                             C30157 * ae) +
                   C30473 * ae) +
         (2 * C30470 + C29993 * C30473) * ae) /
        C29951;
    const double C1347 =
        (C29993 * C30078 + C30404 * ae + C30472 * C30188) / C29951;
    const double C1353 =
        (C29994 * (C30078 + C29993 * C30472 + C30470 * ae)) / C29951;
    const double C1356 =
        (C30078 + C29993 * C30472 + C30470 * ae +
         (C30081 + C29993 * (C29993 * C30085 + C30254) + C30157 * ae) *
             C30188) /
        C29951;
    const double C1762 =
        (C29994 * (2 * C30472 +
                   C29993 * (C30081 + C29993 * (C29993 * C30085 + C30254) +
                             C30157 * ae) +
                   C30473 * ae)) /
        C29951;
    const double C2474 =
        (2 * C29994 * C30472 +
         C29994 * (C30472 + (C29993 * C30085 + C30254) * C30188)) /
        C29951;
    const double C6400 =
        (3 * (C30472 + C30561 * C30188) +
         C29994 * (2 * C29994 * C30561 + C29994 * (C30561 + C30574 * C30188))) /
        C29951;
    const double C2072 =
        (3 * (C30039 + C29994 * C30528 + C30526 * ae) +
         C29994 *
             (2 * C30528 + C29994 * (C30042 + C29994 * C30256 + C30327 * ae) +
              C30529 * ae) +
         (2 * C30526 + C29994 * C30529) * ae) /
        C29951;
    const double C5583 = C113 * C1203;
    const double C5721 = C113 * C1340;
    const double C5725 = C113 * C1758;
    const double C367 = C343 + C344;
    const double C4937 = C4929 + C4930;
    const double C169 = C154 + C155;
    const double C368 = C345 + C346;
    const double C571 = C548 + C549;
    const double C4938 = C4931 + C4932;
    const double C5400 = C5393 + C5394;
    const double C161 = C31012 * C141;
    const double C30058 = C30053 + C30057;
    const double C1364 = (ae * C30087 + C29994 * C30019 +
                          ae * (C29994 * C30140 + C29993 * C30148 * ae) +
                          C29993 * (ae * (C29994 * C30056 + C30148 * ae) +
                                    C29993 * (ae * C30095 + C29994 * C30028))) /
                         std::pow(C29951, 2);
    const double C1214 = (3 * (C30043 + C30051 * C30128) +
                          C29993 * (2 * C30133 + C29993 * C30138)) /
                         C29951;
    const double C30294 = C30021 + C30290;
    const double C30217 = C30211 + C30215;
    const double C30097 = C30092 + C30096;
    const double C2075 = (3 * (C30082 + C30090 * C30188) +
                          C29994 * (2 * C30192 + C29994 * C30194)) /
                         C29951;
    const double C30346 = C30021 + C30345;
    const double C30358 = C30356 + C30357;
    const double C1369 =
        (C30019 + ae * C29994 * C30095 +
         C29994 * (ae * C30095 + C29994 * C30028) +
         ae * (C30140 + C29994 * (C29994 * C29993 * C30067 + C30165 * ae) +
               C29994 * C30165 * ae) +
         C29993 * (ae * (C30056 + C29994 * (C29994 * C30067 + C30164 * ae) +
                         C29994 * C30164 * ae) +
                   C29993 * (C30028 + ae * C29994 * C30106 +
                             C29994 * (ae * C30106 +
                                       C29994 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C30170 = C30168 + C30169;
    const double C30489 = C30148 + C30487;
    const double C30543 = C30148 + C30541;
    const double C30664 = C29994 * C30337;
    const double C30280 = C30266 + C30277;
    const double C30617 = C30248 + C30615;
    const double C30593 = C29993 * C30312;
    const double C30649 = C30160 + C30647;
    const double C30655 = C29994 * C30370;
    const double C30379 = C30377 + C30378;
    const double C30792 = C30791 / C30782;
    const double C31090 = 2 * C31058;
    const double C30801 = C30800 / C30779;
    const double C31094 = C31062 / C30797;
    const double C31119 = C31056 - C31089;
    const double C2688 = -C31089;
    const double C31133 = C31118 + C30789;
    const double C30874 = C30873 / C30782;
    const double C31098 = 2 * C31067;
    const double C30881 = C30880 / C30779;
    const double C31108 = C31076 / C30797;
    const double C31127 = C31070 - C31105;
    const double C2580 = -C31105;
    const double C31136 = C31123 + C30870;
    const double C30916 = C30915 / C30782;
    const double C31101 = 2 * C31069;
    const double C30923 = C30922 / C30779;
    const double C31114 = C31082 / C30797;
    const double C31130 = C31071 - C31111;
    const double C3342 = -C31111;
    const double C31137 = C31125 + C30912;
    const double C18797 = C18764 * C119;
    const double C18787 = C18764 * C128;
    const double C18783 = C18764 * C118;
    const double C18781 = C18764 * C117;
    const double C18777 = C18764 * C127;
    const double C18771 = C18764 * C125;
    const double C18767 = C18764 * C116;
    const double C18991 = C18764 * C307;
    const double C18981 = C18764 * C312;
    const double C18977 = C18764 * C302;
    const double C18973 = C18764 * C321;
    const double C18969 = C18764 * C306;
    const double C18967 = C18764 * C303;
    const double C18963 = C18764 * C314;
    const double C19185 = C18764 * C510;
    const double C19175 = C18764 * C515;
    const double C19171 = C18764 * C505;
    const double C19167 = C18764 * C524;
    const double C19163 = C18764 * C509;
    const double C19161 = C18764 * C506;
    const double C19157 = C18764 * C517;
    const double C19339 = C18764 * C308;
    const double C19481 = C18764 * C511;
    const double C19695 = C18764 * C973;
    const double C19685 = C18764 * C979;
    const double C19681 = C18764 * C972;
    const double C20215 = C18764 * C1201;
    const double C20211 = C18764 * C1208;
    const double C20421 = C18764 * C1338;
    const double C21131 = C18764 * C1335;
    const double C21273 = C18764 * C2061;
    const double C21269 = C18764 * C2068;
    const double C24615 = C18764 * C305;
    const double C24611 = C18764 * C319;
    const double C24605 = C18764 * C316;
    const double C24601 = C18764 * C304;
    const double C25231 = C18764 * C971;
    const double C25227 = C18764 * C977;
    const double C25479 = C18764 * C1203;
    const double C25469 = C18764 * C1210;
    const double C25465 = C18764 * C1202;
    const double C25657 = C18764 * C1340;
    const double C25643 = C18764 * C1339;
    const double C25635 = C18764 * C1336;
    const double C26131 = C18764 * C1758;
    const double C26971 = C18764 * C2470;
    const double C18785 = C18765 * C511;
    const double C18779 = C18765 * C505;
    const double C18775 = C18765 * C515;
    const double C18773 = C18765 * C517;
    const double C18769 = C18765 * C506;
    const double C18979 = C18765 * C973;
    const double C18971 = C18765 * C1338;
    const double C18965 = C18765 * C972;
    const double C18961 = C18765 * C979;
    const double C19173 = C18765 * C510;
    const double C19169 = C18765 * C2068;
    const double C19165 = C18765 * C2061;
    const double C19159 = C18765 * C509;
    const double C19155 = C18765 * C524;
    const double C19683 = C18765 * C1335;
    const double C24613 = C18765 * C1339;
    const double C24607 = C18765 * C977;
    const double C24603 = C18765 * C971;
    const double C25229 = C18765 * C1336;
    const double C25467 = C18765 * C1758;
    const double C25645 = C18765 * C1340;
    const double C25637 = C18765 * C2470;
    const double C175 = C165 * C30999;
    const double C13230 = C165 * C13222;
    const double C174 = C164 * C114;
    const double C13229 = C164 * C13226;
    const double C358 = C31012 * C337;
    const double C18988 = C18762 * C337;
    const double C362 = C31012 * C338;
    const double C19336 = C18762 * C338;
    const double C157 = C31012 * C130;
    const double C18798 = C18762 * C130;
    const double C356 = C31012 * C322;
    const double C18992 = C18762 * C322;
    const double C360 = C31012 * C324;
    const double C19340 = C18762 * C324;
    const double C559 = C31012 * C525;
    const double C19186 = C18762 * C525;
    const double C19174 = C18763 * C525;
    const double C563 = C31012 * C527;
    const double C18786 = C18763 * C527;
    const double C19482 = C18762 * C527;
    const double C997 = C31012 * C980;
    const double C18980 = C18763 * C980;
    const double C19696 = C18762 * C980;
    const double C1482 = C31012 * C1207;
    const double C1222 =
        (3 * (C30122 + ae * C30133 + C29993 * C30137) +
         ae * (2 * C30133 + C29993 * C30138) +
         C29993 *
             (2 * C30137 + ae * C30138 +
              C29993 * (C30021 + ae * C29993 * C30062 +
                        C29993 * (ae * C30062 + C29993 * C30001 * C30026)))) /
        std::pow(C29951, 2);
    const double C1650 = C31012 * C1365;
    const double C18976 = C18763 * C1365;
    const double C20418 = C18762 * C1365;
    const double C2242 = C31012 * C1346;
    const double C19684 = C18763 * C1346;
    const double C21132 = C18762 * C1346;
    const double C5586 = C31012 * C1221;
    const double C25476 = C18762 * C1221;
    const double C5728 = C31012 * C1767;
    const double C25472 = C18763 * C1767;
    const double C26128 = C18762 * C1767;
    const double C5584 = C31012 * C1212;
    const double C25480 = C18762 * C1212;
    const double C5722 = C31012 * C1355;
    const double C25658 = C18762 * C1355;
    const double C25646 = C18763 * C1355;
    const double C5726 = C31012 * C1761;
    const double C25468 = C18763 * C1761;
    const double C26132 = C18762 * C1761;
    const double C30226 = C30219 + C30220;
    const double C30216 = C30213 + C30214;
    const double C30631 = C30042 + C30627;
    const double C561 = C31012 * C540;
    const double C19182 = C18762 * C540;
    const double C19178 = C18763 * C540;
    const double C565 = C31012 * C541;
    const double C18790 = C18763 * C541;
    const double C19478 = C18762 * C541;
    const double C999 = C31012 * C988;
    const double C18984 = C18763 * C988;
    const double C19692 = C18762 * C988;
    const double C158 = C113 * C131;
    const double C18793 = C18764 * C131;
    const double C357 = C113 * C323;
    const double C18987 = C18764 * C323;
    const double C361 = C113 * C325;
    const double C19335 = C18764 * C325;
    const double C560 = C113 * C526;
    const double C19181 = C18764 * C526;
    const double C19177 = C18765 * C526;
    const double C564 = C113 * C528;
    const double C18789 = C18765 * C528;
    const double C19477 = C18764 * C528;
    const double C998 = C113 * C981;
    const double C18983 = C18765 * C981;
    const double C19691 = C18764 * C981;
    const double C2357 = C113 * C2066;
    const double C19179 = C18765 * C2066;
    const double C1768 =
        (2 * (ae * (C29994 * C30051 + C30150 * ae) + C29993 * C30178) +
         ae * (C29994 * C30138 + (C30150 + C30159 * C30128) * ae) +
         C29993 *
             (C30178 + ae * (C29994 * C29993 * C30062 + C30160 * ae) +
              C29993 * (ae * (C29994 * C30062 + C30159 * ae) +
                        C29993 * (ae * C30101 + C29994 * C30001 * C30026)))) /
        std::pow(C29951, 2);
    const double C2079 =
        (2 * (ae * C30082 + C29994 * C30122) +
         ae * (C30082 + C30090 * std::pow(C29994, 2)) +
         C29994 * (C30122 + ae * C29994 * C30090 + C29994 * C30178)) /
        std::pow(C29951, 2);
    const double C2082 =
        (3 * (C30122 + ae * C30192 + C29994 * C30178) +
         ae * (2 * C30192 + C29994 * C30194) +
         C29994 *
             (2 * C30178 + ae * C30194 +
              C29994 * (C30021 + ae * C29994 * C30101 +
                        C29994 * (ae * C30101 + C29994 * C30001 * C30026)))) /
        std::pow(C29951, 2);
    const double C2480 =
        (ae * (2 * (C29994 * C30051 + C30150 * ae) +
               C29994 * (C30051 + C29994 * (C29994 * C30062 + C30159 * ae) +
                         C29994 * C30159 * ae) +
               (C30150 + C30159 * C30188) * ae) +
         C29993 *
             (2 * C30178 + ae * C30194 +
              C29994 * (C30021 + ae * C29994 * C30101 +
                        C29994 * (ae * C30101 + C29994 * C30001 * C30026)))) /
        std::pow(C29951, 2);
    const double C1345 =
        (C29993 * C30082 + C30407 * ae + C30480 * C30188) / C29951;
    const double C1351 =
        (C29994 * (C30082 + C29993 * C30480 + C30478 * ae)) / C29951;
    const double C1358 =
        (C30082 + C29993 * C30480 + C30478 * ae +
         (C30090 + C29993 * (C29993 * C30101 + C30303) + C30160 * ae) *
             C30188) /
        C29951;
    const double C2476 =
        (2 * C29994 * C30480 +
         C29994 * (C30480 + (C29993 * C30101 + C30303) * C30188)) /
        C29951;
    const double C6772 = C31012 * C2479;
    const double C25642 = C18763 * C2479;
    const double C26968 = C18762 * C2479;
    const double C30258 = C30257 + C30255;
    const double C30353 = C30350 + C30351;
    const double C30251 = C30249 + C30250;
    const double C30564 = C30081 + C30563;
    const double C30417 = C30415 + C30416;
    const double C1344 =
        (C29993 * C30048 + C29994 * (C29994 * C30140 + C30486 * ae) +
         C29994 * C30486 * ae) /
        C29951;
    const double C2477 =
        (2 * (C29994 * C30140 + C30486 * ae) +
         C29994 * (C30140 + C29994 * (C29994 * C29993 * C30067 + C30165 * ae) +
                   C29994 * C30165 * ae) +
         (C30486 + C30165 * C30188) * ae) /
        C29951;
    const double C1334 = C29993 * C30411 + C30486 * C30188;
    const double C2472 =
        2 * C29994 * C30486 + C29994 * (C30486 + C30165 * C30188);
    const double C30488 = C30484 + C30485;
    const double C30542 = C30539 + C30485;
    const double C2067 =
        (2 * (C29994 * C30048 + C30411 * ae) +
         C29994 * (C30048 + C29994 * (C29994 * C30056 + C30485) +
                   C29994 * C30148 * ae) +
         (C30411 + C30148 * C30188) * ae) /
        C29951;
    const double C1479 = C113 * C1206;
    const double C1648 = C31012 * C1350;
    const double C18990 = C18763 * C1350;
    const double C1481 = C113 * C1200;
    const double C1647 = C113 * C1337;
    const double C18989 = C18765 * C1337;
    const double C2359 = C113 * C2060;
    const double C19183 = C18765 * C2060;
    const double C6558 = C31012 * C1368;
    const double C20416 = C18763 * C1368;
    const double C30648 = C30645 + C30591;
    const double C15580 = C31012 * C2475;
    const double C21130 = C18763 * C2475;
    const double C15579 = C113 * C2471;
    const double C21129 = C18765 * C2471;
    const double C30310 = ae * C30307;
    const double C30652 = C29994 * C30307;
    const double C30596 = C29993 * C30594;
    const double C10702 =
        (3 * (C30480 + C30594 * C30188) +
         C29994 *
             (2 * C29994 * C30594 +
              C29994 * (C30594 + (C29993 * C30344 + C30306 * ae) * C30188))) /
        C29951;
    const double C1215 =
        (3 * (C30082 + C29993 * C30480 + C30478 * ae) +
         C29993 * (2 * C30480 +
                   C29993 * (C30090 + C29993 * (C29993 * C30101 + C30303) +
                             C30160 * ae) +
                   C30481 * ae) +
         (2 * C30478 + C29993 * C30481) * ae) /
        C29951;
    const double C1357 =
        (C30043 + C30051 * C30128 + C29994 * (C29994 * C30138 + C30481 * ae) +
         C29994 * C30481 * ae) /
        C29951;
    const double C1763 = (C29994 * (2 * C30133 + C29993 * C30138) +
                          (2 * C30478 + C29993 * C30481) * ae) /
                         C29951;
    const double C1764 =
        (C29994 * (2 * C30480 +
                   C29993 * (C30090 + C29993 * (C29993 * C30101 + C30303) +
                             C30160 * ae) +
                   C30481 * ae)) /
        C29951;
    const double C1204 = 3 * (C30407 + C30150 * C30128) +
                         C29993 * (2 * C30478 + C29993 * C30481);
    const double C1341 = C30407 + C30150 * C30128 + C30481 * C30188;
    const double C1759 = C29994 * (2 * C30478 + C29993 * C30481);
    const double C6660 =
        2 * C29994 * C30481 + C29994 * (C30481 + C30312 * C30188);
    const double C2074 =
        (3 * (C30043 + C29994 * C30535 + C30533 * ae) +
         C29994 *
             (2 * C30535 + C29994 * (C30051 + C29994 * C30307 + C30367 * ae) +
              C30536 * ae) +
         (2 * C30533 + C29994 * C30536) * ae) /
        C29951;
    const double C2064 = 3 * (C30407 + C30150 * C30188) +
                         C29994 * (2 * C30533 + C29994 * C30536);
    const double C30321 = ae * C30319;
    const double C30661 = C29994 * C30319;
    const double C6399 =
        (3 * (C30125 + C29994 * C30609 + C30607 * ae) +
         C29994 *
             (2 * C30609 + C29994 * (C30205 + C29994 * C30319 + C30333 * ae) +
              C30610 * ae) +
         (2 * C30607 + C29994 * C30610) * ae) /
        C29951;
    const double C6395 = 3 * (C30470 + C30157 * C30188) +
                         C29994 * (2 * C30607 + C29994 * C30610);
    const double C30562 = C30559 + C30560;
    const double C30616 = C30613 + C30571;
    const double C6398 =
        (2 * (C29994 * C30131 + C30473 * ae) +
         C29994 * (C30131 + C29994 * (C29994 * C30212 + C30571) +
                   C29994 * C30248 * ae) +
         (C30473 + C30248 * C30188) * ae) /
        C29951;
    const double C6769 = C113 * C6394;
    const double C25655 = C18765 * C6394;
    const double C30278 = C30046 + C30274;
    const double C30577 = C30085 + C30576;
    const double C30670 = C30561 + C30669;
    const double C30632 = C30629 + C30630;
    const double C30030 = C30024 + C30029;
    const double C30144 = C30141 + C30142;
    const double C30182 = C30180 + C30181;
    const double C1480 = C31012 * C1218;
    const double C2236 = C31012 * C1361;
    const double C19690 = C18763 * C1361;
    const double C30234 = C30231 + C30232;
    const double C30279 = C30275 + C30276;
    const double C30320 = C30317 + C30318;
    const double C30297 = C29993 * C30295;
    const double C30311 = C29993 * C30308;
    const double C30342 = C29994 * C30308;
    const double C30069 = C30064 + C30068;
    const double C30145 = C30056 + C30143;
    const double C30235 = C30229 + C30233;
    const double C30298 = C29993 * C30296;
    const double C6661 =
        (2 * (C29994 * C30138 + C30481 * ae) +
         C29994 * (C30138 + C29994 * (C29994 * C30296 + C30312 * ae) +
                   C29994 * C30312 * ae) +
         (C30481 + C30312 * C30188) * ae) /
        C29951;
    const double C30108 = C30103 + C30107;
    const double C30198 = C30095 + C30197;
    const double C30363 = C30361 + C30362;
    const double C30374 = C29994 * C30371;
    const double C176 = C166 * C114;
    const double C13236 = C166 * C13226;
    const double C382 = C370 * C114;
    const double C13231 = C370 * C13227;
    const double C13394 = C370 * C13226;
    const double C585 = C573 * C114;
    const double C13556 = C573 * C13226;
    const double C177 = C167 * C30999;
    const double C13235 = C167 * C13222;
    const double C178 = C168 * C30999;
    const double C13238 = C168 * C13222;
    const double C381 = C369 * C30999;
    const double C13232 = C369 * C13223;
    const double C13393 = C369 * C13222;
    const double C582 = C570 * C30999;
    const double C13562 = C570 * C13222;
    const double C584 = C572 * C30999;
    const double C13555 = C572 * C13222;
    const double C587 = C575 * C30999;
    const double C13558 = C575 * C13222;
    const double C372 = C353 + C354;
    const double C1005 = C994 + C995;
    const double C1489 = C1483 + C1484;
    const double C371 = C351 + C352;
    const double C574 = C554 + C555;
    const double C1004 = C992 + C993;
    const double C1490 = C1485 + C1486;
    const double C1656 = C1651 + C1652;
    const double C2368 = C2363 + C2364;
    const double C5733 = C5717 + C5718;
    const double C6778 = C6773 + C6774;
    const double C5585 = C113 * C1213;
    const double C25475 = C18764 * C1213;
    const double C5719 = C113 * C1347;
    const double C25225 = C18765 * C1347;
    const double C25639 = C18764 * C1347;
    const double C5391 = C113 * C1353;
    const double C24609 = C18765 * C1353;
    const double C25647 = C18764 * C1353;
    const double C5723 = C113 * C1356;
    const double C25653 = C18764 * C1356;
    const double C25649 = C18765 * C1356;
    const double C5727 = C113 * C1762;
    const double C25471 = C18765 * C1762;
    const double C26127 = C18764 * C1762;
    const double C6771 = C113 * C2474;
    const double C25641 = C18765 * C2474;
    const double C26967 = C18764 * C2474;
    const double C26965 = C18765 * C6400;
    const double C379 = C367 * C30999;
    const double C13233 = C367 * C13223;
    const double C13400 = C367 * C13222;
    const double C179 = C169 * C114;
    const double C13237 = C169 * C13226;
    const double C380 = C368 * C114;
    const double C13234 = C368 * C13227;
    const double C13399 = C368 * C13226;
    const double C583 = C571 * C114;
    const double C13561 = C571 * C13226;
    const double C133 = (4 * (2 * C30043 + C30001 * C30048) +
                         C30001 * (3 * C30048 + C30001 * C30058)) /
                        C29951;
    const double C327 =
        (2 * C30043 + C30001 * C30048 + C30058 * C30128) / C29951;
    const double C329 = (C29993 * (3 * C30048 + C30001 * C30058)) / C29951;
    const double C1646 = C31012 * C1364;
    const double C18986 = C18763 * C1364;
    const double C5846 = C31012 * C1214;
    const double C5577 = (4 * (2 * C30125 + C29993 * C30131) +
                          C29993 * (3 * C30131 + C29993 * C30217)) /
                         C29951;
    const double C132 = (4 * (2 * C30082 + C30001 * C30087) +
                         C30001 * (3 * C30087 + C30001 * C30097)) /
                        C29951;
    const double C529 =
        (2 * C30082 + C30001 * C30087 + C30097 * C30188) / C29951;
    const double C531 = (C29994 * (3 * C30087 + C30001 * C30097)) / C29951;
    const double C21267 = C18765 * C2075;
    const double C10548 = (4 * (2 * C30187 + C29994 * C30190) +
                           C29994 * (3 * C30190 + C29994 * C30358)) /
                          C29951;
    const double C30424 = C30001 * C30170;
    const double C30546 = C29993 * C30170;
    const double C1205 = 3 * (C30411 + C30148 * C30128) +
                         C29993 * (2 * C30486 + C29993 * C30489);
    const double C1342 = C30411 + C30148 * C30128 + C30489 * C30188;
    const double C1760 = C29994 * (2 * C30486 + C29993 * C30489);
    const double C2065 = 3 * (C30411 + C30148 * C30188) +
                         C29994 * (2 * C30540 + C29994 * C30543);
    const double C30666 = C30663 + C30664;
    const double C30573 = C29993 * C30280;
    const double C6396 = 3 * (C30473 + C30248 * C30188) +
                         C29994 * (2 * C30614 + C29994 * C30617);
    const double C30595 = C30592 + C30593;
    const double C10700 = 3 * (C30478 + C30160 * C30188) +
                          C29994 * (2 * C30646 + C29994 * C30649);
    const double C30657 = C30654 + C30655;
    const double C30639 = C29994 * C30379;
    const double C30793 = C30789 - C30792;
    const double C31120 = C31090 / C30779;
    const double C30802 = C30798 - C30801;
    const double C31134 = C31119 / C30783;
    const double C30875 = C30870 - C30874;
    const double C31124 = C31098 / C30779;
    const double C30882 = C30878 - C30881;
    const double C31138 = C31127 / C30783;
    const double C30917 = C30912 - C30916;
    const double C31126 = C31101 / C30779;
    const double C30924 = C30920 - C30923;
    const double C31140 = C31130 / C30783;
    const double C18809 = C18787 + C18788;
    const double C18807 = C18783 + C18784;
    const double C18806 = C18781 + C18782;
    const double C18804 = C18777 + C18778;
    const double C18801 = C18771 + C18772;
    const double C18799 = C18767 + C18768;
    const double C19003 = C18981 + C18982;
    const double C19001 = C18977 + C18978;
    const double C18999 = C18973 + C18974;
    const double C18997 = C18969 + C18970;
    const double C18996 = C18967 + C18968;
    const double C18994 = C18963 + C18964;
    const double C19197 = C19175 + C19176;
    const double C19195 = C19171 + C19172;
    const double C19193 = C19167 + C19168;
    const double C19191 = C19163 + C19164;
    const double C19190 = C19161 + C19162;
    const double C19188 = C19157 + C19158;
    const double C19699 = C19685 + C19686;
    const double C19697 = C19681 + C19682;
    const double C20220 = C20215 + C20216;
    const double C20218 = C20211 + C20212;
    const double C20426 = C20421 + C20422;
    const double C21278 = C21273 + C21274;
    const double C24624 = C24615 + C24616;
    const double C24622 = C24611 + C24612;
    const double C24619 = C24605 + C24606;
    const double C24617 = C24601 + C24602;
    const double C25236 = C25231 + C25232;
    const double C25234 = C25227 + C25228;
    const double C25483 = C25469 + C25470;
    const double C25481 = C25465 + C25466;
    const double C25663 = C25643 + C25644;
    const double C25659 = C25635 + C25636;
    const double C26976 = C26971 + C26972;
    const double C18805 = C18779 + C18780;
    const double C18803 = C18775 + C18776;
    const double C18802 = C18773 + C18774;
    const double C18800 = C18769 + C18770;
    const double C18998 = C18971 + C18972;
    const double C18995 = C18965 + C18966;
    const double C18993 = C18961 + C18962;
    const double C19192 = C19165 + C19166;
    const double C19189 = C19159 + C19160;
    const double C19187 = C19155 + C19156;
    const double C24623 = C24613 + C24614;
    const double C24620 = C24607 + C24608;
    const double C24618 = C24603 + C24604;
    const double C25235 = C25229 + C25230;
    const double C25660 = C25637 + C25638;
    const double C170 = C156 + C157;
    const double C18814 = C18797 + C18798;
    const double C373 = C355 + C356;
    const double C19008 = C18991 + C18992;
    const double C375 = C359 + C360;
    const double C19344 = C19339 + C19340;
    const double C576 = C558 + C559;
    const double C19202 = C19185 + C19186;
    const double C19196 = C19173 + C19174;
    const double C578 = C562 + C563;
    const double C18808 = C18785 + C18786;
    const double C19486 = C19481 + C19482;
    const double C1006 = C996 + C997;
    const double C19002 = C18979 + C18980;
    const double C19704 = C19695 + C19696;
    const double C5844 = C31012 * C1222;
    const double C2246 = C2241 + C2242;
    const double C19698 = C19683 + C19684;
    const double C21136 = C21131 + C21132;
    const double C5591 = C5583 + C5584;
    const double C25488 = C25479 + C25480;
    const double C5735 = C5721 + C5722;
    const double C25670 = C25657 + C25658;
    const double C25664 = C25645 + C25646;
    const double C5737 = C5725 + C5726;
    const double C25482 = C25467 + C25468;
    const double C26136 = C26131 + C26132;
    const double C5580 =
        (4 * (2 * C30129 + ae * C30131 + C29993 * C30216) +
         ae * (3 * C30131 + C29993 * C30217) +
         C29993 *
             (3 * C30216 + ae * C30217 +
              C29993 * (2 * C30210 + ae * C30212 +
                        C29993 * (C30017 + ae * C29993 * C30054 +
                                  C29993 * (ae * C30054 + C29993 * C30026))))) /
        std::pow(C29951, 2);
    const double C30633 = C30631 + C30628;
    const double C171 = C158 + C159;
    const double C18812 = C18793 + C18794;
    const double C374 = C357 + C358;
    const double C19006 = C18987 + C18988;
    const double C376 = C361 + C362;
    const double C19342 = C19335 + C19336;
    const double C577 = C560 + C561;
    const double C19200 = C19181 + C19182;
    const double C19198 = C19177 + C19178;
    const double C579 = C564 + C565;
    const double C18810 = C18789 + C18790;
    const double C19484 = C19477 + C19478;
    const double C1007 = C998 + C999;
    const double C19004 = C18983 + C18984;
    const double C19702 = C19691 + C19692;
    const double C6000 = C31012 * C1768;
    const double C20210 = C18763 * C1768;
    const double C2362 = C31012 * C2079;
    const double C19170 = C18763 * C2079;
    const double C21270 = C18762 * C2079;
    const double C21268 = C18763 * C2082;
    const double C15578 = C31012 * C2480;
    const double C21126 = C18763 * C2480;
    const double C2239 = C113 * C1345;
    const double C19687 = C18765 * C1345;
    const double C21127 = C18764 * C1345;
    const double C1649 = C113 * C1351;
    const double C18975 = C18765 * C1351;
    const double C20417 = C18764 * C1351;
    const double C6557 = C113 * C1358;
    const double C20415 = C18765 * C1358;
    const double C15577 = C113 * C2476;
    const double C21125 = C18765 * C2476;
    const double C5714 =
        (3 * (C30174 + ae * (C29994 * C30205 + C30157 * ae) + C29993 * C30258) +
         ae * (C29994 * C30217 + (2 * C30157 + C29993 * C30248) * ae) +
         C29993 *
             (2 * C30258 + ae * (C29994 * C30212 + C30248 * ae) +
              C29993 * (C30247 + ae * (C29994 * C30221 + C30245 * ae) +
                        C29993 * (ae * (C29994 * C30054 + C30119 * ae) +
                                  C29993 * (ae * C30093 + C29994 * C30026))))) /
        std::pow(C29951, 2);
    const double C5713 =
        (2 * (ae * (C30042 + C29994 * (C29994 * C30046 + C30117 * ae) +
                    C29994 * C30117 * ae) +
              C29993 * C30251) +
         ae * (C30131 + C29994 * (C29994 * C30212 + C30248 * ae) +
               C29994 * C30248 * ae) +
         C29993 *
             (C30251 +
              ae * (C30205 + C29994 * (C29994 * C30221 + C30245 * ae) +
                    C29994 * C30245 * ae) +
              C29993 *
                  (ae * (C30046 + C29994 * (C29994 * C30054 + C30119 * ae) +
                         C29994 * C30119 * ae) +
                   C29993 * (C30017 + ae * C29994 * C30093 +
                             C29994 * (ae * C30093 + C29994 * C30026))))) /
        std::pow(C29951, 2);
    const double C30565 = C30564 + C30558;
    const double C326 =
        (2 * C30082 + C30001 * C30087 +
         C29993 * (C29993 * C30097 + C30417 * ae) + C29993 * C30417 * ae) /
        C29951;
    const double C328 = (C29993 * (3 * C30087 + C30001 * C30097) +
                         (3 * C30411 + C30001 * C30417) * ae) /
                        C29951;
    const double C530 =
        (2 * C30043 + C30001 * C30048 +
         C29994 * (C29994 * C30058 + C30417 * ae) + C29994 * C30417 * ae) /
        C29951;
    const double C532 = (C29994 * (3 * C30048 + C30001 * C30058) +
                         (3 * C30411 + C30001 * C30417) * ae) /
                        C29951;
    const double C982 = (C29994 * (C29993 * C30097 + C30417 * ae)) / C29951;
    const double C983 =
        (C29994 * C29993 * C30058 + C29993 * C30417 * ae) / C29951;
    const double C120 = 4 * (2 * C30407 + C30001 * C30411) +
                        C30001 * (3 * C30411 + C30001 * C30417);
    const double C309 = 2 * C30407 + C30001 * C30411 + C30417 * C30128;
    const double C310 = C29993 * (3 * C30411 + C30001 * C30417);
    const double C512 = 2 * C30407 + C30001 * C30411 + C30417 * C30188;
    const double C513 = C29994 * (3 * C30411 + C30001 * C30417);
    const double C974 = C29994 * C29993 * C30417;
    const double C1474 =
        2 * C29993 * C30417 + C29993 * (C30417 + C30170 * C30128);
    const double C1640 = C29994 * (C30417 + C30170 * C30128);
    const double C2352 =
        2 * C29994 * C30417 + C29994 * (C30417 + C30170 * C30188);
    const double C2238 = C31012 * C1344;
    const double C19694 = C18763 * C1344;
    const double C2237 = C113 * C1334;
    const double C19693 = C18765 * C1334;
    const double C1217 =
        (3 * (C30087 + C29993 * C30488 + C30486 * ae) +
         C29993 * (2 * C30488 +
                   C29993 * (C30095 + C29993 * (C29993 * C30106 + C30164 * ae) +
                             C30165 * ae) +
                   C30489 * ae) +
         (2 * C30486 + C29993 * C30489) * ae) /
        C29951;
    const double C1343 =
        (C29993 * C30087 + C30411 * ae + C30488 * C30188) / C29951;
    const double C1349 =
        (C29994 * (C30087 + C29993 * C30488 + C30486 * ae)) / C29951;
    const double C1360 =
        (C30087 + C29993 * C30488 + C30486 * ae +
         (C30095 + C29993 * (C29993 * C30106 + C30164 * ae) + C30165 * ae) *
             C30188) /
        C29951;
    const double C1766 =
        (C29994 * (2 * C30488 +
                   C29993 * (C30095 + C29993 * (C29993 * C30106 + C30164 * ae) +
                             C30165 * ae) +
                   C30489 * ae)) /
        C29951;
    const double C2478 =
        (2 * C29994 * C30488 +
         C29994 * (C30488 + (C29993 * C30106 + C30164 * ae) * C30188)) /
        C29951;
    const double C2076 =
        (3 * (C30048 + C29994 * C30542 + C30540 * ae) +
         C29994 * (2 * C30542 +
                   C29994 * (C30056 + C29994 * (C29994 * C30067 + C30164 * ae) +
                             C29994 * C30164 * ae) +
                   C30543 * ae) +
         (2 * C30540 + C29994 * C30543) * ae) /
        C29951;
    const double C2360 = C31012 * C2067;
    const double C19184 = C18763 * C2067;
    const double C1488 = C1481 + C1482;
    const double C1654 = C1647 + C1648;
    const double C19007 = C18989 + C18990;
    const double C10701 =
        (3 * (C30133 + C29994 * C30648 + C30646 * ae) +
         C29994 * (2 * C30648 +
                   C29994 * (C30286 +
                             C29994 * (C29994 * C29993 * C30289 + C30343 * ae) +
                             C29994 * C30343 * ae) +
                   C30649 * ae) +
         (2 * C30646 + C29994 * C30649) * ae) /
        C29951;
    const double C15584 = C15579 + C15580;
    const double C21135 = C21129 + C21130;
    const double C30656 = C30051 + C30652;
    const double C30597 = C30090 + C30596;
    const double C5843 = C113 * C1215;
    const double C6560 = C31012 * C1357;
    const double C20420 = C18763 * C1357;
    const double C6002 = C31012 * C1763;
    const double C20214 = C18763 * C1763;
    const double C5999 = C113 * C1764;
    const double C20209 = C18765 * C1764;
    const double C5845 = C113 * C1204;
    const double C6559 = C113 * C1341;
    const double C20419 = C18765 * C1341;
    const double C6001 = C113 * C1759;
    const double C20213 = C18765 * C1759;
    const double C21272 = C18763 * C2074;
    const double C21271 = C18765 * C2064;
    const double C30323 = C30247 + C30321;
    const double C30665 = C30205 + C30661;
    const double C26970 = C18763 * C6399;
    const double C26969 = C18765 * C6395;
    const double C5708 =
        (2 * C30125 + C29993 * C30131 +
         C29994 * (C29994 * C30217 + C30562 * ae) + C29994 * C30562 * ae) /
        C29951;
    const double C5710 = (C29994 * (3 * C30131 + C29993 * C30217) +
                          (3 * C30473 + C29993 * C30562) * ae) /
                         C29951;
    const double C5574 = 4 * (2 * C30470 + C29993 * C30473) +
                         C29993 * (3 * C30473 + C29993 * C30562);
    const double C5704 = 2 * C30470 + C29993 * C30473 + C30562 * C30188;
    const double C5705 = C29994 * (3 * C30473 + C29993 * C30562);
    const double C6762 =
        2 * C29994 * C30562 + C29994 * (C30562 + C30280 * C30188);
    const double C6401 =
        (3 * (C30131 + C29994 * C30616 + C30614 * ae) +
         C29994 * (2 * C30616 +
                   C29994 * (C30212 + C29994 * (C29994 * C30230 + C30273 * ae) +
                             C29994 * C30273 * ae) +
                   C30617 * ae) +
         (2 * C30614 + C29994 * C30617) * ae) /
        C29951;
    const double C6770 = C31012 * C6398;
    const double C25656 = C18763 * C6398;
    const double C30281 = C30278 + C30270;
    const double C30578 = C30577 + C30316;
    const double C10906 =
        (4 * (2 * C29994 * C30561 + C29994 * C30670) +
         C29994 * (3 * C30670 + C29994 * (2 * C29994 * C30574 +
                                          C29994 * (C30574 + (C29993 * C30104 +
                                                              C30162 * ae) *
                                                                 C30188)))) /
        C29951;
    const double C10546 = 4 * (2 * C30526 + C29994 * C30529) +
                          C29994 * (3 * C30529 + C29994 * C30632);
    const double C142 =
        (5 * (3 * C30019 + C30001 * C30030) +
         C30001 * (4 * C30030 +
                   C30001 * (3 * C30028 +
                             C30001 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C339 =
        (2 * C30001 * C30012 + C30001 * C30019 + ae * C29993 * C30058 +
         C29993 * (ae * C30058 + C29993 * C30030)) /
        std::pow(C29951, 2);
    const double C340 = (ae * (3 * C30048 + C30001 * C30058) +
                         C29993 * (3 * C30019 + C30001 * C30030)) /
                        std::pow(C29951, 2);
    const double C542 =
        (2 * C30001 * C30012 + C30001 * C30019 + ae * C29994 * C30097 +
         C29994 * (ae * C30097 + C29994 * C30030)) /
        std::pow(C29951, 2);
    const double C543 = (ae * (3 * C30087 + C30001 * C30097) +
                         C29994 * (3 * C30019 + C30001 * C30030)) /
                        std::pow(C29951, 2);
    const double C989 = (ae * (C29994 * C30058 +
                               (2 * C30001 * C30117 +
                                C30001 * (C30117 + C30008 * C30010 * C30009)) *
                                   ae) +
                         C29993 * (ae * C30097 + C29994 * C30030)) /
                        std::pow(C29951, 2);
    const double C2078 =
        (2 * (ae * C30087 + C29994 * C30019) +
         ae * (C30087 + C30095 * std::pow(C29994, 2)) +
         C29994 * (C30019 + ae * C29994 * C30095 + C29994 * C30182)) /
        std::pow(C29951, 2);
    const double C1487 = C1479 + C1480;
    const double C30236 = C29993 * C30234;
    const double C30282 = C29993 * C30279;
    const double C30352 = C29994 * C30279;
    const double C30322 = C29993 * C30320;
    const double C30299 = C30294 + C30297;
    const double C30313 = C30310 + C30311;
    const double C30347 = C30346 + C30342;
    const double C30070 = C30001 * C30069;
    const double C1477 =
        (2 * (ae * C30058 + C29993 * C30030) + ae * (C30058 + C30069 * C30128) +
         C29993 * (C30030 + ae * C29993 * C30069 +
                   C29993 * (ae * C30069 +
                             C29993 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C1475 =
        (2 * C29993 * C30058 + C29993 * (C30058 + C30069 * C30128)) / C29951;
    const double C1641 = (C29994 * (C30058 + C30069 * C30128) +
                          (C30417 + C30170 * C30128) * ae) /
                         C29951;
    const double C2353 =
        (2 * (C29994 * C30058 + C30417 * ae) +
         C29994 * (C30058 + C29994 * (C29994 * C30069 + C30170 * ae) +
                   C29994 * C30170 * ae) +
         (C30417 + C30170 * C30188) * ae) /
        C29951;
    const double C1223 =
        (3 * (C30019 + ae * C30140 + C29993 * C30144) +
         ae * (2 * C30140 + C29993 * C30145) +
         C29993 * (2 * C30144 + ae * C30145 +
                   C29993 * (C30028 + ae * C29993 * C30067 +
                             C29993 * (ae * C30067 +
                                       C29993 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C1769 =
        (2 * (ae * (C29994 * C30056 + C30148 * ae) + C29993 * C30182) +
         ae * (C29994 * C30145 + (C30148 + C30164 * C30128) * ae) +
         C29993 * (C30182 + ae * (C29994 * C29993 * C30067 + C30165 * ae) +
                   C29993 * (ae * (C29994 * C30067 + C30164 * ae) +
                             C29993 * (ae * C30106 +
                                       C29994 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C1216 = (3 * (C30048 + C30056 * C30128) +
                          C29993 * (2 * C30140 + C29993 * C30145)) /
                         C29951;
    const double C1359 =
        (C30048 + C30056 * C30128 + C29994 * (C29994 * C30145 + C30489 * ae) +
         C29994 * C30489 * ae) /
        C29951;
    const double C1765 = (C29994 * (2 * C30140 + C29993 * C30145) +
                          (2 * C30486 + C29993 * C30489) * ae) /
                         C29951;
    const double C30237 = C29993 * C30235;
    const double C6763 =
        (2 * (C29994 * C30217 + C30562 * ae) +
         C29994 * (C30217 + C29994 * (C29994 * C30235 + C30280 * ae) +
                   C29994 * C30280 * ae) +
         (C30562 + C30280 * C30188) * ae) /
        C29951;
    const double C30300 = C30292 + C30298;
    const double C30109 = C30001 * C30108;
    const double C1643 =
        (ae * C30097 + C29994 * C30030 +
         ae * (C29994 * C29993 * C30069 + C29993 * C30170 * ae) +
         C29993 * (ae * (C29994 * C30069 + C30170 * ae) +
                   C29993 * (ae * C30108 +
                             C29994 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C2233 =
        (ae * (C30058 + C29994 * (C29994 * C30069 + C30170 * ae) +
               C29994 * C30170 * ae) +
         C29993 * (C30030 + ae * C29994 * C30108 +
                   C29994 * (ae * C30108 +
                             C29994 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C2355 =
        (2 * (ae * C30097 + C29994 * C30030) + ae * (C30097 + C30108 * C30188) +
         C29994 * (C30030 + ae * C29994 * C30108 +
                   C29994 * (ae * C30108 +
                             C29994 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C1476 =
        (2 * (C29993 * C30097 + C30417 * ae) +
         C29993 * (C30097 + C29993 * (C29993 * C30108 + C30170 * ae) +
                   C29993 * C30170 * ae) +
         (C30417 + C30170 * C30128) * ae) /
        C29951;
    const double C1642 =
        (C29994 * (C30097 + C29993 * (C29993 * C30108 + C30170 * ae) +
                   C29993 * C30170 * ae)) /
        C29951;
    const double C2232 = (C29993 * C30097 + C30417 * ae +
                          (C29993 * C30108 + C30170 * ae) * C30188) /
                         C29951;
    const double C2354 =
        (2 * C29994 * C30097 + C29994 * (C30097 + C30108 * C30188)) / C29951;
    const double C2083 =
        (3 * (C30019 + ae * C30196 + C29994 * C30182) +
         ae * (2 * C30196 + C29994 * C30198) +
         C29994 * (2 * C30182 + ae * C30198 +
                   C29994 * (C30028 + ae * C29994 * C30106 +
                             C29994 * (ae * C30106 +
                                       C29994 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C2481 =
        (ae * (2 * (C29994 * C30056 + C30148 * ae) +
               C29994 * (C30056 + C29994 * (C29994 * C30067 + C30164 * ae) +
                         C29994 * C30164 * ae) +
               (C30148 + C30164 * C30188) * ae) +
         C29993 * (2 * C30182 + ae * C30198 +
                   C29994 * (C30028 + ae * C29994 * C30106 +
                             C29994 * (ae * C30106 +
                                       C29994 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C2077 = (3 * (C30087 + C30095 * C30188) +
                          C29994 * (2 * C30196 + C29994 * C30198)) /
                         C29951;
    const double C30364 = C29994 * C30363;
    const double C30375 = C30373 + C30374;
    const double C184 = C176 + C177;
    const double C384 = C372 * C30999;
    const double C13396 = C372 * C13222;
    const double C13391 = C372 * C13223;
    const double C1011 = C1005 * C30999;
    const double C13553 = C1005 * C13223;
    const double C14032 = C1005 * C13222;
    const double C1493 = C1489 * C30999;
    const double C13398 = C1489 * C13223;
    const double C14545 = C1489 * C13222;
    const double C383 = C371 * C114;
    const double C13395 = C371 * C13226;
    const double C13392 = C371 * C13227;
    const double C586 = C574 * C114;
    const double C13557 = C574 * C13226;
    const double C1010 = C1004 * C114;
    const double C13554 = C1004 * C13227;
    const double C14031 = C1004 * C13226;
    const double C1494 = C1490 * C114;
    const double C13397 = C1490 * C13227;
    const double C14546 = C1490 * C13226;
    const double C1660 = C1656 * C114;
    const double C14033 = C1656 * C13227;
    const double C14744 = C1656 * C13226;
    const double C2372 = C2368 * C114;
    const double C15582 = C2368 * C13226;
    const double C5592 = C5585 + C5586;
    const double C25486 = C25475 + C25476;
    const double C5734 = C5719 + C5720;
    const double C25233 = C25225 + C25226;
    const double C25661 = C25639 + C25640;
    const double C5399 = C5391 + C5392;
    const double C24621 = C24609 + C24610;
    const double C25665 = C25647 + C25648;
    const double C5736 = C5723 + C5724;
    const double C25668 = C25653 + C25654;
    const double C25666 = C25649 + C25650;
    const double C5738 = C5727 + C5728;
    const double C25484 = C25471 + C25472;
    const double C26134 = C26127 + C26128;
    const double C6777 = C6771 + C6772;
    const double C25662 = C25641 + C25642;
    const double C26974 = C26967 + C26968;
    const double C185 = C178 + C179;
    const double C391 = C379 + C380;
    const double C594 = C582 + C583;
    const double C163 = C31012 * C133;
    const double C366 = C31012 * C327;
    const double C708 = C31012 * C329;
    const double C5590 = C31012 * C5577;
    const double C160 = C113 * C132;
    const double C566 = C113 * C529;
    const double C19475 = C18765 * C529;
    const double C818 = C113 * C531;
    const double C18791 = C18765 * C531;
    const double C30425 = C30423 + C30424;
    const double C2231 =
        (C29993 * C30058 + C29994 * (C29994 * C29993 * C30069 + C30546 * ae) +
         C29994 * C30546 * ae) /
        C29951;
    const double C2230 = C29993 * C30417 + C30546 * C30188;
    const double C10904 = 4 * (2 * C30607 + C29994 * C30610) +
                          C29994 * (3 * C30610 + C29994 * C30666);
    const double C30575 = C30572 + C30573;
    const double C5838 = 4 * (2 * C30478 + C29993 * C30481) +
                         C29993 * (3 * C30481 + C29993 * C30595);
    const double C5994 = C29994 * (3 * C30481 + C29993 * C30595);
    const double C6552 = 2 * C30478 + C29993 * C30481 + C30595 * C30188;
    const double C10802 = 4 * (2 * C30533 + C29994 * C30536) +
                          C29994 * (3 * C30536 + C29994 * C30657);
    const double C30641 = C30638 + C30639;
    const double C31055 = C30793 * C30781;
    const double C31092 = C31060 + C30793;
    const double C31063 = C30802 / C30783;
    const double C31059 = C30802 * C30781;
    const double C695 = C31134 - (C30793 * C30784) / C30779;
    const double C31073 = C30875 * C30869;
    const double C31107 = C31075 + C30875;
    const double C31077 = C30882 / C30783;
    const double C31074 = C30882 * C30869;
    const double C1468 = C31138 - (C30875 * C30871) / C30779;
    const double C31079 = C30917 * C30911;
    const double C31113 = C31081 + C30917;
    const double C31083 = C30924 / C30783;
    const double C31080 = C30924 * C30911;
    const double C2348 = C31140 - (C30917 * C30913) / C30779;
    const double C180 = C170 * C114;
    const double C13244 = C170 * C13226;
    const double C385 = C373 * C114;
    const double C13406 = C373 * C13226;
    const double C13401 = C373 * C13227;
    const double C387 = C375 * C114;
    const double C13239 = C375 * C13227;
    const double C13702 = C375 * C13226;
    const double C588 = C576 * C114;
    const double C13568 = C576 * C13226;
    const double C590 = C578 * C114;
    const double C13836 = C578 * C13226;
    const double C1012 = C1006 * C114;
    const double C13563 = C1006 * C13227;
    const double C14038 = C1006 * C13226;
    const double C2250 = C2246 * C114;
    const double C13559 = C2246 * C13227;
    const double C15446 = C2246 * C13226;
    const double C5588 = C31012 * C5580;
    const double C181 = C171 * C30999;
    const double C13243 = C171 * C13222;
    const double C386 = C374 * C30999;
    const double C13405 = C374 * C13222;
    const double C13402 = C374 * C13223;
    const double C388 = C376 * C30999;
    const double C13240 = C376 * C13223;
    const double C13701 = C376 * C13222;
    const double C589 = C577 * C30999;
    const double C13567 = C577 * C13222;
    const double C591 = C579 * C30999;
    const double C13835 = C579 * C13222;
    const double C1013 = C1007 * C30999;
    const double C13564 = C1007 * C13223;
    const double C14037 = C1007 * C13222;
    const double C2367 = C2361 + C2362;
    const double C19194 = C19169 + C19170;
    const double C21276 = C21269 + C21270;
    const double C21275 = C21267 + C21268;
    const double C2245 = C2239 + C2240;
    const double C19700 = C19687 + C19688;
    const double C21134 = C21127 + C21128;
    const double C1655 = C1649 + C1650;
    const double C19000 = C18975 + C18976;
    const double C20424 = C20417 + C20418;
    const double C6561 = C6557 + C6558;
    const double C20423 = C20415 + C20416;
    const double C15583 = C15577 + C15578;
    const double C21133 = C21125 + C21126;
    const double C6108 = C31012 * C5714;
    const double C25474 = C18763 * C5714;
    const double C5730 = C31012 * C5713;
    const double C26126 = C18763 * C5713;
    const double C5576 =
        (4 * (2 * C30472 + C29993 * C30565 + C30473 * ae) +
         C29993 *
             (3 * C30565 +
              C29993 * (2 * C30561 +
                        C29993 * (C30085 + C29993 * (C29993 * C30093 + C30261) +
                                  C30316) +
                        C30248 * ae) +
              C30562 * ae) +
         (3 * C30473 + C29993 * C30562) * ae) /
        C29951;
    const double C363 = C113 * C326;
    const double C705 = C113 * C328;
    const double C569 = C31012 * C530;
    const double C19480 = C18763 * C530;
    const double C821 = C31012 * C532;
    const double C18796 = C18763 * C532;
    const double C1000 = C113 * C982;
    const double C19333 = C18765 * C982;
    const double C1003 = C31012 * C983;
    const double C19338 = C18763 * C983;
    const double C162 = C113 * C120;
    const double C365 = C113 * C309;
    const double C707 = C113 * C310;
    const double C568 = C113 * C512;
    const double C19479 = C18765 * C512;
    const double C820 = C113 * C513;
    const double C18795 = C18765 * C513;
    const double C1002 = C113 * C974;
    const double C19337 = C18765 * C974;
    const double C2244 = C2237 + C2238;
    const double C19703 = C19693 + C19694;
    const double C2235 = C113 * C1343;
    const double C19689 = C18765 * C1343;
    const double C1645 = C113 * C1349;
    const double C18985 = C18765 * C1349;
    const double C2366 = C2359 + C2360;
    const double C19201 = C19183 + C19184;
    const double C1492 = C1488 * C114;
    const double C13404 = C1488 * C13227;
    const double C1658 = C1654 * C114;
    const double C14036 = C1654 * C13227;
    const double C15586 = C15584 * C13227;
    const double C30658 = C30656 + C30653;
    const double C30598 = C30597 + C30591;
    const double C5847 = C5843 + C5844;
    const double C6003 = C5999 + C6000;
    const double C20217 = C20209 + C20210;
    const double C5848 = C5845 + C5846;
    const double C6562 = C6559 + C6560;
    const double C20425 = C20419 + C20420;
    const double C6004 = C6001 + C6002;
    const double C20219 = C20213 + C20214;
    const double C21277 = C21271 + C21272;
    const double C30667 = C30665 + C30662;
    const double C26975 = C26969 + C26970;
    const double C5732 = C31012 * C5708;
    const double C26130 = C18763 * C5708;
    const double C6110 = C31012 * C5710;
    const double C25478 = C18763 * C5710;
    const double C5589 = C113 * C5574;
    const double C5731 = C113 * C5704;
    const double C26129 = C18765 * C5704;
    const double C6109 = C113 * C5705;
    const double C25477 = C18765 * C5705;
    const double C6776 = C6769 + C6770;
    const double C25669 = C25655 + C25656;
    const double C30283 = ae * C30281;
    const double C6403 =
        (2 * C30174 + ae * C30190 + C29994 * C30251 +
         ae * (2 * (C29994 * C30205 + C30157 * ae) +
               C29994 * (C30205 + C29994 * C30319 + C29994 * C30245 * ae) +
               (C30157 + C30245 * C30188) * ae) +
         C29993 * (ae * (2 * C30256 + C29994 * C30281 +
                         (C30117 + C30119 * C30188) * ae) +
                   C29993 * (2 * C30247 + ae * (C30085 + C30093 * C30188) +
                             C29994 * C30279))) /
        std::pow(C29951, 2);
    const double C6404 =
        (ae * (3 * (C30042 + C29994 * C30256 + C30327 * ae) +
               C29994 * (2 * C30256 + C29994 * C30281 + C30330 * ae) +
               (2 * C30327 + C29994 * C30330) * ae) +
         C29993 * (3 * C30251 + ae * (2 * C30241 + C29994 * C30331) +
                   C29994 * (2 * C30247 + ae * C30331 + C29994 * C30279))) /
        std::pow(C29951, 2);
    const double C6405 =
        (3 * C30251 + ae * (2 * C30241 + C29994 * C30331) +
         C29994 * (2 * C30247 + ae * C30331 + C29994 * C30279) +
         ae * (3 * (C30205 + C29994 * C30319 + C30333 * ae) +
               C29994 * (2 * C30319 +
                         C29994 * (C30221 +
                                   C29994 * (C29994 * C29993 * C30065 +
                                             C30268 * ae) +
                                   C29994 * C30268 * ae) +
                         C30337 * ae) +
               (2 * C30333 + C29994 * C30337) * ae) +
         C29993 *
             (ae * (3 * C30281 +
                    C29994 *
                        (2 * C30269 +
                         C29994 * (C30054 +
                                   C29994 * (C29994 * C30065 + C30162 * ae) +
                                   C29994 * C30162 * ae) +
                         C30338 * ae) +
                    (2 * C30262 + C29994 * C30338) * ae) +
              C29993 *
                  (3 * C30279 + ae * (2 * C30263 + C29994 * C30339) +
                   C29994 * (2 * C30272 + ae * C30339 +
                             C29994 * (C30026 + ae * C29994 * C30104 +
                                       C29994 * (ae * C30104 +
                                                 C29994 * std::pow(C29998, 8) *
                                                     bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C30636 = C29994 * C30281;
    const double C10549 =
        (4 * (2 * C30528 + C29994 * C30633 + C30529 * ae) +
         C29994 * (3 * C30633 +
                   C29994 * (2 * C30256 + C29994 * C30281 + C30330 * ae) +
                   C30632 * ae) +
         (3 * C30529 + C29994 * C30632) * ae) /
        C29951;
    const double C30579 = C29993 * C30578;
    const double C6397 =
        (2 * C29994 * C30565 + C29994 * (C30565 + C30578 * C30188)) / C29951;
    const double C6402 =
        (3 * (C30565 + C30578 * C30188) +
         C29994 *
             (2 * C29994 * C30578 +
              C29994 *
                  (C30578 + (C30093 + C29993 * (C29993 * C30104 + C30162 * ae) +
                             C30268 * ae) *
                                C30188))) /
        C29951;
    const double C364 = C31012 * C339;
    const double C706 = C31012 * C340;
    const double C567 = C31012 * C542;
    const double C19476 = C18763 * C542;
    const double C819 = C31012 * C543;
    const double C18792 = C18763 * C543;
    const double C1001 = C31012 * C989;
    const double C19334 = C18763 * C989;
    const double C2358 = C31012 * C2078;
    const double C19180 = C18763 * C2078;
    const double C1491 = C1487 * C30999;
    const double C13403 = C1487 * C13223;
    const double C30238 = C30226 + C30236;
    const double C30354 = C30353 + C30352;
    const double C30324 = C30323 + C30322;
    const double C6555 =
        (2 * (ae * (C30051 + C29994 * C30307 + C29994 * C30159 * ae) +
              C29993 * C30347) +
         ae * (C30138 + C29994 * (C29994 * C30296 + C30312 * ae) +
               C29994 * C30312 * ae) +
         C29993 *
             (C30347 +
              ae * (C30286 + C29994 * (C29994 * C29993 * C30289 + C30343 * ae) +
                    C29994 * C30343 * ae) +
              C29993 *
                  (ae * (C30062 + C29994 * (C29994 * C30289 + C30306 * ae) +
                         C29994 * C30306 * ae) +
                   C29993 * (C30288 + ae * C29994 * C30344 +
                             C29994 * (ae * C30344 + C29994 * C30001 *
                                                         std::pow(C29998, 8) *
                                                         bs[8] * C29999))))) /
        std::pow(C29951, 2);
    const double C6663 =
        (2 * C30178 + ae * C30194 + C29994 * C30347 +
         ae * (2 * (C29994 * C30286 + C30160 * ae) +
               C29994 *
                   (C30286 + C29994 * (C29994 * C29993 * C30289 + C30343 * ae) +
                    C29994 * C30343 * ae) +
               (C30160 + C30343 * C30188) * ae) +
         C29993 *
             (ae *
                  (2 * C30307 +
                   C29994 * (C30062 + C29994 * (C29994 * C30289 + C30306 * ae) +
                             C29994 * C30306 * ae) +
                   (C30159 + C30306 * C30188) * ae) +
              C29993 *
                  (2 * C30308 + ae * (C30101 + C30344 * C30188) +
                   C29994 * (C30288 + ae * C29994 * C30344 +
                             C29994 * (ae * C30344 + C29994 * C30001 *
                                                         std::pow(C29998, 8) *
                                                         bs[8] * C29999))))) /
        std::pow(C29951, 2);
    const double C10703 =
        (ae * (3 * (C30051 + C29994 * C30307 + C30367 * ae) +
               C29994 * (2 * C30307 +
                         C29994 * (C30062 +
                                   C29994 * (C29994 * C30289 + C30306 * ae) +
                                   C29994 * C30306 * ae) +
                         C30370 * ae) +
               (2 * C30367 + C29994 * C30370) * ae) +
         C29993 * (3 * C30347 + ae * (2 * C30341 + C29994 * C30371) +
                   C29994 * (2 * C30308 + ae * C30371 +
                             C29994 * (C30288 + ae * C29994 * C30344 +
                                       C29994 * (ae * C30344 +
                                                 C29994 * C30001 *
                                                     std::pow(C29998, 8) *
                                                     bs[8] * C29999))))) /
        std::pow(C29951, 2);
    const double C30071 = C30061 + C30070;
    const double C30239 = C30224 + C30237;
    const double C5841 =
        (4 * (2 * C30137 + ae * C30138 + C29993 * C30299) +
         ae * (3 * C30138 + C29993 * C30300) +
         C29993 * (3 * C30299 + ae * C30300 +
                   C29993 * (2 * C30295 + ae * C30296 +
                             C29993 * (C30288 + ae * C29993 * C30289 +
                                       C29993 * (ae * C30289 +
                                                 C29993 * C30001 *
                                                     std::pow(C29998, 8) *
                                                     bs[8] * C29999))))) /
        std::pow(C29951, 2);
    const double C5997 =
        (3 * (C30178 + ae * (C29994 * C30286 + C30160 * ae) + C29993 * C30313) +
         ae * (C29994 * C30300 + (2 * C30160 + C29993 * C30312) * ae) +
         C29993 *
             (2 * C30313 + ae * (C29994 * C30296 + C30312 * ae) +
              C29993 *
                  (C30308 +
                   ae * (C29994 * C29993 * C30289 + C29993 * C30306 * ae) +
                   C29993 * (ae * (C29994 * C30289 + C30306 * ae) +
                             C29993 * (ae * C30001 * C30104 +
                                       C29994 * C30001 * std::pow(C29998, 8) *
                                           bs[8] * C29999))))) /
        std::pow(C29951, 2);
    const double C5839 = (4 * (2 * C30133 + C29993 * C30138) +
                          C29993 * (3 * C30138 + C29993 * C30300)) /
                         C29951;
    const double C5995 = (C29994 * (3 * C30138 + C29993 * C30300) +
                          (3 * C30481 + C29993 * C30595) * ae) /
                         C29951;
    const double C6553 =
        (2 * C30133 + C29993 * C30138 +
         C29994 * (C29994 * C30300 + C30595 * ae) + C29994 * C30595 * ae) /
        C29951;
    const double C30110 = C30100 + C30109;
    const double C30365 = C30360 + C30364;
    const double C10805 =
        (4 * (2 * C30178 + ae * C30194 + C29994 * C30347) +
         ae * (3 * C30194 + C29994 * C30375) +
         C29994 * (3 * C30347 + ae * C30375 +
                   C29994 * (2 * C30308 + ae * C30371 +
                             C29994 * (C30288 + ae * C29994 * C30344 +
                                       C29994 * (ae * C30344 +
                                                 C29994 * C30001 *
                                                     std::pow(C29998, 8) *
                                                     bs[8] * C29999))))) /
        std::pow(C29951, 2);
    const double C10804 = (4 * (2 * C30192 + C29994 * C30194) +
                           C29994 * (3 * C30194 + C29994 * C30375)) /
                          C29951;
    const double C172 = C160 + C161;
    const double C121 = 5 * (3 * C30411 + C30001 * C30417) +
                        C30001 * (4 * C30417 + C30001 * C30425);
    const double C311 = 3 * C30411 + C30001 * C30417 + C30425 * C30128;
    const double C514 = 3 * C30411 + C30001 * C30417 + C30425 * C30188;
    const double C699 = C29993 * (4 * C30417 + C30001 * C30425);
    const double C812 = C29994 * (4 * C30417 + C30001 * C30425);
    const double C975 = C29994 * C29993 * C30425;
    const double C5575 = 5 * (3 * C30473 + C29993 * C30562) +
                         C29993 * (4 * C30562 + C29993 * C30575);
    const double C5706 = 3 * C30473 + C29993 * C30562 + C30575 * C30188;
    const double C6102 = C29994 * (4 * C30562 + C29993 * C30575);
    const double C10547 = 5 * (3 * C30529 + C29994 * C30632) +
                          C29994 * (4 * C30632 + C29994 * C30641);
    const double C31088 = C31055 / C30779;
    const double C31121 = C31092 / C30783;
    const double C31122 = C31094 + C31063;
    const double C697 = C31063 - C30800 / C30797;
    const double C31091 = C31059 / C30779;
    const double C31104 = C31073 / C30779;
    const double C31128 = C31107 / C30783;
    const double C31129 = C31108 + C31077;
    const double C1470 = C31077 - C30880 / C30797;
    const double C31106 = C31074 / C30779;
    const double C31110 = C31079 / C30779;
    const double C31131 = C31113 / C30783;
    const double C31132 = C31114 + C31083;
    const double C2350 = C31083 - C30922 / C30797;
    const double C31112 = C31080 / C30779;
    const double C186 = C180 + C181;
    const double C392 = C385 + C386;
    const double C704 = C387 + C388;
    const double C595 = C588 + C589;
    const double C817 = C590 + C591;
    const double C1016 = C1012 + C1013;
    const double C2371 = C2367 * C30999;
    const double C15581 = C2367 * C13222;
    const double C2249 = C2245 * C30999;
    const double C13560 = C2245 * C13223;
    const double C15445 = C2245 * C13222;
    const double C1659 = C1655 * C30999;
    const double C14034 = C1655 * C13223;
    const double C14743 = C1655 * C13222;
    const double C15443 = C6561 * C13223;
    const double C15585 = C15583 * C13223;
    const double C5587 = C113 * C5576;
    const double C173 = C162 + C163;
    const double C378 = C365 + C366;
    const double C710 = C707 + C708;
    const double C581 = C568 + C569;
    const double C19485 = C19479 + C19480;
    const double C823 = C820 + C821;
    const double C18813 = C18795 + C18796;
    const double C1009 = C1002 + C1003;
    const double C19343 = C19337 + C19338;
    const double C2248 = C2244 * C114;
    const double C13566 = C2244 * C13227;
    const double C2243 = C2235 + C2236;
    const double C19701 = C19689 + C19690;
    const double C1653 = C1645 + C1646;
    const double C19005 = C18985 + C18986;
    const double C2370 = C2366 * C114;
    const double C10803 =
        (4 * (2 * C30535 + C29994 * C30658 + C30536 * ae) +
         C29994 *
             (3 * C30658 +
              C29994 *
                  (2 * C30307 +
                   C29994 * (C30062 + C29994 * (C29994 * C30289 + C30306 * ae) +
                             C29994 * C30306 * ae) +
                   C30370 * ae) +
              C30657 * ae) +
         (3 * C30536 + C29994 * C30657) * ae) /
        C29951;
    const double C5840 =
        (4 * (2 * C30480 + C29993 * C30598 + C30481 * ae) +
         C29993 *
             (3 * C30598 +
              C29993 *
                  (2 * C30594 +
                   C29993 * (C30101 + C29993 * (C29993 * C30344 + C30306 * ae) +
                             C30343 * ae) +
                   C30312 * ae) +
              C30595 * ae) +
         (3 * C30481 + C29993 * C30595) * ae) /
        C29951;
    const double C5996 =
        (C29994 *
         (3 * C30598 +
          C29993 *
              (2 * C30594 +
               C29993 * (C30101 + C29993 * (C29993 * C30344 + C30306 * ae) +
                         C30343 * ae) +
               C30312 * ae) +
          C30595 * ae)) /
        C29951;
    const double C6554 =
        (2 * C30480 + C29993 * C30598 + C30481 * ae +
         (2 * C30594 +
          C29993 * (C30101 + C29993 * (C29993 * C30344 + C30306 * ae) +
                    C30343 * ae) +
          C30312 * ae) *
             C30188) /
        C29951;
    const double C6662 =
        (2 * C29994 * C30598 +
         C29994 * (C30598 + (C30101 + C29993 * (C29993 * C30344 + C30306 * ae) +
                             C30343 * ae) *
                                C30188)) /
        C29951;
    const double C14543 = C5847 * C13223;
    const double C14741 = C6003 * C13223;
    const double C14544 = C5848 * C13227;
    const double C15444 = C6562 * C13227;
    const double C14742 = C6004 * C13227;
    const double C10905 =
        (4 * (2 * C30609 + C29994 * C30667 + C30610 * ae) +
         C29994 * (3 * C30667 +
                   C29994 * (2 * C30319 +
                             C29994 * (C30221 +
                                       C29994 * (C29994 * C29993 * C30065 +
                                                 C30268 * ae) +
                                       C29994 * C30268 * ae) +
                             C30337 * ae) +
                   C30666 * ae) +
         (3 * C30610 + C29994 * C30666) * ae) /
        C29951;
    const double C5594 = C5589 + C5590;
    const double C5740 = C5731 + C5732;
    const double C26135 = C26129 + C26130;
    const double C6112 = C6109 + C6110;
    const double C25487 = C25477 + C25478;
    const double C30284 = C30283 + C30282;
    const double C6768 = C31012 * C6403;
    const double C25652 = C18763 * C6403;
    const double C26966 = C18763 * C6404;
    const double C30640 = C30635 + C30636;
    const double C30580 = C30569 + C30579;
    const double C6767 = C113 * C6397;
    const double C25651 = C18765 * C6397;
    const double C377 = C363 + C364;
    const double C709 = C705 + C706;
    const double C580 = C566 + C567;
    const double C19483 = C19475 + C19476;
    const double C822 = C818 + C819;
    const double C18811 = C18791 + C18792;
    const double C1008 = C1000 + C1001;
    const double C19341 = C19333 + C19334;
    const double C2365 = C2357 + C2358;
    const double C19199 = C19179 + C19180;
    const double C6765 =
        (2 * (ae * (2 * C30256 + C29994 * C30281 + C30330 * ae) +
              C29993 * C30354) +
         ae * (2 * (C29994 * C30212 + C30248 * ae) +
               C29994 * (C30212 + C29994 * (C29994 * C30230 + C30273 * ae) +
                         C29994 * C30273 * ae) +
               (C30248 + C30273 * C30188) * ae) +
         C29993 *
             (C30354 +
              ae *
                  (2 * C30319 +
                   C29994 * (C30221 +
                             C29994 * (C29994 * C29993 * C30065 + C30268 * ae) +
                             C29994 * C30268 * ae) +
                   C30337 * ae) +
              C29993 *
                  (ae * (2 * C30269 +
                         C29994 * (C30054 +
                                   C29994 * (C29994 * C30065 + C30162 * ae) +
                                   C29994 * C30162 * ae) +
                         C30338 * ae) +
                   C29993 * (2 * C30272 + ae * C30339 +
                             C29994 * (C30026 + ae * C29994 * C30104 +
                                       C29994 * (ae * C30104 +
                                                 C29994 * std::pow(C29998, 8) *
                                                     bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C10552 =
        (4 * (2 * C30174 + ae * C30190 + C29994 * C30251) +
         ae * (3 * C30190 + C29994 * C30358) +
         C29994 * (3 * C30251 + ae * C30358 + C29994 * C30354)) /
        std::pow(C29951, 2);
    const double C341 =
        (3 * C30019 + C30001 * C30030 + ae * C29993 * C30071 +
         C29993 * (ae * C30071 +
                   C29993 * (3 * C30028 +
                             C30001 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C702 =
        (ae * (4 * C30058 + C30001 * C30071) +
         C29993 * (4 * C30030 +
                   C30001 * (3 * C30028 +
                             C30001 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C134 = (5 * (3 * C30048 + C30001 * C30058) +
                         C30001 * (4 * C30058 + C30001 * C30071)) /
                        C29951;
    const double C330 =
        (3 * C30048 + C30001 * C30058 + C30071 * C30128) / C29951;
    const double C533 =
        (3 * C30048 + C30001 * C30058 +
         C29994 * (C29994 * C30071 + C30425 * ae) + C29994 * C30425 * ae) /
        C29951;
    const double C700 = (C29993 * (4 * C30058 + C30001 * C30071)) / C29951;
    const double C813 = (C29994 * (4 * C30058 + C30001 * C30071) +
                         (4 * C30417 + C30001 * C30425) * ae) /
                        C29951;
    const double C984 =
        (C29994 * C29993 * C30071 + C29993 * C30425 * ae) / C29951;
    const double C5581 =
        (5 * (3 * C30216 + ae * C30217 + C29993 * C30238) +
         ae * (4 * C30217 + C29993 * C30239) +
         C29993 *
             (4 * C30238 + ae * C30239 +
              C29993 *
                  (3 * C30234 + ae * C30235 +
                   C29993 * (2 * C30228 + ae * C30230 +
                             C29993 * (C30026 + ae * C29993 * C30065 +
                                       C29993 * (ae * C30065 +
                                                 C29993 * std::pow(C29998, 8) *
                                                     bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C6105 =
        (4 * (2 * C30258 + ae * (C29994 * C30212 + C30248 * ae) +
              C29993 * C30324) +
         ae * (C29994 * C30239 + (3 * C30248 + C29993 * C30280) * ae) +
         C29993 *
             (3 * C30324 + ae * (C29994 * C30235 + C30280 * ae) +
              C29993 *
                  (2 * C30320 + ae * (C29994 * C30230 + C30273 * ae) +
                   C29993 *
                       (C30272 + ae * (C29994 * C29993 * C30065 + C30268 * ae) +
                        C29993 * (ae * (C29994 * C30065 + C30162 * ae) +
                                  C29993 * (ae * C30104 +
                                            C29994 * std::pow(C29998, 8) *
                                                bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C5578 = (5 * (3 * C30131 + C29993 * C30217) +
                          C29993 * (4 * C30217 + C29993 * C30239)) /
                         C29951;
    const double C5711 =
        (3 * C30131 + C29993 * C30217 +
         C29994 * (C29994 * C30239 + C30575 * ae) + C29994 * C30575 * ae) /
        C29951;
    const double C6103 = (C29994 * (4 * C30217 + C29993 * C30239) +
                          (4 * C30562 + C29993 * C30575) * ae) /
                         C29951;
    const double C544 =
        (3 * C30019 + C30001 * C30030 + ae * C29994 * C30110 +
         C29994 * (ae * C30110 +
                   C29994 * (3 * C30028 +
                             C30001 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C815 =
        (ae * (4 * C30097 + C30001 * C30110) +
         C29994 * (4 * C30030 +
                   C30001 * (3 * C30028 +
                             C30001 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C990 =
        (ae * (C29994 * C30071 +
               (3 * (C30117 + C30119 * C30009) +
                C30001 * (2 * C30001 * C30119 +
                          C30001 * (C30119 + C30015 * C30014 * C30009))) *
                   ae) +
         C29993 * (ae * C30110 +
                   C29994 * (3 * C30028 +
                             C30001 * (2 * C30001 * C30026 +
                                       C30001 * (C30026 + std::pow(C29998, 8) *
                                                              bs[8] * C29999 *
                                                              C30009))))) /
        std::pow(C29951, 2);
    const double C135 = (5 * (3 * C30087 + C30001 * C30097) +
                         C30001 * (4 * C30097 + C30001 * C30110)) /
                        C29951;
    const double C331 =
        (3 * C30087 + C30001 * C30097 +
         C29993 * (C29993 * C30110 + C30425 * ae) + C29993 * C30425 * ae) /
        C29951;
    const double C534 =
        (3 * C30087 + C30001 * C30097 + C30110 * C30188) / C29951;
    const double C701 = (C29993 * (4 * C30097 + C30001 * C30110) +
                         (4 * C30417 + C30001 * C30425) * ae) /
                        C29951;
    const double C814 = (C29994 * (4 * C30097 + C30001 * C30110)) / C29951;
    const double C985 = (C29994 * (C29993 * C30110 + C30425 * ae)) / C29951;
    const double C10553 =
        (5 * (3 * C30251 + ae * C30358 + C29994 * C30354) +
         ae * (4 * C30358 + C29994 * C30365) +
         C29994 *
             (4 * C30354 + ae * C30365 +
              C29994 *
                  (3 * C30279 + ae * C30363 +
                   C29994 * (2 * C30272 + ae * C30339 +
                             C29994 * (C30026 + ae * C29994 * C30104 +
                                       C29994 * (ae * C30104 +
                                                 C29994 * std::pow(C29998, 8) *
                                                     bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C10907 =
        (ae * (4 * (2 * C30256 + C29994 * C30281 + C30330 * ae) +
               C29994 * (3 * C30281 +
                         C29994 * (2 * C30269 +
                                   C29994 * (C30054 +
                                             C29994 * (C29994 * C30065 +
                                                       C30162 * ae) +
                                             C29994 * C30162 * ae) +
                                   C30338 * ae) +
                         C30379 * ae) +
               (3 * C30330 + C29994 * C30379) * ae) +
         C29993 *
             (4 * C30354 + ae * C30365 +
              C29994 *
                  (3 * C30279 + ae * C30363 +
                   C29994 * (2 * C30272 + ae * C30339 +
                             C29994 * (C30026 + ae * C29994 * C30104 +
                                       C29994 * (ae * C30104 +
                                                 C29994 * std::pow(C29998, 8) *
                                                     bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C10551 = (5 * (3 * C30190 + C29994 * C30358) +
                           C29994 * (4 * C30358 + C29994 * C30365)) /
                          C29951;
    const double C182 = C172 * C30999;
    const double C31142 = C31088 + C31134;
    const double C696 = C31121 - (C30802 * C30784) / C30779;
    const double C111 = C31122 / C30783 - C30800 / C31095;
    const double C31135 = C31091 + C31121;
    const double C31143 = C31104 + C31138;
    const double C1469 = C31128 - (C30882 * C30871) / C30779;
    const double C1197 = C31129 / C30783 - C30880 / C31095;
    const double C31139 = C31106 + C31128;
    const double C31144 = C31110 + C31140;
    const double C2349 = C31131 - (C30924 * C30913) / C30779;
    const double C2058 = C31132 / C30783 - C30922 / C31095;
    const double C31141 = C31112 + C31131;
    const double C5593 = C5587 + C5588;
    const double C183 = C173 * C114;
    const double C390 = C378 * C114;
    const double C13700 = C378 * C13227;
    const double C712 = C710 * C114;
    const double C13242 = C710 * C13227;
    const double C593 = C581 * C114;
    const double C825 = C823 * C114;
    const double C1015 = C1009 * C114;
    const double C13834 = C1009 * C13227;
    const double C2247 = C2243 * C30999;
    const double C13565 = C2243 * C13223;
    const double C1657 = C1653 * C30999;
    const double C14035 = C1653 * C13223;
    const double C5715 =
        (3 * (C30251 +
              ae * (C30205 + C29994 * (C29994 * C30221 + C30245 * ae) +
                    C29994 * C30245 * ae) +
              C29993 * C30284) +
         ae * (C30217 + C29994 * (C29994 * C30235 + C30280 * ae) +
               C29994 * C30280 * ae) +
         C29993 *
             (2 * C30284 +
              ae * (C30212 + C29994 * (C29994 * C30230 + C30273 * ae) +
                    C29994 * C30273 * ae) +
              C29993 *
                  (C30279 +
                   ae * (C30221 +
                         C29994 * (C29994 * C29993 * C30065 + C30268 * ae) +
                         C29994 * C30268 * ae) +
                   C29993 * (ae * (C30054 +
                                   C29994 * (C29994 * C30065 + C30162 * ae) +
                                   C29994 * C30162 * ae) +
                             C29993 * (C30026 + ae * C29994 * C30104 +
                                       C29994 * (ae * C30104 +
                                                 C29994 * std::pow(C29998, 8) *
                                                     bs[8] * C29999)))))) /
        std::pow(C29951, 2);
    const double C26973 = C26965 + C26966;
    const double C30642 = C30640 + C30637;
    const double C30581 = C30580 + C30571;
    const double C6775 = C6767 + C6768;
    const double C25667 = C25651 + C25652;
    const double C389 = C377 * C30999;
    const double C13699 = C377 * C13223;
    const double C711 = C709 * C30999;
    const double C13241 = C709 * C13223;
    const double C592 = C580 * C30999;
    const double C824 = C822 * C30999;
    const double C1014 = C1008 * C30999;
    const double C13833 = C1008 * C13223;
    const double C2369 = C2365 * C30999;
    const double C108 =
        (C31133 + 2 * C30793) / C30783 - (C31142 * C30784) / C30779;
    const double C109 =
        (C31120 + 2 * C30802 + C31142) / C30783 - (C31135 * C30784) / C30779;
    const double C110 = (C31093 + C30799 / C30779 + C31135) / C30783 -
                        (C31122 * C30784) / C30779;
    const double C1194 =
        (C31136 + 2 * C30875) / C30783 - (C31143 * C30871) / C30779;
    const double C1195 =
        (C31124 + 2 * C30882 + C31143) / C30783 - (C31139 * C30871) / C30779;
    const double C1196 = (C31099 + C30879 / C30779 + C31139) / C30783 -
                         (C31129 * C30871) / C30779;
    const double C2055 =
        (C31137 + 2 * C30917) / C30783 - (C31144 * C30913) / C30779;
    const double C2056 =
        (C31126 + 2 * C30924 + C31144) / C30783 - (C31141 * C30913) / C30779;
    const double C2057 = (C31102 + C30921 / C30779 + C31141) / C30783 -
                         (C31132 * C30913) / C30779;
    const double C10550 =
        (5 * (3 * C30633 + C29994 * C30642 + C30632 * ae) +
         C29994 * (4 * C30642 +
                   C29994 * (3 * C30281 +
                             C29994 * (2 * C30269 +
                                       C29994 * (C30054 +
                                                 C29994 * (C29994 * C30065 +
                                                           C30162 * ae) +
                                                 C29994 * C30162 * ae) +
                                       C30338 * ae) +
                             C30379 * ae) +
                   C30641 * ae) +
         (4 * C30632 + C29994 * C30641) * ae) /
        C29951;
    const double C5579 =
        (5 * (3 * C30565 + C29993 * C30581 + C30562 * ae) +
         C29993 * (4 * C30581 +
                   C29993 * (3 * C30578 +
                             C29993 * (2 * C30574 +
                                       C29993 * (C30093 +
                                                 C29993 * (C29993 * C30104 +
                                                           C30162 * ae) +
                                                 C30268 * ae) +
                                       C30273 * ae) +
                             C30280 * ae) +
                   C30575 * ae) +
         (4 * C30562 + C29993 * C30575) * ae) /
        C29951;
    const double C5707 =
        (2 * C30472 + C29993 * C30565 + C30473 * ae + C30581 * C30188) / C29951;
    const double C5709 =
        (C29994 * (3 * C30565 + C29993 * C30581 + C30562 * ae)) / C29951;
    const double C5712 =
        (3 * C30565 + C29993 * C30581 + C30562 * ae +
         (3 * C30578 +
          C29993 *
              (2 * C30574 +
               C29993 * (C30093 + C29993 * (C29993 * C30104 + C30162 * ae) +
                         C30268 * ae) +
               C30273 * ae) +
          C30280 * ae) *
             C30188) /
        C29951;
    const double C6104 =
        (C29994 *
         (4 * C30581 +
          C29993 *
              (3 * C30578 +
               C29993 * (2 * C30574 +
                         C29993 * (C30093 +
                                   C29993 * (C29993 * C30104 + C30162 * ae) +
                                   C30268 * ae) +
                         C30273 * ae) +
               C30280 * ae) +
          C30575 * ae)) /
        C29951;
    const double C6764 =
        (2 * C29994 * C30581 +
         C29994 *
             (C30581 +
              (2 * C30574 +
               C29993 * (C30093 + C29993 * (C29993 * C30104 + C30162 * ae) +
                         C30268 * ae) +
               C30273 * ae) *
                  C30188)) /
        C29951;
    const double C5729 = C113 * C5707;
    const double C26125 = C18765 * C5707;
    const double C6107 = C113 * C5709;
    const double C25473 = C18765 * C5709;
    const double C5739 = C5729 + C5730;
    const double C26133 = C26125 + C26126;
    const double C6111 = C6107 + C6108;
    const double C25485 = C25473 + C25474;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C30834 * C30875 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C30834 * C30882 +
                  ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                    C4937 * C13223) *
                       C13224 +
                   (C13395 + C13396 + C13397 + C13398) * C13225) *
                      C30834 * C2948) *
                     C30793 +
                 (((C13394 + C13393 + C13392 + C13391) * C13224 +
                   (C13399 + C13400 + C13401 + C13402) * C13225) *
                      C30834 * C30882 -
                  ((C13233 + C13234 + C13235 + C13236) * C13225 +
                   (C13232 + C13231 + C13230 + C13229) * C13224) *
                      C30834 * C30875 -
                  ((C13403 + C13404 + C13405 + C13406) * C13225 +
                   (C13398 + C13397 + C13396 + C13395) * C13224) *
                      C30834 * C2948) *
                     C30802 +
                 (((C13236 + C13235 + C13234 + C13233) * C13224 +
                   (C13237 + C13238 + C13239 + C13240) * C13225) *
                      C30834 * C30875 -
                  ((C13699 + C13700 + C13701 + C13702) * C13225 +
                   (C13402 + C13401 + C13400 + C13399) * C13224) *
                      C30834 * C30882 +
                  ((C13406 + C13405 + C13404 + C13403) * C13224 +
                   (C378 * C13226 + C377 * C13222 +
                    (C113 * C1474 + C31012 * C1475) * C13227 +
                    (C113 * C1476 + C31012 * C1477) * C13223) *
                       C13225) *
                      C30834 * C2948) *
                     C2951)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31071 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C30875 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C31071) *
                      C30882 +
                  (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                     C4937 * C13223) *
                        C13224 +
                    (C13395 + C13396 + C13397 + C13398) * C13225) *
                       C31071 -
                   ((C14741 + C14742 + C14743 + C14744) * C13225 +
                    (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                     C5400 * C13226) *
                        C13224) *
                       C30921) *
                      C2948) *
                     C2688 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C31071) *
                      C30875 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C31071 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C30921) *
                      C30882 +
                  (((C14744 + C14743 + C14742 + C14741) * C13224 +
                    (C1654 * C13226 + C1653 * C13222 +
                     (C113 * C1760 + C31012 * C1765) * C13227 +
                     (C113 * C1766 + C31012 * C1769) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13403 + C13404 + C13405 + C13406) * C13225 +
                    (C13398 + C13397 + C13396 + C13395) * C13224) *
                       C31071) *
                      C2948) *
                     C30799)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C30834 * C31143 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C30834 * C31139 +
                  ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                    C4937 * C13223) *
                       C13224 +
                   (C13395 + C13396 + C13397 + C13398) * C13225) *
                      C30834 * C31129 -
                  ((C14543 + C14544 + C14545 + C14546) * C13225 +
                   (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                    C4938 * C13226) *
                       C13224) *
                      C30834 * C31109) *
                     C2688 +
                 (((C13394 + C13393 + C13392 + C13391) * C13224 +
                   (C13399 + C13400 + C13401 + C13402) * C13225) *
                      C30834 * C31139 -
                  ((C13233 + C13234 + C13235 + C13236) * C13225 +
                   (C13232 + C13231 + C13230 + C13229) * C13224) *
                      C30834 * C31143 -
                  ((C13403 + C13404 + C13405 + C13406) * C13225 +
                   (C13398 + C13397 + C13396 + C13395) * C13224) *
                      C30834 * C31129 +
                  ((C14546 + C14545 + C14544 + C14543) * C13224 +
                   (C1488 * C13226 + C1487 * C13222 +
                    (C113 * C1205 + C31012 * C1216) * C13227 +
                    (C113 * C1217 + C31012 * C1223) * C13223) *
                       C13225) *
                      C30834 * C31109) *
                     C30799)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C30834 * C2580 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C30834 * C30879) *
                     C31142 +
                 (((C13394 + C13393 + C13392 + C13391) * C13224 +
                   (C13399 + C13400 + C13401 + C13402) * C13225) *
                      C30834 * C30879 -
                  ((C13233 + C13234 + C13235 + C13236) * C13225 +
                   (C13232 + C13231 + C13230 + C13229) * C13224) *
                      C30834 * C2580) *
                     C31135 +
                 (((C13236 + C13235 + C13234 + C13233) * C13224 +
                   (C13237 + C13238 + C13239 + C13240) * C13225) *
                      C30834 * C2580 -
                  ((C13699 + C13700 + C13701 + C13702) * C13225 +
                   (C13402 + C13401 + C13400 + C13399) * C13224) *
                      C30834 * C30879) *
                     C31122 +
                 (((C13702 + C13701 + C13700 + C13699) * C13224 +
                   (C710 * C13226 + C709 * C13222 +
                    (C113 * C311 + C31012 * C330) * C13227 +
                    (C113 * C331 + C31012 * C341) * C13223) *
                       C13225) *
                      C30834 * C30879 -
                  ((C13241 + C13242 + C13243 + C13244) * C13225 +
                   (C13240 + C13239 + C13238 + C13237) * C13224) *
                      C30834 * C2580) *
                     C31103)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31137 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C31126 +
                   (((C113 * C508 + C31012 * C521) * C13226 +
                     (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                     C5734 * C13223) *
                        C13224 +
                    (C13557 + C13558 + C13559 + C13560) * C13225) *
                       C31102) *
                      C2580 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C31126 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C31137 -
                   ((C15443 + C15444 + C15445 + C15446) * C13225 +
                    (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                     C5733 * C13226) *
                        C13224) *
                       C31102) *
                      C30879) *
                     C2688 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C31126 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C31137 -
                   ((C13565 + C13566 + C13567 + C13568) * C13225 +
                    (C13560 + C13559 + C13558 + C13557) * C13224) *
                       C31102) *
                      C2580 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C31137 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C31126 +
                   ((C15446 + C15445 + C15444 + C15443) * C13224 +
                    (C2244 * C13226 + C2243 * C13222 +
                     (C113 * C1342 + C31012 * C1359) * C13227 +
                     (C113 * C1360 + C31012 * C1369) * C13223) *
                        C13225) *
                       C31102) *
                      C30879) *
                     C30799)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31071 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C2580 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C31071) *
                      C30879) *
                     C30793 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C31071) *
                      C2580 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C31071 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C30921) *
                      C30879) *
                     C30802 +
                 ((((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C31071 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C2580 +
                  (((C14038 + C14037 + C14036 + C14035) * C13224 +
                    (C1009 * C13226 + C1008 * C13222 +
                     (C113 * C1640 + C31012 * C1641) * C13227 +
                     (C113 * C1642 + C31012 * C1643) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13699 + C13700 + C13701 + C13702) * C13225 +
                    (C13402 + C13401 + C13400 + C13399) * C13224) *
                       C31071) *
                      C30879) *
                     C2951)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C30834 * C2580 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C30834 * C30879) *
                     C31142 +
                 (((C13394 + C13393 + C13392 + C13391) * C13224 +
                   (C13399 + C13400 + C13401 + C13402) * C13225) *
                      C30834 * C30879 -
                  ((C13233 + C13234 + C13235 + C13236) * C13225 +
                   (C13232 + C13231 + C13230 + C13229) * C13224) *
                      C30834 * C2580) *
                     C31135 +
                 (((C13236 + C13235 + C13234 + C13233) * C13224 +
                   (C13237 + C13238 + C13239 + C13240) * C13225) *
                      C30834 * C2580 -
                  ((C13699 + C13700 + C13701 + C13702) * C13225 +
                   (C13402 + C13401 + C13400 + C13399) * C13224) *
                      C30834 * C30879) *
                     C31122 +
                 (((C13702 + C13701 + C13700 + C13699) * C13224 +
                   (C710 * C13226 + C709 * C13222 +
                    (C113 * C311 + C31012 * C330) * C13227 +
                    (C113 * C331 + C31012 * C341) * C13223) *
                       C13225) *
                      C30834 * C30879 -
                  ((C13241 + C13242 + C13243 + C13244) * C13225 +
                   (C13240 + C13239 + C13238 + C13237) * C13224) *
                      C30834 * C2580) *
                     C31103)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C30834 * C31143 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C30834 * C31139 +
                  ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                    C4937 * C13223) *
                       C13224 +
                   (C13395 + C13396 + C13397 + C13398) * C13225) *
                      C30834 * C31129 -
                  ((C14543 + C14544 + C14545 + C14546) * C13225 +
                   (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                    C4938 * C13226) *
                       C13224) *
                      C30834 * C31109) *
                     C2688 +
                 (((C13394 + C13393 + C13392 + C13391) * C13224 +
                   (C13399 + C13400 + C13401 + C13402) * C13225) *
                      C30834 * C31139 -
                  ((C13233 + C13234 + C13235 + C13236) * C13225 +
                   (C13232 + C13231 + C13230 + C13229) * C13224) *
                      C30834 * C31143 -
                  ((C13403 + C13404 + C13405 + C13406) * C13225 +
                   (C13398 + C13397 + C13396 + C13395) * C13224) *
                      C30834 * C31129 +
                  ((C14546 + C14545 + C14544 + C14543) * C13224 +
                   (C1488 * C13226 + C1487 * C13222 +
                    (C113 * C1205 + C31012 * C1216) * C13227 +
                    (C113 * C1217 + C31012 * C1223) * C13223) *
                       C13225) *
                      C30834 * C31109) *
                     C30799)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C3342 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C30875 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C3342) *
                      C30882 +
                  (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                     C4937 * C13223) *
                        C13224 +
                    (C13395 + C13396 + C13397 + C13398) * C13225) *
                       C3342 -
                   ((C14741 + C14742 + C14743 + C14744) * C13225 +
                    (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                     C5400 * C13226) *
                        C13224) *
                       C30921) *
                      C2948) *
                     C31056 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C3342) *
                      C30875 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C3342 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C30921) *
                      C30882 +
                  (((C14744 + C14743 + C14742 + C14741) * C13224 +
                    (C1654 * C13226 + C1653 * C13222 +
                     (C113 * C1760 + C31012 * C1765) * C13227 +
                     (C113 * C1766 + C31012 * C1769) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13403 + C13404 + C13405 + C13406) * C13225 +
                    (C13398 + C13397 + C13396 + C13395) * C13224) *
                       C3342) *
                      C2948) *
                     C30799)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C30917 -
                  ((C13553 + C13554 + C13555 + C13556) * C13225 +
                   (C5401 * C13223 + C5402 * C13227 +
                    (C113 * C519 + C31012 * C537) * C13222 +
                    (C113 * C507 + C31012 * C520) * C13226) *
                       C13224) *
                      C30924 +
                  (((C113 * C508 + C31012 * C521) * C13226 +
                    (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                    C5734 * C13223) *
                       C13224 +
                   (C13557 + C13558 + C13559 + C13560) * C13225) *
                      C3850) *
                     C30875 +
                 (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                    C5399 * C13223) *
                       C13224 +
                   (C14031 + C14032 + C14033 + C14034) * C13225) *
                      C30924 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C30917 -
                  ((C15443 + C15444 + C15445 + C15446) * C13225 +
                   (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                    C5733 * C13226) *
                       C13224) *
                      C3850) *
                     C30882 +
                 (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                    C4937 * C13223) *
                       C13224 +
                   (C13395 + C13396 + C13397 + C13398) * C13225) *
                      C30917 -
                  ((C14741 + C14742 + C14743 + C14744) * C13225 +
                   (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                    C5400 * C13226) *
                       C13224) *
                      C30924 +
                  ((C5735 * C13226 + C5736 * C13222 + C5740 * C13227 +
                    C5739 * C13223) *
                       C13224 +
                   (C6562 * C13226 + C6561 * C13222 +
                    (C113 * C6552 + C31012 * C6553) * C13227 +
                    (C113 * C6554 + C31012 * C6555) * C13223) *
                       C13225) *
                      C3850) *
                     C2948) *
                C30788) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C3342 -
                  ((C13553 + C13554 + C13555 + C13556) * C13225 +
                   (C5401 * C13223 + C5402 * C13227 +
                    (C113 * C519 + C31012 * C537) * C13222 +
                    (C113 * C507 + C31012 * C520) * C13226) *
                       C13224) *
                      C30921) *
                     C31143 +
                 (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                    C5399 * C13223) *
                       C13224 +
                   (C14031 + C14032 + C14033 + C14034) * C13225) *
                      C30921 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C3342) *
                     C31139 +
                 (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                    C4937 * C13223) *
                       C13224 +
                   (C13395 + C13396 + C13397 + C13398) * C13225) *
                      C3342 -
                  ((C14741 + C14742 + C14743 + C14744) * C13225 +
                   (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                    C5400 * C13226) *
                       C13224) *
                      C30921) *
                     C31129 +
                 (((C5737 * C13226 + C5738 * C13222 + C6112 * C13227 +
                    C6111 * C13223) *
                       C13224 +
                   (C6004 * C13226 + C6003 * C13222 +
                    (C113 * C5994 + C31012 * C5995) * C13227 +
                    (C113 * C5996 + C31012 * C5997) * C13223) *
                       C13225) *
                      C30921 -
                  ((C14543 + C14544 + C14545 + C14546) * C13225 +
                   (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                    C4938 * C13226) *
                       C13224) *
                      C3342) *
                     C31109) *
                C30788) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C3342 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C2580 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C3342) *
                      C30879) *
                     C31133 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C3342) *
                      C2580 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C3342 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C30921) *
                      C30879) *
                     C31120 +
                 ((((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C3342 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C2580 +
                  (((C14038 + C14037 + C14036 + C14035) * C13224 +
                    (C1009 * C13226 + C1008 * C13222 +
                     (C113 * C1640 + C31012 * C1641) * C13227 +
                     (C113 * C1642 + C31012 * C1643) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13699 + C13700 + C13701 + C13702) * C13225 +
                    (C13402 + C13401 + C13400 + C13399) * C13224) *
                       C3342) *
                      C30879) *
                     C31093)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C31144 -
                  ((C13553 + C13554 + C13555 + C13556) * C13225 +
                   (C5401 * C13223 + C5402 * C13227 +
                    (C113 * C519 + C31012 * C537) * C13222 +
                    (C113 * C507 + C31012 * C520) * C13226) *
                       C13224) *
                      C31141 +
                  (((C113 * C508 + C31012 * C521) * C13226 +
                    (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                    C5734 * C13223) *
                       C13224 +
                   (C13557 + C13558 + C13559 + C13560) * C13225) *
                      C31132 -
                  ((C15585 + C15586 + C15581 + C15582) * C13225 +
                   (C6777 * C13223 + C6778 * C13227 +
                    (C113 * C2070 + C31012 * C2080) * C13222 +
                    (C113 * C2062 + C31012 * C2071) * C13226) *
                       C13224) *
                      C31115) *
                     C2580 +
                 (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                    C5399 * C13223) *
                       C13224 +
                   (C14031 + C14032 + C14033 + C14034) * C13225) *
                      C31141 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C31144 -
                  ((C15443 + C15444 + C15445 + C15446) * C13225 +
                   (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                    C5733 * C13226) *
                       C13224) *
                      C31132 +
                  ((C6778 * C13226 + C6777 * C13222 + C6776 * C13227 +
                    C6775 * C13223) *
                       C13224 +
                   (C15584 * C13226 + C15583 * C13222 +
                    (C113 * C6660 + C31012 * C6661) * C13227 +
                    (C113 * C6662 + C31012 * C6663) * C13223) *
                       C13225) *
                      C31115) *
                     C30879) *
                C30788) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C30917 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30924 +
                   (((C113 * C508 + C31012 * C521) * C13226 +
                     (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                     C5734 * C13223) *
                        C13224 +
                    (C13557 + C13558 + C13559 + C13560) * C13225) *
                       C3850) *
                      C2580 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30924 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C30917 -
                   ((C15443 + C15444 + C15445 + C15446) * C13225 +
                    (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                     C5733 * C13226) *
                        C13224) *
                       C3850) *
                      C30879) *
                     C31056 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30924 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C30917 -
                   ((C13565 + C13566 + C13567 + C13568) * C13225 +
                    (C13560 + C13559 + C13558 + C13557) * C13224) *
                       C3850) *
                      C2580 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C30917 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C30924 +
                   ((C15446 + C15445 + C15444 + C15443) * C13224 +
                    (C2244 * C13226 + C2243 * C13222 +
                     (C113 * C1342 + C31012 * C1359) * C13227 +
                     (C113 * C1360 + C31012 * C1369) * C13223) *
                        C13225) *
                       C3850) *
                      C30879) *
                     C30799)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C3342 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C2580 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C3342) *
                      C30879) *
                     C31133 +
                 ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C3342) *
                      C2580 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C3342 -
                   ((C14035 + C14036 + C14037 + C14038) * C13225 +
                    (C14034 + C14033 + C14032 + C14031) * C13224) *
                       C30921) *
                      C30879) *
                     C31120 +
                 ((((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C3342 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C2580 +
                  (((C14038 + C14037 + C14036 + C14035) * C13224 +
                    (C1009 * C13226 + C1008 * C13222 +
                     (C113 * C1640 + C31012 * C1641) * C13227 +
                     (C113 * C1642 + C31012 * C1643) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13699 + C13700 + C13701 + C13702) * C13225 +
                    (C13402 + C13401 + C13400 + C13399) * C13224) *
                       C3342) *
                      C30879) *
                     C31093)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31012 * C122) * C13226 +
                    (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                    C4934 * C13223) *
                       C13224 +
                   (C13229 + C13230 + C13231 + C13232) * C13225) *
                      C3342 -
                  ((C13553 + C13554 + C13555 + C13556) * C13225 +
                   (C5401 * C13223 + C5402 * C13227 +
                    (C113 * C519 + C31012 * C537) * C13222 +
                    (C113 * C507 + C31012 * C520) * C13226) *
                       C13224) *
                      C30921) *
                     C31143 +
                 (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                    C5399 * C13223) *
                       C13224 +
                   (C14031 + C14032 + C14033 + C14034) * C13225) *
                      C30921 -
                  ((C13391 + C13392 + C13393 + C13394) * C13225 +
                   (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                    C4933 * C13226) *
                       C13224) *
                      C3342) *
                     C31139 +
                 (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                    C4937 * C13223) *
                       C13224 +
                   (C13395 + C13396 + C13397 + C13398) * C13225) *
                      C3342 -
                  ((C14741 + C14742 + C14743 + C14744) * C13225 +
                   (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                    C5400 * C13226) *
                       C13224) *
                      C30921) *
                     C31129 +
                 (((C5737 * C13226 + C5738 * C13222 + C6112 * C13227 +
                    C6111 * C13223) *
                       C13224 +
                   (C6004 * C13226 + C6003 * C13222 +
                    (C113 * C5994 + C31012 * C5995) * C13227 +
                    (C113 * C5996 + C31012 * C5997) * C13223) *
                       C13225) *
                      C30921 -
                  ((C14543 + C14544 + C14545 + C14546) * C13225 +
                   (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                    C4938 * C13226) *
                       C13224) *
                      C3342) *
                     C31109) *
                C30788) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C30834 * C1468 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C30834 * C1469 +
                   ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                     C4937 * C13223) *
                        C13224 +
                    (C13395 + C13396 + C13397 + C13398) * C13225) *
                       C30834 * C1470 -
                   ((C14543 + C14544 + C14545 + C14546) * C13225 +
                    (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                     C4938 * C13226) *
                        C13224) *
                       C30834 * C31109) *
                      C31056 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C30834 * C1469 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C30834 * C1468 -
                   ((C13403 + C13404 + C13405 + C13406) * C13225 +
                    (C13398 + C13397 + C13396 + C13395) * C13224) *
                       C30834 * C1470 +
                   ((C14546 + C14545 + C14544 + C14543) * C13224 +
                    (C1488 * C13226 + C1487 * C13222 +
                     (C113 * C1205 + C31012 * C1216) * C13227 +
                     (C113 * C1217 + C31012 * C1223) * C13223) *
                        C13225) *
                       C30834 * C31109) *
                      C30799)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C30834 * C31070 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C30834 * C30879) *
                      C695 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C30834 * C30879 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C30834 * C31070) *
                      C696 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C30834 * C31070 -
                   ((C13699 + C13700 + C13701 + C13702) * C13225 +
                    (C13402 + C13401 + C13400 + C13399) * C13224) *
                       C30834 * C30879) *
                      C697 +
                  (((C13702 + C13701 + C13700 + C13699) * C13224 +
                    (C710 * C13226 + C709 * C13222 +
                     (C113 * C311 + C31012 * C330) * C13227 +
                     (C113 * C331 + C31012 * C341) * C13223) *
                        C13225) *
                       C30834 * C30879 -
                   ((C13241 + C13242 + C13243 + C13244) * C13225 +
                    (C13240 + C13239 + C13238 + C13237) * C13224) *
                       C30834 * C31070) *
                      C31103)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C1880 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C1881 +
                    (((C113 * C508 + C31012 * C521) * C13226 +
                      (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                      C5734 * C13223) *
                         C13224 +
                     (C13557 + C13558 + C13559 + C13560) * C13225) *
                        C31102) *
                       C31070 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C1881 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C1880 -
                    ((C15443 + C15444 + C15445 + C15446) * C13225 +
                     (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                      C5733 * C13226) *
                         C13224) *
                        C31102) *
                       C30879) *
                      C31056 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C1881 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C1880 -
                    ((C13565 + C13566 + C13567 + C13568) * C13225 +
                     (C13560 + C13559 + C13558 + C13557) * C13224) *
                        C31102) *
                       C31070 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C1880 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C1881 +
                    ((C15446 + C15445 + C15444 + C15443) * C13224 +
                     (C2244 * C13226 + C2243 * C13222 +
                      (C113 * C1342 + C31012 * C1359) * C13227 +
                      (C113 * C1360 + C31012 * C1369) * C13223) *
                         C13225) *
                        C31102) *
                       C30879) *
                      C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31071 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C1468 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C31071) *
                      C1469 +
                  (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                     C4937 * C13223) *
                        C13224 +
                    (C13395 + C13396 + C13397 + C13398) * C13225) *
                       C31071 -
                   ((C14741 + C14742 + C14743 + C14744) * C13225 +
                    (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                     C5400 * C13226) *
                        C13224) *
                       C30921) *
                      C1470 +
                  (((C5737 * C13226 + C5738 * C13222 + C6112 * C13227 +
                     C6111 * C13223) *
                        C13224 +
                    (C6004 * C13226 + C6003 * C13222 +
                     (C113 * C5994 + C31012 * C5995) * C13227 +
                     (C113 * C5996 + C31012 * C5997) * C13223) *
                        C13225) *
                       C30921 -
                   ((C14543 + C14544 + C14545 + C14546) * C13225 +
                    (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                     C4938 * C13226) *
                        C13224) *
                       C31071) *
                      C31109) *
                 C30788) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C31071 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C31070 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C31071) *
                       C30879) *
                      C299 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C31071) *
                       C31070 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C31071 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C30879) *
                      C300 +
                  ((((C13236 + C13235 + C13234 + C13233) * C13224 +
                     (C13237 + C13238 + C13239 + C13240) * C13225) *
                        C31071 -
                    ((C13833 + C13834 + C13835 + C13836) * C13225 +
                     (C13564 + C13563 + C13562 + C13561) * C13224) *
                        C30921) *
                       C31070 +
                   (((C14038 + C14037 + C14036 + C14035) * C13224 +
                     (C1009 * C13226 + C1008 * C13222 +
                      (C113 * C1640 + C31012 * C1641) * C13227 +
                      (C113 * C1642 + C31012 * C1643) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13699 + C13700 + C13701 + C13702) * C13225 +
                     (C13402 + C13401 + C13400 + C13399) * C13224) *
                        C31071) *
                       C30879) *
                      C31093)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C2348 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C2349 +
                   (((C113 * C508 + C31012 * C521) * C13226 +
                     (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                     C5734 * C13223) *
                        C13224 +
                    (C13557 + C13558 + C13559 + C13560) * C13225) *
                       C2350 -
                   ((C15585 + C15586 + C15581 + C15582) * C13225 +
                    (C6777 * C13223 + C6778 * C13227 +
                     (C113 * C2070 + C31012 * C2080) * C13222 +
                     (C113 * C2062 + C31012 * C2071) * C13226) *
                        C13224) *
                       C31115) *
                      C31070 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C2349 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C2348 -
                   ((C15443 + C15444 + C15445 + C15446) * C13225 +
                    (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                     C5733 * C13226) *
                        C13224) *
                       C2350 +
                   ((C6778 * C13226 + C6777 * C13222 + C6776 * C13227 +
                     C6775 * C13223) *
                        C13224 +
                    (C15584 * C13226 + C15583 * C13222 +
                     (C113 * C6660 + C31012 * C6661) * C13227 +
                     (C113 * C6662 + C31012 * C6663) * C13223) *
                        C13225) *
                       C31115) *
                      C30879) *
                 C30788) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31012 * C122) * C13226 +
                (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                C4934 * C13223) *
                   C13224 +
               (C13229 + C13230 + C13231 + C13232) * C13225) *
                  C30834 * C30816 * C108 -
              ((C13233 + C13234 + C13235 + C13236) * C13225 +
               (C13232 + C13231 + C13230 + C13229) * C13224) *
                  C30834 * C30816 * C109 +
              ((C13236 + C13235 + C13234 + C13233) * C13224 +
               (C13237 + C13238 + C13239 + C13240) * C13225) *
                  C30834 * C30816 * C110 -
              ((C13241 + C13242 + C13243 + C13244) * C13225 +
               (C13240 + C13239 + C13238 + C13237) * C13224) *
                  C30834 * C30816 * C111 +
              ((C13244 + C13243 + C13242 + C13241) * C13224 +
               (C173 * C13226 + C172 * C13222 +
                (C113 * C699 + C31012 * C700) * C13227 +
                (C113 * C701 + C31012 * C702) * C13223) *
                   C13225) *
                  C30834 * C30816 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C13226 +
                 (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                 C4934 * C13223) *
                    C13224 +
                (C13229 + C13230 + C13231 + C13232) * C13225) *
                   C30834 * C31136 -
               ((C13391 + C13392 + C13393 + C13394) * C13225 +
                (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                 C4933 * C13226) *
                    C13224) *
                   C30834 * C31124 +
               ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                 C4937 * C13223) *
                    C13224 +
                (C13395 + C13396 + C13397 + C13398) * C13225) *
                   C30834 * C31099) *
                  C299 +
              (((C13394 + C13393 + C13392 + C13391) * C13224 +
                (C13399 + C13400 + C13401 + C13402) * C13225) *
                   C30834 * C31124 -
               ((C13233 + C13234 + C13235 + C13236) * C13225 +
                (C13232 + C13231 + C13230 + C13229) * C13224) *
                   C30834 * C31136 -
               ((C13403 + C13404 + C13405 + C13406) * C13225 +
                (C13398 + C13397 + C13396 + C13395) * C13224) *
                   C30834 * C31099) *
                  C300 +
              (((C13236 + C13235 + C13234 + C13233) * C13224 +
                (C13237 + C13238 + C13239 + C13240) * C13225) *
                   C30834 * C31136 -
               ((C377 * C13223 + C378 * C13227 + C376 * C13222 +
                 C375 * C13226) *
                    C13225 +
                (C13402 + C13401 + C13400 + C13399) * C13224) *
                   C30834 * C31124 +
               ((C13406 + C13405 + C13404 + C13403) * C13224 +
                (C378 * C13226 + C377 * C13222 +
                 (C113 * C1474 + C31012 * C1475) * C13227 +
                 (C113 * C1476 + C31012 * C1477) * C13223) *
                    C13225) *
                   C30834 * C31099) *
                  C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C31137 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C30816 * C299 +
          (((C13556 + C13555 + C13554 + C13553) * C13224 +
            (C13561 + C13562 + C13563 + C13564) * C13225) *
               C31126 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C31137 -
           ((C13565 + C13566 + C13567 + C13568) * C13225 +
            (C13560 + C13559 + C13558 + C13557) * C13224) *
               C31102) *
              C30816 * C300 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C31137 -
           ((C1008 * C13223 + C1009 * C13227 + C579 * C13222 + C578 * C13226) *
                C13225 +
            (C13564 + C13563 + C13562 + C13561) * C13224) *
               C31126 +
           ((C13568 + C13567 + C13566 + C13565) * C13224 +
            (C581 * C13226 + C580 * C13222 +
             (C113 * C2230 + C31012 * C2231) * C13227 +
             (C113 * C2232 + C31012 * C2233) * C13223) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C1126 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C1127 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C31133 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C1127 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C1126 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C31120 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C1126 -
           ((C13699 + C13700 + C13701 + C13702) * C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C1127 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C1194 -
          ((C13391 + C13392 + C13393 + C13394) * C13225 +
           (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 + C4933 * C13226) *
               C13224) *
              C30834 * C1195 +
          ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 + C4937 * C13223) *
               C13224 +
           (C13395 + C13396 + C13397 + C13398) * C13225) *
              C30834 * C1196 -
          ((C5847 * C13223 + C5848 * C13227 + C1489 * C13222 + C1490 * C13226) *
               C13225 +
           (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 + C4938 * C13226) *
               C13224) *
              C30834 * C1197 +
          ((C5591 * C13226 + C5592 * C13222 + C5594 * C13227 + C5593 * C13223) *
               C13224 +
           (C5848 * C13226 + C5847 * C13222 +
            (C113 * C5838 + C31012 * C5839) * C13227 +
            (C113 * C5840 + C31012 * C5841) * C13223) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C31137 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C1126 +
          (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
             C5399 * C13223) *
                C13224 +
            (C14031 + C14032 + C14033 + C14034) * C13225) *
               C31126 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C31137 -
           ((C6561 * C13223 + C6562 * C13227 + C2245 * C13222 +
             C2246 * C13226) *
                C13225 +
            (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
             C5733 * C13226) *
                C13224) *
               C31102) *
              C1127 +
          (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C31137 -
           ((C6003 * C13223 + C6004 * C13227 + C1655 * C13222 +
             C1656 * C13226) *
                C13225 +
            (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
             C5400 * C13226) *
                C13224) *
               C31126 +
           ((C5735 * C13226 + C5736 * C13222 + C5740 * C13227 +
             C5739 * C13223) *
                C13224 +
            (C6562 * C13226 + C6561 * C13222 +
             (C113 * C6552 + C31012 * C6553) * C13227 +
             (C113 * C6554 + C31012 * C6555) * C13223) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C1880 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C30816 * C31133 +
          (((C13556 + C13555 + C13554 + C13553) * C13224 +
            (C13561 + C13562 + C13563 + C13564) * C13225) *
               C1881 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C1880 -
           ((C13565 + C13566 + C13567 + C13568) * C13225 +
            (C13560 + C13559 + C13558 + C13557) * C13224) *
               C31102) *
              C30816 * C31120 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C1880 -
           ((C13833 + C13834 + C13835 + C13836) * C13225 +
            (C13564 + C13563 + C13562 + C13561) * C13224) *
               C1881 +
           ((C13568 + C13567 + C13566 + C13565) * C13224 +
            (C581 * C13226 + C580 * C13222 +
             (C113 * C2230 + C31012 * C2231) * C13227 +
             (C113 * C2232 + C31012 * C2233) * C13223) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C1880 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C31136 +
          (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
             C5399 * C13223) *
                C13224 +
            (C14031 + C14032 + C14033 + C14034) * C13225) *
               C1881 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C1880 -
           ((C6561 * C13223 + C6562 * C13227 + C2245 * C13222 +
             C2246 * C13226) *
                C13225 +
            (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
             C5733 * C13226) *
                C13224) *
               C31102) *
              C31124 +
          (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C1880 -
           ((C14741 + C14742 + C14743 + C14744) * C13225 +
            (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
             C5400 * C13226) *
                C13224) *
               C1881 +
           ((C5735 * C13226 + C5736 * C13222 + C5740 * C13227 +
             C5739 * C13223) *
                C13224 +
            (C6562 * C13226 + C6561 * C13222 +
             (C113 * C6552 + C31012 * C6553) * C13227 +
             (C113 * C6554 + C31012 * C6555) * C13223) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C2055 -
          ((C13553 + C13554 + C13555 + C13556) * C13225 +
           (C5401 * C13223 + C5402 * C13227 +
            (C113 * C519 + C31012 * C537) * C13222 +
            (C113 * C507 + C31012 * C520) * C13226) *
               C13224) *
              C2056 +
          (((C113 * C508 + C31012 * C521) * C13226 +
            (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
            C5734 * C13223) *
               C13224 +
           (C13557 + C13558 + C13559 + C13560) * C13225) *
              C2057 -
          (((C113 * C2476 + C31012 * C2480) * C13223 +
            (C113 * C2471 + C31012 * C2475) * C13227 + C2367 * C13222 +
            C2368 * C13226) *
               C13225 +
           (C6777 * C13223 + C6778 * C13227 +
            (C113 * C2070 + C31012 * C2080) * C13222 +
            (C113 * C2062 + C31012 * C2071) * C13226) *
               C13224) *
              C2058 +
          (((C113 * C2063 + C31012 * C2072) * C13226 +
            (C113 * C2073 + C31012 * C2081) * C13222 +
            (C113 * C6395 + C31012 * C6399) * C13227 +
            (C113 * C6400 + C31012 * C6404) * C13223) *
               C13224 +
           ((C113 * C2064 + C31012 * C2074) * C13226 +
            (C113 * C2075 + C31012 * C2082) * C13222 +
            (C113 * C10700 + C31012 * C10701) * C13227 +
            (C113 * C10702 + C31012 * C10703) * C13223) *
               C13225) *
              C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[13] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C31071 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C1126 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C31071) *
                       C1127 +
                   (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                      C4937 * C13223) *
                         C13224 +
                     (C13395 + C13396 + C13397 + C13398) * C13225) *
                        C31071 -
                    ((C14741 + C14742 + C14743 + C14744) * C13225 +
                     (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                      C5400 * C13226) *
                         C13224) *
                        C30921) *
                       C31099) *
                      C31056 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C31071) *
                       C1126 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C31071 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C1127 +
                   (((C14744 + C14743 + C14742 + C14741) * C13224 +
                     (C1654 * C13226 + C1653 * C13222 +
                      (C113 * C1760 + C31012 * C1765) * C13227 +
                      (C113 * C1766 + C31012 * C1769) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13403 + C13404 + C13405 + C13406) * C13225 +
                     (C13398 + C13397 + C13396 + C13395) * C13224) *
                        C31071) *
                       C31099) *
                      C30799)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31071 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C30816 * C695 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C31071) *
                      C30816 * C696 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C31071 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C30816 * C697 +
                  (((C13836 + C13835 + C13834 + C13833) * C13224 +
                    (C823 * C13226 + C822 * C13222 +
                     (C113 * C975 + C31012 * C984) * C13227 +
                     (C113 * C985 + C31012 * C990) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13241 + C13242 + C13243 + C13244) * C13225 +
                    (C13240 + C13239 + C13238 + C13237) * C13224) *
                       C31071) *
                      C30816 * C31103)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C2348 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C2349 +
                   (((C113 * C508 + C31012 * C521) * C13226 +
                     (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                     C5734 * C13223) *
                        C13224 +
                    (C13557 + C13558 + C13559 + C13560) * C13225) *
                       C2350 -
                   ((C15585 + C15586 + C15581 + C15582) * C13225 +
                    (C6777 * C13223 + C6778 * C13227 +
                     (C113 * C2070 + C31012 * C2080) * C13222 +
                     (C113 * C2062 + C31012 * C2071) * C13226) *
                        C13224) *
                       C31115) *
                      C30816 * C31056 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C2349 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C2348 -
                   ((C13565 + C13566 + C13567 + C13568) * C13225 +
                    (C13560 + C13559 + C13558 + C13557) * C13224) *
                       C2350 +
                   ((C15582 + C15581 + C15586 + C15585) * C13224 +
                    (C2366 * C13226 + C2365 * C13222 +
                     (C113 * C2472 + C31012 * C2477) * C13227 +
                     (C113 * C2478 + C31012 * C2481) * C13223) *
                        C13225) *
                       C31115) *
                      C30816 * C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C31136 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C31124 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C299 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C31124 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C31136 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C300 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C31136 -
           ((C377 * C13223 + C378 * C13227 + C376 * C13222 + C375 * C13226) *
                C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C31124 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C30816 * C108 -
          ((C13233 + C13234 + C13235 + C13236) * C13225 +
           (C13232 + C13231 + C13230 + C13229) * C13224) *
              C30834 * C30816 * C109 +
          ((C13236 + C13235 + C13234 + C13233) * C13224 +
           (C13237 + C13238 + C13239 + C13240) * C13225) *
              C30834 * C30816 * C110 -
          ((C13241 + C13242 + C13243 + C13244) * C13225 +
           (C13240 + C13239 + C13238 + C13237) * C13224) *
              C30834 * C30816 * C111 +
          ((C13244 + C13243 + C13242 + C13241) * C13224 +
           (C173 * C13226 + C172 * C13222 +
            (C113 * C699 + C31012 * C700) * C13227 +
            (C113 * C701 + C31012 * C702) * C13223) *
               C13225) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C1126 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C1127 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C31133 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C1127 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C1126 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C31120 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C1126 -
           ((C13699 + C13700 + C13701 + C13702) * C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C1127 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C1194 -
          ((C13391 + C13392 + C13393 + C13394) * C13225 +
           (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 + C4933 * C13226) *
               C13224) *
              C30834 * C1195 +
          ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 + C4937 * C13223) *
               C13224 +
           (C13395 + C13396 + C13397 + C13398) * C13225) *
              C30834 * C1196 -
          ((C5847 * C13223 + C5848 * C13227 + C1489 * C13222 + C1490 * C13226) *
               C13225 +
           (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 + C4938 * C13226) *
               C13224) *
              C30834 * C1197 +
          ((C5591 * C13226 + C5592 * C13222 + C5594 * C13227 + C5593 * C13223) *
               C13224 +
           (C5848 * C13226 + C5847 * C13222 +
            (C113 * C5838 + C31012 * C5839) * C13227 +
            (C113 * C5840 + C31012 * C5841) * C13223) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C1880 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C30816 * C31133 +
          (((C13556 + C13555 + C13554 + C13553) * C13224 +
            (C13561 + C13562 + C13563 + C13564) * C13225) *
               C1881 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C1880 -
           ((C13565 + C13566 + C13567 + C13568) * C13225 +
            (C13560 + C13559 + C13558 + C13557) * C13224) *
               C31102) *
              C30816 * C31120 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C1880 -
           ((C13833 + C13834 + C13835 + C13836) * C13225 +
            (C13564 + C13563 + C13562 + C13561) * C13224) *
               C1881 +
           ((C13568 + C13567 + C13566 + C13565) * C13224 +
            (C581 * C13226 + C580 * C13222 +
             (C113 * C2230 + C31012 * C2231) * C13227 +
             (C113 * C2232 + C31012 * C2233) * C13223) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C1880 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C31136 +
          (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
             C5399 * C13223) *
                C13224 +
            (C14031 + C14032 + C14033 + C14034) * C13225) *
               C1881 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C1880 -
           ((C6561 * C13223 + C6562 * C13227 + C2245 * C13222 +
             C2246 * C13226) *
                C13225 +
            (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
             C5733 * C13226) *
                C13224) *
               C31102) *
              C31124 +
          (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C1880 -
           ((C14741 + C14742 + C14743 + C14744) * C13225 +
            (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
             C5400 * C13226) *
                C13224) *
               C1881 +
           ((C5735 * C13226 + C5736 * C13222 + C5740 * C13227 +
             C5739 * C13223) *
                C13224 +
            (C6562 * C13226 + C6561 * C13222 +
             (C113 * C6552 + C31012 * C6553) * C13227 +
             (C113 * C6554 + C31012 * C6555) * C13223) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C3342 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C31070 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C3342) *
                       C30879) *
                      C30793 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C3342) *
                       C31070 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C3342 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C30879) *
                      C30802 +
                  ((((C13236 + C13235 + C13234 + C13233) * C13224 +
                     (C13237 + C13238 + C13239 + C13240) * C13225) *
                        C3342 -
                    ((C13833 + C13834 + C13835 + C13836) * C13225 +
                     (C13564 + C13563 + C13562 + C13561) * C13224) *
                        C30921) *
                       C31070 +
                   (((C14038 + C14037 + C14036 + C14035) * C13224 +
                     (C1009 * C13226 + C1008 * C13222 +
                      (C113 * C1640 + C31012 * C1641) * C13227 +
                      (C113 * C1642 + C31012 * C1643) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13699 + C13700 + C13701 + C13702) * C13225 +
                     (C13402 + C13401 + C13400 + C13399) * C13224) *
                        C3342) *
                       C30879) *
                      C2951)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C30917 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30924 +
                    (((C113 * C508 + C31012 * C521) * C13226 +
                      (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                      C5734 * C13223) *
                         C13224 +
                     (C13557 + C13558 + C13559 + C13560) * C13225) *
                        C3850) *
                       C31070 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30924 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C30917 -
                    ((C15443 + C15444 + C15445 + C15446) * C13225 +
                     (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
                      C5733 * C13226) *
                         C13224) *
                        C3850) *
                       C30879) *
                      C2688 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30924 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C30917 -
                    ((C13565 + C13566 + C13567 + C13568) * C13225 +
                     (C13560 + C13559 + C13558 + C13557) * C13224) *
                        C3850) *
                       C31070 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C30917 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30924 +
                    ((C15446 + C15445 + C15444 + C15443) * C13224 +
                     (C2244 * C13226 + C2243 * C13222 +
                      (C113 * C1342 + C31012 * C1359) * C13227 +
                      (C113 * C1360 + C31012 * C1369) * C13223) *
                         C13225) *
                        C3850) *
                       C30879) *
                      C30799)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C3342 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C31136 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C3342) *
                       C31124 +
                   (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                      C4937 * C13223) *
                         C13224 +
                     (C13395 + C13396 + C13397 + C13398) * C13225) *
                        C3342 -
                    ((C14741 + C14742 + C14743 + C14744) * C13225 +
                     (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                      C5400 * C13226) *
                         C13224) *
                        C30921) *
                       C31099) *
                      C2688 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C3342) *
                       C31136 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C3342 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C31124 +
                   (((C14744 + C14743 + C14742 + C14741) * C13224 +
                     (C1654 * C13226 + C1653 * C13222 +
                      (C113 * C1760 + C31012 * C1765) * C13227 +
                      (C113 * C1766 + C31012 * C1769) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13403 + C13404 + C13405 + C13406) * C13225 +
                     (C13398 + C13397 + C13396 + C13395) * C13224) *
                        C3342) *
                       C31099) *
                      C30799)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C3342 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C30816 * C31142 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C3342) *
                      C30816 * C31135 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C3342 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C30816 * C31122 +
                  (((C13836 + C13835 + C13834 + C13833) * C13224 +
                    (C823 * C13226 + C822 * C13222 +
                     (C113 * C975 + C31012 * C984) * C13227 +
                     (C113 * C985 + C31012 * C990) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13241 + C13242 + C13243 + C13244) * C13225 +
                    (C13240 + C13239 + C13238 + C13237) * C13224) *
                       C3342) *
                      C30816 * C31103)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31144 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C31141 +
                   (((C113 * C508 + C31012 * C521) * C13226 +
                     (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                     C5734 * C13223) *
                        C13224 +
                    (C13557 + C13558 + C13559 + C13560) * C13225) *
                       C31132 -
                   ((C15585 + C15586 + C15581 + C15582) * C13225 +
                    (C6777 * C13223 + C6778 * C13227 +
                     (C113 * C2070 + C31012 * C2080) * C13222 +
                     (C113 * C2062 + C31012 * C2071) * C13226) *
                        C13224) *
                       C31115) *
                      C30816 * C2688 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C31141 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C31144 -
                   ((C13565 + C13566 + C13567 + C13568) * C13225 +
                    (C13560 + C13559 + C13558 + C13557) * C13224) *
                       C31132 +
                   ((C15582 + C15581 + C15586 + C15585) * C13224 +
                    (C2366 * C13226 + C2365 * C13222 +
                     (C113 * C2472 + C31012 * C2477) * C13227 +
                     (C113 * C2478 + C31012 * C2481) * C13223) *
                        C13225) *
                       C31115) *
                      C30816 * C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C30917 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30924 +
                   (((C113 * C508 + C31012 * C521) * C13226 +
                     (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
                     C5734 * C13223) *
                        C13224 +
                    (C13557 + C13558 + C13559 + C13560) * C13225) *
                       C3850) *
                      C30816 * C30793 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30924 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C30917 -
                   ((C13565 + C13566 + C13567 + C13568) * C13225 +
                    (C13560 + C13559 + C13558 + C13557) * C13224) *
                       C3850) *
                      C30816 * C30802 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C30917 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30924 +
                   ((C13568 + C13567 + C13566 + C13565) * C13224 +
                    (C581 * C13226 + C580 * C13222 +
                     (C113 * C2230 + C31012 * C2231) * C13227 +
                     (C113 * C2232 + C31012 * C2233) * C13223) *
                        C13225) *
                       C3850) *
                      C30816 * C2951)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C3342 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C30816 * C31142 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C3342) *
                      C30816 * C31135 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C3342 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C30816 * C31122 +
                  (((C13836 + C13835 + C13834 + C13833) * C13224 +
                    (C823 * C13226 + C822 * C13222 +
                     (C113 * C975 + C31012 * C984) * C13227 +
                     (C113 * C985 + C31012 * C990) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13241 + C13242 + C13243 + C13244) * C13225 +
                    (C13240 + C13239 + C13238 + C13237) * C13224) *
                       C3342) *
                      C30816 * C31103)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C3342 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C31136 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C3342) *
                       C31124 +
                   (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                      C4937 * C13223) *
                         C13224 +
                     (C13395 + C13396 + C13397 + C13398) * C13225) *
                        C3342 -
                    ((C14741 + C14742 + C14743 + C14744) * C13225 +
                     (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                      C5400 * C13226) *
                         C13224) *
                        C30921) *
                       C31099) *
                      C2688 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C3342) *
                       C31136 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C3342 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C31124 +
                   (((C14744 + C14743 + C14742 + C14741) * C13224 +
                     (C1654 * C13226 + C1653 * C13222 +
                      (C113 * C1760 + C31012 * C1765) * C13227 +
                      (C113 * C1766 + C31012 * C1769) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13403 + C13404 + C13405 + C13406) * C13225 +
                     (C13398 + C13397 + C13396 + C13395) * C13224) *
                        C3342) *
                       C31099) *
                      C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C30834 * C31070 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C30834 * C30879) *
                      C695 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C30834 * C30879 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C30834 * C31070) *
                      C696 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C30834 * C31070 -
                   ((C13699 + C13700 + C13701 + C13702) * C13225 +
                    (C13402 + C13401 + C13400 + C13399) * C13224) *
                       C30834 * C30879) *
                      C697 +
                  (((C13702 + C13701 + C13700 + C13699) * C13224 +
                    (C710 * C13226 + C709 * C13222 +
                     (C113 * C311 + C31012 * C330) * C13227 +
                     (C113 * C331 + C31012 * C341) * C13223) *
                        C13225) *
                       C30834 * C30879 -
                   ((C13241 + C13242 + C13243 + C13244) * C13225 +
                    (C13240 + C13239 + C13238 + C13237) * C13224) *
                       C30834 * C31070) *
                      C31103)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C30834 * C1468 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C30834 * C1469 +
                   ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                     C4937 * C13223) *
                        C13224 +
                    (C13395 + C13396 + C13397 + C13398) * C13225) *
                       C30834 * C1470 -
                   ((C14543 + C14544 + C14545 + C14546) * C13225 +
                    (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                     C4938 * C13226) *
                        C13224) *
                       C30834 * C31109) *
                      C31056 +
                  (((C13394 + C13393 + C13392 + C13391) * C13224 +
                    (C13399 + C13400 + C13401 + C13402) * C13225) *
                       C30834 * C1469 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C30834 * C1468 -
                   ((C13403 + C13404 + C13405 + C13406) * C13225 +
                    (C13398 + C13397 + C13396 + C13395) * C13224) *
                       C30834 * C1470 +
                   ((C14546 + C14545 + C14544 + C14543) * C13224 +
                    (C1488 * C13226 + C1487 * C13222 +
                     (C113 * C1205 + C31012 * C1216) * C13227 +
                     (C113 * C1217 + C31012 * C1223) * C13223) *
                        C13225) *
                       C30834 * C31109) *
                      C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C31071 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C31070 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C31071) *
                       C30879) *
                      C299 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C31071) *
                       C31070 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C31071 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C30879) *
                      C300 +
                  ((((C13236 + C13235 + C13234 + C13233) * C13224 +
                     (C13237 + C13238 + C13239 + C13240) * C13225) *
                        C31071 -
                    ((C13833 + C13834 + C13835 + C13836) * C13225 +
                     (C13564 + C13563 + C13562 + C13561) * C13224) *
                        C30921) *
                       C31070 +
                   (((C14038 + C14037 + C14036 + C14035) * C13224 +
                     (C1009 * C13226 + C1008 * C13222 +
                      (C113 * C1640 + C31012 * C1641) * C13227 +
                      (C113 * C1642 + C31012 * C1643) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13699 + C13700 + C13701 + C13702) * C13225 +
                     (C13402 + C13401 + C13400 + C13399) * C13224) *
                        C31071) *
                       C30879) *
                      C31093)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31071 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C1468 +
                  (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                     C5399 * C13223) *
                        C13224 +
                    (C14031 + C14032 + C14033 + C14034) * C13225) *
                       C30921 -
                   ((C13391 + C13392 + C13393 + C13394) * C13225 +
                    (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                     C4933 * C13226) *
                        C13224) *
                       C31071) *
                      C1469 +
                  (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                     C4937 * C13223) *
                        C13224 +
                    (C13395 + C13396 + C13397 + C13398) * C13225) *
                       C31071 -
                   ((C14741 + C14742 + C14743 + C14744) * C13225 +
                    (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                     C5400 * C13226) *
                        C13224) *
                       C30921) *
                      C1470 +
                  (((C5737 * C13226 + C5738 * C13222 + C6112 * C13227 +
                     C6111 * C13223) *
                        C13224 +
                    (C6004 * C13226 + C6003 * C13222 +
                     (C113 * C5994 + C31012 * C5995) * C13227 +
                     (C113 * C5996 + C31012 * C5997) * C13223) *
                        C13225) *
                       C30921 -
                   ((C14543 + C14544 + C14545 + C14546) * C13225 +
                    (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 +
                     C4938 * C13226) *
                        C13224) *
                       C31071) *
                      C31109) *
                 C30788) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C31136 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C31124 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C299 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C31124 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C31136 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C300 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C31136 -
           ((C377 * C13223 + C378 * C13227 + C376 * C13222 + C375 * C13226) *
                C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C31124 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C30816 * C108 -
          ((C13233 + C13234 + C13235 + C13236) * C13225 +
           (C13232 + C13231 + C13230 + C13229) * C13224) *
              C30834 * C30816 * C109 +
          ((C13236 + C13235 + C13234 + C13233) * C13224 +
           (C13237 + C13238 + C13239 + C13240) * C13225) *
              C30834 * C30816 * C110 -
          ((C13241 + C13242 + C13243 + C13244) * C13225 +
           (C13240 + C13239 + C13238 + C13237) * C13224) *
              C30834 * C30816 * C111 +
          ((C13244 + C13243 + C13242 + C13241) * C13224 +
           (C173 * C13226 + C172 * C13222 +
            (C113 * C699 + C31012 * C700) * C13227 +
            (C113 * C701 + C31012 * C702) * C13223) *
               C13225) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C31137 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C30816 * C299 +
          (((C13556 + C13555 + C13554 + C13553) * C13224 +
            (C13561 + C13562 + C13563 + C13564) * C13225) *
               C31126 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C31137 -
           ((C13565 + C13566 + C13567 + C13568) * C13225 +
            (C13560 + C13559 + C13558 + C13557) * C13224) *
               C31102) *
              C30816 * C300 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C31137 -
           ((C1008 * C13223 + C1009 * C13227 + C579 * C13222 + C578 * C13226) *
                C13225 +
            (C13564 + C13563 + C13562 + C13561) * C13224) *
               C31126 +
           ((C13568 + C13567 + C13566 + C13565) * C13224 +
            (C581 * C13226 + C580 * C13222 +
             (C113 * C2230 + C31012 * C2231) * C13227 +
             (C113 * C2232 + C31012 * C2233) * C13223) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C1126 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C1127 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C31133 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C1127 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C1126 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C31120 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C1126 -
           ((C13699 + C13700 + C13701 + C13702) * C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C1127 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C1194 -
          ((C13391 + C13392 + C13393 + C13394) * C13225 +
           (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 + C4933 * C13226) *
               C13224) *
              C30834 * C1195 +
          ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 + C4937 * C13223) *
               C13224 +
           (C13395 + C13396 + C13397 + C13398) * C13225) *
              C30834 * C1196 -
          ((C5847 * C13223 + C5848 * C13227 + C1489 * C13222 + C1490 * C13226) *
               C13225 +
           (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 + C4938 * C13226) *
               C13224) *
              C30834 * C1197 +
          ((C5591 * C13226 + C5592 * C13222 + C5594 * C13227 + C5593 * C13223) *
               C13224 +
           (C5848 * C13226 + C5847 * C13222 +
            (C113 * C5838 + C31012 * C5839) * C13227 +
            (C113 * C5840 + C31012 * C5841) * C13223) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C31137 -
           ((C13553 + C13554 + C13555 + C13556) * C13225 +
            (C5401 * C13223 + C5402 * C13227 +
             (C113 * C519 + C31012 * C537) * C13222 +
             (C113 * C507 + C31012 * C520) * C13226) *
                C13224) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C13226 +
             (C113 * C522 + C31012 * C538) * C13222 + C5733 * C13227 +
             C5734 * C13223) *
                C13224 +
            (C13557 + C13558 + C13559 + C13560) * C13225) *
               C31102) *
              C1126 +
          (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
             C5399 * C13223) *
                C13224 +
            (C14031 + C14032 + C14033 + C14034) * C13225) *
               C31126 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C31137 -
           ((C6561 * C13223 + C6562 * C13227 + C2245 * C13222 +
             C2246 * C13226) *
                C13225 +
            (C5736 * C13223 + C5735 * C13227 + C5734 * C13222 +
             C5733 * C13226) *
                C13224) *
               C31102) *
              C1127 +
          (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C31137 -
           ((C6003 * C13223 + C6004 * C13227 + C1655 * C13222 +
             C1656 * C13226) *
                C13225 +
            (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
             C5400 * C13226) *
                C13224) *
               C31126 +
           ((C5735 * C13226 + C5736 * C13222 + C5740 * C13227 +
             C5739 * C13223) *
                C13224 +
            (C6562 * C13226 + C6561 * C13222 +
             (C113 * C6552 + C31012 * C6553) * C13227 +
             (C113 * C6554 + C31012 * C6555) * C13223) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C13226 +
                     (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                     C4934 * C13223) *
                        C13224 +
                    (C13229 + C13230 + C13231 + C13232) * C13225) *
                       C31071 -
                   ((C13553 + C13554 + C13555 + C13556) * C13225 +
                    (C5401 * C13223 + C5402 * C13227 +
                     (C113 * C519 + C31012 * C537) * C13222 +
                     (C113 * C507 + C31012 * C520) * C13226) *
                        C13224) *
                       C30921) *
                      C30816 * C695 +
                  (((C13556 + C13555 + C13554 + C13553) * C13224 +
                    (C13561 + C13562 + C13563 + C13564) * C13225) *
                       C30921 -
                   ((C13233 + C13234 + C13235 + C13236) * C13225 +
                    (C13232 + C13231 + C13230 + C13229) * C13224) *
                       C31071) *
                      C30816 * C696 +
                  (((C13236 + C13235 + C13234 + C13233) * C13224 +
                    (C13237 + C13238 + C13239 + C13240) * C13225) *
                       C31071 -
                   ((C13833 + C13834 + C13835 + C13836) * C13225 +
                    (C13564 + C13563 + C13562 + C13561) * C13224) *
                       C30921) *
                      C30816 * C697 +
                  (((C13836 + C13835 + C13834 + C13833) * C13224 +
                    (C823 * C13226 + C822 * C13222 +
                     (C113 * C975 + C31012 * C984) * C13227 +
                     (C113 * C985 + C31012 * C990) * C13223) *
                        C13225) *
                       C30921 -
                   ((C13241 + C13242 + C13243 + C13244) * C13225 +
                    (C13240 + C13239 + C13238 + C13237) * C13224) *
                       C31071) *
                      C30816 * C31103)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31012 * C122) * C13226 +
                      (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
                      C4934 * C13223) *
                         C13224 +
                     (C13229 + C13230 + C13231 + C13232) * C13225) *
                        C31071 -
                    ((C13553 + C13554 + C13555 + C13556) * C13225 +
                     (C5401 * C13223 + C5402 * C13227 +
                      (C113 * C519 + C31012 * C537) * C13222 +
                      (C113 * C507 + C31012 * C520) * C13226) *
                         C13224) *
                        C30921) *
                       C1126 +
                   (((C5402 * C13226 + C5401 * C13222 + C5400 * C13227 +
                      C5399 * C13223) *
                         C13224 +
                     (C14031 + C14032 + C14033 + C14034) * C13225) *
                        C30921 -
                    ((C13391 + C13392 + C13393 + C13394) * C13225 +
                     (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
                      C4933 * C13226) *
                         C13224) *
                        C31071) *
                       C1127 +
                   (((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
                      C4937 * C13223) *
                         C13224 +
                     (C13395 + C13396 + C13397 + C13398) * C13225) *
                        C31071 -
                    ((C14741 + C14742 + C14743 + C14744) * C13225 +
                     (C5738 * C13223 + C5737 * C13227 + C5399 * C13222 +
                      C5400 * C13226) *
                         C13224) *
                        C30921) *
                       C31099) *
                      C31056 +
                  ((((C13556 + C13555 + C13554 + C13553) * C13224 +
                     (C13561 + C13562 + C13563 + C13564) * C13225) *
                        C30921 -
                    ((C13233 + C13234 + C13235 + C13236) * C13225 +
                     (C13232 + C13231 + C13230 + C13229) * C13224) *
                        C31071) *
                       C1126 +
                   (((C13394 + C13393 + C13392 + C13391) * C13224 +
                     (C13399 + C13400 + C13401 + C13402) * C13225) *
                        C31071 -
                    ((C14035 + C14036 + C14037 + C14038) * C13225 +
                     (C14034 + C14033 + C14032 + C14031) * C13224) *
                        C30921) *
                       C1127 +
                   (((C14744 + C14743 + C14742 + C14741) * C13224 +
                     (C1654 * C13226 + C1653 * C13222 +
                      (C113 * C1760 + C31012 * C1765) * C13227 +
                      (C113 * C1766 + C31012 * C1769) * C13223) *
                         C13225) *
                        C30921 -
                    ((C13403 + C13404 + C13405 + C13406) * C13225 +
                     (C13398 + C13397 + C13396 + C13395) * C13224) *
                        C31071) *
                       C31099) *
                      C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C30816 * C108 -
          ((C13233 + C13234 + C13235 + C13236) * C13225 +
           (C13232 + C13231 + C13230 + C13229) * C13224) *
              C30834 * C30816 * C109 +
          ((C13236 + C13235 + C13234 + C13233) * C13224 +
           (C13237 + C13238 + C13239 + C13240) * C13225) *
              C30834 * C30816 * C110 -
          ((C13241 + C13242 + C13243 + C13244) * C13225 +
           (C13240 + C13239 + C13238 + C13237) * C13224) *
              C30834 * C30816 * C111 +
          ((C13244 + C13243 + C13242 + C13241) * C13224 +
           (C173 * C13226 + C172 * C13222 +
            (C113 * C699 + C31012 * C700) * C13227 +
            (C113 * C701 + C31012 * C702) * C13223) *
               C13225) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C31136 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C31124 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C299 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C31124 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C31136 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C300 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C31136 -
           ((C377 * C13223 + C378 * C13227 + C376 * C13222 + C375 * C13226) *
                C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C31124 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C13226 +
             (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
             C4934 * C13223) *
                C13224 +
            (C13229 + C13230 + C13231 + C13232) * C13225) *
               C30834 * C1126 -
           ((C13391 + C13392 + C13393 + C13394) * C13225 +
            (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 +
             C4933 * C13226) *
                C13224) *
               C30834 * C1127 +
           ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 +
             C4937 * C13223) *
                C13224 +
            (C13395 + C13396 + C13397 + C13398) * C13225) *
               C30834 * C31099) *
              C31133 +
          (((C13394 + C13393 + C13392 + C13391) * C13224 +
            (C13399 + C13400 + C13401 + C13402) * C13225) *
               C30834 * C1127 -
           ((C13233 + C13234 + C13235 + C13236) * C13225 +
            (C13232 + C13231 + C13230 + C13229) * C13224) *
               C30834 * C1126 -
           ((C13403 + C13404 + C13405 + C13406) * C13225 +
            (C13398 + C13397 + C13396 + C13395) * C13224) *
               C30834 * C31099) *
              C31120 +
          (((C13236 + C13235 + C13234 + C13233) * C13224 +
            (C13237 + C13238 + C13239 + C13240) * C13225) *
               C30834 * C1126 -
           ((C13699 + C13700 + C13701 + C13702) * C13225 +
            (C13402 + C13401 + C13400 + C13399) * C13224) *
               C30834 * C1127 +
           ((C13406 + C13405 + C13404 + C13403) * C13224 +
            (C378 * C13226 + C377 * C13222 +
             (C113 * C1474 + C31012 * C1475) * C13227 +
             (C113 * C1476 + C31012 * C1477) * C13223) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C13226 +
            (C113 * C123 + C31012 * C136) * C13222 + C4933 * C13227 +
            C4934 * C13223) *
               C13224 +
           (C13229 + C13230 + C13231 + C13232) * C13225) *
              C30834 * C1194 -
          ((C13391 + C13392 + C13393 + C13394) * C13225 +
           (C4936 * C13223 + C4935 * C13227 + C4934 * C13222 + C4933 * C13226) *
               C13224) *
              C30834 * C1195 +
          ((C4935 * C13226 + C4936 * C13222 + C4938 * C13227 + C4937 * C13223) *
               C13224 +
           (C13395 + C13396 + C13397 + C13398) * C13225) *
              C30834 * C1196 -
          ((C5847 * C13223 + C5848 * C13227 + C1489 * C13222 + C1490 * C13226) *
               C13225 +
           (C5592 * C13223 + C5591 * C13227 + C4937 * C13222 + C4938 * C13226) *
               C13224) *
              C30834 * C1197 +
          ((C5591 * C13226 + C5592 * C13222 + C5594 * C13227 + C5593 * C13223) *
               C13224 +
           (C5848 * C13226 + C5847 * C13222 +
            (C113 * C5838 + C31012 * C5839) * C13227 +
            (C113 * C5840 + C31012 * C5841) * C13223) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C30875 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C30882 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C30834 * C2948) *
              C30793 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C30882 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C30875 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C2948) *
              C30802 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C30875 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C30882 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C2948) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31071 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C30875 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31071) *
               C30882 +
           (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
             (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
                C30766 * C31071 -
            ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
             (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
                C30766 * C30921) *
               C2948) *
              C2688 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31071) *
               C30875 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31071 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30882 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C13227 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C13223) *
                C30766 * C30921 -
            ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C30766 * C31071) *
               C2948) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31143 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C31139 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C30834 * C31129 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C30834 * C31109) *
              C2688 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C31139 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31143 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31129 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C13227 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C13223) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C2580 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C30879) *
              C31142 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C30879 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C2580) *
              C31135 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C2580 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C30879) *
              C31122 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                C13227 +
            (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                C13223) *
               C30766 * C30834 * C30879 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31137 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C31126 +
            ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C13226 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C13222 +
             (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
                C30766 * C31102) *
               C2580 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C31126 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31137 -
            ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
             (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
                C30766 * C31102) *
               C30879) *
              C2688 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C31126 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31137 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C30766 * C31102) *
               C2580 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31137 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C31126 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C13227 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C13223) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31071 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C2580 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31071) *
               C30879) *
              C30793 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31071) *
               C2580 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31071 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C30766 * C31071 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C30766 * C30921) *
               C2580 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
              C18763 * C1359) *
                 C13227 +
             (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
              C18763 * C1369) *
                 C13223) *
                C30766 * C30921 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C30766 * C31071) *
               C30879) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C2580 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C30879) *
              C31142 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C30879 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C2580) *
              C31135 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C2580 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C30879) *
              C31122 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                C13227 +
            (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                C13223) *
               C30766 * C30834 * C30879 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31143 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C31139 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C30834 * C31129 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C30834 * C31109) *
              C2688 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C31139 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31143 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31129 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C13227 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C13223) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C3342 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C30875 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C3342) *
               C30882 +
           (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
             (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
                C30766 * C3342 -
            ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
             (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
                C30766 * C30921) *
               C2948) *
              C31056 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C3342) *
               C30875 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C3342 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30882 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C13227 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C13223) *
                C30766 * C30921 -
            ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C30766 * C3342) *
               C2948) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30917 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30924 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C3850) *
              C30875 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C30924 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30917 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C3850) *
              C30882 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C30917 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C30924 +
           ((C25670 + C25669) * C13226 + (C25668 + C25667) * C13222 +
            (C18764 * C5704 + C18762 * C5708 + C18765 * C6762 +
             C18763 * C6763) *
                C13227 +
            (C18764 * C5707 + C18762 * C5713 + C18765 * C6764 +
             C18763 * C6765) *
                C13223) *
               C30766 * C3850) *
              C2948) *
         C30788) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C3342 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C31143 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C30921 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C3342) *
              C31139 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C3342 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C30921) *
              C31129 +
          (((C26136 + C26135) * C13226 + (C26134 + C26133) * C13222 +
            (C18764 * C5705 + C18762 * C5710 + C18765 * C5706 +
             C18763 * C5711) *
                C13227 +
            (C18764 * C5709 + C18762 * C5714 + C18765 * C5712 +
             C18763 * C5715) *
                C13223) *
               C30766 * C30921 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C3342 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C2580 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C3342) *
               C2580 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C3342 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C30766 * C3342 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C30766 * C30921) *
               C2580 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
              C18763 * C1359) *
                 C13227 +
             (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
              C18763 * C1369) *
                 C13223) *
                C30766 * C30921 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31144 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C31141 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31132 -
           ((C26973 + C26974) * C13223 + (C26975 + C26976) * C13227 +
            (C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
             C18762 * C2080) *
                C13222 +
            (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
             C18762 * C2071) *
                C13226) *
               C30766 * C31115) *
              C2580 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C31141 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C31144 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C31132 +
           ((C26976 + C26975) * C13226 + (C26974 + C26973) * C13222 +
            (C18764 * C6394 + C18762 * C6398 + C18765 * C6396 +
             C18763 * C6401) *
                C13227 +
            (C18764 * C6397 + C18762 * C6403 + C18765 * C6402 +
             C18763 * C6405) *
                C13223) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C30917 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30924 +
            ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C13226 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C13222 +
             (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
                C30766 * C3850) *
               C2580 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30924 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C30917 -
            ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
             (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
                C30766 * C3850) *
               C30879) *
              C31056 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30924 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C30917 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C30766 * C3850) *
               C2580 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C30917 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30924 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C13227 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C13223) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C3342 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C2580 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C3342) *
               C2580 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C3342 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C30766 * C3342 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C30766 * C30921) *
               C2580 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
              C18763 * C1359) *
                 C13227 +
             (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
              C18763 * C1369) *
                 C13223) *
                C30766 * C30921 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C3342 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C31143 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C30921 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C3342) *
              C31139 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C3342 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C30921) *
              C31129 +
          (((C26136 + C26135) * C13226 + (C26134 + C26133) * C13222 +
            (C18764 * C5705 + C18762 * C5710 + C18765 * C5706 +
             C18763 * C5711) *
                C13227 +
            (C18764 * C5709 + C18762 * C5714 + C18765 * C5712 +
             C18763 * C5715) *
                C13223) *
               C30766 * C30921 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C1468 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C1469 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C30834 * C1470 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C30834 * C31109) *
              C31056 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C1469 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C1468 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C1470 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C13227 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C13223) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31070 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C30879) *
              C695 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C30879 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31070) *
              C696 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C31070 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C30879) *
              C697 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                C13227 +
            (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                C13223) *
               C30766 * C30834 * C30879 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C1880 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C1881 +
            ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C13226 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C13222 +
             (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
                C30766 * C31102) *
               C31070 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C1881 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C1880 -
            ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
             (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
                C30766 * C31102) *
               C30879) *
              C31056 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C1881 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C1880 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C30766 * C31102) *
               C31070 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C1880 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C1881 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C13227 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C13223) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31071 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C1468 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C30921 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C31071) *
              C1469 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C31071 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C30921) *
              C1470 +
          (((C26136 + C26135) * C13226 + (C26134 + C26133) * C13222 +
            (C18764 * C5705 + C18762 * C5710 + C18765 * C5706 +
             C18763 * C5711) *
                C13227 +
            (C18764 * C5709 + C18762 * C5714 + C18765 * C5712 +
             C18763 * C5715) *
                C13223) *
               C30766 * C30921 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31071 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C31070 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C18764 * C1339 + C18762 * C1354 + C18765 * C1340 +
              C18763 * C1355) *
                 C13227 +
             (C18764 * C1353 + C18762 * C1366 + C18765 * C1356 +
              C18763 * C1367) *
                 C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31071) *
               C30879) *
              C299 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31071) *
               C31070 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31071 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30879) *
              C300 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C30766 * C31071 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C30766 * C30921) *
               C31070 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
              C18763 * C1359) *
                 C13227 +
             (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
              C18763 * C1369) *
                 C13223) *
                C30766 * C30921 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C2348 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C2349 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C2350 -
           ((C26973 + C26974) * C13223 + (C26975 + C26976) * C13227 +
            (C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
             C18762 * C2080) *
                C13222 +
            (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
             C18762 * C2071) *
                C13226) *
               C30766 * C31115) *
              C31070 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C2349 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C2348 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C2350 +
           ((C26976 + C26975) * C13226 + (C26974 + C26973) * C13222 +
            (C18764 * C6394 + C18762 * C6398 + C18765 * C6396 +
             C18763 * C6401) *
                C13227 +
            (C18764 * C6397 + C18762 * C6403 + C18765 * C6402 +
             C18763 * C6405) *
                C13223) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                   C13226 +
               (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                   C13222 +
               (C18764 * C304 + C18762 * C317 + C18765 * C971 + C18763 * C976) *
                   C13227 +
               (C18764 * C316 + C18762 * C334 + C18765 * C977 + C18763 * C986) *
                   C13223) *
                  C30766 * C30834 * C30816 * C108 -
              ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
               (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                  C30766 * C30834 * C30816 * C109 +
              ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
               (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                  C30766 * C30834 * C30816 * C110 -
              ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
               (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
                  C30766 * C30834 * C30816 * C111 +
              ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
               (C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
                   C13227 +
               (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
                   C13223) *
                  C30766 * C30834 * C30816 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18764 * C115 + C18762 * C122 + C18765 * C507 +
                 C18763 * C520) *
                    C13226 +
                (C18764 * C123 + C18762 * C136 + C18765 * C519 +
                 C18763 * C537) *
                    C13222 +
                (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                   C30766 * C30834 * C31136 -
               ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
                (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                   C30766 * C30834 * C31124 +
               ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
                (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
                 C18763 * C1761) *
                    C13227 +
                (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
                 C18763 * C1767) *
                    C13223) *
                   C30766 * C30834 * C31099) *
                  C299 +
              (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
                (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                   C30766 * C30834 * C31124 -
               ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
                (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                   C30766 * C30834 * C31136 -
               ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
                (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                   C30766 * C30834 * C31099) *
                  C300 +
              (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
                (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                   C30766 * C30834 * C31136 -
               ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
                (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                   C30766 * C30834 * C31124 +
               ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
                (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
                 C18763 * C1765) *
                    C13227 +
                (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
                 C18763 * C1769) *
                    C13223) *
                   C30766 * C30834 * C31099) *
                  C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31137 -
           ((C18765 * C1347 + C18763 * C1363 + C18764 * C977 + C18762 * C986) *
                C13223 +
            (C18765 * C1336 + C18763 * C1348 + C18764 * C971 + C18762 * C976) *
                C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C31126 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C18764 * C1336 + C18762 * C1348 + C18765 * C2470 +
             C18763 * C2473) *
                C13227 +
            (C18764 * C1347 + C18762 * C1363 + C18765 * C2474 +
             C18763 * C2479) *
                C13223) *
               C30766 * C31102) *
              C30816 * C299 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C31126 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C31137 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C31102) *
              C30816 * C300 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C31137 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C31126 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
             C18763 * C2477) *
                C13227 +
            (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
             C18763 * C2481) *
                C13223) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C1126 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C1127 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C1127 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C1126 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C1126 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C1127 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
              C30766 * C30834 * C1194 -
          ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
           (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
              C30766 * C30834 * C1195 +
          ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
           (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
              C30766 * C30834 * C1196 -
          ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
           (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
              C30766 * C30834 * C1197 +
          ((C25488 + C25487) * C13226 + (C25486 + C25485) * C13222 +
           (C18764 * C5574 + C18762 * C5577 + C18765 * C6102 + C18763 * C6103) *
               C13227 +
           (C18764 * C5576 + C18762 * C5580 + C18765 * C6104 + C18763 * C6105) *
               C13223) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31137 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C31126 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31102) *
              C1126 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C31126 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C31137 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C31102) *
              C1127 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C31137 -
           ((C18765 * C5707 + C18763 * C5713 + C18764 * C1762 +
             C18762 * C1767) *
                C13223 +
            (C18765 * C5704 + C18763 * C5708 + C18764 * C1758 +
             C18762 * C1761) *
                C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C31126 +
           ((C25670 + C25669) * C13226 + (C25668 + C25667) * C13222 +
            (C18764 * C5704 + C18762 * C5708 + C18765 * C6762 +
             C18763 * C6763) *
                C13227 +
            (C18764 * C5707 + C18762 * C5713 + C18765 * C6764 +
             C18763 * C6765) *
                C13223) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C1880 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C1881 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31102) *
              C30816 * C31133 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C1881 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C1880 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C31102) *
              C30816 * C31120 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C1880 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C1881 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
             C18763 * C2477) *
                C13227 +
            (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
             C18763 * C2481) *
                C13223) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C1880 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C1881 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31102) *
              C31136 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C1881 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C1880 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C31102) *
              C31124 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C1880 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C1881 +
           ((C25670 + C25669) * C13226 + (C25668 + C25667) * C13222 +
            (C18764 * C5704 + C18762 * C5708 + C18765 * C6762 +
             C18763 * C6763) *
                C13227 +
            (C18764 * C5707 + C18762 * C5713 + C18765 * C6764 +
             C18763 * C6765) *
                C13223) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
              C30766 * C2055 -
          ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
           (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
               C13222 +
           (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
               C13226) *
              C30766 * C2056 +
          ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
               C13226 +
           (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
               C13222 +
           (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
              C30766 * C2057 -
          ((C18765 * C6400 + C18763 * C6404 + C18764 * C2474 + C18762 * C2479) *
               C13223 +
           (C18765 * C6395 + C18763 * C6399 + C18764 * C2470 + C18762 * C2473) *
               C13227 +
           (C18765 * C2073 + C18763 * C2081 + C18764 * C2070 + C18762 * C2080) *
               C13222 +
           (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 + C18762 * C2071) *
               C13226) *
              C30766 * C2058 +
          ((C18764 * C2063 + C18762 * C2072 + C18765 * C10546 +
            C18763 * C10549) *
               C13226 +
           (C18764 * C2073 + C18762 * C2081 + C18765 * C10548 +
            C18763 * C10552) *
               C13222 +
           (C18764 * C6395 + C18762 * C6399 + C18765 * C10904 +
            C18763 * C10905) *
               C13227 +
           (C18764 * C6400 + C18762 * C6404 + C18765 * C10906 +
            C18763 * C10907) *
               C13223) *
              C30766 * C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31071 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C1126 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31071) *
               C1127 +
           (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
             (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
                C30766 * C31071 -
            ((C18765 * C5707 + C18763 * C5713 + C18764 * C1762 +
              C18762 * C1767) *
                 C13223 +
             (C18765 * C5704 + C18763 * C5708 + C18764 * C1758 +
              C18762 * C1761) *
                 C13227 +
             (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31071) *
               C1126 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31071 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C1127 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C13227 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C13223) *
                C30766 * C30921 -
            ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31071 -
           ((C18765 * C1347 + C18763 * C1363 + C18764 * C977 + C18762 * C986) *
                C13223 +
            (C18765 * C1336 + C18763 * C1348 + C18764 * C971 + C18762 * C976) *
                C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C30816 * C695 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C30921 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C31071) *
              C30816 * C696 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C31071 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C30921) *
              C30816 * C697 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C974 + C18762 * C983 + C18765 * C2230 + C18763 * C2231) *
                C13227 +
            (C18764 * C982 + C18762 * C989 + C18765 * C2232 + C18763 * C2233) *
                C13223) *
               C30766 * C30921 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C2348 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C2349 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C2350 -
           ((C18765 * C6400 + C18763 * C6404 + C18764 * C2474 +
             C18762 * C2479) *
                C13223 +
            (C18765 * C6395 + C18763 * C6399 + C18764 * C2470 +
             C18762 * C2473) *
                C13227 +
            (C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
             C18762 * C2080) *
                C13222 +
            (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
             C18762 * C2071) *
                C13226) *
               C30766 * C31115) *
              C30816 * C31056 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C2349 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C2348 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C2350 +
           ((C21278 + C21277) * C13226 + (C21276 + C21275) * C13222 +
            (C18764 * C2471 + C18762 * C2475 + C18765 * C10700 +
             C18763 * C10701) *
                C13227 +
            (C18764 * C2476 + C18762 * C2480 + C18765 * C10702 +
             C18763 * C10703) *
                C13223) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31136 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C31124 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C31124 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31136 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C31136 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C31124 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C18764 * C304 + C18762 * C317 + C18765 * C971 + C18763 * C976) *
               C13227 +
           (C18764 * C316 + C18762 * C334 + C18765 * C977 + C18763 * C986) *
               C13223) *
              C30766 * C30834 * C30816 * C108 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
              C30766 * C30834 * C30816 * C109 +
          ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
           (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
              C30766 * C30834 * C30816 * C110 -
          ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
           (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
              C30766 * C30834 * C30816 * C111 +
          ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
           (C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
               C13227 +
           (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
               C13223) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C1126 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C1127 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C1127 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C1126 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C1126 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C1127 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
              C30766 * C30834 * C1194 -
          ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
           (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
              C30766 * C30834 * C1195 +
          ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
           (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
              C30766 * C30834 * C1196 -
          ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
           (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
              C30766 * C30834 * C1197 +
          ((C25488 + C25487) * C13226 + (C25486 + C25485) * C13222 +
           (C18764 * C5574 + C18762 * C5577 + C18765 * C6102 + C18763 * C6103) *
               C13227 +
           (C18764 * C5576 + C18762 * C5580 + C18765 * C6104 + C18763 * C6105) *
               C13223) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C1880 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C1881 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31102) *
              C30816 * C31133 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C1881 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C1880 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C31102) *
              C30816 * C31120 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C1880 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C1881 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
             C18763 * C2477) *
                C13227 +
            (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
             C18763 * C2481) *
                C13223) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C1880 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C1881 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31102) *
              C31136 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C1881 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C1880 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C31102) *
              C31124 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C1880 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C1881 +
           ((C25670 + C25669) * C13226 + (C25668 + C25667) * C13222 +
            (C18764 * C5704 + C18762 * C5708 + C18765 * C6762 +
             C18763 * C6763) *
                C13227 +
            (C18764 * C5707 + C18762 * C5713 + C18765 * C6764 +
             C18763 * C6765) *
                C13223) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C3342 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C31070 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C3342) *
               C30879) *
              C30793 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C3342) *
               C31070 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C3342 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C30766 * C3342 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C30766 * C30921) *
               C31070 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
              C18763 * C1359) *
                 C13227 +
             (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
              C18763 * C1369) *
                 C13223) *
                C30766 * C30921 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C30766 * C3342) *
               C30879) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C30917 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30924 +
            ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C13226 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C13222 +
             (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
                C30766 * C3850) *
               C31070 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30924 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C30917 -
            ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
             (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
                C30766 * C3850) *
               C30879) *
              C2688 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30924 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C30917 -
            ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
             (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
                C30766 * C3850) *
               C31070 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C30917 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30924 +
            ((C21136 + C21135) * C13226 + (C21134 + C21133) * C13222 +
             (C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C13227 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C13223) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C3342 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C31136 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C3342) *
               C31124 +
           (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
             (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
                C30766 * C3342 -
            ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
             (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C3342) *
               C31136 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C3342 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C31124 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C13227 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C13223) *
                C30766 * C30921 -
            ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C3342 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C30816 * C31142 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C30921 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C3342) *
              C30816 * C31135 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C3342 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C30921) *
              C30816 * C31122 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C974 + C18762 * C983 + C18765 * C2230 + C18763 * C2231) *
                C13227 +
            (C18764 * C982 + C18762 * C989 + C18765 * C2232 + C18763 * C2233) *
                C13223) *
               C30766 * C30921 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31144 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C31141 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31132 -
           ((C26973 + C26974) * C13223 + (C26975 + C26976) * C13227 +
            (C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
             C18762 * C2080) *
                C13222 +
            (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
             C18762 * C2071) *
                C13226) *
               C30766 * C31115) *
              C30816 * C2688 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C31141 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C31144 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C31132 +
           ((C21278 + C21277) * C13226 + (C21276 + C21275) * C13222 +
            (C18764 * C2471 + C18762 * C2475 + C18765 * C10700 +
             C18763 * C10701) *
                C13227 +
            (C18764 * C2476 + C18762 * C2480 + C18765 * C10702 +
             C18763 * C10703) *
                C13223) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30917 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30924 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C3850) *
              C30816 * C30793 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C30924 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30917 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C3850) *
              C30816 * C30802 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30917 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C30924 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
             C18763 * C2477) *
                C13227 +
            (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
             C18763 * C2481) *
                C13223) *
               C30766 * C3850) *
              C30816 * C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C3342 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C30816 * C31142 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C30921 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C3342) *
              C30816 * C31135 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C3342 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C30921) *
              C30816 * C31122 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C974 + C18762 * C983 + C18765 * C2230 + C18763 * C2231) *
                C13227 +
            (C18764 * C982 + C18762 * C989 + C18765 * C2232 + C18763 * C2233) *
                C13223) *
               C30766 * C30921 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C3342 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C31136 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C3342) *
               C31124 +
           (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
             (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
                C30766 * C3342 -
            ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
             (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C3342) *
               C31136 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C3342 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C31124 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C13227 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C13223) *
                C30766 * C30921 -
            ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31070 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C30879) *
              C695 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C30879 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31070) *
              C696 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C31070 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C30879) *
              C697 +
          (((C19344 + C19343) * C13226 + (C19342 + C19341) * C13222 +
            (C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                C13227 +
            (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                C13223) *
               C30766 * C30834 * C30879 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C1468 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C1469 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C30834 * C1470 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C30834 * C31109) *
              C31056 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C1469 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C1468 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C1470 +
           ((C20220 + C20219) * C13226 + (C20218 + C20217) * C13222 +
            (C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C13227 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C13223) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31071 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C31070 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C18764 * C1339 + C18762 * C1354 + C18765 * C1340 +
              C18763 * C1355) *
                 C13227 +
             (C18764 * C1353 + C18762 * C1366 + C18765 * C1356 +
              C18763 * C1367) *
                 C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31071) *
               C30879) *
              C299 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31071) *
               C31070 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31071 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C30879) *
              C300 +
          ((((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
             (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
                C30766 * C31071 -
            ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
             (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
                C30766 * C30921) *
               C31070 +
           (((C19704 + C19703) * C13226 + (C19702 + C19701) * C13222 +
             (C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
              C18763 * C1359) *
                 C13227 +
             (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
              C18763 * C1369) *
                 C13223) *
                C30766 * C30921 -
            ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
             (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31071 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C1468 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C30921 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C31071) *
              C1469 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C31071 -
           ((C26133 + C26134) * C13223 + (C26135 + C26136) * C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C30921) *
              C1470 +
          (((C26136 + C26135) * C13226 + (C26134 + C26133) * C13222 +
            (C18764 * C5705 + C18762 * C5710 + C18765 * C5706 +
             C18763 * C5711) *
                C13227 +
            (C18764 * C5709 + C18762 * C5714 + C18765 * C5712 +
             C18763 * C5715) *
                C13223) *
               C30766 * C30921 -
           ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
            (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31136 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C31124 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C31124 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31136 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C31136 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C31124 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C18764 * C304 + C18762 * C317 + C18765 * C971 + C18763 * C976) *
               C13227 +
           (C18764 * C316 + C18762 * C334 + C18765 * C977 + C18763 * C986) *
               C13223) *
              C30766 * C30834 * C30816 * C108 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
              C30766 * C30834 * C30816 * C109 +
          ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
           (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
              C30766 * C30834 * C30816 * C110 -
          ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
           (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
              C30766 * C30834 * C30816 * C111 +
          ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
           (C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
               C13227 +
           (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
               C13223) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31137 -
           ((C18765 * C1347 + C18763 * C1363 + C18764 * C977 + C18762 * C986) *
                C13223 +
            (C18765 * C1336 + C18763 * C1348 + C18764 * C971 + C18762 * C976) *
                C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C31126 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C18764 * C1336 + C18762 * C1348 + C18765 * C2470 +
             C18763 * C2473) *
                C13227 +
            (C18764 * C1347 + C18762 * C1363 + C18765 * C2474 +
             C18763 * C2479) *
                C13223) *
               C30766 * C31102) *
              C30816 * C299 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C31126 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C31137 -
           ((C21133 + C21134) * C13223 + (C21135 + C21136) * C13227 +
            (C19194 + C19193) * C13222 + (C19192 + C19191) * C13226) *
               C30766 * C31102) *
              C30816 * C300 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C31137 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C31126 +
           ((C19202 + C19201) * C13226 + (C19200 + C19199) * C13222 +
            (C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
             C18763 * C2477) *
                C13227 +
            (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
             C18763 * C2481) *
                C13223) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C1126 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C1127 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C1127 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C1126 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C1126 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C1127 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
              C30766 * C30834 * C1194 -
          ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
           (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
              C30766 * C30834 * C1195 +
          ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
           (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
              C30766 * C30834 * C1196 -
          ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
           (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
              C30766 * C30834 * C1197 +
          ((C25488 + C25487) * C13226 + (C25486 + C25485) * C13222 +
           (C18764 * C5574 + C18762 * C5577 + C18765 * C6102 + C18763 * C6103) *
               C13227 +
           (C18764 * C5576 + C18762 * C5580 + C18765 * C6104 + C18763 * C6105) *
               C13223) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31137 -
           ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C31126 +
           ((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C13226 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C13222 +
            (C25659 + C25660) * C13227 + (C25661 + C25662) * C13223) *
               C30766 * C31102) *
              C1126 +
          (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
            (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
               C30766 * C31126 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C31137 -
           ((C25667 + C25668) * C13223 + (C25669 + C25670) * C13227 +
            (C25662 + C25661) * C13222 + (C25660 + C25659) * C13226) *
               C30766 * C31102) *
              C1127 +
          (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
               C30766 * C31137 -
           ((C18765 * C5707 + C18763 * C5713 + C18764 * C1762 +
             C18762 * C1767) *
                C13223 +
            (C18765 * C5704 + C18763 * C5708 + C18764 * C1758 +
             C18762 * C1761) *
                C13227 +
            (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
               C30766 * C31126 +
           ((C25670 + C25669) * C13226 + (C25668 + C25667) * C13222 +
            (C18764 * C5704 + C18762 * C5708 + C18765 * C6762 +
             C18763 * C6763) *
                C13227 +
            (C18764 * C5707 + C18762 * C5713 + C18765 * C6764 +
             C18763 * C6765) *
                C13223) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C31071 -
           ((C18765 * C1347 + C18763 * C1363 + C18764 * C977 + C18762 * C986) *
                C13223 +
            (C18765 * C1336 + C18763 * C1348 + C18764 * C971 + C18762 * C976) *
                C13227 +
            (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C13222 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C13226) *
               C30766 * C30921) *
              C30816 * C695 +
          (((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
            (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
               C30766 * C30921 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C31071) *
              C30816 * C696 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C31071 -
           ((C19701 + C19702) * C13223 + (C19703 + C19704) * C13227 +
            (C19198 + C19197) * C13222 + (C19196 + C19195) * C13226) *
               C30766 * C30921) *
              C30816 * C697 +
          (((C19486 + C19485) * C13226 + (C19484 + C19483) * C13222 +
            (C18764 * C974 + C18762 * C983 + C18765 * C2230 + C18763 * C2231) *
                C13227 +
            (C18764 * C982 + C18762 * C989 + C18765 * C2232 + C18763 * C2233) *
                C13223) *
               C30766 * C30921 -
           ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
            (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C13226 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C13222 +
             (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
                C30766 * C31071 -
            ((C25233 + C25234) * C13223 + (C25235 + C25236) * C13227 +
             (C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C13222 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C13226) *
                C30766 * C30921) *
               C1126 +
           (((C25236 + C25235) * C13226 + (C25234 + C25233) * C13222 +
             (C25663 + C25664) * C13227 + (C25665 + C25666) * C13223) *
                C30766 * C30921 -
            ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
             (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
                C30766 * C31071) *
               C1127 +
           (((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
             (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
                C30766 * C31071 -
            ((C18765 * C5707 + C18763 * C5713 + C18764 * C1762 +
              C18762 * C1767) *
                 C13223 +
             (C18765 * C5704 + C18763 * C5708 + C18764 * C1758 +
              C18762 * C1761) *
                 C13227 +
             (C25666 + C25665) * C13222 + (C25664 + C25663) * C13226) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          ((((C19190 + C19189) * C13226 + (C19188 + C19187) * C13222 +
             (C19697 + C19698) * C13227 + (C19699 + C19700) * C13223) *
                C30766 * C30921 -
            ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
             (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
                C30766 * C31071) *
               C1126 +
           (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
             (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
                C30766 * C31071 -
            ((C20423 + C20424) * C13223 + (C20425 + C20426) * C13227 +
             (C19700 + C19699) * C13222 + (C19698 + C19697) * C13226) *
                C30766 * C30921) *
               C1127 +
           (((C20426 + C20425) * C13226 + (C20424 + C20423) * C13222 +
             (C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C13227 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C13223) *
                C30766 * C30921 -
            ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
             (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C18764 * C304 + C18762 * C317 + C18765 * C971 + C18763 * C976) *
               C13227 +
           (C18764 * C316 + C18762 * C334 + C18765 * C977 + C18763 * C986) *
               C13223) *
              C30766 * C30834 * C30816 * C108 -
          ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
           (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
              C30766 * C30834 * C30816 * C109 +
          ((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
           (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
              C30766 * C30834 * C30816 * C110 -
          ((C19341 + C19342) * C13223 + (C19343 + C19344) * C13227 +
           (C18810 + C18809) * C13222 + (C18808 + C18807) * C13226) *
              C30766 * C30834 * C30816 * C111 +
          ((C18814 + C18813) * C13226 + (C18812 + C18811) * C13222 +
           (C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
               C13227 +
           (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
               C13223) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C31136 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C31124 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C31124 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C31136 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C31136 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C31124 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C13226 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C13222 +
            (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
               C30766 * C30834 * C1126 -
           ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
            (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
               C30766 * C30834 * C1127 +
           ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
            (C18764 * C1202 + C18762 * C1211 + C18765 * C1758 +
             C18763 * C1761) *
                C13227 +
            (C18764 * C1210 + C18762 * C1220 + C18765 * C1762 +
             C18763 * C1767) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C18996 + C18995) * C13226 + (C18994 + C18993) * C13222 +
            (C18997 + C18998) * C13227 + (C18999 + C19000) * C13223) *
               C30766 * C30834 * C1127 -
           ((C18993 + C18994) * C13223 + (C18995 + C18996) * C13227 +
            (C18802 + C18801) * C13222 + (C18800 + C18799) * C13226) *
               C30766 * C30834 * C1126 -
           ((C20217 + C20218) * C13223 + (C20219 + C20220) * C13227 +
            (C19000 + C18999) * C13222 + (C18998 + C18997) * C13226) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C18806 + C18805) * C13226 + (C18804 + C18803) * C13222 +
            (C19001 + C19002) * C13227 + (C19003 + C19004) * C13223) *
               C30766 * C30834 * C1126 -
           ((C19005 + C19006) * C13223 + (C19007 + C19008) * C13227 +
            (C19004 + C19003) * C13222 + (C19002 + C19001) * C13226) *
               C30766 * C30834 * C1127 +
           ((C19008 + C19007) * C13226 + (C19006 + C19005) * C13222 +
            (C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
             C18763 * C1765) *
                C13227 +
            (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
             C18763 * C1769) *
                C13223) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
               C13226 +
           (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
               C13222 +
           (C24617 + C24618) * C13227 + (C24619 + C24620) * C13223) *
              C30766 * C30834 * C1194 -
          ((C24621 + C24622) * C13223 + (C24623 + C24624) * C13227 +
           (C24620 + C24619) * C13222 + (C24618 + C24617) * C13226) *
              C30766 * C30834 * C1195 +
          ((C24624 + C24623) * C13226 + (C24622 + C24621) * C13222 +
           (C25481 + C25482) * C13227 + (C25483 + C25484) * C13223) *
              C30766 * C30834 * C1196 -
          ((C25485 + C25486) * C13223 + (C25487 + C25488) * C13227 +
           (C25484 + C25483) * C13222 + (C25482 + C25481) * C13226) *
              C30766 * C30834 * C1197 +
          ((C25488 + C25487) * C13226 + (C25486 + C25485) * C13222 +
           (C18764 * C5574 + C18762 * C5577 + C18765 * C6102 + C18763 * C6103) *
               C13227 +
           (C18764 * C5576 + C18762 * C5580 + C18765 * C6104 + C18763 * C6105) *
               C13223) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[50] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31012 * C122) * C4807 +
                    (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
                    C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                       C30766 * C30834 * C30875 -
                   (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 +
                    C4935 * C4808 + C4934 * C4803 + C4933 * C4807) *
                       C30766 * C30834 * C30882 +
                   (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 +
                    C4937 * C4804 + C5591 * C4809 + C5592 * C4805) *
                       C30766 * C30834 * C2948) *
                      C30793 +
                  ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
                    C1490 * C4809 + C1489 * C4805) *
                       C30766 * C30834 * C30882 -
                   (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
                    C165 * C4803 + C164 * C4807) *
                       C30766 * C30834 * C30875 -
                   (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 +
                    C1490 * C4808 + C372 * C4803 + C371 * C4807) *
                       C30766 * C30834 * C2948) *
                      C30802 +
                  ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
                    C373 * C4809 + C374 * C4805) *
                       C30766 * C30834 * C30875 -
                   (C1487 * C4805 + C1488 * C4809 + C374 * C4804 +
                    C373 * C4808 + C367 * C4803 + C368 * C4807) *
                       C30766 * C30834 * C30882 +
                   (C373 * C4807 + C374 * C4803 + C1488 * C4808 +
                    C1487 * C4804 + (C113 * C1205 + C31012 * C1216) * C4809 +
                    (C113 * C1217 + C31012 * C1223) * C4805) *
                       C30766 * C30834 * C2948) *
                      C2951)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C114 +
                     (C113 * C123 + C31012 * C136) * C30999) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30834 * C30875 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31012 * C334) * C30999 +
                     (C113 * C304 + C31012 * C317) * C114) *
                        C103) *
                       C30834 * C30882 +
                   (((C113 * C305 + C31012 * C318) * C114 +
                     (C113 * C319 + C31012 * C335) * C30999) *
                        C103 +
                    (C383 + C384) * C104 + C392 * C105) *
                       C30834 * C2948) *
                      C30793 +
                  (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                       C30834 * C30882 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30834 * C30875 -
                   ((C389 + C390) * C105 + (C386 + C385) * C104 +
                    (C384 + C383) * C103) *
                       C30834 * C2948) *
                      C30802 +
                  ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                       C30875 -
                   ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                       C30834 * C30882 +
                   (C392 * C103 + (C390 + C389) * C104 +
                    ((C113 * C311 + C31012 * C330) * C114 +
                     (C113 * C331 + C31012 * C341) * C30999) *
                        C105) *
                       C30834 * C2948) *
                      C2951)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
                     C9077 * C508 + C9074 * C521) *
                        C114 +
                    (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
                     C9077 * C522 + C9074 * C538) *
                        C30999) *
                       C30766 * C30834 * C30875 -
                   ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 +
                     C9073 * C986 + C9075 * C316 + C9072 * C334) *
                        C30999 +
                    (C9077 * C1336 + C9074 * C1348 + C9076 * C971 +
                     C9073 * C976 + C9075 * C304 + C9072 * C317) *
                        C114) *
                       C30766 * C30834 * C30882 +
                   ((C9075 * C305 + C9072 * C318 + C9076 * C1339 +
                     C9073 * C1354 + C9077 * C1340 + C9074 * C1355) *
                        C114 +
                    (C9075 * C319 + C9072 * C335 + C9076 * C1353 +
                     C9073 * C1366 + C9077 * C1356 + C9074 * C1367) *
                        C30999) *
                       C30766 * C30834 * C2948) *
                      C30793 +
                  (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
                     C9077 * C1335 + C9074 * C1346) *
                        C114 +
                    (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
                     C9077 * C1345 + C9074 * C1362) *
                        C30999) *
                       C30766 * C30834 * C30882 -
                   ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
                     C9075 * C125 + C9072 * C137) *
                        C30999 +
                    (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
                     C9075 * C116 + C9072 * C124) *
                        C114) *
                       C30766 * C30834 * C30875 -
                   ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 +
                     C9073 * C1365 + C9075 * C321 + C9072 * C336) *
                        C30999 +
                    (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 +
                     C9073 * C1352 + C9075 * C306 + C9072 * C320) *
                        C114) *
                       C30766 * C30834 * C2948) *
                      C30802 +
                  (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
                     C9077 * C510 + C9074 * C525) *
                        C114 +
                    (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
                     C9077 * C526 + C9074 * C540) *
                        C30999) *
                       C30766 * C30834 * C30875 -
                   ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 +
                     C9073 * C988 + C9075 * C312 + C9072 * C332) *
                        C30999 +
                    (C9077 * C1334 + C9074 * C1344 + C9076 * C973 +
                     C9073 * C980 + C9075 * C302 + C9072 * C313) *
                        C114) *
                       C30766 * C30834 * C30882 +
                   ((C9075 * C307 + C9072 * C322 + C9076 * C1337 +
                     C9073 * C1350 + C9077 * C1342 + C9074 * C1359) *
                        C114 +
                    (C9075 * C323 + C9072 * C337 + C9076 * C1349 +
                     C9073 * C1364 + C9077 * C1360 + C9074 * C1369) *
                        C30999) *
                       C30766 * C30834 * C2948) *
                      C2951)) /
                    (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C30875 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30882 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C31071 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C2948) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C30875 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30882 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C31071) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C30875 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30882 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31071 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C2948) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C30875 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30882 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31071) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C30875 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31071) *
               C30882 +
           (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
              C9077 * C1340 + C9074 * C1355) *
                 C114 +
             (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
              C9077 * C1356 + C9074 * C1367) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
              C9075 * C1353 + C9072 * C1366) *
                 C30999 +
             (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
              C9075 * C1339 + C9072 * C1354) *
                 C114) *
                C30766 * C30921) *
               C2948) *
              C2688 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31071) *
               C30875 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30882 +
           (((C9075 * C1338 + C9072 * C1352 + C9076 * C1341 + C9073 * C1357 +
              C9077 * C6660 + C9074 * C6661) *
                 C114 +
             (C9075 * C1351 + C9072 * C1365 + C9076 * C1358 + C9073 * C1368 +
              C9077 * C6662 + C9074 * C6663) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
              C9075 * C321 + C9072 * C336) *
                 C30999 +
             (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
              C9075 * C306 + C9072 * C320) *
                 C114) *
                C30766 * C31071) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C2580 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C30879) *
                  C31142 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30834 * C30879 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C2580) *
                  C31135 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                   C2580 -
               ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C30834 * C30879) *
                  C31122 +
              ((C704 * C103 + (C712 + C711) * C104 +
                ((C113 * C699 + C31012 * C700) * C114 +
                 (C113 * C701 + C31012 * C702) * C30999) *
                    C105) *
                   C30834 * C30879 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C30834 * C2580) *
                  C31103) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C31143 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C31139 +
               (((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30834 * C31129 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31012 * C1220) * C30999 +
                 (C113 * C1202 + C31012 * C1211) * C114) *
                    C103) *
                   C30834 * C31109) *
                  C2688 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30834 * C31139 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C31143 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30834 * C31129 +
               ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
                ((C113 * C1474 + C31012 * C1475) * C114 +
                 (C113 * C1476 + C31012 * C1477) * C30999) *
                    C105) *
                   C30834 * C31109) *
                  C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31137 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C31126 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31102) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C31126 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31137 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C31102) *
               C30879) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C31126 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31137 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31102) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31137 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C31126 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C2580 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C31142 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C2580) *
              C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C2580 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C31122 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31143 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31139 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C31129 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C2688 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31139 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31143 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31129 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31137 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C31126 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C31102) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C31126 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31137 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C31102) *
               C30879) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C31126 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31137 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C31102) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31137 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C31126 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C2580 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C30879) *
              C31142 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C30879 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C2580) *
              C31135 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C2580 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C30879) *
              C31122 +
          (((C9075 * C308 + C9072 * C324 + C9076 * C974 + C9073 * C983 +
             C9077 * C2230 + C9074 * C2231) *
                C114 +
            (C9075 * C325 + C9072 * C338 + C9076 * C982 + C9073 * C989 +
             C9077 * C2232 + C9074 * C2233) *
                C30999) *
               C30766 * C30834 * C30879 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31143 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C31139 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31129 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C30834 * C31109) *
              C2688 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C31139 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31143 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31129 +
           ((C9075 * C1201 + C9072 * C1209 + C9076 * C1759 + C9073 * C1763 +
             C9077 * C6552 + C9074 * C6553) *
                C114 +
            (C9075 * C1208 + C9072 * C1219 + C9076 * C1764 + C9073 * C1768 +
             C9077 * C6554 + C9074 * C6555) *
                C30999) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31137 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C31126 +
            ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
              C9077 * C2063 + C9074 * C2072) *
                 C114 +
             (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
              C9077 * C2073 + C9074 * C2081) *
                 C30999) *
                C30766 * C31102) *
               C2580 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C31126 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31137 -
            ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
              C9075 * C1347 + C9072 * C1363) *
                 C30999 +
             (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
              C9075 * C1336 + C9072 * C1348) *
                 C114) *
                C30766 * C31102) *
               C30879) *
              C2688 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C31126 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31137 -
            ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
              C9075 * C524 + C9072 * C539) *
                 C30999 +
             (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
              C9075 * C509 + C9072 * C523) *
                 C114) *
                C30766 * C31102) *
               C2580 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31137 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C31126 +
            ((C9075 * C1335 + C9072 * C1346 + C9076 * C2471 + C9073 * C2475 +
              C9077 * C10700 + C9074 * C10701) *
                 C114 +
             (C9075 * C1345 + C9072 * C1362 + C9076 * C2476 + C9073 * C2480 +
              C9077 * C10702 + C9074 * C10703) *
                 C30999) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30879) *
              C30793 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C31071 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C31071) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30879) *
              C30793 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C30802 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31071) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C2580 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31071) *
               C30879) *
              C30793 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31071) *
               C2580 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          ((((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
              C9077 * C510 + C9074 * C525) *
                 C114 +
             (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
              C9077 * C526 + C9074 * C540) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
              C9075 * C515 + C9072 * C535) *
                 C30999 +
             (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
              C9075 * C505 + C9072 * C516) *
                 C114) *
                C30766 * C30921) *
               C2580 +
           (((C9075 * C973 + C9072 * C980 + C9076 * C1334 + C9073 * C1344 +
              C9077 * C2472 + C9074 * C2477) *
                 C114 +
             (C9075 * C981 + C9072 * C988 + C9076 * C1343 + C9073 * C1361 +
              C9077 * C2478 + C9074 * C2481) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
              C9075 * C312 + C9072 * C332) *
                 C30999 +
             (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
              C9075 * C302 + C9072 * C313) *
                 C114) *
                C30766 * C31071) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31143 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31139 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31129 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C30834 * C31109) *
              C2688 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C31139 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31143 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31129 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31012 * C1475) * C114 +
             (C113 * C1476 + C31012 * C1477) * C30999) *
                C105) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C2580 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C30879) *
              C31142 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C30879 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C2580) *
              C31135 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C2580 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C30879) *
              C31122 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31012 * C700) * C114 +
             (C113 * C701 + C31012 * C702) * C30999) *
                C105) *
               C30834 * C30879 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C2580 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C31142 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C2580) *
              C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C2580 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C31122 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31143 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31139 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C31129 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C2688 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31139 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31143 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31129 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C2580 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C30879) *
              C31142 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C30879 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C2580) *
              C31135 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C2580 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C30879) *
              C31122 +
          (((C9075 * C308 + C9072 * C324 + C9076 * C974 + C9073 * C983 +
             C9077 * C2230 + C9074 * C2231) *
                C114 +
            (C9075 * C325 + C9072 * C338 + C9076 * C982 + C9073 * C989 +
             C9077 * C2232 + C9074 * C2233) *
                C30999) *
               C30766 * C30834 * C30879 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31143 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C31139 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31129 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C30834 * C31109) *
              C2688 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C31139 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31143 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31129 +
           ((C9075 * C1201 + C9072 * C1209 + C9076 * C1759 + C9073 * C1763 +
             C9077 * C6552 + C9074 * C6553) *
                C114 +
            (C9075 * C1208 + C9072 * C1219 + C9076 * C1764 + C9073 * C1768 +
             C9077 * C6554 + C9074 * C6555) *
                C30999) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C30875 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30882 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C3342 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C2948) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C30875 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30882 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C3342) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C30875 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30882 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C2948) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C30875 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30882 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C30875 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C3342) *
               C30882 +
           (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
              C9077 * C1340 + C9074 * C1355) *
                 C114 +
             (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
              C9077 * C1356 + C9074 * C1367) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
              C9075 * C1353 + C9072 * C1366) *
                 C30999 +
             (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
              C9075 * C1339 + C9072 * C1354) *
                 C114) *
                C30766 * C30921) *
               C2948) *
              C31056 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C3342) *
               C30875 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30882 +
           (((C9075 * C1338 + C9072 * C1352 + C9076 * C1341 + C9073 * C1357 +
              C9077 * C6660 + C9074 * C6661) *
                 C114 +
             (C9075 * C1351 + C9072 * C1365 + C9076 * C1358 + C9073 * C1368 +
              C9077 * C6662 + C9074 * C6663) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
              C9075 * C321 + C9072 * C336) *
                 C30999 +
             (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
              C9075 * C306 + C9072 * C320) *
                 C114) *
                C30766 * C3342) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31012 * C122) * C4807 +
                    (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
                    C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                       C30766 * C30917 -
                   (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 +
                    C5402 * C4808 + (C113 * C519 + C31012 * C537) * C4803 +
                    (C113 * C507 + C31012 * C520) * C4807) *
                       C30766 * C30924 +
                   ((C113 * C508 + C31012 * C521) * C4807 +
                    (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
                    C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                       C30766 * C3850) *
                      C30875 +
                  ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 +
                    C5399 * C4804 + C5737 * C4809 + C5738 * C4805) *
                       C30766 * C30924 -
                   (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 +
                    C4935 * C4808 + C4934 * C4803 + C4933 * C4807) *
                       C30766 * C30917 -
                   (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 +
                    C5735 * C4808 + C5734 * C4803 + C5733 * C4807) *
                       C30766 * C3850) *
                      C30882 +
                  ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 +
                    C4937 * C4804 + C5591 * C4809 + C5592 * C4805) *
                       C30766 * C30917 -
                   (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 +
                    C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
                       C30766 * C30924 +
                   (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 +
                    C5739 * C4804 + (C113 * C5706 + C31012 * C5711) * C4809 +
                    (C113 * C5712 + C31012 * C5715) * C4805) *
                       C30766 * C3850) *
                      C2948) *
                 C30788) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C114 +
                     (C113 * C123 + C31012 * C136) * C30999) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30917 -
                   (C594 * C105 + (C584 + C585) * C104 +
                    ((C113 * C519 + C31012 * C537) * C30999 +
                     (C113 * C507 + C31012 * C520) * C114) *
                        C103) *
                       C30924 +
                   (((C113 * C508 + C31012 * C521) * C114 +
                     (C113 * C522 + C31012 * C538) * C30999) *
                        C103 +
                    (C586 + C587) * C104 + C595 * C105) *
                       C3850) *
                      C30875 +
                  ((((C113 * C971 + C31012 * C976) * C114 +
                     (C113 * C977 + C31012 * C986) * C30999) *
                        C103 +
                    (C1010 + C1011) * C104 + C1016 * C105) *
                       C30924 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31012 * C334) * C30999 +
                     (C113 * C304 + C31012 * C317) * C114) *
                        C103) *
                       C30917 -
                   ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
                    ((C113 * C1347 + C31012 * C1363) * C30999 +
                     (C113 * C1336 + C31012 * C1348) * C114) *
                        C103) *
                       C3850) *
                      C30882 +
                  ((((C113 * C305 + C31012 * C318) * C114 +
                     (C113 * C319 + C31012 * C335) * C30999) *
                        C103 +
                    (C383 + C384) * C104 + C392 * C105) *
                       C30917 -
                   ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                    ((C113 * C1353 + C31012 * C1366) * C30999 +
                     (C113 * C1339 + C31012 * C1354) * C114) *
                        C103) *
                       C30924 +
                   (((C113 * C1340 + C31012 * C1355) * C114 +
                     (C113 * C1356 + C31012 * C1367) * C30999) *
                        C103 +
                    ((C113 * C1341 + C31012 * C1357) * C114 +
                     (C113 * C1358 + C31012 * C1368) * C30999) *
                        C104 +
                    ((C113 * C1342 + C31012 * C1359) * C114 +
                     (C113 * C1360 + C31012 * C1369) * C30999) *
                        C105) *
                       C3850) *
                      C2948) *
                 C30788) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
                     C9077 * C508 + C9074 * C521) *
                        C114 +
                    (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
                     C9077 * C522 + C9074 * C538) *
                        C30999) *
                       C30766 * C30917 -
                   ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 +
                     C9073 * C538 + C9075 * C519 + C9072 * C537) *
                        C30999 +
                    (C9077 * C2062 + C9074 * C2071 + C9076 * C508 +
                     C9073 * C521 + C9075 * C507 + C9072 * C520) *
                        C114) *
                       C30766 * C30924 +
                   ((C9075 * C508 + C9072 * C521 + C9076 * C2062 +
                     C9073 * C2071 + C9077 * C2063 + C9074 * C2072) *
                        C114 +
                    (C9075 * C522 + C9072 * C538 + C9076 * C2070 +
                     C9073 * C2080 + C9077 * C2073 + C9074 * C2081) *
                        C30999) *
                       C30766 * C3850) *
                      C30875 +
                  (((C9075 * C971 + C9072 * C976 + C9076 * C1336 +
                     C9073 * C1348 + C9077 * C2470 + C9074 * C2473) *
                        C114 +
                    (C9075 * C977 + C9072 * C986 + C9076 * C1347 +
                     C9073 * C1363 + C9077 * C2474 + C9074 * C2479) *
                        C30999) *
                       C30766 * C30924 -
                   ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 +
                     C9073 * C986 + C9075 * C316 + C9072 * C334) *
                        C30999 +
                    (C9077 * C1336 + C9074 * C1348 + C9076 * C971 +
                     C9073 * C976 + C9075 * C304 + C9072 * C317) *
                        C114) *
                       C30766 * C30917 -
                   ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 +
                     C9073 * C2479 + C9075 * C1347 + C9072 * C1363) *
                        C30999 +
                    (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 +
                     C9073 * C2473 + C9075 * C1336 + C9072 * C1348) *
                        C114) *
                       C30766 * C3850) *
                      C30882 +
                  (((C9075 * C305 + C9072 * C318 + C9076 * C1339 +
                     C9073 * C1354 + C9077 * C1340 + C9074 * C1355) *
                        C114 +
                    (C9075 * C319 + C9072 * C335 + C9076 * C1353 +
                     C9073 * C1366 + C9077 * C1356 + C9074 * C1367) *
                        C30999) *
                       C30766 * C30917 -
                   ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 +
                     C9073 * C1367 + C9075 * C1353 + C9072 * C1366) *
                        C30999 +
                    (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 +
                     C9073 * C1355 + C9075 * C1339 + C9072 * C1354) *
                        C114) *
                       C30766 * C30924 +
                   ((C9075 * C1340 + C9072 * C1355 + C9076 * C6394 +
                     C9073 * C6398 + C9077 * C6396 + C9074 * C6401) *
                        C114 +
                    (C9075 * C1356 + C9072 * C1367 + C9076 * C6397 +
                     C9073 * C6403 + C9077 * C6402 + C9074 * C6405) *
                        C30999) *
                       C30766 * C3850) *
                      C2948) *
                 C30788) /
                    (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31012 * C122) * C114 +
                  (C113 * C123 + C31012 * C136) * C30999) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C3342 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31012 * C537) * C30999 +
                  (C113 * C507 + C31012 * C520) * C114) *
                     C103) *
                    C30921) *
                   C2580 +
               ((((C113 * C971 + C31012 * C976) * C114 +
                  (C113 * C977 + C31012 * C986) * C30999) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30921 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31012 * C334) * C30999 +
                  (C113 * C304 + C31012 * C317) * C114) *
                     C103) *
                    C3342) *
                   C30879) *
                  C31133 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30921 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C3342) *
                   C2580 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C3342 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30921) *
                   C30879) *
                  C31120 +
              (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
                ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                    C30921) *
                   C2580 +
               ((C1016 * C103 + (C1015 + C1014) * C104 +
                 ((C113 * C975 + C31012 * C984) * C114 +
                  (C113 * C985 + C31012 * C990) * C30999) *
                     C105) *
                    C30921 -
                ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                    C3342) *
                   C30879) *
                  C31093) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C3342 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C30921) *
                  C31143 +
              ((((C113 * C971 + C31012 * C976) * C114 +
                 (C113 * C977 + C31012 * C986) * C30999) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C30921 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C3342) *
                  C31139 +
              ((((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C3342 -
               ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                ((C113 * C1353 + C31012 * C1366) * C30999 +
                 (C113 * C1339 + C31012 * C1354) * C114) *
                    C103) *
                   C30921) *
                  C31129 +
              ((((C113 * C1758 + C31012 * C1761) * C114 +
                 (C113 * C1762 + C31012 * C1767) * C30999) *
                    C103 +
                ((C113 * C1759 + C31012 * C1763) * C114 +
                 (C113 * C1764 + C31012 * C1768) * C30999) *
                    C104 +
                ((C113 * C1760 + C31012 * C1765) * C114 +
                 (C113 * C1766 + C31012 * C1769) * C30999) *
                    C105) *
                   C30921 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31012 * C1220) * C30999 +
                 (C113 * C1202 + C31012 * C1211) * C114) *
                    C103) *
                   C3342) *
                  C31109) *
             C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31144 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31141 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31132 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C2580 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31141 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31144 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31132 +
           (((C113 * C2470 + C31012 * C2473) * C114 +
             (C113 * C2474 + C31012 * C2479) * C30999) *
                C103 +
            ((C113 * C2471 + C31012 * C2475) * C114 +
             (C113 * C2476 + C31012 * C2480) * C30999) *
                C104 +
            ((C113 * C2472 + C31012 * C2477) * C114 +
             (C113 * C2478 + C31012 * C2481) * C30999) *
                C105) *
               C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C3342 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C31143 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C3342) *
              C31139 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C3342 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C31129 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31144 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31141 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31132 -
           (C6775 * C4805 + C6776 * C4809 + C6777 * C4804 + C6778 * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C2580 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C31141 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31144 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31132 +
           (C6778 * C4807 + C6777 * C4803 + C6776 * C4808 + C6775 * C4804 +
            (C113 * C6762 + C31012 * C6763) * C4809 +
            (C113 * C6764 + C31012 * C6765) * C4805) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C2580 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C3342) *
               C2580 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          ((((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
              C9077 * C510 + C9074 * C525) *
                 C114 +
             (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
              C9077 * C526 + C9074 * C540) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
              C9075 * C515 + C9072 * C535) *
                 C30999 +
             (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
              C9075 * C505 + C9072 * C516) *
                 C114) *
                C30766 * C30921) *
               C2580 +
           (((C9075 * C973 + C9072 * C980 + C9076 * C1334 + C9073 * C1344 +
              C9077 * C2472 + C9074 * C2477) *
                 C114 +
             (C9075 * C981 + C9072 * C988 + C9076 * C1343 + C9073 * C1361 +
              C9077 * C2478 + C9074 * C2481) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
              C9075 * C312 + C9072 * C332) *
                 C30999 +
             (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
              C9075 * C302 + C9072 * C313) *
                 C114) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C31143 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C3342) *
              C31139 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C30921) *
              C31129 +
          (((C9075 * C1758 + C9072 * C1761 + C9076 * C5704 + C9073 * C5708 +
             C9077 * C6762 + C9074 * C6763) *
                C114 +
            (C9075 * C1762 + C9072 * C1767 + C9076 * C5707 + C9073 * C5713 +
             C9077 * C6764 + C9074 * C6765) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31144 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C31141 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31132 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2073 + C9073 * C2081 +
             C9075 * C2070 + C9072 * C2080) *
                C30999 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2063 + C9073 * C2072 +
             C9075 * C2062 + C9072 * C2071) *
                C114) *
               C30766 * C31115) *
              C2580 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C31141 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C31144 -
           ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
             C9075 * C1347 + C9072 * C1363) *
                C30999 +
            (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
             C9075 * C1336 + C9072 * C1348) *
                C114) *
               C30766 * C31132 +
           ((C9075 * C2470 + C9072 * C2473 + C9076 * C6395 + C9073 * C6399 +
             C9077 * C10904 + C9074 * C10905) *
                C114 +
            (C9075 * C2474 + C9072 * C2479 + C9076 * C6400 + C9073 * C6404 +
             C9077 * C10906 + C9074 * C10907) *
                C30999) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C30917 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30924 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C3850) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30924 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C30917 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C3850) *
               C30879) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30924 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C30917 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C3850) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C30917 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30924 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30917 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30924 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30924 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C30917 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C3850) *
               C30879) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30924 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30917 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30917 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30924 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C30917 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30924 +
            ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
              C9077 * C2063 + C9074 * C2072) *
                 C114 +
             (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
              C9077 * C2073 + C9074 * C2081) *
                 C30999) *
                C30766 * C3850) *
               C2580 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30924 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C30917 -
            ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
              C9075 * C1347 + C9072 * C1363) *
                 C30999 +
             (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
              C9075 * C1336 + C9072 * C1348) *
                 C114) *
                C30766 * C3850) *
               C30879) *
              C31056 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30924 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C30917 -
            ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
              C9075 * C524 + C9072 * C539) *
                 C30999 +
             (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
              C9075 * C509 + C9072 * C523) *
                 C114) *
                C30766 * C3850) *
               C2580 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C30917 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30924 +
            ((C9075 * C1335 + C9072 * C1346 + C9076 * C2471 + C9073 * C2475 +
              C9077 * C10700 + C9074 * C10701) *
                 C114 +
             (C9075 * C1345 + C9072 * C1362 + C9076 * C2476 + C9073 * C2480 +
              C9077 * C10702 + C9074 * C10703) *
                 C30999) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C31143 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30921 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C3342) *
              C31139 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C3342 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C30921) *
              C31129 +
          ((((C113 * C1758 + C31012 * C1761) * C114 +
             (C113 * C1762 + C31012 * C1767) * C30999) *
                C103 +
            ((C113 * C1759 + C31012 * C1763) * C114 +
             (C113 * C1764 + C31012 * C1768) * C30999) *
                C104 +
            ((C113 * C1760 + C31012 * C1765) * C114 +
             (C113 * C1766 + C31012 * C1769) * C30999) *
                C105) *
               C30921 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30879) *
              C31133 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C31120 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C3342 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C31143 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C3342) *
              C31139 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C3342 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C31129 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C2580 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C3342) *
               C2580 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          ((((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
              C9077 * C510 + C9074 * C525) *
                 C114 +
             (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
              C9077 * C526 + C9074 * C540) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
              C9075 * C515 + C9072 * C535) *
                 C30999 +
             (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
              C9075 * C505 + C9072 * C516) *
                 C114) *
                C30766 * C30921) *
               C2580 +
           (((C9075 * C973 + C9072 * C980 + C9076 * C1334 + C9073 * C1344 +
              C9077 * C2472 + C9074 * C2477) *
                 C114 +
             (C9075 * C981 + C9072 * C988 + C9076 * C1343 + C9073 * C1361 +
              C9077 * C2478 + C9074 * C2481) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
              C9075 * C312 + C9072 * C332) *
                 C30999 +
             (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
              C9075 * C302 + C9072 * C313) *
                 C114) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C31143 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C3342) *
              C31139 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C30921) *
              C31129 +
          (((C9075 * C1758 + C9072 * C1761 + C9076 * C5704 + C9073 * C5708 +
             C9077 * C6762 + C9074 * C6763) *
                C114 +
            (C9075 * C1762 + C9072 * C1767 + C9076 * C5707 + C9073 * C5713 +
             C9077 * C6764 + C9074 * C6765) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C31070 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C30879) *
                  C695 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30834 * C30879 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C31070) *
                  C696 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                   C31070 -
               ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C30834 * C30879) *
                  C697 +
              ((C704 * C103 + (C712 + C711) * C104 +
                ((C113 * C699 + C31012 * C700) * C114 +
                 (C113 * C701 + C31012 * C702) * C30999) *
                    C105) *
                   C30834 * C30879 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C30834 * C31070) *
                  C31103) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C1468 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C1469 +
               (((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30834 * C1470 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31012 * C1220) * C30999 +
                 (C113 * C1202 + C31012 * C1211) * C114) *
                    C103) *
                   C30834 * C31109) *
                  C31056 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30834 * C1469 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C1468 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30834 * C1470 +
               ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
                ((C113 * C1474 + C31012 * C1475) * C114 +
                 (C113 * C1476 + C31012 * C1477) * C30999) *
                    C105) *
                   C30834 * C31109) *
                  C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C1880 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C1881 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31102) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C1881 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C1880 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C31102) *
               C30879) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C1881 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C1880 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31102) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C1880 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C1881 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31070 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C695 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31070) *
              C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31070 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C697 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1468 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1469 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C1470 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C31056 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1469 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1468 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C1470 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C1880 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C1881 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C31102) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C1881 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C1880 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C31102) *
               C30879) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C1881 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C1880 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C31102) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C1880 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C1881 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31070 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C30879) *
              C695 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C30879 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31070) *
              C696 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C31070 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C30879) *
              C697 +
          (((C9075 * C308 + C9072 * C324 + C9076 * C974 + C9073 * C983 +
             C9077 * C2230 + C9074 * C2231) *
                C114 +
            (C9075 * C325 + C9072 * C338 + C9076 * C982 + C9073 * C989 +
             C9077 * C2232 + C9074 * C2233) *
                C30999) *
               C30766 * C30834 * C30879 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C1468 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C1469 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C1470 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C30834 * C31109) *
              C31056 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C1469 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C1468 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C1470 +
           ((C9075 * C1201 + C9072 * C1209 + C9076 * C1759 + C9073 * C1763 +
             C9077 * C6552 + C9074 * C6553) *
                C114 +
            (C9075 * C1208 + C9072 * C1219 + C9076 * C1764 + C9073 * C1768 +
             C9077 * C6554 + C9074 * C6555) *
                C30999) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C1880 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C1881 +
            ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
              C9077 * C2063 + C9074 * C2072) *
                 C114 +
             (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
              C9077 * C2073 + C9074 * C2081) *
                 C30999) *
                C30766 * C31102) *
               C31070 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C1881 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C1880 -
            ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
              C9075 * C1347 + C9072 * C1363) *
                 C30999 +
             (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
              C9075 * C1336 + C9072 * C1348) *
                 C114) *
                C30766 * C31102) *
               C30879) *
              C31056 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C1881 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C1880 -
            ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
              C9075 * C524 + C9072 * C539) *
                 C30999 +
             (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
              C9075 * C509 + C9072 * C523) *
                 C114) *
                C30766 * C31102) *
               C31070 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C1880 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C1881 +
            ((C9075 * C1335 + C9072 * C1346 + C9076 * C2471 + C9073 * C2475 +
              C9077 * C10700 + C9074 * C10701) *
                 C114 +
             (C9075 * C1345 + C9072 * C1362 + C9076 * C2476 + C9073 * C2480 +
              C9077 * C10702 + C9074 * C10703) *
                 C30999) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31012 * C122) * C114 +
                  (C113 * C123 + C31012 * C136) * C30999) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C31071 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31012 * C537) * C30999 +
                  (C113 * C507 + C31012 * C520) * C114) *
                     C103) *
                    C30921) *
                   C31070 +
               ((((C113 * C971 + C31012 * C976) * C114 +
                  (C113 * C977 + C31012 * C986) * C30999) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30921 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31012 * C334) * C30999 +
                  (C113 * C304 + C31012 * C317) * C114) *
                     C103) *
                    C31071) *
                   C30879) *
                  C299 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30921 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C31071) *
                   C31070 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C31071 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30921) *
                   C30879) *
                  C300 +
              (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
                ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                    C30921) *
                   C31070 +
               ((C1016 * C103 + (C1015 + C1014) * C104 +
                 ((C113 * C975 + C31012 * C984) * C114 +
                  (C113 * C985 + C31012 * C990) * C30999) *
                     C105) *
                    C30921 -
                ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                    C31071) *
                   C30879) *
                  C31093) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31071 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C30921) *
                  C1468 +
              ((((C113 * C971 + C31012 * C976) * C114 +
                 (C113 * C977 + C31012 * C986) * C30999) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C30921 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C31071) *
                  C1469 +
              ((((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31071 -
               ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                ((C113 * C1353 + C31012 * C1366) * C30999 +
                 (C113 * C1339 + C31012 * C1354) * C114) *
                    C103) *
                   C30921) *
                  C1470 +
              ((((C113 * C1758 + C31012 * C1761) * C114 +
                 (C113 * C1762 + C31012 * C1767) * C30999) *
                    C103 +
                ((C113 * C1759 + C31012 * C1763) * C114 +
                 (C113 * C1764 + C31012 * C1768) * C30999) *
                    C104 +
                ((C113 * C1760 + C31012 * C1765) * C114 +
                 (C113 * C1766 + C31012 * C1769) * C30999) *
                    C105) *
                   C30921 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31012 * C1220) * C30999 +
                 (C113 * C1202 + C31012 * C1211) * C114) *
                    C103) *
                   C31071) *
                  C31109) *
             C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C31070 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C2349 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C2348 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C2350 +
           (((C113 * C2470 + C31012 * C2473) * C114 +
             (C113 * C2474 + C31012 * C2479) * C30999) *
                C103 +
            ((C113 * C2471 + C31012 * C2475) * C114 +
             (C113 * C2476 + C31012 * C2480) * C30999) *
                C104 +
            ((C113 * C2472 + C31012 * C2477) * C114 +
             (C113 * C2478 + C31012 * C2481) * C30999) *
                C105) *
               C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             (C113 * C1758 + C31012 * C1761) * C4809 +
             (C113 * C1762 + C31012 * C1767) * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30879) *
              C299 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            ((C113 * C1764 + C31012 * C1768) * C4805 +
             (C113 * C1759 + C31012 * C1763) * C4809 + C1655 * C4804 +
             C1656 * C4808 + C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C300 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C31071 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C1468 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31071) *
              C1469 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31071 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C1470 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C2348 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C2349 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C2350 -
           (C6775 * C4805 + C6776 * C4809 + C6777 * C4804 + C6778 * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C31070 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C2349 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C2348 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C2350 +
           (C6778 * C4807 + C6777 * C4803 + C6776 * C4808 + C6775 * C4804 +
            (C113 * C6762 + C31012 * C6763) * C4809 +
            (C113 * C6764 + C31012 * C6765) * C4805) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C31070 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31071) *
               C30879) *
              C299 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31071) *
               C31070 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30879) *
              C300 +
          ((((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
              C9077 * C510 + C9074 * C525) *
                 C114 +
             (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
              C9077 * C526 + C9074 * C540) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
              C9075 * C515 + C9072 * C535) *
                 C30999 +
             (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
              C9075 * C505 + C9072 * C516) *
                 C114) *
                C30766 * C30921) *
               C31070 +
           (((C9075 * C973 + C9072 * C980 + C9076 * C1334 + C9073 * C1344 +
              C9077 * C2472 + C9074 * C2477) *
                 C114 +
             (C9075 * C981 + C9072 * C988 + C9076 * C1343 + C9073 * C1361 +
              C9077 * C2478 + C9074 * C2481) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
              C9075 * C312 + C9072 * C332) *
                 C30999 +
             (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
              C9075 * C302 + C9072 * C313) *
                 C114) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C1468 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C31071) *
              C1469 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C30921) *
              C1470 +
          (((C9075 * C1758 + C9072 * C1761 + C9076 * C5704 + C9073 * C5708 +
             C9077 * C6762 + C9074 * C6763) *
                C114 +
            (C9075 * C1762 + C9072 * C1767 + C9076 * C5707 + C9073 * C5713 +
             C9077 * C6764 + C9074 * C6765) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C2348 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C2349 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C2350 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2073 + C9073 * C2081 +
             C9075 * C2070 + C9072 * C2080) *
                C30999 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2063 + C9073 * C2072 +
             C9075 * C2062 + C9072 * C2071) *
                C114) *
               C30766 * C31115) *
              C31070 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C2349 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C2348 -
           ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
             C9075 * C1347 + C9072 * C1363) *
                C30999 +
            (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
             C9075 * C1336 + C9072 * C1348) *
                C114) *
               C30766 * C2350 +
           ((C9075 * C2470 + C9072 * C2473 + C9076 * C6395 + C9073 * C6399 +
             C9077 * C10904 + C9074 * C10905) *
                C114 +
            (C9075 * C2474 + C9072 * C2479 + C9076 * C6400 + C9073 * C6404 +
             C9077 * C10906 + C9074 * C10907) *
                C30999) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31012 * C122) * C114 +
                (C113 * C123 + C31012 * C136) * C30999) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30834 * C30816 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C30834 * C30816 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                  C30816 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C30834 * C30816 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31012 * C134) * C114 +
                (C113 * C135 + C31012 * C142) * C30999) *
                   C105) *
                  C30834 * C30816 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C31136 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C31124 +
               (((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30834 * C31099) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C30834 * C31124 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C31136 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30834 * C31099) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                   C31136 -
               (((C113 * C328 + C31012 * C340) * C30999 +
                 (C113 * C310 + C31012 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C30834 * C31124 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31012 * C330) * C114 +
                 (C113 * C331 + C31012 * C341) * C30999) *
                    C105) *
                   C30834 * C31099) *
                  C31093) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31137 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C31126 +
               (((C113 * C508 + C31012 * C521) * C114 +
                 (C113 * C522 + C31012 * C538) * C30999) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31102) *
                  C30816 * C299 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 +
                (C590 + C591) * C105) *
                   C31126 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31137 -
               ((C592 + C593) * C105 + (C589 + C588) * C104 +
                (C587 + C586) * C103) *
                   C31102) *
                  C30816 * C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31137 -
               (((C113 * C531 + C31012 * C543) * C30999 +
                 (C113 * C513 + C31012 * C532) * C114) *
                    C105 +
                (C591 + C590) * C104 + C594 * C103) *
                   C31126 +
               (C595 * C103 + (C593 + C592) * C104 +
                ((C113 * C514 + C31012 * C533) * C114 +
                 (C113 * C534 + C31012 * C544) * C30999) *
                    C105) *
                   C31102) *
                  C30816 * C31093) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C1126 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C1127 +
               (((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30834 * C31099) *
                  C31133 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30834 * C1127 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C1126 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30834 * C31099) *
                  C31120 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                   C1126 -
               ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C30834 * C1127 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31012 * C330) * C114 +
                 (C113 * C331 + C31012 * C341) * C30999) *
                    C105) *
                   C30834 * C31099) *
                  C31093) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31012 * C122) * C114 +
                (C113 * C123 + C31012 * C136) * C30999) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30834 * C1194 -
              (C391 * C105 + (C381 + C382) * C104 +
               ((C113 * C316 + C31012 * C334) * C30999 +
                (C113 * C304 + C31012 * C317) * C114) *
                   C103) *
                  C30834 * C1195 +
              (((C113 * C305 + C31012 * C318) * C114 +
                (C113 * C319 + C31012 * C335) * C30999) *
                   C103 +
               (C383 + C384) * C104 + C392 * C105) *
                  C30834 * C1196 -
              (((C113 * C1206 + C31012 * C1218) * C30999 +
                (C113 * C1200 + C31012 * C1207) * C114) *
                   C105 +
               ((C113 * C1208 + C31012 * C1219) * C30999 +
                (C113 * C1201 + C31012 * C1209) * C114) *
                   C104 +
               ((C113 * C1210 + C31012 * C1220) * C30999 +
                (C113 * C1202 + C31012 * C1211) * C114) *
                   C103) *
                  C30834 * C1197 +
              (((C113 * C1203 + C31012 * C1212) * C114 +
                (C113 * C1213 + C31012 * C1221) * C30999) *
                   C103 +
               ((C113 * C1204 + C31012 * C1214) * C114 +
                (C113 * C1215 + C31012 * C1222) * C30999) *
                   C104 +
               ((C113 * C1205 + C31012 * C1216) * C114 +
                (C113 * C1217 + C31012 * C1223) * C30999) *
                   C105) *
                  C30834 * C1198) *
             C30788 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31137 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C31126 +
               (((C113 * C508 + C31012 * C521) * C114 +
                 (C113 * C522 + C31012 * C538) * C30999) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31102) *
                  C1126 +
              ((((C113 * C971 + C31012 * C976) * C114 +
                 (C113 * C977 + C31012 * C986) * C30999) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C31126 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C31137 -
               (((C113 * C1343 + C31012 * C1361) * C30999 +
                 (C113 * C1334 + C31012 * C1344) * C114) *
                    C105 +
                ((C113 * C1345 + C31012 * C1362) * C30999 +
                 (C113 * C1335 + C31012 * C1346) * C114) *
                    C104 +
                ((C113 * C1347 + C31012 * C1363) * C30999 +
                 (C113 * C1336 + C31012 * C1348) * C114) *
                    C103) *
                   C31102) *
                  C1127 +
              ((((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31137 -
               (((C113 * C1349 + C31012 * C1364) * C30999 +
                 (C113 * C1337 + C31012 * C1350) * C114) *
                    C105 +
                ((C113 * C1351 + C31012 * C1365) * C30999 +
                 (C113 * C1338 + C31012 * C1352) * C114) *
                    C104 +
                ((C113 * C1353 + C31012 * C1366) * C30999 +
                 (C113 * C1339 + C31012 * C1354) * C114) *
                    C103) *
                   C31126 +
               (((C113 * C1340 + C31012 * C1355) * C114 +
                 (C113 * C1356 + C31012 * C1367) * C30999) *
                    C103 +
                ((C113 * C1341 + C31012 * C1357) * C114 +
                 (C113 * C1358 + C31012 * C1368) * C30999) *
                    C104 +
                ((C113 * C1342 + C31012 * C1359) * C114 +
                 (C113 * C1360 + C31012 * C1369) * C30999) *
                    C105) *
                   C31102) *
                  C31099) *
             C30788 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C1880 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C1881 +
               (((C113 * C508 + C31012 * C521) * C114 +
                 (C113 * C522 + C31012 * C538) * C30999) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31102) *
                  C30816 * C31133 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                   C1881 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C1880 -
               ((C592 + C593) * C105 + (C589 + C588) * C104 +
                (C587 + C586) * C103) *
                   C31102) *
                  C30816 * C31120 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
               ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                   C1881 +
               (C595 * C103 + (C593 + C592) * C104 +
                ((C113 * C514 + C31012 * C533) * C114 +
                 (C113 * C534 + C31012 * C544) * C30999) *
                    C105) *
                   C31102) *
                  C30816 * C31093) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C1880 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C1881 +
               (((C113 * C508 + C31012 * C521) * C114 +
                 (C113 * C522 + C31012 * C538) * C30999) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31102) *
                  C31136 +
              ((((C113 * C971 + C31012 * C976) * C114 +
                 (C113 * C977 + C31012 * C986) * C30999) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C1881 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C1880 -
               (((C113 * C1343 + C31012 * C1361) * C30999 +
                 (C113 * C1334 + C31012 * C1344) * C114) *
                    C105 +
                ((C113 * C1345 + C31012 * C1362) * C30999 +
                 (C113 * C1335 + C31012 * C1346) * C114) *
                    C104 +
                ((C113 * C1347 + C31012 * C1363) * C30999 +
                 (C113 * C1336 + C31012 * C1348) * C114) *
                    C103) *
                   C31102) *
                  C31124 +
              ((((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C1880 -
               ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                ((C113 * C1353 + C31012 * C1366) * C30999 +
                 (C113 * C1339 + C31012 * C1354) * C114) *
                    C103) *
                   C1881 +
               (((C113 * C1340 + C31012 * C1355) * C114 +
                 (C113 * C1356 + C31012 * C1367) * C30999) *
                    C103 +
                ((C113 * C1341 + C31012 * C1357) * C114 +
                 (C113 * C1358 + C31012 * C1368) * C30999) *
                    C104 +
                ((C113 * C1342 + C31012 * C1359) * C114 +
                 (C113 * C1360 + C31012 * C1369) * C30999) *
                    C105) *
                   C31102) *
                  C31099) *
             C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C2055 -
          (C594 * C105 + (C584 + C585) * C104 +
           ((C113 * C519 + C31012 * C537) * C30999 +
            (C113 * C507 + C31012 * C520) * C114) *
               C103) *
              C2056 +
          (((C113 * C508 + C31012 * C521) * C114 +
            (C113 * C522 + C31012 * C538) * C30999) *
               C103 +
           (C586 + C587) * C104 + C595 * C105) *
              C2057 -
          (((C113 * C2066 + C31012 * C2078) * C30999 +
            (C113 * C2060 + C31012 * C2067) * C114) *
               C105 +
           ((C113 * C2068 + C31012 * C2079) * C30999 +
            (C113 * C2061 + C31012 * C2069) * C114) *
               C104 +
           ((C113 * C2070 + C31012 * C2080) * C30999 +
            (C113 * C2062 + C31012 * C2071) * C114) *
               C103) *
              C2058 +
          (((C113 * C2063 + C31012 * C2072) * C114 +
            (C113 * C2073 + C31012 * C2081) * C30999) *
               C103 +
           ((C113 * C2064 + C31012 * C2074) * C114 +
            (C113 * C2075 + C31012 * C2082) * C30999) *
               C104 +
           ((C113 * C2065 + C31012 * C2076) * C114 +
            (C113 * C2077 + C31012 * C2083) * C30999) *
               C105) *
              C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 +
            (C113 * C1336 + C31012 * C1348) * C4808 +
            (C113 * C1347 + C31012 * C1363) * C4804 +
            (C113 * C1340 + C31012 * C1355) * C4809 +
            (C113 * C1356 + C31012 * C1367) * C4805) *
               C30766 * C31102) *
              C30816 * C299 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C31126 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31137 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31137 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C31126 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C1126 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C31126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31137 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C1127 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31137 -
           ((C113 * C5709 + C31012 * C5714) * C4805 +
            (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
            C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
               C30766 * C31126 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C30816 * C31133 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C1881 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C1880 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C1880 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C1881 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C31136 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C1881 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C1880 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C31124 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C1880 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C1881 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C2055 -
          (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
           (C113 * C519 + C31012 * C537) * C4803 +
           (C113 * C507 + C31012 * C520) * C4807) *
              C30766 * C2056 +
          ((C113 * C508 + C31012 * C521) * C4807 +
           (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
           C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
              C30766 * C2057 -
          ((C113 * C6397 + C31012 * C6403) * C4805 +
           (C113 * C6394 + C31012 * C6398) * C4809 +
           (C113 * C2474 + C31012 * C2479) * C4804 +
           (C113 * C2470 + C31012 * C2473) * C4808 +
           (C113 * C2070 + C31012 * C2080) * C4803 +
           (C113 * C2062 + C31012 * C2071) * C4807) *
              C30766 * C2058 +
          ((C113 * C2063 + C31012 * C2072) * C4807 +
           (C113 * C2073 + C31012 * C2081) * C4803 +
           (C113 * C6395 + C31012 * C6399) * C4808 +
           (C113 * C6400 + C31012 * C6404) * C4804 +
           (C113 * C6396 + C31012 * C6401) * C4809 +
           (C113 * C6402 + C31012 * C6405) * C4805) *
              C30766 * C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C30816 * C108 -
          ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
            C9075 * C125 + C9072 * C137) *
               C30999 +
           (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
            C9075 * C116 + C9072 * C124) *
               C114) *
              C30766 * C30834 * C30816 * C109 +
          ((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
            C9077 * C510 + C9074 * C525) *
               C114 +
           (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
            C9077 * C526 + C9074 * C540) *
               C30999) *
              C30766 * C30834 * C30816 * C110 -
          ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
            C9075 * C128 + C9072 * C139) *
               C30999 +
           (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
            C9075 * C118 + C9072 * C129) *
               C114) *
              C30766 * C30834 * C30816 * C111 +
          ((C9075 * C119 + C9072 * C130 + C9076 * C513 + C9073 * C532 +
            C9077 * C514 + C9074 * C533) *
               C114 +
           (C9075 * C131 + C9072 * C140 + C9076 * C531 + C9073 * C543 +
            C9077 * C534 + C9074 * C544) *
               C30999) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C31124 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C30816 * C299 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C31126 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C31137 -
           ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
             C9075 * C524 + C9072 * C539) *
                C30999 +
            (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
             C9075 * C509 + C9072 * C523) *
                C114) *
               C30766 * C31102) *
              C30816 * C300 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C510 + C9072 * C525 + C9076 * C2060 + C9073 * C2067 +
             C9077 * C2065 + C9074 * C2076) *
                C114 +
            (C9075 * C526 + C9072 * C540 + C9076 * C2066 + C9073 * C2078 +
             C9077 * C2077 + C9074 * C2083) *
                C30999) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C1127 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C1194 -
          ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
            C9075 * C316 + C9072 * C334) *
               C30999 +
           (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
            C9075 * C304 + C9072 * C317) *
               C114) *
              C30766 * C30834 * C1195 +
          ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
            C9077 * C1340 + C9074 * C1355) *
               C114 +
           (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
            C9077 * C1356 + C9074 * C1367) *
               C30999) *
              C30766 * C30834 * C1196 -
          ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
            C9075 * C1210 + C9072 * C1220) *
               C30999 +
           (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
            C9075 * C1202 + C9072 * C1211) *
               C114) *
              C30766 * C30834 * C1197 +
          ((C9075 * C1203 + C9072 * C1212 + C9076 * C5705 + C9073 * C5710 +
            C9077 * C5706 + C9074 * C5711) *
               C114 +
           (C9075 * C1213 + C9072 * C1221 + C9076 * C5709 + C9073 * C5714 +
            C9077 * C5712 + C9074 * C5715) *
               C30999) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C1126 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C31126 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C31137 -
           ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
             C9075 * C1347 + C9072 * C1363) *
                C30999 +
            (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
             C9075 * C1336 + C9072 * C1348) *
                C114) *
               C30766 * C31102) *
              C1127 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C1340 + C9072 * C1355 + C9076 * C6394 + C9073 * C6398 +
             C9077 * C6396 + C9074 * C6401) *
                C114 +
            (C9075 * C1356 + C9072 * C1367 + C9076 * C6397 + C9073 * C6403 +
             C9077 * C6402 + C9074 * C6405) *
                C30999) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C30816 * C31133 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C1881 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C1880 -
           ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
             C9075 * C524 + C9072 * C539) *
                C30999 +
            (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
             C9075 * C509 + C9072 * C523) *
                C114) *
               C30766 * C31102) *
              C30816 * C31120 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C510 + C9072 * C525 + C9076 * C2060 + C9073 * C2067 +
             C9077 * C2065 + C9074 * C2076) *
                C114 +
            (C9075 * C526 + C9072 * C540 + C9076 * C2066 + C9073 * C2078 +
             C9077 * C2077 + C9074 * C2083) *
                C30999) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C31136 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C1881 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C1880 -
           ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
             C9075 * C1347 + C9072 * C1363) *
                C30999 +
            (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
             C9075 * C1336 + C9072 * C1348) *
                C114) *
               C30766 * C31102) *
              C31124 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C1340 + C9072 * C1355 + C9076 * C6394 + C9073 * C6398 +
             C9077 * C6396 + C9074 * C6401) *
                C114 +
            (C9075 * C1356 + C9072 * C1367 + C9076 * C6397 + C9073 * C6403 +
             C9077 * C6402 + C9074 * C6405) *
                C30999) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C2055 -
          ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
            C9075 * C519 + C9072 * C537) *
               C30999 +
           (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
            C9075 * C507 + C9072 * C520) *
               C114) *
              C30766 * C2056 +
          ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
            C9077 * C2063 + C9074 * C2072) *
               C114 +
           (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
            C9077 * C2073 + C9074 * C2081) *
               C30999) *
              C30766 * C2057 -
          ((C9077 * C10548 + C9074 * C10552 + C9076 * C2073 + C9073 * C2081 +
            C9075 * C2070 + C9072 * C2080) *
               C30999 +
           (C9077 * C10546 + C9074 * C10549 + C9076 * C2063 + C9073 * C2072 +
            C9075 * C2062 + C9072 * C2071) *
               C114) *
              C30766 * C2058 +
          ((C9075 * C2063 + C9072 * C2072 + C9076 * C10546 + C9073 * C10549 +
            C9077 * C10547 + C9074 * C10550) *
               C114 +
           (C9075 * C2073 + C9072 * C2081 + C9076 * C10548 + C9073 * C10552 +
            C9077 * C10551 + C9074 * C10553) *
               C30999) *
              C30766 * C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31071 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C30921) *
                  C30816 * C695 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                   C30921 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31071) *
                  C30816 * C696 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
               ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                   C30921) *
                  C30816 * C697 +
              ((C817 * C103 + (C825 + C824) * C104 +
                ((C113 * C812 + C31012 * C813) * C114 +
                 (C113 * C814 + C31012 * C815) * C30999) *
                    C105) *
                   C30921 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C31071) *
                  C30816 * C31103) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31012 * C122) * C114 +
                  (C113 * C123 + C31012 * C136) * C30999) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C31071 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31012 * C537) * C30999 +
                  (C113 * C507 + C31012 * C520) * C114) *
                     C103) *
                    C30921) *
                   C1126 +
               ((((C113 * C971 + C31012 * C976) * C114 +
                  (C113 * C977 + C31012 * C986) * C30999) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30921 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31012 * C334) * C30999 +
                  (C113 * C304 + C31012 * C317) * C114) *
                     C103) *
                    C31071) *
                   C1127 +
               ((((C113 * C305 + C31012 * C318) * C114 +
                  (C113 * C319 + C31012 * C335) * C30999) *
                     C103 +
                 (C383 + C384) * C104 + C392 * C105) *
                    C31071 -
                ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                 ((C113 * C1353 + C31012 * C1366) * C30999 +
                  (C113 * C1339 + C31012 * C1354) * C114) *
                     C103) *
                    C30921) *
                   C31099) *
                  C31056 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30921 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C31071) *
                   C1126 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C31071 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30921) *
                   C1127 +
               (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
                 ((C113 * C1640 + C31012 * C1641) * C114 +
                  (C113 * C1642 + C31012 * C1643) * C30999) *
                     C105) *
                    C30921 -
                ((C389 + C390) * C105 + (C386 + C385) * C104 +
                 (C384 + C383) * C103) *
                    C31071) *
                   C31099) *
                  C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C30816 * C31056 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C2349 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C2348 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C2350 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31012 * C2353) * C114 +
             (C113 * C2354 + C31012 * C2355) * C30999) *
                C105) *
               C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C695 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31071) *
              C30816 * C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31071 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C697 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C1126 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C1127 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C31071 -
            ((C113 * C5709 + C31012 * C5714) * C4805 +
             (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
             C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C1126 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C1127 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C2348 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C2349 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C2350 -
           ((C113 * C6397 + C31012 * C6403) * C4805 +
            (C113 * C6394 + C31012 * C6398) * C4809 +
            (C113 * C2474 + C31012 * C2479) * C4804 +
            (C113 * C2470 + C31012 * C2473) * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C30816 * C31056 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C2349 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C2348 -
           (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
            C575 * C4803 + C574 * C4807) *
               C30766 * C2350 +
           (C2368 * C4807 + C2367 * C4803 +
            (C113 * C2471 + C31012 * C2475) * C4808 +
            (C113 * C2476 + C31012 * C2480) * C4804 +
            (C113 * C6660 + C31012 * C6661) * C4809 +
            (C113 * C6662 + C31012 * C6663) * C4805) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C30816 * C695 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C31071) *
              C30816 * C696 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C30921) *
              C30816 * C697 +
          (((C9075 * C511 + C9072 * C527 + C9076 * C512 + C9073 * C530 +
             C9077 * C2352 + C9074 * C2353) *
                C114 +
            (C9075 * C528 + C9072 * C541 + C9076 * C529 + C9073 * C542 +
             C9077 * C2354 + C9074 * C2355) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C1126 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31071) *
               C1127 +
           (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
              C9077 * C1340 + C9074 * C1355) *
                 C114 +
             (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
              C9077 * C1356 + C9074 * C1367) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
              C9075 * C1353 + C9072 * C1366) *
                 C30999 +
             (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
              C9075 * C1339 + C9072 * C1354) *
                 C114) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31071) *
               C1126 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C1127 +
           (((C9075 * C1338 + C9072 * C1352 + C9076 * C1341 + C9073 * C1357 +
              C9077 * C6660 + C9074 * C6661) *
                 C114 +
             (C9075 * C1351 + C9072 * C1365 + C9076 * C1358 + C9073 * C1368 +
              C9077 * C6662 + C9074 * C6663) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
              C9075 * C321 + C9072 * C336) *
                 C30999 +
             (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
              C9075 * C306 + C9072 * C320) *
                 C114) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C2348 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C2349 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C2350 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2073 + C9073 * C2081 +
             C9075 * C2070 + C9072 * C2080) *
                C30999 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2063 + C9073 * C2072 +
             C9075 * C2062 + C9072 * C2071) *
                C114) *
               C30766 * C31115) *
              C30816 * C31056 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C2349 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C2348 -
           ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
             C9075 * C524 + C9072 * C539) *
                C30999 +
            (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
             C9075 * C509 + C9072 * C523) *
                C114) *
               C30766 * C2350 +
           ((C9075 * C2061 + C9072 * C2069 + C9076 * C2064 + C9073 * C2074 +
             C9077 * C10802 + C9074 * C10803) *
                C114 +
            (C9075 * C2068 + C9072 * C2079 + C9076 * C2075 + C9073 * C2082 +
             C9077 * C10804 + C9074 * C10805) *
                C30999) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C30816 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30834 *
              C30816 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C30816 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30834 *
              C30816 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31012 * C134) * C114 +
            (C113 * C135 + C31012 * C142) * C30999) *
               C105) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31136 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31124 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30834 * C31124 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31136 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31136 -
           (((C113 * C328 + C31012 * C340) * C30999 +
             (C113 * C310 + C31012 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30834 * C31124 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C30816 * C31133 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C1881 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C1880 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31102) *
              C30816 * C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) * C1881 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C31136 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C1881 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C1880 -
           (((C113 * C1343 + C31012 * C1361) * C30999 +
             (C113 * C1334 + C31012 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31012 * C1362) * C30999 +
             (C113 * C1335 + C31012 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31102) *
              C31124 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C1880 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C1881 +
           (((C113 * C1340 + C31012 * C1355) * C114 +
             (C113 * C1356 + C31012 * C1367) * C30999) *
                C103 +
            ((C113 * C1341 + C31012 * C1357) * C114 +
             (C113 * C1358 + C31012 * C1368) * C30999) *
                C104 +
            ((C113 * C1342 + C31012 * C1359) * C114 +
             (C113 * C1360 + C31012 * C1369) * C30999) *
                C105) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C30816 * C31133 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C1881 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C1880 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C1880 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C1881 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C31136 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C1881 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C1880 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C31124 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C1880 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C1881 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C30816 * C108 -
          ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
            C9075 * C125 + C9072 * C137) *
               C30999 +
           (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
            C9075 * C116 + C9072 * C124) *
               C114) *
              C30766 * C30834 * C30816 * C109 +
          ((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
            C9077 * C510 + C9074 * C525) *
               C114 +
           (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
            C9077 * C526 + C9074 * C540) *
               C30999) *
              C30766 * C30834 * C30816 * C110 -
          ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
            C9075 * C128 + C9072 * C139) *
               C30999 +
           (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
            C9075 * C118 + C9072 * C129) *
               C114) *
              C30766 * C30834 * C30816 * C111 +
          ((C9075 * C119 + C9072 * C130 + C9076 * C513 + C9073 * C532 +
            C9077 * C514 + C9074 * C533) *
               C114 +
           (C9075 * C131 + C9072 * C140 + C9076 * C531 + C9073 * C543 +
            C9077 * C534 + C9074 * C544) *
               C30999) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C31124 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C1127 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C1194 -
          ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
            C9075 * C316 + C9072 * C334) *
               C30999 +
           (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
            C9075 * C304 + C9072 * C317) *
               C114) *
              C30766 * C30834 * C1195 +
          ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
            C9077 * C1340 + C9074 * C1355) *
               C114 +
           (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
            C9077 * C1356 + C9074 * C1367) *
               C30999) *
              C30766 * C30834 * C1196 -
          ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
            C9075 * C1210 + C9072 * C1220) *
               C30999 +
           (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
            C9075 * C1202 + C9072 * C1211) *
               C114) *
              C30766 * C30834 * C1197 +
          ((C9075 * C1203 + C9072 * C1212 + C9076 * C5705 + C9073 * C5710 +
            C9077 * C5706 + C9074 * C5711) *
               C114 +
           (C9075 * C1213 + C9072 * C1221 + C9076 * C5709 + C9073 * C5714 +
            C9077 * C5712 + C9074 * C5715) *
               C30999) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C30816 * C31133 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C1881 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C1880 -
           ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
             C9075 * C524 + C9072 * C539) *
                C30999 +
            (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
             C9075 * C509 + C9072 * C523) *
                C114) *
               C30766 * C31102) *
              C30816 * C31120 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C510 + C9072 * C525 + C9076 * C2060 + C9073 * C2067 +
             C9077 * C2065 + C9074 * C2076) *
                C114 +
            (C9075 * C526 + C9072 * C540 + C9076 * C2066 + C9073 * C2078 +
             C9077 * C2077 + C9074 * C2083) *
                C30999) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C31136 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C1881 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C1880 -
           ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
             C9075 * C1347 + C9072 * C1363) *
                C30999 +
            (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
             C9075 * C1336 + C9072 * C1348) *
                C114) *
               C30766 * C31102) *
              C31124 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C1880 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C1881 +
           ((C9075 * C1340 + C9072 * C1355 + C9076 * C6394 + C9073 * C6398 +
             C9077 * C6396 + C9074 * C6401) *
                C114 +
            (C9075 * C1356 + C9072 * C1367 + C9076 * C6397 + C9073 * C6403 +
             C9077 * C6402 + C9074 * C6405) *
                C30999) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30879) *
              C30793 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C3342 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C3342) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30879) *
              C30793 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C30802 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C31070 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C31070 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C3342) *
               C30879) *
              C30793 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C3342) *
               C31070 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          ((((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
              C9077 * C510 + C9074 * C525) *
                 C114 +
             (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
              C9077 * C526 + C9074 * C540) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
              C9075 * C515 + C9072 * C535) *
                 C30999 +
             (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
              C9075 * C505 + C9072 * C516) *
                 C114) *
                C30766 * C30921) *
               C31070 +
           (((C9075 * C973 + C9072 * C980 + C9076 * C1334 + C9073 * C1344 +
              C9077 * C2472 + C9074 * C2477) *
                 C114 +
             (C9075 * C981 + C9072 * C988 + C9076 * C1343 + C9073 * C1361 +
              C9077 * C2478 + C9074 * C2481) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
              C9075 * C312 + C9072 * C332) *
                 C30999 +
             (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
              C9075 * C302 + C9072 * C313) *
                 C114) *
                C30766 * C3342) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C30917 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30924 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C3850) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30924 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C30917 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C3850) *
               C30879) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30924 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C30917 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C3850) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C30917 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30924 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30917 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30924 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30924 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C30917 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C3850) *
               C30879) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30924 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30917 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30917 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30924 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C30917 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30924 +
            ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
              C9077 * C2063 + C9074 * C2072) *
                 C114 +
             (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
              C9077 * C2073 + C9074 * C2081) *
                 C30999) *
                C30766 * C3850) *
               C31070 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30924 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C30917 -
            ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
              C9075 * C1347 + C9072 * C1363) *
                 C30999 +
             (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
              C9075 * C1336 + C9072 * C1348) *
                 C114) *
                C30766 * C3850) *
               C30879) *
              C2688 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30924 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C30917 -
            ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
              C9075 * C524 + C9072 * C539) *
                 C30999 +
             (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
              C9075 * C509 + C9072 * C523) *
                 C114) *
                C30766 * C3850) *
               C31070 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C30917 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30924 +
            ((C9075 * C1335 + C9072 * C1346 + C9076 * C2471 + C9073 * C2475 +
              C9077 * C10700 + C9074 * C10701) *
                 C114 +
             (C9075 * C1345 + C9072 * C1362 + C9076 * C2476 + C9073 * C2480 +
              C9077 * C10702 + C9074 * C10703) *
                 C30999) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C3342 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31012 * C537) * C30999 +
                 (C113 * C507 + C31012 * C520) * C114) *
                    C103) *
                   C30921) *
                  C30816 * C31142 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                   C30921 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C3342) *
                  C30816 * C31135 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
               ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                   C30921) *
                  C30816 * C31122 +
              ((C817 * C103 + (C825 + C824) * C104 +
                ((C113 * C812 + C31012 * C813) * C114 +
                 (C113 * C814 + C31012 * C815) * C30999) *
                    C105) *
                   C30921 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C3342) *
                  C30816 * C31103) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31012 * C122) * C114 +
                  (C113 * C123 + C31012 * C136) * C30999) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C3342 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31012 * C537) * C30999 +
                  (C113 * C507 + C31012 * C520) * C114) *
                     C103) *
                    C30921) *
                   C31136 +
               ((((C113 * C971 + C31012 * C976) * C114 +
                  (C113 * C977 + C31012 * C986) * C30999) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30921 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31012 * C334) * C30999 +
                  (C113 * C304 + C31012 * C317) * C114) *
                     C103) *
                    C3342) *
                   C31124 +
               ((((C113 * C305 + C31012 * C318) * C114 +
                  (C113 * C319 + C31012 * C335) * C30999) *
                     C103 +
                 (C383 + C384) * C104 + C392 * C105) *
                    C3342 -
                ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                 ((C113 * C1353 + C31012 * C1366) * C30999 +
                  (C113 * C1339 + C31012 * C1354) * C114) *
                     C103) *
                    C30921) *
                   C31099) *
                  C2688 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30921 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C3342) *
                   C31136 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C3342 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30921) *
                   C31124 +
               (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
                 ((C113 * C1640 + C31012 * C1641) * C114 +
                  (C113 * C1642 + C31012 * C1643) * C30999) *
                     C105) *
                    C30921 -
                ((C389 + C390) * C105 + (C386 + C385) * C104 +
                 (C384 + C383) * C103) *
                    C3342) *
                   C31099) *
                  C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31144 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31141 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31132 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C30816 * C2688 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C31141 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31144 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31132 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31012 * C2353) * C114 +
             (C113 * C2354 + C31012 * C2355) * C30999) *
                C105) *
               C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C31142 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C3342) *
              C30816 * C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C3342 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C31122 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31136 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C31124 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C3342 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C31136 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C31124 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31144 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31141 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31132 -
           (C6775 * C4805 + C6776 * C4809 + C6777 * C4804 + C6778 * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C30816 * C2688 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C31141 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31144 -
           (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
            C575 * C4803 + C574 * C4807) *
               C30766 * C31132 +
           (C2368 * C4807 + C2367 * C4803 +
            (C113 * C2471 + C31012 * C2475) * C4808 +
            (C113 * C2476 + C31012 * C2480) * C4804 +
            (C113 * C6660 + C31012 * C6661) * C4809 +
            (C113 * C6662 + C31012 * C6663) * C4805) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C30816 * C31142 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C3342) *
              C30816 * C31135 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C30921) *
              C30816 * C31122 +
          (((C9075 * C511 + C9072 * C527 + C9076 * C512 + C9073 * C530 +
             C9077 * C2352 + C9074 * C2353) *
                C114 +
            (C9075 * C528 + C9072 * C541 + C9076 * C529 + C9073 * C542 +
             C9077 * C2354 + C9074 * C2355) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C31136 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C3342) *
               C31124 +
           (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
              C9077 * C1340 + C9074 * C1355) *
                 C114 +
             (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
              C9077 * C1356 + C9074 * C1367) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
              C9075 * C1353 + C9072 * C1366) *
                 C30999 +
             (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
              C9075 * C1339 + C9072 * C1354) *
                 C114) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C3342) *
               C31136 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C31124 +
           (((C9075 * C1338 + C9072 * C1352 + C9076 * C1341 + C9073 * C1357 +
              C9077 * C6660 + C9074 * C6661) *
                 C114 +
             (C9075 * C1351 + C9072 * C1365 + C9076 * C1358 + C9073 * C1368 +
              C9077 * C6662 + C9074 * C6663) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
              C9075 * C321 + C9072 * C336) *
                 C30999 +
             (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
              C9075 * C306 + C9072 * C320) *
                 C114) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31144 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C31141 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31132 -
           ((C9077 * C10548 + C9074 * C10552 + C9076 * C2073 + C9073 * C2081 +
             C9075 * C2070 + C9072 * C2080) *
                C30999 +
            (C9077 * C10546 + C9074 * C10549 + C9076 * C2063 + C9073 * C2072 +
             C9075 * C2062 + C9072 * C2071) *
                C114) *
               C30766 * C31115) *
              C30816 * C2688 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C31141 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C31144 -
           ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
             C9075 * C524 + C9072 * C539) *
                C30999 +
            (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
             C9075 * C509 + C9072 * C523) *
                C114) *
               C30766 * C31132 +
           ((C9075 * C2061 + C9072 * C2069 + C9076 * C2064 + C9073 * C2074 +
             C9077 * C10802 + C9074 * C10803) *
                C114 +
            (C9075 * C2068 + C9072 * C2079 + C9076 * C2075 + C9073 * C2082 +
             C9077 * C10804 + C9074 * C10805) *
                C30999) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31012 * C122) * C4807 +
                    (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
                    C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                       C30766 * C30917 -
                   (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 +
                    C5402 * C4808 + (C113 * C519 + C31012 * C537) * C4803 +
                    (C113 * C507 + C31012 * C520) * C4807) *
                       C30766 * C30924 +
                   ((C113 * C508 + C31012 * C521) * C4807 +
                    (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
                    C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                       C30766 * C3850) *
                      C30816 * C30793 +
                  ((C573 * C4807 + C572 * C4803 + C1004 * C4808 +
                    C1005 * C4804 + C1656 * C4809 + C1655 * C4805) *
                       C30766 * C30924 -
                   (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
                    C165 * C4803 + C164 * C4807) *
                       C30766 * C30917 -
                   (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 +
                    C2246 * C4808 + C575 * C4803 + C574 * C4807) *
                       C30766 * C3850) *
                      C30816 * C30802 +
                  ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
                    C373 * C4809 + C374 * C4805) *
                       C30766 * C30917 -
                   (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 +
                    C1006 * C4808 + C570 * C4803 + C571 * C4807) *
                       C30766 * C30924 +
                   (C576 * C4807 + C577 * C4803 + C2244 * C4808 +
                    C2243 * C4804 + (C113 * C1342 + C31012 * C1359) * C4809 +
                    (C113 * C1360 + C31012 * C1369) * C4805) *
                       C30766 * C3850) *
                      C30816 * C2951)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C114 +
                     (C113 * C123 + C31012 * C136) * C30999) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30917 -
                   (C594 * C105 + (C584 + C585) * C104 +
                    ((C113 * C519 + C31012 * C537) * C30999 +
                     (C113 * C507 + C31012 * C520) * C114) *
                        C103) *
                       C30924 +
                   (((C113 * C508 + C31012 * C521) * C114 +
                     (C113 * C522 + C31012 * C538) * C30999) *
                        C103 +
                    (C586 + C587) * C104 + C595 * C105) *
                       C3850) *
                      C30816 * C30793 +
                  (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                       C30924 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30917 -
                   ((C592 + C593) * C105 + (C589 + C588) * C104 +
                    (C587 + C586) * C103) *
                       C3850) *
                      C30816 * C30802 +
                  ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30917 -
                   ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                       C30924 +
                   (C595 * C103 + (C593 + C592) * C104 +
                    ((C113 * C514 + C31012 * C533) * C114 +
                     (C113 * C534 + C31012 * C544) * C30999) *
                        C105) *
                       C3850) *
                      C30816 * C2951)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
                     C9077 * C508 + C9074 * C521) *
                        C114 +
                    (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
                     C9077 * C522 + C9074 * C538) *
                        C30999) *
                       C30766 * C30917 -
                   ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 +
                     C9073 * C538 + C9075 * C519 + C9072 * C537) *
                        C30999 +
                    (C9077 * C2062 + C9074 * C2071 + C9076 * C508 +
                     C9073 * C521 + C9075 * C507 + C9072 * C520) *
                        C114) *
                       C30766 * C30924 +
                   ((C9075 * C508 + C9072 * C521 + C9076 * C2062 +
                     C9073 * C2071 + C9077 * C2063 + C9074 * C2072) *
                        C114 +
                    (C9075 * C522 + C9072 * C538 + C9076 * C2070 +
                     C9073 * C2080 + C9077 * C2073 + C9074 * C2081) *
                        C30999) *
                       C30766 * C3850) *
                      C30816 * C30793 +
                  (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
                     C9077 * C2061 + C9074 * C2069) *
                        C114 +
                    (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
                     C9077 * C2068 + C9074 * C2079) *
                        C30999) *
                       C30766 * C30924 -
                   ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
                     C9075 * C125 + C9072 * C137) *
                        C30999 +
                    (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
                     C9075 * C116 + C9072 * C124) *
                        C114) *
                       C30766 * C30917 -
                   ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 +
                     C9073 * C2079 + C9075 * C524 + C9072 * C539) *
                        C30999 +
                    (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 +
                     C9073 * C2069 + C9075 * C509 + C9072 * C523) *
                        C114) *
                       C30766 * C3850) *
                      C30816 * C30802 +
                  (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
                     C9077 * C510 + C9074 * C525) *
                        C114 +
                    (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
                     C9077 * C526 + C9074 * C540) *
                        C30999) *
                       C30766 * C30917 -
                   ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 +
                     C9073 * C540 + C9075 * C515 + C9072 * C535) *
                        C30999 +
                    (C9077 * C2060 + C9074 * C2067 + C9076 * C510 +
                     C9073 * C525 + C9075 * C505 + C9072 * C516) *
                        C114) *
                       C30766 * C30924 +
                   ((C9075 * C510 + C9072 * C525 + C9076 * C2060 +
                     C9073 * C2067 + C9077 * C2065 + C9074 * C2076) *
                        C114 +
                    (C9075 * C526 + C9072 * C540 + C9076 * C2066 +
                     C9073 * C2078 + C9077 * C2077 + C9074 * C2083) *
                        C30999) *
                       C30766 * C3850) *
                      C30816 * C2951)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31136 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C31124 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C31099) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31136 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C31124 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C30816 * C31142 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30921 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C3342) *
              C30816 * C31135 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30921) *
              C30816 * C31122 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31012 * C813) * C114 +
             (C113 * C814 + C31012 * C815) * C30999) *
                C105) *
               C30921 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C31142 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C3342) *
              C30816 * C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C3342 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C31122 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31136 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C31124 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C3342 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C31136 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C31124 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C30816 * C31142 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C3342) *
              C30816 * C31135 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C3342 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C30921) *
              C30816 * C31122 +
          (((C9075 * C511 + C9072 * C527 + C9076 * C512 + C9073 * C530 +
             C9077 * C2352 + C9074 * C2353) *
                C114 +
            (C9075 * C528 + C9072 * C541 + C9076 * C529 + C9073 * C542 +
             C9077 * C2354 + C9074 * C2355) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C31136 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C3342) *
               C31124 +
           (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
              C9077 * C1340 + C9074 * C1355) *
                 C114 +
             (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
              C9077 * C1356 + C9074 * C1367) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
              C9075 * C1353 + C9072 * C1366) *
                 C30999 +
             (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
              C9075 * C1339 + C9072 * C1354) *
                 C114) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C3342) *
               C31136 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C3342 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C31124 +
           (((C9075 * C1338 + C9072 * C1352 + C9076 * C1341 + C9073 * C1357 +
              C9077 * C6660 + C9074 * C6661) *
                 C114 +
             (C9075 * C1351 + C9072 * C1365 + C9076 * C1358 + C9073 * C1368 +
              C9077 * C6662 + C9074 * C6663) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
              C9075 * C321 + C9072 * C336) *
                 C30999 +
             (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
              C9075 * C306 + C9072 * C320) *
                 C114) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C114 +
                     (C113 * C123 + C31012 * C136) * C30999) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30834 * C1468 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31012 * C334) * C30999 +
                     (C113 * C304 + C31012 * C317) * C114) *
                        C103) *
                       C30834 * C1469 +
                   (((C113 * C305 + C31012 * C318) * C114 +
                     (C113 * C319 + C31012 * C335) * C30999) *
                        C103 +
                    (C383 + C384) * C104 + C392 * C105) *
                       C30834 * C1470 -
                   ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                    ((C113 * C1210 + C31012 * C1220) * C30999 +
                     (C113 * C1202 + C31012 * C1211) * C114) *
                        C103) *
                       C30834 * C31109) *
                      C31056 +
                  (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                       C30834 * C1469 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30834 * C1468 -
                   ((C389 + C390) * C105 + (C386 + C385) * C104 +
                    (C384 + C383) * C103) *
                       C30834 * C1470 +
                   ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
                    ((C113 * C1474 + C31012 * C1475) * C114 +
                     (C113 * C1476 + C31012 * C1477) * C30999) *
                        C105) *
                       C30834 * C31109) *
                      C30799)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31012 * C122) * C114 +
                     (C113 * C123 + C31012 * C136) * C30999) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30834 * C31070 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31012 * C334) * C30999 +
                     (C113 * C304 + C31012 * C317) * C114) *
                        C103) *
                       C30834 * C30879) *
                      C695 +
                  (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                       C30834 * C30879 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30834 * C31070) *
                      C696 +
                  ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                       C31070 -
                   ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                       C30834 * C30879) *
                      C697 +
                  ((C704 * C103 + (C712 + C711) * C104 +
                    ((C113 * C699 + C31012 * C700) * C114 +
                     (C113 * C701 + C31012 * C702) * C30999) *
                        C105) *
                       C30834 * C30879 -
                   ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                       C30834 * C31070) *
                      C31103)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31012 * C122) * C4807 +
                    (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
                    C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                       C30766 * C30834 * C31070 -
                   (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 +
                    C4935 * C4808 + C4934 * C4803 + C4933 * C4807) *
                       C30766 * C30834 * C30879) *
                      C695 +
                  ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
                    C1490 * C4809 + C1489 * C4805) *
                       C30766 * C30834 * C30879 -
                   (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
                    C165 * C4803 + C164 * C4807) *
                       C30766 * C30834 * C31070) *
                      C696 +
                  ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
                    C373 * C4809 + C374 * C4805) *
                       C30766 * C30834 * C31070 -
                   (C1487 * C4805 + C1488 * C4809 + C374 * C4804 +
                    C373 * C4808 + C367 * C4803 + C368 * C4807) *
                       C30766 * C30834 * C30879) *
                      C697 +
                  ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
                    (C113 * C1474 + C31012 * C1475) * C4809 +
                    (C113 * C1476 + C31012 * C1477) * C4805) *
                       C30766 * C30834 * C30879 -
                   (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
                    C168 * C4803 + C169 * C4807) *
                       C30766 * C30834 * C31070) *
                      C31103)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31012 * C122) * C4807 +
                    (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
                    C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                       C30766 * C30834 * C1468 -
                   (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 +
                    C4935 * C4808 + C4934 * C4803 + C4933 * C4807) *
                       C30766 * C30834 * C1469 +
                   (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 +
                    C4937 * C4804 + C5591 * C4809 + C5592 * C4805) *
                       C30766 * C30834 * C1470 -
                   (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 +
                    C5591 * C4808 + C4937 * C4803 + C4938 * C4807) *
                       C30766 * C30834 * C31109) *
                      C31056 +
                  ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
                    C1490 * C4809 + C1489 * C4805) *
                       C30766 * C30834 * C1469 -
                   (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
                    C165 * C4803 + C164 * C4807) *
                       C30766 * C30834 * C1468 -
                   (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 +
                    C1490 * C4808 + C372 * C4803 + C371 * C4807) *
                       C30766 * C30834 * C1470 +
                   (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 +
                    C5847 * C4804 + (C113 * C5838 + C31012 * C5839) * C4809 +
                    (C113 * C5840 + C31012 * C5841) * C4805) *
                       C30766 * C30834 * C31109) *
                      C30799)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
                     C9077 * C508 + C9074 * C521) *
                        C114 +
                    (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
                     C9077 * C522 + C9074 * C538) *
                        C30999) *
                       C30766 * C30834 * C31070 -
                   ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 +
                     C9073 * C986 + C9075 * C316 + C9072 * C334) *
                        C30999 +
                    (C9077 * C1336 + C9074 * C1348 + C9076 * C971 +
                     C9073 * C976 + C9075 * C304 + C9072 * C317) *
                        C114) *
                       C30766 * C30834 * C30879) *
                      C695 +
                  (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
                     C9077 * C1335 + C9074 * C1346) *
                        C114 +
                    (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
                     C9077 * C1345 + C9074 * C1362) *
                        C30999) *
                       C30766 * C30834 * C30879 -
                   ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
                     C9075 * C125 + C9072 * C137) *
                        C30999 +
                    (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
                     C9075 * C116 + C9072 * C124) *
                        C114) *
                       C30766 * C30834 * C31070) *
                      C696 +
                  (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
                     C9077 * C510 + C9074 * C525) *
                        C114 +
                    (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
                     C9077 * C526 + C9074 * C540) *
                        C30999) *
                       C30766 * C30834 * C31070 -
                   ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 +
                     C9073 * C988 + C9075 * C312 + C9072 * C332) *
                        C30999 +
                    (C9077 * C1334 + C9074 * C1344 + C9076 * C973 +
                     C9073 * C980 + C9075 * C302 + C9072 * C313) *
                        C114) *
                       C30766 * C30834 * C30879) *
                      C697 +
                  (((C9075 * C308 + C9072 * C324 + C9076 * C974 + C9073 * C983 +
                     C9077 * C2230 + C9074 * C2231) *
                        C114 +
                    (C9075 * C325 + C9072 * C338 + C9076 * C982 + C9073 * C989 +
                     C9077 * C2232 + C9074 * C2233) *
                        C30999) *
                       C30766 * C30834 * C30879 -
                   ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
                     C9075 * C128 + C9072 * C139) *
                        C30999 +
                    (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
                     C9075 * C118 + C9072 * C129) *
                        C114) *
                       C30766 * C30834 * C31070) *
                      C31103)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
                     C9077 * C508 + C9074 * C521) *
                        C114 +
                    (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
                     C9077 * C522 + C9074 * C538) *
                        C30999) *
                       C30766 * C30834 * C1468 -
                   ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 +
                     C9073 * C986 + C9075 * C316 + C9072 * C334) *
                        C30999 +
                    (C9077 * C1336 + C9074 * C1348 + C9076 * C971 +
                     C9073 * C976 + C9075 * C304 + C9072 * C317) *
                        C114) *
                       C30766 * C30834 * C1469 +
                   ((C9075 * C305 + C9072 * C318 + C9076 * C1339 +
                     C9073 * C1354 + C9077 * C1340 + C9074 * C1355) *
                        C114 +
                    (C9075 * C319 + C9072 * C335 + C9076 * C1353 +
                     C9073 * C1366 + C9077 * C1356 + C9074 * C1367) *
                        C30999) *
                       C30766 * C30834 * C1470 -
                   ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 +
                     C9073 * C1767 + C9075 * C1210 + C9072 * C1220) *
                        C30999 +
                    (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 +
                     C9073 * C1761 + C9075 * C1202 + C9072 * C1211) *
                        C114) *
                       C30766 * C30834 * C31109) *
                      C31056 +
                  (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
                     C9077 * C1335 + C9074 * C1346) *
                        C114 +
                    (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
                     C9077 * C1345 + C9074 * C1362) *
                        C30999) *
                       C30766 * C30834 * C1469 -
                   ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
                     C9075 * C125 + C9072 * C137) *
                        C30999 +
                    (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
                     C9075 * C116 + C9072 * C124) *
                        C114) *
                       C30766 * C30834 * C1468 -
                   ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 +
                     C9073 * C1365 + C9075 * C321 + C9072 * C336) *
                        C30999 +
                    (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 +
                     C9073 * C1352 + C9075 * C306 + C9072 * C320) *
                        C114) *
                       C30766 * C30834 * C1470 +
                   ((C9075 * C1201 + C9072 * C1209 + C9076 * C1759 +
                     C9073 * C1763 + C9077 * C6552 + C9074 * C6553) *
                        C114 +
                    (C9075 * C1208 + C9072 * C1219 + C9076 * C1764 +
                     C9073 * C1768 + C9077 * C6554 + C9074 * C6555) *
                        C30999) *
                       C30766 * C30834 * C31109) *
                      C30799)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31071 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C1468 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30921 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31071) *
              C1469 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31071 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C30921) *
              C1470 +
          ((((C113 * C1758 + C31012 * C1761) * C114 +
             (C113 * C1762 + C31012 * C1767) * C30999) *
                C103 +
            ((C113 * C1759 + C31012 * C1763) * C114 +
             (C113 * C1764 + C31012 * C1768) * C30999) *
                C104 +
            ((C113 * C1760 + C31012 * C1765) * C114 +
             (C113 * C1766 + C31012 * C1769) * C30999) *
                C105) *
               C30921 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30879) *
              C299 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C300 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C31070 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             (C113 * C1758 + C31012 * C1761) * C4809 +
             (C113 * C1762 + C31012 * C1767) * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30879) *
              C299 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            ((C113 * C1764 + C31012 * C1768) * C4805 +
             (C113 * C1759 + C31012 * C1763) * C4809 + C1655 * C4804 +
             C1656 * C4808 + C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C300 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C31071 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C1468 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31071) *
              C1469 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31071 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C1470 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C31070 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31071) *
               C30879) *
              C299 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31071) *
               C31070 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C30879) *
              C300 +
          ((((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
              C9077 * C510 + C9074 * C525) *
                 C114 +
             (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
              C9077 * C526 + C9074 * C540) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
              C9075 * C515 + C9072 * C535) *
                 C30999 +
             (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
              C9075 * C505 + C9072 * C516) *
                 C114) *
                C30766 * C30921) *
               C31070 +
           (((C9075 * C973 + C9072 * C980 + C9076 * C1334 + C9073 * C1344 +
              C9077 * C2472 + C9074 * C2477) *
                 C114 +
             (C9075 * C981 + C9072 * C988 + C9076 * C1343 + C9073 * C1361 +
              C9077 * C2478 + C9074 * C2481) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
              C9075 * C312 + C9072 * C332) *
                 C30999 +
             (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
              C9075 * C302 + C9072 * C313) *
                 C114) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C1468 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C31071) *
              C1469 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C30921) *
              C1470 +
          (((C9075 * C1758 + C9072 * C1761 + C9076 * C5704 + C9073 * C5708 +
             C9077 * C6762 + C9074 * C6763) *
                C114 +
            (C9075 * C1762 + C9072 * C1767 + C9076 * C5707 + C9073 * C5713 +
             C9077 * C6764 + C9074 * C6765) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
             C9075 * C1210 + C9072 * C1220) *
                C30999 +
            (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
             C9075 * C1202 + C9072 * C1211) *
                C114) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31012 * C122) * C114 +
                (C113 * C123 + C31012 * C136) * C30999) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30834 * C30816 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C30834 * C30816 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                  C30816 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C30834 * C30816 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31012 * C134) * C114 +
                (C113 * C135 + C31012 * C142) * C30999) *
                   C105) *
                  C30834 * C30816 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C31136 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C31124 +
               (((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30834 * C31099) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C30834 * C31124 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C31136 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30834 * C31099) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                   C31136 -
               (((C113 * C328 + C31012 * C340) * C30999 +
                 (C113 * C310 + C31012 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C30834 * C31124 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31012 * C330) * C114 +
                 (C113 * C331 + C31012 * C341) * C30999) *
                    C105) *
                   C30834 * C31099) *
                  C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31137 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C30816 * C299 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 +
            (C590 + C591) * C105) *
               C31126 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31137 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31102) *
              C30816 * C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31137 -
           (((C113 * C531 + C31012 * C543) * C30999 +
             (C113 * C513 + C31012 * C532) * C114) *
                C105 +
            (C591 + C590) * C104 + C594 * C103) *
               C31126 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31137 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C1126 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31137 -
           (((C113 * C1343 + C31012 * C1361) * C30999 +
             (C113 * C1334 + C31012 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31012 * C1362) * C30999 +
             (C113 * C1335 + C31012 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31102) *
              C1127 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31137 -
           (((C113 * C1349 + C31012 * C1364) * C30999 +
             (C113 * C1337 + C31012 * C1350) * C114) *
                C105 +
            ((C113 * C1351 + C31012 * C1365) * C30999 +
             (C113 * C1338 + C31012 * C1352) * C114) *
                C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C31126 +
           (((C113 * C1340 + C31012 * C1355) * C114 +
             (C113 * C1356 + C31012 * C1367) * C30999) *
                C103 +
            ((C113 * C1341 + C31012 * C1357) * C114 +
             (C113 * C1358 + C31012 * C1368) * C30999) *
                C104 +
            ((C113 * C1342 + C31012 * C1359) * C114 +
             (C113 * C1360 + C31012 * C1369) * C30999) *
                C105) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 +
            (C113 * C1336 + C31012 * C1348) * C4808 +
            (C113 * C1347 + C31012 * C1363) * C4804 +
            (C113 * C1340 + C31012 * C1355) * C4809 +
            (C113 * C1356 + C31012 * C1367) * C4805) *
               C30766 * C31102) *
              C30816 * C299 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C31126 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31137 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31137 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C31126 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C1126 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C31126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31137 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C1127 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31137 -
           ((C113 * C5709 + C31012 * C5714) * C4805 +
            (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
            C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
               C30766 * C31126 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C30816 * C108 -
          ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
            C9075 * C125 + C9072 * C137) *
               C30999 +
           (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
            C9075 * C116 + C9072 * C124) *
               C114) *
              C30766 * C30834 * C30816 * C109 +
          ((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
            C9077 * C510 + C9074 * C525) *
               C114 +
           (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
            C9077 * C526 + C9074 * C540) *
               C30999) *
              C30766 * C30834 * C30816 * C110 -
          ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
            C9075 * C128 + C9072 * C139) *
               C30999 +
           (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
            C9075 * C118 + C9072 * C129) *
               C114) *
              C30766 * C30834 * C30816 * C111 +
          ((C9075 * C119 + C9072 * C130 + C9076 * C513 + C9073 * C532 +
            C9077 * C514 + C9074 * C533) *
               C114 +
           (C9075 * C131 + C9072 * C140 + C9076 * C531 + C9073 * C543 +
            C9077 * C534 + C9074 * C544) *
               C30999) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C31124 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C30816 * C299 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C31126 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C31137 -
           ((C9077 * C2075 + C9074 * C2082 + C9076 * C2068 + C9073 * C2079 +
             C9075 * C524 + C9072 * C539) *
                C30999 +
            (C9077 * C2064 + C9074 * C2074 + C9076 * C2061 + C9073 * C2069 +
             C9075 * C509 + C9072 * C523) *
                C114) *
               C30766 * C31102) *
              C30816 * C300 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C510 + C9072 * C525 + C9076 * C2060 + C9073 * C2067 +
             C9077 * C2065 + C9074 * C2076) *
                C114 +
            (C9075 * C526 + C9072 * C540 + C9076 * C2066 + C9073 * C2078 +
             C9077 * C2077 + C9074 * C2083) *
                C30999) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C1127 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C1194 -
          ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
            C9075 * C316 + C9072 * C334) *
               C30999 +
           (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
            C9075 * C304 + C9072 * C317) *
               C114) *
              C30766 * C30834 * C1195 +
          ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
            C9077 * C1340 + C9074 * C1355) *
               C114 +
           (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
            C9077 * C1356 + C9074 * C1367) *
               C30999) *
              C30766 * C30834 * C1196 -
          ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
            C9075 * C1210 + C9072 * C1220) *
               C30999 +
           (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
            C9075 * C1202 + C9072 * C1211) *
               C114) *
              C30766 * C30834 * C1197 +
          ((C9075 * C1203 + C9072 * C1212 + C9076 * C5705 + C9073 * C5710 +
            C9077 * C5706 + C9074 * C5711) *
               C114 +
           (C9075 * C1213 + C9072 * C1221 + C9076 * C5709 + C9073 * C5714 +
            C9077 * C5712 + C9074 * C5715) *
               C30999) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C508 + C9072 * C521 + C9076 * C2062 + C9073 * C2071 +
             C9077 * C2063 + C9074 * C2072) *
                C114 +
            (C9075 * C522 + C9072 * C538 + C9076 * C2070 + C9073 * C2080 +
             C9077 * C2073 + C9074 * C2081) *
                C30999) *
               C30766 * C31102) *
              C1126 +
          (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
             C9077 * C2470 + C9074 * C2473) *
                C114 +
            (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
             C9077 * C2474 + C9074 * C2479) *
                C30999) *
               C30766 * C31126 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C31137 -
           ((C9077 * C6400 + C9074 * C6404 + C9076 * C2474 + C9073 * C2479 +
             C9075 * C1347 + C9072 * C1363) *
                C30999 +
            (C9077 * C6395 + C9074 * C6399 + C9076 * C2470 + C9073 * C2473 +
             C9075 * C1336 + C9072 * C1348) *
                C114) *
               C30766 * C31102) *
              C1127 +
          (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C31137 -
           ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
             C9075 * C1353 + C9072 * C1366) *
                C30999 +
            (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
             C9075 * C1339 + C9072 * C1354) *
                C114) *
               C30766 * C31126 +
           ((C9075 * C1340 + C9072 * C1355 + C9076 * C6394 + C9073 * C6398 +
             C9077 * C6396 + C9074 * C6401) *
                C114 +
            (C9075 * C1356 + C9072 * C1367 + C9076 * C6397 + C9073 * C6403 +
             C9077 * C6402 + C9074 * C6405) *
                C30999) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C1126 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C1127 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31071 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C31099) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C1126 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C1127 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31071 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C30816 * C695 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30921 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31071) *
              C30816 * C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30921) *
              C30816 * C697 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31012 * C813) * C114 +
             (C113 * C814 + C31012 * C815) * C30999) *
                C105) *
               C30921 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C695 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31071) *
              C30816 * C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31071 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C697 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C1126 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C1127 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C31071 -
            ((C113 * C5709 + C31012 * C5714) * C4805 +
             (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
             C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C1126 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C1127 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
             C9075 * C519 + C9072 * C537) *
                C30999 +
            (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
             C9075 * C507 + C9072 * C520) *
                C114) *
               C30766 * C30921) *
              C30816 * C695 +
          (((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
             C9077 * C2061 + C9074 * C2069) *
                C114 +
            (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
             C9077 * C2068 + C9074 * C2079) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C31071) *
              C30816 * C696 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C31071 -
           ((C9077 * C2066 + C9074 * C2078 + C9076 * C526 + C9073 * C540 +
             C9075 * C515 + C9072 * C535) *
                C30999 +
            (C9077 * C2060 + C9074 * C2067 + C9076 * C510 + C9073 * C525 +
             C9075 * C505 + C9072 * C516) *
                C114) *
               C30766 * C30921) *
              C30816 * C697 +
          (((C9075 * C511 + C9072 * C527 + C9076 * C512 + C9073 * C530 +
             C9077 * C2352 + C9074 * C2353) *
                C114 +
            (C9075 * C528 + C9072 * C541 + C9076 * C529 + C9073 * C542 +
             C9077 * C2354 + C9074 * C2355) *
                C30999) *
               C30766 * C30921 -
           ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
             C9075 * C128 + C9072 * C139) *
                C30999 +
            (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
             C9075 * C118 + C9072 * C129) *
                C114) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
              C9077 * C508 + C9074 * C521) *
                 C114 +
             (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
              C9077 * C522 + C9074 * C538) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2070 + C9074 * C2080 + C9076 * C522 + C9073 * C538 +
              C9075 * C519 + C9072 * C537) *
                 C30999 +
             (C9077 * C2062 + C9074 * C2071 + C9076 * C508 + C9073 * C521 +
              C9075 * C507 + C9072 * C520) *
                 C114) *
                C30766 * C30921) *
               C1126 +
           (((C9075 * C971 + C9072 * C976 + C9076 * C1336 + C9073 * C1348 +
              C9077 * C2470 + C9074 * C2473) *
                 C114 +
             (C9075 * C977 + C9072 * C986 + C9076 * C1347 + C9073 * C1363 +
              C9077 * C2474 + C9074 * C2479) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
              C9075 * C316 + C9072 * C334) *
                 C30999 +
             (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
              C9075 * C304 + C9072 * C317) *
                 C114) *
                C30766 * C31071) *
               C1127 +
           (((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
              C9077 * C1340 + C9074 * C1355) *
                 C114 +
             (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
              C9077 * C1356 + C9074 * C1367) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C6397 + C9074 * C6403 + C9076 * C1356 + C9073 * C1367 +
              C9075 * C1353 + C9072 * C1366) *
                 C30999 +
             (C9077 * C6394 + C9074 * C6398 + C9076 * C1340 + C9073 * C1355 +
              C9075 * C1339 + C9072 * C1354) *
                 C114) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          ((((C9075 * C506 + C9072 * C518 + C9076 * C509 + C9073 * C523 +
              C9077 * C2061 + C9074 * C2069) *
                 C114 +
             (C9075 * C517 + C9072 * C536 + C9076 * C524 + C9073 * C539 +
              C9077 * C2068 + C9074 * C2079) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
              C9075 * C125 + C9072 * C137) *
                 C30999 +
             (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
              C9075 * C116 + C9072 * C124) *
                 C114) *
                C30766 * C31071) *
               C1126 +
           (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
              C9077 * C1335 + C9074 * C1346) *
                 C114 +
             (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
              C9077 * C1345 + C9074 * C1362) *
                 C30999) *
                C30766 * C31071 -
            ((C9077 * C2476 + C9074 * C2480 + C9076 * C1345 + C9073 * C1362 +
              C9075 * C979 + C9072 * C987) *
                 C30999 +
             (C9077 * C2471 + C9074 * C2475 + C9076 * C1335 + C9073 * C1346 +
              C9075 * C972 + C9072 * C978) *
                 C114) *
                C30766 * C30921) *
               C1127 +
           (((C9075 * C1338 + C9072 * C1352 + C9076 * C1341 + C9073 * C1357 +
              C9077 * C6660 + C9074 * C6661) *
                 C114 +
             (C9075 * C1351 + C9072 * C1365 + C9076 * C1358 + C9073 * C1368 +
              C9077 * C6662 + C9074 * C6663) *
                 C30999) *
                C30766 * C30921 -
            ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
              C9075 * C321 + C9072 * C336) *
                 C30999 +
             (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
              C9075 * C306 + C9072 * C320) *
                 C114) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31136 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31124 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30834 * C31124 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31136 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31136 -
           (((C113 * C328 + C31012 * C340) * C30999 +
             (C113 * C310 + C31012 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30834 * C31124 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C30816 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30834 *
              C30816 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C30816 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30834 *
              C30816 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31012 * C134) * C114 +
            (C113 * C135 + C31012 * C142) * C30999) *
               C105) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C30816 * C108 -
          ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
            C9075 * C125 + C9072 * C137) *
               C30999 +
           (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
            C9075 * C116 + C9072 * C124) *
               C114) *
              C30766 * C30834 * C30816 * C109 +
          ((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
            C9077 * C510 + C9074 * C525) *
               C114 +
           (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
            C9077 * C526 + C9074 * C540) *
               C30999) *
              C30766 * C30834 * C30816 * C110 -
          ((C9077 * C529 + C9074 * C542 + C9076 * C528 + C9073 * C541 +
            C9075 * C128 + C9072 * C139) *
               C30999 +
           (C9077 * C512 + C9074 * C530 + C9076 * C511 + C9073 * C527 +
            C9075 * C118 + C9072 * C129) *
               C114) *
              C30766 * C30834 * C30816 * C111 +
          ((C9075 * C119 + C9072 * C130 + C9076 * C513 + C9073 * C532 +
            C9077 * C514 + C9074 * C533) *
               C114 +
           (C9075 * C131 + C9072 * C140 + C9076 * C531 + C9073 * C543 +
            C9077 * C534 + C9074 * C544) *
               C30999) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C299 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C31124 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C300 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C31136 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C31124 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
             C9077 * C508 + C9074 * C521) *
                C114 +
            (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
             C9077 * C522 + C9074 * C538) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
             C9075 * C316 + C9072 * C334) *
                C30999 +
            (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
             C9075 * C304 + C9072 * C317) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
             C9077 * C1340 + C9074 * C1355) *
                C114 +
            (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
             C9077 * C1356 + C9074 * C1367) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31133 +
          (((C9075 * C303 + C9072 * C315 + C9076 * C972 + C9073 * C978 +
             C9077 * C1335 + C9074 * C1346) *
                C114 +
            (C9075 * C314 + C9072 * C333 + C9076 * C979 + C9073 * C987 +
             C9077 * C1345 + C9074 * C1362) *
                C30999) *
               C30766 * C30834 * C1127 -
           ((C9077 * C524 + C9074 * C539 + C9076 * C517 + C9073 * C536 +
             C9075 * C125 + C9072 * C137) *
                C30999 +
            (C9077 * C509 + C9074 * C523 + C9076 * C506 + C9073 * C518 +
             C9075 * C116 + C9072 * C124) *
                C114) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1358 + C9074 * C1368 + C9076 * C1351 + C9073 * C1365 +
             C9075 * C321 + C9072 * C336) *
                C30999 +
            (C9077 * C1341 + C9074 * C1357 + C9076 * C1338 + C9073 * C1352 +
             C9075 * C306 + C9072 * C320) *
                C114) *
               C30766 * C30834 * C31099) *
              C31120 +
          (((C9075 * C117 + C9072 * C126 + C9076 * C505 + C9073 * C516 +
             C9077 * C510 + C9074 * C525) *
                C114 +
            (C9075 * C127 + C9072 * C138 + C9076 * C515 + C9073 * C535 +
             C9077 * C526 + C9074 * C540) *
                C30999) *
               C30766 * C30834 * C1126 -
           ((C9077 * C1343 + C9074 * C1361 + C9076 * C981 + C9073 * C988 +
             C9075 * C312 + C9072 * C332) *
                C30999 +
            (C9077 * C1334 + C9074 * C1344 + C9076 * C973 + C9073 * C980 +
             C9075 * C302 + C9072 * C313) *
                C114) *
               C30766 * C30834 * C1127 +
           ((C9075 * C307 + C9072 * C322 + C9076 * C1337 + C9073 * C1350 +
             C9077 * C1342 + C9074 * C1359) *
                C114 +
            (C9075 * C323 + C9072 * C337 + C9076 * C1349 + C9073 * C1364 +
             C9077 * C1360 + C9074 * C1369) *
                C30999) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9075 * C115 + C9072 * C122 + C9076 * C507 + C9073 * C520 +
            C9077 * C508 + C9074 * C521) *
               C114 +
           (C9075 * C123 + C9072 * C136 + C9076 * C519 + C9073 * C537 +
            C9077 * C522 + C9074 * C538) *
               C30999) *
              C30766 * C30834 * C1194 -
          ((C9077 * C1347 + C9074 * C1363 + C9076 * C977 + C9073 * C986 +
            C9075 * C316 + C9072 * C334) *
               C30999 +
           (C9077 * C1336 + C9074 * C1348 + C9076 * C971 + C9073 * C976 +
            C9075 * C304 + C9072 * C317) *
               C114) *
              C30766 * C30834 * C1195 +
          ((C9075 * C305 + C9072 * C318 + C9076 * C1339 + C9073 * C1354 +
            C9077 * C1340 + C9074 * C1355) *
               C114 +
           (C9075 * C319 + C9072 * C335 + C9076 * C1353 + C9073 * C1366 +
            C9077 * C1356 + C9074 * C1367) *
               C30999) *
              C30766 * C30834 * C1196 -
          ((C9077 * C5707 + C9074 * C5713 + C9076 * C1762 + C9073 * C1767 +
            C9075 * C1210 + C9072 * C1220) *
               C30999 +
           (C9077 * C5704 + C9074 * C5708 + C9076 * C1758 + C9073 * C1761 +
            C9075 * C1202 + C9072 * C1211) *
               C114) *
              C30766 * C30834 * C1197 +
          ((C9075 * C1203 + C9072 * C1212 + C9076 * C5705 + C9073 * C5710 +
            C9077 * C5706 + C9074 * C5711) *
               C114 +
           (C9075 * C1213 + C9072 * C1221 + C9076 * C5709 + C9073 * C5714 +
            C9077 * C5712 + C9074 * C5715) *
               C30999) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C30875 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C30882 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C2948) *
              C30793 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C30882 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C30875 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C2948) *
              C30802 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C30875 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C30882 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C2948) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31071 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C30875 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31071) *
               C30882 +
           ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
               C18763 * C1354) *
                  C114 +
              (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
               C18763 * C1366) *
                  C30999) *
                 C13224 +
             ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
                C31071 -
            (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
             ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
               C18762 * C1366) *
                  C30999 +
              (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
               C18762 * C1354) *
                  C114) *
                 C13224) *
                C30921) *
               C2948) *
              C2688 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31071) *
               C30875 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31071 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30882 +
           ((((C20426 + C20425) * C114 + (C20424 + C20423) * C30999) * C13224 +
             ((C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
               C18763 * C1359) *
                  C114 +
              (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
               C18763 * C1369) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
             ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
                C31071) *
               C2948) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31143 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C31139 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31129 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C30834 * C31109) *
              C2688 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C31139 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31143 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31129 +
           (((C20220 + C20219) * C114 + (C20218 + C20217) * C30999) * C13224 +
            ((C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
              C18763 * C1765) *
                 C114 +
             (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
              C18763 * C1769) *
                 C30999) *
                C13225) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C2580 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C30879) *
              C31142 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C30879 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C2580) *
              C31135 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C2580 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C30879) *
              C31122 +
          ((((C19344 + C19343) * C114 + (C19342 + C19341) * C30999) * C13224 +
            ((C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
                 C114 +
             (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
                 C30999) *
                C13225) *
               C30834 * C30879 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31137 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C31126 +
            (((C18764 * C508 + C18762 * C521 + C18765 * C2062 +
               C18763 * C2071) *
                  C114 +
              (C18764 * C522 + C18762 * C538 + C18765 * C2070 +
               C18763 * C2080) *
                  C30999) *
                 C13224 +
             ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
                C31102) *
               C2580 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C31126 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31137 -
            (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
             ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
               C18762 * C1363) *
                  C30999 +
              (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
               C18762 * C1348) *
                  C114) *
                 C13224) *
                C31102) *
               C30879) *
              C2688 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C31126 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31137 -
            (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
             ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
                C31102) *
               C2580 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31137 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C31126 +
            (((C21136 + C21135) * C114 + (C21134 + C21133) * C30999) * C13224 +
             ((C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
               C18763 * C2477) *
                  C114 +
              (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
               C18763 * C2481) *
                  C30999) *
                 C13225) *
                C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31071 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C2580 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31071) *
               C30879) *
              C30793 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31071) *
               C2580 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31071 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30879) *
              C30802 +
          (((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
             ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
                C31071 -
            (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
             ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
                C30921) *
               C2580 +
           ((((C19704 + C19703) * C114 + (C19702 + C19701) * C30999) * C13224 +
             ((C18764 * C974 + C18762 * C983 + C18765 * C2230 +
               C18763 * C2231) *
                  C114 +
              (C18764 * C982 + C18762 * C989 + C18765 * C2232 +
               C18763 * C2233) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
             ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
                C31071) *
               C30879) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C2580 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C30879) *
              C31142 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C30879 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C2580) *
              C31135 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C2580 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C30879) *
              C31122 +
          ((((C19344 + C19343) * C114 + (C19342 + C19341) * C30999) * C13224 +
            ((C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
                 C114 +
             (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
                 C30999) *
                C13225) *
               C30834 * C30879 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31143 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C31139 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31129 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C30834 * C31109) *
              C2688 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C31139 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31143 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31129 +
           (((C20220 + C20219) * C114 + (C20218 + C20217) * C30999) * C13224 +
            ((C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
              C18763 * C1765) *
                 C114 +
             (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
              C18763 * C1769) *
                 C30999) *
                C13225) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C3342 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C30875 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30882 +
           ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
               C18763 * C1354) *
                  C114 +
              (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
               C18763 * C1366) *
                  C30999) *
                 C13224 +
             ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
                C3342 -
            (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
             ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
               C18762 * C1366) *
                  C30999 +
              (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
               C18762 * C1354) *
                  C114) *
                 C13224) *
                C30921) *
               C2948) *
              C31056 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C3342) *
               C30875 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C3342 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30882 +
           ((((C20426 + C20425) * C114 + (C20424 + C20423) * C30999) * C13224 +
             ((C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
               C18763 * C1359) *
                  C114 +
              (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
               C18763 * C1369) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
             ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
                C3342) *
               C2948) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30917 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30924 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C3850) *
              C30875 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C30924 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30917 -
           (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C3850) *
              C30882 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30917 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C30924 +
           (((C18764 * C1340 + C18762 * C1355 + C18765 * C6394 +
              C18763 * C6398) *
                 C114 +
             (C18764 * C1356 + C18762 * C1367 + C18765 * C6397 +
              C18763 * C6403) *
                 C30999) *
                C13224 +
            ((C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C114 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C30999) *
                C13225) *
               C3850) *
              C2948) *
         C30788) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C3342 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C31143 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C30921 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C3342) *
              C31139 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C3342 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C30921) *
              C31129 +
          ((((C18764 * C1758 + C18762 * C1761 + C18765 * C5704 +
              C18763 * C5708) *
                 C114 +
             (C18764 * C1762 + C18762 * C1767 + C18765 * C5707 +
              C18763 * C5713) *
                 C30999) *
                C13224 +
            ((C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C114 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C30999) *
                C13225) *
               C30921 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C3342 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C2580 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30879) *
              C31133 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C3342) *
               C2580 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C3342 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30879) *
              C31120 +
          (((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
             ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
                C3342 -
            (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
             ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
                C30921) *
               C2580 +
           ((((C19704 + C19703) * C114 + (C19702 + C19701) * C30999) * C13224 +
             ((C18764 * C974 + C18762 * C983 + C18765 * C2230 +
               C18763 * C2231) *
                  C114 +
              (C18764 * C982 + C18762 * C989 + C18765 * C2232 +
               C18763 * C2233) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
             ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
                C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31144 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C31141 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31132 -
           (((C21275 + C21276) * C30999 + (C21277 + C21278) * C114) * C13225 +
            ((C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
              C18762 * C2080) *
                 C30999 +
             (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
              C18762 * C2071) *
                 C114) *
                C13224) *
               C31115) *
              C2580 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C31141 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C31144 -
           (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C31132 +
           (((C18764 * C2470 + C18762 * C2473 + C18765 * C6395 +
              C18763 * C6399) *
                 C114 +
             (C18764 * C2474 + C18762 * C2479 + C18765 * C6400 +
              C18763 * C6404) *
                 C30999) *
                C13224 +
            ((C18764 * C2471 + C18762 * C2475 + C18765 * C10700 +
              C18763 * C10701) *
                 C114 +
             (C18764 * C2476 + C18762 * C2480 + C18765 * C10702 +
              C18763 * C10703) *
                 C30999) *
                C13225) *
               C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C30917 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30924 +
            (((C18764 * C508 + C18762 * C521 + C18765 * C2062 +
               C18763 * C2071) *
                  C114 +
              (C18764 * C522 + C18762 * C538 + C18765 * C2070 +
               C18763 * C2080) *
                  C30999) *
                 C13224 +
             ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
                C3850) *
               C2580 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30924 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C30917 -
            (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
             ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
               C18762 * C1363) *
                  C30999 +
              (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
               C18762 * C1348) *
                  C114) *
                 C13224) *
                C3850) *
               C30879) *
              C31056 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30924 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C30917 -
            (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
             ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
                C3850) *
               C2580 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C30917 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30924 +
            (((C21136 + C21135) * C114 + (C21134 + C21133) * C30999) * C13224 +
             ((C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
               C18763 * C2477) *
                  C114 +
              (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
               C18763 * C2481) *
                  C30999) *
                 C13225) *
                C3850) *
               C30879) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C3342 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C2580 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30879) *
              C31133 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C3342) *
               C2580 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C3342 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30879) *
              C31120 +
          (((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
             ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
                C3342 -
            (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
             ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
                C30921) *
               C2580 +
           ((((C19704 + C19703) * C114 + (C19702 + C19701) * C30999) * C13224 +
             ((C18764 * C974 + C18762 * C983 + C18765 * C2230 +
               C18763 * C2231) *
                  C114 +
              (C18764 * C982 + C18762 * C989 + C18765 * C2232 +
               C18763 * C2233) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
             ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
                C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C3342 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C31143 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C30921 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C3342) *
              C31139 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C3342 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C30921) *
              C31129 +
          ((((C18764 * C1758 + C18762 * C1761 + C18765 * C5704 +
              C18763 * C5708) *
                 C114 +
             (C18764 * C1762 + C18762 * C1767 + C18765 * C5707 +
              C18763 * C5713) *
                 C30999) *
                C13224 +
            ((C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C114 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C30999) *
                C13225) *
               C30921 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C1468 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C1469 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C1470 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C30834 * C31109) *
              C31056 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C1469 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C1468 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C1470 +
           (((C20220 + C20219) * C114 + (C20218 + C20217) * C30999) * C13224 +
            ((C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
              C18763 * C1765) *
                 C114 +
             (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
              C18763 * C1769) *
                 C30999) *
                C13225) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31070 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C30879) *
              C695 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C30879 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31070) *
              C696 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C31070 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C30879) *
              C697 +
          ((((C19344 + C19343) * C114 + (C19342 + C19341) * C30999) * C13224 +
            ((C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
                 C114 +
             (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
                 C30999) *
                C13225) *
               C30834 * C30879 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C1880 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C1881 +
            (((C18764 * C508 + C18762 * C521 + C18765 * C2062 +
               C18763 * C2071) *
                  C114 +
              (C18764 * C522 + C18762 * C538 + C18765 * C2070 +
               C18763 * C2080) *
                  C30999) *
                 C13224 +
             ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
                C31102) *
               C31070 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C1881 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C1880 -
            (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
             ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
               C18762 * C1363) *
                  C30999 +
              (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
               C18762 * C1348) *
                  C114) *
                 C13224) *
                C31102) *
               C30879) *
              C31056 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C1881 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C1880 -
            (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
             ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
                C31102) *
               C31070 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C1880 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C1881 +
            (((C21136 + C21135) * C114 + (C21134 + C21133) * C30999) * C13224 +
             ((C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
               C18763 * C2477) *
                  C114 +
              (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
               C18763 * C2481) *
                  C30999) *
                 C13225) *
                C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31071 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C1468 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C30921 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C31071) *
              C1469 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C31071 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C30921) *
              C1470 +
          ((((C18764 * C1758 + C18762 * C1761 + C18765 * C5704 +
              C18763 * C5708) *
                 C114 +
             (C18764 * C1762 + C18762 * C1767 + C18765 * C5707 +
              C18763 * C5713) *
                 C30999) *
                C13224 +
            ((C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C114 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C30999) *
                C13225) *
               C30921 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31071 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C31070 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31071) *
               C30879) *
              C299 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31071) *
               C31070 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31071 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30879) *
              C300 +
          (((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
             ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
                C31071 -
            (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
             ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
                C30921) *
               C31070 +
           ((((C19704 + C19703) * C114 + (C19702 + C19701) * C30999) * C13224 +
             ((C18764 * C974 + C18762 * C983 + C18765 * C2230 +
               C18763 * C2231) *
                  C114 +
              (C18764 * C982 + C18762 * C989 + C18765 * C2232 +
               C18763 * C2233) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
             ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
                C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C2348 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C2349 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C2350 -
           (((C21275 + C21276) * C30999 + (C21277 + C21278) * C114) * C13225 +
            ((C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
              C18762 * C2080) *
                 C30999 +
             (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
              C18762 * C2071) *
                 C114) *
                C13224) *
               C31115) *
              C31070 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C2349 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C2348 -
           (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C2350 +
           (((C18764 * C2470 + C18762 * C2473 + C18765 * C6395 +
              C18763 * C6399) *
                 C114 +
             (C18764 * C2474 + C18762 * C2479 + C18765 * C6400 +
              C18763 * C6404) *
                 C30999) *
                C13224 +
            ((C18764 * C2471 + C18762 * C2475 + C18765 * C10700 +
              C18763 * C10701) *
                 C114 +
             (C18764 * C2476 + C18762 * C2480 + C18765 * C10702 +
              C18763 * C10703) *
                 C30999) *
                C13225) *
               C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18764 * C115 + C18762 * C122 + C18765 * C507 +
                 C18763 * C520) *
                    C114 +
                (C18764 * C123 + C18762 * C136 + C18765 * C519 +
                 C18763 * C537) *
                    C30999) *
                   C13224 +
               ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) *
                   C13225) *
                  C30834 * C30816 * C108 -
              (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) *
                   C13225 +
               ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) *
                   C13224) *
                  C30834 * C30816 * C109 +
              (((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) *
                   C13224 +
               ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) *
                   C13225) *
                  C30834 * C30816 * C110 -
              (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) *
                   C13225 +
               ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) *
                   C13224) *
                  C30834 * C30816 * C111 +
              (((C18814 + C18813) * C114 + (C18812 + C18811) * C30999) *
                   C13224 +
               ((C18764 * C120 + C18762 * C133 + C18765 * C812 +
                 C18763 * C813) *
                    C114 +
                (C18764 * C132 + C18762 * C141 + C18765 * C814 +
                 C18763 * C815) *
                    C30999) *
                   C13225) *
                  C30834 * C30816 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C18764 * C115 + C18762 * C122 + C18765 * C507 +
                  C18763 * C520) *
                     C114 +
                 (C18764 * C123 + C18762 * C136 + C18765 * C519 +
                  C18763 * C537) *
                     C30999) *
                    C13224 +
                ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) *
                    C13225) *
                   C30834 * C31136 -
               (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) *
                    C13225 +
                ((C18765 * C977 + C18763 * C986 + C18764 * C316 +
                  C18762 * C334) *
                     C30999 +
                 (C18765 * C971 + C18763 * C976 + C18764 * C304 +
                  C18762 * C317) *
                     C114) *
                    C13224) *
                   C30834 * C31124 +
               (((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
                  C18763 * C1354) *
                     C114 +
                 (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
                  C18763 * C1366) *
                     C30999) *
                    C13224 +
                ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) *
                    C13225) *
                   C30834 * C31099) *
                  C299 +
              ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) *
                    C13224 +
                ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) *
                    C13225) *
                   C30834 * C31124 -
               (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) *
                    C13225 +
                ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) *
                    C13224) *
                   C30834 * C31136 -
               (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) *
                    C13225 +
                ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) *
                    C13224) *
                   C30834 * C31099) *
                  C300 +
              ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) *
                    C13224 +
                ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) *
                    C13225) *
                   C30834 * C31136 -
               (((C18765 * C982 + C18763 * C989 + C18764 * C325 +
                  C18762 * C338) *
                     C30999 +
                 (C18765 * C974 + C18763 * C983 + C18764 * C308 +
                  C18762 * C324) *
                     C114) *
                    C13225 +
                ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) *
                    C13224) *
                   C30834 * C31124 +
               (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) *
                    C13224 +
                ((C18764 * C309 + C18762 * C327 + C18765 * C1640 +
                  C18763 * C1641) *
                     C114 +
                 (C18764 * C326 + C18762 * C339 + C18765 * C1642 +
                  C18763 * C1643) *
                     C30999) *
                    C13225) *
                   C30834 * C31099) *
                  C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31137 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C31126 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C30816 * C299 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C31126 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C31137 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C31102) *
              C30816 * C300 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C31137 -
           (((C18765 * C529 + C18763 * C542 + C18764 * C528 + C18762 * C541) *
                 C30999 +
             (C18765 * C512 + C18763 * C530 + C18764 * C511 + C18762 * C527) *
                 C114) *
                C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C31126 +
           (((C19202 + C19201) * C114 + (C19200 + C19199) * C30999) * C13224 +
            ((C18764 * C512 + C18762 * C530 + C18765 * C2352 + C18763 * C2353) *
                 C114 +
             (C18764 * C529 + C18762 * C542 + C18765 * C2354 + C18763 * C2355) *
                 C30999) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C1126 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C1127 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C31133 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C1127 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C1126 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C31120 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C1126 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C1127 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C1194 -
          (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
           ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                C30999 +
            (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                C114) *
               C13224) *
              C30834 * C1195 +
          (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                C114 +
            (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                C30999) *
               C13224 +
           ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
              C30834 * C1196 -
          (((C18765 * C1764 + C18763 * C1768 + C18764 * C1208 +
             C18762 * C1219) *
                C30999 +
            (C18765 * C1759 + C18763 * C1763 + C18764 * C1201 +
             C18762 * C1209) *
                C114) *
               C13225 +
           ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
             C18762 * C1220) *
                C30999 +
            (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
             C18762 * C1211) *
                C114) *
               C13224) *
              C30834 * C1197 +
          (((C18764 * C1203 + C18762 * C1212 + C18765 * C5705 +
             C18763 * C5710) *
                C114 +
            (C18764 * C1213 + C18762 * C1221 + C18765 * C5709 +
             C18763 * C5714) *
                C30999) *
               C13224 +
           ((C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C114 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C30999) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31137 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C31126 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C1126 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C31126 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C31137 -
           (((C18765 * C2476 + C18763 * C2480 + C18764 * C1345 +
              C18762 * C1362) *
                 C30999 +
             (C18765 * C2471 + C18763 * C2475 + C18764 * C1335 +
              C18762 * C1346) *
                 C114) *
                C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C31102) *
              C1127 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C31137 -
           (((C18765 * C1358 + C18763 * C1368 + C18764 * C1351 +
              C18762 * C1365) *
                 C30999 +
             (C18765 * C1341 + C18763 * C1357 + C18764 * C1338 +
              C18762 * C1352) *
                 C114) *
                C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C31126 +
           (((C18764 * C1340 + C18762 * C1355 + C18765 * C6394 +
              C18763 * C6398) *
                 C114 +
             (C18764 * C1356 + C18762 * C1367 + C18765 * C6397 +
              C18763 * C6403) *
                 C30999) *
                C13224 +
            ((C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C114 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C30999) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C1880 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C30816 * C31133 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C1881 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C1880 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C31102) *
              C30816 * C31120 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C1880 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C1881 +
           (((C19202 + C19201) * C114 + (C19200 + C19199) * C30999) * C13224 +
            ((C18764 * C512 + C18762 * C530 + C18765 * C2352 + C18763 * C2353) *
                 C114 +
             (C18764 * C529 + C18762 * C542 + C18765 * C2354 + C18763 * C2355) *
                 C30999) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C1880 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C31136 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C1881 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C1880 -
           (((C18765 * C2476 + C18763 * C2480 + C18764 * C1345 +
              C18762 * C1362) *
                 C30999 +
             (C18765 * C2471 + C18763 * C2475 + C18764 * C1335 +
              C18762 * C1346) *
                 C114) *
                C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C31102) *
              C31124 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C1880 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C1881 +
           (((C18764 * C1340 + C18762 * C1355 + C18765 * C6394 +
              C18763 * C6398) *
                 C114 +
             (C18764 * C1356 + C18762 * C1367 + C18765 * C6397 +
              C18763 * C6403) *
                 C30999) *
                C13224 +
            ((C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C114 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C30999) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C2055 -
          (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
           ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                C30999 +
            (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                C114) *
               C13224) *
              C2056 +
          (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                C114 +
            (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                C30999) *
               C13224 +
           ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
              C2057 -
          (((C18765 * C2075 + C18763 * C2082 + C18764 * C2068 +
             C18762 * C2079) *
                C30999 +
            (C18765 * C2064 + C18763 * C2074 + C18764 * C2061 +
             C18762 * C2069) *
                C114) *
               C13225 +
           ((C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
             C18762 * C2080) *
                C30999 +
            (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
             C18762 * C2071) *
                C114) *
               C13224) *
              C2058 +
          (((C18764 * C2063 + C18762 * C2072 + C18765 * C10546 +
             C18763 * C10549) *
                C114 +
            (C18764 * C2073 + C18762 * C2081 + C18765 * C10548 +
             C18763 * C10552) *
                C30999) *
               C13224 +
           ((C18764 * C2064 + C18762 * C2074 + C18765 * C10802 +
             C18763 * C10803) *
                C114 +
            (C18764 * C2075 + C18762 * C2082 + C18765 * C10804 +
             C18763 * C10805) *
                C30999) *
               C13225) *
              C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31071 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C1126 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31071) *
               C1127 +
           ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
               C18763 * C1354) *
                  C114 +
              (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
               C18763 * C1366) *
                  C30999) *
                 C13224 +
             ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
                C31071 -
            (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
             ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
               C18762 * C1366) *
                  C30999 +
              (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
               C18762 * C1354) *
                  C114) *
                 C13224) *
                C30921) *
               C31099) *
              C31056 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31071) *
               C1126 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31071 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C1127 +
           ((((C20426 + C20425) * C114 + (C20424 + C20423) * C30999) * C13224 +
             ((C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
               C18763 * C1359) *
                  C114 +
              (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
               C18763 * C1369) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
             ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
                C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31071 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C30816 * C695 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C30921 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C31071) *
              C30816 * C696 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C31071 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C30921) *
              C30816 * C697 +
          ((((C19486 + C19485) * C114 + (C19484 + C19483) * C30999) * C13224 +
            ((C18764 * C513 + C18762 * C532 + C18765 * C514 + C18763 * C533) *
                 C114 +
             (C18764 * C531 + C18762 * C543 + C18765 * C534 + C18763 * C544) *
                 C30999) *
                C13225) *
               C30921 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C2348 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C2349 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C2350 -
           (((C21275 + C21276) * C30999 + (C21277 + C21278) * C114) * C13225 +
            ((C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
              C18762 * C2080) *
                 C30999 +
             (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
              C18762 * C2071) *
                 C114) *
                C13224) *
               C31115) *
              C30816 * C31056 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C2349 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C2348 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C2350 +
           (((C21278 + C21277) * C114 + (C21276 + C21275) * C30999) * C13224 +
            ((C18764 * C2060 + C18762 * C2067 + C18765 * C2065 +
              C18763 * C2076) *
                 C114 +
             (C18764 * C2066 + C18762 * C2078 + C18765 * C2077 +
              C18763 * C2083) *
                 C30999) *
                C13225) *
               C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31136 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C31124 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C299 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C31124 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31136 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C300 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C31136 -
           (((C18765 * C982 + C18763 * C989 + C18764 * C325 + C18762 * C338) *
                 C30999 +
             (C18765 * C974 + C18763 * C983 + C18764 * C308 + C18762 * C324) *
                 C114) *
                C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C31124 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C30816 * C108 -
          (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
           ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
              C30834 * C30816 * C109 +
          (((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
           ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
              C30834 * C30816 * C110 -
          (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
           ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
              C30834 * C30816 * C111 +
          (((C18814 + C18813) * C114 + (C18812 + C18811) * C30999) * C13224 +
           ((C18764 * C120 + C18762 * C133 + C18765 * C812 + C18763 * C813) *
                C114 +
            (C18764 * C132 + C18762 * C141 + C18765 * C814 + C18763 * C815) *
                C30999) *
               C13225) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C1126 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C1127 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C31133 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C1127 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C1126 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C31120 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C1126 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C1127 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C1194 -
          (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
           ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                C30999 +
            (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                C114) *
               C13224) *
              C30834 * C1195 +
          (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                C114 +
            (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                C30999) *
               C13224 +
           ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
              C30834 * C1196 -
          (((C18765 * C1764 + C18763 * C1768 + C18764 * C1208 +
             C18762 * C1219) *
                C30999 +
            (C18765 * C1759 + C18763 * C1763 + C18764 * C1201 +
             C18762 * C1209) *
                C114) *
               C13225 +
           ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
             C18762 * C1220) *
                C30999 +
            (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
             C18762 * C1211) *
                C114) *
               C13224) *
              C30834 * C1197 +
          (((C18764 * C1203 + C18762 * C1212 + C18765 * C5705 +
             C18763 * C5710) *
                C114 +
            (C18764 * C1213 + C18762 * C1221 + C18765 * C5709 +
             C18763 * C5714) *
                C30999) *
               C13224 +
           ((C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C114 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C30999) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C1880 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C30816 * C31133 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C1881 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C1880 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C31102) *
              C30816 * C31120 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C1880 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C1881 +
           (((C19202 + C19201) * C114 + (C19200 + C19199) * C30999) * C13224 +
            ((C18764 * C512 + C18762 * C530 + C18765 * C2352 + C18763 * C2353) *
                 C114 +
             (C18764 * C529 + C18762 * C542 + C18765 * C2354 + C18763 * C2355) *
                 C30999) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C1880 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C31136 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C1881 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C1880 -
           (((C18765 * C2476 + C18763 * C2480 + C18764 * C1345 +
              C18762 * C1362) *
                 C30999 +
             (C18765 * C2471 + C18763 * C2475 + C18764 * C1335 +
              C18762 * C1346) *
                 C114) *
                C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C31102) *
              C31124 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C1880 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C1881 +
           (((C18764 * C1340 + C18762 * C1355 + C18765 * C6394 +
              C18763 * C6398) *
                 C114 +
             (C18764 * C1356 + C18762 * C1367 + C18765 * C6397 +
              C18763 * C6403) *
                 C30999) *
                C13224 +
            ((C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C114 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C30999) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C3342 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C31070 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30879) *
              C30793 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C3342) *
               C31070 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C3342 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30879) *
              C30802 +
          (((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
             ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
                C3342 -
            (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
             ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
                C30921) *
               C31070 +
           ((((C19704 + C19703) * C114 + (C19702 + C19701) * C30999) * C13224 +
             ((C18764 * C974 + C18762 * C983 + C18765 * C2230 +
               C18763 * C2231) *
                  C114 +
              (C18764 * C982 + C18762 * C989 + C18765 * C2232 +
               C18763 * C2233) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
             ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
                C3342) *
               C30879) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C30917 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30924 +
            (((C18764 * C508 + C18762 * C521 + C18765 * C2062 +
               C18763 * C2071) *
                  C114 +
              (C18764 * C522 + C18762 * C538 + C18765 * C2070 +
               C18763 * C2080) *
                  C30999) *
                 C13224 +
             ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
                C3850) *
               C31070 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30924 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C30917 -
            (((C21133 + C21134) * C30999 + (C21135 + C21136) * C114) * C13225 +
             ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
               C18762 * C1363) *
                  C30999 +
              (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
               C18762 * C1348) *
                  C114) *
                 C13224) *
                C3850) *
               C30879) *
              C2688 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30924 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C30917 -
            (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
             ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
                C3850) *
               C31070 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C30917 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30924 +
            (((C21136 + C21135) * C114 + (C21134 + C21133) * C30999) * C13224 +
             ((C18764 * C1334 + C18762 * C1344 + C18765 * C2472 +
               C18763 * C2477) *
                  C114 +
              (C18764 * C1343 + C18762 * C1361 + C18765 * C2478 +
               C18763 * C2481) *
                  C30999) *
                 C13225) *
                C3850) *
               C30879) *
              C30799)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C3342 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C31136 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C31124 +
           ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
               C18763 * C1354) *
                  C114 +
              (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
               C18763 * C1366) *
                  C30999) *
                 C13224 +
             ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
                C3342 -
            (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
             ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
               C18762 * C1366) *
                  C30999 +
              (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
               C18762 * C1354) *
                  C114) *
                 C13224) *
                C30921) *
               C31099) *
              C2688 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C3342) *
               C31136 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C3342 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C31124 +
           ((((C20426 + C20425) * C114 + (C20424 + C20423) * C30999) * C13224 +
             ((C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
               C18763 * C1359) *
                  C114 +
              (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
               C18763 * C1369) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
             ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
                C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C3342 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C30816 * C31142 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C30921 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C3342) *
              C30816 * C31135 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C3342 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C30921) *
              C30816 * C31122 +
          ((((C19486 + C19485) * C114 + (C19484 + C19483) * C30999) * C13224 +
            ((C18764 * C513 + C18762 * C532 + C18765 * C514 + C18763 * C533) *
                 C114 +
             (C18764 * C531 + C18762 * C543 + C18765 * C534 + C18763 * C544) *
                 C30999) *
                C13225) *
               C30921 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31144 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C31141 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31132 -
           (((C21275 + C21276) * C30999 + (C21277 + C21278) * C114) * C13225 +
            ((C18765 * C2073 + C18763 * C2081 + C18764 * C2070 +
              C18762 * C2080) *
                 C30999 +
             (C18765 * C2063 + C18763 * C2072 + C18764 * C2062 +
              C18762 * C2071) *
                 C114) *
                C13224) *
               C31115) *
              C30816 * C2688 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C31141 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C31144 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C31132 +
           (((C21278 + C21277) * C114 + (C21276 + C21275) * C30999) * C13224 +
            ((C18764 * C2060 + C18762 * C2067 + C18765 * C2065 +
              C18763 * C2076) *
                 C114 +
             (C18764 * C2066 + C18762 * C2078 + C18765 * C2077 +
              C18763 * C2083) *
                 C30999) *
                C13225) *
               C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30917 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30924 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C3850) *
              C30816 * C30793 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C30924 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30917 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C3850) *
              C30816 * C30802 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30917 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C30924 +
           (((C19202 + C19201) * C114 + (C19200 + C19199) * C30999) * C13224 +
            ((C18764 * C512 + C18762 * C530 + C18765 * C2352 + C18763 * C2353) *
                 C114 +
             (C18764 * C529 + C18762 * C542 + C18765 * C2354 + C18763 * C2355) *
                 C30999) *
                C13225) *
               C3850) *
              C30816 * C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C3342 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C30816 * C31142 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C30921 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C3342) *
              C30816 * C31135 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C3342 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C30921) *
              C30816 * C31122 +
          ((((C19486 + C19485) * C114 + (C19484 + C19483) * C30999) * C13224 +
            ((C18764 * C513 + C18762 * C532 + C18765 * C514 + C18763 * C533) *
                 C114 +
             (C18764 * C531 + C18762 * C543 + C18765 * C534 + C18763 * C544) *
                 C30999) *
                C13225) *
               C30921 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C3342 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C31136 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C31124 +
           ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
               C18763 * C1354) *
                  C114 +
              (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
               C18763 * C1366) *
                  C30999) *
                 C13224 +
             ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
                C3342 -
            (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
             ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
               C18762 * C1366) *
                  C30999 +
              (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
               C18762 * C1354) *
                  C114) *
                 C13224) *
                C30921) *
               C31099) *
              C2688 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C3342) *
               C31136 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C3342 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C31124 +
           ((((C20426 + C20425) * C114 + (C20424 + C20423) * C30999) * C13224 +
             ((C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
               C18763 * C1359) *
                  C114 +
              (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
               C18763 * C1369) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
             ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
                C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31070 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C30879) *
              C695 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C30879 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31070) *
              C696 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C31070 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C30879) *
              C697 +
          ((((C19344 + C19343) * C114 + (C19342 + C19341) * C30999) * C13224 +
            ((C18764 * C310 + C18762 * C329 + C18765 * C975 + C18763 * C984) *
                 C114 +
             (C18764 * C328 + C18762 * C340 + C18765 * C985 + C18763 * C990) *
                 C30999) *
                C13225) *
               C30834 * C30879 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C1468 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C1469 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C1470 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C30834 * C31109) *
              C31056 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C1469 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C1468 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C1470 +
           (((C20220 + C20219) * C114 + (C20218 + C20217) * C30999) * C13224 +
            ((C18764 * C1200 + C18762 * C1207 + C18765 * C1760 +
              C18763 * C1765) *
                 C114 +
             (C18764 * C1206 + C18762 * C1218 + C18765 * C1766 +
              C18763 * C1769) *
                 C30999) *
                C13225) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31071 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C31070 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31071) *
               C30879) *
              C299 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31071) *
               C31070 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31071 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C30879) *
              C300 +
          (((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
             ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
                C31071 -
            (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
             ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
                C30921) *
               C31070 +
           ((((C19704 + C19703) * C114 + (C19702 + C19701) * C30999) * C13224 +
             ((C18764 * C974 + C18762 * C983 + C18765 * C2230 +
               C18763 * C2231) *
                  C114 +
              (C18764 * C982 + C18762 * C989 + C18765 * C2232 +
               C18763 * C2233) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
             ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
                C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31071 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C1468 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C30921 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C31071) *
              C1469 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C31071 -
           (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C30921) *
              C1470 +
          ((((C18764 * C1758 + C18762 * C1761 + C18765 * C5704 +
              C18763 * C5708) *
                 C114 +
             (C18764 * C1762 + C18762 * C1767 + C18765 * C5707 +
              C18763 * C5713) *
                 C30999) *
                C13224 +
            ((C18764 * C1759 + C18762 * C1763 + C18765 * C6552 +
              C18763 * C6553) *
                 C114 +
             (C18764 * C1764 + C18762 * C1768 + C18765 * C6554 +
              C18763 * C6555) *
                 C30999) *
                C13225) *
               C30921 -
           (((C20217 + C20218) * C30999 + (C20219 + C20220) * C114) * C13225 +
            ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
              C18762 * C1220) *
                 C30999 +
             (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
              C18762 * C1211) *
                 C114) *
                C13224) *
               C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31136 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C31124 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C299 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C31124 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31136 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C300 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C31136 -
           (((C18765 * C982 + C18763 * C989 + C18764 * C325 + C18762 * C338) *
                 C30999 +
             (C18765 * C974 + C18763 * C983 + C18764 * C308 + C18762 * C324) *
                 C114) *
                C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C31124 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C30816 * C108 -
          (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
           ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
              C30834 * C30816 * C109 +
          (((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
           ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
              C30834 * C30816 * C110 -
          (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
           ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
              C30834 * C30816 * C111 +
          (((C18814 + C18813) * C114 + (C18812 + C18811) * C30999) * C13224 +
           ((C18764 * C120 + C18762 * C133 + C18765 * C812 + C18763 * C813) *
                C114 +
            (C18764 * C132 + C18762 * C141 + C18765 * C814 + C18763 * C815) *
                C30999) *
               C13225) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31137 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C31126 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C30816 * C299 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C31126 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C31137 -
           (((C19199 + C19200) * C30999 + (C19201 + C19202) * C114) * C13225 +
            ((C19194 + C19193) * C30999 + (C19192 + C19191) * C114) * C13224) *
               C31102) *
              C30816 * C300 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C31137 -
           (((C18765 * C529 + C18763 * C542 + C18764 * C528 + C18762 * C541) *
                 C30999 +
             (C18765 * C512 + C18763 * C530 + C18764 * C511 + C18762 * C527) *
                 C114) *
                C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C31126 +
           (((C19202 + C19201) * C114 + (C19200 + C19199) * C30999) * C13224 +
            ((C18764 * C512 + C18762 * C530 + C18765 * C2352 + C18763 * C2353) *
                 C114 +
             (C18764 * C529 + C18762 * C542 + C18765 * C2354 + C18763 * C2355) *
                 C30999) *
                C13225) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C1126 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C1127 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C31133 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C1127 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C1126 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C31120 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C1126 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C1127 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C1194 -
          (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
           ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                C30999 +
            (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                C114) *
               C13224) *
              C30834 * C1195 +
          (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                C114 +
            (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                C30999) *
               C13224 +
           ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
              C30834 * C1196 -
          (((C18765 * C1764 + C18763 * C1768 + C18764 * C1208 +
             C18762 * C1219) *
                C30999 +
            (C18765 * C1759 + C18763 * C1763 + C18764 * C1201 +
             C18762 * C1209) *
                C114) *
               C13225 +
           ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
             C18762 * C1220) *
                C30999 +
            (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
             C18762 * C1211) *
                C114) *
               C13224) *
              C30834 * C1197 +
          (((C18764 * C1203 + C18762 * C1212 + C18765 * C5705 +
             C18763 * C5710) *
                C114 +
            (C18764 * C1213 + C18762 * C1221 + C18765 * C5709 +
             C18763 * C5714) *
                C30999) *
               C13224 +
           ((C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C114 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C30999) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31137 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C31126 +
           (((C18764 * C508 + C18762 * C521 + C18765 * C2062 + C18763 * C2071) *
                 C114 +
             (C18764 * C522 + C18762 * C538 + C18765 * C2070 + C18763 * C2080) *
                 C30999) *
                C13224 +
            ((C19191 + C19192) * C114 + (C19193 + C19194) * C30999) * C13225) *
               C31102) *
              C1126 +
          ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 + C18763 * C1348) *
                 C114 +
             (C18764 * C977 + C18762 * C986 + C18765 * C1347 + C18763 * C1363) *
                 C30999) *
                C13224 +
            ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
               C31126 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C31137 -
           (((C18765 * C2476 + C18763 * C2480 + C18764 * C1345 +
              C18762 * C1362) *
                 C30999 +
             (C18765 * C2471 + C18763 * C2475 + C18764 * C1335 +
              C18762 * C1346) *
                 C114) *
                C13225 +
            ((C18765 * C2474 + C18763 * C2479 + C18764 * C1347 +
              C18762 * C1363) *
                 C30999 +
             (C18765 * C2470 + C18763 * C2473 + C18764 * C1336 +
              C18762 * C1348) *
                 C114) *
                C13224) *
               C31102) *
              C1127 +
          ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C31137 -
           (((C18765 * C1358 + C18763 * C1368 + C18764 * C1351 +
              C18762 * C1365) *
                 C30999 +
             (C18765 * C1341 + C18763 * C1357 + C18764 * C1338 +
              C18762 * C1352) *
                 C114) *
                C13225 +
            ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
              C18762 * C1366) *
                 C30999 +
             (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
              C18762 * C1354) *
                 C114) *
                C13224) *
               C31126 +
           (((C18764 * C1340 + C18762 * C1355 + C18765 * C6394 +
              C18763 * C6398) *
                 C114 +
             (C18764 * C1356 + C18762 * C1367 + C18765 * C6397 +
              C18763 * C6403) *
                 C30999) *
                C13224 +
            ((C18764 * C1341 + C18762 * C1357 + C18765 * C6660 +
              C18763 * C6661) *
                 C114 +
             (C18764 * C1358 + C18762 * C1368 + C18765 * C6662 +
              C18763 * C6663) *
                 C30999) *
                C13225) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C31071 -
           (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
            ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                 C30999 +
             (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                 C114) *
                C13224) *
               C30921) *
              C30816 * C695 +
          ((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
            ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
               C30921 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C31071) *
              C30816 * C696 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C31071 -
           (((C19483 + C19484) * C30999 + (C19485 + C19486) * C114) * C13225 +
            ((C19198 + C19197) * C30999 + (C19196 + C19195) * C114) * C13224) *
               C30921) *
              C30816 * C697 +
          ((((C19486 + C19485) * C114 + (C19484 + C19483) * C30999) * C13224 +
            ((C18764 * C513 + C18762 * C532 + C18765 * C514 + C18763 * C533) *
                 C114 +
             (C18764 * C531 + C18762 * C543 + C18765 * C534 + C18763 * C544) *
                 C30999) *
                C13225) *
               C30921 -
           (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
            ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
               C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                  C114 +
              (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                  C30999) *
                 C13224 +
             ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
                C31071 -
            (((C19187 + C19188) * C30999 + (C19189 + C19190) * C114) * C13225 +
             ((C18765 * C522 + C18763 * C538 + C18764 * C519 + C18762 * C537) *
                  C30999 +
              (C18765 * C508 + C18763 * C521 + C18764 * C507 + C18762 * C520) *
                  C114) *
                 C13224) *
                C30921) *
               C1126 +
           ((((C18764 * C971 + C18762 * C976 + C18765 * C1336 +
               C18763 * C1348) *
                  C114 +
              (C18764 * C977 + C18762 * C986 + C18765 * C1347 +
               C18763 * C1363) *
                  C30999) *
                 C13224 +
             ((C19697 + C19698) * C114 + (C19699 + C19700) * C30999) * C13225) *
                C30921 -
            (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
             ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                  C30999 +
              (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                  C114) *
                 C13224) *
                C31071) *
               C1127 +
           ((((C18764 * C305 + C18762 * C318 + C18765 * C1339 +
               C18763 * C1354) *
                  C114 +
              (C18764 * C319 + C18762 * C335 + C18765 * C1353 +
               C18763 * C1366) *
                  C30999) *
                 C13224 +
             ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
                C31071 -
            (((C20423 + C20424) * C30999 + (C20425 + C20426) * C114) * C13225 +
             ((C18765 * C1356 + C18763 * C1367 + C18764 * C1353 +
               C18762 * C1366) *
                  C30999 +
              (C18765 * C1340 + C18763 * C1355 + C18764 * C1339 +
               C18762 * C1354) *
                  C114) *
                 C13224) *
                C30921) *
               C31099) *
              C31056 +
          (((((C19190 + C19189) * C114 + (C19188 + C19187) * C30999) * C13224 +
             ((C19195 + C19196) * C114 + (C19197 + C19198) * C30999) * C13225) *
                C30921 -
            (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
             ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
                C31071) *
               C1126 +
           ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
             ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
                C31071 -
            (((C19701 + C19702) * C30999 + (C19703 + C19704) * C114) * C13225 +
             ((C19700 + C19699) * C30999 + (C19698 + C19697) * C114) * C13224) *
                C30921) *
               C1127 +
           ((((C20426 + C20425) * C114 + (C20424 + C20423) * C30999) * C13224 +
             ((C18764 * C1337 + C18762 * C1350 + C18765 * C1342 +
               C18763 * C1359) *
                  C114 +
              (C18764 * C1349 + C18762 * C1364 + C18765 * C1360 +
               C18763 * C1369) *
                  C30999) *
                 C13225) *
                C30921 -
            (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
             ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
                C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C30816 * C108 -
          (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
           ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
              C30834 * C30816 * C109 +
          (((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
           ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
              C30834 * C30816 * C110 -
          (((C18811 + C18812) * C30999 + (C18813 + C18814) * C114) * C13225 +
           ((C18810 + C18809) * C30999 + (C18808 + C18807) * C114) * C13224) *
              C30834 * C30816 * C111 +
          (((C18814 + C18813) * C114 + (C18812 + C18811) * C30999) * C13224 +
           ((C18764 * C120 + C18762 * C133 + C18765 * C812 + C18763 * C813) *
                C114 +
            (C18764 * C132 + C18762 * C141 + C18765 * C814 + C18763 * C815) *
                C30999) *
               C13225) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C31136 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C31124 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C299 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C31124 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C31136 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C300 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C31136 -
           (((C18765 * C982 + C18763 * C989 + C18764 * C325 + C18762 * C338) *
                 C30999 +
             (C18765 * C974 + C18763 * C983 + C18764 * C308 + C18762 * C324) *
                 C114) *
                C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C31124 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                 C114 +
             (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                 C30999) *
                C13224 +
            ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
               C30834 * C1126 -
           (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
            ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                 C30999 +
             (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                 C114) *
                C13224) *
               C30834 * C1127 +
           (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                 C114 +
             (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                 C30999) *
                C13224 +
            ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
               C30834 * C31099) *
              C31133 +
          ((((C18996 + C18995) * C114 + (C18994 + C18993) * C30999) * C13224 +
            ((C19001 + C19002) * C114 + (C19003 + C19004) * C30999) * C13225) *
               C30834 * C1127 -
           (((C18803 + C18804) * C30999 + (C18805 + C18806) * C114) * C13225 +
            ((C18802 + C18801) * C30999 + (C18800 + C18799) * C114) * C13224) *
               C30834 * C1126 -
           (((C19005 + C19006) * C30999 + (C19007 + C19008) * C114) * C13225 +
            ((C19000 + C18999) * C30999 + (C18998 + C18997) * C114) * C13224) *
               C30834 * C31099) *
              C31120 +
          ((((C18806 + C18805) * C114 + (C18804 + C18803) * C30999) * C13224 +
            ((C18807 + C18808) * C114 + (C18809 + C18810) * C30999) * C13225) *
               C30834 * C1126 -
           (((C19341 + C19342) * C30999 + (C19343 + C19344) * C114) * C13225 +
            ((C19004 + C19003) * C30999 + (C19002 + C19001) * C114) * C13224) *
               C30834 * C1127 +
           (((C19008 + C19007) * C114 + (C19006 + C19005) * C30999) * C13224 +
            ((C18764 * C309 + C18762 * C327 + C18765 * C1640 + C18763 * C1641) *
                 C114 +
             (C18764 * C326 + C18762 * C339 + C18765 * C1642 + C18763 * C1643) *
                 C30999) *
                C13225) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18764 * C115 + C18762 * C122 + C18765 * C507 + C18763 * C520) *
                C114 +
            (C18764 * C123 + C18762 * C136 + C18765 * C519 + C18763 * C537) *
                C30999) *
               C13224 +
           ((C18799 + C18800) * C114 + (C18801 + C18802) * C30999) * C13225) *
              C30834 * C1194 -
          (((C18993 + C18994) * C30999 + (C18995 + C18996) * C114) * C13225 +
           ((C18765 * C977 + C18763 * C986 + C18764 * C316 + C18762 * C334) *
                C30999 +
            (C18765 * C971 + C18763 * C976 + C18764 * C304 + C18762 * C317) *
                C114) *
               C13224) *
              C30834 * C1195 +
          (((C18764 * C305 + C18762 * C318 + C18765 * C1339 + C18763 * C1354) *
                C114 +
            (C18764 * C319 + C18762 * C335 + C18765 * C1353 + C18763 * C1366) *
                C30999) *
               C13224 +
           ((C18997 + C18998) * C114 + (C18999 + C19000) * C30999) * C13225) *
              C30834 * C1196 -
          (((C18765 * C1764 + C18763 * C1768 + C18764 * C1208 +
             C18762 * C1219) *
                C30999 +
            (C18765 * C1759 + C18763 * C1763 + C18764 * C1201 +
             C18762 * C1209) *
                C114) *
               C13225 +
           ((C18765 * C1762 + C18763 * C1767 + C18764 * C1210 +
             C18762 * C1220) *
                C30999 +
            (C18765 * C1758 + C18763 * C1761 + C18764 * C1202 +
             C18762 * C1211) *
                C114) *
               C13224) *
              C30834 * C1197 +
          (((C18764 * C1203 + C18762 * C1212 + C18765 * C5705 +
             C18763 * C5710) *
                C114 +
            (C18764 * C1213 + C18762 * C1221 + C18765 * C5709 +
             C18763 * C5714) *
                C30999) *
               C13224 +
           ((C18764 * C1204 + C18762 * C1214 + C18765 * C5994 +
             C18763 * C5995) *
                C114 +
            (C18764 * C1215 + C18762 * C1222 + C18765 * C5996 +
             C18763 * C5997) *
                C30999) *
               C13225) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C30875 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C30882 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C2948) *
              C30793 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C30882 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C30875 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C2948) *
              C30802 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C30875 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C30882 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C2948) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C30875 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30882 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C2948) *
              C30793 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30882 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C30875 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C2948) *
              C30802 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C30875 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30882 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C2948) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C30875 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30882 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31071 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C2948) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C30875 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30882 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31071) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C30875 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30882 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C31071 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C2948) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C30875 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30882 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C31071) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31143 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31139 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31129 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C30834 * C31109) *
              C2688 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C31139 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31143 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31129 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31012 * C1475) * C114 +
             (C113 * C1476 + C31012 * C1477) * C30999) *
                C105) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C2580 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C30879) *
              C31142 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C30879 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C2580) *
              C31135 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C2580 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C30879) *
              C31122 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31012 * C700) * C114 +
             (C113 * C701 + C31012 * C702) * C30999) *
                C105) *
               C30834 * C30879 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31137 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C31126 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31102) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C31126 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31137 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C31102) *
               C30879) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C31126 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31137 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31102) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31137 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C31126 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C2580 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C31142 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C2580) *
              C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C2580 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C31122 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31143 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31139 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C31129 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C2688 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31139 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31143 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31129 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31137 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C31126 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C31102) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C31126 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31137 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C31102) *
               C30879) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C31126 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31137 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C31102) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31137 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C31126 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30879) *
              C30793 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C30802 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31071) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30879) *
              C30793 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C31071 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C31071) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C2580 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C30879) *
              C31142 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C30879 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C2580) *
              C31135 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C2580 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C30879) *
              C31122 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31012 * C700) * C114 +
             (C113 * C701 + C31012 * C702) * C30999) *
                C105) *
               C30834 * C30879 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31143 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31139 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31129 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C30834 * C31109) *
              C2688 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C31139 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31143 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31129 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31012 * C1475) * C114 +
             (C113 * C1476 + C31012 * C1477) * C30999) *
                C105) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C2580 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C31142 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C2580) *
              C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C2580 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C31122 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C2580) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31143 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31139 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C31129 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C2688 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31139 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31143 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31129 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C30875 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30882 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C2948) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C30875 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30882 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C30875 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30882 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C3342 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C2948) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C30875 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30882 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C3342) *
               C2948) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C115 + C31012 * C122) * C114 +
                      (C113 * C123 + C31012 * C136) * C30999) *
                         C103 +
                     (C174 + C175) * C104 + C184 * C105) *
                        C30917 -
                    (C594 * C105 + (C584 + C585) * C104 +
                     ((C113 * C519 + C31012 * C537) * C30999 +
                      (C113 * C507 + C31012 * C520) * C114) *
                         C103) *
                        C30924 +
                    (((C113 * C508 + C31012 * C521) * C114 +
                      (C113 * C522 + C31012 * C538) * C30999) *
                         C103 +
                     (C586 + C587) * C104 + C595 * C105) *
                        C3850) *
                       C30875 +
                   ((((C113 * C971 + C31012 * C976) * C114 +
                      (C113 * C977 + C31012 * C986) * C30999) *
                         C103 +
                     (C1010 + C1011) * C104 + C1016 * C105) *
                        C30924 -
                    (C391 * C105 + (C381 + C382) * C104 +
                     ((C113 * C316 + C31012 * C334) * C30999 +
                      (C113 * C304 + C31012 * C317) * C114) *
                         C103) *
                        C30917 -
                    ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
                     ((C113 * C1347 + C31012 * C1363) * C30999 +
                      (C113 * C1336 + C31012 * C1348) * C114) *
                         C103) *
                        C3850) *
                       C30882 +
                   ((((C113 * C305 + C31012 * C318) * C114 +
                      (C113 * C319 + C31012 * C335) * C30999) *
                         C103 +
                     (C383 + C384) * C104 + C392 * C105) *
                        C30917 -
                    ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                     ((C113 * C1353 + C31012 * C1366) * C30999 +
                      (C113 * C1339 + C31012 * C1354) * C114) *
                         C103) *
                        C30924 +
                    (((C113 * C1340 + C31012 * C1355) * C114 +
                      (C113 * C1356 + C31012 * C1367) * C30999) *
                         C103 +
                     ((C113 * C1341 + C31012 * C1357) * C114 +
                      (C113 * C1358 + C31012 * C1368) * C30999) *
                         C104 +
                     ((C113 * C1342 + C31012 * C1359) * C114 +
                      (C113 * C1360 + C31012 * C1369) * C30999) *
                         C105) *
                        C3850) *
                       C2948) *
                  C30788) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C115 + C31012 * C122) * C4807 +
                     (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
                     C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                        C30766 * C30917 -
                    (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 +
                     C5402 * C4808 + (C113 * C519 + C31012 * C537) * C4803 +
                     (C113 * C507 + C31012 * C520) * C4807) *
                        C30766 * C30924 +
                    ((C113 * C508 + C31012 * C521) * C4807 +
                     (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
                     C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                        C30766 * C3850) *
                       C30875 +
                   ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 +
                     C5399 * C4804 + C5737 * C4809 + C5738 * C4805) *
                        C30766 * C30924 -
                    (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 +
                     C4935 * C4808 + C4934 * C4803 + C4933 * C4807) *
                        C30766 * C30917 -
                    (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 +
                     C5735 * C4808 + C5734 * C4803 + C5733 * C4807) *
                        C30766 * C3850) *
                       C30882 +
                   ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 +
                     C4937 * C4804 + C5591 * C4809 + C5592 * C4805) *
                        C30766 * C30917 -
                    (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 +
                     C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
                        C30766 * C30924 +
                    (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 +
                     C5739 * C4804 + (C113 * C5706 + C31012 * C5711) * C4809 +
                     (C113 * C5712 + C31012 * C5715) * C4805) *
                        C30766 * C3850) *
                       C2948) *
                  C30788) /
                     (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C31143 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30921 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C3342) *
              C31139 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C3342 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C30921) *
              C31129 +
          ((((C113 * C1758 + C31012 * C1761) * C114 +
             (C113 * C1762 + C31012 * C1767) * C30999) *
                C103 +
            ((C113 * C1759 + C31012 * C1763) * C114 +
             (C113 * C1764 + C31012 * C1768) * C30999) *
                C104 +
            ((C113 * C1760 + C31012 * C1765) * C114 +
             (C113 * C1766 + C31012 * C1769) * C30999) *
                C105) *
               C30921 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30879) *
              C31133 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C31120 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31144 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31141 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31132 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C2580 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31141 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31144 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31132 +
           (((C113 * C2470 + C31012 * C2473) * C114 +
             (C113 * C2474 + C31012 * C2479) * C30999) *
                C103 +
            ((C113 * C2471 + C31012 * C2475) * C114 +
             (C113 * C2476 + C31012 * C2480) * C30999) *
                C104 +
            ((C113 * C2472 + C31012 * C2477) * C114 +
             (C113 * C2478 + C31012 * C2481) * C30999) *
                C105) *
               C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C3342 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C31143 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C3342) *
              C31139 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C3342 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C31129 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31144 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31141 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31132 -
           (C6775 * C4805 + C6776 * C4809 + C6777 * C4804 + C6778 * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C2580 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C31141 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31144 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31132 +
           (C6778 * C4807 + C6777 * C4803 + C6776 * C4808 + C6775 * C4804 +
            (C113 * C6762 + C31012 * C6763) * C4809 +
            (C113 * C6764 + C31012 * C6765) * C4805) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30917 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30924 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30924 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C30917 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C3850) *
               C30879) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30924 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30917 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30917 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30924 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C30917 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30924 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C3850) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30924 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C30917 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C3850) *
               C30879) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30924 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C30917 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C3850) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C30917 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30924 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C2580 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30879) *
              C31133 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C31120 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C31143 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30921 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C3342) *
              C31139 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C3342 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C30921) *
              C31129 +
          ((((C113 * C1758 + C31012 * C1761) * C114 +
             (C113 * C1762 + C31012 * C1767) * C30999) *
                C103 +
            ((C113 * C1759 + C31012 * C1763) * C114 +
             (C113 * C1764 + C31012 * C1768) * C30999) *
                C104 +
            ((C113 * C1760 + C31012 * C1765) * C114 +
             (C113 * C1766 + C31012 * C1769) * C30999) *
                C105) *
               C30921 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31133 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C2580 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C31120 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C3342 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C2580 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C3342) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C31143 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C3342) *
              C31139 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C3342 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C31129 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C3342) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1468 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1469 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C1470 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C30834 * C31109) *
              C31056 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1469 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1468 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C1470 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31012 * C1475) * C114 +
             (C113 * C1476 + C31012 * C1477) * C30999) *
                C105) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31070 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C30879) *
              C695 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C30879 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31070) *
              C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31070 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C30879) *
              C697 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31012 * C700) * C114 +
             (C113 * C701 + C31012 * C702) * C30999) *
                C105) *
               C30834 * C30879 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C1880 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C1881 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31102) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C1881 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C1880 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C31102) *
               C30879) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C1881 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C1880 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31102) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C1880 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C1881 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31070 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C695 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31070) *
              C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31070 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C697 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1468 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1469 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C1470 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C31056 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1469 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1468 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C1470 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C1880 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C1881 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C31102) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C1881 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C1880 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C31102) *
               C30879) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C1881 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C1880 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C31102) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C1880 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C1881 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C31102) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31071 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C1468 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30921 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31071) *
              C1469 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31071 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C30921) *
              C1470 +
          ((((C113 * C1758 + C31012 * C1761) * C114 +
             (C113 * C1762 + C31012 * C1767) * C30999) *
                C103 +
            ((C113 * C1759 + C31012 * C1763) * C114 +
             (C113 * C1764 + C31012 * C1768) * C30999) *
                C104 +
            ((C113 * C1760 + C31012 * C1765) * C114 +
             (C113 * C1766 + C31012 * C1769) * C30999) *
                C105) *
               C30921 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30879) *
              C299 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C300 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C31070 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C31070 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C2349 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C2348 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C2350 +
           (((C113 * C2470 + C31012 * C2473) * C114 +
             (C113 * C2474 + C31012 * C2479) * C30999) *
                C103 +
            ((C113 * C2471 + C31012 * C2475) * C114 +
             (C113 * C2476 + C31012 * C2480) * C30999) *
                C104 +
            ((C113 * C2472 + C31012 * C2477) * C114 +
             (C113 * C2478 + C31012 * C2481) * C30999) *
                C105) *
               C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             (C113 * C1758 + C31012 * C1761) * C4809 +
             (C113 * C1762 + C31012 * C1767) * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30879) *
              C299 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            ((C113 * C1764 + C31012 * C1768) * C4805 +
             (C113 * C1759 + C31012 * C1763) * C4809 + C1655 * C4804 +
             C1656 * C4808 + C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C300 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C31071 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C1468 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31071) *
              C1469 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31071 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C1470 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C2348 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C2349 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C2350 -
           (C6775 * C4805 + C6776 * C4809 + C6777 * C4804 + C6778 * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C31070 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C2349 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C2348 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C2350 +
           (C6778 * C4807 + C6777 * C4803 + C6776 * C4808 + C6775 * C4804 +
            (C113 * C6762 + C31012 * C6763) * C4809 +
            (C113 * C6764 + C31012 * C6765) * C4805) *
               C30766 * C31115) *
              C30879) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31012 * C122) * C114 +
                (C113 * C123 + C31012 * C136) * C30999) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30834 * C30816 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C30834 * C30816 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                  C30816 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C30834 * C30816 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31012 * C134) * C114 +
                (C113 * C135 + C31012 * C142) * C30999) *
                   C105) *
                  C30834 * C30816 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31012 * C122) * C114 +
                 (C113 * C123 + C31012 * C136) * C30999) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30834 * C31136 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31012 * C334) * C30999 +
                 (C113 * C304 + C31012 * C317) * C114) *
                    C103) *
                   C30834 * C31124 +
               (((C113 * C305 + C31012 * C318) * C114 +
                 (C113 * C319 + C31012 * C335) * C30999) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30834 * C31099) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C30834 * C31124 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30834 * C31136 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30834 * C31099) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
                   C31136 -
               (((C113 * C328 + C31012 * C340) * C30999 +
                 (C113 * C310 + C31012 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C30834 * C31124 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31012 * C330) * C114 +
                 (C113 * C331 + C31012 * C341) * C30999) *
                    C105) *
                   C30834 * C31099) *
                  C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31137 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C30816 * C299 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 +
            (C590 + C591) * C105) *
               C31126 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31137 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31102) *
              C30816 * C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31137 -
           (((C113 * C531 + C31012 * C543) * C30999 +
             (C113 * C513 + C31012 * C532) * C114) *
                C105 +
            (C591 + C590) * C104 + C594 * C103) *
               C31126 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31137 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C1126 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31137 -
           (((C113 * C1343 + C31012 * C1361) * C30999 +
             (C113 * C1334 + C31012 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31012 * C1362) * C30999 +
             (C113 * C1335 + C31012 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31102) *
              C1127 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31137 -
           (((C113 * C1349 + C31012 * C1364) * C30999 +
             (C113 * C1337 + C31012 * C1350) * C114) *
                C105 +
            ((C113 * C1351 + C31012 * C1365) * C30999 +
             (C113 * C1338 + C31012 * C1352) * C114) *
                C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C31126 +
           (((C113 * C1340 + C31012 * C1355) * C114 +
             (C113 * C1356 + C31012 * C1367) * C30999) *
                C103 +
            ((C113 * C1341 + C31012 * C1357) * C114 +
             (C113 * C1358 + C31012 * C1368) * C30999) *
                C104 +
            ((C113 * C1342 + C31012 * C1359) * C114 +
             (C113 * C1360 + C31012 * C1369) * C30999) *
                C105) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C30816 * C31133 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C1881 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C1880 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31102) *
              C30816 * C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) * C1881 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C31136 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C1881 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C1880 -
           (((C113 * C1343 + C31012 * C1361) * C30999 +
             (C113 * C1334 + C31012 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31012 * C1362) * C30999 +
             (C113 * C1335 + C31012 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31102) *
              C31124 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C1880 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C1881 +
           (((C113 * C1340 + C31012 * C1355) * C114 +
             (C113 * C1356 + C31012 * C1367) * C30999) *
                C103 +
            ((C113 * C1341 + C31012 * C1357) * C114 +
             (C113 * C1358 + C31012 * C1368) * C30999) *
                C104 +
            ((C113 * C1342 + C31012 * C1359) * C114 +
             (C113 * C1360 + C31012 * C1369) * C30999) *
                C105) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C2055 -
          (C594 * C105 + (C584 + C585) * C104 +
           ((C113 * C519 + C31012 * C537) * C30999 +
            (C113 * C507 + C31012 * C520) * C114) *
               C103) *
              C2056 +
          (((C113 * C508 + C31012 * C521) * C114 +
            (C113 * C522 + C31012 * C538) * C30999) *
               C103 +
           (C586 + C587) * C104 + C595 * C105) *
              C2057 -
          (((C113 * C2066 + C31012 * C2078) * C30999 +
            (C113 * C2060 + C31012 * C2067) * C114) *
               C105 +
           ((C113 * C2068 + C31012 * C2079) * C30999 +
            (C113 * C2061 + C31012 * C2069) * C114) *
               C104 +
           ((C113 * C2070 + C31012 * C2080) * C30999 +
            (C113 * C2062 + C31012 * C2071) * C114) *
               C103) *
              C2058 +
          (((C113 * C2063 + C31012 * C2072) * C114 +
            (C113 * C2073 + C31012 * C2081) * C30999) *
               C103 +
           ((C113 * C2064 + C31012 * C2074) * C114 +
            (C113 * C2075 + C31012 * C2082) * C30999) *
               C104 +
           ((C113 * C2065 + C31012 * C2076) * C114 +
            (C113 * C2077 + C31012 * C2083) * C30999) *
               C105) *
              C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 +
            (C113 * C1336 + C31012 * C1348) * C4808 +
            (C113 * C1347 + C31012 * C1363) * C4804 +
            (C113 * C1340 + C31012 * C1355) * C4809 +
            (C113 * C1356 + C31012 * C1367) * C4805) *
               C30766 * C31102) *
              C30816 * C299 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C31126 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31137 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31137 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C31126 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C1126 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C31126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31137 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C1127 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31137 -
           ((C113 * C5709 + C31012 * C5714) * C4805 +
            (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
            C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
               C30766 * C31126 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C30816 * C31133 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C1881 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C1880 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C1880 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C1881 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C31136 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C1881 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C1880 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C31124 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C1880 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C1881 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C2055 -
          (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
           (C113 * C519 + C31012 * C537) * C4803 +
           (C113 * C507 + C31012 * C520) * C4807) *
              C30766 * C2056 +
          ((C113 * C508 + C31012 * C521) * C4807 +
           (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
           C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
              C30766 * C2057 -
          ((C113 * C6397 + C31012 * C6403) * C4805 +
           (C113 * C6394 + C31012 * C6398) * C4809 +
           (C113 * C2474 + C31012 * C2479) * C4804 +
           (C113 * C2470 + C31012 * C2473) * C4808 +
           (C113 * C2070 + C31012 * C2080) * C4803 +
           (C113 * C2062 + C31012 * C2071) * C4807) *
              C30766 * C2058 +
          ((C113 * C2063 + C31012 * C2072) * C4807 +
           (C113 * C2073 + C31012 * C2081) * C4803 +
           (C113 * C6395 + C31012 * C6399) * C4808 +
           (C113 * C6400 + C31012 * C6404) * C4804 +
           (C113 * C6396 + C31012 * C6401) * C4809 +
           (C113 * C6402 + C31012 * C6405) * C4805) *
              C30766 * C2059) *
         C30816 * C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C1126 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C1127 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31071 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C31099) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C1126 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C1127 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31071 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C30816 * C695 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30921 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31071) *
              C30816 * C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30921) *
              C30816 * C697 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31012 * C813) * C114 +
             (C113 * C814 + C31012 * C815) * C30999) *
                C105) *
               C30921 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C30816 * C31056 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C2349 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C2348 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C2350 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31012 * C2353) * C114 +
             (C113 * C2354 + C31012 * C2355) * C30999) *
                C105) *
               C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C695 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31071) *
              C30816 * C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31071 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C697 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C1126 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C1127 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C31071 -
            ((C113 * C5709 + C31012 * C5714) * C4805 +
             (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
             C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C1126 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C1127 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C2348 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C2349 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C2350 -
           ((C113 * C6397 + C31012 * C6403) * C4805 +
            (C113 * C6394 + C31012 * C6398) * C4809 +
            (C113 * C2474 + C31012 * C2479) * C4804 +
            (C113 * C2470 + C31012 * C2473) * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C30816 * C31056 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C2349 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C2348 -
           (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
            C575 * C4803 + C574 * C4807) *
               C30766 * C2350 +
           (C2368 * C4807 + C2367 * C4803 +
            (C113 * C2471 + C31012 * C2475) * C4808 +
            (C113 * C2476 + C31012 * C2480) * C4804 +
            (C113 * C6660 + C31012 * C6661) * C4809 +
            (C113 * C6662 + C31012 * C6663) * C4805) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31136 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31124 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30834 * C31124 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31136 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31136 -
           (((C113 * C328 + C31012 * C340) * C30999 +
             (C113 * C310 + C31012 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30834 * C31124 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C30816 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30834 *
              C30816 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C30816 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30834 *
              C30816 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31012 * C134) * C114 +
            (C113 * C135 + C31012 * C142) * C30999) *
               C105) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C30816 * C31133 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C1881 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C1880 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31102) *
              C30816 * C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) * C1881 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C31136 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C1881 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C1880 -
           (((C113 * C1343 + C31012 * C1361) * C30999 +
             (C113 * C1334 + C31012 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31012 * C1362) * C30999 +
             (C113 * C1335 + C31012 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31102) *
              C31124 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C1880 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C1881 +
           (((C113 * C1340 + C31012 * C1355) * C114 +
             (C113 * C1356 + C31012 * C1367) * C30999) *
                C103 +
            ((C113 * C1341 + C31012 * C1357) * C114 +
             (C113 * C1358 + C31012 * C1368) * C30999) *
                C104 +
            ((C113 * C1342 + C31012 * C1359) * C114 +
             (C113 * C1360 + C31012 * C1369) * C30999) *
                C105) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C30816 * C31133 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C1881 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C1880 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C1880 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C1881 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C1880 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C1881 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C31136 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C1881 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C1880 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C31124 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C1880 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C1881 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C30879) *
              C30793 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C30802 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C31070 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C30879) *
              C30793 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C30802 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C3342 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C3342) *
               C30879) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30917 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30924 +
            (((C113 * C508 + C31012 * C521) * C114 +
              (C113 * C522 + C31012 * C538) * C30999) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30924 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C30917 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31012 * C1363) * C30999 +
              (C113 * C1336 + C31012 * C1348) * C114) *
                 C103) *
                C3850) *
               C30879) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30924 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30917 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30917 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30924 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31012 * C2231) * C114 +
              (C113 * C2232 + C31012 * C2233) * C30999) *
                 C105) *
                C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C30917 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30924 +
            ((C113 * C508 + C31012 * C521) * C4807 +
             (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
             C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
                C30766 * C3850) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30924 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C30917 -
            (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
             C5734 * C4803 + C5733 * C4807) *
                C30766 * C3850) *
               C30879) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30924 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C30917 -
            (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
             C575 * C4803 + C574 * C4807) *
                C30766 * C3850) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C30917 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30924 +
            (C2246 * C4807 + C2245 * C4803 + C6562 * C4808 + C6561 * C4804 +
             (C113 * C6552 + C31012 * C6553) * C4809 +
             (C113 * C6554 + C31012 * C6555) * C4805) *
                C30766 * C3850) *
               C30879) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31136 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C31124 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C31099) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31136 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C31124 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C30816 * C31142 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30921 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C3342) *
              C30816 * C31135 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30921) *
              C30816 * C31122 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31012 * C813) * C114 +
             (C113 * C814 + C31012 * C815) * C30999) *
                C105) *
               C30921 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31144 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31141 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31132 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31012 * C2080) * C30999 +
             (C113 * C2062 + C31012 * C2071) * C114) *
                C103) *
               C31115) *
              C30816 * C2688 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C31141 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31144 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31132 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31012 * C2353) * C114 +
             (C113 * C2354 + C31012 * C2355) * C30999) *
                C105) *
               C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C31142 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C3342) *
              C30816 * C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C3342 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C31122 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31136 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C31124 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C3342 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C31136 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C31124 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31144 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31141 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31132 -
           (C6775 * C4805 + C6776 * C4809 + C6777 * C4804 + C6778 * C4808 +
            (C113 * C2070 + C31012 * C2080) * C4803 +
            (C113 * C2062 + C31012 * C2071) * C4807) *
               C30766 * C31115) *
              C30816 * C2688 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C31141 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31144 -
           (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
            C575 * C4803 + C574 * C4807) *
               C30766 * C31132 +
           (C2368 * C4807 + C2367 * C4803 +
            (C113 * C2471 + C31012 * C2475) * C4808 +
            (C113 * C2476 + C31012 * C2480) * C4804 +
            (C113 * C6660 + C31012 * C6661) * C4809 +
            (C113 * C6662 + C31012 * C6663) * C4805) *
               C30766 * C31115) *
              C30816 * C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30917 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30924 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C3850) *
              C30816 * C30793 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30924 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30917 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C3850) *
              C30816 * C30802 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30917 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30924 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C3850) *
              C30816 * C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30917 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30924 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C3850) *
              C30816 * C30793 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30924 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30917 -
           (C6561 * C4805 + C6562 * C4809 + C2245 * C4804 + C2246 * C4808 +
            C575 * C4803 + C574 * C4807) *
               C30766 * C3850) *
              C30816 * C30802 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30917 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30924 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C3850) *
              C30816 * C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C30816 * C31142 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30921 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C3342) *
              C30816 * C31135 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30921) *
              C30816 * C31122 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31012 * C813) * C114 +
             (C113 * C814 + C31012 * C815) * C30999) *
                C105) *
               C30921 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31136 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C3342) *
               C31124 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C31099) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31136 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C31124 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C3342 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C31142 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C3342) *
              C30816 * C31135 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C3342 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C31122 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C3342) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C3342 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31136 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C3342) *
               C31124 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C3342 -
            (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
             C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C2688 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C3342) *
               C31136 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C3342 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C31124 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C3342) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31070 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C30879) *
              C695 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C30879 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31070) *
              C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31070 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C30879) *
              C697 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31012 * C700) * C114 +
             (C113 * C701 + C31012 * C702) * C30999) *
                C105) *
               C30834 * C30879 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1468 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1469 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C1470 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C30834 * C31109) *
              C31056 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1469 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1468 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C1470 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31012 * C1475) * C114 +
             (C113 * C1476 + C31012 * C1477) * C30999) *
                C105) *
               C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31070 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C30879) *
              C695 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C30879 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31070) *
              C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31070 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C30879) *
              C697 +
          ((C375 * C4807 + C376 * C4803 + C378 * C4808 + C377 * C4804 +
            (C113 * C1474 + C31012 * C1475) * C4809 +
            (C113 * C1476 + C31012 * C1477) * C4805) *
               C30766 * C30834 * C30879 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C30834 * C31070) *
              C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1468 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1469 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C30834 * C1470 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C30834 * C31109) *
              C31056 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1469 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1468 -
           (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
            C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C1470 +
           (C1490 * C4807 + C1489 * C4803 + C5848 * C4808 + C5847 * C4804 +
            (C113 * C5838 + C31012 * C5839) * C4809 +
            (C113 * C5840 + C31012 * C5841) * C4805) *
               C30766 * C30834 * C31109) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C31070 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C30879) *
              C299 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C31070 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C30879) *
              C300 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30921) *
               C31070 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31012 * C984) * C114 +
              (C113 * C985 + C31012 * C990) * C30999) *
                 C105) *
                C30921 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31071 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C1468 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30921 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31071) *
              C1469 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31071 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C30921) *
              C1470 +
          ((((C113 * C1758 + C31012 * C1761) * C114 +
             (C113 * C1762 + C31012 * C1767) * C30999) *
                C103 +
            ((C113 * C1759 + C31012 * C1763) * C114 +
             (C113 * C1764 + C31012 * C1768) * C30999) *
                C104 +
            ((C113 * C1760 + C31012 * C1765) * C114 +
             (C113 * C1766 + C31012 * C1769) * C30999) *
                C105) *
               C30921 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31012 * C1220) * C30999 +
             (C113 * C1202 + C31012 * C1211) * C114) *
                C103) *
               C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             (C113 * C1758 + C31012 * C1761) * C4809 +
             (C113 * C1762 + C31012 * C1767) * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C30879) *
              C299 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C31070 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            ((C113 * C1764 + C31012 * C1768) * C4805 +
             (C113 * C1759 + C31012 * C1763) * C4809 + C1655 * C4804 +
             C1656 * C4808 + C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C30879) *
              C300 +
          (((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
             C373 * C4809 + C374 * C4805) *
                C30766 * C31071 -
            (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
             C570 * C4803 + C571 * C4807) *
                C30766 * C30921) *
               C31070 +
           ((C1006 * C4807 + C1007 * C4803 + C1654 * C4808 + C1653 * C4804 +
             (C113 * C1760 + C31012 * C1765) * C4809 +
             (C113 * C1766 + C31012 * C1769) * C4805) *
                C30766 * C30921 -
            (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
             C367 * C4803 + C368 * C4807) *
                C30766 * C31071) *
               C30879) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C1468 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C30921 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31071) *
              C1469 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31071 -
           (C6111 * C4805 + C6112 * C4809 + C5738 * C4804 + C5737 * C4808 +
            C5399 * C4803 + C5400 * C4807) *
               C30766 * C30921) *
              C1470 +
          ((C5737 * C4807 + C5738 * C4803 + C6112 * C4808 + C6111 * C4804 +
            (C113 * C6102 + C31012 * C6103) * C4809 +
            (C113 * C6104 + C31012 * C6105) * C4805) *
               C30766 * C30921 -
           (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
            C4937 * C4803 + C4938 * C4807) *
               C30766 * C31071) *
              C31109) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31136 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31124 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30834 * C31124 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31136 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31136 -
           (((C113 * C328 + C31012 * C340) * C30999 +
             (C113 * C310 + C31012 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30834 * C31124 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C30816 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30834 *
              C30816 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C30816 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30834 *
              C30816 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31012 * C134) * C114 +
            (C113 * C135 + C31012 * C142) * C30999) *
               C105) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31137 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C30816 * C299 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 +
            (C590 + C591) * C105) *
               C31126 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31137 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31102) *
              C30816 * C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31137 -
           (((C113 * C531 + C31012 * C543) * C30999 +
             (C113 * C513 + C31012 * C532) * C114) *
                C105 +
            (C591 + C590) * C104 + C594 * C103) *
               C31126 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31012 * C533) * C114 +
             (C113 * C534 + C31012 * C544) * C30999) *
                C105) *
               C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31137 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C31126 +
           (((C113 * C508 + C31012 * C521) * C114 +
             (C113 * C522 + C31012 * C538) * C30999) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31102) *
              C1126 +
          ((((C113 * C971 + C31012 * C976) * C114 +
             (C113 * C977 + C31012 * C986) * C30999) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C31137 -
           (((C113 * C1343 + C31012 * C1361) * C30999 +
             (C113 * C1334 + C31012 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31012 * C1362) * C30999 +
             (C113 * C1335 + C31012 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31012 * C1363) * C30999 +
             (C113 * C1336 + C31012 * C1348) * C114) *
                C103) *
               C31102) *
              C1127 +
          ((((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31137 -
           (((C113 * C1349 + C31012 * C1364) * C30999 +
             (C113 * C1337 + C31012 * C1350) * C114) *
                C105 +
            ((C113 * C1351 + C31012 * C1365) * C30999 +
             (C113 * C1338 + C31012 * C1352) * C114) *
                C104 +
            ((C113 * C1353 + C31012 * C1366) * C30999 +
             (C113 * C1339 + C31012 * C1354) * C114) *
                C103) *
               C31126 +
           (((C113 * C1340 + C31012 * C1355) * C114 +
             (C113 * C1356 + C31012 * C1367) * C30999) *
                C103 +
            ((C113 * C1341 + C31012 * C1357) * C114 +
             (C113 * C1358 + C31012 * C1368) * C30999) *
                C104 +
            ((C113 * C1342 + C31012 * C1359) * C114 +
             (C113 * C1360 + C31012 * C1369) * C30999) *
                C105) *
               C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 +
            (C113 * C1336 + C31012 * C1348) * C4808 +
            (C113 * C1347 + C31012 * C1363) * C4804 +
            (C113 * C1340 + C31012 * C1355) * C4809 +
            (C113 * C1356 + C31012 * C1367) * C4805) *
               C30766 * C31102) *
              C30816 * C299 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C31126 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31137 -
           ((C113 * C1358 + C31012 * C1368) * C4805 +
            (C113 * C1341 + C31012 * C1357) * C4809 + C2245 * C4804 +
            C2246 * C4808 + C575 * C4803 + C574 * C4807) *
               C30766 * C31102) *
              C30816 * C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31137 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C31126 +
           (C576 * C4807 + C577 * C4803 + C2244 * C4808 + C2243 * C4804 +
            (C113 * C1342 + C31012 * C1359) * C4809 +
            (C113 * C1360 + C31012 * C1369) * C4805) *
               C30766 * C31102) *
              C30816 * C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31137 -
           (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C31126 +
           ((C113 * C508 + C31012 * C521) * C4807 +
            (C113 * C522 + C31012 * C538) * C4803 + C5733 * C4808 +
            C5734 * C4804 + C5735 * C4809 + C5736 * C4805) *
               C30766 * C31102) *
              C1126 +
          ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
            C5737 * C4809 + C5738 * C4805) *
               C30766 * C31126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C31137 -
           (C5739 * C4805 + C5740 * C4809 + C5736 * C4804 + C5735 * C4808 +
            C5734 * C4803 + C5733 * C4807) *
               C30766 * C31102) *
              C1127 +
          ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            C5591 * C4809 + C5592 * C4805) *
               C30766 * C31137 -
           ((C113 * C5709 + C31012 * C5714) * C4805 +
            (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
            C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
               C30766 * C31126 +
           (C5735 * C4807 + C5736 * C4803 + C5740 * C4808 + C5739 * C4804 +
            (C113 * C5706 + C31012 * C5711) * C4809 +
            (C113 * C5712 + C31012 * C5715) * C4805) *
               C30766 * C31102) *
              C31099) *
         C30788) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31071 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31012 * C537) * C30999 +
             (C113 * C507 + C31012 * C520) * C114) *
                C103) *
               C30921) *
              C30816 * C695 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30921 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31071) *
              C30816 * C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31071 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30921) *
              C30816 * C697 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31012 * C813) * C114 +
             (C113 * C814 + C31012 * C815) * C30999) *
                C105) *
               C30921 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31012 * C122) * C114 +
              (C113 * C123 + C31012 * C136) * C30999) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31071 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31012 * C537) * C30999 +
              (C113 * C507 + C31012 * C520) * C114) *
                 C103) *
                C30921) *
               C1126 +
           ((((C113 * C971 + C31012 * C976) * C114 +
              (C113 * C977 + C31012 * C986) * C30999) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30921 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31012 * C334) * C30999 +
              (C113 * C304 + C31012 * C317) * C114) *
                 C103) *
                C31071) *
               C1127 +
           ((((C113 * C305 + C31012 * C318) * C114 +
              (C113 * C319 + C31012 * C335) * C30999) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31071 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31012 * C1366) * C30999 +
              (C113 * C1339 + C31012 * C1354) * C114) *
                 C103) *
                C30921) *
               C31099) *
              C31056 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30921 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31071) *
               C1126 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31071 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30921) *
               C1127 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31012 * C1641) * C114 +
              (C113 * C1642 + C31012 * C1643) * C30999) *
                 C105) *
                C30921 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C31071 -
           ((C113 * C1353 + C31012 * C1366) * C4805 +
            (C113 * C1339 + C31012 * C1354) * C4809 +
            (C113 * C977 + C31012 * C986) * C4804 +
            (C113 * C971 + C31012 * C976) * C4808 +
            (C113 * C519 + C31012 * C537) * C4803 +
            (C113 * C507 + C31012 * C520) * C4807) *
               C30766 * C30921) *
              C30816 * C695 +
          ((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
            C1656 * C4809 + C1655 * C4805) *
               C30766 * C30921 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C31071) *
              C30816 * C696 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C31071 -
           (C1653 * C4805 + C1654 * C4809 + C1007 * C4804 + C1006 * C4808 +
            C570 * C4803 + C571 * C4807) *
               C30766 * C30921) *
              C30816 * C697 +
          ((C578 * C4807 + C579 * C4803 + C1009 * C4808 + C1008 * C4804 +
            (C113 * C1640 + C31012 * C1641) * C4809 +
            (C113 * C1642 + C31012 * C1643) * C4805) *
               C30766 * C30921 -
           (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
            C168 * C4803 + C169 * C4807) *
               C30766 * C31071) *
              C30816 * C31103)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C4807 +
             (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
             C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
                C30766 * C31071 -
            (C5399 * C4805 + C5400 * C4809 + C5401 * C4804 + C5402 * C4808 +
             (C113 * C519 + C31012 * C537) * C4803 +
             (C113 * C507 + C31012 * C520) * C4807) *
                C30766 * C30921) *
               C1126 +
           ((C5402 * C4807 + C5401 * C4803 + C5400 * C4808 + C5399 * C4804 +
             C5737 * C4809 + C5738 * C4805) *
                C30766 * C30921 -
            (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
             C4934 * C4803 + C4933 * C4807) *
                C30766 * C31071) *
               C1127 +
           ((C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
             C5591 * C4809 + C5592 * C4805) *
                C30766 * C31071 -
            ((C113 * C5709 + C31012 * C5714) * C4805 +
             (C113 * C5705 + C31012 * C5710) * C4809 + C5738 * C4804 +
             C5737 * C4808 + C5399 * C4803 + C5400 * C4807) *
                C30766 * C30921) *
               C31099) *
              C31056 +
          (((C573 * C4807 + C572 * C4803 + C1004 * C4808 + C1005 * C4804 +
             C1656 * C4809 + C1655 * C4805) *
                C30766 * C30921 -
            (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
             C165 * C4803 + C164 * C4807) *
                C30766 * C31071) *
               C1126 +
           ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
             C1490 * C4809 + C1489 * C4805) *
                C30766 * C31071 -
            (C6003 * C4805 + C6004 * C4809 + C1655 * C4804 + C1656 * C4808 +
             C1005 * C4803 + C1004 * C4807) *
                C30766 * C30921) *
               C1127 +
           ((C1656 * C4807 + C1655 * C4803 + C6004 * C4808 + C6003 * C4804 +
             (C113 * C5994 + C31012 * C5995) * C4809 +
             (C113 * C5996 + C31012 * C5997) * C4805) *
                C30766 * C30921 -
            (C5847 * C4805 + C5848 * C4809 + C1489 * C4804 + C1490 * C4808 +
             C372 * C4803 + C371 * C4807) *
                C30766 * C31071) *
               C31099) *
              C30799)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C30816 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30834 *
              C30816 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C30816 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30834 *
              C30816 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31012 * C134) * C114 +
            (C113 * C135 + C31012 * C142) * C30999) *
               C105) *
              C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C31136 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C31124 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30834 * C31124 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C31136 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 *
               C31136 -
           (((C113 * C328 + C31012 * C340) * C30999 +
             (C113 * C310 + C31012 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30834 * C31124 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31012 * C122) * C114 +
             (C113 * C123 + C31012 * C136) * C30999) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30834 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31012 * C334) * C30999 +
             (C113 * C304 + C31012 * C317) * C114) *
                C103) *
               C30834 * C1127 +
           (((C113 * C305 + C31012 * C318) * C114 +
             (C113 * C319 + C31012 * C335) * C30999) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30834 * C31099) *
              C31133 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30834 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30834 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30834 * C31099) *
              C31120 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30834 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30834 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31012 * C330) * C114 +
             (C113 * C331 + C31012 * C341) * C30999) *
                C105) *
               C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C114 +
            (C113 * C123 + C31012 * C136) * C30999) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30834 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31012 * C334) * C30999 +
            (C113 * C304 + C31012 * C317) * C114) *
               C103) *
              C30834 * C1195 +
          (((C113 * C305 + C31012 * C318) * C114 +
            (C113 * C319 + C31012 * C335) * C30999) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30834 * C1196 -
          (((C113 * C1206 + C31012 * C1218) * C30999 +
            (C113 * C1200 + C31012 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31012 * C1219) * C30999 +
            (C113 * C1201 + C31012 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31012 * C1220) * C30999 +
            (C113 * C1202 + C31012 * C1211) * C114) *
               C103) *
              C30834 * C1197 +
          (((C113 * C1203 + C31012 * C1212) * C114 +
            (C113 * C1213 + C31012 * C1221) * C30999) *
               C103 +
           ((C113 * C1204 + C31012 * C1214) * C114 +
            (C113 * C1215 + C31012 * C1222) * C30999) *
               C104 +
           ((C113 * C1205 + C31012 * C1216) * C114 +
            (C113 * C1217 + C31012 * C1223) * C30999) *
               C105) *
              C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 +
           (C113 * C304 + C31012 * C317) * C4808 +
           (C113 * C316 + C31012 * C334) * C4804 +
           (C113 * C305 + C31012 * C318) * C4809 +
           (C113 * C319 + C31012 * C335) * C4805) *
              C30766 * C30834 * C30816 * C108 -
          (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
           C165 * C4803 + C164 * C4807) *
              C30766 * C30834 * C30816 * C109 +
          (C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
           C373 * C4809 + C374 * C4805) *
              C30766 * C30834 * C30816 * C110 -
          (C377 * C4805 + C378 * C4809 + C376 * C4804 + C375 * C4808 +
           C168 * C4803 + C169 * C4807) *
              C30766 * C30834 * C30816 * C111 +
          (C170 * C4807 + C171 * C4803 + C710 * C4808 + C709 * C4804 +
           (C113 * C311 + C31012 * C330) * C4809 +
           (C113 * C331 + C31012 * C341) * C4805) *
              C30766 * C30834 * C30816 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C31136 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C31124 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C299 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C31124 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C31136 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C300 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C31136 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C31124 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31012 * C122) * C4807 +
            (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
            C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
               C30766 * C30834 * C1126 -
           (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
            C4934 * C4803 + C4933 * C4807) *
               C30766 * C30834 * C1127 +
           (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
            (C113 * C1203 + C31012 * C1212) * C4809 +
            (C113 * C1213 + C31012 * C1221) * C4805) *
               C30766 * C30834 * C31099) *
              C31133 +
          ((C370 * C4807 + C369 * C4803 + C371 * C4808 + C372 * C4804 +
            C1490 * C4809 + C1489 * C4805) *
               C30766 * C30834 * C1127 -
           (C372 * C4805 + C371 * C4809 + C369 * C4804 + C370 * C4808 +
            C165 * C4803 + C164 * C4807) *
               C30766 * C30834 * C1126 -
           ((C113 * C1215 + C31012 * C1222) * C4805 +
            (C113 * C1204 + C31012 * C1214) * C4809 + C1489 * C4804 +
            C1490 * C4808 + C372 * C4803 + C371 * C4807) *
               C30766 * C30834 * C31099) *
              C31120 +
          ((C166 * C4807 + C167 * C4803 + C368 * C4808 + C367 * C4804 +
            C373 * C4809 + C374 * C4805) *
               C30766 * C30834 * C1126 -
           (C1487 * C4805 + C1488 * C4809 + C374 * C4804 + C373 * C4808 +
            C367 * C4803 + C368 * C4807) *
               C30766 * C30834 * C1127 +
           (C373 * C4807 + C374 * C4803 + C1488 * C4808 + C1487 * C4804 +
            (C113 * C1205 + C31012 * C1216) * C4809 +
            (C113 * C1217 + C31012 * C1223) * C4805) *
               C30766 * C30834 * C31099) *
              C31093)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31012 * C122) * C4807 +
           (C113 * C123 + C31012 * C136) * C4803 + C4933 * C4808 +
           C4934 * C4804 + C4935 * C4809 + C4936 * C4805) *
              C30766 * C30834 * C1194 -
          (C4937 * C4805 + C4938 * C4809 + C4936 * C4804 + C4935 * C4808 +
           C4934 * C4803 + C4933 * C4807) *
              C30766 * C30834 * C1195 +
          (C4935 * C4807 + C4936 * C4803 + C4938 * C4808 + C4937 * C4804 +
           C5591 * C4809 + C5592 * C4805) *
              C30766 * C30834 * C1196 -
          (C5593 * C4805 + C5594 * C4809 + C5592 * C4804 + C5591 * C4808 +
           C4937 * C4803 + C4938 * C4807) *
              C30766 * C30834 * C1197 +
          (C5591 * C4807 + C5592 * C4803 + C5594 * C4808 + C5593 * C4804 +
           (C113 * C5575 + C31012 * C5578) * C4809 +
           (C113 * C5579 + C31012 * C5581) * C4805) *
              C30766 * C30834 * C1198) *
         C30788) /
            (p * q * std::sqrt(p + q));
}
