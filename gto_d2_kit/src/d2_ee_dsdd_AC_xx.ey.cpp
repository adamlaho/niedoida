/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dsdd_AC_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2022_13_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30368 = ae * be;
    const double C30367 = 0 * be;
    const double C30366 = xA - xB;
    const double C30365 = ae + be;
    const double C30398 = 0 * ce;
    const double C30397 = ce * de;
    const double C30396 = 0 * de;
    const double C30395 = 0 * de;
    const double C30394 = ce + de;
    const double C30393 = 0 * de;
    const double C30392 = xC - xD;
    const double C30453 = 0 * de;
    const double C30517 = p + q;
    const double C30516 = p * q;
    const double C30522 = xP - xQ;
    const double C30521 = bs[2];
    const double C30531 = ae * ce;
    const double C30527 = bs[3];
    const double C30540 = bs[4];
    const double C30561 = bs[5];
    const double C30603 = bs[6];
    const double C30672 = bs[7];
    const double C30753 = yP - yQ;
    const double C30802 = zP - zQ;
    const double C121 = bs[0];
    const double C31363 = yC - yD;
    const double C31375 = zC - zD;
    const double C31543 = yA - yB;
    const double C31555 = zA - zB;
    const double C30370 = C30368 * C30366;
    const double C31310 = std::pow(C30366, 2);
    const double C31618 = C30366 * be;
    const double C30369 = 2 * C30365;
    const double C31619 = std::pow(C30365, 2);
    const double C30405 = C30398 / C30394;
    const double C30402 = C30396 / C30394;
    const double C30400 = 2 * C30394;
    const double C30399 = std::pow(C30394, 2);
    const double C30523 = C30394 * C30365;
    const double C30404 = C30397 * C30392;
    const double C30403 = C30392 * C30396;
    const double C30401 = C30392 * C30395;
    const double C31323 = C30392 * de;
    const double C31322 = C30392 * ce;
    const double C31321 = std::pow(C30392, 2);
    const double C30454 = C30453 / C30394;
    const double C30518 = 2 * C30516;
    const double C30532 = C30522 * ae;
    const double C30530 = std::pow(C30522, 2);
    const double C30528 = C30522 * ce;
    const double C30774 = std::pow(C30753, 2);
    const double C30823 = std::pow(C30802, 2);
    const double C31364 = std::pow(C31363, 2);
    const double C31419 = C31363 * de;
    const double C31417 = C31363 * ce;
    const double C31376 = std::pow(C31375, 2);
    const double C31459 = C31375 * de;
    const double C31457 = C31375 * ce;
    const double C31544 = std::pow(C31543, 2);
    const double C31652 = C31543 * be;
    const double C31556 = std::pow(C31555, 2);
    const double C31653 = C31555 * be;
    const double C31311 = C31310 * C30368;
    const double C31621 = std::pow(C30369, -2);
    const double C31620 = std::pow(C30369, -1);
    const double C31335 = std::pow(C30400, -1);
    const double C31629 = std::pow(C30400, -2);
    const double C30406 = 2 * C30399;
    const double C31633 = C30399 * C30400;
    const double C31632 = 4 * C30399;
    const double C30408 = C30403 / C30394;
    const double C30407 = C30401 / C30394;
    const double C31622 = std::pow(C31322, 2);
    const double C31324 = C31321 * C30397;
    const double C30520 = C30518 / C30517;
    const double C142 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C30518 / C30517, 2) -
            (bs[1] * C30518) / C30517) *
           ae * ce) /
         C30394) /
        C30365;
    const double C122 = -(C30522 * bs[1] * C30518) / C30517;
    const double C271 = -(C30753 * bs[1] * C30518) / C30517;
    const double C424 = -(C30802 * bs[1] * C30518) / C30517;
    const double C30535 = C30527 * C30532;
    const double C30546 = C30540 * C30532;
    const double C30570 = C30561 * C30532;
    const double C30618 = C30603 * C30532;
    const double C30693 = C30672 * C30532;
    const double C128 = (-(bs[1] * C30532 * C30518) / C30517) / C30365;
    const double C30542 = C30530 * C30540;
    const double C30565 = C30530 * C30561;
    const double C30612 = C30530 * C30603;
    const double C30686 = C30530 * C30672;
    const double C30534 = C30527 * C30528;
    const double C30543 = C30540 * C30528;
    const double C30566 = C30561 * C30528;
    const double C30614 = C30603 * C30528;
    const double C30689 = C30672 * C30528;
    const double C131 = (bs[1] * C30528 * C30518) / (C30517 * C30394);
    const double C31365 = C31364 * C30397;
    const double C31634 = std::pow(C31417, 2);
    const double C31377 = C31376 * C30397;
    const double C31636 = std::pow(C31457, 2);
    const double C31545 = C31544 * C30368;
    const double C31557 = C31556 * C30368;
    const double C31312 = C31311 / C30365;
    const double C30415 = C30396 / C30406;
    const double C30412 = C30395 / C30406;
    const double C30411 = C30393 / C30406;
    const double C31664 = 4 * C31633;
    const double C31663 = C30394 * C31632;
    const double C30413 = 0 - C30408;
    const double C30410 = 0 - C30407;
    const double C31325 = C31324 / C30394;
    const double C30524 = std::pow(C30520, 2);
    const double C30526 = -C30520;
    const double C30541 = std::pow(C30520, 4);
    const double C30604 = std::pow(C30520, 6);
    const double C31366 = C31365 / C30394;
    const double C31378 = C31377 / C30394;
    const double C31546 = C31545 / C30365;
    const double C31558 = C31557 / C30365;
    const double C31313 = -C31312;
    const double C30418 = C30413 * ce;
    const double C30417 = C30410 * ce;
    const double C31326 = -C31325;
    const double C30529 = C30521 * C30524;
    const double C143 =
        (-(C30524 * C30521 * C30522 * ae * ce) / C30394) / C30365 -
        (ae * C30524 * C30521 * C30522 * ce) / C30523 -
        (C30522 *
         (C30521 * C30524 +
          std::pow(C30522, 2) * bs[3] * std::pow(-C30520, 3)) *
         ae * ce) /
            C30523;
    const double C129 = (C30522 * C30524 * C30521 * C30532) / C30365 -
                        (ae * bs[1] * C30518) / (C30517 * C30365);
    const double C132 = (ce * bs[1] * C30518) / (C30517 * C30394) -
                        (C30522 * C30524 * C30521 * C30528) / C30394;
    const double C283 = -(C30753 * C30524 * C30521 * C30528) / C30394;
    const double C284 = (C30753 * C30524 * C30521 * C30532) / C30365;
    const double C436 = -(C30802 * C30524 * C30521 * C30528) / C30394;
    const double C437 = (C30802 * C30524 * C30521 * C30532) / C30365;
    const double C30533 = std::pow(C30526, 3);
    const double C30562 = std::pow(C30526, 5);
    const double C30673 = std::pow(C30526, 7);
    const double C30550 = C30541 * C30546;
    const double C30549 = C30541 * C30543;
    const double C30548 = C30542 * C30541;
    const double C30560 = C30540 * C30541;
    const double C30626 = C30604 * C30618;
    const double C30623 = C30604 * C30614;
    const double C30622 = C30612 * C30604;
    const double C30671 = C30603 * C30604;
    const double C31367 = -C31366;
    const double C31379 = -C31378;
    const double C31547 = -C31546;
    const double C31559 = -C31558;
    const double C31314 = std::exp(C31313);
    const double C30422 = C30418 / C30394;
    const double C30421 = C30417 / C30394;
    const double C31327 = std::exp(C31326);
    const double C123 = C30529 * C30530 - (bs[1] * C30518) / C30517;
    const double C268 = C30753 * C30522 * C30529;
    const double C273 = C30529 * C30774 - (bs[1] * C30518) / C30517;
    const double C421 = C30802 * C30522 * C30529;
    const double C426 = C30529 * C30823 - (bs[1] * C30518) / C30517;
    const double C823 = C30802 * C30753 * C30529;
    const double C30537 = C30533 * C30535;
    const double C30536 = C30533 * C30534;
    const double C30539 = C30527 * C30533;
    const double C300 =
        (-(C30753 * (C30529 + C30530 * C30527 * C30533) * C30531) / C30394) /
        C30365;
    const double C453 =
        (-(C30802 * (C30529 + C30530 * C30527 * C30533) * C30531) / C30394) /
        C30365;
    const double C30577 = C30562 * C30570;
    const double C30574 = C30562 * C30566;
    const double C30573 = C30565 * C30562;
    const double C30602 = C30561 * C30562;
    const double C30702 = C30673 * C30693;
    const double C30699 = C30673 * C30689;
    const double C30698 = C30686 * C30673;
    const double C30553 = C30522 * C30550;
    const double C30558 = C30550 * ce;
    const double C31112 = C30753 * C30550;
    const double C30552 = C30522 * C30549;
    const double C30559 = ae * C30549;
    const double C31118 = C30753 * C30549;
    const double C30571 = C30560 * ae;
    const double C30569 = C30560 * C30530;
    const double C30568 = C30522 * C30560;
    const double C30567 = C30560 * ce;
    const double C31266 = C30560 * C30774;
    const double C31269 = C30753 * C30560;
    const double C31290 = C30560 * C30823;
    const double C31293 = C30802 * C30560;
    const double C30634 = C30522 * C30626;
    const double C30669 = C30626 * ce;
    const double C30783 = C30626 * C30774;
    const double C30832 = C30626 * C30823;
    const double C30854 = C30753 * C30626;
    const double C30881 = C30802 * C30626;
    const double C30631 = C30522 * C30623;
    const double C30670 = ae * C30623;
    const double C30784 = C30623 * C30774;
    const double C30833 = C30623 * C30823;
    const double C30855 = C30753 * C30623;
    const double C30882 = C30802 * C30623;
    const double C30694 = C30671 * ae;
    const double C30692 = C30671 * C30530;
    const double C30691 = C30522 * C30671;
    const double C30690 = C30671 * ce;
    const double C31368 = std::exp(C31367);
    const double C31380 = std::exp(C31379);
    const double C31548 = std::exp(C31547);
    const double C31560 = std::exp(C31559);
    const double C4698 = C31314 * C284;
    const double C9412 = C31314 * C437;
    const double C30371 = C30370 * C31314;
    const double C31654 = C31314 * C31618;
    const double C101 =
        (C31314 * std::pow(C31618, 2)) / C31619 + C31314 / C30369;
    const double C103 = C31621 * C31314;
    const double C13646 = C31620 * C31314;
    const double C30426 = C30422 - C30412;
    const double C30425 = C30421 - C30411;
    const double C30409 = C30404 * C31327;
    const double C31329 = C31327 * C31322;
    const double C31328 = C31327 / C30400;
    const double C31337 = C31335 * C31327;
    const double C31625 = C31327 * C31323;
    const double C31661 = C31629 * C31327;
    const double C31655 = C31327 * C31622;
    const double C130 =
        (C30524 * C30521 * C30532 + C30522 * (C30522 * C30537 + C30529 * ae) +
         C30522 * C30529 * ae) /
        C30365;
    const double C278 = (C30753 * (C30522 * C30537 + C30529 * ae)) / C30365;
    const double C288 = (C30524 * C30521 * C30532 + C30537 * C30774) / C30365;
    const double C431 = (C30802 * (C30522 * C30537 + C30529 * ae)) / C30365;
    const double C441 = (C30524 * C30521 * C30532 + C30537 * C30823) / C30365;
    const double C828 = (C30802 * C30753 * C30537) / C30365;
    const double C1042 =
        (2 * C30753 * C30537 + C30753 * (C30537 + C30550 * C30774)) / C30365;
    const double C1179 = (C30753 * C30537 + C30753 * C30550 * C30823) / C30365;
    const double C1185 = (C30802 * (C30537 + C30550 * C30774)) / C30365;
    const double C1872 =
        (2 * C30802 * C30537 + C30802 * (C30537 + C30550 * C30823)) / C30365;
    const double C144 =
        (-(ae * (C30522 * C30536 + C30529 * ce)) / C30394) / C30365 -
        ((C30529 + C30530 * C30527 * C30533) * C30531) / C30523 -
        ((C30522 * C30537 + C30529 * ae) * ce) / C30523 +
        C30522 * ((-(C30537 * ce) / C30394) / C30365 - (ae * C30536) / C30523 -
                  (C30522 *
                   (C30527 * C30533 + C30530 * bs[4] * std::pow(C30520, 4)) *
                   C30531) /
                      C30523);
    const double C133 = -(C30522 * (C30522 * C30536 + C30529 * ce) +
                          C30524 * C30521 * C30528 + C30522 * C30529 * ce) /
                        C30394;
    const double C282 = -(C30753 * (C30522 * C30536 + C30529 * ce)) / C30394;
    const double C291 = -(C30536 * C30774 + C30524 * C30521 * C30528) / C30394;
    const double C435 = -(C30802 * (C30522 * C30536 + C30529 * ce)) / C30394;
    const double C444 = -(C30536 * C30823 + C30524 * C30521 * C30528) / C30394;
    const double C831 = -(C30802 * C30753 * C30536) / C30394;
    const double C1039 = (-2 * C30753 * C30536) / C30394 -
                         (C30753 * (C30549 * C30774 + C30536)) / C30394;
    const double C1176 = -(C30753 * C30549 * C30823 + C30753 * C30536) / C30394;
    const double C1182 = -(C30802 * (C30549 * C30774 + C30536)) / C30394;
    const double C1869 = (-2 * C30802 * C30536) / C30394 -
                         (C30802 * (C30549 * C30823 + C30536)) / C30394;
    const double C30547 = C30539 * ae;
    const double C30545 = C30522 * C30539;
    const double C30544 = C30539 * ce;
    const double C30551 = C30539 + C30548;
    const double C31260 = C30753 * C30539;
    const double C124 =
        2 * C30522 * C30529 + C30522 * (C30529 + C30539 * C30530);
    const double C269 = C30753 * (C30529 + C30539 * C30530);
    const double C422 = C30802 * (C30529 + C30539 * C30530);
    const double C1033 =
        2 * C30753 * C30529 + C30753 * (C30529 + C30539 * C30774);
    const double C1034 =
        3 * (C30529 + C30539 * C30774) +
        C30753 * (2 * C30753 * C30539 + C30753 * (C30539 + C30560 * C30774));
    const double C1167 = C30753 * C30529 + C30753 * C30539 * C30823;
    const double C1170 = C30802 * (C30529 + C30539 * C30774);
    const double C1171 =
        C30529 + C30539 * C30774 + (C30539 + C30560 * C30774) * C30823;
    const double C1559 =
        C30802 * (2 * C30753 * C30539 + C30753 * (C30539 + C30560 * C30774));
    const double C1863 =
        2 * C30802 * C30529 + C30802 * (C30529 + C30539 * C30823);
    const double C1864 =
        3 * (C30529 + C30539 * C30823) +
        C30802 * (2 * C30802 * C30539 + C30802 * (C30539 + C30560 * C30823));
    const double C4700 = C31314 * C300;
    const double C9414 = C31314 * C453;
    const double C30582 = C30522 * C30577;
    const double C30600 = C30577 * ce;
    const double C30759 = C30753 * C30577;
    const double C30808 = C30802 * C30577;
    const double C31127 = C30577 * C30774;
    const double C31171 = C30577 * C30823;
    const double C1043 =
        (3 * (C30537 + C30550 * C30774) +
         C30753 * (2 * C30753 * C30550 + C30753 * (C30550 + C30577 * C30774))) /
        C30365;
    const double C1186 =
        (C30537 + C30550 * C30774 + (C30550 + C30577 * C30774) * C30823) /
        C30365;
    const double C1562 =
        (C30802 * (2 * C30753 * C30550 + C30753 * (C30550 + C30577 * C30774))) /
        C30365;
    const double C1873 =
        (3 * (C30537 + C30550 * C30823) +
         C30802 * (2 * C30802 * C30550 + C30802 * (C30550 + C30577 * C30823))) /
        C30365;
    const double C30581 = C30522 * C30574;
    const double C30601 = ae * C30574;
    const double C30760 = C30753 * C30574;
    const double C30809 = C30802 * C30574;
    const double C31124 = C30574 * C30774;
    const double C31168 = C30574 * C30823;
    const double C1046 =
        (-3 * (C30549 * C30774 + C30536)) / C30394 +
        C30753 * ((-2 * C30753 * C30549) / C30394 -
                  (C30753 * (C30574 * C30774 + C30549)) / C30394);
    const double C1189 =
        -((C30574 * C30774 + C30549) * C30823 + C30549 * C30774 + C30536) /
        C30394;
    const double C1565 =
        C30802 * ((-2 * C30753 * C30549) / C30394 -
                  (C30753 * (C30574 * C30774 + C30549)) / C30394);
    const double C1876 =
        (-3 * (C30549 * C30823 + C30536)) / C30394 +
        C30802 * ((-2 * C30802 * C30549) / C30394 -
                  (C30802 * (C30574 * C30823 + C30549)) / C30394);
    const double C30580 = C30560 + C30573;
    const double C30619 = C30602 * ae;
    const double C30617 = C30602 * C30530;
    const double C30616 = C30522 * C30602;
    const double C30615 = C30602 * ce;
    const double C30630 = C30602 + C30622;
    const double C31270 = C30602 * C30774;
    const double C31294 = C30602 * C30823;
    const double C31305 = C30753 * C30602;
    const double C30711 = C30522 * C30702;
    const double C30708 = C30522 * C30699;
    const double C30707 = C30671 + C30698;
    const double C30563 = C30558 / C30394;
    const double C30564 = C30559 / C30523;
    const double C30576 = C30539 + C30569;
    const double C30578 = C30568 * ae;
    const double C30575 = C30568 * ce;
    const double C30606 = 2 * C30568;
    const double C31262 = C30753 * C30568;
    const double C31267 = C30539 + C31266;
    const double C31271 = 2 * C31269;
    const double C31291 = C30539 + C31290;
    const double C31295 = 2 * C31293;
    const double C30684 = C30669 / C30394;
    const double C30786 = C30577 + C30783;
    const double C30835 = C30577 + C30832;
    const double C30859 = C30854 * ce;
    const double C30910 = C30802 * C30854;
    const double C31192 = C30854 * C30823;
    const double C30886 = C30881 * ce;
    const double C30685 = C30670 / C30523;
    const double C30787 = C30784 + C30574;
    const double C30836 = C30833 + C30574;
    const double C30860 = ae * C30855;
    const double C30911 = C30802 * C30855;
    const double C31195 = C30855 * C30823;
    const double C30887 = ae * C30882;
    const double C30701 = C30602 + C30692;
    const double C30703 = C30691 * ae;
    const double C30700 = C30691 * ce;
    const double C31418 = C31368 / C30400;
    const double C31420 = C31368 * C31417;
    const double C31427 = C31335 * C31368;
    const double C31640 = C31368 * C31419;
    const double C31667 = C31629 * C31368;
    const double C31665 = C31368 * C31634;
    const double C31458 = C31380 / C30400;
    const double C31460 = C31380 * C31457;
    const double C31467 = C31335 * C31380;
    const double C31646 = C31380 * C31459;
    const double C31670 = C31629 * C31380;
    const double C31668 = C31380 * C31636;
    const double C31684 = C31548 * C31652;
    const double C4582 =
        (C31548 * std::pow(C31652, 2)) / C31619 + C31548 / C30369;
    const double C4584 = C31621 * C31548;
    const double C13648 = C31620 * C31548;
    const double C31685 = C31560 * C31653;
    const double C9187 =
        (C31560 * std::pow(C31653, 2)) / C31619 + C31560 / C30369;
    const double C9189 = C31621 * C31560;
    const double C19340 = C31620 * C31560;
    const double C30372 = 2 * C30371;
    const double C102 = (-2 * C31620 * C31654) / C30365;
    const double C13645 = -C31654 / C30365;
    const double C30431 = C30426 / C30400;
    const double C30430 = C30392 * C30426;
    const double C30429 = C30425 + C30402;
    const double C30416 = C30409 / C30399;
    const double C30414 = 2 * C30409;
    const double C31330 = C31329 * C31323;
    const double C31336 = C31329 / C30406;
    const double C31626 = C31335 * C31329;
    const double C31624 = C31329 / C30394;
    const double C259 = (C31327 * std::pow(C31323, 2)) / C30399 + C31328;
    const double C31338 = C31337 * C31323;
    const double C31630 = C31322 * C31337;
    const double C31628 = 2 * C31337;
    const double C31671 = C31337 / C31632;
    const double C108 = C31337 / C31664;
    const double C2723 = C31337 / C30400;
    const double C31657 = C31625 / C30394;
    const double C260 = (-2 * C31335 * C31625) / C30394;
    const double C31686 = C31655 / C30399;
    const double C4702 = C31314 * C278;
    const double C13801 = C13646 * C278;
    const double C4710 = C31314 * C288;
    const double C9416 = C31314 * C431;
    const double C19637 = C13646 * C431;
    const double C9424 = C31314 * C441;
    const double C5259 = C31314 * C828;
    const double C4726 = C31314 * C1042;
    const double C5657 = C31314 * C1179;
    const double C5271 = C31314 * C1185;
    const double C9440 = C31314 * C1872;
    const double C30556 = C30553 + C30547;
    const double C274 = C30522 * C30529 + C30545 * C30774;
    const double C427 = C30522 * C30529 + C30545 * C30823;
    const double C824 = C30802 * C30753 * C30545;
    const double C1032 =
        2 * C30753 * C30545 + C30753 * (C30545 + C30568 * C30774);
    const double C1166 = C30753 * C30545 + C30753 * C30568 * C30823;
    const double C1169 = C30802 * (C30545 + C30568 * C30774);
    const double C1862 =
        2 * C30802 * C30545 + C30802 * (C30545 + C30568 * C30823);
    const double C30555 = C30552 + C30544;
    const double C30554 = C30551 * C30531;
    const double C2239 =
        2 * C30802 * C31260 + C30802 * (C31260 + C30753 * C30560 * C30823);
    const double C6384 =
        3 * (C31260 + C31269 * C30823) +
        C30802 * (2 * C30802 * C31269 +
                  C30802 * (C31269 + C30753 * C30602 * C30823));
    const double C30586 = C30582 + C30571;
    const double C30610 = C30600 / C30394;
    const double C30762 = C30759 * ce;
    const double C31130 = 2 * C30759;
    const double C2242 =
        (2 * C30802 * C31112 + C30802 * (C31112 + C30759 * C30823)) / C30365;
    const double C6388 =
        (3 * (C31112 + C30759 * C30823) +
         C30802 * (2 * C30802 * C30759 + C30802 * (C30759 + C30854 * C30823))) /
        C30365;
    const double C30811 = C30808 * ce;
    const double C31174 = 2 * C30808;
    const double C31128 = C30550 + C31127;
    const double C31172 = C30550 + C31171;
    const double C5512 = C31314 * C1043;
    const double C5661 = C31314 * C1186;
    const double C5665 = C31314 * C1562;
    const double C10830 = C31314 * C1873;
    const double C30585 = C30581 + C30567;
    const double C30611 = C30601 / C30523;
    const double C30763 = ae * C30760;
    const double C31134 = -2 * C30760;
    const double C2245 = (-2 * C30802 * C31118) / C30394 -
                         (C30802 * (C30760 * C30823 + C31118)) / C30394;
    const double C6389 =
        (-3 * (C30760 * C30823 + C31118)) / C30394 +
        C30802 * ((-2 * C30802 * C30760) / C30394 -
                  (C30802 * (C30855 * C30823 + C30760)) / C30394);
    const double C30812 = ae * C30809;
    const double C31178 = -2 * C30809;
    const double C31125 = C31124 + C30549;
    const double C31169 = C31168 + C30549;
    const double C30584 = C30580 * C30531;
    const double C30642 = C30634 + C30619;
    const double C30625 = C30560 + C30617;
    const double C30627 = C30616 * ae;
    const double C30624 = C30616 * ce;
    const double C30676 = 2 * C30616;
    const double C31279 = C30616 * C30774;
    const double C31300 = C30753 * C30616;
    const double C31302 = C30616 * C30823;
    const double C1035 =
        3 * (C30545 + C30568 * C30774) +
        C30753 * (2 * C30753 * C30568 + C30753 * (C30568 + C30616 * C30774));
    const double C1172 =
        C30545 + C30568 * C30774 + (C30568 + C30616 * C30774) * C30823;
    const double C1560 =
        C30802 * (2 * C30753 * C30568 + C30753 * (C30568 + C30616 * C30774));
    const double C1865 =
        3 * (C30545 + C30568 * C30823) +
        C30802 * (2 * C30802 * C30568 + C30802 * (C30568 + C30616 * C30823));
    const double C30639 = C30631 + C30615;
    const double C30638 = C30630 * C30531;
    const double C31272 = C30560 + C31270;
    const double C31296 = C30560 + C31294;
    const double C31306 = C31305 * C30823;
    const double C30719 = C30711 + C30694;
    const double C30716 = C30708 + C30690;
    const double C30715 = C30707 * C30531;
    const double C30572 = -C30563;
    const double C125 = 3 * (C30529 + C30539 * C30530) +
                        C30522 * (2 * C30545 + C30522 * C30576);
    const double C270 = C30753 * (2 * C30545 + C30522 * C30576);
    const double C275 = C30529 + C30539 * C30530 + C30576 * C30774;
    const double C423 = C30802 * (2 * C30545 + C30522 * C30576);
    const double C428 = C30529 + C30539 * C30530 + C30576 * C30823;
    const double C825 = C30802 * C30753 * C30576;
    const double C2240 =
        2 * C30802 * C31262 + C30802 * (C31262 + C30753 * C30616 * C30823);
    const double C5496 =
        4 * (2 * C31260 + C30753 * C31267) +
        C30753 * (3 * C31267 + C30753 * (2 * C30753 * C30560 +
                                         C30753 * (C30560 + C30602 * C30774)));
    const double C10819 =
        4 * (2 * C30802 * C30539 + C30802 * C31291) +
        C30802 * (3 * C31291 + C30802 * (2 * C30802 * C30560 +
                                         C30802 * (C30560 + C30602 * C30823)));
    const double C30697 = -C30684;
    const double C30789 = C30786 * ce;
    const double C31131 = C30753 * C30786;
    const double C30838 = C30835 * ce;
    const double C31175 = C30802 * C30835;
    const double C30864 = C30859 / C30394;
    const double C30913 = C30910 * ce;
    const double C31193 = C30759 + C31192;
    const double C30891 = C30886 / C30394;
    const double C30790 = ae * C30787;
    const double C31135 = C30753 * C30787;
    const double C30839 = ae * C30836;
    const double C31179 = C30802 * C30836;
    const double C30865 = C30860 / C30523;
    const double C30914 = ae * C30911;
    const double C31196 = C31195 + C30760;
    const double C30892 = C30887 / C30523;
    const double C30712 = C30701 * ae;
    const double C30710 = C30522 * C30701;
    const double C30709 = C30701 * ce;
    const double C956 = (C31368 * std::pow(C31419, 2)) / C30399 + C31418;
    const double C31421 = C31420 * C31419;
    const double C31426 = C31420 / C30406;
    const double C31638 = C31420 / C30394;
    const double C31635 = C31335 * C31420;
    const double C31428 = C31427 * C31419;
    const double C31644 = C31417 * C31427;
    const double C31643 = 2 * C31427;
    const double C31677 = C31427 / C31632;
    const double C1029 = C31427 / C31664;
    const double C2726 = C31427 / C30400;
    const double C31673 = C31640 / C30394;
    const double C957 = (-2 * C31335 * C31640) / C30394;
    const double C31691 = C31665 / C30399;
    const double C1681 = (C31380 * std::pow(C31459, 2)) / C30399 + C31458;
    const double C31461 = C31460 * C31459;
    const double C31466 = C31460 / C30406;
    const double C31639 = C31460 / C30394;
    const double C31637 = C31335 * C31460;
    const double C31468 = C31467 * C31459;
    const double C31650 = C31457 * C31467;
    const double C31649 = 2 * C31467;
    const double C31683 = C31467 / C31632;
    const double C1860 = C31467 / C31664;
    const double C3628 = C31467 / C30400;
    const double C31679 = C31646 / C30394;
    const double C1682 = (-2 * C31335 * C31646) / C30394;
    const double C31693 = C31668 / C30399;
    const double C4583 = (-2 * C31620 * C31684) / C30365;
    const double C13647 = -C31684 / C30365;
    const double C9188 = (-2 * C31620 * C31685) / C30365;
    const double C19339 = -C31685 / C30365;
    const double C114 =
        ((-C30367 / C30365) / C30369 -
         ((C31314 - (C30366 * C30372) / C30365) * be) / C30365) /
            C30369 -
        ((C30366 * ((-C30372 / C30365) / C30369 - (0 * be) / C30365) + C13646) *
         be) /
            C30365;
    const double C115 =
        ((-C30372 / C30365) / C30369 - (0 * be) / C30365) / C30369 -
        (0 * be) / C30365;
    const double C4585 = -C30372 / C30365;
    const double C13649 = (-C30367 / C30365) / C30369 -
                          ((C31314 - (C30366 * C30372) / C30365) * be) / C30365;
    const double C13650 = (-C30372 / C30365) / C30369 - (0 * be) / C30365;
    const double C13833 = C13645 * C288;
    const double C13809 = C13645 * C278;
    const double C13803 = C13645 * C300;
    const double C13799 = C13645 * C284;
    const double C14493 = C13645 * C828;
    const double C14761 = C13645 * C1043;
    const double C14747 = C13645 * C1042;
    const double C14939 = C13645 * C1186;
    const double C14925 = C13645 * C1185;
    const double C14917 = C13645 * C1179;
    const double C15437 = C13645 * C1562;
    const double C19669 = C13645 * C441;
    const double C19645 = C13645 * C431;
    const double C19639 = C13645 * C453;
    const double C19635 = C13645 * C437;
    const double C21389 = C13645 * C1873;
    const double C21375 = C13645 * C1872;
    const double C113 =
        ((-(0 * be) / C30365) / C30369 -
         ((0 - (C30366 * C30367) / C30365) * be) / C30365) /
            C30369 -
        ((C30366 * ((-C30367 / C30365) / C30369 -
                    ((C31314 - (C30366 * C30372) / C30365) * be) / C30365) +
          C13645) *
         be) /
            C30365 +
        (-C30372 / C30365) / C30369 - (0 * be) / C30365;
    const double C30435 = C30430 + 0;
    const double C30434 = C30429 / C30400;
    const double C30420 = C30405 - C30416;
    const double C30419 = C30392 * C30414;
    const double C267 =
        ((-C30414 / C30394) / C30400 - (0 * de) / C30394) / C30400 -
        (0 * de) / C30394;
    const double C1030 = -C30414 / C30394;
    const double C2464 = (-C30414 / C30394) / C30400 - (0 * de) / C30394;
    const double C31331 = C31330 / C30399;
    const double C31658 = 2 * C31626;
    const double C31339 = C31338 / C30394;
    const double C31662 = C31630 / C30406;
    const double C31687 = C31624 - C31657;
    const double C2457 = -C31657;
    const double C31701 = C31686 + C31328;
    const double C134 = (2 * (C30522 * C30537 + C30529 * ae) +
                         C30522 * (C30537 + C30522 * C30556 + C30545 * ae) +
                         (C30529 + C30539 * C30530) * ae) /
                        C30365;
    const double C279 =
        (C30753 * (C30537 + C30522 * C30556 + C30545 * ae)) / C30365;
    const double C289 =
        (C30522 * C30537 + C30529 * ae + C30556 * C30774) / C30365;
    const double C432 =
        (C30802 * (C30537 + C30522 * C30556 + C30545 * ae)) / C30365;
    const double C442 =
        (C30522 * C30537 + C30529 * ae + C30556 * C30823) / C30365;
    const double C829 = (C30802 * C30753 * C30556) / C30365;
    const double C135 =
        (-2 * (C30522 * C30536 + C30529 * ce)) / C30394 -
        (C30522 * (C30522 * C30555 + C30536 + C30545 * ce)) / C30394 -
        ((C30529 + C30539 * C30530) * ce) / C30394;
    const double C281 =
        -(C30753 * (C30522 * C30555 + C30536 + C30545 * ce)) / C30394;
    const double C292 =
        -(C30555 * C30774 + C30522 * C30536 + C30529 * ce) / C30394;
    const double C434 =
        -(C30802 * (C30522 * C30555 + C30536 + C30545 * ce)) / C30394;
    const double C445 =
        -(C30555 * C30823 + C30522 * C30536 + C30529 * ce) / C30394;
    const double C832 = -(C30802 * C30753 * C30555) / C30394;
    const double C145 =
        2 * ((-(C30537 * ce) / C30394) / C30365 - (ae * C30536) / C30523 -
             (C30522 * C30554) / C30523) -
        (ae * (C30522 * C30555 + C30536 + C30545 * ce)) / C30523 -
        ((C30537 + C30522 * C30556 + C30545 * ae) * ce) / C30523 +
        C30522 *
            ((-(ae * C30555) / C30394) / C30365 - C30554 / C30523 -
             (C30556 * ce) / C30523 +
             C30522 *
                 ((-(C30550 * ce) / C30394) / C30365 - (ae * C30549) / C30523 -
                  (C30522 *
                   (C30540 * C30541 + C30530 * bs[5] * std::pow(C30526, 5)) *
                   C30531) /
                      C30523));
    const double C299 = (-(C30753 * C30537 * ce) / C30394) / C30365 -
                        (ae * C30753 * C30536) / C30523 -
                        (C30522 * C30753 * C30554) / C30523;
    const double C303 = (-(C30554 * std::pow(C30753, 2)) / C30394) / C30365 -
                        ((C30529 + C30530 * C30527 * C30533) * C30531) / C30523;
    const double C452 = (-(C30802 * C30537 * ce) / C30394) / C30365 -
                        (ae * C30802 * C30536) / C30523 -
                        (C30522 * C30802 * C30554) / C30523;
    const double C456 = (-(C30554 * std::pow(C30802, 2)) / C30394) / C30365 -
                        ((C30529 + C30530 * C30527 * C30533) * C30531) / C30523;
    const double C838 = (-(C30802 * C30753 * C30554) / C30394) / C30365;
    const double C30589 = C30522 * C30586;
    const double C30607 = 2 * C30586;
    const double C30599 = C30586 * ce;
    const double C31114 = C30753 * C30586;
    const double C1041 =
        (2 * C30753 * C30556 + C30753 * (C30556 + C30586 * C30774)) / C30365;
    const double C1178 = (C30753 * C30556 + C30753 * C30586 * C30823) / C30365;
    const double C1184 = (C30802 * (C30556 + C30586 * C30774)) / C30365;
    const double C1871 =
        (2 * C30802 * C30556 + C30802 * (C30556 + C30586 * C30823)) / C30365;
    const double C30621 = -C30610;
    const double C30765 = C30762 / C30394;
    const double C6777 = C31314 * C2242;
    const double C16289 = C13645 * C2242;
    const double C11242 = C31314 * C6388;
    const double C30814 = C30811 / C30394;
    const double C5499 =
        (4 * (2 * C31112 + C30753 * C31128) +
         C30753 * (3 * C31128 + C30753 * (2 * C30759 + C30753 * C30786))) /
        C30365;
    const double C6387 =
        (2 * C30802 * C31128 + C30802 * (C31128 + C30786 * C30823)) / C30365;
    const double C6390 =
        (3 * (C31128 + C30786 * C30823) +
         C30802 * (2 * C30802 * C30786 +
                   C30802 * (C30786 + (C30626 + C30702 * C30774) * C30823))) /
        C30365;
    const double C10822 =
        (4 * (2 * C30802 * C30550 + C30802 * C31172) +
         C30802 * (3 * C31172 + C30802 * (2 * C30808 + C30802 * C30835))) /
        C30365;
    const double C30588 = C30522 * C30585;
    const double C30605 = -2 * C30585;
    const double C30597 = ae * C30585;
    const double C31120 = C30753 * C30585;
    const double C1038 = (-2 * C30753 * C30555) / C30394 -
                         (C30753 * (C30585 * C30774 + C30555)) / C30394;
    const double C1175 = -(C30753 * C30585 * C30823 + C30753 * C30555) / C30394;
    const double C1181 = -(C30802 * (C30585 * C30774 + C30555)) / C30394;
    const double C1868 = (-2 * C30802 * C30555) / C30394 -
                         (C30802 * (C30585 * C30823 + C30555)) / C30394;
    const double C30766 = C30763 / C30523;
    const double C31136 = C31134 / C30394;
    const double C30815 = C30812 / C30523;
    const double C31180 = C31178 / C30394;
    const double C5498 =
        4 * ((-2 * C31118) / C30394 - (C30753 * C31125) / C30394) +
        C30753 *
            ((-3 * C31125) / C30394 +
             C30753 * ((-2 * C30760) / C30394 - (C30753 * C30787) / C30394));
    const double C6386 = (-2 * C30802 * C31125) / C30394 -
                         (C30802 * (C30787 * C30823 + C31125)) / C30394;
    const double C6391 =
        (-3 * (C30787 * C30823 + C31125)) / C30394 +
        C30802 * ((-2 * C30802 * C30787) / C30394 -
                  (C30802 * ((C30699 * C30774 + C30623) * C30823 + C30787)) /
                      C30394);
    const double C10821 =
        4 * ((-2 * C30802 * C30549) / C30394 - (C30802 * C31169) / C30394) +
        C30802 *
            ((-3 * C31169) / C30394 +
             C30802 * ((-2 * C30809) / C30394 - (C30802 * C30836) / C30394));
    const double C30587 = C30522 * C30584;
    const double C30598 = C30584 / C30523;
    const double C30757 = C30753 * C30584;
    const double C30806 = C30802 * C30584;
    const double C298 = (-(ae * C30753 * C30555) / C30394) / C30365 -
                        (C30753 * C30554) / C30523 -
                        (C30753 * C30556 * ce) / C30523 +
                        C30522 * ((-(C30753 * C30550 * ce) / C30394) / C30365 -
                                  (ae * C30753 * C30549) / C30523 -
                                  (C30522 * C30753 * C30584) / C30523);
    const double C304 =
        (-((C30537 + C30550 * C30774) * ce) / C30394) / C30365 -
        (ae * (C30549 * C30774 + C30536)) / C30523 +
        C30522 * ((-(C30584 * C30774) / C30394) / C30365 - C30554 / C30523);
    const double C451 = (-(ae * C30802 * C30555) / C30394) / C30365 -
                        (C30802 * C30554) / C30523 -
                        (C30802 * C30556 * ce) / C30523 +
                        C30522 * ((-(C30802 * C30550 * ce) / C30394) / C30365 -
                                  (ae * C30802 * C30549) / C30523 -
                                  (C30522 * C30802 * C30584) / C30523);
    const double C457 =
        (-((C30537 + C30550 * C30823) * ce) / C30394) / C30365 -
        (ae * (C30549 * C30823 + C30536)) / C30523 +
        C30522 * ((-(C30584 * C30823) / C30394) / C30365 - C30554 / C30523);
    const double C1051 =
        (-2 * C30753 * C30554) / C30523 +
        C30753 * ((-(C30584 * C30774) / C30394) / C30365 - C30554 / C30523);
    const double C1197 =
        C30802 * ((-(C30584 * C30774) / C30394) / C30365 - C30554 / C30523);
    const double C1881 =
        (-2 * C30802 * C30554) / C30523 +
        C30802 * ((-(C30584 * C30823) / C30394) / C30365 - C30554 / C30523);
    const double C30646 = C30522 * C30642;
    const double C30679 = 2 * C30642;
    const double C30668 = C30642 * ce;
    const double C30853 = C30753 * C30642;
    const double C30880 = C30802 * C30642;
    const double C31146 = C30642 * C30774;
    const double C31186 = C30642 * C30823;
    const double C1044 =
        (3 * (C30556 + C30586 * C30774) +
         C30753 * (2 * C30753 * C30586 + C30753 * (C30586 + C30642 * C30774))) /
        C30365;
    const double C1187 =
        (C30556 + C30586 * C30774 + (C30586 + C30642 * C30774) * C30823) /
        C30365;
    const double C1563 =
        (C30802 * (2 * C30753 * C30586 + C30753 * (C30586 + C30642 * C30774))) /
        C30365;
    const double C1874 =
        (3 * (C30556 + C30586 * C30823) +
         C30802 * (2 * C30802 * C30586 + C30802 * (C30586 + C30642 * C30823))) /
        C30365;
    const double C30635 = C30625 * ae;
    const double C30633 = C30522 * C30625;
    const double C30632 = C30625 * ce;
    const double C30677 = 3 * C30625;
    const double C31264 = C30753 * C30625;
    const double C1031 =
        2 * C30753 * C30576 + C30753 * (C30576 + C30625 * C30774);
    const double C1036 =
        3 * (C30576 + C30625 * C30774) +
        C30753 * (2 * C30753 * C30625 + C30753 * (C30625 + C30701 * C30774));
    const double C1165 = C30753 * C30576 + C30753 * C30625 * C30823;
    const double C1168 = C30802 * (C30576 + C30625 * C30774);
    const double C1173 =
        C30576 + C30625 * C30774 + (C30625 + C30701 * C30774) * C30823;
    const double C1561 =
        C30802 * (2 * C30753 * C30625 + C30753 * (C30625 + C30701 * C30774));
    const double C1861 =
        2 * C30802 * C30576 + C30802 * (C30576 + C30625 * C30823);
    const double C1866 =
        3 * (C30576 + C30625 * C30823) +
        C30802 * (2 * C30802 * C30625 + C30802 * (C30625 + C30701 * C30823));
    const double C31280 = C30568 + C31279;
    const double C10993 =
        3 * (C31262 + C31300 * C30823) +
        C30802 * (2 * C30802 * C31300 +
                  C30802 * (C31300 + C30753 * C30691 * C30823));
    const double C31303 = C30568 + C31302;
    const double C30645 = C30522 * C30639;
    const double C30675 = -2 * C30639;
    const double C30666 = ae * C30639;
    const double C30851 = C30753 * C30639;
    const double C30878 = C30802 * C30639;
    const double C31149 = C30639 * C30774;
    const double C31189 = C30639 * C30823;
    const double C1047 =
        (-3 * (C30585 * C30774 + C30555)) / C30394 +
        C30753 * ((-2 * C30753 * C30585) / C30394 -
                  (C30753 * (C30639 * C30774 + C30585)) / C30394);
    const double C1190 =
        -((C30639 * C30774 + C30585) * C30823 + C30585 * C30774 + C30555) /
        C30394;
    const double C1566 =
        C30802 * ((-2 * C30753 * C30585) / C30394 -
                  (C30753 * (C30639 * C30774 + C30585)) / C30394);
    const double C1877 =
        (-3 * (C30585 * C30823 + C30555)) / C30394 +
        C30802 * ((-2 * C30802 * C30585) / C30394 -
                  (C30802 * (C30639 * C30823 + C30585)) / C30394);
    const double C30644 = C30522 * C30638;
    const double C30667 = C30638 / C30523;
    const double C30761 = C30753 * C30638;
    const double C30777 = C30638 * C30774;
    const double C30810 = C30802 * C30638;
    const double C30826 = C30638 * C30823;
    const double C31273 = C30753 * C31272;
    const double C6383 =
        2 * C30802 * C31267 + C30802 * (C31267 + C31272 * C30823);
    const double C6385 =
        3 * (C31267 + C31272 * C30823) +
        C30802 * (2 * C30802 * C31272 +
                  C30802 * (C31272 + (C30602 + C30671 * C30774) * C30823));
    const double C31297 = C30802 * C31296;
    const double C31307 = C31269 + C31306;
    const double C30725 = C30522 * C30719;
    const double C30722 = C30522 * C30716;
    const double C30721 = C30522 * C30715;
    const double C30785 = C30715 * C30774;
    const double C30834 = C30715 * C30823;
    const double C30856 = C30753 * C30715;
    const double C30883 = C30802 * C30715;
    const double C30579 = C30572 / C30365;
    const double C30706 = C30697 / C30365;
    const double C30792 = C30789 / C30394;
    const double C31132 = C31130 + C31131;
    const double C30841 = C30838 / C30394;
    const double C31176 = C31174 + C31175;
    const double C30868 = -C30864;
    const double C30916 = C30913 / C30394;
    const double C11234 =
        (4 * (2 * C30802 * C30759 + C30802 * C31193) +
         C30802 * (3 * C31193 +
                   C30802 * (2 * C30910 +
                             C30802 * (C30854 + C30753 * C30702 * C30823)))) /
        C30365;
    const double C30895 = -C30891;
    const double C30793 = C30790 / C30523;
    const double C31137 = C31135 / C30394;
    const double C30842 = C30839 / C30523;
    const double C31181 = C31179 / C30394;
    const double C30917 = C30914 / C30523;
    const double C11235 =
        4 * ((-2 * C30802 * C30760) / C30394 - (C30802 * C31196) / C30394) +
        C30802 * ((-3 * C31196) / C30394 +
                  C30802 * ((-2 * C30911) / C30394 -
                            (C30802 * (C30753 * C30699 * C30823 + C30855)) /
                                C30394));
    const double C30718 = C30676 + C30710;
    const double C30717 = C30709 / C30394;
    const double C31422 = C31421 / C30399;
    const double C31666 = 2 * C31635;
    const double C31429 = C31428 / C30394;
    const double C31676 = C31644 / C30406;
    const double C31695 = C31638 - C31673;
    const double C2353 = -C31673;
    const double C31704 = C31691 + C31418;
    const double C31462 = C31461 / C30399;
    const double C31669 = 2 * C31637;
    const double C31469 = C31468 / C30394;
    const double C31682 = C31650 / C30406;
    const double C31698 = C31639 - C31679;
    const double C3120 = -C31679;
    const double C31705 = C31693 + C31458;
    const double C4725 = C4585 * C1033;
    const double C4723 = C4585 * C1039;
    const double C4721 = C4585 * C1032;
    const double C4717 = C4585 * C275;
    const double C4713 = C4585 * C274;
    const double C4711 = C4585 * C291;
    const double C4709 = C4585 * C273;
    const double C4705 = C4585 * C269;
    const double C4703 = C4585 * C282;
    const double C4701 = C4585 * C268;
    const double C4699 = C4585 * C283;
    const double C4697 = C4585 * C271;
    const double C4988 = C4585 * C270;
    const double C5270 = C4585 * C1170;
    const double C5268 = C4585 * C1182;
    const double C5266 = C4585 * C1169;
    const double C5262 = C4585 * C825;
    const double C5258 = C4585 * C823;
    const double C5256 = C4585 * C831;
    const double C5254 = C4585 * C824;
    const double C5517 = C4585 * C5496;
    const double C5513 = C4585 * C1046;
    const double C5511 = C4585 * C1034;
    const double C5666 = C4585 * C1565;
    const double C5664 = C4585 * C1559;
    const double C5662 = C4585 * C1189;
    const double C5660 = C4585 * C1171;
    const double C5658 = C4585 * C1176;
    const double C5656 = C4585 * C1167;
    const double C5806 = C4585 * C1035;
    const double C5980 = C4585 * C1560;
    const double C6554 = C4585 * C1172;
    const double C6548 = C4585 * C1166;
    const double C6776 = C4585 * C2239;
    const double C6774 = C4585 * C2245;
    const double C9439 = C4585 * C1863;
    const double C9437 = C4585 * C1869;
    const double C9435 = C4585 * C1862;
    const double C9431 = C4585 * C428;
    const double C9427 = C4585 * C427;
    const double C9425 = C4585 * C444;
    const double C9423 = C4585 * C426;
    const double C9419 = C4585 * C422;
    const double C9417 = C4585 * C435;
    const double C9415 = C4585 * C421;
    const double C9413 = C4585 * C436;
    const double C9411 = C4585 * C424;
    const double C9691 = C4585 * C423;
    const double C10835 = C4585 * C10819;
    const double C10831 = C4585 * C1876;
    const double C10829 = C4585 * C1864;
    const double C11006 = C4585 * C2240;
    const double C11125 = C4585 * C1865;
    const double C11241 = C4585 * C6384;
    const double C11239 = C4585 * C6389;
    const double C13840 = C13649 * C275;
    const double C13832 = C13649 * C273;
    const double C13828 = C13649 * C291;
    const double C13822 = C13649 * C274;
    const double C13814 = C13649 * C269;
    const double C13812 = C13649 * C282;
    const double C13808 = C13649 * C268;
    const double C13802 = C13649 * C283;
    const double C13798 = C13649 * C271;
    const double C14148 = C13649 * C270;
    const double C14500 = C13649 * C825;
    const double C14492 = C13649 * C823;
    const double C14488 = C13649 * C831;
    const double C14482 = C13649 * C824;
    const double C14760 = C13649 * C1034;
    const double C14756 = C13649 * C1046;
    const double C14750 = C13649 * C1039;
    const double C14746 = C13649 * C1033;
    const double C14938 = C13649 * C1171;
    const double C14934 = C13649 * C1189;
    const double C14928 = C13649 * C1182;
    const double C14924 = C13649 * C1170;
    const double C14920 = C13649 * C1176;
    const double C14916 = C13649 * C1167;
    const double C15084 = C13649 * C1032;
    const double C15290 = C13649 * C1169;
    const double C15436 = C13649 * C1559;
    const double C15432 = C13649 * C1565;
    const double C16012 = C13649 * C1166;
    const double C16288 = C13649 * C2239;
    const double C16284 = C13649 * C2245;
    const double C19676 = C13649 * C428;
    const double C19668 = C13649 * C426;
    const double C19664 = C13649 * C444;
    const double C19658 = C13649 * C427;
    const double C19650 = C13649 * C422;
    const double C19648 = C13649 * C435;
    const double C19644 = C13649 * C421;
    const double C19638 = C13649 * C436;
    const double C19634 = C13649 * C424;
    const double C19968 = C13649 * C423;
    const double C21388 = C13649 * C1864;
    const double C21384 = C13649 * C1876;
    const double C21378 = C13649 * C1869;
    const double C21374 = C13649 * C1863;
    const double C21724 = C13649 * C1862;
    const double C13830 = C13650 * C274;
    const double C13824 = C13650 * C275;
    const double C13816 = C13650 * C270;
    const double C13806 = C13650 * C269;
    const double C13804 = C13650 * C282;
    const double C13800 = C13650 * C268;
    const double C14490 = C13650 * C824;
    const double C14484 = C13650 * C825;
    const double C14758 = C13650 * C1035;
    const double C14748 = C13650 * C1032;
    const double C14936 = C13650 * C1172;
    const double C14926 = C13650 * C1169;
    const double C14918 = C13650 * C1166;
    const double C15434 = C13650 * C1560;
    const double C16286 = C13650 * C2240;
    const double C19666 = C13650 * C427;
    const double C19660 = C13650 * C428;
    const double C19652 = C13650 * C423;
    const double C19642 = C13650 * C422;
    const double C19640 = C13650 * C435;
    const double C19636 = C13650 * C421;
    const double C21386 = C13650 * C1865;
    const double C21376 = C13650 * C1862;
    const double C30438 = C30435 * de;
    const double C30424 = C30392 * C30420;
    const double C30452 = C30420 / C30400;
    const double C30423 = C30419 / C30394;
    const double C31332 = C31328 - C31331;
    const double C31688 = C31658 / C30394;
    const double C31340 = C31336 - C31339;
    const double C31702 = C31687 / C30400;
    const double C4706 = C31314 * C279;
    const double C13815 = C13645 * C279;
    const double C13807 = C13646 * C279;
    const double C4714 = C31314 * C289;
    const double C13831 = C13646 * C289;
    const double C13823 = C13645 * C289;
    const double C9420 = C31314 * C432;
    const double C19651 = C13645 * C432;
    const double C19643 = C13646 * C432;
    const double C9428 = C31314 * C442;
    const double C19667 = C13646 * C442;
    const double C19659 = C13645 * C442;
    const double C5255 = C31314 * C829;
    const double C14491 = C13646 * C829;
    const double C14483 = C13645 * C829;
    const double C4707 = C4585 * C281;
    const double C13818 = C13649 * C281;
    const double C13810 = C13650 * C281;
    const double C4715 = C4585 * C292;
    const double C13834 = C13649 * C292;
    const double C13826 = C13650 * C292;
    const double C9421 = C4585 * C434;
    const double C19654 = C13649 * C434;
    const double C19646 = C13650 * C434;
    const double C9429 = C4585 * C445;
    const double C19670 = C13649 * C445;
    const double C19662 = C13650 * C445;
    const double C5260 = C4585 * C832;
    const double C14494 = C13649 * C832;
    const double C14486 = C13650 * C832;
    const double C4704 = C31314 * C299;
    const double C13813 = C13645 * C299;
    const double C13805 = C13646 * C299;
    const double C4712 = C31314 * C303;
    const double C13829 = C13645 * C303;
    const double C9418 = C31314 * C452;
    const double C19649 = C13645 * C452;
    const double C19641 = C13646 * C452;
    const double C9426 = C31314 * C456;
    const double C19665 = C13645 * C456;
    const double C5257 = C31314 * C838;
    const double C14489 = C13645 * C838;
    const double C30592 = C30550 + C30589;
    const double C30609 = C30599 / C30523;
    const double C4722 = C31314 * C1041;
    const double C14749 = C13646 * C1041;
    const double C15085 = C13645 * C1041;
    const double C6549 = C31314 * C1178;
    const double C14919 = C13646 * C1178;
    const double C16013 = C13645 * C1178;
    const double C5267 = C31314 * C1184;
    const double C14927 = C13646 * C1184;
    const double C15291 = C13645 * C1184;
    const double C9436 = C31314 * C1871;
    const double C21377 = C13646 * C1871;
    const double C21725 = C13645 * C1871;
    const double C30629 = C30621 / C30365;
    const double C30768 = -C30765;
    const double C30817 = -C30814;
    const double C5518 = C31314 * C5499;
    const double C6773 = C31314 * C6387;
    const double C10836 = C31314 * C10822;
    const double C30591 = C30588 + C30549;
    const double C30613 = C30605 / C30394;
    const double C30608 = C30597 / C30394;
    const double C4727 = C4585 * C1038;
    const double C14752 = C13650 * C1038;
    const double C15088 = C13649 * C1038;
    const double C6550 = C4585 * C1175;
    const double C14922 = C13650 * C1175;
    const double C16016 = C13649 * C1175;
    const double C5272 = C4585 * C1181;
    const double C14930 = C13650 * C1181;
    const double C15294 = C13649 * C1181;
    const double C9441 = C4585 * C1868;
    const double C21380 = C13650 * C1868;
    const double C21728 = C13649 * C1868;
    const double C5515 = C4585 * C5498;
    const double C6770 = C4585 * C6386;
    const double C10833 = C4585 * C10821;
    const double C30590 = C30587 / C30523;
    const double C305 =
        (-(C30584 * C30774) / C30394) / C30365 - C30554 / C30523 -
        (ae * (C30585 * C30774 + C30555)) / C30523 -
        ((C30556 + C30586 * C30774) * ce) / C30523 +
        C30522 * ((-((C30550 + C30577 * C30774) * ce) / C30394) / C30365 -
                  (ae * (C30574 * C30774 + C30549)) / C30523 +
                  C30522 * ((-(C30638 * C30774) / C30394) / C30365 - C30598));
    const double C458 =
        (-(C30584 * C30823) / C30394) / C30365 - C30554 / C30523 -
        (ae * (C30585 * C30823 + C30555)) / C30523 -
        ((C30556 + C30586 * C30823) * ce) / C30523 +
        C30522 * ((-((C30550 + C30577 * C30823) * ce) / C30394) / C30365 -
                  (ae * (C30574 * C30823 + C30549)) / C30523 +
                  C30522 * ((-(C30638 * C30823) / C30394) / C30365 - C30598));
    const double C839 = (-(C30802 * C30753 * C30550 * ce) / C30394) / C30365 -
                        (ae * C30802 * C30753 * C30549) / C30523 -
                        (C30522 * C30802 * C30757) / C30523;
    const double C1194 =
        (-(C30757 * C30823) / C30394) / C30365 - (C30753 * C30554) / C30523;
    const double C4708 = C31314 * C298;
    const double C13819 = C13645 * C298;
    const double C13811 = C13646 * C298;
    const double C4716 = C31314 * C304;
    const double C13835 = C13645 * C304;
    const double C13827 = C13646 * C304;
    const double C9422 = C31314 * C451;
    const double C19655 = C13645 * C451;
    const double C19647 = C13646 * C451;
    const double C9430 = C31314 * C457;
    const double C19671 = C13645 * C457;
    const double C19663 = C13646 * C457;
    const double C4724 = C31314 * C1051;
    const double C14751 = C13645 * C1051;
    const double C5269 = C31314 * C1197;
    const double C14929 = C13645 * C1197;
    const double C9438 = C31314 * C1881;
    const double C21379 = C13645 * C1881;
    const double C30649 = C30577 + C30646;
    const double C30683 = C30668 / C30523;
    const double C30858 = C30853 * ce;
    const double C2243 =
        (2 * C30802 * C31114 + C30802 * (C31114 + C30853 * C30823)) / C30365;
    const double C10994 =
        (3 * (C31114 + C30853 * C30823) +
         C30802 * (2 * C30802 * C30853 +
                   C30802 * (C30853 + C30753 * C30719 * C30823))) /
        C30365;
    const double C30885 = C30880 * ce;
    const double C31147 = C30586 + C31146;
    const double C31187 = C30586 + C31186;
    const double C5807 = C31314 * C1044;
    const double C14759 = C13646 * C1044;
    const double C6555 = C31314 * C1187;
    const double C14937 = C13646 * C1187;
    const double C5981 = C31314 * C1563;
    const double C15435 = C13646 * C1563;
    const double C11126 = C31314 * C1874;
    const double C21387 = C13646 * C1874;
    const double C30641 = C30606 + C30633;
    const double C30640 = C30632 / C30394;
    const double C2241 =
        2 * C30802 * C31264 + C30802 * (C31264 + C30753 * C30701 * C30823);
    const double C4729 = C4585 * C1031;
    const double C15082 = C13650 * C1031;
    const double C9863 = C4585 * C1165;
    const double C16010 = C13650 * C1165;
    const double C5274 = C4585 * C1168;
    const double C15288 = C13650 * C1168;
    const double C9443 = C4585 * C1861;
    const double C21722 = C13650 * C1861;
    const double C5787 =
        4 * (2 * C31262 + C30753 * C31280) +
        C30753 * (3 * C31280 + C30753 * (2 * C30753 * C30616 +
                                         C30753 * (C30616 + C30691 * C30774)));
    const double C5965 =
        C30802 * (3 * C31280 + C30753 * (2 * C30753 * C30616 +
                                         C30753 * (C30616 + C30691 * C30774)));
    const double C6541 =
        2 * C31262 + C30753 * C31280 +
        (2 * C30753 * C30616 + C30753 * (C30616 + C30691 * C30774)) * C30823;
    const double C6663 =
        2 * C30802 * C31280 +
        C30802 * (C31280 + (C30616 + C30691 * C30774) * C30823);
    const double C11117 =
        4 * (2 * C30802 * C30568 + C30802 * C31303) +
        C30802 * (3 * C31303 + C30802 * (2 * C30802 * C30616 +
                                         C30802 * (C30616 + C30691 * C30823)));
    const double C30648 = C30645 + C30574;
    const double C30688 = C30675 / C30394;
    const double C30682 = C30666 / C30394;
    const double C30857 = ae * C30851;
    const double C2246 = (-2 * C30802 * C31120) / C30394 -
                         (C30802 * (C30851 * C30823 + C31120)) / C30394;
    const double C10995 =
        (-3 * (C30851 * C30823 + C31120)) / C30394 +
        C30802 * ((-2 * C30802 * C30851) / C30394 -
                  (C30802 * (C30753 * C30716 * C30823 + C30851)) / C30394);
    const double C30884 = ae * C30878;
    const double C31150 = C31149 + C30585;
    const double C31190 = C31189 + C30585;
    const double C5808 = C4585 * C1047;
    const double C14754 = C13650 * C1047;
    const double C6556 = C4585 * C1190;
    const double C14932 = C13650 * C1190;
    const double C5982 = C4585 * C1566;
    const double C15430 = C13650 * C1566;
    const double C11127 = C4585 * C1877;
    const double C21382 = C13650 * C1877;
    const double C30647 = C30644 / C30523;
    const double C30764 = C30522 * C30761;
    const double C30852 = C30761 / C30523;
    const double C30908 = C30802 * C30761;
    const double C30939 = -2 * C30761;
    const double C840 = (-(ae * C30802 * C30753 * C30585) / C30394) / C30365 -
                        (C30802 * C30757) / C30523 -
                        (C30802 * C30753 * C30586 * ce) / C30523 +
                        C30522 * ((-(C30802 * C30759 * ce) / C30394) / C30365 -
                                  (ae * C30802 * C30760) / C30523 -
                                  (C30522 * C30802 * C30761) / C30523);
    const double C1193 =
        (-((C30753 * C30550 + C30759 * C30823) * ce) / C30394) / C30365 -
        (ae * (C30760 * C30823 + C30753 * C30549)) / C30523 +
        C30522 * ((-(C30761 * C30823) / C30394) / C30365 - C30757 / C30523);
    const double C2248 =
        (-2 * C30802 * C30757) / C30523 +
        C30802 * ((-(C30761 * C30823) / C30394) / C30365 - C30757 / C30523);
    const double C30778 = C30777 / C30394;
    const double C30813 = C30522 * C30810;
    const double C30879 = C30810 / C30523;
    const double C30961 = -2 * C30810;
    const double C30827 = C30826 / C30394;
    const double C31274 = C31271 + C31273;
    const double C6772 = C4585 * C6383;
    const double C31298 = C31295 + C31297;
    const double C11233 =
        4 * (2 * C30802 * C31269 + C30802 * C31307) +
        C30802 * (3 * C31307 +
                  C30802 * (2 * C30802 * C31305 +
                            C30802 * (C31305 + C30753 * C30671 * C30823)));
    const double C30731 = C30626 + C30725;
    const double C30728 = C30722 + C30623;
    const double C30727 = C30721 / C30523;
    const double C30788 = C30785 / C30394;
    const double C30837 = C30834 / C30394;
    const double C30861 = C30522 * C30856;
    const double C30912 = C30802 * C30856;
    const double C30955 = C30856 * C30823;
    const double C30888 = C30522 * C30883;
    const double C30583 = C30579 - C30564;
    const double C30714 = C30706 - C30685;
    const double C30795 = -C30792;
    const double C5500 =
        (5 * (3 * C31128 + C30753 * C31132) +
         C30753 * (4 * C31132 +
                   C30753 * (3 * C30786 +
                             C30753 * (2 * C30854 +
                                       C30753 * (C30626 + C30702 * C30774))))) /
        C30365;
    const double C5643 =
        (2 * C31112 + C30753 * C31128 + C31132 * C30823) / C30365;
    const double C5645 = (C30802 * (3 * C31128 + C30753 * C31132)) / C30365;
    const double C5646 =
        (3 * C31128 + C30753 * C31132 +
         (3 * C30786 +
          C30753 * (2 * C30854 + C30753 * (C30626 + C30702 * C30774))) *
             C30823) /
        C30365;
    const double C6089 =
        (C30802 * (4 * C31132 +
                   C30753 * (3 * C30786 +
                             C30753 * (2 * C30854 +
                                       C30753 * (C30626 + C30702 * C30774))))) /
        C30365;
    const double C6766 =
        (2 * C30802 * C31132 +
         C30802 * (C31132 + (2 * C30854 + C30753 * (C30626 + C30702 * C30774)) *
                                C30823)) /
        C30365;
    const double C30844 = -C30841;
    const double C10823 =
        (5 * (3 * C31172 + C30802 * C31176) +
         C30802 * (4 * C31176 +
                   C30802 * (3 * C30835 +
                             C30802 * (2 * C30881 +
                                       C30802 * (C30626 + C30702 * C30823))))) /
        C30365;
    const double C30870 = C30868 / C30365;
    const double C30919 = -C30916;
    const double C30897 = C30895 / C30365;
    const double C31138 = C31136 - C31137;
    const double C31182 = C31180 - C31181;
    const double C30726 = C30718 * ae;
    const double C30724 = C30522 * C30718;
    const double C30723 = C30718 * ce;
    const double C31423 = C31418 - C31422;
    const double C31692 = C31666 / C30394;
    const double C31430 = C31426 - C31429;
    const double C31706 = C31695 / C30400;
    const double C31463 = C31458 - C31462;
    const double C31694 = C31669 / C30394;
    const double C31470 = C31466 - C31469;
    const double C31708 = C31698 / C30400;
    const double C4747 = C4725 + C4726;
    const double C4739 = C4709 + C4710;
    const double C4735 = C4701 + C4702;
    const double C4734 = C4699 + C4700;
    const double C4733 = C4697 + C4698;
    const double C5286 = C5270 + C5271;
    const double C5280 = C5258 + C5259;
    const double C5521 = C5511 + C5512;
    const double C5677 = C5664 + C5665;
    const double C5675 = C5660 + C5661;
    const double C5673 = C5656 + C5657;
    const double C6781 = C6776 + C6777;
    const double C9461 = C9439 + C9440;
    const double C9453 = C9423 + C9424;
    const double C9449 = C9415 + C9416;
    const double C9448 = C9413 + C9414;
    const double C9447 = C9411 + C9412;
    const double C10838 = C10829 + C10830;
    const double C11245 = C11241 + C11242;
    const double C13863 = C13832 + C13833;
    const double C13851 = C13808 + C13809;
    const double C13848 = C13802 + C13803;
    const double C13846 = C13798 + C13799;
    const double C14511 = C14492 + C14493;
    const double C14769 = C14760 + C14761;
    const double C14762 = C14746 + C14747;
    const double C14951 = C14938 + C14939;
    const double C14944 = C14924 + C14925;
    const double C14940 = C14916 + C14917;
    const double C15441 = C15436 + C15437;
    const double C16293 = C16288 + C16289;
    const double C19699 = C19668 + C19669;
    const double C19687 = C19644 + C19645;
    const double C19684 = C19638 + C19639;
    const double C19682 = C19634 + C19635;
    const double C21397 = C21388 + C21389;
    const double C21390 = C21374 + C21375;
    const double C13847 = C13800 + C13801;
    const double C19683 = C19636 + C19637;
    const double C30440 = C30438 / C30394;
    const double C30428 = C30424 + C31337;
    const double C30455 = C30452 - C30454;
    const double C961 = C30452 + (0 * ce) / C30394;
    const double C30427 = C31327 - C30423;
    const double C31623 = C31332 * C31322;
    const double C31660 = C31628 + C31332;
    const double C31631 = C31340 / C30400;
    const double C31627 = C31340 * C31322;
    const double C559 = C31702 - (C31332 * C31323) / C30394;
    const double C4737 = C4705 + C4706;
    const double C13854 = C13814 + C13815;
    const double C13850 = C13806 + C13807;
    const double C4741 = C4713 + C4714;
    const double C13862 = C13830 + C13831;
    const double C13858 = C13822 + C13823;
    const double C9451 = C9419 + C9420;
    const double C19690 = C19650 + C19651;
    const double C19686 = C19642 + C19643;
    const double C9455 = C9427 + C9428;
    const double C19698 = C19666 + C19667;
    const double C19694 = C19658 + C19659;
    const double C5278 = C5254 + C5255;
    const double C14510 = C14490 + C14491;
    const double C14506 = C14482 + C14483;
    const double C4736 = C4703 + C4704;
    const double C13853 = C13812 + C13813;
    const double C13849 = C13804 + C13805;
    const double C4740 = C4711 + C4712;
    const double C13861 = C13828 + C13829;
    const double C9450 = C9417 + C9418;
    const double C19689 = C19648 + C19649;
    const double C19685 = C19640 + C19641;
    const double C9454 = C9425 + C9426;
    const double C19697 = C19664 + C19665;
    const double C5279 = C5256 + C5257;
    const double C14509 = C14488 + C14489;
    const double C30595 = C30592 + C30578;
    const double C4745 = C4721 + C4722;
    const double C14763 = C14748 + C14749;
    const double C15091 = C15084 + C15085;
    const double C6558 = C6548 + C6549;
    const double C14941 = C14918 + C14919;
    const double C16019 = C16012 + C16013;
    const double C5284 = C5266 + C5267;
    const double C14945 = C14926 + C14927;
    const double C15297 = C15290 + C15291;
    const double C9459 = C9435 + C9436;
    const double C21391 = C21376 + C21377;
    const double C21731 = C21724 + C21725;
    const double C30637 = C30629 - C30611;
    const double C30769 = C30768 / C30365;
    const double C30818 = C30817 / C30365;
    const double C5524 = C5517 + C5518;
    const double C10841 = C10835 + C10836;
    const double C30594 = C30591 + C30575;
    const double C30620 = -C30608;
    const double C4720 = C31314 * C305;
    const double C13845 = C13645 * C305;
    const double C13837 = C13646 * C305;
    const double C9434 = C31314 * C458;
    const double C19681 = C13645 * C458;
    const double C19673 = C13646 * C458;
    const double C5261 = C31314 * C839;
    const double C14495 = C13645 * C839;
    const double C14487 = C13646 * C839;
    const double C5659 = C31314 * C1194;
    const double C14921 = C13645 * C1194;
    const double C4738 = C4707 + C4708;
    const double C13856 = C13818 + C13819;
    const double C13852 = C13810 + C13811;
    const double C4742 = C4715 + C4716;
    const double C13864 = C13834 + C13835;
    const double C13860 = C13826 + C13827;
    const double C9452 = C9421 + C9422;
    const double C19692 = C19654 + C19655;
    const double C19688 = C19646 + C19647;
    const double C9456 = C9429 + C9430;
    const double C19700 = C19670 + C19671;
    const double C19696 = C19662 + C19663;
    const double C4746 = C4723 + C4724;
    const double C14764 = C14750 + C14751;
    const double C5285 = C5268 + C5269;
    const double C14946 = C14928 + C14929;
    const double C9460 = C9437 + C9438;
    const double C21392 = C21378 + C21379;
    const double C30652 = C30649 + C30627;
    const double C30863 = C30858 / C30523;
    const double C11007 = C31314 * C2243;
    const double C16287 = C13646 * C2243;
    const double C30890 = C30885 / C30523;
    const double C5788 =
        (4 * (2 * C31114 + C30753 * C31147) +
         C30753 *
             (3 * C31147 +
              C30753 * (2 * C30853 + C30753 * (C30642 + C30719 * C30774)))) /
        C30365;
    const double C5966 =
        (C30802 *
         (3 * C31147 +
          C30753 * (2 * C30853 + C30753 * (C30642 + C30719 * C30774)))) /
        C30365;
    const double C6542 =
        (2 * C31114 + C30753 * C31147 +
         (2 * C30853 + C30753 * (C30642 + C30719 * C30774)) * C30823) /
        C30365;
    const double C6664 =
        (2 * C30802 * C31147 +
         C30802 * (C31147 + (C30642 + C30719 * C30774) * C30823)) /
        C30365;
    const double C11118 =
        (4 * (2 * C30802 * C30586 + C30802 * C31187) +
         C30802 *
             (3 * C31187 +
              C30802 * (2 * C30880 + C30802 * (C30642 + C30719 * C30823)))) /
        C30365;
    const double C5812 = C5806 + C5807;
    const double C14768 = C14758 + C14759;
    const double C6560 = C6554 + C6555;
    const double C14950 = C14936 + C14937;
    const double C5985 = C5980 + C5981;
    const double C15440 = C15434 + C15435;
    const double C11130 = C11125 + C11126;
    const double C21396 = C21386 + C21387;
    const double C126 = 4 * (2 * C30545 + C30522 * C30576) +
                        C30522 * (3 * C30576 + C30522 * C30641);
    const double C272 = C30753 * (3 * C30576 + C30522 * C30641);
    const double C276 = 2 * C30545 + C30522 * C30576 + C30641 * C30774;
    const double C425 = C30802 * (3 * C30576 + C30522 * C30641);
    const double C429 = 2 * C30545 + C30522 * C30576 + C30641 * C30823;
    const double C826 = C30802 * C30753 * C30641;
    const double C1307 =
        2 * C30753 * C30641 + C30753 * (C30641 + C30718 * C30774);
    const double C1457 = C30802 * (C30641 + C30718 * C30774);
    const double C2031 = C30753 * C30641 + C30753 * C30718 * C30823;
    const double C2137 =
        2 * C30802 * C30641 + C30802 * (C30641 + C30718 * C30823);
    const double C30651 = C30648 + C30624;
    const double C30696 = -C30682;
    const double C30862 = C30857 / C30394;
    const double C11008 = C4585 * C2246;
    const double C16282 = C13650 * C2246;
    const double C30889 = C30884 / C30394;
    const double C5789 =
        4 * ((-2 * C31120) / C30394 - (C30753 * C31150) / C30394) +
        C30753 * ((-3 * C31150) / C30394 +
                  C30753 * ((-2 * C30851) / C30394 -
                            (C30753 * (C30716 * C30774 + C30639)) / C30394));
    const double C5967 =
        C30802 * ((-3 * C31150) / C30394 +
                  C30753 * ((-2 * C30851) / C30394 -
                            (C30753 * (C30716 * C30774 + C30639)) / C30394));
    const double C6543 = (-2 * C31120) / C30394 - (C30753 * C31150) / C30394 +
                         ((-2 * C30851) / C30394 -
                          (C30753 * (C30716 * C30774 + C30639)) / C30394) *
                             C30823;
    const double C6665 =
        (-2 * C30802 * C31150) / C30394 -
        (C30802 * ((C30716 * C30774 + C30639) * C30823 + C31150)) / C30394;
    const double C11119 =
        4 * ((-2 * C30802 * C30585) / C30394 - (C30802 * C31190) / C30394) +
        C30802 * ((-3 * C31190) / C30394 +
                  C30802 * ((-2 * C30878) / C30394 -
                            (C30802 * (C30716 * C30823 + C30639)) / C30394));
    const double C30767 = C30764 / C30523;
    const double C1192 =
        (-(C30761 * C30823) / C30394) / C30365 - C30757 / C30523 -
        (ae * (C30851 * C30823 + C30753 * C30585)) / C30523 -
        ((C30753 * C30586 + C30853 * C30823) * ce) / C30523 +
        C30522 * ((-((C30759 + C30854 * C30823) * ce) / C30394) / C30365 -
                  (ae * (C30855 * C30823 + C30760)) / C30523 +
                  C30522 * ((-(C30856 * C30823) / C30394) / C30365 - C30852));
    const double C30941 = C30939 / C30523;
    const double C5265 = C31314 * C840;
    const double C14505 = C13645 * C840;
    const double C14497 = C13646 * C840;
    const double C6551 = C31314 * C1193;
    const double C14923 = C13646 * C1193;
    const double C16017 = C13645 * C1193;
    const double C6775 = C31314 * C2248;
    const double C16285 = C13645 * C2248;
    const double C30779 = -C30778;
    const double C30816 = C30813 / C30523;
    const double C30963 = C30961 / C30523;
    const double C30828 = -C30827;
    const double C5497 =
        5 * (3 * C31267 + C30753 * C31274) +
        C30753 * (4 * C31274 +
                  C30753 * (3 * C31272 +
                            C30753 * (2 * C30753 * C30602 +
                                      C30753 * (C30602 + C30671 * C30774))));
    const double C5639 = 2 * C31260 + C30753 * C31267 + C31274 * C30823;
    const double C5640 = C30802 * (3 * C31267 + C30753 * C31274);
    const double C5641 =
        3 * C31267 + C30753 * C31274 +
        (3 * C31272 +
         C30753 * (2 * C30753 * C30602 + C30753 * (C30602 + C30671 * C30774))) *
            C30823;
    const double C6088 =
        C30802 * (4 * C31274 +
                  C30753 * (3 * C31272 +
                            C30753 * (2 * C30753 * C30602 +
                                      C30753 * (C30602 + C30671 * C30774))));
    const double C6765 =
        2 * C30802 * C31274 +
        C30802 * (C31274 +
                  (2 * C30753 * C30602 + C30753 * (C30602 + C30671 * C30774)) *
                      C30823);
    const double C6779 = C6772 + C6773;
    const double C10820 =
        5 * (3 * C31291 + C30802 * C31298) +
        C30802 * (4 * C31298 +
                  C30802 * (3 * C31296 +
                            C30802 * (2 * C30802 * C30602 +
                                      C30802 * (C30602 + C30671 * C30823))));
    const double C30734 = C30731 + C30703;
    const double C30733 = C30728 + C30700;
    const double C30791 = -C30788;
    const double C30840 = -C30837;
    const double C30866 = C30861 / C30523;
    const double C30915 = C30522 * C30912;
    const double C30956 = C30955 / C30394;
    const double C30893 = C30888 / C30523;
    const double C30593 = C30583 - C30590;
    const double C30732 = C30714 - C30727;
    const double C30797 = C30795 / C30365;
    const double C5671 = C31314 * C5643;
    const double C6097 = C31314 * C5645;
    const double C30846 = C30844 / C30365;
    const double C30872 = C30870 - C30865;
    const double C30920 = C30919 / C30365;
    const double C30899 = C30897 - C30892;
    const double C5501 =
        5 * ((-3 * C31125) / C30394 + C30753 * C31138) +
        C30753 * (4 * C31138 +
                  C30753 * ((-3 * C30787) / C30394 +
                            C30753 * ((-2 * C30855) / C30394 -
                                      (C30753 * (C30699 * C30774 + C30623)) /
                                          C30394)));
    const double C5642 =
        (-2 * C31118) / C30394 - (C30753 * C31125) / C30394 + C31138 * C30823;
    const double C5644 = C30802 * ((-3 * C31125) / C30394 + C30753 * C31138);
    const double C5647 =
        (-3 * C31125) / C30394 + C30753 * C31138 +
        ((-3 * C30787) / C30394 +
         C30753 * ((-2 * C30855) / C30394 -
                   (C30753 * (C30699 * C30774 + C30623)) / C30394)) *
            C30823;
    const double C6090 =
        C30802 *
        (4 * C31138 +
         C30753 * ((-3 * C30787) / C30394 +
                   C30753 * ((-2 * C30855) / C30394 -
                             (C30753 * (C30699 * C30774 + C30623)) / C30394)));
    const double C6767 =
        2 * C30802 * C31138 +
        C30802 * (C31138 + ((-2 * C30855) / C30394 -
                            (C30753 * (C30699 * C30774 + C30623)) / C30394) *
                               C30823);
    const double C10824 =
        5 * ((-3 * C31169) / C30394 + C30802 * C31182) +
        C30802 * (4 * C31182 +
                  C30802 * ((-3 * C30836) / C30394 +
                            C30802 * ((-2 * C30882) / C30394 -
                                      (C30802 * (C30699 * C30823 + C30623)) /
                                          C30394)));
    const double C30730 = C30677 + C30724;
    const double C30729 = C30723 / C30394;
    const double C31641 = C31423 * C31417;
    const double C31675 = C31643 + C31423;
    const double C31645 = C31430 / C30400;
    const double C31642 = C31430 * C31417;
    const double C1301 = C31706 - (C31423 * C31419) / C30394;
    const double C31647 = C31463 * C31457;
    const double C31681 = C31649 + C31463;
    const double C31651 = C31470 / C30400;
    const double C31648 = C31470 * C31457;
    const double C2133 = C31708 - (C31463 * C31459) / C30394;
    const double C5510 = C4747 * C1030;
    const double C5507 = C4739 * C1030;
    const double C5794 = C4735 * C30420;
    const double C7000 = C4735 * C2464;
    const double C4752 = C4734 * C259;
    const double C5413 = C4734 * C31701;
    const double C5506 = C4734 * C31327;
    const double C5793 = C4734 * C31624;
    const double C6999 = C4734 * C2457;
    const double C7293 = C4734 * C31332;
    const double C5505 = C4733 * C1030;
    const double C5653 = C5286 * C1030;
    const double C5655 = C5280 * C1030;
    const double C5525 = C5521 * C1030;
    const double C5685 = C5677 * C1030;
    const double C5683 = C5675 * C1030;
    const double C5681 = C5673 * C1030;
    const double C6785 = C6781 * C1030;
    const double C10158 = C9461 * C1030;
    const double C10155 = C9453 * C1030;
    const double C10410 = C9449 * C30420;
    const double C11592 = C9449 * C2464;
    const double C9466 = C9448 * C259;
    const double C10154 = C9448 * C31327;
    const double C10409 = C9448 * C31624;
    const double C10625 = C9448 * C31701;
    const double C11591 = C9448 * C2457;
    const double C11871 = C9448 * C31332;
    const double C10153 = C9447 * C1030;
    const double C10842 = C10838 * C1030;
    const double C11247 = C11245 * C1030;
    const double C30443 = C30434 - C30440;
    const double C30433 = C30428 * de;
    const double C120 =
        (C30455 / C30400 + (0 * ce) / C30394) / C30400 - (0 * de) / C30394;
    const double C568 = C30455 / C30400 - (0 * de) / C30394;
    const double C2358 = C30455 / C30400 + (0 * ce) / C30394;
    const double C30432 = C30427 * ce;
    const double C265 =
        ((-C30395 / C30394) / C30400 - (C30413 * de) / C30394) / C30400 -
        ((C30392 * ((-C30402) / C30400 - (C30427 * de) / C30394) + C2457) *
         de) /
            C30394 +
        (-C30414 / C30394) / C30400 - (0 * de) / C30394;
    const double C266 =
        ((-C30402) / C30400 - (C30427 * de) / C30394) / C30400 -
        ((C30392 * ((-C30414 / C30394) / C30400 - (0 * de) / C30394) + C31337) *
         de) /
            C30394;
    const double C2463 = (-C30402) / C30400 - (C30427 * de) / C30394;
    const double C31656 = C31623 / C30394;
    const double C31689 = C31660 / C30400;
    const double C31690 = C31662 + C31631;
    const double C561 = C31631 - C31338 / C30406;
    const double C31659 = C31627 / C30394;
    const double C4983 = C4734 * C559;
    const double C9686 = C9448 * C559;
    const double C4755 = C4737 * C267;
    const double C5416 = C4737 * C961;
    const double C7296 = C4737 * C30455;
    const double C5798 = C4741 * C30420;
    const double C7004 = C4741 * C2464;
    const double C9469 = C9451 * C267;
    const double C10628 = C9451 * C961;
    const double C11874 = C9451 * C30455;
    const double C10414 = C9455 * C30420;
    const double C11596 = C9455 * C2464;
    const double C5970 = C5278 * C30420;
    const double C7166 = C5278 * C2464;
    const double C4754 = C4736 * C260;
    const double C5415 = C4736 * C31688;
    const double C5795 = C4736 * C31337;
    const double C7001 = C4736 * C31337;
    const double C7295 = C4736 * C31340;
    const double C4758 = C4740 * C259;
    const double C4993 = C4740 * C559;
    const double C5419 = C4740 * C31701;
    const double C5508 = C4740 * C31327;
    const double C5797 = C4740 * C31624;
    const double C7003 = C4740 * C2457;
    const double C7299 = C4740 * C31332;
    const double C9468 = C9450 * C260;
    const double C10411 = C9450 * C31337;
    const double C10627 = C9450 * C31688;
    const double C11593 = C9450 * C31337;
    const double C11873 = C9450 * C31340;
    const double C9472 = C9454 * C259;
    const double C9696 = C9454 * C559;
    const double C10156 = C9454 * C31327;
    const double C10413 = C9454 * C31624;
    const double C10631 = C9454 * C31701;
    const double C11595 = C9454 * C2457;
    const double C11877 = C9454 * C31332;
    const double C5291 = C5279 * C259;
    const double C5654 = C5279 * C31327;
    const double C5971 = C5279 * C31624;
    const double C7167 = C5279 * C2457;
    const double C7462 = C5279 * C31332;
    const double C8517 = C5279 * C31701;
    const double C25333 = C5279 * C559;
    const double C136 = (3 * (C30537 + C30522 * C30556 + C30545 * ae) +
                         C30522 * (2 * C30556 + C30522 * C30595 + C30576 * ae) +
                         (2 * C30545 + C30522 * C30576) * ae) /
                        C30365;
    const double C280 =
        (C30753 * (2 * C30556 + C30522 * C30595 + C30576 * ae)) / C30365;
    const double C290 =
        (C30537 + C30522 * C30556 + C30545 * ae + C30595 * C30774) / C30365;
    const double C433 =
        (C30802 * (2 * C30556 + C30522 * C30595 + C30576 * ae)) / C30365;
    const double C443 =
        (C30537 + C30522 * C30556 + C30545 * ae + C30595 * C30823) / C30365;
    const double C830 = (C30802 * C30753 * C30595) / C30365;
    const double C5800 = C4745 * C30420;
    const double C7006 = C4745 * C2464;
    const double C6562 = C6558 * C30420;
    const double C7176 = C6558 * C2464;
    const double C5974 = C5284 * C30420;
    const double C7170 = C5284 * C2464;
    const double C10999 = C9459 * C30420;
    const double C11598 = C9459 * C2464;
    const double C30650 = C30637 - C30647;
    const double C30770 = C30769 - C30766;
    const double C30819 = C30818 - C30815;
    const double C5528 = C5524 * C1030;
    const double C10845 = C10841 * C1030;
    const double C301 =
        2 * ((-(C30753 * C30550 * ce) / C30394) / C30365 -
             (ae * C30753 * C30549) / C30523 - (C30522 * C30757) / C30523) -
        (ae * C30753 * C30594) / C30523 - (C30753 * C30595 * ce) / C30523 +
        C30522 * ((-(ae * C30753 * C30585) / C30394) / C30365 -
                  C30757 / C30523 - (C30753 * C30586 * ce) / C30523 +
                  C30522 * ((-(C30753 * C30577 * ce) / C30394) / C30365 -
                            (ae * C30753 * C30574) / C30523 -
                            (C30522 * C30753 * C30638) / C30523));
    const double C454 =
        2 * ((-(C30802 * C30550 * ce) / C30394) / C30365 -
             (ae * C30802 * C30549) / C30523 - (C30522 * C30806) / C30523) -
        (ae * C30802 * C30594) / C30523 - (C30802 * C30595 * ce) / C30523 +
        C30522 * ((-(ae * C30802 * C30585) / C30394) / C30365 -
                  C30806 / C30523 - (C30802 * C30586 * ce) / C30523 +
                  C30522 * ((-(C30802 * C30577 * ce) / C30394) / C30365 -
                            (ae * C30802 * C30574) / C30523 -
                            (C30522 * C30802 * C30638) / C30523));
    const double C137 =
        (-3 * (C30522 * C30555 + C30536 + C30545 * ce)) / C30394 +
        C30522 * ((-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
                  (C30576 * ce) / C30394) -
        ((2 * C30545 + C30522 * C30576) * ce) / C30394;
    const double C285 =
        C30753 * ((-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
                  (C30576 * ce) / C30394);
    const double C293 =
        -(C30594 * C30774 + C30522 * C30555 + C30536 + C30545 * ce) / C30394;
    const double C438 =
        C30802 * ((-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
                  (C30576 * ce) / C30394);
    const double C446 =
        -(C30594 * C30823 + C30522 * C30555 + C30536 + C30545 * ce) / C30394;
    const double C833 = -(C30802 * C30753 * C30594) / C30394;
    const double C30628 = C30620 / C30365;
    const double C5281 = C5260 + C5261;
    const double C14512 = C14494 + C14495;
    const double C14508 = C14486 + C14487;
    const double C5674 = C5658 + C5659;
    const double C14942 = C14920 + C14921;
    const double C4756 = C4738 * C31661;
    const double C5417 = C4738 * C31661;
    const double C7297 = C4738 * C2723;
    const double C4760 = C4742 * C260;
    const double C5421 = C4742 * C31688;
    const double C5799 = C4742 * C31337;
    const double C7005 = C4742 * C31337;
    const double C7301 = C4742 * C31340;
    const double C9470 = C9452 * C31661;
    const double C10629 = C9452 * C31661;
    const double C11875 = C9452 * C2723;
    const double C9474 = C9456 * C260;
    const double C10415 = C9456 * C31337;
    const double C10633 = C9456 * C31688;
    const double C11597 = C9456 * C31337;
    const double C11879 = C9456 * C31340;
    const double C4764 = C4746 * C259;
    const double C5425 = C4746 * C31701;
    const double C5509 = C4746 * C31327;
    const double C5801 = C4746 * C31624;
    const double C7007 = C4746 * C2457;
    const double C7305 = C4746 * C31332;
    const double C5297 = C5285 * C259;
    const double C5652 = C5285 * C31327;
    const double C5975 = C5285 * C31624;
    const double C7171 = C5285 * C2457;
    const double C7468 = C5285 * C31332;
    const double C8523 = C5285 * C31701;
    const double C9478 = C9460 * C259;
    const double C10157 = C9460 * C31327;
    const double C10637 = C9460 * C31701;
    const double C11000 = C9460 * C31624;
    const double C11599 = C9460 * C2457;
    const double C12658 = C9460 * C31332;
    const double C30655 = C30522 * C30652;
    const double C30678 = 3 * C30652;
    const double C30665 = C30652 * ce;
    const double C31116 = C30753 * C30652;
    const double C1040 =
        (2 * C30753 * C30595 + C30753 * (C30595 + C30652 * C30774)) / C30365;
    const double C1177 = (C30753 * C30595 + C30753 * C30652 * C30823) / C30365;
    const double C1183 = (C30802 * (C30595 + C30652 * C30774)) / C30365;
    const double C1870 =
        (2 * C30802 * C30595 + C30802 * (C30595 + C30652 * C30823)) / C30365;
    const double C11012 = C11006 + C11007;
    const double C16292 = C16286 + C16287;
    const double C5816 = C5812 * C30420;
    const double C7012 = C5812 * C2464;
    const double C6564 = C6560 * C30420;
    const double C7180 = C6560 * C2464;
    const double C5988 = C5985 * C30420;
    const double C7622 = C5985 * C2464;
    const double C11133 = C11130 * C30420;
    const double C12395 = C11130 * C2464;
    const double C14146 = C13650 * C272;
    const double C4998 = C4585 * C276;
    const double C13838 = C13650 * C276;
    const double C19966 = C13650 * C425;
    const double C9701 = C4585 * C429;
    const double C19674 = C13650 * C429;
    const double C14498 = C13650 * C826;
    const double C25338 = C4585 * C826;
    const double C30654 = C30522 * C30651;
    const double C30674 = -3 * C30651;
    const double C30664 = ae * C30651;
    const double C841 =
        2 * ((-(C30802 * C30759 * ce) / C30394) / C30365 -
             (ae * C30802 * C30760) / C30523 - (C30522 * C30908) / C30523) -
        (ae * C30802 * C30753 * C30651) / C30523 -
        (C30802 * C30753 * C30652 * ce) / C30523 +
        C30522 * ((-(ae * C30802 * C30851) / C30394) / C30365 -
                  C30908 / C30523 - (C30802 * C30853 * ce) / C30523 +
                  C30522 * ((-(C30802 * C30854 * ce) / C30394) / C30365 -
                            (ae * C30802 * C30855) / C30523 -
                            (C30522 * C30802 * C30856) / C30523));
    const double C31122 = C30753 * C30651;
    const double C1037 = (-2 * C30753 * C30594) / C30394 -
                         (C30753 * (C30651 * C30774 + C30594)) / C30394;
    const double C1174 = -(C30753 * C30651 * C30823 + C30753 * C30594) / C30394;
    const double C1180 = -(C30802 * (C30651 * C30774 + C30594)) / C30394;
    const double C1867 = (-2 * C30802 * C30594) / C30394 -
                         (C30802 * (C30651 * C30823 + C30594)) / C30394;
    const double C30705 = C30696 / C30365;
    const double C30867 = -C30862;
    const double C30894 = -C30889;
    const double C9866 = C31314 * C1192;
    const double C16015 = C13646 * C1192;
    const double C6559 = C6550 + C6551;
    const double C14943 = C14922 + C14923;
    const double C16021 = C16016 + C16017;
    const double C6780 = C6774 + C6775;
    const double C16291 = C16284 + C16285;
    const double C30780 = C30779 / C30365;
    const double C30829 = C30828 / C30365;
    const double C5670 = C4585 * C5639;
    const double C6096 = C4585 * C5640;
    const double C6783 = C6779 * C1030;
    const double C30737 = C30522 * C30734;
    const double C1045 =
        (3 * (C30595 + C30652 * C30774) +
         C30753 * (2 * C30753 * C30652 + C30753 * (C30652 + C30734 * C30774))) /
        C30365;
    const double C1188 =
        (C30595 + C30652 * C30774 + (C30652 + C30734 * C30774) * C30823) /
        C30365;
    const double C1564 =
        (C30802 * (2 * C30753 * C30652 + C30753 * (C30652 + C30734 * C30774))) /
        C30365;
    const double C1875 =
        (3 * (C30595 + C30652 * C30823) +
         C30802 * (2 * C30802 * C30652 + C30802 * (C30652 + C30734 * C30823))) /
        C30365;
    const double C30736 = C30522 * C30733;
    const double C1048 =
        (-3 * (C30651 * C30774 + C30594)) / C30394 +
        C30753 * ((-2 * C30753 * C30651) / C30394 -
                  (C30753 * (C30733 * C30774 + C30651)) / C30394);
    const double C1191 =
        -((C30733 * C30774 + C30651) * C30823 + C30651 * C30774 + C30594) /
        C30394;
    const double C1567 =
        C30802 * ((-2 * C30753 * C30651) / C30394 -
                  (C30753 * (C30733 * C30774 + C30651)) / C30394);
    const double C1878 =
        (-3 * (C30651 * C30823 + C30594)) / C30394 +
        C30802 * ((-2 * C30802 * C30651) / C30394 -
                  (C30802 * (C30733 * C30823 + C30651)) / C30394);
    const double C30794 = C30791 / C30365;
    const double C30843 = C30840 / C30365;
    const double C30918 = C30915 / C30523;
    const double C30957 = -C30956;
    const double C146 =
        3 * ((-(ae * C30555) / C30394) / C30365 - C30554 / C30523 -
             (C30556 * ce) / C30523 + C30522 * C30593) +
        (((-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
          (C30576 * ce) / C30394) *
         ae) /
            C30365 -
        ((2 * C30556 + C30522 * C30595 + C30576 * ae) * ce) / C30523 +
        C30522 * (2 * C30593 - (ae * C30594) / C30523 - (C30595 * ce) / C30523 +
                  C30522 * ((-(ae * C30585) / C30394) / C30365 -
                            C30584 / C30523 - (C30586 * ce) / C30523 +
                            C30522 * ((-(C30577 * ce) / C30394) / C30365 -
                                      (ae * C30574) / C30523 -
                                      (C30522 *
                                       (C30561 * C30562 +
                                        C30530 * bs[6] * std::pow(C30520, 6)) *
                                       C30531) /
                                          C30523)));
    const double C30735 = C30522 * C30732;
    const double C30799 = C30797 - C30793;
    const double C30848 = C30846 - C30842;
    const double C30874 = C30872 - C30866;
    const double C30921 = C30920 - C30917;
    const double C30901 = C30899 - C30893;
    const double C5668 = C4585 * C5642;
    const double C6094 = C4585 * C5644;
    const double C127 = 5 * (3 * C30576 + C30522 * C30641) +
                        C30522 * (4 * C30641 + C30522 * C30730);
    const double C277 = 3 * C30576 + C30522 * C30641 + C30730 * C30774;
    const double C430 = 3 * C30576 + C30522 * C30641 + C30730 * C30823;
    const double C569 = C30753 * (4 * C30641 + C30522 * C30730);
    const double C673 = C30802 * (4 * C30641 + C30522 * C30730);
    const double C827 = C30802 * C30753 * C30730;
    const double C31672 = C31641 / C30394;
    const double C31696 = C31675 / C30400;
    const double C31697 = C31676 + C31645;
    const double C1303 = C31645 - C31428 / C30406;
    const double C31674 = C31642 / C30394;
    const double C31678 = C31647 / C30394;
    const double C31699 = C31681 / C30400;
    const double C31700 = C31682 + C31651;
    const double C2135 = C31651 - C31468 / C30406;
    const double C31680 = C31648 / C30394;
    const double C30437 = C30433 / C30394;
    const double C30436 = C30432 / C30394;
    const double C4765 = C4747 * C265;
    const double C4757 = C4739 * C265;
    const double C4751 = C4733 * C265;
    const double C5298 = C5286 * C265;
    const double C5292 = C5280 * C265;
    const double C9479 = C9461 * C265;
    const double C9471 = C9453 * C265;
    const double C9465 = C9447 * C265;
    const double C9861 = C5673 * C265;
    const double C4763 = C4745 * C266;
    const double C4759 = C4741 * C266;
    const double C4753 = C4735 * C266;
    const double C5296 = C5284 * C266;
    const double C5290 = C5278 * C266;
    const double C9477 = C9459 * C266;
    const double C9473 = C9455 * C266;
    const double C9467 = C9449 * C266;
    const double C9859 = C6558 * C266;
    const double C7010 = C5521 * C2463;
    const double C7008 = C4747 * C2463;
    const double C7002 = C4739 * C2463;
    const double C6998 = C4733 * C2463;
    const double C7178 = C5675 * C2463;
    const double C7174 = C5673 * C2463;
    const double C7172 = C5286 * C2463;
    const double C7168 = C5280 * C2463;
    const double C7620 = C5677 * C2463;
    const double C11603 = C6781 * C2463;
    const double C11600 = C9461 * C2463;
    const double C11594 = C9453 * C2463;
    const double C11590 = C9447 * C2463;
    const double C12393 = C10838 * C2463;
    const double C31710 = C31656 + C31702;
    const double C560 = C31689 - (C31340 * C31323) / C30394;
    const double C6889 = C4738 * C31690;
    const double C12137 = C9452 * C31690;
    const double C107 = C31690 / C30400 - C31338 / C31663;
    const double C4987 = C4738 * C561;
    const double C9690 = C9452 * C561;
    const double C31703 = C31659 + C31689;
    const double C5519 = C5507 + C5508;
    const double C10161 = C10155 + C10156;
    const double C26055 = C5654 + C5655;
    const double C26054 = C5655 + C5654;
    const double C4989 = C31314 * C280;
    const double C13817 = C13646 * C280;
    const double C14149 = C13645 * C280;
    const double C4718 = C31314 * C290;
    const double C13841 = C13645 * C290;
    const double C13825 = C13646 * C290;
    const double C9692 = C31314 * C433;
    const double C19653 = C13646 * C433;
    const double C19969 = C13645 * C433;
    const double C9432 = C31314 * C443;
    const double C19677 = C13645 * C443;
    const double C19661 = C13646 * C443;
    const double C5263 = C31314 * C830;
    const double C14501 = C13645 * C830;
    const double C14485 = C13646 * C830;
    const double C30653 = C30522 * C30650;
    const double C30663 = 2 * C30650;
    const double C30771 = C30770 - C30767;
    const double C30820 = C30819 - C30816;
    const double C4991 = C31314 * C301;
    const double C13821 = C13646 * C301;
    const double C14153 = C13645 * C301;
    const double C9694 = C31314 * C454;
    const double C19657 = C13646 * C454;
    const double C19973 = C13645 * C454;
    const double C4990 = C4585 * C285;
    const double C13820 = C13650 * C285;
    const double C14152 = C13649 * C285;
    const double C4719 = C4585 * C293;
    const double C13844 = C13649 * C293;
    const double C13836 = C13650 * C293;
    const double C9693 = C4585 * C438;
    const double C19656 = C13650 * C438;
    const double C19972 = C13649 * C438;
    const double C9433 = C4585 * C446;
    const double C19680 = C13649 * C446;
    const double C19672 = C13650 * C446;
    const double C5264 = C4585 * C833;
    const double C14504 = C13649 * C833;
    const double C14496 = C13650 * C833;
    const double C30636 = C30628 - C30598;
    const double C5293 = C5281 * C260;
    const double C5973 = C5281 * C31337;
    const double C7169 = C5281 * C31337;
    const double C7464 = C5281 * C31340;
    const double C8519 = C5281 * C31688;
    const double C5682 = C5674 * C31327;
    const double C6547 = C5674 * C31624;
    const double C7175 = C5674 * C2457;
    const double C9860 = C5674 * C259;
    const double C11883 = C5674 * C31332;
    const double C12961 = C5674 * C31701;
    const double C5520 = C5509 + C5510;
    const double C5672 = C5652 + C5653;
    const double C26057 = C5653 + C5652;
    const double C10828 = C10157 + C10158;
    const double C30658 = C30607 + C30655;
    const double C30681 = C30665 / C30523;
    const double C2244 =
        (2 * C30802 * C31116 + C30802 * (C31116 + C30753 * C30734 * C30823)) /
        C30365;
    const double C4730 = C31314 * C1040;
    const double C15083 = C13646 * C1040;
    const double C9864 = C31314 * C1177;
    const double C16011 = C13646 * C1177;
    const double C5275 = C31314 * C1183;
    const double C15289 = C13646 * C1183;
    const double C9444 = C31314 * C1870;
    const double C21723 = C13646 * C1870;
    const double C11016 = C11012 * C30420;
    const double C11605 = C11012 * C2464;
    const double C30657 = C30654 / C30394;
    const double C30687 = C30674 / C30394;
    const double C30680 = C30664 / C30523;
    const double C14503 = C13646 * C841;
    const double C25341 = C31314 * C841;
    const double C2247 =
        (-2 * C30802 * C31122) / C30394 -
        (C30802 * (C30753 * C30733 * C30823 + C31122)) / C30394;
    const double C4731 = C4585 * C1037;
    const double C15086 = C13650 * C1037;
    const double C9865 = C4585 * C1174;
    const double C16014 = C13650 * C1174;
    const double C5276 = C4585 * C1180;
    const double C15292 = C13650 * C1180;
    const double C9445 = C4585 * C1867;
    const double C21726 = C13650 * C1867;
    const double C30713 = C30705 - C30667;
    const double C30869 = C30867 / C30365;
    const double C30896 = C30894 / C30365;
    const double C6563 = C6559 * C31337;
    const double C7177 = C6559 * C31337;
    const double C9862 = C6559 * C260;
    const double C11885 = C6559 * C31340;
    const double C12963 = C6559 * C31688;
    const double C6784 = C6780 * C31327;
    const double C11005 = C6780 * C31624;
    const double C11604 = C6780 * C2457;
    const double C30781 = C30780 - C30598;
    const double C30830 = C30829 - C30598;
    const double C5680 = C5670 + C5671;
    const double C6099 = C6096 + C6097;
    const double C30740 = C30679 + C30737;
    const double C30739 = C30736 / C30394;
    const double C30796 = C30794 - C30667;
    const double C30845 = C30843 - C30667;
    const double C30958 = C30957 / C30365;
    const double C30875 = C30522 * C30874;
    const double C30922 = C30921 - C30918;
    const double C30902 = C30522 * C30901;
    const double C31711 = C31672 + C31706;
    const double C1302 = C31696 - (C31430 * C31419) / C30394;
    const double C1028 = C31697 / C30400 - C31428 / C31663;
    const double C31707 = C31674 + C31696;
    const double C31712 = C31678 + C31708;
    const double C2134 = C31699 - (C31470 * C31459) / C30394;
    const double C1859 = C31700 / C30400 - C31468 / C31663;
    const double C31709 = C31680 + C31699;
    const double C30439 = C30436 - C30415;
    const double C4769 = C4757 + C4758;
    const double C25671 = C5291 + C5292;
    const double C25670 = C5292 + C5291;
    const double C9483 = C9471 + C9472;
    const double C7015 = C7007 + C7008;
    const double C7014 = C7002 + C7003;
    const double C7619 = C7171 + C7172;
    const double C28370 = C7172 + C7171;
    const double C27818 = C7167 + C7168;
    const double C27817 = C7168 + C7167;
    const double C12392 = C11599 + C11600;
    const double C11607 = C11594 + C11595;
    const double C6893 = C4740 * C31710;
    const double C6885 = C4734 * C31710;
    const double C12141 = C9454 * C31710;
    const double C12133 = C9448 * C31710;
    const double C27486 = C5279 * C31710;
    const double C104 =
        (C31701 + 2 * C31332) / C30400 - (C31710 * C31323) / C30394;
    const double C4995 = C4742 * C560;
    const double C4985 = C4736 * C560;
    const double C9698 = C9456 * C560;
    const double C9688 = C9450 * C560;
    const double C25335 = C5281 * C560;
    const double C6895 = C4742 * C31703;
    const double C6887 = C4736 * C31703;
    const double C12143 = C9456 * C31703;
    const double C12135 = C9450 * C31703;
    const double C27488 = C5281 * C31703;
    const double C105 =
        (C31688 + 2 * C31340 + C31710) / C30400 - (C31703 * C31323) / C30394;
    const double C106 = (C31661 + C31337 / C30394 + C31703) / C30400 -
                        (C31690 * C31323) / C30394;
    const double C10163 = C10161 * C31548;
    const double C5002 = C4988 + C4989;
    const double C13855 = C13816 + C13817;
    const double C14155 = C14148 + C14149;
    const double C4743 = C4717 + C4718;
    const double C13867 = C13840 + C13841;
    const double C13859 = C13824 + C13825;
    const double C9705 = C9691 + C9692;
    const double C19691 = C19652 + C19653;
    const double C19975 = C19968 + C19969;
    const double C9457 = C9431 + C9432;
    const double C19703 = C19676 + C19677;
    const double C19695 = C19660 + C19661;
    const double C5282 = C5262 + C5263;
    const double C14515 = C14500 + C14501;
    const double C14507 = C14484 + C14485;
    const double C5003 = C4990 + C4991;
    const double C13857 = C13820 + C13821;
    const double C14157 = C14152 + C14153;
    const double C4744 = C4719 + C4720;
    const double C13869 = C13844 + C13845;
    const double C13865 = C13836 + C13837;
    const double C9706 = C9693 + C9694;
    const double C19693 = C19656 + C19657;
    const double C19977 = C19972 + C19973;
    const double C9458 = C9433 + C9434;
    const double C19705 = C19680 + C19681;
    const double C19701 = C19672 + C19673;
    const double C5283 = C5264 + C5265;
    const double C14517 = C14504 + C14505;
    const double C14513 = C14496 + C14497;
    const double C30643 = C30636 - C30609;
    const double C10159 = C5682 + C5681;
    const double C26056 = C5681 + C5682;
    const double C11602 = C7175 + C7174;
    const double C27819 = C7174 + C7175;
    const double C10837 = C10828 * C31548;
    const double C30660 = C30658 + C30635;
    const double C4749 = C4729 + C4730;
    const double C15090 = C15082 + C15083;
    const double C9867 = C9863 + C9864;
    const double C16018 = C16010 + C16011;
    const double C5288 = C5274 + C5275;
    const double C15296 = C15288 + C15289;
    const double C9463 = C9443 + C9444;
    const double C21730 = C21722 + C21723;
    const double C30659 = C30613 - C30657;
    const double C30695 = C30663 - C30680;
    const double C9868 = C9865 + C9866;
    const double C16020 = C16014 + C16015;
    const double C30720 = C30713 - C30683;
    const double C30871 = C30869 - C30852;
    const double C30898 = C30896 - C30879;
    const double C11238 = C6785 + C6784;
    const double C27354 = C6784 + C6785;
    const double C306 =
        2 * ((-((C30550 + C30577 * C30774) * ce) / C30394) / C30365 -
             (ae * (C30574 * C30774 + C30549)) / C30523 + C30522 * C30781) -
        (ae * (C30651 * C30774 + C30594)) / C30523 -
        ((C30595 + C30652 * C30774) * ce) / C30523 +
        C30522 *
            (C30781 - (ae * (C30639 * C30774 + C30585)) / C30523 -
             ((C30586 + C30642 * C30774) * ce) / C30523 +
             C30522 *
                 ((-((C30577 + C30626 * C30774) * ce) / C30394) / C30365 -
                  (ae * (C30623 * C30774 + C30574)) / C30523 +
                  C30522 * ((-(C30715 * C30774) / C30394) / C30365 - C30667)));
    const double C1050 =
        (((-2 * C30753 * C30549) / C30394 -
          (C30753 * (C30574 * C30774 + C30549)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30753 * C30550 + C30753 * (C30550 + C30577 * C30774)) * ce) /
            C30523 +
        C30522 * ((-2 * C30757) / C30523 + C30753 * C30781);
    const double C1052 =
        3 * ((-(C30584 * C30774) / C30394) / C30365 - C30554 / C30523) +
        C30753 * ((-2 * C30757) / C30523 + C30753 * C30781);
    const double C1196 =
        (-(C30802 * (C30550 + C30577 * C30774) * ce) / C30394) / C30365 -
        (ae * C30802 * (C30574 * C30774 + C30549)) / C30523 +
        C30522 * C30802 * C30781;
    const double C1198 = (-(C30584 * C30774) / C30394) / C30365 -
                         C30554 / C30523 + C30781 * C30823;
    const double C1568 = C30802 * ((-2 * C30757) / C30523 + C30753 * C30781);
    const double C459 =
        2 * ((-((C30550 + C30577 * C30823) * ce) / C30394) / C30365 -
             (ae * (C30574 * C30823 + C30549)) / C30523 + C30522 * C30830) -
        (ae * (C30651 * C30823 + C30594)) / C30523 -
        ((C30595 + C30652 * C30823) * ce) / C30523 +
        C30522 *
            (C30830 - (ae * (C30639 * C30823 + C30585)) / C30523 -
             ((C30586 + C30642 * C30823) * ce) / C30523 +
             C30522 *
                 ((-((C30577 + C30626 * C30823) * ce) / C30394) / C30365 -
                  (ae * (C30623 * C30823 + C30574)) / C30523 +
                  C30522 * ((-(C30715 * C30823) / C30394) / C30365 - C30667)));
    const double C1880 =
        (((-2 * C30802 * C30549) / C30394 -
          (C30802 * (C30574 * C30823 + C30549)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30802 * C30550 + C30802 * (C30550 + C30577 * C30823)) * ce) /
            C30523 +
        C30522 * ((-2 * C30806) / C30523 + C30802 * C30830);
    const double C1882 =
        3 * ((-(C30584 * C30823) / C30394) / C30365 - C30554 / C30523) +
        C30802 * ((-2 * C30806) / C30523 + C30802 * C30830);
    const double C5688 = C5680 * C1030;
    const double C6101 = C6099 * C1030;
    const double C30743 = C30740 + C30712;
    const double C30742 = C30688 - C30739;
    const double C30798 = C30522 * C30796;
    const double C30940 = C30753 * C30796;
    const double C30944 = C30802 * C30796;
    const double C1049 =
        (-2 * C30757) / C30523 + C30753 * C30781 +
        (((-2 * C30753 * C30585) / C30394 -
          (C30753 * (C30639 * C30774 + C30585)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30753 * C30586 + C30753 * (C30586 + C30642 * C30774)) * ce) /
            C30523 +
        C30522 * ((((-2 * C30760) / C30394 - (C30753 * C30787) / C30394) * ae) /
                      C30365 -
                  ((2 * C30759 + C30753 * C30786) * ce) / C30523 +
                  C30522 * ((-2 * C30761) / C30523 + C30753 * C30796));
    const double C1053 =
        (((-3 * (C30574 * C30774 + C30549)) / C30394 +
          C30753 * ((-2 * C30760) / C30394 - (C30753 * C30787) / C30394)) *
         ae) /
            C30365 -
        ((3 * (C30550 + C30577 * C30774) +
          C30753 * (2 * C30759 + C30753 * C30786)) *
         ce) /
            C30523 +
        C30522 *
            (3 * C30781 + C30753 * ((-2 * C30761) / C30523 + C30753 * C30796));
    const double C1054 =
        3 * C30781 + C30753 * ((-2 * C30761) / C30523 + C30753 * C30796) +
        (((-3 * (C30639 * C30774 + C30585)) / C30394 +
          C30753 * ((-2 * C30851) / C30394 -
                    (C30753 * (C30716 * C30774 + C30639)) / C30394)) *
         ae) /
            C30365 -
        ((3 * (C30586 + C30642 * C30774) +
          C30753 * (2 * C30853 + C30753 * (C30642 + C30719 * C30774))) *
         ce) /
            C30523 +
        C30522 *
            ((((-3 * C30787) / C30394 +
               C30753 * ((-2 * C30855) / C30394 -
                         (C30753 * (C30699 * C30774 + C30623)) / C30394)) *
              ae) /
                 C30365 -
             ((3 * C30786 +
               C30753 * (2 * C30854 + C30753 * (C30626 + C30702 * C30774))) *
              ce) /
                 C30523 +
             C30522 *
                 (3 * C30796 +
                  C30753 *
                      ((-2 * C30856) / C30523 +
                       C30753 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30774) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523))));
    const double C1195 =
        C30802 * C30781 - (ae * C30802 * (C30639 * C30774 + C30585)) / C30523 -
        (C30802 * (C30586 + C30642 * C30774) * ce) / C30523 +
        C30522 * ((-(C30802 * C30786 * ce) / C30394) / C30365 -
                  (ae * C30802 * C30787) / C30523 + C30522 * C30802 * C30796);
    const double C1199 =
        (-((C30550 + C30577 * C30774 + C30786 * C30823) * ce) / C30394) /
            C30365 -
        (ae * (C30787 * C30823 + C30574 * C30774 + C30549)) / C30523 +
        C30522 * (C30781 + C30796 * C30823);
    const double C1200 =
        C30781 + C30796 * C30823 -
        (ae *
         ((C30716 * C30774 + C30639) * C30823 + C30639 * C30774 + C30585)) /
            C30523 -
        ((C30586 + C30642 * C30774 + (C30642 + C30719 * C30774) * C30823) *
         ce) /
            C30523 +
        C30522 *
            ((-((C30786 + (C30626 + C30702 * C30774) * C30823) * ce) / C30394) /
                 C30365 -
             (ae * ((C30699 * C30774 + C30623) * C30823 + C30787)) / C30523 +
             C30522 *
                 (C30796 +
                  ((-((C30672 * C30673 + C30530 * bs[8] * std::pow(C30520, 8)) *
                      C30531 * C30774) /
                    C30394) /
                       C30365 -
                   C30715 / C30523) *
                      C30823));
    const double C5968 =
        (C30802 *
         ((-3 * C30787) / C30394 +
          C30753 * ((-2 * C30855) / C30394 -
                    (C30753 * (C30699 * C30774 + C30623)) / C30394)) *
         ae) /
            C30365 -
        (C30802 *
         (3 * C30786 +
          C30753 * (2 * C30854 + C30753 * (C30626 + C30702 * C30774))) *
         ce) /
            C30523 +
        C30522 * C30802 *
            (3 * C30796 +
             C30753 * ((-2 * C30856) / C30523 +
                       C30753 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30774) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523)));
    const double C6392 =
        2 * C30802 * C30781 + C30802 * (C30781 + C30796 * C30823);
    const double C30847 = C30522 * C30845;
    const double C30962 = C30802 * C30845;
    const double C1879 =
        (-2 * C30806) / C30523 + C30802 * C30830 +
        (((-2 * C30802 * C30585) / C30394 -
          (C30802 * (C30639 * C30823 + C30585)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30802 * C30586 + C30802 * (C30586 + C30642 * C30823)) * ce) /
            C30523 +
        C30522 * ((((-2 * C30809) / C30394 - (C30802 * C30836) / C30394) * ae) /
                      C30365 -
                  ((2 * C30808 + C30802 * C30835) * ce) / C30523 +
                  C30522 * ((-2 * C30810) / C30523 + C30802 * C30845));
    const double C1883 =
        (((-3 * (C30574 * C30823 + C30549)) / C30394 +
          C30802 * ((-2 * C30809) / C30394 - (C30802 * C30836) / C30394)) *
         ae) /
            C30365 -
        ((3 * (C30550 + C30577 * C30823) +
          C30802 * (2 * C30808 + C30802 * C30835)) *
         ce) /
            C30523 +
        C30522 *
            (3 * C30830 + C30802 * ((-2 * C30810) / C30523 + C30802 * C30845));
    const double C1884 =
        3 * C30830 + C30802 * ((-2 * C30810) / C30523 + C30802 * C30845) +
        (((-3 * (C30639 * C30823 + C30585)) / C30394 +
          C30802 * ((-2 * C30878) / C30394 -
                    (C30802 * (C30716 * C30823 + C30639)) / C30394)) *
         ae) /
            C30365 -
        ((3 * (C30586 + C30642 * C30823) +
          C30802 * (2 * C30880 + C30802 * (C30642 + C30719 * C30823))) *
         ce) /
            C30523 +
        C30522 *
            ((((-3 * C30836) / C30394 +
               C30802 * ((-2 * C30882) / C30394 -
                         (C30802 * (C30699 * C30823 + C30623)) / C30394)) *
              ae) /
                 C30365 -
             ((3 * C30835 +
               C30802 * (2 * C30881 + C30802 * (C30626 + C30702 * C30823))) *
              ce) /
                 C30523 +
             C30522 *
                 (3 * C30845 +
                  C30802 *
                      ((-2 * C30883) / C30523 +
                       C30802 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523))));
    const double C30959 = C30958 - C30852;
    const double C1025 =
        (C31704 + 2 * C31423) / C30400 - (C31711 * C31419) / C30394;
    const double C1026 =
        (C31692 + 2 * C31430 + C31711) / C30400 - (C31707 * C31419) / C30394;
    const double C1027 = (C31667 + C31427 / C30394 + C31707) / C30400 -
                         (C31697 * C31419) / C30394;
    const double C1856 =
        (C31705 + 2 * C31463) / C30400 - (C31712 * C31459) / C30394;
    const double C1857 =
        (C31694 + 2 * C31470 + C31712) / C30400 - (C31709 * C31459) / C30394;
    const double C1858 = (C31670 + C31467 / C30394 + C31709) / C30400 -
                         (C31700 * C31459) / C30394;
    const double C5804 = C5521 * C30439;
    const double C5802 = C4747 * C30439;
    const double C5796 = C4739 * C30439;
    const double C5792 = C4733 * C30439;
    const double C5978 = C5677 * C30439;
    const double C5976 = C5286 * C30439;
    const double C5972 = C5280 * C30439;
    const double C6552 = C5675 * C30439;
    const double C6546 = C5673 * C30439;
    const double C10412 = C9453 * C30439;
    const double C10408 = C9447 * C30439;
    const double C11004 = C6781 * C30439;
    const double C11001 = C9461 * C30439;
    const double C11123 = C10838 * C30439;
    const double C30442 = C30439 / C30400;
    const double C30441 = C30392 * C30439;
    const double C4770 = C4769 - C4759;
    const double C25673 = C5290 - C25671;
    const double C25672 = C25670 - C5290;
    const double C9484 = C9483 - C9473;
    const double C7017 = C7006 - C7015;
    const double C7016 = C7014 - C7004;
    const double C7624 = C7170 - C7619;
    const double C28371 = C28370 - C7170;
    const double C27821 = C7166 - C27818;
    const double C27820 = C27817 - C7166;
    const double C12397 = C11598 - C12392;
    const double C11609 = C11607 - C11596;
    const double C5006 = C5002 * C568;
    const double C6890 = C5002 * C2358;
    const double C4761 = C4743 * C267;
    const double C5422 = C4743 * C961;
    const double C7302 = C4743 * C30455;
    const double C9709 = C9705 * C568;
    const double C12138 = C9705 * C2358;
    const double C9475 = C9457 * C267;
    const double C10634 = C9457 * C961;
    const double C11880 = C9457 * C30455;
    const double C5294 = C5282 * C267;
    const double C7465 = C5282 * C30455;
    const double C8520 = C5282 * C961;
    const double C5007 = C5003 * C31671;
    const double C6891 = C5003 * C31671;
    const double C4762 = C4744 * C31661;
    const double C4997 = C4744 * C561;
    const double C5423 = C4744 * C31661;
    const double C6897 = C4744 * C31690;
    const double C7303 = C4744 * C2723;
    const double C9710 = C9706 * C31671;
    const double C12139 = C9706 * C31671;
    const double C9476 = C9458 * C31661;
    const double C9700 = C9458 * C561;
    const double C10635 = C9458 * C31661;
    const double C11881 = C9458 * C2723;
    const double C12145 = C9458 * C31690;
    const double C5295 = C5283 * C31661;
    const double C7466 = C5283 * C2723;
    const double C8521 = C5283 * C31661;
    const double C25337 = C5283 * C561;
    const double C27490 = C5283 * C31690;
    const double C30656 = C30643 + C30653;
    const double C10162 = C10159 * C31548;
    const double C11608 = C7176 - C11602;
    const double C27822 = C27819 - C7176;
    const double C138 = (4 * (2 * C30556 + C30522 * C30595 + C30576 * ae) +
                         C30522 * (3 * C30595 + C30522 * C30660 + C30641 * ae) +
                         (3 * C30576 + C30522 * C30641) * ae) /
                        C30365;
    const double C286 =
        (C30753 * (3 * C30595 + C30522 * C30660 + C30641 * ae)) / C30365;
    const double C294 =
        (2 * C30556 + C30522 * C30595 + C30576 * ae + C30660 * C30774) / C30365;
    const double C439 =
        (C30802 * (3 * C30595 + C30522 * C30660 + C30641 * ae)) / C30365;
    const double C447 =
        (2 * C30556 + C30522 * C30595 + C30576 * ae + C30660 * C30823) / C30365;
    const double C834 = (C30802 * C30753 * C30660) / C30365;
    const double C4767 = C4749 * C267;
    const double C5428 = C4749 * C961;
    const double C7308 = C4749 * C30455;
    const double C9869 = C9867 * C267;
    const double C11886 = C9867 * C30455;
    const double C12964 = C9867 * C961;
    const double C5300 = C5288 * C267;
    const double C7471 = C5288 * C30455;
    const double C8526 = C5288 * C961;
    const double C9481 = C9463 * C267;
    const double C10640 = C9463 * C961;
    const double C12661 = C9463 * C30455;
    const double C30661 = C30659 - C30640;
    const double C30704 = C30695 - C30681;
    const double C9870 = C9868 * C31661;
    const double C11887 = C9868 * C2723;
    const double C12965 = C9868 * C31661;
    const double C30738 = C30720 + C30735;
    const double C30873 = C30871 - C30863;
    const double C30900 = C30898 - C30890;
    const double C11243 = C11238 * C31548;
    const double C5001 = C31314 * C306;
    const double C13843 = C13646 * C306;
    const double C4728 = C31314 * C1050;
    const double C14753 = C13646 * C1050;
    const double C15089 = C13645 * C1050;
    const double C5514 = C31314 * C1052;
    const double C14757 = C13645 * C1052;
    const double C5273 = C31314 * C1196;
    const double C14931 = C13646 * C1196;
    const double C15295 = C13645 * C1196;
    const double C5663 = C31314 * C1198;
    const double C14935 = C13645 * C1198;
    const double C5667 = C31314 * C1568;
    const double C15433 = C13645 * C1568;
    const double C9704 = C31314 * C459;
    const double C19679 = C13646 * C459;
    const double C9442 = C31314 * C1880;
    const double C21381 = C13646 * C1880;
    const double C21729 = C13645 * C1880;
    const double C10832 = C31314 * C1882;
    const double C21385 = C13645 * C1882;
    const double C30746 = C30522 * C30743;
    const double C1308 =
        (2 * C30753 * C30660 + C30753 * (C30660 + C30743 * C30774)) / C30365;
    const double C1458 = (C30802 * (C30660 + C30743 * C30774)) / C30365;
    const double C2032 = (C30753 * C30660 + C30753 * C30743 * C30823) / C30365;
    const double C2138 =
        (2 * C30802 * C30660 + C30802 * (C30660 + C30743 * C30823)) / C30365;
    const double C30745 = C30742 - C30717;
    const double C30800 = C30799 + C30798;
    const double C30942 = C30941 + C30940;
    const double C1460 =
        2 * ((-(C30802 * C30786 * ce) / C30394) / C30365 -
             (ae * C30802 * C30787) / C30523 + C30522 * C30944) -
        (ae * C30802 * (C30733 * C30774 + C30651)) / C30523 -
        (C30802 * (C30652 + C30734 * C30774) * ce) / C30523 +
        C30522 *
            (C30944 - (ae * C30802 * (C30716 * C30774 + C30639)) / C30523 -
             (C30802 * (C30642 + C30719 * C30774) * ce) / C30523 +
             C30522 * ((-(C30802 * (C30626 + C30702 * C30774) * ce) / C30394) /
                           C30365 -
                       (ae * C30802 * (C30699 * C30774 + C30623)) / C30523 +
                       C30522 * C30802 *
                           ((-((C30672 * C30673 +
                                C30530 * bs[8] * std::pow(C30520, 8)) *
                               C30531 * C30774) /
                             C30394) /
                                C30365 -
                            C30715 / C30523)));
    const double C6394 =
        3 * (C30781 + C30796 * C30823) +
        C30802 *
            (2 * C30944 +
             C30802 *
                 (C30796 +
                  ((-((C30672 * C30673 + C30530 * bs[8] * std::pow(C30520, 8)) *
                      C30531 * C30774) /
                    C30394) /
                       C30365 -
                   C30715 / C30523) *
                      C30823));
    const double C6666 =
        (((-2 * C30802 * C30787) / C30394 -
          (C30802 * ((C30699 * C30774 + C30623) * C30823 + C30787)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30802 * C30786 +
          C30802 * (C30786 + (C30626 + C30702 * C30774) * C30823)) *
         ce) /
            C30523 +
        C30522 *
            (2 * C30944 +
             C30802 *
                 (C30796 +
                  ((-((C30672 * C30673 + C30530 * bs[8] * std::pow(C30520, 8)) *
                      C30531 * C30774) /
                    C30394) /
                       C30365 -
                   C30715 / C30523) *
                      C30823));
    const double C4732 = C31314 * C1049;
    const double C15087 = C13646 * C1049;
    const double C5809 = C31314 * C1053;
    const double C14755 = C13646 * C1053;
    const double C5277 = C31314 * C1195;
    const double C15293 = C13646 * C1195;
    const double C6557 = C31314 * C1199;
    const double C14933 = C13646 * C1199;
    const double C6771 = C31314 * C6392;
    const double C30849 = C30848 + C30847;
    const double C30964 = C30963 + C30962;
    const double C9446 = C31314 * C1879;
    const double C21727 = C13646 * C1879;
    const double C11128 = C31314 * C1883;
    const double C21383 = C13646 * C1883;
    const double C2034 =
        2 * ((-((C30759 + C30854 * C30823) * ce) / C30394) / C30365 -
             (ae * (C30855 * C30823 + C30760)) / C30523 + C30522 * C30959) -
        (ae * (C30753 * C30733 * C30823 + C30753 * C30651)) / C30523 -
        ((C30753 * C30652 + C30753 * C30734 * C30823) * ce) / C30523 +
        C30522 *
            (C30959 - (ae * (C30753 * C30716 * C30823 + C30851)) / C30523 -
             ((C30853 + C30753 * C30719 * C30823) * ce) / C30523 +
             C30522 * ((-((C30854 + C30753 * C30702 * C30823) * ce) / C30394) /
                           C30365 -
                       (ae * (C30753 * C30699 * C30823 + C30855)) / C30523 +
                       C30522 * ((-(C30753 *
                                    (C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30856 / C30523)));
    const double C2249 =
        (((-2 * C30802 * C30760) / C30394 -
          (C30802 * (C30855 * C30823 + C30760)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30802 * C30759 + C30802 * (C30759 + C30854 * C30823)) * ce) /
            C30523 +
        C30522 * ((-2 * C30908) / C30523 + C30802 * C30959);
    const double C2250 =
        (-2 * C30908) / C30523 + C30802 * C30959 +
        (((-2 * C30802 * C30851) / C30394 -
          (C30802 * (C30753 * C30716 * C30823 + C30851)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30802 * C30853 + C30802 * (C30853 + C30753 * C30719 * C30823)) *
         ce) /
            C30523 +
        C30522 *
            ((((-2 * C30911) / C30394 -
               (C30802 * (C30753 * C30699 * C30823 + C30855)) / C30394) *
              ae) /
                 C30365 -
             ((2 * C30910 + C30802 * (C30854 + C30753 * C30702 * C30823)) *
              ce) /
                 C30523 +
             C30522 * ((-2 * C30912) / C30523 +
                       C30802 * ((-(C30753 *
                                    (C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30856 / C30523)));
    const double C6393 =
        3 * ((-(C30761 * C30823) / C30394) / C30365 - C30757 / C30523) +
        C30802 * ((-2 * C30908) / C30523 + C30802 * C30959);
    const double C10996 =
        (((-3 * (C30855 * C30823 + C30760)) / C30394 +
          C30802 * ((-2 * C30911) / C30394 -
                    (C30802 * (C30753 * C30699 * C30823 + C30855)) / C30394)) *
         ae) /
            C30365 -
        ((3 * (C30759 + C30854 * C30823) +
          C30802 *
              (2 * C30910 + C30802 * (C30854 + C30753 * C30702 * C30823))) *
         ce) /
            C30523 +
        C30522 *
            (3 * C30959 +
             C30802 * ((-2 * C30912) / C30523 +
                       C30802 * ((-(C30753 *
                                    (C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30856 / C30523)));
    const double C11236 =
        4 * ((-2 * C30908) / C30523 + C30802 * C30959) +
        C30802 *
            (3 * C30959 +
             C30802 * ((-2 * C30912) / C30523 +
                       C30802 * ((-(C30753 *
                                    (C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30856 / C30523)));
    const double C5811 = C5801 + C5802;
    const double C5810 = C5796 + C5797;
    const double C5984 = C5975 + C5976;
    const double C26385 = C5976 + C5975;
    const double C26384 = C5971 + C5972;
    const double C26383 = C5972 + C5971;
    const double C11003 = C6547 + C6546;
    const double C27091 = C6546 + C6547;
    const double C10998 = C10412 + C10413;
    const double C11122 = C11000 + C11001;
    const double C30445 = C30442 - C30437;
    const double C960 = C30442 + (C30428 * ce) / C30394;
    const double C30444 = C30441 + C31624;
    const double C4771 = C4770 - C4760;
    const double C25675 = C25673 + C5293;
    const double C25674 = C25672 - C5293;
    const double C9485 = C9484 - C9474;
    const double C7018 = C7016 - C7005;
    const double C27824 = C27821 + C7169;
    const double C27823 = C27820 - C7169;
    const double C11611 = C11609 - C11597;
    const double C11610 = C11608 + C7177;
    const double C27825 = C27822 - C7177;
    const double C14147 = C13646 * C286;
    const double C4999 = C31314 * C294;
    const double C13839 = C13646 * C294;
    const double C19967 = C13646 * C439;
    const double C9702 = C31314 * C447;
    const double C19675 = C13646 * C447;
    const double C14499 = C13646 * C834;
    const double C25339 = C31314 * C834;
    const double C147 =
        4 * (2 * C30593 - (ae * C30594) / C30523 - (C30595 * ce) / C30523 +
             C30522 * C30656) +
        (((-3 * C30594) / C30394 + C30522 * C30661 - (C30641 * ce) / C30394) *
         ae) /
            C30365 -
        ((3 * C30595 + C30522 * C30660 + C30641 * ae) * ce) / C30523 +
        C30522 *
            (3 * C30656 + (C30661 * ae) / C30365 - (C30660 * ce) / C30523 +
             C30522 *
                 (2 * C30650 - (ae * C30651) / C30523 - (C30652 * ce) / C30523 +
                  C30522 * ((-(ae * C30639) / C30394) / C30365 -
                            C30638 / C30523 - (C30642 * ce) / C30523 +
                            C30522 * ((-(C30626 * ce) / C30394) / C30365 -
                                      (ae * C30623) / C30523 -
                                      (C30522 *
                                       (C30603 * C30604 +
                                        C30530 * bs[7] * std::pow(C30526, 7)) *
                                       C30531) /
                                          C30523))));
    const double C302 =
        3 * ((-(ae * C30753 * C30585) / C30394) / C30365 - C30757 / C30523 -
             (C30753 * C30586 * ce) / C30523 + C30522 * C30771) +
        (C30753 * C30661 * ae) / C30365 - (C30753 * C30660 * ce) / C30523 +
        C30522 *
            (2 * C30771 - (ae * C30753 * C30651) / C30523 -
             (C30753 * C30652 * ce) / C30523 +
             C30522 * ((-(ae * C30753 * C30639) / C30394) / C30365 -
                       C30761 / C30523 - (C30753 * C30642 * ce) / C30523 +
                       C30522 * ((-(C30753 * C30626 * ce) / C30394) / C30365 -
                                 (ae * C30753 * C30623) / C30523 -
                                 (C30522 * C30753 * C30715) / C30523)));
    const double C455 =
        3 * ((-(ae * C30802 * C30585) / C30394) / C30365 - C30806 / C30523 -
             (C30802 * C30586 * ce) / C30523 + C30522 * C30820) +
        (C30802 * C30661 * ae) / C30365 - (C30802 * C30660 * ce) / C30523 +
        C30522 *
            (2 * C30820 - (ae * C30802 * C30651) / C30523 -
             (C30802 * C30652 * ce) / C30523 +
             C30522 * ((-(ae * C30802 * C30639) / C30394) / C30365 -
                       C30810 / C30523 - (C30802 * C30642 * ce) / C30523 +
                       C30522 * ((-(C30802 * C30626 * ce) / C30394) / C30365 -
                                 (ae * C30802 * C30623) / C30523 -
                                 (C30522 * C30802 * C30715) / C30523)));
    const double C139 =
        4 * ((-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
             (C30576 * ce) / C30394) +
        C30522 * ((-3 * C30594) / C30394 + C30522 * C30661 -
                  (C30641 * ce) / C30394) -
        ((3 * C30576 + C30522 * C30641) * ce) / C30394;
    const double C287 = C30753 * ((-3 * C30594) / C30394 + C30522 * C30661 -
                                  (C30641 * ce) / C30394);
    const double C295 = (-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
                        (C30576 * ce) / C30394 + C30661 * C30774;
    const double C440 = C30802 * ((-3 * C30594) / C30394 + C30522 * C30661 -
                                  (C30641 * ce) / C30394);
    const double C448 = (-2 * C30555) / C30394 - (C30522 * C30594) / C30394 -
                        (C30576 * ce) / C30394 + C30661 * C30823;
    const double C835 = C30802 * C30753 * C30661;
    const double C30741 = C30522 * C30738;
    const double C30876 = C30873 + C30875;
    const double C30903 = C30900 + C30902;
    const double C4748 = C4727 + C4728;
    const double C14765 = C14752 + C14753;
    const double C15093 = C15088 + C15089;
    const double C5522 = C5513 + C5514;
    const double C14767 = C14756 + C14757;
    const double C5287 = C5272 + C5273;
    const double C14947 = C14930 + C14931;
    const double C15299 = C15294 + C15295;
    const double C5676 = C5662 + C5663;
    const double C14949 = C14934 + C14935;
    const double C5678 = C5666 + C5667;
    const double C15439 = C15432 + C15433;
    const double C9462 = C9441 + C9442;
    const double C21393 = C21380 + C21381;
    const double C21733 = C21728 + C21729;
    const double C10839 = C10831 + C10832;
    const double C21395 = C21384 + C21385;
    const double C30748 = C30678 + C30746;
    const double C30747 = C30522 * C30745;
    const double C842 =
        3 * ((-(ae * C30802 * C30851) / C30394) / C30365 - C30908 / C30523 -
             (C30802 * C30853 * ce) / C30523 + C30522 * C30922) +
        (C30802 * C30753 * C30745 * ae) / C30365 -
        (C30802 * C30753 * C30743 * ce) / C30523 +
        C30522 *
            (2 * C30922 - (ae * C30802 * C30753 * C30733) / C30523 -
             (C30802 * C30753 * C30734 * ce) / C30523 +
             C30522 *
                 ((-(ae * C30802 * C30753 * C30716) / C30394) / C30365 -
                  C30912 / C30523 - (C30802 * C30753 * C30719 * ce) / C30523 +
                  C30522 *
                      ((-(C30802 * C30753 * C30702 * ce) / C30394) / C30365 -
                       (ae * C30802 * C30753 * C30699) / C30523 -
                       (C30522 * C30802 * C30753 *
                        (C30672 * C30673 +
                         C30530 * bs[8] * std::pow(C30520, 8)) *
                        C30531) /
                           C30523)));
    const double C1309 =
        2 * C30753 * C30661 + C30753 * (C30661 + C30745 * C30774);
    const double C1459 = C30802 * (C30661 + C30745 * C30774);
    const double C2033 = C30753 * C30661 + C30753 * C30745 * C30823;
    const double C2139 =
        2 * C30802 * C30661 + C30802 * (C30661 + C30745 * C30823);
    const double C307 =
        3 * (C30781 - (ae * (C30639 * C30774 + C30585)) / C30523 -
             ((C30586 + C30642 * C30774) * ce) / C30523 + C30522 * C30800) +
        ((C30661 + C30745 * C30774) * ae) / C30365 -
        ((C30660 + C30743 * C30774) * ce) / C30523 +
        C30522 *
            (2 * C30800 - (ae * (C30733 * C30774 + C30651)) / C30523 -
             ((C30652 + C30734 * C30774) * ce) / C30523 +
             C30522 *
                 (C30796 - (ae * (C30716 * C30774 + C30639)) / C30523 -
                  ((C30642 + C30719 * C30774) * ce) / C30523 +
                  C30522 *
                      ((-((C30626 + C30702 * C30774) * ce) / C30394) / C30365 -
                       (ae * (C30699 * C30774 + C30623)) / C30523 +
                       C30522 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30774) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523))));
    const double C1310 =
        2 * ((((-2 * C30760) / C30394 - (C30753 * C30787) / C30394) * ae) /
                 C30365 -
             ((2 * C30759 + C30753 * C30786) * ce) / C30523 + C30522 * C30942) +
        (((-2 * C30753 * C30651) / C30394 -
          (C30753 * (C30733 * C30774 + C30651)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30753 * C30652 + C30753 * (C30652 + C30734 * C30774)) * ce) /
            C30523 +
        C30522 *
            (C30942 +
             (((-2 * C30851) / C30394 -
               (C30753 * (C30716 * C30774 + C30639)) / C30394) *
              ae) /
                 C30365 -
             ((2 * C30853 + C30753 * (C30642 + C30719 * C30774)) * ce) /
                 C30523 +
             C30522 *
                 ((((-2 * C30855) / C30394 -
                    (C30753 * (C30699 * C30774 + C30623)) / C30394) *
                   ae) /
                      C30365 -
                  ((2 * C30854 + C30753 * (C30626 + C30702 * C30774)) * ce) /
                      C30523 +
                  C30522 *
                      ((-2 * C30856) / C30523 +
                       C30753 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30774) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523))));
    const double C1569 =
        (C30802 * ((-2 * C30760) / C30394 - (C30753 * C30787) / C30394) * ae) /
            C30365 -
        (C30802 * (2 * C30759 + C30753 * C30786) * ce) / C30523 +
        C30522 * C30802 * C30942;
    const double C1570 =
        C30802 * C30942 +
        (C30802 *
         ((-2 * C30851) / C30394 -
          (C30753 * (C30716 * C30774 + C30639)) / C30394) *
         ae) /
            C30365 -
        (C30802 * (2 * C30853 + C30753 * (C30642 + C30719 * C30774)) * ce) /
            C30523 +
        C30522 * ((C30802 *
                   ((-2 * C30855) / C30394 -
                    (C30753 * (C30699 * C30774 + C30623)) / C30394) *
                   ae) /
                      C30365 -
                  (C30802 * (2 * C30854 + C30753 * (C30626 + C30702 * C30774)) *
                   ce) /
                      C30523 +
                  C30522 * C30802 *
                      ((-2 * C30856) / C30523 +
                       C30753 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30774) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523)));
    const double C5502 = 4 * ((-2 * C30757) / C30523 + C30753 * C30781) +
                         C30753 * (3 * C30781 + C30753 * C30942);
    const double C5503 =
        5 * (3 * C30781 + C30753 * C30942) +
        C30753 * (4 * C30942 +
                  C30753 * (3 * C30796 +
                            C30753 * ((-2 * C30856) / C30523 +
                                      C30753 * ((-((C30672 * C30673 +
                                                    C30530 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30531 * C30774) /
                                                 C30394) /
                                                    C30365 -
                                                C30715 / C30523))));
    const double C5648 =
        (-2 * C30757) / C30523 + C30753 * C30781 + C30942 * C30823;
    const double C5649 = C30802 * (3 * C30781 + C30753 * C30942);
    const double C5650 =
        3 * C30781 + C30753 * C30942 +
        (3 * C30796 +
         C30753 *
             ((-2 * C30856) / C30523 +
              C30753 *
                  ((-((C30672 * C30673 + C30530 * bs[8] * std::pow(C30520, 8)) *
                      C30531 * C30774) /
                    C30394) /
                       C30365 -
                   C30715 / C30523))) *
            C30823;
    const double C5790 =
        ((4 * ((-2 * C30760) / C30394 - (C30753 * C30787) / C30394) +
          C30753 *
              ((-3 * C30787) / C30394 +
               C30753 * ((-2 * C30855) / C30394 -
                         (C30753 * (C30699 * C30774 + C30623)) / C30394))) *
         ae) /
            C30365 -
        ((4 * (2 * C30759 + C30753 * C30786) +
          C30753 *
              (3 * C30786 +
               C30753 * (2 * C30854 + C30753 * (C30626 + C30702 * C30774)))) *
         ce) /
            C30523 +
        C30522 * (4 * C30942 +
                  C30753 * (3 * C30796 +
                            C30753 * ((-2 * C30856) / C30523 +
                                      C30753 * ((-((C30672 * C30673 +
                                                    C30530 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30531 * C30774) /
                                                 C30394) /
                                                    C30365 -
                                                C30715 / C30523))));
    const double C6091 =
        C30802 *
        (4 * C30942 +
         C30753 *
             (3 * C30796 +
              C30753 * ((-2 * C30856) / C30523 +
                        C30753 * ((-((C30672 * C30673 +
                                      C30530 * bs[8] * std::pow(C30520, 8)) *
                                     C30531 * C30774) /
                                   C30394) /
                                      C30365 -
                                  C30715 / C30523))));
    const double C6544 =
        (((-2 * C30760) / C30394 - (C30753 * C30787) / C30394 +
          ((-2 * C30855) / C30394 -
           (C30753 * (C30699 * C30774 + C30623)) / C30394) *
              C30823) *
         ae) /
            C30365 -
        ((2 * C30759 + C30753 * C30786 +
          (2 * C30854 + C30753 * (C30626 + C30702 * C30774)) * C30823) *
         ce) /
            C30523 +
        C30522 *
            (C30942 +
             ((-2 * C30856) / C30523 +
              C30753 *
                  ((-((C30672 * C30673 + C30530 * bs[8] * std::pow(C30520, 8)) *
                      C30531 * C30774) /
                    C30394) /
                       C30365 -
                   C30715 / C30523)) *
                 C30823);
    const double C6768 =
        2 * C30802 * C30942 +
        C30802 *
            (C30942 +
             ((-2 * C30856) / C30523 +
              C30753 *
                  ((-((C30672 * C30673 + C30530 * bs[8] * std::pow(C30520, 8)) *
                      C30531 * C30774) /
                    C30394) /
                       C30365 -
                   C30715 / C30523)) *
                 C30823);
    const double C4750 = C4731 + C4732;
    const double C15092 = C15086 + C15087;
    const double C5813 = C5808 + C5809;
    const double C14766 = C14754 + C14755;
    const double C5289 = C5276 + C5277;
    const double C15298 = C15292 + C15293;
    const double C6561 = C6556 + C6557;
    const double C14948 = C14932 + C14933;
    const double C6778 = C6770 + C6771;
    const double C460 =
        3 * (C30830 - (ae * (C30639 * C30823 + C30585)) / C30523 -
             ((C30586 + C30642 * C30823) * ce) / C30523 + C30522 * C30849) +
        ((C30661 + C30745 * C30823) * ae) / C30365 -
        ((C30660 + C30743 * C30823) * ce) / C30523 +
        C30522 *
            (2 * C30849 - (ae * (C30733 * C30823 + C30651)) / C30523 -
             ((C30652 + C30734 * C30823) * ce) / C30523 +
             C30522 *
                 (C30845 - (ae * (C30716 * C30823 + C30639)) / C30523 -
                  ((C30642 + C30719 * C30823) * ce) / C30523 +
                  C30522 *
                      ((-((C30626 + C30702 * C30823) * ce) / C30394) / C30365 -
                       (ae * (C30699 * C30823 + C30623)) / C30523 +
                       C30522 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523))));
    const double C2140 =
        2 * ((((-2 * C30809) / C30394 - (C30802 * C30836) / C30394) * ae) /
                 C30365 -
             ((2 * C30808 + C30802 * C30835) * ce) / C30523 + C30522 * C30964) +
        (((-2 * C30802 * C30651) / C30394 -
          (C30802 * (C30733 * C30823 + C30651)) / C30394) *
         ae) /
            C30365 -
        ((2 * C30802 * C30652 + C30802 * (C30652 + C30734 * C30823)) * ce) /
            C30523 +
        C30522 *
            (C30964 +
             (((-2 * C30878) / C30394 -
               (C30802 * (C30716 * C30823 + C30639)) / C30394) *
              ae) /
                 C30365 -
             ((2 * C30880 + C30802 * (C30642 + C30719 * C30823)) * ce) /
                 C30523 +
             C30522 *
                 ((((-2 * C30882) / C30394 -
                    (C30802 * (C30699 * C30823 + C30623)) / C30394) *
                   ae) /
                      C30365 -
                  ((2 * C30881 + C30802 * (C30626 + C30702 * C30823)) * ce) /
                      C30523 +
                  C30522 *
                      ((-2 * C30883) / C30523 +
                       C30802 * ((-((C30672 * C30673 +
                                     C30530 * bs[8] * std::pow(C30520, 8)) *
                                    C30531 * C30823) /
                                  C30394) /
                                     C30365 -
                                 C30715 / C30523))));
    const double C10825 = 4 * ((-2 * C30806) / C30523 + C30802 * C30830) +
                          C30802 * (3 * C30830 + C30802 * C30964);
    const double C10826 =
        5 * (3 * C30830 + C30802 * C30964) +
        C30802 * (4 * C30964 +
                  C30802 * (3 * C30845 +
                            C30802 * ((-2 * C30883) / C30523 +
                                      C30802 * ((-((C30672 * C30673 +
                                                    C30530 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30531 * C30823) /
                                                 C30394) /
                                                    C30365 -
                                                C30715 / C30523))));
    const double C11120 =
        ((4 * ((-2 * C30809) / C30394 - (C30802 * C30836) / C30394) +
          C30802 *
              ((-3 * C30836) / C30394 +
               C30802 * ((-2 * C30882) / C30394 -
                         (C30802 * (C30699 * C30823 + C30623)) / C30394))) *
         ae) /
            C30365 -
        ((4 * (2 * C30808 + C30802 * C30835) +
          C30802 *
              (3 * C30835 +
               C30802 * (2 * C30881 + C30802 * (C30626 + C30702 * C30823)))) *
         ce) /
            C30523 +
        C30522 * (4 * C30964 +
                  C30802 * (3 * C30845 +
                            C30802 * ((-2 * C30883) / C30523 +
                                      C30802 * ((-((C30672 * C30673 +
                                                    C30530 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30531 * C30823) /
                                                 C30394) /
                                                    C30365 -
                                                C30715 / C30523))));
    const double C9464 = C9445 + C9446;
    const double C21732 = C21726 + C21727;
    const double C11131 = C11127 + C11128;
    const double C21394 = C21382 + C21383;
    const double C11009 = C31314 * C2249;
    const double C16283 = C13646 * C2249;
    const double C11240 = C31314 * C6393;
    const double C5815 = C5800 - C5811;
    const double C5814 = C5810 - C5798;
    const double C5987 = C5974 - C5984;
    const double C26388 = C26385 - C5974;
    const double C26387 = C5970 - C26384;
    const double C26386 = C26383 - C5970;
    const double C11011 = C6562 - C11003;
    const double C27092 = C27091 - C6562;
    const double C11010 = C10998 - C10414;
    const double C11129 = C10999 - C11122;
    const double C7304 = C4745 * C30445;
    const double C7300 = C4741 * C30445;
    const double C7294 = C4735 * C30445;
    const double C7467 = C5284 * C30445;
    const double C7461 = C5278 * C30445;
    const double C11882 = C6558 * C30445;
    const double C11878 = C9455 * C30445;
    const double C11872 = C9449 * C30445;
    const double C12657 = C9459 * C30445;
    const double C119 =
        (C30445 / C30400 + ((C30392 * C30455 + C2723) * ce) / C30394) / C30400 -
        ((C30392 * (C30455 / C30400 + (0 * ce) / C30394) + C31671) * de) /
            C30394;
    const double C567 =
        C30445 / C30400 - ((C30392 * C30455 + C2723) * de) / C30394;
    const double C2357 =
        C30445 / C30400 + ((C30392 * C30455 + C2723) * ce) / C30394;
    const double C5424 = C4745 * C960;
    const double C5420 = C4741 * C960;
    const double C5414 = C4735 * C960;
    const double C8522 = C5284 * C960;
    const double C8516 = C5278 * C960;
    const double C10636 = C9459 * C960;
    const double C10632 = C9455 * C960;
    const double C10626 = C9449 * C960;
    const double C12960 = C6558 * C960;
    const double C30446 = C30444 * de;
    const double C959 = C30431 + (C30444 * ce) / C30394 + C30420;
    const double C4772 = C4771 + C4761;
    const double C25677 = C25675 - C5294;
    const double C25676 = C25674 + C5294;
    const double C9486 = C9485 + C9475;
    const double C11613 = C11611 * C31548;
    const double C11612 = C11610 * C31548;
    const double C14154 = C14146 + C14147;
    const double C5004 = C4998 + C4999;
    const double C13866 = C13838 + C13839;
    const double C19974 = C19966 + C19967;
    const double C9707 = C9701 + C9702;
    const double C19702 = C19674 + C19675;
    const double C14514 = C14498 + C14499;
    const double C25342 = C25338 + C25339;
    const double C14151 = C13646 * C302;
    const double C19971 = C13646 * C455;
    const double C14150 = C13650 * C287;
    const double C5000 = C4585 * C295;
    const double C13842 = C13650 * C295;
    const double C19970 = C13650 * C440;
    const double C9703 = C4585 * C448;
    const double C19678 = C13650 * C448;
    const double C14502 = C13650 * C835;
    const double C25340 = C4585 * C835;
    const double C30744 = C30704 + C30741;
    const double C4766 = C4748 * C260;
    const double C5427 = C4748 * C31688;
    const double C5803 = C4748 * C31337;
    const double C7009 = C4748 * C31337;
    const double C7307 = C4748 * C31340;
    const double C5526 = C5522 * C31327;
    const double C5805 = C5522 * C31624;
    const double C7011 = C5522 * C2457;
    const double C5299 = C5287 * C260;
    const double C5977 = C5287 * C31337;
    const double C7173 = C5287 * C31337;
    const double C7470 = C5287 * C31340;
    const double C8525 = C5287 * C31688;
    const double C5684 = C5676 * C31327;
    const double C6553 = C5676 * C31624;
    const double C7179 = C5676 * C2457;
    const double C5686 = C5678 * C31327;
    const double C5979 = C5678 * C31624;
    const double C7621 = C5678 * C2457;
    const double C9480 = C9462 * C260;
    const double C10639 = C9462 * C31688;
    const double C11002 = C9462 * C31337;
    const double C11601 = C9462 * C31337;
    const double C12660 = C9462 * C31340;
    const double C10843 = C10839 * C31327;
    const double C11124 = C10839 * C31624;
    const double C12394 = C10839 * C2457;
    const double C30750 = C30748 + C30726;
    const double C30749 = C30687 + C30747;
    const double C5983 = C31314 * C1569;
    const double C15431 = C13646 * C1569;
    const double C5516 = C31314 * C5502;
    const double C5669 = C31314 * C5648;
    const double C6095 = C31314 * C5649;
    const double C4768 = C4750 * C31661;
    const double C5429 = C4750 * C31661;
    const double C7309 = C4750 * C2723;
    const double C5817 = C5813 * C31337;
    const double C7013 = C5813 * C31337;
    const double C5301 = C5289 * C31661;
    const double C7472 = C5289 * C2723;
    const double C8527 = C5289 * C31661;
    const double C6565 = C6561 * C31337;
    const double C7181 = C6561 * C31337;
    const double C6782 = C6778 * C31327;
    const double C10834 = C31314 * C10825;
    const double C9482 = C9464 * C31661;
    const double C10641 = C9464 * C31661;
    const double C12662 = C9464 * C2723;
    const double C11134 = C11131 * C31337;
    const double C12396 = C11131 * C31337;
    const double C11013 = C11008 + C11009;
    const double C16290 = C16282 + C16283;
    const double C11244 = C11239 + C11240;
    const double C5818 = C5814 - C5799;
    const double C26390 = C26387 + C5973;
    const double C26389 = C26386 - C5973;
    const double C11015 = C11011 + C6563;
    const double C27093 = C27092 - C6563;
    const double C11014 = C11010 - C10415;
    const double C4996 = C4743 * C567;
    const double C4986 = C4737 * C567;
    const double C9699 = C9457 * C567;
    const double C9689 = C9451 * C567;
    const double C25336 = C5282 * C567;
    const double C6896 = C4743 * C2357;
    const double C6888 = C4737 * C2357;
    const double C12144 = C9457 * C2357;
    const double C12136 = C9451 * C2357;
    const double C27489 = C5282 * C2357;
    const double C30447 = C30446 / C30394;
    const double C5426 = C4747 * C959;
    const double C5418 = C4739 * C959;
    const double C5412 = C4733 * C959;
    const double C8524 = C5286 * C959;
    const double C8518 = C5280 * C959;
    const double C10638 = C9461 * C959;
    const double C10630 = C9453 * C959;
    const double C10624 = C9447 * C959;
    const double C12962 = C5673 * C959;
    const double C4773 = C4772 + C4762;
    const double C25679 = C25677 - C5295;
    const double C25678 = C25676 + C5295;
    const double C9487 = C9486 + C9476;
    const double C5008 = C5004 * C568;
    const double C6898 = C5004 * C2358;
    const double C9711 = C9707 * C568;
    const double C12146 = C9707 * C2358;
    const double C25344 = C25342 * C568;
    const double C27491 = C25342 * C2358;
    const double C14156 = C14150 + C14151;
    const double C5005 = C5000 + C5001;
    const double C13868 = C13842 + C13843;
    const double C19976 = C19970 + C19971;
    const double C9708 = C9703 + C9704;
    const double C19704 = C19678 + C19679;
    const double C14516 = C14502 + C14503;
    const double C25343 = C25340 + C25341;
    const double C5819 = C5815 + C5803;
    const double C7019 = C7017 + C7009;
    const double C5529 = C5525 + C5526;
    const double C5990 = C5987 + C5977;
    const double C26391 = C26388 - C5977;
    const double C7625 = C7624 + C7173;
    const double C28372 = C28371 - C7173;
    const double C5689 = C5683 + C5684;
    const double C26058 = C5684 + C5683;
    const double C6093 = C5685 + C5686;
    const double C26522 = C5686 + C5685;
    const double C11132 = C11129 + C11002;
    const double C12398 = C12397 + C11601;
    const double C10846 = C10842 + C10843;
    const double C140 = (5 * (3 * C30595 + C30522 * C30660 + C30641 * ae) +
                         C30522 * (4 * C30660 + C30522 * C30750 + C30730 * ae) +
                         (4 * C30641 + C30522 * C30730) * ae) /
                        C30365;
    const double C296 =
        (3 * C30595 + C30522 * C30660 + C30641 * ae + C30750 * C30774) / C30365;
    const double C449 =
        (3 * C30595 + C30522 * C30660 + C30641 * ae + C30750 * C30823) / C30365;
    const double C570 =
        (C30753 * (4 * C30660 + C30522 * C30750 + C30730 * ae)) / C30365;
    const double C674 =
        (C30802 * (4 * C30660 + C30522 * C30750 + C30730 * ae)) / C30365;
    const double C836 = (C30802 * C30753 * C30750) / C30365;
    const double C30751 = C30749 - C30729;
    const double C5986 = C5982 + C5983;
    const double C15438 = C15430 + C15431;
    const double C5523 = C5515 + C5516;
    const double C5679 = C5668 + C5669;
    const double C6098 = C6094 + C6095;
    const double C10840 = C10833 + C10834;
    const double C11017 = C11013 * C31337;
    const double C11606 = C11013 * C31337;
    const double C11246 = C11244 * C31327;
    const double C11019 = C11015 * C31548;
    const double C11018 = C11014 * C31548;
    const double C30448 = C30431 - C30447;
    const double C5430 = C5418 + C5419;
    const double C29556 = C8517 + C8518;
    const double C29555 = C8518 + C8517;
    const double C10642 = C10630 + C10631;
    const double C9488 = C9487 * C31548;
    const double C5009 = C5005 * C31671;
    const double C6899 = C5005 * C31671;
    const double C9712 = C9708 * C31671;
    const double C12147 = C9708 * C31671;
    const double C25345 = C25343 * C31671;
    const double C27492 = C25343 * C31671;
    const double C10160 = C5689 * C31548;
    const double C11135 = C11132 * C31548;
    const double C12399 = C12398 * C31548;
    const double C10847 = C10846 * C31548;
    const double C148 =
        5 * (3 * C30656 + (C30661 * ae) / C30365 - (C30660 * ce) / C30523 +
             C30522 * C30744) +
        ((4 * C30661 + C30522 * C30751 - (C30730 * ce) / C30394) * ae) /
            C30365 -
        ((4 * C30660 + C30522 * C30750 + C30730 * ae) * ce) / C30523 +
        C30522 *
            (4 * C30744 + (C30751 * ae) / C30365 - (C30750 * ce) / C30523 +
             C30522 *
                 (3 * C30738 + (C30745 * ae) / C30365 - (C30743 * ce) / C30523 +
                  C30522 *
                      (2 * C30732 - (ae * C30733) / C30523 -
                       (C30734 * ce) / C30523 +
                       C30522 *
                           ((-(ae * C30716) / C30394) / C30365 -
                            C30715 / C30523 - (C30719 * ce) / C30523 +
                            C30522 * ((-(C30702 * ce) / C30394) / C30365 -
                                      (ae * C30699) / C30523 -
                                      (C30522 *
                                       (C30672 * C30673 +
                                        C30530 * bs[8] * std::pow(C30520, 8)) *
                                       C30531) /
                                          C30523)))));
    const double C572 =
        4 * (2 * C30771 - (ae * C30753 * C30651) / C30523 -
             (C30753 * C30652 * ce) / C30523 + C30522 * C30876) +
        (C30753 * C30751 * ae) / C30365 - (C30753 * C30750 * ce) / C30523 +
        C30522 *
            (3 * C30876 + (C30753 * C30745 * ae) / C30365 -
             (C30753 * C30743 * ce) / C30523 +
             C30522 *
                 (2 * C30874 - (ae * C30753 * C30733) / C30523 -
                  (C30753 * C30734 * ce) / C30523 +
                  C30522 *
                      ((-(ae * C30753 * C30716) / C30394) / C30365 -
                       C30856 / C30523 - (C30753 * C30719 * ce) / C30523 +
                       C30522 * ((-(C30753 * C30702 * ce) / C30394) / C30365 -
                                 (ae * C30753 * C30699) / C30523 -
                                 (C30522 * C30753 *
                                  (C30672 * C30673 +
                                   C30530 * bs[8] * std::pow(C30520, 8)) *
                                  C30531) /
                                     C30523))));
    const double C676 =
        4 * (2 * C30820 - (ae * C30802 * C30651) / C30523 -
             (C30802 * C30652 * ce) / C30523 + C30522 * C30903) +
        (C30802 * C30751 * ae) / C30365 - (C30802 * C30750 * ce) / C30523 +
        C30522 *
            (3 * C30903 + (C30802 * C30745 * ae) / C30365 -
             (C30802 * C30743 * ce) / C30523 +
             C30522 *
                 (2 * C30901 - (ae * C30802 * C30733) / C30523 -
                  (C30802 * C30734 * ce) / C30523 +
                  C30522 *
                      ((-(ae * C30802 * C30716) / C30394) / C30365 -
                       C30883 / C30523 - (C30802 * C30719 * ce) / C30523 +
                       C30522 * ((-(C30802 * C30702 * ce) / C30394) / C30365 -
                                 (ae * C30802 * C30699) / C30523 -
                                 (C30522 * C30802 *
                                  (C30672 * C30673 +
                                   C30530 * bs[8] * std::pow(C30520, 8)) *
                                  C30531) /
                                     C30523))));
    const double C141 =
        5 * ((-3 * C30594) / C30394 + C30522 * C30661 -
             (C30641 * ce) / C30394) +
        C30522 * (4 * C30661 + C30522 * C30751 - (C30730 * ce) / C30394) -
        ((4 * C30641 + C30522 * C30730) * ce) / C30394;
    const double C297 = (-3 * C30594) / C30394 + C30522 * C30661 -
                        (C30641 * ce) / C30394 + C30751 * C30774;
    const double C450 = (-3 * C30594) / C30394 + C30522 * C30661 -
                        (C30641 * ce) / C30394 + C30751 * C30823;
    const double C571 =
        C30753 * (4 * C30661 + C30522 * C30751 - (C30730 * ce) / C30394);
    const double C675 =
        C30802 * (4 * C30661 + C30522 * C30751 - (C30730 * ce) / C30394);
    const double C837 = C30802 * C30753 * C30751;
    const double C5989 = C5986 * C31337;
    const double C7623 = C5986 * C31337;
    const double C5527 = C5523 * C31327;
    const double C5687 = C5679 * C31327;
    const double C6100 = C6098 * C31327;
    const double C10844 = C10840 * C31327;
    const double C30449 = C30448 + C30420;
    const double C5431 = C5430 - C5420;
    const double C29558 = C8516 - C29556;
    const double C29557 = C29555 - C8516;
    const double C10643 = C10642 - C10632;
    const double C7306 = C4747 * C30449;
    const double C7298 = C4739 * C30449;
    const double C7292 = C4733 * C30449;
    const double C7469 = C5286 * C30449;
    const double C7463 = C5280 * C30449;
    const double C11884 = C5673 * C30449;
    const double C11876 = C9453 * C30449;
    const double C11870 = C9447 * C30449;
    const double C12659 = C9461 * C30449;
    const double C116 =
        (((((0 - (C30392 * C30393) / C30394) * ce) / C30394 -
           (0 * de) / C30406 + (2 * C30395) / C30394) /
              C30400 -
          ((C30392 * C30429 + 0) * de) / C30394 + C30412 - C30422) /
             C30400 +
         ((C30392 * C30443 + 0) * ce) / C30394) /
            C30400 -
        ((C30392 * (C30443 / C30400 +
                    ((C30392 * C30449 + C31332) * ce) / C30394 + C30445) +
          C31710) *
         de) /
            C30394 +
        C30449 / C30400 + ((C30392 * C30445 + C31340) * ce) / C30394 +
        2 * (C30420 / C30400 - (0 * de) / C30394);
    const double C117 =
        (C30443 / C30400 + ((C30392 * C30449 + C31332) * ce) / C30394 +
         C30445) /
            C30400 -
        ((C30392 * (C30449 / C30400 +
                    ((C30392 * C30445 + C31340) * ce) / C30394 + 2 * C30455) +
          C31703) *
         de) /
            C30394 +
        2 * (C30445 / C30400 + ((C30392 * C30455 + C2723) * ce) / C30394);
    const double C118 =
        (C30449 / C30400 + ((C30392 * C30445 + C31340) * ce) / C30394 +
         2 * C30455) /
            C30400 -
        ((C30392 *
              (C30445 / C30400 + ((C30392 * C30455 + C2723) * ce) / C30394) +
          C31690) *
         de) /
            C30394 +
        3 * (C30455 / C30400 + (0 * ce) / C30394);
    const double C565 =
        C30443 / C30400 - ((C30392 * C30449 + C31332) * de) / C30394 + C30445;
    const double C566 = C30449 / C30400 -
                        ((C30392 * C30445 + C31340) * de) / C30394 + 2 * C30455;
    const double C2355 =
        C30443 / C30400 + ((C30392 * C30449 + C31332) * ce) / C30394 + C30445;
    const double C2356 = C30449 / C30400 +
                         ((C30392 * C30445 + C31340) * ce) / C30394 +
                         2 * C30455;
    const double C5432 = C5431 - C5421;
    const double C29560 = C29558 + C8519;
    const double C29559 = C29557 - C8519;
    const double C10644 = C10643 - C10633;
    const double C7310 = C7298 + C7299;
    const double C28167 = C7462 + C7463;
    const double C28166 = C7463 + C7462;
    const double C12656 = C11876 + C11877;
    const double C4992 = C4739 * C565;
    const double C4982 = C4733 * C565;
    const double C9695 = C9453 * C565;
    const double C9685 = C9447 * C565;
    const double C25332 = C5280 * C565;
    const double C4994 = C4741 * C566;
    const double C4984 = C4735 * C566;
    const double C9697 = C9455 * C566;
    const double C9687 = C9449 * C566;
    const double C25334 = C5278 * C566;
    const double C6892 = C4739 * C2355;
    const double C6884 = C4733 * C2355;
    const double C12140 = C9453 * C2355;
    const double C12132 = C9447 * C2355;
    const double C27485 = C5280 * C2355;
    const double C6894 = C4741 * C2356;
    const double C6886 = C4735 * C2356;
    const double C12142 = C9455 * C2356;
    const double C12134 = C9449 * C2356;
    const double C27487 = C5278 * C2356;
    const double C5433 = C5432 + C5422;
    const double C29562 = C29560 - C8520;
    const double C29561 = C29559 + C8520;
    const double C10645 = C10644 + C10634;
    const double C7311 = C7310 - C7300;
    const double C28169 = C7461 - C28167;
    const double C28168 = C28166 - C7461;
    const double C12663 = C12656 - C11878;
    const double C5434 = C5433 + C5423;
    const double C29564 = C29562 - C8521;
    const double C29563 = C29561 + C8521;
    const double C10646 = C10645 + C10635;
    const double C7312 = C7311 - C7301;
    const double C28171 = C28169 + C7464;
    const double C28170 = C28168 - C7464;
    const double C12664 = C12663 - C11879;
    const double C10647 = C10646 * C31548;
    const double C7313 = C7312 + C7302;
    const double C28173 = C28171 - C7465;
    const double C28172 = C28170 + C7465;
    const double C12665 = C12664 + C11880;
    const double C7314 = C7313 + C7303;
    const double C28175 = C28173 - C7466;
    const double C28174 = C28172 + C7466;
    const double C12666 = C12665 + C11881;
    const double C12667 = C12666 * C31548;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30449 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31332 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30445 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31340 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C30455 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C2723) *
               C13647 +
           ((C13846 + C13847) * C30449 + (C13848 + C13849) * C31332 -
            (C13850 + C13851) * C30445 - (C13852 + C13853) * C31340 +
            (C13854 + C13855) * C30455 + (C13856 + C13857) * C2723) *
               C13648) *
              C31560 * C31380 * C31423 +
          (((C13851 + C13850) * C30445 -
            ((C13849 + C13848) * C31332 + (C13847 + C13846) * C30449) +
            (C13853 + C13852) * C31340 - (C13855 + C13854) * C30455 -
            (C13857 + C13856) * C2723) *
               C13647 +
           ((C13858 + C13859) * C30445 -
            ((C13860 + C13861) * C31332 + (C13862 + C13863) * C30449) +
            (C13864 + C13865) * C31340 - (C13866 + C13867) * C30455 -
            (C13868 + C13869) * C2723) *
               C13648) *
              C31560 * C31380 * C31430 +
          (((C13863 + C13862) * C30449 + (C13861 + C13860) * C31332 -
            (C13859 + C13858) * C30445 - (C13865 + C13864) * C31340 +
            (C13867 + C13866) * C30455 + (C13869 + C13868) * C2723) *
               C13647 +
           ((C14762 + C14763) * C30449 + (C14764 + C14765) * C31332 -
            (C15090 + C15091) * C30445 - (C15092 + C15093) * C31340 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C30455 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C2723) *
               C13648) *
              C31560 * C31380 * C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
             (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C2464 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C2457 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C2463) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31423 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C2464 -
             ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31430 +
          ((((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
             (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
                C13647 +
            ((C14762 + C14763) * C2463 + (C14764 + C14765) * C2457 -
             (C15090 + C15091) * C2464 - (C15092 + C15093) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C15297 + C15296) * C2464 -
             ((C14947 + C14946) * C2457 + (C14945 + C14944) * C2463) +
             (C15299 + C15298) * C31337) *
                C13647 +
            ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
              C13646 * C1564) *
                 C2464 -
             ((C15438 + C15439) * C2457 + (C15440 + C15441) * C2463) +
             (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
              C13646 * C1570) *
                 C31337) *
                C13648) *
               C31560 * C31467) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2463 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C2457 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2464 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C13647 +
           ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
            (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
               C13648) *
              C31560 * C31380 * C31711 +
          (((C13851 + C13850) * C2464 -
            ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
            (C13853 + C13852) * C31337) *
               C13647 +
           ((C13858 + C13859) * C2464 -
            ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
            (C13864 + C13865) * C31337) *
               C13648) *
              C31560 * C31380 * C31707 +
          (((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
            (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
               C13647 +
           ((C14762 + C14763) * C2463 + (C14764 + C14765) * C2457 -
            (C15090 + C15091) * C2464 - (C15092 + C15093) * C31337) *
               C13648) *
              C31560 * C31380 * C31697 +
          (((C15091 + C15090) * C2464 -
            ((C14765 + C14764) * C2457 + (C14763 + C14762) * C2463) +
            (C15093 + C15092) * C31337) *
               C13647 +
           ((C13649 * C1035 + C13645 * C1044 + C13650 * C1036 +
             C13646 * C1045) *
                C2464 -
            ((C14766 + C14767) * C2457 + (C14768 + C14769) * C2463) +
            (C13649 * C1047 + C13645 * C1053 + C13650 * C1048 +
             C13646 * C1054) *
                C31337) *
               C13648) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C2355 + (C13848 + C13849) * C31710 -
            (C13850 + C13851) * C2356 - (C13852 + C13853) * C31703 +
            (C13854 + C13855) * C2357 + (C13856 + C13857) * C31690 -
            (C14154 + C14155) * C2358 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C31380 * C2353 +
          (((C13851 + C13850) * C2356 -
            ((C13849 + C13848) * C31710 + (C13847 + C13846) * C2355) +
            (C13853 + C13852) * C31703 - (C13855 + C13854) * C2357 -
            (C13857 + C13856) * C31690 + (C14155 + C14154) * C2358 +
            (C14157 + C14156) * C31671) *
               C13647 +
           ((C13858 + C13859) * C2356 -
            ((C13860 + C13861) * C31710 + (C13862 + C13863) * C2355) +
            (C13864 + C13865) * C31703 - (C13866 + C13867) * C2357 -
            (C13868 + C13869) * C31690 +
            (C13649 * C276 + C13645 * C294 + C13650 * C277 + C13646 * C296) *
                C2358 +
            (C13649 * C295 + C13645 * C306 + C13650 * C297 + C13646 * C307) *
                C31671) *
               C13648) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
             (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C31705 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C2464 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C2457 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C2463) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31694 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C2463 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C2457 -
             (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                 C2464 -
             (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                 C31337) *
                C13647 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C13648) *
               C31560 * C31670) *
              C2353 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C2464 -
             ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C31705 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31694 +
           (((C16019 + C16018) * C2464 -
             ((C14943 + C14942) * C2457 + (C14941 + C14940) * C2463) +
             (C16021 + C16020) * C31337) *
                C13647 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C2464 -
             ((C14948 + C14949) * C2457 + (C14950 + C14951) * C2463) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C13648) *
               C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30449 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31332 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30445 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31340 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C30455 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C2723) *
                C13647 +
            ((C13846 + C13847) * C30449 + (C13848 + C13849) * C31332 -
             (C13850 + C13851) * C30445 - (C13852 + C13853) * C31340 +
             (C13854 + C13855) * C30455 + (C13856 + C13857) * C2723) *
                C13648) *
               C31560 * C31639 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30445 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31332 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30449) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31340 -
             (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                 C30455 -
             (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                 C2723) *
                C13647 +
            ((C14506 + C14507) * C30445 -
             ((C14508 + C14509) * C31332 + (C14510 + C14511) * C30449) +
             (C14512 + C14513) * C31340 - (C14514 + C14515) * C30455 -
             (C14516 + C14517) * C2723) *
                C13648) *
               C31560 * C31467) *
              C2353 +
          ((((C13851 + C13850) * C30445 -
             ((C13849 + C13848) * C31332 + (C13847 + C13846) * C30449) +
             (C13853 + C13852) * C31340 - (C13855 + C13854) * C30455 -
             (C13857 + C13856) * C2723) *
                C13647 +
            ((C13858 + C13859) * C30445 -
             ((C13860 + C13861) * C31332 + (C13862 + C13863) * C30449) +
             (C13864 + C13865) * C31340 - (C13866 + C13867) * C30455 -
             (C13868 + C13869) * C2723) *
                C13648) *
               C31560 * C31639 +
           (((C14511 + C14510) * C30449 + (C14509 + C14508) * C31332 -
             (C14507 + C14506) * C30445 - (C14513 + C14512) * C31340 +
             (C14515 + C14514) * C30455 + (C14517 + C14516) * C2723) *
                C13647 +
            ((C14944 + C14945) * C30449 + (C14946 + C14947) * C31332 -
             (C15296 + C15297) * C30445 - (C15298 + C15299) * C31340 +
             (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
              C13646 * C1458) *
                 C30455 +
             (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
              C13646 * C1460) *
                 C2723) *
                C13648) *
               C31560 * C31467) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C2355 + (C13848 + C13849) * C31710 -
            (C13850 + C13851) * C2356 - (C13852 + C13853) * C31703 +
            (C13854 + C13855) * C2357 + (C13856 + C13857) * C31690 -
            (C14154 + C14155) * C2358 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C31380 * C2353 +
          (((C13851 + C13850) * C2356 -
            ((C13849 + C13848) * C31710 + (C13847 + C13846) * C2355) +
            (C13853 + C13852) * C31703 - (C13855 + C13854) * C2357 -
            (C13857 + C13856) * C31690 + (C14155 + C14154) * C2358 +
            (C14157 + C14156) * C31671) *
               C13647 +
           ((C13858 + C13859) * C2356 -
            ((C13860 + C13861) * C31710 + (C13862 + C13863) * C2355) +
            (C13864 + C13865) * C31703 - (C13866 + C13867) * C2357 -
            (C13868 + C13869) * C31690 +
            (C13649 * C276 + C13645 * C294 + C13650 * C277 + C13646 * C296) *
                C2358 +
            (C13649 * C295 + C13645 * C306 + C13650 * C297 + C13646 * C307) *
                C31671) *
               C13648) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2463 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C2457 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2464 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C13647 +
           ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
            (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
               C13648) *
              C31560 * C31380 * C31711 +
          (((C13851 + C13850) * C2464 -
            ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
            (C13853 + C13852) * C31337) *
               C13647 +
           ((C13858 + C13859) * C2464 -
            ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
            (C13864 + C13865) * C31337) *
               C13648) *
              C31560 * C31380 * C31707 +
          (((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
            (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
               C13647 +
           ((C14762 + C14763) * C2463 + (C14764 + C14765) * C2457 -
            (C15090 + C15091) * C2464 - (C15092 + C15093) * C31337) *
               C13648) *
              C31560 * C31380 * C31697 +
          (((C15091 + C15090) * C2464 -
            ((C14765 + C14764) * C2457 + (C14763 + C14762) * C2463) +
            (C15093 + C15092) * C31337) *
               C13647 +
           ((C13649 * C1035 + C13645 * C1044 + C13650 * C1036 +
             C13646 * C1045) *
                C2464 -
            ((C14766 + C14767) * C2457 + (C14768 + C14769) * C2463) +
            (C13649 * C1047 + C13645 * C1053 + C13650 * C1048 +
             C13646 * C1054) *
                C31337) *
               C13648) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
             (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30420 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31624 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30439) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31423 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C30420 -
             ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31430 +
          ((((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
             (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
                C13647 +
            ((C14762 + C14763) * C30439 + (C14764 + C14765) * C31624 -
             (C15090 + C15091) * C30420 - (C15092 + C15093) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C15297 + C15296) * C30420 -
             ((C14947 + C14946) * C31624 + (C14945 + C14944) * C30439) +
             (C15299 + C15298) * C31337) *
                C13647 +
            ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
              C13646 * C1564) *
                 C30420 -
             ((C15438 + C15439) * C31624 + (C15440 + C15441) * C30439) +
             (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
              C13646 * C1570) *
                 C31337) *
                C13648) *
               C31560 * C31467) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C31463 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31470 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C3628) *
              C31423 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31470 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C31463 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C3628) *
              C31430 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C31463 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31470 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C13647 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C13648) *
               C31560 * C3628) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C3120 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31467) *
              C31711 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31467 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C3120) *
              C31707 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C3120 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31467) *
              C31697 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C13647 +
            ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
              C13646 * C5966) *
                 C1030 +
             (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
              C13646 * C5968) *
                 C31327) *
                C13648) *
               C31560 * C31467 -
           (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
               C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C959 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31701 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C960 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31688 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C961 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C13647 +
            ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
             (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
             (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
                C13648) *
               C31560 * C3120 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C960 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31701 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C959) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31688 -
             (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                 C961 -
             (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                 C31661) *
                C13647 +
            ((C14506 + C14507) * C960 -
             ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
             (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
             (C14516 + C14517) * C31661) *
                C13648) *
               C31560 * C31467) *
              C2353 +
          ((((C13851 + C13850) * C960 -
             ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
             (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
             (C13857 + C13856) * C31661) *
                C13647 +
            ((C13858 + C13859) * C960 -
             ((C13860 + C13861) * C31701 + (C13862 + C13863) * C959) +
             (C13864 + C13865) * C31688 - (C13866 + C13867) * C961 -
             (C13868 + C13869) * C31661) *
                C13648) *
               C31560 * C3120 +
           (((C14511 + C14510) * C959 + (C14509 + C14508) * C31701 -
             (C14507 + C14506) * C960 - (C14513 + C14512) * C31688 +
             (C14515 + C14514) * C961 + (C14517 + C14516) * C31661) *
                C13647 +
            ((C14944 + C14945) * C959 + (C14946 + C14947) * C31701 -
             (C15296 + C15297) * C960 - (C15298 + C15299) * C31688 +
             (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
              C13646 * C1458) *
                 C961 +
             (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
              C13646 * C1460) *
                 C31661) *
                C13648) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C31712 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31709 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C31700 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C13648 +
            ((C13650 * C1868 + C13646 * C1880 + C13649 * C1869 +
              C13645 * C1881) *
                 C31327 +
             (C13650 * C1862 + C13646 * C1871 + C13649 * C1863 +
              C13645 * C1872) *
                 C1030) *
                C13647) *
               C31560 * C31683) *
              C2353 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31709 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C31712 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C31700 +
           (((C16293 + C16292) * C1030 + (C16291 + C16290) * C31327) * C13647 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C13648) *
               C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
             (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C31463 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30420 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31624 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30439) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31470 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C30439 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31624 -
             (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                 C30420 -
             (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                 C31337) *
                C13647 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C13648) *
               C31560 * C3628) *
              C2353 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C30420 -
             ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C31463 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31470 +
           (((C16019 + C16018) * C30420 -
             ((C14943 + C14942) * C31624 + (C14941 + C14940) * C30439) +
             (C16021 + C16020) * C31337) *
                C13647 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C30420 -
             ((C14948 + C14949) * C31624 + (C14950 + C14951) * C30439) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C13648) *
               C31560 * C3628) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C959 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31701 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C960 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31688 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C961 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C13647 +
            ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
             (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
             (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
                C13648) *
               C31560 * C3120 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C960 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31701 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C959) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31688 -
             (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                 C961 -
             (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                 C31661) *
                C13647 +
            ((C14506 + C14507) * C960 -
             ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
             (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
             (C14516 + C14517) * C31661) *
                C13648) *
               C31560 * C31467) *
              C2353 +
          ((((C13851 + C13850) * C960 -
             ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
             (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
             (C13857 + C13856) * C31661) *
                C13647 +
            ((C13858 + C13859) * C960 -
             ((C13860 + C13861) * C31701 + (C13862 + C13863) * C959) +
             (C13864 + C13865) * C31688 - (C13866 + C13867) * C961 -
             (C13868 + C13869) * C31661) *
                C13648) *
               C31560 * C3120 +
           (((C14511 + C14510) * C959 + (C14509 + C14508) * C31701 -
             (C14507 + C14506) * C960 - (C14513 + C14512) * C31688 +
             (C14515 + C14514) * C961 + (C14517 + C14516) * C31661) *
                C13647 +
            ((C14944 + C14945) * C959 + (C14946 + C14947) * C31701 -
             (C15296 + C15297) * C960 - (C15298 + C15299) * C31688 +
             (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
              C13646 * C1458) *
                 C961 +
             (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
              C13646 * C1460) *
                 C31661) *
                C13648) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C3120 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31467) *
              C31711 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31467 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C3120) *
              C31707 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C3120 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31467) *
              C31697 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C13647 +
            ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
              C13646 * C5966) *
                 C1030 +
             (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
              C13646 * C5968) *
                 C31327) *
                C13648) *
               C31560 * C31467 -
           (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
               C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30439 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31624 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30420 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C13647 +
           ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
            (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
               C13648) *
              C31560 * C31380 * C1301 +
          (((C13851 + C13850) * C30420 -
            ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
            (C13853 + C13852) * C31337) *
               C13647 +
           ((C13858 + C13859) * C30420 -
            ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
            (C13864 + C13865) * C31337) *
               C13648) *
              C31560 * C31380 * C1302 +
          (((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
            (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
               C13647 +
           ((C14762 + C14763) * C30439 + (C14764 + C14765) * C31624 -
            (C15090 + C15091) * C30420 - (C15092 + C15093) * C31337) *
               C13648) *
              C31560 * C31380 * C1303 +
          (((C15091 + C15090) * C30420 -
            ((C14765 + C14764) * C31624 + (C14763 + C14762) * C30439) +
            (C15093 + C15092) * C31337) *
               C13647 +
           ((C13649 * C1035 + C13645 * C1044 + C13650 * C1036 +
             C13646 * C1045) *
                C30420 -
            ((C14766 + C14767) * C31624 + (C14768 + C14769) * C30439) +
            (C13649 * C1047 + C13645 * C1053 + C13650 * C1048 +
             C13646 * C1054) *
                C31337) *
               C13648) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C565 + (C13848 + C13849) * C559 -
            (C13850 + C13851) * C566 - (C13852 + C13853) * C560 +
            (C13854 + C13855) * C567 + (C13856 + C13857) * C561 -
            (C14154 + C14155) * C568 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C31380 * C31638 +
          (((C13851 + C13850) * C566 -
            ((C13849 + C13848) * C559 + (C13847 + C13846) * C565) +
            (C13853 + C13852) * C560 - (C13855 + C13854) * C567 -
            (C13857 + C13856) * C561 + (C14155 + C14154) * C568 +
            (C14157 + C14156) * C31671) *
               C13647 +
           ((C13858 + C13859) * C566 -
            ((C13860 + C13861) * C559 + (C13862 + C13863) * C565) +
            (C13864 + C13865) * C560 - (C13866 + C13867) * C567 -
            (C13868 + C13869) * C561 +
            (C13649 * C276 + C13645 * C294 + C13650 * C277 + C13646 * C296) *
                C568 +
            (C13649 * C295 + C13645 * C306 + C13650 * C297 + C13646 * C307) *
                C31671) *
               C13648) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
             (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C1681 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30420 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31624 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30439) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C1682 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C30439 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31624 -
             (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                 C30420 -
             (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                 C31337) *
                C13647 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C13648) *
               C31560 * C31670) *
              C31638 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C30420 -
             ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C1681 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C1682 +
           (((C16019 + C16018) * C30420 -
             ((C14943 + C14942) * C31624 + (C14941 + C14940) * C30439) +
             (C16021 + C16020) * C31337) *
                C13647 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C30420 -
             ((C14948 + C14949) * C31624 + (C14950 + C14951) * C30439) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C13648) *
               C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C31639 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31467) *
              C1301 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31467 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C31639) *
              C1302 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C31639 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31467) *
              C1303 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C13647 +
            ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
              C13646 * C5966) *
                 C1030 +
             (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
              C13646 * C5968) *
                 C31327) *
                C13648) *
               C31560 * C31467 -
           (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
               C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C265 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C259 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C266 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C260 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C267 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C13647 +
            ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
             (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
             (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
                C13648) *
               C31560 * C31639 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C266 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C259 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C265) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C260 -
             (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                 C267 -
             (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                 C31661) *
                C13647 +
            ((C14506 + C14507) * C266 -
             ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
             (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
             (C14516 + C14517) * C31661) *
                C13648) *
               C31560 * C31467) *
              C31638 +
          ((((C13851 + C13850) * C266 -
             ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
             (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
             (C13857 + C13856) * C31661) *
                C13647 +
            ((C13858 + C13859) * C266 -
             ((C13860 + C13861) * C259 + (C13862 + C13863) * C265) +
             (C13864 + C13865) * C260 - (C13866 + C13867) * C267 -
             (C13868 + C13869) * C31661) *
                C13648) *
               C31560 * C31639 +
           (((C14511 + C14510) * C265 + (C14509 + C14508) * C259 -
             (C14507 + C14506) * C266 - (C14513 + C14512) * C260 +
             (C14515 + C14514) * C267 + (C14517 + C14516) * C31661) *
                C13647 +
            ((C13649 * C1170 + C13645 * C1185 + C13650 * C1169 +
              C13646 * C1184) *
                 C265 +
             (C13649 * C1182 + C13645 * C1197 + C13650 * C1181 +
              C13646 * C1196) *
                 C259 -
             (C13650 * C1168 + C13646 * C1183 + C13649 * C1169 +
              C13645 * C1184) *
                 C266 -
             (C13650 * C1180 + C13646 * C1195 + C13649 * C1181 +
              C13645 * C1196) *
                 C260 +
             (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
              C13646 * C1458) *
                 C267 +
             (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
              C13646 * C1460) *
                 C31661) *
                C13648) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C2133 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C2134 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C2135 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C13648 +
            ((C13650 * C1868 + C13646 * C1880 + C13649 * C1869 +
              C13645 * C1881) *
                 C31327 +
             (C13650 * C1862 + C13646 * C1871 + C13649 * C1863 +
              C13645 * C1872) *
                 C1030) *
                C13647) *
               C31560 * C31683) *
              C31638 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C2134 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C2133 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C2135 +
           (((C16293 + C16292) * C1030 + (C16291 + C16290) * C31327) * C13647 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C13648) *
               C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                   C116 +
               (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                   C104 -
               (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                   C117 -
               (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                   C105 +
               (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                   C118 +
               (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                   C106 -
               (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                   C119 -
               (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                   C107 +
               (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
                   C120 +
               (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
                   C108) *
                  C13647 +
              ((C13649 * C271 + C13645 * C284 + C13650 * C268 + C13646 * C278) *
                   C116 +
               (C13649 * C283 + C13645 * C300 + C13650 * C282 + C13646 * C299) *
                   C104 -
               (C13650 * C269 + C13646 * C279 + C13649 * C268 + C13645 * C278) *
                   C117 -
               (C13650 * C281 + C13646 * C298 + C13649 * C282 + C13645 * C299) *
                   C105 +
               (C13649 * C269 + C13645 * C279 + C13650 * C270 + C13646 * C280) *
                   C118 +
               (C13649 * C281 + C13645 * C298 + C13650 * C285 + C13646 * C301) *
                   C106 -
               (C13650 * C272 + C13646 * C286 + C13649 * C270 + C13645 * C280) *
                   C119 -
               (C13650 * C287 + C13646 * C302 + C13649 * C285 + C13645 * C301) *
                   C107 +
               (C13649 * C272 + C13645 * C286 + C13650 * C569 + C13646 * C570) *
                   C120 +
               (C13649 * C287 + C13645 * C302 + C13650 * C571 + C13646 * C572) *
                   C108) *
                  C13648) *
             C31560 * C31380 * C31368 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13649 * C121 + C13645 * C128 + C13650 * C122 +
                 C13646 * C129) *
                    C265 +
                (C13649 * C131 + C13645 * C142 + C13650 * C132 +
                 C13646 * C143) *
                    C259 -
                (C13650 * C123 + C13646 * C130 + C13649 * C122 +
                 C13645 * C129) *
                    C266 -
                (C13650 * C133 + C13646 * C144 + C13649 * C132 +
                 C13645 * C143) *
                    C260 +
                (C13649 * C123 + C13645 * C130 + C13650 * C124 +
                 C13646 * C134) *
                    C267 +
                (C13649 * C133 + C13645 * C144 + C13650 * C135 +
                 C13646 * C145) *
                    C31661) *
                   C13647 +
               ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
                (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
                (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
                   C13648) *
                  C31560 * C31380 * C31704 +
              (((C13851 + C13850) * C266 -
                ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
                (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
                (C13857 + C13856) * C31661) *
                   C13647 +
               ((C13858 + C13859) * C266 -
                ((C13860 + C13861) * C259 + (C13862 + C13863) * C265) +
                (C13864 + C13865) * C260 - (C13866 + C13867) * C267 -
                (C13868 + C13869) * C31661) *
                   C13648) *
                  C31560 * C31380 * C31692 +
              (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
                (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
                (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
                   C13647 +
               ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
                 C13646 * C1041) *
                    C265 +
                (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
                 C13646 * C1050) *
                    C259 -
                (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
                 C13645 * C1041) *
                    C266 -
                (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
                 C13645 * C1050) *
                    C260 +
                (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
                 C13646 * C1308) *
                    C267 +
                (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
                 C13646 * C1310) *
                    C31661) *
                   C13648) *
                  C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
            (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
            (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31705 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C266 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C259 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C265) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C260 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C267 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C31661) *
               C13647 +
           ((C13649 * C824 + C13645 * C829 + C13650 * C825 + C13646 * C830) *
                C266 -
            ((C13650 * C832 + C13646 * C839 + C13649 * C831 + C13645 * C838) *
                 C259 +
             (C13650 * C824 + C13646 * C829 + C13649 * C823 + C13645 * C828) *
                 C265) +
            (C13649 * C832 + C13645 * C839 + C13650 * C833 + C13646 * C840) *
                C260 -
            (C13650 * C826 + C13646 * C834 + C13649 * C825 + C13645 * C830) *
                C267 -
            (C13650 * C835 + C13646 * C841 + C13649 * C833 + C13645 * C840) *
                C31661) *
               C13648) *
              C31560 * C31694 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C265 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C259 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C266 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C260 +
            (C13649 * C428 + C13645 * C443 + C13650 * C429 + C13646 * C447) *
                C267 +
            (C13649 * C446 + C13645 * C458 + C13650 * C448 + C13646 * C459) *
                C31661) *
               C13647 +
           ((C13649 * C1167 + C13645 * C1179 + C13650 * C1166 +
             C13646 * C1178) *
                C265 +
            (C13649 * C1176 + C13645 * C1194 + C13650 * C1175 +
             C13646 * C1193) *
                C259 -
            (C13650 * C1165 + C13646 * C1177 + C13649 * C1166 +
             C13645 * C1178) *
                C266 -
            (C13650 * C1174 + C13646 * C1192 + C13649 * C1175 +
             C13645 * C1193) *
                C260 +
            (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
             C13646 * C2032) *
                C267 +
            (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
             C13646 * C2034) *
                C31661) *
               C13648) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
            (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
            (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C960 -
            ((C13860 + C13861) * C31701 + (C13862 + C13863) * C959) +
            (C13864 + C13865) * C31688 - (C13866 + C13867) * C961 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C959 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C31701 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C960 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C31688 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C961 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C13647 +
           ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
              C31560 * C31380 * C1025 -
          (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
              C31560 * C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
           ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
              C31560 * C31380 * C1027 -
          (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
              C31560 * C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C13647 +
           ((C13649 * C5496 + C13645 * C5499 + C13650 * C5787 +
             C13646 * C5788) *
                C1030 +
            (C13649 * C5498 + C13645 * C5502 + C13650 * C5789 +
             C13646 * C5790) *
                C31327) *
               C13648) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C31705 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31694 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C31670) *
              C956 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31694 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C31705 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C31670) *
              C957 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C31705 -
           (((C13650 * C1566 + C13646 * C1569 + C13649 * C1565 +
              C13645 * C1568) *
                 C31327 +
             (C13650 * C1560 + C13646 * C1563 + C13649 * C1559 +
              C13645 * C1562) *
                 C1030) *
                C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31694 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C13647 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C13648) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
            (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
            (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C1681 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C960 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31701 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C959) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31688 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C961 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C31661) *
               C13647 +
           ((C14506 + C14507) * C960 -
            ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
            (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
            (C14516 + C14517) * C31661) *
               C13648) *
              C31560 * C1682 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C959 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C31701 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C960 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C31688 +
            (C13649 * C428 + C13645 * C443 + C13650 * C429 + C13646 * C447) *
                C961 +
            (C13649 * C446 + C13645 * C458 + C13650 * C448 + C13646 * C459) *
                C31661) *
               C13647 +
           ((C14940 + C14941) * C959 + (C14942 + C14943) * C31701 -
            (C13650 * C1165 + C13646 * C1177 + C13649 * C1166 +
             C13645 * C1178) *
                C960 -
            (C13650 * C1174 + C13646 * C1192 + C13649 * C1175 +
             C13645 * C1193) *
                C31688 +
            (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
             C13646 * C2032) *
                C961 +
            (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
             C13646 * C2034) *
                C31661) *
               C13648) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C1681 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C1682 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C31670) *
              C31704 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C1682 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C1681 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C31670) *
              C31692 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C1681 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C1682 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C13647 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C13648) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C13647 +
           ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
              C31560 * C1856 -
          (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
           ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                C31327 +
            (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                C1030) *
               C13647) *
              C31560 * C1857 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C1030 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C31327) *
               C13647 +
           ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
              C31560 * C1858 -
          (((C13650 * C2246 + C13646 * C2249 + C13649 * C2245 +
             C13645 * C2248) *
                C31327 +
            (C13650 * C2240 + C13646 * C2243 + C13649 * C2239 +
             C13645 * C2242) *
                C1030) *
               C13648 +
           ((C13650 * C1868 + C13646 * C1880 + C13649 * C1869 +
             C13645 * C1881) *
                C31327 +
            (C13650 * C1862 + C13646 * C1871 + C13649 * C1863 +
             C13645 * C1872) *
                C1030) *
               C13647) *
              C31560 * C1859 +
          (((C13649 * C1864 + C13645 * C1873 + C13650 * C1865 +
             C13646 * C1874) *
                C1030 +
            (C13649 * C1876 + C13645 * C1882 + C13650 * C1877 +
             C13646 * C1883) *
                C31327) *
               C13647 +
           ((C13649 * C6384 + C13645 * C6388 + C13650 * C10993 +
             C13646 * C10994) *
                C1030 +
            (C13649 * C6389 + C13645 * C6393 + C13650 * C10995 +
             C13646 * C10996) *
                C31327) *
               C13648) *
              C31560 * C1860) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
             (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30420 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31624 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30439) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31467) *
              C956 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C30420 -
             ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31467) *
              C957 +
          ((((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
             (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
                C13647 +
            ((C14762 + C14763) * C30439 + (C14764 + C14765) * C31624 -
             (C15090 + C15091) * C30420 - (C15092 + C15093) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C15297 + C15296) * C30420 -
             ((C14947 + C14946) * C31624 + (C14945 + C14944) * C30439) +
             (C15299 + C15298) * C31337) *
                C13647 +
            ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
              C13646 * C1564) *
                 C30420 -
             ((C13650 * C1566 + C13646 * C1569 + C13649 * C1565 +
               C13645 * C1568) *
                  C31624 +
              (C13650 * C1560 + C13646 * C1563 + C13649 * C1559 +
               C13645 * C1562) *
                  C30439) +
             (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
              C13646 * C1570) *
                 C31337) *
                C13648) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C565 + (C13848 + C13849) * C559 -
            (C13850 + C13851) * C566 - (C13852 + C13853) * C560 +
            (C13854 + C13855) * C567 + (C13856 + C13857) * C561 -
            (C14154 + C14155) * C568 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C31639 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C566 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C559 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C565) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C560 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C567 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C561 +
            (C13649 * C423 + C13645 * C433 + C13650 * C425 + C13646 * C439) *
                C568 +
            (C13649 * C438 + C13645 * C454 + C13650 * C440 + C13646 * C455) *
                C31671) *
               C13647 +
           ((C13649 * C824 + C13645 * C829 + C13650 * C825 + C13646 * C830) *
                C566 -
            ((C13650 * C832 + C13646 * C839 + C13649 * C831 + C13645 * C838) *
                 C559 +
             (C13650 * C824 + C13646 * C829 + C13649 * C823 + C13645 * C828) *
                 C565) +
            (C13649 * C832 + C13645 * C839 + C13650 * C833 + C13646 * C840) *
                C560 -
            (C13650 * C826 + C13646 * C834 + C13649 * C825 + C13645 * C830) *
                C567 -
            (C13650 * C835 + C13646 * C841 + C13649 * C833 + C13645 * C840) *
                C561 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C568 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C13648) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30439 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31624 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30420 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C13647 +
           ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
            (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
               C13648) *
              C31560 * C2133 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C30420 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31624 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C30439) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31337) *
               C13647 +
           ((C14506 + C14507) * C30420 -
            ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
            (C14512 + C14513) * C31337) *
               C13648) *
              C31560 * C2134 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C30439 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C31624 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C30420 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C31337) *
               C13647 +
           ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
            (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
               C13648) *
              C31560 * C2135 +
          (((C13649 * C1862 + C13645 * C1871 + C13650 * C1861 +
             C13646 * C1870) *
                C30420 -
            ((C13650 * C1868 + C13646 * C1880 + C13649 * C1869 +
              C13645 * C1881) *
                 C31624 +
             (C13650 * C1862 + C13646 * C1871 + C13649 * C1863 +
              C13645 * C1872) *
                 C30439) +
            (C13649 * C1868 + C13645 * C1880 + C13650 * C1867 +
             C13646 * C1879) *
                C31337) *
               C13647 +
           ((C13649 * C2240 + C13645 * C2243 + C13650 * C2241 +
             C13646 * C2244) *
                C30420 -
            ((C13650 * C2246 + C13646 * C2249 + C13649 * C2245 +
              C13645 * C2248) *
                 C31624 +
             (C13650 * C2240 + C13646 * C2243 + C13649 * C2239 +
              C13645 * C2242) *
                 C30439) +
            (C13649 * C2246 + C13645 * C2249 + C13650 * C2247 +
             C13646 * C2250) *
                C31337) *
               C13648) *
              C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
            (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
            (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C31704 +
          (((C13851 + C13850) * C266 -
            ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
            (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C266 -
            ((C13860 + C13861) * C259 + (C13862 + C13863) * C265) +
            (C13864 + C13865) * C260 - (C13866 + C13867) * C267 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C31692 +
          (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
            (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
            (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C265 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C259 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C266 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C260 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C267 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
               C116 +
           (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
               C104 -
           (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
               C117 -
           (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
               C105 +
           (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
               C118 +
           (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
               C106 -
           (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
               C119 -
           (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
               C107 +
           (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
               C120 +
           (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
               C108) *
              C13647 +
          ((C13649 * C271 + C13645 * C284 + C13650 * C268 + C13646 * C278) *
               C116 +
           (C13649 * C283 + C13645 * C300 + C13650 * C282 + C13646 * C299) *
               C104 -
           (C13650 * C269 + C13646 * C279 + C13649 * C268 + C13645 * C278) *
               C117 -
           (C13650 * C281 + C13646 * C298 + C13649 * C282 + C13645 * C299) *
               C105 +
           (C13649 * C269 + C13645 * C279 + C13650 * C270 + C13646 * C280) *
               C118 +
           (C13649 * C281 + C13645 * C298 + C13650 * C285 + C13646 * C301) *
               C106 -
           (C13650 * C272 + C13646 * C286 + C13649 * C270 + C13645 * C280) *
               C119 -
           (C13650 * C287 + C13646 * C302 + C13649 * C285 + C13645 * C301) *
               C107 +
           (C13649 * C272 + C13645 * C286 + C13650 * C569 + C13646 * C570) *
               C120 +
           (C13649 * C287 + C13645 * C302 + C13650 * C571 + C13646 * C572) *
               C108) *
              C13648) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
            (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
            (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C960 -
            ((C13860 + C13861) * C31701 + (C13862 + C13863) * C959) +
            (C13864 + C13865) * C31688 - (C13866 + C13867) * C961 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C959 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C31701 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C960 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C31688 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C961 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C13647 +
           ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
              C31560 * C31380 * C1025 -
          (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
              C31560 * C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
           ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
              C31560 * C31380 * C1027 -
          (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
              C31560 * C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C13647 +
           ((C13649 * C5496 + C13645 * C5499 + C13650 * C5787 +
             C13646 * C5788) *
                C1030 +
            (C13649 * C5498 + C13645 * C5502 + C13650 * C5789 +
             C13646 * C5790) *
                C31327) *
               C13648) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
            (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
            (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C1681 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C960 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31701 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C959) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31688 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C961 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C31661) *
               C13647 +
           ((C14506 + C14507) * C960 -
            ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
            (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
            (C14516 + C14517) * C31661) *
               C13648) *
              C31560 * C1682 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C959 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C31701 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C960 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C31688 +
            (C13649 * C428 + C13645 * C443 + C13650 * C429 + C13646 * C447) *
                C961 +
            (C13649 * C446 + C13645 * C458 + C13650 * C448 + C13646 * C459) *
                C31661) *
               C13647 +
           ((C14940 + C14941) * C959 + (C14942 + C14943) * C31701 -
            (C13650 * C1165 + C13646 * C1177 + C13649 * C1166 +
             C13645 * C1178) *
                C960 -
            (C13650 * C1174 + C13646 * C1192 + C13649 * C1175 +
             C13645 * C1193) *
                C31688 +
            (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
             C13646 * C2032) *
                C961 +
            (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
             C13646 * C2034) *
                C31661) *
               C13648) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C1681 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C1682 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C31670) *
              C31704 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C1682 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C1681 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C31670) *
              C31692 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C1681 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C1682 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C13647 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C13648) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30449 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31332 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30445 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31340 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C30455 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C2723) *
                C13647 +
            ((C13846 + C13847) * C30449 + (C13848 + C13849) * C31332 -
             (C13850 + C13851) * C30445 - (C13852 + C13853) * C31340 +
             (C13854 + C13855) * C30455 + (C13856 + C13857) * C2723) *
                C13648) *
               C31560 * C3120 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30445 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31332 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30449) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31340 -
             (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                 C30455 -
             (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                 C2723) *
                C13647 +
            ((C14506 + C14507) * C30445 -
             ((C14508 + C14509) * C31332 + (C14510 + C14511) * C30449) +
             (C14512 + C14513) * C31340 - (C14514 + C14515) * C30455 -
             (C14516 + C14517) * C2723) *
                C13648) *
               C31560 * C31467) *
              C31638 +
          ((((C13851 + C13850) * C30445 -
             ((C13849 + C13848) * C31332 + (C13847 + C13846) * C30449) +
             (C13853 + C13852) * C31340 - (C13855 + C13854) * C30455 -
             (C13857 + C13856) * C2723) *
                C13647 +
            ((C13858 + C13859) * C30445 -
             ((C13860 + C13861) * C31332 + (C13862 + C13863) * C30449) +
             (C13864 + C13865) * C31340 - (C13866 + C13867) * C30455 -
             (C13868 + C13869) * C2723) *
                C13648) *
               C31560 * C3120 +
           (((C14511 + C14510) * C30449 + (C14509 + C14508) * C31332 -
             (C14507 + C14506) * C30445 - (C14513 + C14512) * C31340 +
             (C14515 + C14514) * C30455 + (C14517 + C14516) * C2723) *
                C13647 +
            ((C14944 + C14945) * C30449 + (C14946 + C14947) * C31332 -
             (C15296 + C15297) * C30445 - (C15298 + C15299) * C31340 +
             (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
              C13646 * C1458) *
                 C30455 +
             (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
              C13646 * C1460) *
                 C2723) *
                C13648) *
               C31560 * C31467) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
             (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C31463 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C2464 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C2457 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C2463) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31470 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C2463 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C2457 -
             (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                 C2464 -
             (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                 C31337) *
                C13647 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C13648) *
               C31560 * C3628) *
              C31638 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C2464 -
             ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C31463 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31470 +
           (((C16019 + C16018) * C2464 -
             ((C14943 + C14942) * C2457 + (C14941 + C14940) * C2463) +
             (C16021 + C16020) * C31337) *
                C13647 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C2464 -
             ((C14948 + C14949) * C2457 + (C14950 + C14951) * C2463) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C13648) *
               C31560 * C3628) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
             (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C2464 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C2457 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C2463) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31704 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C2464 -
             ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31692 +
          ((((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
             (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
                C13647 +
            ((C14762 + C14763) * C2463 + (C14764 + C14765) * C2457 -
             (C15090 + C15091) * C2464 - (C15092 + C15093) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C15297 + C15296) * C2464 -
             ((C14947 + C14946) * C2457 + (C14945 + C14944) * C2463) +
             (C15299 + C15298) * C31337) *
                C13647 +
            ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
              C13646 * C1564) *
                 C2464 -
             ((C15438 + C15439) * C2457 + (C15440 + C15441) * C2463) +
             (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
              C13646 * C1570) *
                 C31337) *
                C13648) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C2355 + (C13848 + C13849) * C31710 -
            (C13850 + C13851) * C2356 - (C13852 + C13853) * C31703 +
            (C13854 + C13855) * C2357 + (C13856 + C13857) * C31690 -
            (C14154 + C14155) * C2358 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C3120 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C2356 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31710 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C2355) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31703 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C2357 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C31690 +
            (C13649 * C423 + C13645 * C433 + C13650 * C425 + C13646 * C439) *
                C2358 +
            (C13649 * C438 + C13645 * C454 + C13650 * C440 + C13646 * C455) *
                C31671) *
               C13647 +
           ((C14506 + C14507) * C2356 -
            ((C14508 + C14509) * C31710 + (C14510 + C14511) * C2355) +
            (C14512 + C14513) * C31703 - (C14514 + C14515) * C2357 -
            (C14516 + C14517) * C31690 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C2358 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C13648) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2463 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C2457 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2464 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C13647 +
           ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
            (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
               C13648) *
              C31560 * C31712 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C2464 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C2457 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C2463) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31337) *
               C13647 +
           ((C14506 + C14507) * C2464 -
            ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
            (C14512 + C14513) * C31337) *
               C13648) *
              C31560 * C31709 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C2463 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C2457 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C2464 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C31337) *
               C13647 +
           ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
            (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
               C13648) *
              C31560 * C31700 +
          (((C13649 * C1862 + C13645 * C1871 + C13650 * C1861 +
             C13646 * C1870) *
                C2464 -
            ((C13650 * C1868 + C13646 * C1880 + C13649 * C1869 +
              C13645 * C1881) *
                 C2457 +
             (C13650 * C1862 + C13646 * C1871 + C13649 * C1863 +
              C13645 * C1872) *
                 C2463) +
            (C13649 * C1868 + C13645 * C1880 + C13650 * C1867 +
             C13646 * C1879) *
                C31337) *
               C13647 +
           ((C13649 * C2240 + C13645 * C2243 + C13650 * C2241 +
             C13646 * C2244) *
                C2464 -
            ((C16290 + C16291) * C2457 + (C16292 + C16293) * C2463) +
            (C13649 * C2246 + C13645 * C2249 + C13650 * C2247 +
             C13646 * C2250) *
                C31337) *
               C13648) *
              C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30449 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31332 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30445 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31340 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C30455 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C2723) *
               C13647 +
           ((C13846 + C13847) * C30449 + (C13848 + C13849) * C31332 -
            (C13850 + C13851) * C30445 - (C13852 + C13853) * C31340 +
            (C13854 + C13855) * C30455 + (C13856 + C13857) * C2723) *
               C13648) *
              C31560 * C31463 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C30445 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31332 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C30449) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31340 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C30455 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C2723) *
               C13647 +
           ((C14506 + C14507) * C30445 -
            ((C14508 + C14509) * C31332 + (C14510 + C14511) * C30449) +
            (C14512 + C14513) * C31340 - (C14514 + C14515) * C30455 -
            (C14516 + C14517) * C2723) *
               C13648) *
              C31560 * C31470 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C30449 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C31332 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C30445 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C31340 +
            (C13649 * C428 + C13645 * C443 + C13650 * C429 + C13646 * C447) *
                C30455 +
            (C13649 * C446 + C13645 * C458 + C13650 * C448 + C13646 * C459) *
                C2723) *
               C13647 +
           ((C14940 + C14941) * C30449 + (C14942 + C14943) * C31332 -
            (C16018 + C16019) * C30445 - (C16020 + C16021) * C31340 +
            (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
             C13646 * C2032) *
                C30455 +
            (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
             C13646 * C2034) *
                C2723) *
               C13648) *
              C31560 * C3628) *
         C31368) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C2355 + (C13848 + C13849) * C31710 -
            (C13850 + C13851) * C2356 - (C13852 + C13853) * C31703 +
            (C13854 + C13855) * C2357 + (C13856 + C13857) * C31690 -
            (C14154 + C14155) * C2358 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C3120 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C2356 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31710 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C2355) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C31703 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C2357 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C31690 +
            (C13649 * C423 + C13645 * C433 + C13650 * C425 + C13646 * C439) *
                C2358 +
            (C13649 * C438 + C13645 * C454 + C13650 * C440 + C13646 * C455) *
                C31671) *
               C13647 +
           ((C14506 + C14507) * C2356 -
            ((C14508 + C14509) * C31710 + (C14510 + C14511) * C2355) +
            (C14512 + C14513) * C31703 - (C14514 + C14515) * C2357 -
            (C14516 + C14517) * C31690 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C2358 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C13648) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C2463 + (C13848 + C13849) * C2457 -
             (C13850 + C13851) * C2464 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C2464 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C2457 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C2463) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31704 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C2464 -
             ((C13860 + C13861) * C2457 + (C13862 + C13863) * C2463) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31467) *
              C31692 +
          ((((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
             (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
                C13647 +
            ((C14762 + C14763) * C2463 + (C14764 + C14765) * C2457 -
             (C15090 + C15091) * C2464 - (C15092 + C15093) * C31337) *
                C13648) *
               C31560 * C3120 +
           (((C15297 + C15296) * C2464 -
             ((C14947 + C14946) * C2457 + (C14945 + C14944) * C2463) +
             (C15299 + C15298) * C31337) *
                C13647 +
            ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
              C13646 * C1564) *
                 C2464 -
             ((C15438 + C15439) * C2457 + (C15440 + C15441) * C2463) +
             (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
              C13646 * C1570) *
                 C31337) *
                C13648) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C565 + (C13848 + C13849) * C559 -
            (C13850 + C13851) * C566 - (C13852 + C13853) * C560 +
            (C13854 + C13855) * C567 + (C13856 + C13857) * C561 -
            (C14154 + C14155) * C568 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C31380 * C31638 +
          (((C13851 + C13850) * C566 -
            ((C13849 + C13848) * C559 + (C13847 + C13846) * C565) +
            (C13853 + C13852) * C560 - (C13855 + C13854) * C567 -
            (C13857 + C13856) * C561 + (C14155 + C14154) * C568 +
            (C14157 + C14156) * C31671) *
               C13647 +
           ((C13858 + C13859) * C566 -
            ((C13860 + C13861) * C559 + (C13862 + C13863) * C565) +
            (C13864 + C13865) * C560 - (C13866 + C13867) * C567 -
            (C13868 + C13869) * C561 +
            (C13649 * C276 + C13645 * C294 + C13650 * C277 + C13646 * C296) *
                C568 +
            (C13649 * C295 + C13645 * C306 + C13650 * C297 + C13646 * C307) *
                C31671) *
               C13648) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30439 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31624 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30420 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C13647 +
           ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
            (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
               C13648) *
              C31560 * C31380 * C1301 +
          (((C13851 + C13850) * C30420 -
            ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
            (C13853 + C13852) * C31337) *
               C13647 +
           ((C13858 + C13859) * C30420 -
            ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
            (C13864 + C13865) * C31337) *
               C13648) *
              C31560 * C31380 * C1302 +
          (((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
            (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
               C13647 +
           ((C14762 + C14763) * C30439 + (C14764 + C14765) * C31624 -
            (C15090 + C15091) * C30420 - (C15092 + C15093) * C31337) *
               C13648) *
              C31560 * C31380 * C1303 +
          (((C15091 + C15090) * C30420 -
            ((C14765 + C14764) * C31624 + (C14763 + C14762) * C30439) +
            (C15093 + C15092) * C31337) *
               C13647 +
           ((C13649 * C1035 + C13645 * C1044 + C13650 * C1036 +
             C13646 * C1045) *
                C30420 -
            ((C14766 + C14767) * C31624 + (C14768 + C14769) * C30439) +
            (C13649 * C1047 + C13645 * C1053 + C13650 * C1048 +
             C13646 * C1054) *
                C31337) *
               C13648) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C265 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C259 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C266 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C260 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C267 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C13647 +
            ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
             (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
             (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
                C13648) *
               C31560 * C31639 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C266 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C259 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C265) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C260 -
             (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                 C267 -
             (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                 C31661) *
                C13647 +
            ((C14506 + C14507) * C266 -
             ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
             (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
             (C14516 + C14517) * C31661) *
                C13648) *
               C31560 * C31467) *
              C31638 +
          ((((C13851 + C13850) * C266 -
             ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
             (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
             (C13857 + C13856) * C31661) *
                C13647 +
            ((C13858 + C13859) * C266 -
             ((C13860 + C13861) * C259 + (C13862 + C13863) * C265) +
             (C13864 + C13865) * C260 - (C13866 + C13867) * C267 -
             (C13868 + C13869) * C31661) *
                C13648) *
               C31560 * C31639 +
           (((C14511 + C14510) * C265 + (C14509 + C14508) * C259 -
             (C14507 + C14506) * C266 - (C14513 + C14512) * C260 +
             (C14515 + C14514) * C267 + (C14517 + C14516) * C31661) *
                C13647 +
            ((C13649 * C1170 + C13645 * C1185 + C13650 * C1169 +
              C13646 * C1184) *
                 C265 +
             (C13649 * C1182 + C13645 * C1197 + C13650 * C1181 +
              C13646 * C1196) *
                 C259 -
             (C13650 * C1168 + C13646 * C1183 + C13649 * C1169 +
              C13645 * C1184) *
                 C266 -
             (C13650 * C1180 + C13646 * C1195 + C13649 * C1181 +
              C13645 * C1196) *
                 C260 +
             (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
              C13646 * C1458) *
                 C267 +
             (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
              C13646 * C1460) *
                 C31661) *
                C13648) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C31639 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31467) *
              C1301 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31467 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C31639) *
              C1302 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C31639 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31467) *
              C1303 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C13647 +
            ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
              C13646 * C5966) *
                 C1030 +
             (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
              C13646 * C5968) *
                 C31327) *
                C13648) *
               C31560 * C31467 -
           (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
               C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
            (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
            (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C31704 +
          (((C13851 + C13850) * C266 -
            ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
            (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C266 -
            ((C13860 + C13861) * C259 + (C13862 + C13863) * C265) +
            (C13864 + C13865) * C260 - (C13866 + C13867) * C267 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C31692 +
          (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
            (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
            (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C265 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C259 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C266 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C260 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C267 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
               C116 +
           (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
               C104 -
           (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
               C117 -
           (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
               C105 +
           (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
               C118 +
           (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
               C106 -
           (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
               C119 -
           (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
               C107 +
           (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
               C120 +
           (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
               C108) *
              C13647 +
          ((C13649 * C271 + C13645 * C284 + C13650 * C268 + C13646 * C278) *
               C116 +
           (C13649 * C283 + C13645 * C300 + C13650 * C282 + C13646 * C299) *
               C104 -
           (C13650 * C269 + C13646 * C279 + C13649 * C268 + C13645 * C278) *
               C117 -
           (C13650 * C281 + C13646 * C298 + C13649 * C282 + C13645 * C299) *
               C105 +
           (C13649 * C269 + C13645 * C279 + C13650 * C270 + C13646 * C280) *
               C118 +
           (C13649 * C281 + C13645 * C298 + C13650 * C285 + C13646 * C301) *
               C106 -
           (C13650 * C272 + C13646 * C286 + C13649 * C270 + C13645 * C280) *
               C119 -
           (C13650 * C287 + C13646 * C302 + C13649 * C285 + C13645 * C301) *
               C107 +
           (C13649 * C272 + C13645 * C286 + C13650 * C569 + C13646 * C570) *
               C120 +
           (C13649 * C287 + C13645 * C302 + C13650 * C571 + C13646 * C572) *
               C108) *
              C13648) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
            (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
            (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31705 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C266 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C259 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C265) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C260 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C267 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C31661) *
               C13647 +
           ((C13649 * C824 + C13645 * C829 + C13650 * C825 + C13646 * C830) *
                C266 -
            ((C13650 * C832 + C13646 * C839 + C13649 * C831 + C13645 * C838) *
                 C259 +
             (C13650 * C824 + C13646 * C829 + C13649 * C823 + C13645 * C828) *
                 C265) +
            (C13649 * C832 + C13645 * C839 + C13650 * C833 + C13646 * C840) *
                C260 -
            (C13650 * C826 + C13646 * C834 + C13649 * C825 + C13645 * C830) *
                C267 -
            (C13650 * C835 + C13646 * C841 + C13649 * C833 + C13645 * C840) *
                C31661) *
               C13648) *
              C31560 * C31694 +
          (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                C265 +
            (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                C259 -
            (C13650 * C428 + C13646 * C443 + C13649 * C427 + C13645 * C442) *
                C266 -
            (C13650 * C446 + C13646 * C458 + C13649 * C445 + C13645 * C457) *
                C260 +
            (C13649 * C428 + C13645 * C443 + C13650 * C429 + C13646 * C447) *
                C267 +
            (C13649 * C446 + C13645 * C458 + C13650 * C448 + C13646 * C459) *
                C31661) *
               C13647 +
           ((C13649 * C1167 + C13645 * C1179 + C13650 * C1166 +
             C13646 * C1178) *
                C265 +
            (C13649 * C1176 + C13645 * C1194 + C13650 * C1175 +
             C13646 * C1193) *
                C259 -
            (C13650 * C1165 + C13646 * C1177 + C13649 * C1166 +
             C13645 * C1178) *
                C266 -
            (C13650 * C1174 + C13646 * C1192 + C13649 * C1175 +
             C13645 * C1193) *
                C260 +
            (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
             C13646 * C2032) *
                C267 +
            (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
             C13646 * C2034) *
                C31661) *
               C13648) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
            (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
            (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C960 -
            ((C13860 + C13861) * C31701 + (C13862 + C13863) * C959) +
            (C13864 + C13865) * C31688 - (C13866 + C13867) * C961 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C959 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C31701 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C960 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C31688 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C961 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C13647 +
           ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
              C31560 * C31380 * C1025 -
          (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
              C31560 * C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
           ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
              C31560 * C31380 * C1027 -
          (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
              C31560 * C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C13647 +
           ((C13649 * C5496 + C13645 * C5499 + C13650 * C5787 +
             C13646 * C5788) *
                C1030 +
            (C13649 * C5498 + C13645 * C5502 + C13650 * C5789 +
             C13646 * C5790) *
                C31327) *
               C13648) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C13647 +
            ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
               C31560 * C31705 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C13648 +
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C31327 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C1030) *
                C13647) *
               C31560 * C31694 +
           (((C13649 * C426 + C13645 * C441 + C13650 * C427 + C13646 * C442) *
                 C1030 +
             (C13649 * C444 + C13645 * C456 + C13650 * C445 + C13646 * C457) *
                 C31327) *
                C13647 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C13648) *
               C31560 * C31670) *
              C956 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C13647 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C13648) *
               C31560 * C31694 -
           (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
               C31560 * C31705 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C13648 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C13647) *
               C31560 * C31670) *
              C957 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
            ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
               C31560 * C31705 -
           (((C13650 * C1566 + C13646 * C1569 + C13649 * C1565 +
              C13645 * C1568) *
                 C31327 +
             (C13650 * C1560 + C13646 * C1563 + C13649 * C1559 +
              C13645 * C1562) *
                 C1030) *
                C13648 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C13647) *
               C31560 * C31694 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C13647 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C13648) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C13647 +
           ((C13846 + C13847) * C565 + (C13848 + C13849) * C559 -
            (C13850 + C13851) * C566 - (C13852 + C13853) * C560 +
            (C13854 + C13855) * C567 + (C13856 + C13857) * C561 -
            (C14154 + C14155) * C568 - (C14156 + C14157) * C31671) *
               C13648) *
              C31560 * C31639 +
          (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                C566 -
            ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                 C559 +
             (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                 C565) +
            (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                C560 -
            (C13650 * C423 + C13646 * C433 + C13649 * C422 + C13645 * C432) *
                C567 -
            (C13650 * C438 + C13646 * C454 + C13649 * C434 + C13645 * C451) *
                C561 +
            (C13649 * C423 + C13645 * C433 + C13650 * C425 + C13646 * C439) *
                C568 +
            (C13649 * C438 + C13645 * C454 + C13650 * C440 + C13646 * C455) *
                C31671) *
               C13647 +
           ((C13649 * C824 + C13645 * C829 + C13650 * C825 + C13646 * C830) *
                C566 -
            ((C13650 * C832 + C13646 * C839 + C13649 * C831 + C13645 * C838) *
                 C559 +
             (C13650 * C824 + C13646 * C829 + C13649 * C823 + C13645 * C828) *
                 C565) +
            (C13649 * C832 + C13645 * C839 + C13650 * C833 + C13646 * C840) *
                C560 -
            (C13650 * C826 + C13646 * C834 + C13649 * C825 + C13645 * C830) *
                C567 -
            (C13650 * C835 + C13646 * C841 + C13649 * C833 + C13645 * C840) *
                C561 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C568 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C13648) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C13647 +
            ((C13846 + C13847) * C30439 + (C13848 + C13849) * C31624 -
             (C13850 + C13851) * C30420 - (C13852 + C13853) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C13649 * C421 + C13645 * C431 + C13650 * C422 + C13646 * C432) *
                 C30420 -
             ((C13650 * C435 + C13646 * C452 + C13649 * C436 + C13645 * C453) *
                  C31624 +
              (C13650 * C421 + C13646 * C431 + C13649 * C424 + C13645 * C437) *
                  C30439) +
             (C13649 * C435 + C13645 * C452 + C13650 * C434 + C13646 * C451) *
                 C31337) *
                C13647 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C13648) *
               C31560 * C31467) *
              C956 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C13647 +
            ((C13858 + C13859) * C30420 -
             ((C13860 + C13861) * C31624 + (C13862 + C13863) * C30439) +
             (C13864 + C13865) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C13647 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C13648) *
               C31560 * C31467) *
              C957 +
          ((((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
             (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
                C13647 +
            ((C14762 + C14763) * C30439 + (C14764 + C14765) * C31624 -
             (C15090 + C15091) * C30420 - (C15092 + C15093) * C31337) *
                C13648) *
               C31560 * C31639 +
           (((C15297 + C15296) * C30420 -
             ((C14947 + C14946) * C31624 + (C14945 + C14944) * C30439) +
             (C15299 + C15298) * C31337) *
                C13647 +
            ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
              C13646 * C1564) *
                 C30420 -
             ((C13650 * C1566 + C13646 * C1569 + C13649 * C1565 +
               C13645 * C1568) *
                  C31624 +
              (C13650 * C1560 + C13646 * C1563 + C13649 * C1559 +
               C13645 * C1562) *
                  C30439) +
             (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
              C13646 * C1570) *
                 C31337) *
                C13648) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
               C116 +
           (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
               C104 -
           (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
               C117 -
           (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
               C105 +
           (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
               C118 +
           (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
               C106 -
           (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
               C119 -
           (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
               C107 +
           (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
               C120 +
           (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
               C108) *
              C13647 +
          ((C13649 * C271 + C13645 * C284 + C13650 * C268 + C13646 * C278) *
               C116 +
           (C13649 * C283 + C13645 * C300 + C13650 * C282 + C13646 * C299) *
               C104 -
           (C13650 * C269 + C13646 * C279 + C13649 * C268 + C13645 * C278) *
               C117 -
           (C13650 * C281 + C13646 * C298 + C13649 * C282 + C13645 * C299) *
               C105 +
           (C13649 * C269 + C13645 * C279 + C13650 * C270 + C13646 * C280) *
               C118 +
           (C13649 * C281 + C13645 * C298 + C13650 * C285 + C13646 * C301) *
               C106 -
           (C13650 * C272 + C13646 * C286 + C13649 * C270 + C13645 * C280) *
               C119 -
           (C13650 * C287 + C13646 * C302 + C13649 * C285 + C13645 * C301) *
               C107 +
           (C13649 * C272 + C13645 * C286 + C13650 * C569 + C13646 * C570) *
               C120 +
           (C13649 * C287 + C13645 * C302 + C13650 * C571 + C13646 * C572) *
               C108) *
              C13648) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C265 + (C13848 + C13849) * C259 -
            (C13850 + C13851) * C266 - (C13852 + C13853) * C260 +
            (C13854 + C13855) * C267 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C31704 +
          (((C13851 + C13850) * C266 -
            ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
            (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C266 -
            ((C13860 + C13861) * C259 + (C13862 + C13863) * C265) +
            (C13864 + C13865) * C260 - (C13866 + C13867) * C267 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C31692 +
          (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
            (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
            (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C265 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C259 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C266 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C260 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C267 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C13647 +
           ((C13846 + C13847) * C959 + (C13848 + C13849) * C31701 -
            (C13850 + C13851) * C960 - (C13852 + C13853) * C31688 +
            (C13854 + C13855) * C961 + (C13856 + C13857) * C31661) *
               C13648) *
              C31560 * C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C13647 +
           ((C13858 + C13859) * C960 -
            ((C13860 + C13861) * C31701 + (C13862 + C13863) * C959) +
            (C13864 + C13865) * C31688 - (C13866 + C13867) * C961 -
            (C13868 + C13869) * C31661) *
               C13648) *
              C31560 * C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C13647 +
           ((C13649 * C1033 + C13645 * C1042 + C13650 * C1032 +
             C13646 * C1041) *
                C959 +
            (C13649 * C1039 + C13645 * C1051 + C13650 * C1038 +
             C13646 * C1050) *
                C31701 -
            (C13650 * C1031 + C13646 * C1040 + C13649 * C1032 +
             C13645 * C1041) *
                C960 -
            (C13650 * C1037 + C13646 * C1049 + C13649 * C1038 +
             C13645 * C1050) *
                C31688 +
            (C13649 * C1031 + C13645 * C1040 + C13650 * C1307 +
             C13646 * C1308) *
                C961 +
            (C13649 * C1037 + C13645 * C1049 + C13650 * C1309 +
             C13646 * C1310) *
                C31661) *
               C13648) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C13647 +
           ((C13846 + C13847) * C1030 + (C13848 + C13849) * C31327) * C13648) *
              C31560 * C31380 * C1025 -
          (((C13860 + C13861) * C31327 + (C13862 + C13863) * C1030) * C13648 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C13647) *
              C31560 * C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C13647 +
           ((C14762 + C14763) * C1030 + (C14764 + C14765) * C31327) * C13648) *
              C31560 * C31380 * C1027 -
          (((C14766 + C14767) * C31327 + (C14768 + C14769) * C1030) * C13648 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C13647) *
              C31560 * C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C13647 +
           ((C13649 * C5496 + C13645 * C5499 + C13650 * C5787 +
             C13646 * C5788) *
                C1030 +
            (C13649 * C5498 + C13645 * C5502 + C13650 * C5789 +
             C13646 * C5790) *
                C31327) *
               C13648) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C13647 +
            (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C13648) *
               C19339 +
           ((C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C13647 +
            (C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C13648) *
               C19340) *
              C31380 * C31423 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C13647 +
            (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C13648) *
               C19339 +
           ((C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C13647 +
            (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C13648) *
               C19340) *
              C31380 * C31430 +
          ((C7314 * C13647 +
            (C7306 + C7305 - C7304 - C7307 + C7308 + C7309) * C13648) *
               C19339 +
           ((C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C13647 +
            (C5677 * C30449 + C5678 * C31332 - C5985 * C30445 - C5986 * C31340 +
             (C4585 * C1561 + C31314 * C1564) * C30455 +
             (C4585 * C1567 + C31314 * C1570) * C2723) *
                C13648) *
               C19340) *
              C31380 * C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C2463 +
              (C4585 * C131 + C31314 * C142) * C2457 -
              (C4585 * C122 + C31314 * C129) * C2464 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C6998 + C6999 - C7000 - C7001) * C13648) *
                C19339 +
            ((C11590 + C11591 - C11592 - C11593) * C13647 + C27823 * C13648) *
                C19340) *
               C31639 +
           (((C11592 - (C11591 + C11590) + C11593) * C13647 + C27824 * C13648) *
                C19339 +
            ((C11596 - (C11595 + C11594) + C11597) * C13647 + C11610 * C13648) *
                C19340) *
               C31467) *
              C31423 +
          ((((C7000 - (C6999 + C6998) + C7001) * C13647 +
             (C7004 - (C7003 + C7002) + C7005) * C13648) *
                C19339 +
            (C27824 * C13647 + C7625 * C13648) * C19340) *
               C31639 +
           ((C27823 * C13647 + C28372 * C13648) * C19339 +
            (C27825 * C13647 + (C7178 + C7179 - C7180 - C7181) * C13648) *
                C19340) *
               C31467) *
              C31430 +
          (((C7018 * C13647 + (C7008 + C7007 - C7006 - C7009) * C13648) *
                C19339 +
            (C28372 * C13647 + (C7620 + C7621 - C7622 - C7623) * C13648) *
                C19340) *
               C31639 +
           ((C7625 * C13647 + (C7622 - (C7621 + C7620) + C7623) * C13648) *
                C19339 +
            ((C7180 - (C7179 + C7178) + C7181) * C13647 +
             ((C4585 * C6541 + C31314 * C6542) * C2464 -
              (C5679 * C2457 + C5680 * C2463) +
              (C4585 * C6543 + C31314 * C6544) * C31337) *
                 C13648) *
                C19340) *
               C31467) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C13647 +
            (C6998 + C6999 - C7000 - C7001) * C13648) *
               C19339 +
           ((C11590 + C11591 - C11592 - C11593) * C13647 +
            (C7168 + C7167 - C7166 - C7169) * C13648) *
               C19340) *
              C31380 * C31711 +
          (((C7000 - (C6999 + C6998) + C7001) * C13647 +
            (C7004 - (C7003 + C7002) + C7005) * C13648) *
               C19339 +
           ((C7166 - (C7167 + C7168) + C7169) * C13647 + C7625 * C13648) *
               C19340) *
              C31380 * C31707 +
          ((C7018 * C13647 + (C7008 + C7007 - C7006 - C7009) * C13648) *
               C19339 +
           ((C7172 + C7171 - C7170 - C7173) * C13647 +
            (C7620 + C7621 - C7622 - C7623) * C13648) *
               C19340) *
              C31380 * C31697 +
          ((C7019 * C13647 + (C7012 - (C7011 + C7010) + C7013) * C13648) *
               C19339 +
           ((C7622 - (C7621 + C7620) + C7623) * C13647 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C13648) *
               C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2355 +
             (C4585 * C131 + C31314 * C142) * C31710 -
             (C4585 * C122 + C31314 * C129) * C2356 -
             (C4585 * C132 + C31314 * C143) * C31703 +
             (C4585 * C123 + C31314 * C130) * C2357 +
             (C4585 * C133 + C31314 * C144) * C31690 -
             (C4585 * C124 + C31314 * C134) * C2358 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
                C13648) *
               C19339 +
           ((C12132 + C12133 - C12134 - C12135 + C12136 + C12137 - C12138 -
             C12139) *
                C13647 +
            (C27485 + C27486 - C27487 - C27488 + C27489 + C27490 - C27491 -
             C27492) *
                C13648) *
               C19340) *
              C31380 * C2353 +
          (((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
                C13647 +
            (C6894 - (C6893 + C6892) + C6895 - C6896 - C6897 + C6898 + C6899) *
                C13648) *
               C19339 +
           ((C27487 - (C27486 + C27485) + C27488 - C27489 - C27490 + C27491 +
             C27492) *
                C13647 +
            (C5284 * C2356 - (C5285 * C31710 + C5286 * C2355) + C5287 * C31703 -
             C5288 * C2357 - C5289 * C31690 +
             (C4585 * C1457 + C31314 * C1458) * C2358 +
             (C4585 * C1459 + C31314 * C1460) * C31671) *
                C13648) *
               C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C2463 +
              (C4585 * C131 + C31314 * C142) * C2457 -
              (C4585 * C122 + C31314 * C129) * C2464 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C6998 + C6999 - C7000 - C7001) * C13648) *
                C19339 +
            ((C11590 + C11591 - C11592 - C11593) * C13647 + C27823 * C13648) *
                C19340) *
               C31705 +
           (((C11592 - (C11591 + C11590) + C11593) * C13647 + C27824 * C13648) *
                C19339 +
            ((C11596 - (C11595 + C11594) + C11597) * C13647 + C11610 * C13648) *
                C19340) *
               C31694 +
           ((C11611 * C13647 + C27825 * C13648) * C19339 +
            ((C11600 + C11599 - C11598 - C11601) * C13647 +
             (C11603 + C11604 - C11605 - C11606) * C13648) *
                C19340) *
               C31670) *
              C2353 +
          ((((C7000 - (C6999 + C6998) + C7001) * C13647 +
             (C7004 - (C7003 + C7002) + C7005) * C13648) *
                C19339 +
            (C27824 * C13647 + C7625 * C13648) * C19340) *
               C31705 +
           ((C27823 * C13647 + (C7172 + C7171 - C7170 - C7173) * C13648) *
                C19339 +
            (C27825 * C13647 + (C7178 + C7179 - C7180 - C7181) * C13648) *
                C19340) *
               C31694 +
           ((C11610 * C13647 + (C7180 - (C7179 + C7178) + C7181) * C13648) *
                C19339 +
            ((C11605 - (C11604 + C11603) + C11606) * C13647 +
             ((C4585 * C6663 + C31314 * C6664) * C2464 -
              (C6778 * C2457 + C6779 * C2463) +
              (C4585 * C6665 + C31314 * C6666) * C31337) *
                 C13648) *
                C19340) *
               C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30449 +
              (C4585 * C131 + C31314 * C142) * C31332 -
              (C4585 * C122 + C31314 * C129) * C30445 -
              (C4585 * C132 + C31314 * C143) * C31340 +
              (C4585 * C123 + C31314 * C130) * C30455 +
              (C4585 * C133 + C31314 * C144) * C2723) *
                 C13647 +
             (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C13648) *
                C19339 +
            ((C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C13647 +
             C28174 * C13648) *
                C19340) *
               C31639 +
           (((C11872 - (C11871 + C11870) + C11873 - C11874 - C11875) * C13647 +
             C28175 * C13648) *
                C19339 +
            ((C11878 - (C11877 + C11876) + C11879 - C11880 - C11881) * C13647 +
             (C11882 - (C11883 + C11884) + C11885 - C11886 - C11887) * C13648) *
                C19340) *
               C31467) *
              C2353 +
          ((((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C13647 +
             (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C13648) *
                C19339 +
            (C28175 * C13647 +
             (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C13648) *
                C19340) *
               C31639 +
           ((C28174 * C13647 +
             (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C13648) *
                C19339 +
            ((C11884 + C11883 - C11882 - C11885 + C11886 + C11887) * C13647 +
             (C5675 * C30449 + C5676 * C31332 - C6560 * C30445 -
              C6561 * C31340 + (C4585 * C1173 + C31314 * C1188) * C30455 +
              (C4585 * C1191 + C31314 * C1200) * C2723) *
                 C13648) *
                C19340) *
               C31467) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2355 +
             (C4585 * C131 + C31314 * C142) * C31710 -
             (C4585 * C122 + C31314 * C129) * C2356 -
             (C4585 * C132 + C31314 * C143) * C31703 +
             (C4585 * C123 + C31314 * C130) * C2357 +
             (C4585 * C133 + C31314 * C144) * C31690 -
             (C4585 * C124 + C31314 * C134) * C2358 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
                C13648) *
               C19339 +
           ((C12132 + C12133 - C12134 - C12135 + C12136 + C12137 - C12138 -
             C12139) *
                C13647 +
            (C27485 + C27486 - C27487 - C27488 + C27489 + C27490 - C27491 -
             C27492) *
                C13648) *
               C19340) *
              C31380 * C2353 +
          (((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
                C13647 +
            (C6894 - (C6893 + C6892) + C6895 - C6896 - C6897 + C6898 + C6899) *
                C13648) *
               C19339 +
           ((C27487 - (C27486 + C27485) + C27488 - C27489 - C27490 + C27491 +
             C27492) *
                C13647 +
            (C5284 * C2356 - (C5285 * C31710 + C5286 * C2355) + C5287 * C31703 -
             C5288 * C2357 - C5289 * C31690 +
             (C4585 * C1457 + C31314 * C1458) * C2358 +
             (C4585 * C1459 + C31314 * C1460) * C31671) *
                C13648) *
               C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C13647 +
            (C6998 + C6999 - C7000 - C7001) * C13648) *
               C19339 +
           ((C11590 + C11591 - C11592 - C11593) * C13647 +
            (C7168 + C7167 - C7166 - C7169) * C13648) *
               C19340) *
              C31380 * C31711 +
          (((C7000 - (C6999 + C6998) + C7001) * C13647 +
            (C7004 - (C7003 + C7002) + C7005) * C13648) *
               C19339 +
           ((C7166 - (C7167 + C7168) + C7169) * C13647 + C7625 * C13648) *
               C19340) *
              C31380 * C31707 +
          ((C7018 * C13647 + (C7008 + C7007 - C7006 - C7009) * C13648) *
               C19339 +
           ((C7172 + C7171 - C7170 - C7173) * C13647 +
            (C7620 + C7621 - C7622 - C7623) * C13648) *
               C19340) *
              C31380 * C31697 +
          ((C7019 * C13647 + (C7012 - (C7011 + C7010) + C7013) * C13648) *
               C19339 +
           ((C7622 - (C7621 + C7620) + C7623) * C13647 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C13648) *
               C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30439 +
              (C4585 * C131 + C31314 * C142) * C31624 -
              (C4585 * C122 + C31314 * C129) * C30420 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C5792 + C5793 - C5794 - C5795) * C13648) *
                C19339 +
            ((C10408 + C10409 - C10410 - C10411) * C13647 + C26389 * C13648) *
                C19340) *
               C3120 +
           (((C10410 - (C10409 + C10408) + C10411) * C13647 + C26390 * C13648) *
                C19339 +
            ((C10414 - (C10413 + C10412) + C10415) * C13647 + C11015 * C13648) *
                C19340) *
               C31467) *
              C31423 +
          ((((C5794 - (C5793 + C5792) + C5795) * C13647 +
             (C5798 - (C5797 + C5796) + C5799) * C13648) *
                C19339 +
            (C26390 * C13647 + C5990 * C13648) * C19340) *
               C3120 +
           ((C26389 * C13647 + C26391 * C13648) * C19339 +
            (C27093 * C13647 + (C6552 + C6553 - C6564 - C6565) * C13648) *
                C19340) *
               C31467) *
              C31430 +
          (((C5818 * C13647 + (C5802 + C5801 - C5800 - C5803) * C13648) *
                C19339 +
            (C26391 * C13647 + (C5978 + C5979 - C5988 - C5989) * C13648) *
                C19340) *
               C3120 +
           ((C5990 * C13647 + (C5988 - (C5979 + C5978) + C5989) * C13648) *
                C19339 +
            ((C6564 - (C6553 + C6552) + C6565) * C13647 +
             ((C4585 * C6541 + C31314 * C6542) * C30420 -
              (C5679 * C31624 + C5680 * C30439) +
              (C4585 * C6543 + C31314 * C6544) * C31337) *
                 C13648) *
                C19340) *
               C31467) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C31463 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31470 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C3628) *
              C31423 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31470 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C31463 -
           (((C6782 + C6783) * C13648 + C27354 * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C3628) *
              C31430 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C31463 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C31470 +
           ((C5689 * C13647 + (C5688 + C5687) * C13648) * C19339 +
            ((C6783 + C6782) * C13647 +
             ((C4585 * C6765 + C31314 * C6766) * C1030 +
              (C4585 * C6767 + C31314 * C6768) * C31327) *
                 C13648) *
                C19340) *
               C3628) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C3120 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31467) *
              C31711 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31467 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C3120) *
              C31707 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C3120 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C31467) *
              C31697 +
          (((C6093 * C13647 + (C6101 + C6100) * C13648) * C19339 +
            ((C5688 + C5687) * C13647 +
             ((C4585 * C5641 + C31314 * C5646) * C1030 +
              (C4585 * C5647 + C31314 * C5650) * C31327) *
                 C13648) *
                C19340) *
               C31467 -
           (((C6100 + C6101) * C13648 + C26522 * C13647) * C19340 +
            ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
               C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C959 +
              (C4585 * C131 + C31314 * C142) * C31701 -
              (C4585 * C122 + C31314 * C129) * C960 -
              (C4585 * C132 + C31314 * C143) * C31688 +
              (C4585 * C123 + C31314 * C130) * C961 +
              (C4585 * C133 + C31314 * C144) * C31661) *
                 C13647 +
             (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
                C19339 +
            ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
             C29563 * C13648) *
                C19340) *
               C3120 +
           (((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C13647 +
             C29564 * C13648) *
                C19339 +
            ((C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C13647 +
             (C12960 - (C12961 + C12962) + C12963 - C12964 - C12965) * C13648) *
                C19340) *
               C31467) *
              C2353 +
          ((((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C13647 +
             (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C13648) *
                C19339 +
            (C29564 * C13647 +
             (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C13648) *
                C19340) *
               C3120 +
           ((C29563 * C13647 +
             (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C13648) *
                C19339 +
            ((C12962 + C12961 - C12960 - C12963 + C12964 + C12965) * C13647 +
             (C5675 * C959 + C5676 * C31701 - C6560 * C960 - C6561 * C31688 +
              (C4585 * C1173 + C31314 * C1188) * C961 +
              (C4585 * C1191 + C31314 * C1200) * C31661) *
                 C13648) *
                C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C31712 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31709 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C31700 -
           (((C11246 + C11247) * C13648 + (C10843 + C10842) * C13647) * C19340 +
            (C27354 * C13648 + C10828 * C13647) * C19339) *
               C31683) *
              C2353 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31709 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C31712 -
           (((C6782 + C6783) * C13648 + C27354 * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C31700 +
           ((C11238 * C13647 + (C6783 + C6782) * C13648) * C19339 +
            ((C11247 + C11246) * C13647 +
             ((C4585 * C6385 + C31314 * C6390) * C1030 +
              (C4585 * C6391 + C31314 * C6394) * C31327) *
                 C13648) *
                C19340) *
               C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30439 +
              (C4585 * C131 + C31314 * C142) * C31624 -
              (C4585 * C122 + C31314 * C129) * C30420 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C5792 + C5793 - C5794 - C5795) * C13648) *
                C19339 +
            ((C10408 + C10409 - C10410 - C10411) * C13647 + C26389 * C13648) *
                C19340) *
               C31463 +
           (((C10410 - (C10409 + C10408) + C10411) * C13647 + C26390 * C13648) *
                C19339 +
            ((C10414 - (C10413 + C10412) + C10415) * C13647 + C11015 * C13648) *
                C19340) *
               C31470 +
           ((C11014 * C13647 + C27093 * C13648) * C19339 +
            ((C11001 + C11000 - C10999 - C11002) * C13647 +
             (C11004 + C11005 - C11016 - C11017) * C13648) *
                C19340) *
               C3628) *
              C2353 +
          ((((C5794 - (C5793 + C5792) + C5795) * C13647 +
             (C5798 - (C5797 + C5796) + C5799) * C13648) *
                C19339 +
            (C26390 * C13647 + C5990 * C13648) * C19340) *
               C31463 +
           ((C26389 * C13647 + C26391 * C13648) * C19339 +
            (C27093 * C13647 + (C6552 + C6553 - C6564 - C6565) * C13648) *
                C19340) *
               C31470 +
           ((C11015 * C13647 + (C6564 - (C6553 + C6552) + C6565) * C13648) *
                C19339 +
            ((C11016 - (C11005 + C11004) + C11017) * C13647 +
             ((C4585 * C6663 + C31314 * C6664) * C30420 -
              (C6778 * C31624 + C6779 * C30439) +
              (C4585 * C6665 + C31314 * C6666) * C31337) *
                 C13648) *
                C19340) *
               C3628) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C959 +
              (C4585 * C131 + C31314 * C142) * C31701 -
              (C4585 * C122 + C31314 * C129) * C960 -
              (C4585 * C132 + C31314 * C143) * C31688 +
              (C4585 * C123 + C31314 * C130) * C961 +
              (C4585 * C133 + C31314 * C144) * C31661) *
                 C13647 +
             (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
                C19339 +
            ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
             C29563 * C13648) *
                C19340) *
               C3120 +
           (((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C13647 +
             C29564 * C13648) *
                C19339 +
            ((C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C13647 +
             (C12960 - (C12961 + C12962) + C12963 - C12964 - C12965) * C13648) *
                C19340) *
               C31467) *
              C2353 +
          ((((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C13647 +
             (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C13648) *
                C19339 +
            (C29564 * C13647 +
             (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C13648) *
                C19340) *
               C3120 +
           ((C29563 * C13647 +
             (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C13648) *
                C19339 +
            ((C12962 + C12961 - C12960 - C12963 + C12964 + C12965) * C13647 +
             (C5675 * C959 + C5676 * C31701 - C6560 * C960 - C6561 * C31688 +
              (C4585 * C1173 + C31314 * C1188) * C961 +
              (C4585 * C1191 + C31314 * C1200) * C31661) *
                 C13648) *
                C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C3120 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31467) *
              C31711 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31467 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C3120) *
              C31707 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C3120 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C31467) *
              C31697 +
          (((C6093 * C13647 + (C6101 + C6100) * C13648) * C19339 +
            ((C5688 + C5687) * C13647 +
             ((C4585 * C5641 + C31314 * C5646) * C1030 +
              (C4585 * C5647 + C31314 * C5650) * C31327) *
                 C13648) *
                C19340) *
               C31467 -
           (((C6100 + C6101) * C13648 + C26522 * C13647) * C19340 +
            ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
               C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C13647 +
            (C5792 + C5793 - C5794 - C5795) * C13648) *
               C19339 +
           ((C10408 + C10409 - C10410 - C10411) * C13647 +
            (C5972 + C5971 - C5970 - C5973) * C13648) *
               C19340) *
              C31380 * C1301 +
          (((C5794 - (C5793 + C5792) + C5795) * C13647 +
            (C5798 - (C5797 + C5796) + C5799) * C13648) *
               C19339 +
           ((C5970 - (C5971 + C5972) + C5973) * C13647 + C5990 * C13648) *
               C19340) *
              C31380 * C1302 +
          ((C5818 * C13647 + (C5802 + C5801 - C5800 - C5803) * C13648) *
               C19339 +
           ((C5976 + C5975 - C5974 - C5977) * C13647 +
            (C5978 + C5979 - C5988 - C5989) * C13648) *
               C19340) *
              C31380 * C1303 +
          ((C5819 * C13647 + (C5816 - (C5805 + C5804) + C5817) * C13648) *
               C19339 +
           ((C5988 - (C5979 + C5978) + C5989) * C13647 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             (C6098 * C31624 + C6099 * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C13648) *
               C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C565 +
             (C4585 * C131 + C31314 * C142) * C559 -
             (C4585 * C122 + C31314 * C129) * C566 -
             (C4585 * C132 + C31314 * C143) * C560 +
             (C4585 * C123 + C31314 * C130) * C567 +
             (C4585 * C133 + C31314 * C144) * C561 -
             (C4585 * C124 + C31314 * C134) * C568 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
                C13648) *
               C19339 +
           ((C9685 + C9686 - C9687 - C9688 + C9689 + C9690 - C9709 - C9710) *
                C13647 +
            (C25332 + C25333 - C25334 - C25335 + C25336 + C25337 - C25344 -
             C25345) *
                C13648) *
               C19340) *
              C31380 * C31638 +
          (((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
                C13647 +
            (C4994 - (C4993 + C4992) + C4995 - C4996 - C4997 + C5008 + C5009) *
                C13648) *
               C19339 +
           ((C25334 - (C25333 + C25332) + C25335 - C25336 - C25337 + C25344 +
             C25345) *
                C13647 +
            (C5284 * C566 - (C5285 * C559 + C5286 * C565) + C5287 * C560 -
             C5288 * C567 - C5289 * C561 +
             (C4585 * C1457 + C31314 * C1458) * C568 +
             (C4585 * C1459 + C31314 * C1460) * C31671) *
                C13648) *
               C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30439 +
              (C4585 * C131 + C31314 * C142) * C31624 -
              (C4585 * C122 + C31314 * C129) * C30420 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C5792 + C5793 - C5794 - C5795) * C13648) *
                C19339 +
            ((C10408 + C10409 - C10410 - C10411) * C13647 + C26389 * C13648) *
                C19340) *
               C1681 +
           (((C10410 - (C10409 + C10408) + C10411) * C13647 + C26390 * C13648) *
                C19339 +
            ((C10414 - (C10413 + C10412) + C10415) * C13647 + C11015 * C13648) *
                C19340) *
               C1682 +
           ((C11014 * C13647 + C27093 * C13648) * C19339 +
            ((C11001 + C11000 - C10999 - C11002) * C13647 +
             (C11004 + C11005 - C11016 - C11017) * C13648) *
                C19340) *
               C31670) *
              C31638 +
          ((((C5794 - (C5793 + C5792) + C5795) * C13647 +
             (C5798 - (C5797 + C5796) + C5799) * C13648) *
                C19339 +
            (C26390 * C13647 + C5990 * C13648) * C19340) *
               C1681 +
           ((C26389 * C13647 + C26391 * C13648) * C19339 +
            (C27093 * C13647 + (C6552 + C6553 - C6564 - C6565) * C13648) *
                C19340) *
               C1682 +
           ((C11015 * C13647 + (C6564 - (C6553 + C6552) + C6565) * C13648) *
                C19339 +
            ((C11016 - (C11005 + C11004) + C11017) * C13647 +
             ((C4585 * C6663 + C31314 * C6664) * C30420 -
              (C6778 * C31624 + C6779 * C30439) +
              (C4585 * C6665 + C31314 * C6666) * C31337) *
                 C13648) *
                C19340) *
               C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C31639 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31467) *
              C1301 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31467 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C31639) *
              C1302 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C31639 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C31467) *
              C1303 +
          (((C6093 * C13647 + (C6101 + C6100) * C13648) * C19339 +
            ((C5688 + C5687) * C13647 +
             ((C4585 * C5641 + C31314 * C5646) * C1030 +
              (C4585 * C5647 + C31314 * C5650) * C31327) *
                 C13648) *
                C19340) *
               C31467 -
           (((C6100 + C6101) * C13648 + C26522 * C13647) * C19340 +
            ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
               C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C265 +
              (C4585 * C131 + C31314 * C142) * C259 -
              (C4585 * C122 + C31314 * C129) * C266 -
              (C4585 * C132 + C31314 * C143) * C260 +
              (C4585 * C123 + C31314 * C130) * C267 +
              (C4585 * C133 + C31314 * C144) * C31661) *
                 C13647 +
             (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
                C19339 +
            ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
             C25678 * C13648) *
                C19340) *
               C31639 +
           (((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C13647 +
             C25679 * C13648) *
                C19339 +
            ((C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C13647 +
             (C9859 - (C9860 + C9861) + C9862 - C9869 - C9870) * C13648) *
                C19340) *
               C31467) *
              C31638 +
          ((((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C13647 +
             (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C13648) *
                C19339 +
            (C25679 * C13647 +
             (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C13648) *
                C19340) *
               C31639 +
           ((C25678 * C13647 +
             (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C13648) *
                C19339 +
            ((C9861 + C9860 - C9859 - C9862 + C9869 + C9870) * C13647 +
             (C5675 * C265 + C5676 * C259 - C6560 * C266 - C6561 * C260 +
              (C4585 * C1173 + C31314 * C1188) * C267 +
              (C4585 * C1191 + C31314 * C1200) * C31661) *
                 C13648) *
                C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C2133 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C2134 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C2135 -
           (((C11246 + C11247) * C13648 + (C10843 + C10842) * C13647) * C19340 +
            (C27354 * C13648 + C10828 * C13647) * C19339) *
               C31683) *
              C31638 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C2134 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C2133 -
           (((C6782 + C6783) * C13648 + C27354 * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C2135 +
           ((C11238 * C13647 + (C6783 + C6782) * C13648) * C19339 +
            ((C11247 + C11246) * C13647 +
             ((C4585 * C6385 + C31314 * C6390) * C1030 +
              (C4585 * C6391 + C31314 * C6394) * C31327) *
                 C13648) *
                C19340) *
               C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C4585 * C121 + C31314 * C128) * C116 +
                (C4585 * C131 + C31314 * C142) * C104 -
                (C4585 * C122 + C31314 * C129) * C117 -
                (C4585 * C132 + C31314 * C143) * C105 +
                (C4585 * C123 + C31314 * C130) * C118 +
                (C4585 * C133 + C31314 * C144) * C106 -
                (C4585 * C124 + C31314 * C134) * C119 -
                (C4585 * C135 + C31314 * C145) * C107 +
                (C4585 * C125 + C31314 * C136) * C120 +
                (C4585 * C137 + C31314 * C146) * C108) *
                   C13647 +
               (C4733 * C116 + C4734 * C104 - C4735 * C117 - C4736 * C105 +
                C4737 * C118 + C4738 * C106 - C5002 * C119 - C5003 * C107 +
                (C4585 * C272 + C31314 * C286) * C120 +
                (C4585 * C287 + C31314 * C302) * C108) *
                   C13648) *
                  C19339 +
              ((C9447 * C116 + C9448 * C104 - C9449 * C117 - C9450 * C105 +
                C9451 * C118 + C9452 * C106 - C9705 * C119 - C9706 * C107 +
                (C4585 * C425 + C31314 * C439) * C120 +
                (C4585 * C440 + C31314 * C455) * C108) *
                   C13647 +
               (C5280 * C116 + C5279 * C104 - C5278 * C117 - C5281 * C105 +
                C5282 * C118 + C5283 * C106 -
                (C4585 * C826 + C31314 * C834) * C119 -
                (C4585 * C835 + C31314 * C841) * C107 +
                (C4585 * C827 + C31314 * C836) * C120 +
                (C4585 * C837 + C31314 * C842) * C108) *
                   C13648) *
                  C19340) *
             C31380 * C31368 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C4585 * C121 + C31314 * C128) * C265 +
                 (C4585 * C131 + C31314 * C142) * C259 -
                 (C4585 * C122 + C31314 * C129) * C266 -
                 (C4585 * C132 + C31314 * C143) * C260 +
                 (C4585 * C123 + C31314 * C130) * C267 +
                 (C4585 * C133 + C31314 * C144) * C31661) *
                    C13647 +
                (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
                   C19339 +
               ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
                (C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C13648) *
                   C19340) *
                  C31380 * C31704 +
              (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C13647 +
                (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C13648) *
                   C19339 +
               ((C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C13647 +
                (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C13648) *
                   C19340) *
                  C31380 * C31692 +
              ((C4773 * C13647 +
                (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C13648) *
                   C19339 +
               ((C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C13647 +
                (C5677 * C265 + C5678 * C259 - C5985 * C266 - C5986 * C260 +
                 (C4585 * C1561 + C31314 * C1564) * C267 +
                 (C4585 * C1567 + C31314 * C1570) * C31661) *
                    C13648) *
                   C19340) *
                  C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
               C19339 +
           ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
            (C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C13648) *
               C19340) *
              C31705 +
          (((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C13647 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C13648) *
               C19339 +
           ((C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C13647 +
            (C9859 - (C9860 + C9861) + C9862 - C9869 - C9870) * C13648) *
               C19340) *
              C31694 +
          ((C9487 * C13647 +
            (C9861 + C9860 - C9859 - C9862 + C9869 + C9870) * C13648) *
               C19339 +
           ((C9479 + C9478 - C9477 - C9480 + C9481 + C9482) * C13647 +
            (C6781 * C265 + C6780 * C259 - C11012 * C266 - C11013 * C260 +
             (C4585 * C2241 + C31314 * C2244) * C267 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C13648) *
               C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
               C19339 +
           ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
            (C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C13648) *
               C19340) *
              C31380 * C956 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C13647 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C13648) *
               C19339 +
           ((C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C13647 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C13648) *
               C19340) *
              C31380 * C957 +
          ((C5434 * C13647 +
            (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C13648) *
               C19339 +
           ((C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C13647 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C13647 +
            (C5505 + C5506) * C13648) *
               C19339 +
           ((C10153 + C10154) * C13647 + (C5655 + C5654) * C13648) * C19340) *
              C31380 * C1025 -
          ((C5672 * C13648 + (C5654 + C5655) * C13647) * C19340 +
           ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
              C31380 * C1026 +
          ((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
           ((C5653 + C5652) * C13647 + C6093 * C13648) * C19340) *
              C31380 * C1027 -
          (((C6100 + C6101) * C13648 + (C5686 + C5685) * C13647) * C19340 +
           ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
              C31380 * C1028 +
          ((C5529 * C13647 + (C5528 + C5527) * C13648) * C19339 +
           ((C6101 + C6100) * C13647 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C13648) *
               C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C31705 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31694 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C31670) *
              C956 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31694 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C31705 -
           (((C6782 + C6783) * C13648 + (C6784 + C6785) * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C31670) *
              C957 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C31705 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            ((C5686 + C5685) * C13648 + C5672 * C13647) * C19339) *
               C31694 +
           ((C5689 * C13647 + (C5688 + C5687) * C13648) * C19339 +
            ((C6783 + C6782) * C13647 +
             ((C4585 * C6765 + C31314 * C6766) * C1030 +
              (C4585 * C6767 + C31314 * C6768) * C31327) *
                 C13648) *
                C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
               C19339 +
           ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
            (C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C13648) *
               C19340) *
              C1681 +
          (((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C13647 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C13648) *
               C19339 +
           ((C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C13647 +
            (C12960 - (C12961 + C12962) + C12963 - C12964 - C12965) * C13648) *
               C19340) *
              C1682 +
          ((C10646 * C13647 +
            (C12962 + C12961 - C12960 - C12963 + C12964 + C12965) * C13648) *
               C19339 +
           ((C10638 + C10637 - C10636 - C10639 + C10640 + C10641) * C13647 +
            (C6781 * C959 + C6780 * C31701 - C11012 * C960 - C11013 * C31688 +
             (C4585 * C2241 + C31314 * C2244) * C961 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C13648) *
               C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C1681 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C1682 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C31670) *
              C31704 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C1682 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C1681 -
           (((C6782 + C6783) * C13648 + (C6784 + C6785) * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C31670) *
              C31692 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C1681 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C1682 +
           ((C5689 * C13647 + (C5688 + C5687) * C13648) * C19339 +
            ((C6783 + C6782) * C13647 +
             ((C4585 * C6765 + C31314 * C6766) * C1030 +
              (C4585 * C6767 + C31314 * C6768) * C31327) *
                 C13648) *
                C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C13647 +
            (C5505 + C5506) * C13648) *
               C19339 +
           ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
              C1856 -
          ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
           (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
              C1857 +
          ((C10161 * C13647 + C26056 * C13648) * C19339 +
           ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
              C1858 -
          (((C11246 + C11247) * C13648 + (C10843 + C10842) * C13647) * C19340 +
           ((C6784 + C6785) * C13648 + C10828 * C13647) * C19339) *
              C1859 +
          ((C10846 * C13647 + (C11247 + C11246) * C13648) * C19339 +
           ((C10845 + C10844) * C13647 +
            ((C4585 * C11233 + C31314 * C11234) * C1030 +
             (C4585 * C11235 + C31314 * C11236) * C31327) *
                C13648) *
               C19340) *
              C1860) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30439 +
              (C4585 * C131 + C31314 * C142) * C31624 -
              (C4585 * C122 + C31314 * C129) * C30420 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C5792 + C5793 - C5794 - C5795) * C13648) *
                C19339 +
            ((C10408 + C10409 - C10410 - C10411) * C13647 + C26389 * C13648) *
                C19340) *
               C31639 +
           (((C10410 - (C10409 + C10408) + C10411) * C13647 + C26390 * C13648) *
                C19339 +
            ((C10414 - (C10413 + C10412) + C10415) * C13647 + C11015 * C13648) *
                C19340) *
               C31467) *
              C956 +
          ((((C5794 - (C5793 + C5792) + C5795) * C13647 +
             (C5798 - (C5797 + C5796) + C5799) * C13648) *
                C19339 +
            (C26390 * C13647 + C5990 * C13648) * C19340) *
               C31639 +
           ((C26389 * C13647 + C26391 * C13648) * C19339 +
            ((C6546 + C6547 - C6562 - C6563) * C13647 +
             (C6552 + C6553 - C6564 - C6565) * C13648) *
                C19340) *
               C31467) *
              C957 +
          (((C5818 * C13647 + (C5802 + C5801 - C5800 - C5803) * C13648) *
                C19339 +
            (C26391 * C13647 + (C5978 + C5979 - C5988 - C5989) * C13648) *
                C19340) *
               C31639 +
           ((C5990 * C13647 + (C5988 - (C5979 + C5978) + C5989) * C13648) *
                C19339 +
            ((C6564 - (C6553 + C6552) + C6565) * C13647 +
             ((C4585 * C6541 + C31314 * C6542) * C30420 -
              (C5679 * C31624 + C5680 * C30439) +
              (C4585 * C6543 + C31314 * C6544) * C31337) *
                 C13648) *
                C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C565 +
             (C4585 * C131 + C31314 * C142) * C559 -
             (C4585 * C122 + C31314 * C129) * C566 -
             (C4585 * C132 + C31314 * C143) * C560 +
             (C4585 * C123 + C31314 * C130) * C567 +
             (C4585 * C133 + C31314 * C144) * C561 -
             (C4585 * C124 + C31314 * C134) * C568 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
                C13648) *
               C19339 +
           ((C9685 + C9686 - C9687 - C9688 + C9689 + C9690 - C9709 - C9710) *
                C13647 +
            (C25332 + C25333 - C25334 - C25335 + C25336 + C25337 - C25344 -
             C25345) *
                C13648) *
               C19340) *
              C31639 +
          (((C9687 - (C9686 + C9685) + C9688 - C9689 - C9690 + C9709 + C9710) *
                C13647 +
            (C25334 - (C25333 + C25332) + C25335 - C25336 - C25337 + C25344 +
             C25345) *
                C13648) *
               C19339 +
           ((C9697 - (C9696 + C9695) + C9698 - C9699 - C9700 + C9711 + C9712) *
                C13647 +
            (C6558 * C566 - (C5674 * C559 + C5673 * C565) + C6559 * C560 -
             C9867 * C567 - C9868 * C561 +
             (C4585 * C2031 + C31314 * C2032) * C568 +
             (C4585 * C2033 + C31314 * C2034) * C31671) *
                C13648) *
               C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C13647 +
            (C5792 + C5793 - C5794 - C5795) * C13648) *
               C19339 +
           ((C10408 + C10409 - C10410 - C10411) * C13647 + C26389 * C13648) *
               C19340) *
              C2133 +
          (((C10410 - (C10409 + C10408) + C10411) * C13647 + C26390 * C13648) *
               C19339 +
           ((C10414 - (C10413 + C10412) + C10415) * C13647 + C11015 * C13648) *
               C19340) *
              C2134 +
          ((C11014 * C13647 + C27093 * C13648) * C19339 +
           ((C11001 + C11000 - C10999 - C11002) * C13647 +
            (C11004 + C11005 - C11016 - C11017) * C13648) *
               C19340) *
              C2135 +
          ((C11132 * C13647 + (C11016 - (C11005 + C11004) + C11017) * C13648) *
               C19339 +
           ((C11133 - (C11124 + C11123) + C11134) * C13647 +
            ((C4585 * C10993 + C31314 * C10994) * C30420 -
             (C11244 * C31624 + C11245 * C30439) +
             (C4585 * C10995 + C31314 * C10996) * C31337) *
                C13648) *
               C19340) *
              C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
               C19339 +
           ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
            (C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C13648) *
               C19340) *
              C31380 * C31704 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C13647 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C13648) *
               C19339 +
           ((C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C13647 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C13648) *
               C19340) *
              C31380 * C31692 +
          ((C4773 * C13647 +
            (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C13648) *
               C19339 +
           ((C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C13647 +
            (C5677 * C265 + C5678 * C259 - C5985 * C266 - C5986 * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C116 +
            (C4585 * C131 + C31314 * C142) * C104 -
            (C4585 * C122 + C31314 * C129) * C117 -
            (C4585 * C132 + C31314 * C143) * C105 +
            (C4585 * C123 + C31314 * C130) * C118 +
            (C4585 * C133 + C31314 * C144) * C106 -
            (C4585 * C124 + C31314 * C134) * C119 -
            (C4585 * C135 + C31314 * C145) * C107 +
            (C4585 * C125 + C31314 * C136) * C120 +
            (C4585 * C137 + C31314 * C146) * C108) *
               C13647 +
           (C4733 * C116 + C4734 * C104 - C4735 * C117 - C4736 * C105 +
            C4737 * C118 + C4738 * C106 - C5002 * C119 - C5003 * C107 +
            (C4585 * C272 + C31314 * C286) * C120 +
            (C4585 * C287 + C31314 * C302) * C108) *
               C13648) *
              C19339 +
          ((C9447 * C116 + C9448 * C104 - C9449 * C117 - C9450 * C105 +
            C9451 * C118 + C9452 * C106 - C9705 * C119 - C9706 * C107 +
            (C4585 * C425 + C31314 * C439) * C120 +
            (C4585 * C440 + C31314 * C455) * C108) *
               C13647 +
           (C5280 * C116 + C5279 * C104 - C5278 * C117 - C5281 * C105 +
            C5282 * C118 + C5283 * C106 -
            (C4585 * C826 + C31314 * C834) * C119 -
            (C4585 * C835 + C31314 * C841) * C107 +
            (C4585 * C827 + C31314 * C836) * C120 +
            (C4585 * C837 + C31314 * C842) * C108) *
               C13648) *
              C19340) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
               C19339 +
           ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
            (C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C13648) *
               C19340) *
              C31380 * C956 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C13647 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C13648) *
               C19339 +
           ((C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C13647 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C13648) *
               C19340) *
              C31380 * C957 +
          ((C5434 * C13647 +
            (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C13648) *
               C19339 +
           ((C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C13647 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C13647 +
            (C5505 + C5506) * C13648) *
               C19339 +
           ((C10153 + C10154) * C13647 + (C5655 + C5654) * C13648) * C19340) *
              C31380 * C1025 -
          ((C5672 * C13648 + (C5654 + C5655) * C13647) * C19340 +
           ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
              C31380 * C1026 +
          ((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
           ((C5653 + C5652) * C13647 + C6093 * C13648) * C19340) *
              C31380 * C1027 -
          (((C6100 + C6101) * C13648 + (C5686 + C5685) * C13647) * C19340 +
           ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
              C31380 * C1028 +
          ((C5529 * C13647 + (C5528 + C5527) * C13648) * C19339 +
           ((C6101 + C6100) * C13647 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C13648) *
               C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
               C19339 +
           ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
            (C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C13648) *
               C19340) *
              C1681 +
          (((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C13647 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C13648) *
               C19339 +
           ((C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C13647 +
            (C12960 - (C12961 + C12962) + C12963 - C12964 - C12965) * C13648) *
               C19340) *
              C1682 +
          ((C10646 * C13647 +
            (C12962 + C12961 - C12960 - C12963 + C12964 + C12965) * C13648) *
               C19339 +
           ((C10638 + C10637 - C10636 - C10639 + C10640 + C10641) * C13647 +
            (C6781 * C959 + C6780 * C31701 - C11012 * C960 - C11013 * C31688 +
             (C4585 * C2241 + C31314 * C2244) * C961 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C13648) *
               C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C1681 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C1682 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C31670) *
              C31704 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C1682 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C1681 -
           (((C6782 + C6783) * C13648 + (C6784 + C6785) * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C31670) *
              C31692 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C1681 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C1682 +
           ((C5689 * C13647 + (C5688 + C5687) * C13648) * C19339 +
            ((C6783 + C6782) * C13647 +
             ((C4585 * C6765 + C31314 * C6766) * C1030 +
              (C4585 * C6767 + C31314 * C6768) * C31327) *
                 C13648) *
                C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30449 +
              (C4585 * C131 + C31314 * C142) * C31332 -
              (C4585 * C122 + C31314 * C129) * C30445 -
              (C4585 * C132 + C31314 * C143) * C31340 +
              (C4585 * C123 + C31314 * C130) * C30455 +
              (C4585 * C133 + C31314 * C144) * C2723) *
                 C13647 +
             (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C13648) *
                C19339 +
            ((C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C13647 +
             C28174 * C13648) *
                C19340) *
               C3120 +
           (((C11872 - (C11871 + C11870) + C11873 - C11874 - C11875) * C13647 +
             C28175 * C13648) *
                C19339 +
            ((C11878 - (C11877 + C11876) + C11879 - C11880 - C11881) * C13647 +
             (C11882 - (C11883 + C11884) + C11885 - C11886 - C11887) * C13648) *
                C19340) *
               C31467) *
              C31638 +
          ((((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C13647 +
             (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C13648) *
                C19339 +
            (C28175 * C13647 +
             (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C13648) *
                C19340) *
               C3120 +
           ((C28174 * C13647 +
             (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C13648) *
                C19339 +
            ((C11884 + C11883 - C11882 - C11885 + C11886 + C11887) * C13647 +
             (C5675 * C30449 + C5676 * C31332 - C6560 * C30445 -
              C6561 * C31340 + (C4585 * C1173 + C31314 * C1188) * C30455 +
              (C4585 * C1191 + C31314 * C1200) * C2723) *
                 C13648) *
                C19340) *
               C31467) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C2463 +
              (C4585 * C131 + C31314 * C142) * C2457 -
              (C4585 * C122 + C31314 * C129) * C2464 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C6998 + C6999 - C7000 - C7001) * C13648) *
                C19339 +
            ((C11590 + C11591 - C11592 - C11593) * C13647 + C27823 * C13648) *
                C19340) *
               C31463 +
           (((C11592 - (C11591 + C11590) + C11593) * C13647 + C27824 * C13648) *
                C19339 +
            ((C11596 - (C11595 + C11594) + C11597) * C13647 + C11610 * C13648) *
                C19340) *
               C31470 +
           ((C11611 * C13647 + C27825 * C13648) * C19339 +
            ((C11600 + C11599 - C11598 - C11601) * C13647 +
             (C11603 + C11604 - C11605 - C11606) * C13648) *
                C19340) *
               C3628) *
              C31638 +
          ((((C7000 - (C6999 + C6998) + C7001) * C13647 +
             (C7004 - (C7003 + C7002) + C7005) * C13648) *
                C19339 +
            (C27824 * C13647 + C7625 * C13648) * C19340) *
               C31463 +
           ((C27823 * C13647 + C28372 * C13648) * C19339 +
            (C27825 * C13647 + (C7178 + C7179 - C7180 - C7181) * C13648) *
                C19340) *
               C31470 +
           ((C11610 * C13647 + (C7180 - (C7179 + C7178) + C7181) * C13648) *
                C19339 +
            ((C11605 - (C11604 + C11603) + C11606) * C13647 +
             ((C4585 * C6663 + C31314 * C6664) * C2464 -
              (C6778 * C2457 + C6779 * C2463) +
              (C4585 * C6665 + C31314 * C6666) * C31337) *
                 C13648) *
                C19340) *
               C3628) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C2463 +
              (C4585 * C131 + C31314 * C142) * C2457 -
              (C4585 * C122 + C31314 * C129) * C2464 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C6998 + C6999 - C7000 - C7001) * C13648) *
                C19339 +
            ((C11590 + C11591 - C11592 - C11593) * C13647 + C27823 * C13648) *
                C19340) *
               C3120 +
           (((C11592 - (C11591 + C11590) + C11593) * C13647 + C27824 * C13648) *
                C19339 +
            ((C11596 - (C11595 + C11594) + C11597) * C13647 + C11610 * C13648) *
                C19340) *
               C31467) *
              C31704 +
          ((((C7000 - (C6999 + C6998) + C7001) * C13647 +
             (C7004 - (C7003 + C7002) + C7005) * C13648) *
                C19339 +
            (C27824 * C13647 + C7625 * C13648) * C19340) *
               C3120 +
           ((C27823 * C13647 + C28372 * C13648) * C19339 +
            (C27825 * C13647 + (C7178 + C7179 - C7180 - C7181) * C13648) *
                C19340) *
               C31467) *
              C31692 +
          (((C7018 * C13647 + (C7008 + C7007 - C7006 - C7009) * C13648) *
                C19339 +
            (C28372 * C13647 + (C7620 + C7621 - C7622 - C7623) * C13648) *
                C19340) *
               C3120 +
           ((C7625 * C13647 + (C7622 - (C7621 + C7620) + C7623) * C13648) *
                C19339 +
            ((C7180 - (C7179 + C7178) + C7181) * C13647 +
             ((C4585 * C6541 + C31314 * C6542) * C2464 -
              (C5679 * C2457 + C5680 * C2463) +
              (C4585 * C6543 + C31314 * C6544) * C31337) *
                 C13648) *
                C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2355 +
             (C4585 * C131 + C31314 * C142) * C31710 -
             (C4585 * C122 + C31314 * C129) * C2356 -
             (C4585 * C132 + C31314 * C143) * C31703 +
             (C4585 * C123 + C31314 * C130) * C2357 +
             (C4585 * C133 + C31314 * C144) * C31690 -
             (C4585 * C124 + C31314 * C134) * C2358 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
                C13648) *
               C19339 +
           ((C12132 + C12133 - C12134 - C12135 + C12136 + C12137 - C12138 -
             C12139) *
                C13647 +
            (C27485 + C27486 - C27487 - C27488 + C27489 + C27490 - C27491 -
             C27492) *
                C13648) *
               C19340) *
              C3120 +
          (((C12134 - (C12133 + C12132) + C12135 - C12136 - C12137 + C12138 +
             C12139) *
                C13647 +
            (C27487 - (C27486 + C27485) + C27488 - C27489 - C27490 + C27491 +
             C27492) *
                C13648) *
               C19339 +
           ((C12142 - (C12141 + C12140) + C12143 - C12144 - C12145 + C12146 +
             C12147) *
                C13647 +
            (C6558 * C2356 - (C5674 * C31710 + C5673 * C2355) + C6559 * C31703 -
             C9867 * C2357 - C9868 * C31690 +
             (C4585 * C2031 + C31314 * C2032) * C2358 +
             (C4585 * C2033 + C31314 * C2034) * C31671) *
                C13648) *
               C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C13647 +
            (C6998 + C6999 - C7000 - C7001) * C13648) *
               C19339 +
           ((C11590 + C11591 - C11592 - C11593) * C13647 + C27823 * C13648) *
               C19340) *
              C31712 +
          (((C11592 - (C11591 + C11590) + C11593) * C13647 + C27824 * C13648) *
               C19339 +
           ((C11596 - (C11595 + C11594) + C11597) * C13647 + C11610 * C13648) *
               C19340) *
              C31709 +
          ((C11611 * C13647 + C27825 * C13648) * C19339 +
           ((C11600 + C11599 - C11598 - C11601) * C13647 +
            (C11603 + C11604 - C11605 - C11606) * C13648) *
               C19340) *
              C31700 +
          ((C12398 * C13647 + (C11605 - (C11604 + C11603) + C11606) * C13648) *
               C19339 +
           ((C12395 - (C12394 + C12393) + C12396) * C13647 +
            ((C4585 * C10993 + C31314 * C10994) * C2464 -
             (C11244 * C2457 + C11245 * C2463) +
             (C4585 * C10995 + C31314 * C10996) * C31337) *
                C13648) *
               C19340) *
              C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C13647 +
            (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C13648) *
               C19339 +
           ((C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C13647 +
            C28174 * C13648) *
               C19340) *
              C31463 +
          (((C11872 - (C11871 + C11870) + C11873 - C11874 - C11875) * C13647 +
            C28175 * C13648) *
               C19339 +
           ((C11878 - (C11877 + C11876) + C11879 - C11880 - C11881) * C13647 +
            (C11882 - (C11883 + C11884) + C11885 - C11886 - C11887) * C13648) *
               C19340) *
              C31470 +
          ((C12666 * C13647 +
            (C11884 + C11883 - C11882 - C11885 + C11886 + C11887) * C13648) *
               C19339 +
           ((C12659 + C12658 - C12657 - C12660 + C12661 + C12662) * C13647 +
            (C6781 * C30449 + C6780 * C31332 - C11012 * C30445 -
             C11013 * C31340 + (C4585 * C2241 + C31314 * C2244) * C30455 +
             (C4585 * C2247 + C31314 * C2250) * C2723) *
                C13648) *
               C19340) *
              C3628) *
         C31368) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2355 +
             (C4585 * C131 + C31314 * C142) * C31710 -
             (C4585 * C122 + C31314 * C129) * C2356 -
             (C4585 * C132 + C31314 * C143) * C31703 +
             (C4585 * C123 + C31314 * C130) * C2357 +
             (C4585 * C133 + C31314 * C144) * C31690 -
             (C4585 * C124 + C31314 * C134) * C2358 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
                C13648) *
               C19339 +
           ((C12132 + C12133 - C12134 - C12135 + C12136 + C12137 - C12138 -
             C12139) *
                C13647 +
            (C27485 + C27486 - C27487 - C27488 + C27489 + C27490 - C27491 -
             C27492) *
                C13648) *
               C19340) *
              C3120 +
          (((C12134 - (C12133 + C12132) + C12135 - C12136 - C12137 + C12138 +
             C12139) *
                C13647 +
            (C27487 - (C27486 + C27485) + C27488 - C27489 - C27490 + C27491 +
             C27492) *
                C13648) *
               C19339 +
           ((C12142 - (C12141 + C12140) + C12143 - C12144 - C12145 + C12146 +
             C12147) *
                C13647 +
            (C6558 * C2356 - (C5674 * C31710 + C5673 * C2355) + C6559 * C31703 -
             C9867 * C2357 - C9868 * C31690 +
             (C4585 * C2031 + C31314 * C2032) * C2358 +
             (C4585 * C2033 + C31314 * C2034) * C31671) *
                C13648) *
               C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C2463 +
              (C4585 * C131 + C31314 * C142) * C2457 -
              (C4585 * C122 + C31314 * C129) * C2464 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C6998 + C6999 - C7000 - C7001) * C13648) *
                C19339 +
            ((C11590 + C11591 - C11592 - C11593) * C13647 + C27823 * C13648) *
                C19340) *
               C3120 +
           (((C11592 - (C11591 + C11590) + C11593) * C13647 + C27824 * C13648) *
                C19339 +
            ((C11596 - (C11595 + C11594) + C11597) * C13647 + C11610 * C13648) *
                C19340) *
               C31467) *
              C31704 +
          ((((C7000 - (C6999 + C6998) + C7001) * C13647 +
             (C7004 - (C7003 + C7002) + C7005) * C13648) *
                C19339 +
            (C27824 * C13647 + C7625 * C13648) * C19340) *
               C3120 +
           ((C27823 * C13647 + C28372 * C13648) * C19339 +
            (C27825 * C13647 + (C7178 + C7179 - C7180 - C7181) * C13648) *
                C19340) *
               C31467) *
              C31692 +
          (((C7018 * C13647 + (C7008 + C7007 - C7006 - C7009) * C13648) *
                C19339 +
            (C28372 * C13647 + (C7620 + C7621 - C7622 - C7623) * C13648) *
                C19340) *
               C3120 +
           ((C7625 * C13647 + (C7622 - (C7621 + C7620) + C7623) * C13648) *
                C19339 +
            ((C7180 - (C7179 + C7178) + C7181) * C13647 +
             ((C4585 * C6541 + C31314 * C6542) * C2464 -
              (C5679 * C2457 + C5680 * C2463) +
              (C4585 * C6543 + C31314 * C6544) * C31337) *
                 C13648) *
                C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C565 +
             (C4585 * C131 + C31314 * C142) * C559 -
             (C4585 * C122 + C31314 * C129) * C566 -
             (C4585 * C132 + C31314 * C143) * C560 +
             (C4585 * C123 + C31314 * C130) * C567 +
             (C4585 * C133 + C31314 * C144) * C561 -
             (C4585 * C124 + C31314 * C134) * C568 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
                C13648) *
               C19339 +
           ((C9685 + C9686 - C9687 - C9688 + C9689 + C9690 - C9709 - C9710) *
                C13647 +
            (C25332 + C25333 - C25334 - C25335 + C25336 + C25337 - C25344 -
             C25345) *
                C13648) *
               C19340) *
              C31380 * C31638 +
          (((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
                C13647 +
            (C4994 - (C4993 + C4992) + C4995 - C4996 - C4997 + C5008 + C5009) *
                C13648) *
               C19339 +
           ((C25334 - (C25333 + C25332) + C25335 - C25336 - C25337 + C25344 +
             C25345) *
                C13647 +
            (C5284 * C566 - (C5285 * C559 + C5286 * C565) + C5287 * C560 -
             C5288 * C567 - C5289 * C561 +
             (C4585 * C1457 + C31314 * C1458) * C568 +
             (C4585 * C1459 + C31314 * C1460) * C31671) *
                C13648) *
               C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C13647 +
            (C5792 + C5793 - C5794 - C5795) * C13648) *
               C19339 +
           ((C10408 + C10409 - C10410 - C10411) * C13647 +
            (C5972 + C5971 - C5970 - C5973) * C13648) *
               C19340) *
              C31380 * C1301 +
          (((C5794 - (C5793 + C5792) + C5795) * C13647 +
            (C5798 - (C5797 + C5796) + C5799) * C13648) *
               C19339 +
           ((C5970 - (C5971 + C5972) + C5973) * C13647 + C5990 * C13648) *
               C19340) *
              C31380 * C1302 +
          ((C5818 * C13647 + (C5802 + C5801 - C5800 - C5803) * C13648) *
               C19339 +
           ((C5976 + C5975 - C5974 - C5977) * C13647 +
            (C5978 + C5979 - C5988 - C5989) * C13648) *
               C19340) *
              C31380 * C1303 +
          ((C5819 * C13647 + (C5816 - (C5805 + C5804) + C5817) * C13648) *
               C19339 +
           ((C5988 - (C5979 + C5978) + C5989) * C13647 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             (C6098 * C31624 + C6099 * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C13648) *
               C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C265 +
              (C4585 * C131 + C31314 * C142) * C259 -
              (C4585 * C122 + C31314 * C129) * C266 -
              (C4585 * C132 + C31314 * C143) * C260 +
              (C4585 * C123 + C31314 * C130) * C267 +
              (C4585 * C133 + C31314 * C144) * C31661) *
                 C13647 +
             (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
                C19339 +
            ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
             C25678 * C13648) *
                C19340) *
               C31639 +
           (((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C13647 +
             C25679 * C13648) *
                C19339 +
            ((C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C13647 +
             (C9859 - (C9860 + C9861) + C9862 - C9869 - C9870) * C13648) *
                C19340) *
               C31467) *
              C31638 +
          ((((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C13647 +
             (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C13648) *
                C19339 +
            (C25679 * C13647 +
             (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C13648) *
                C19340) *
               C31639 +
           ((C25678 * C13647 +
             (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C13648) *
                C19339 +
            ((C9861 + C9860 - C9859 - C9862 + C9869 + C9870) * C13647 +
             (C5675 * C265 + C5676 * C259 - C6560 * C266 - C6561 * C260 +
              (C4585 * C1173 + C31314 * C1188) * C267 +
              (C4585 * C1191 + C31314 * C1200) * C31661) *
                 C13648) *
                C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C31639 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31467) *
              C1301 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31467 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C31639) *
              C1302 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C31639 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            (C26522 * C13648 + C5672 * C13647) * C19339) *
               C31467) *
              C1303 +
          (((C6093 * C13647 + (C6101 + C6100) * C13648) * C19339 +
            ((C5688 + C5687) * C13647 +
             ((C4585 * C5641 + C31314 * C5646) * C1030 +
              (C4585 * C5647 + C31314 * C5650) * C31327) *
                 C13648) *
                C19340) *
               C31467 -
           (((C6100 + C6101) * C13648 + C26522 * C13647) * C19340 +
            ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
               C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
               C19339 +
           ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
            (C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C13648) *
               C19340) *
              C31380 * C31704 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C13647 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C13648) *
               C19339 +
           ((C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C13647 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C13648) *
               C19340) *
              C31380 * C31692 +
          ((C4773 * C13647 +
            (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C13648) *
               C19339 +
           ((C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C13647 +
            (C5677 * C265 + C5678 * C259 - C5985 * C266 - C5986 * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C116 +
            (C4585 * C131 + C31314 * C142) * C104 -
            (C4585 * C122 + C31314 * C129) * C117 -
            (C4585 * C132 + C31314 * C143) * C105 +
            (C4585 * C123 + C31314 * C130) * C118 +
            (C4585 * C133 + C31314 * C144) * C106 -
            (C4585 * C124 + C31314 * C134) * C119 -
            (C4585 * C135 + C31314 * C145) * C107 +
            (C4585 * C125 + C31314 * C136) * C120 +
            (C4585 * C137 + C31314 * C146) * C108) *
               C13647 +
           (C4733 * C116 + C4734 * C104 - C4735 * C117 - C4736 * C105 +
            C4737 * C118 + C4738 * C106 - C5002 * C119 - C5003 * C107 +
            (C4585 * C272 + C31314 * C286) * C120 +
            (C4585 * C287 + C31314 * C302) * C108) *
               C13648) *
              C19339 +
          ((C9447 * C116 + C9448 * C104 - C9449 * C117 - C9450 * C105 +
            C9451 * C118 + C9452 * C106 - C9705 * C119 - C9706 * C107 +
            (C4585 * C425 + C31314 * C439) * C120 +
            (C4585 * C440 + C31314 * C455) * C108) *
               C13647 +
           (C5280 * C116 + C5279 * C104 - C5278 * C117 - C5281 * C105 +
            C5282 * C118 + C5283 * C106 -
            (C4585 * C826 + C31314 * C834) * C119 -
            (C4585 * C835 + C31314 * C841) * C107 +
            (C4585 * C827 + C31314 * C836) * C120 +
            (C4585 * C837 + C31314 * C842) * C108) *
               C13648) *
              C19340) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
               C19339 +
           ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
            (C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C13648) *
               C19340) *
              C31705 +
          (((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C13647 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C13648) *
               C19339 +
           ((C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C13647 +
            (C9859 - (C9860 + C9861) + C9862 - C9869 - C9870) * C13648) *
               C19340) *
              C31694 +
          ((C9487 * C13647 +
            (C9861 + C9860 - C9859 - C9862 + C9869 + C9870) * C13648) *
               C19339 +
           ((C9479 + C9478 - C9477 - C9480 + C9481 + C9482) * C13647 +
            (C6781 * C265 + C6780 * C259 - C11012 * C266 - C11013 * C260 +
             (C4585 * C2241 + C31314 * C2244) * C267 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C13648) *
               C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
               C19339 +
           ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
            (C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C13648) *
               C19340) *
              C31380 * C956 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C13647 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C13648) *
               C19339 +
           ((C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C13647 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C13648) *
               C19340) *
              C31380 * C957 +
          ((C5434 * C13647 +
            (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C13648) *
               C19339 +
           ((C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C13647 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C13647 +
            (C5505 + C5506) * C13648) *
               C19339 +
           ((C10153 + C10154) * C13647 + (C5655 + C5654) * C13648) * C19340) *
              C31380 * C1025 -
          ((C5672 * C13648 + (C5654 + C5655) * C13647) * C19340 +
           ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
              C31380 * C1026 +
          ((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
           ((C5653 + C5652) * C13647 + C6093 * C13648) * C19340) *
              C31380 * C1027 -
          (((C6100 + C6101) * C13648 + (C5686 + C5685) * C13647) * C19340 +
           ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
              C31380 * C1028 +
          ((C5529 * C13647 + (C5528 + C5527) * C13648) * C19339 +
           ((C6101 + C6100) * C13647 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C13648) *
               C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C1030 +
              (C4585 * C131 + C31314 * C142) * C31327) *
                 C13647 +
             (C5505 + C5506) * C13648) *
                C19339 +
            ((C10153 + C10154) * C13647 + C26054 * C13648) * C19340) *
               C31705 -
           ((C10159 * C13648 + (C10156 + C10155) * C13647) * C19340 +
            (C26055 * C13648 + (C10154 + C10153) * C13647) * C19339) *
               C31694 +
           ((C10161 * C13647 + C26056 * C13648) * C19339 +
            ((C10158 + C10157) * C13647 + C11238 * C13648) * C19340) *
               C31670) *
              C956 +
          (((C26054 * C13647 + C26057 * C13648) * C19339 +
            (C26056 * C13647 + C5689 * C13648) * C19340) *
               C31694 -
           ((C5672 * C13648 + C26055 * C13647) * C19340 +
            ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
               C31705 -
           (((C6782 + C6783) * C13648 + (C6784 + C6785) * C13647) * C19340 +
            (C26058 * C13648 + C10159 * C13647) * C19339) *
               C31670) *
              C957 +
          (((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
            (C26057 * C13647 + C6093 * C13648) * C19340) *
               C31705 -
           (((C5687 + C5688) * C13648 + C26058 * C13647) * C19340 +
            ((C5686 + C5685) * C13648 + C5672 * C13647) * C19339) *
               C31694 +
           ((C5689 * C13647 + (C5688 + C5687) * C13648) * C19339 +
            ((C6783 + C6782) * C13647 +
             ((C4585 * C6765 + C31314 * C6766) * C1030 +
              (C4585 * C6767 + C31314 * C6768) * C31327) *
                 C13648) *
                C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C565 +
             (C4585 * C131 + C31314 * C142) * C559 -
             (C4585 * C122 + C31314 * C129) * C566 -
             (C4585 * C132 + C31314 * C143) * C560 +
             (C4585 * C123 + C31314 * C130) * C567 +
             (C4585 * C133 + C31314 * C144) * C561 -
             (C4585 * C124 + C31314 * C134) * C568 -
             (C4585 * C135 + C31314 * C145) * C31671) *
                C13647 +
            (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
                C13648) *
               C19339 +
           ((C9685 + C9686 - C9687 - C9688 + C9689 + C9690 - C9709 - C9710) *
                C13647 +
            (C25332 + C25333 - C25334 - C25335 + C25336 + C25337 - C25344 -
             C25345) *
                C13648) *
               C19340) *
              C31639 +
          (((C9687 - (C9686 + C9685) + C9688 - C9689 - C9690 + C9709 + C9710) *
                C13647 +
            (C25334 - (C25333 + C25332) + C25335 - C25336 - C25337 + C25344 +
             C25345) *
                C13648) *
               C19339 +
           ((C9697 - (C9696 + C9695) + C9698 - C9699 - C9700 + C9711 + C9712) *
                C13647 +
            (C6558 * C566 - (C5674 * C559 + C5673 * C565) + C6559 * C560 -
             C9867 * C567 - C9868 * C561 +
             (C4585 * C2031 + C31314 * C2032) * C568 +
             (C4585 * C2033 + C31314 * C2034) * C31671) *
                C13648) *
               C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C121 + C31314 * C128) * C30439 +
              (C4585 * C131 + C31314 * C142) * C31624 -
              (C4585 * C122 + C31314 * C129) * C30420 -
              (C4585 * C132 + C31314 * C143) * C31337) *
                 C13647 +
             (C5792 + C5793 - C5794 - C5795) * C13648) *
                C19339 +
            ((C10408 + C10409 - C10410 - C10411) * C13647 + C26389 * C13648) *
                C19340) *
               C31639 +
           (((C10410 - (C10409 + C10408) + C10411) * C13647 + C26390 * C13648) *
                C19339 +
            ((C10414 - (C10413 + C10412) + C10415) * C13647 + C11015 * C13648) *
                C19340) *
               C31467) *
              C956 +
          ((((C5794 - (C5793 + C5792) + C5795) * C13647 +
             (C5798 - (C5797 + C5796) + C5799) * C13648) *
                C19339 +
            (C26390 * C13647 + C5990 * C13648) * C19340) *
               C31639 +
           ((C26389 * C13647 + C26391 * C13648) * C19339 +
            ((C6546 + C6547 - C6562 - C6563) * C13647 +
             (C6552 + C6553 - C6564 - C6565) * C13648) *
                C19340) *
               C31467) *
              C957 +
          (((C5818 * C13647 + (C5802 + C5801 - C5800 - C5803) * C13648) *
                C19339 +
            (C26391 * C13647 + (C5978 + C5979 - C5988 - C5989) * C13648) *
                C19340) *
               C31639 +
           ((C5990 * C13647 + (C5988 - (C5979 + C5978) + C5989) * C13648) *
                C19339 +
            ((C6564 - (C6553 + C6552) + C6565) * C13647 +
             ((C4585 * C6541 + C31314 * C6542) * C30420 -
              (C5679 * C31624 + C5680 * C30439) +
              (C4585 * C6543 + C31314 * C6544) * C31337) *
                 C13648) *
                C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C116 +
            (C4585 * C131 + C31314 * C142) * C104 -
            (C4585 * C122 + C31314 * C129) * C117 -
            (C4585 * C132 + C31314 * C143) * C105 +
            (C4585 * C123 + C31314 * C130) * C118 +
            (C4585 * C133 + C31314 * C144) * C106 -
            (C4585 * C124 + C31314 * C134) * C119 -
            (C4585 * C135 + C31314 * C145) * C107 +
            (C4585 * C125 + C31314 * C136) * C120 +
            (C4585 * C137 + C31314 * C146) * C108) *
               C13647 +
           (C4733 * C116 + C4734 * C104 - C4735 * C117 - C4736 * C105 +
            C4737 * C118 + C4738 * C106 - C5002 * C119 - C5003 * C107 +
            (C4585 * C272 + C31314 * C286) * C120 +
            (C4585 * C287 + C31314 * C302) * C108) *
               C13648) *
              C19339 +
          ((C9447 * C116 + C9448 * C104 - C9449 * C117 - C9450 * C105 +
            C9451 * C118 + C9452 * C106 - C9705 * C119 - C9706 * C107 +
            (C4585 * C425 + C31314 * C439) * C120 +
            (C4585 * C440 + C31314 * C455) * C108) *
               C13647 +
           (C5280 * C116 + C5279 * C104 - C5278 * C117 - C5281 * C105 +
            C5282 * C118 + C5283 * C106 -
            (C4585 * C826 + C31314 * C834) * C119 -
            (C4585 * C835 + C31314 * C841) * C107 +
            (C4585 * C827 + C31314 * C836) * C120 +
            (C4585 * C837 + C31314 * C842) * C108) *
               C13648) *
              C19340) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C13648) *
               C19339 +
           ((C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C13647 +
            (C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C13648) *
               C19340) *
              C31380 * C31704 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C13647 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C13648) *
               C19339 +
           ((C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C13647 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C13648) *
               C19340) *
              C31380 * C31692 +
          ((C4773 * C13647 +
            (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C13648) *
               C19339 +
           ((C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C13647 +
            (C5677 * C265 + C5678 * C259 - C5985 * C266 - C5986 * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C13647 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C13648) *
               C19339 +
           ((C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C13647 +
            (C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C13648) *
               C19340) *
              C31380 * C956 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C13647 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C13648) *
               C19339 +
           ((C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C13647 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C13648) *
               C19340) *
              C31380 * C957 +
          ((C5434 * C13647 +
            (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C13648) *
               C19339 +
           ((C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C13647 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C13648) *
               C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C13647 +
            (C5505 + C5506) * C13648) *
               C19339 +
           ((C10153 + C10154) * C13647 + (C5655 + C5654) * C13648) * C19340) *
              C31380 * C1025 -
          ((C5672 * C13648 + (C5654 + C5655) * C13647) * C19340 +
           ((C5508 + C5507) * C13648 + (C5506 + C5505) * C13647) * C19339) *
              C31380 * C1026 +
          ((C5519 * C13647 + (C5510 + C5509) * C13648) * C19339 +
           ((C5653 + C5652) * C13647 + C6093 * C13648) * C19340) *
              C31380 * C1027 -
          (((C6100 + C6101) * C13648 + (C5686 + C5685) * C13647) * C19340 +
           ((C5526 + C5525) * C13648 + C5520 * C13647) * C19339) *
              C31380 * C1028 +
          ((C5529 * C13647 + (C5528 + C5527) * C13648) * C19339 +
           ((C6101 + C6100) * C13647 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C13648) *
               C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30449 +
            (C4585 * C131 + C31314 * C142) * C31332 -
            (C4585 * C122 + C31314 * C129) * C30445 -
            (C4585 * C132 + C31314 * C143) * C31340 +
            (C4585 * C123 + C31314 * C130) * C30455 +
            (C4585 * C133 + C31314 * C144) * C2723) *
               C4582 +
           (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
           C7314 * C4584) *
              C31560 * C31380 * C31423 +
          ((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C4582 +
           (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C4583 +
           (C7304 - (C7305 + C7306) + C7307 - C7308 - C7309) * C4584) *
              C31560 * C31380 * C31430 +
          (C7314 * C4582 +
           (C7306 + C7305 - C7304 - C7307 + C7308 + C7309) * C4583 +
           (C5521 * C30449 + C5522 * C31332 - C5812 * C30445 - C5813 * C31340 +
            (C4585 * C1036 + C31314 * C1045) * C30455 +
            (C4585 * C1048 + C31314 * C1054) * C2723) *
               C4584) *
              C31560 * C31380 * C2726)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30449 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31332 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30445 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31340 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C30455 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C2723) *
              C31548 * C31560 * C31380 * C31423 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C30445 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31332 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C30449) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31340 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C30455 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C2723) *
              C31548 * C31560 * C31380 * C31430 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C30449 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31332 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C30445 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31340 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C30455 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C2723) *
              C31548 * C31560 * C31380 * C2726)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30449 +
            (C4585 * C131 + C31314 * C142) * C31332 -
            (C4585 * C122 + C31314 * C129) * C30445 -
            (C4585 * C132 + C31314 * C143) * C31340 +
            (C4585 * C123 + C31314 * C130) * C30455 +
            (C4585 * C133 + C31314 * C144) * C2723) *
               C31548 * C9187 +
           (C9447 * C30449 + C9448 * C31332 - C9449 * C30445 - C9450 * C31340 +
            C9451 * C30455 + C9452 * C2723) *
               C31548 * C9188 +
           (C9453 * C30449 + C9454 * C31332 - C9455 * C30445 - C9456 * C31340 +
            C9457 * C30455 + C9458 * C2723) *
               C31548 * C9189) *
              C31380 * C31423 +
          ((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C31548 * C9187 +
           (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C31548 * C9188 +
           (C6558 * C30445 - (C5674 * C31332 + C5673 * C30449) +
            C6559 * C31340 - C9867 * C30455 - C9868 * C2723) *
               C31548 * C9189) *
              C31380 * C31430 +
          (C7314 * C31548 * C9187 +
           (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C31548 * C9188 +
           (C5675 * C30449 + C5676 * C31332 - C6560 * C30445 - C6561 * C31340 +
            (C4585 * C1173 + C31314 * C1188) * C30455 +
            (C4585 * C1191 + C31314 * C1200) * C2723) *
               C31548 * C9189) *
              C31380 * C2726)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C2463 +
                     (C4585 * C131 + C31314 * C142) * C2457 -
                     (C4585 * C122 + C31314 * C129) * C2464 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C4582 +
                    (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
                       C31560 * C31639 +
                   (((C4585 * C421 + C31314 * C431) * C2464 -
                     ((C4585 * C436 + C31314 * C453) * C2457 +
                      (C4585 * C424 + C31314 * C437) * C2463) +
                     (C4585 * C435 + C31314 * C452) * C31337) *
                        C4582 +
                    (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
                       C31560 * C31467) *
                      C31423 +
                  (((C7000 - (C6999 + C6998) + C7001) * C4582 +
                    (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
                       C31560 * C31639 +
                   ((C7168 + C7167 - C7166 - C7169) * C4582 +
                    (C7172 + C7171 - C7170 - C7173) * C4583 +
                    (C7620 + C7621 - C7622 - C7623) * C4584) *
                       C31560 * C31467) *
                      C31430 +
                  ((C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
                    (C7010 + C7011 - C7012 - C7013) * C4584) *
                       C31560 * C31639 +
                   (C7625 * C4582 + (C7622 - (C7621 + C7620) + C7623) * C4583 +
                    ((C4585 * C5965 + C31314 * C5966) * C2464 -
                     (C6098 * C2457 + C6099 * C2463) +
                     (C4585 * C5967 + C31314 * C5968) * C31337) *
                        C4584) *
                       C31560 * C31467) *
                      C2726)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                     C115 * C123 + C103 * C130) *
                        C2463 +
                    (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                     C115 * C133 + C103 * C144) *
                        C2457 -
                    (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                     C113 * C122 + C101 * C129) *
                        C2464 -
                    (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                     C113 * C132 + C101 * C143) *
                        C31337) *
                       C31548 * C31560 * C31639 +
                   ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                     C115 * C423 + C103 * C433) *
                        C2464 -
                    ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                      C113 * C436 + C101 * C453) *
                         C2457 +
                     (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                      C113 * C424 + C101 * C437) *
                         C2463) +
                    (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                     C115 * C438 + C103 * C454) *
                        C31337) *
                       C31548 * C31560 * C31467) *
                      C31423 +
                  (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                     C115 * C270 + C103 * C280) *
                        C2464 -
                    ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                      C113 * C283 + C101 * C300) *
                         C2457 +
                     (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                      C113 * C271 + C101 * C284) *
                         C2463) +
                    (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                     C115 * C285 + C103 * C301) *
                        C31337) *
                       C31548 * C31560 * C31639 +
                   ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                     C115 * C825 + C103 * C830) *
                        C2463 +
                    (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                     C115 * C833 + C103 * C840) *
                        C2457 -
                    (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                     C113 * C824 + C101 * C829) *
                        C2464 -
                    (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                     C113 * C832 + C101 * C839) *
                        C31337) *
                       C31548 * C31560 * C31467) *
                      C31430 +
                  (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                     C115 * C275 + C103 * C290) *
                        C2463 +
                    (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                     C115 * C293 + C103 * C305) *
                        C2457 -
                    (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                     C113 * C274 + C101 * C289) *
                        C2464 -
                    (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                     C113 * C292 + C101 * C304) *
                        C31337) *
                       C31548 * C31560 * C31639 +
                   ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
                     C115 * C1457 + C103 * C1458) *
                        C2464 -
                    ((C115 * C1180 + C103 * C1195 + C114 * C1181 +
                      C102 * C1196 + C113 * C1182 + C101 * C1197) *
                         C2457 +
                     (C115 * C1168 + C103 * C1183 + C114 * C1169 +
                      C102 * C1184 + C113 * C1170 + C101 * C1185) *
                         C2463) +
                    (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
                     C115 * C1459 + C103 * C1460) *
                        C31337) *
                       C31548 * C31560 * C31467) *
                      C2726)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C2463 +
                     (C4585 * C131 + C31314 * C142) * C2457 -
                     (C4585 * C122 + C31314 * C129) * C2464 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C31548 * C9187 +
                    (C11590 + C11591 - C11592 - C11593) * C31548 * C9188 +
                    C11613 * C9189) *
                       C31639 +
                   ((C11592 - (C11591 + C11590) + C11593) * C31548 * C9187 +
                    (C11596 - (C11595 + C11594) + C11597) * C31548 * C9188 +
                    (C11598 - (C11599 + C11600) + C11601) * C31548 * C9189) *
                       C31467) *
                      C31423 +
                  (((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
                    (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
                    C11612 * C9189) *
                       C31639 +
                   ((C7168 + C7167 - C7166 - C7169) * C31548 * C9187 +
                    (C7174 + C7175 - C7176 - C7177) * C31548 * C9188 +
                    (C11603 + C11604 - C11605 - C11606) * C31548 * C9189) *
                       C31467) *
                      C31430 +
                  ((C7018 * C31548 * C9187 +
                    (C7172 + C7171 - C7170 - C7173) * C31548 * C9188 +
                    (C7178 + C7179 - C7180 - C7181) * C31548 * C9189) *
                       C31639 +
                   (C7625 * C31548 * C9187 +
                    (C7180 - (C7179 + C7178) + C7181) * C31548 * C9188 +
                    ((C4585 * C6663 + C31314 * C6664) * C2464 -
                     (C6778 * C2457 + C6779 * C2463) +
                     (C4585 * C6665 + C31314 * C6666) * C31337) *
                        C31548 * C9189) *
                       C31467) *
                      C2726)) /
                    (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C2355 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C31710 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C2356 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C31703 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C2357 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31690 -
               (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
                C113 * C124 + C101 * C134) *
                   C2358 -
               (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
                C113 * C135 + C101 * C145) *
                   C31671) *
                  C31548 * C31560 * C31380 * C2353 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C2356 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31710 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C2355) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C31703 -
               (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                C113 * C269 + C101 * C279) *
                   C2357 -
               (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                C113 * C281 + C101 * C298) *
                   C31690 +
               (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
                C115 * C569 + C103 * C570) *
                   C2358 +
               (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
                C115 * C571 + C103 * C572) *
                   C31671) *
                  C31548 * C31560 * C31380 * C31427) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C2463 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C2457 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C2464 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C31337) *
                  C31548 * C31560 * C31380 * C31711 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C2464 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C2457 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C2463) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C31337) *
                  C31548 * C31560 * C31380 * C31707 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C2463 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C2457 -
               (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                C113 * C274 + C101 * C289) *
                   C2464 -
               (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                C113 * C292 + C101 * C304) *
                   C31337) *
                  C31548 * C31560 * C31380 * C31697 +
              ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
                C115 * C1307 + C103 * C1308) *
                   C2464 -
               ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
                 C113 * C1039 + C101 * C1051) *
                    C2457 +
                (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
                 C113 * C1033 + C101 * C1042) *
                    C2463) +
               (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
                C115 * C1309 + C103 * C1310) *
                   C31337) *
                  C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31705 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31694 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C2463 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C2457 -
            (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
             C113 * C427 + C101 * C442) *
                C2464 -
            (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
             C113 * C445 + C101 * C457) *
                C31337) *
               C31548 * C31560 * C31670) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31705 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31694 +
           ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
             C115 * C2031 + C103 * C2032) *
                C2464 -
            ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
              C113 * C1176 + C101 * C1194) *
                 C2457 +
             (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
              C113 * C1167 + C101 * C1179) *
                 C2463) +
            (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
             C115 * C2033 + C103 * C2034) *
                C31337) *
               C31548 * C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C31380 * C2353 +
          ((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
               C4582 +
           (C6894 - (C6893 + C6892) + C6895 - C6896 - C6897 + C6898 + C6899) *
               C4583 +
           (C4745 * C2356 - (C4746 * C31710 + C4747 * C2355) + C4748 * C31703 -
            C4749 * C2357 - C4750 * C31690 +
            (C4585 * C1307 + C31314 * C1308) * C2358 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
              C31560 * C31380 * C31711 +
          ((C7000 - (C6999 + C6998) + C7001) * C4582 +
           (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
              C31560 * C31380 * C31707 +
          (C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
           (C7010 + C7011 - C7012 - C7013) * C4584) *
              C31560 * C31380 * C31697 +
          (C7019 * C4582 + (C7012 - (C7011 + C7010) + C7013) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C2464 -
            (C5523 * C2457 + C5524 * C2463) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C31705 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 +
            (C7170 - (C7171 + C7172) + C7173) * C4584) *
               C31560 * C31694 +
           (((C4585 * C426 + C31314 * C441) * C2463 +
             (C4585 * C444 + C31314 * C456) * C2457 -
             (C4585 * C427 + C31314 * C442) * C2464 -
             (C4585 * C445 + C31314 * C457) * C31337) *
                C4582 +
            (C7174 + C7175 - C7176 - C7177) * C4583 +
            (C7178 + C7179 - C7180 - C7181) * C4584) *
               C31560 * C31670) *
              C2353 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C31705 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C5677 * C2463 + C5678 * C2457 - C5985 * C2464 - C5986 * C31337) *
                C4584) *
               C31560 * C31694 +
           ((C7176 - (C7175 + C7174) + C7177) * C4582 +
            (C7180 - (C7179 + C7178) + C7181) * C4583 +
            ((C4585 * C6541 + C31314 * C6542) * C2464 -
             (C5679 * C2457 + C5680 * C2463) +
             (C4585 * C6543 + C31314 * C6544) * C31337) *
                C4584) *
               C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C9447 * C2355 + C9448 * C31710 - C9449 * C2356 - C9450 * C31703 +
            C9451 * C2357 + C9452 * C31690 - C9705 * C2358 - C9706 * C31671) *
               C31548 * C9188 +
           (C9453 * C2355 + C9454 * C31710 - C9455 * C2356 - C9456 * C31703 +
            C9457 * C2357 + C9458 * C31690 - C9707 * C2358 - C9708 * C31671) *
               C31548 * C9189) *
              C31380 * C2353 +
          ((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
               C31548 * C9187 +
           (C5278 * C2356 - (C5279 * C31710 + C5280 * C2355) + C5281 * C31703 -
            C5282 * C2357 - C5283 * C31690 +
            (C4585 * C826 + C31314 * C834) * C2358 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C31548 * C9188 +
           (C6558 * C2356 - (C5674 * C31710 + C5673 * C2355) + C6559 * C31703 -
            C9867 * C2357 - C9868 * C31690 +
            (C4585 * C2031 + C31314 * C2032) * C2358 +
            (C4585 * C2033 + C31314 * C2034) * C31671) *
               C31548 * C9189) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C31548 * C9187 +
           (C9447 * C2463 + C9448 * C2457 - C9449 * C2464 - C9450 * C31337) *
               C31548 * C9188 +
           (C9453 * C2463 + C9454 * C2457 - C9455 * C2464 - C9456 * C31337) *
               C31548 * C9189) *
              C31380 * C31711 +
          ((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
           (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
           (C7176 - (C7175 + C7174) + C7177) * C31548 * C9189) *
              C31380 * C31707 +
          (C7018 * C31548 * C9187 +
           (C7172 + C7171 - C7170 - C7173) * C31548 * C9188 +
           (C7178 + C7179 - C7180 - C7181) * C31548 * C9189) *
              C31380 * C31697 +
          (C7019 * C31548 * C9187 +
           (C7622 - (C7621 + C7620) + C7623) * C31548 * C9188 +
           ((C4585 * C6541 + C31314 * C6542) * C2464 -
            (C5679 * C2457 + C5680 * C2463) +
            (C4585 * C6543 + C31314 * C6544) * C31337) *
               C31548 * C9189) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C31548 * C9187 +
            (C11590 + C11591 - C11592 - C11593) * C31548 * C9188 +
            C11613 * C9189) *
               C31705 +
           ((C11592 - (C11591 + C11590) + C11593) * C31548 * C9187 +
            (C11596 - (C11595 + C11594) + C11597) * C31548 * C9188 +
            (C11598 - (C11599 + C11600) + C11601) * C31548 * C9189) *
               C31694 +
           (C11613 * C9187 +
            (C11600 + C11599 - C11598 - C11601) * C31548 * C9188 +
            (C10838 * C2463 + C10839 * C2457 - C11130 * C2464 -
             C11131 * C31337) *
                C31548 * C9189) *
               C31670) *
              C2353 +
          (((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
            (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
            C11612 * C9189) *
               C31705 +
           ((C7168 + C7167 - C7166 - C7169) * C31548 * C9187 +
            (C7174 + C7175 - C7176 - C7177) * C31548 * C9188 +
            (C11603 + C11604 - C11605 - C11606) * C31548 * C9189) *
               C31694 +
           (C11612 * C9187 +
            (C11605 - (C11604 + C11603) + C11606) * C31548 * C9188 +
            ((C4585 * C10993 + C31314 * C10994) * C2464 -
             (C11244 * C2457 + C11245 * C2463) +
             (C4585 * C10995 + C31314 * C10996) * C31337) *
                C31548 * C9189) *
               C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C4582 +
            (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
            C7314 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C30445 -
             ((C4585 * C436 + C31314 * C453) * C31332 +
              (C4585 * C424 + C31314 * C437) * C30449) +
             (C4585 * C435 + C31314 * C452) * C31340 -
             (C4585 * C422 + C31314 * C432) * C30455 -
             (C4585 * C434 + C31314 * C451) * C2723) *
                C4582 +
            (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C4583 +
            (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C4584) *
               C31560 * C31467) *
              C2353 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C4582 +
            (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C4583 +
            (C7304 - (C7305 + C7306) + C7307 - C7308 - C7309) * C4584) *
               C31560 * C31639 +
           ((C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C4582 +
            (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C4583 +
            (C5677 * C30449 + C5678 * C31332 - C5985 * C30445 - C5986 * C31340 +
             (C4585 * C1561 + C31314 * C1564) * C30455 +
             (C4585 * C1567 + C31314 * C1570) * C2723) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30449 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31332 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30445 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31340 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C30455 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C2723) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30445 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31332 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30449) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31340 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C30455 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C2723) *
               C31548 * C31560 * C31467) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30445 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31332 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30449) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31340 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C30455 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C2723) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30449 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31332 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30445 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31340 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C30455 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C2723) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C31548 * C9187 +
            (C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C31548 *
                C9188 +
            (C11876 + C11877 - C11878 - C11879 + C11880 + C11881) * C31548 *
                C9189) *
               C31639 +
           ((C11872 - (C11871 + C11870) + C11873 - C11874 - C11875) * C31548 *
                C9187 +
            (C11878 - (C11877 + C11876) + C11879 - C11880 - C11881) * C31548 *
                C9188 +
            (C9459 * C30445 - (C9460 * C31332 + C9461 * C30449) +
             C9462 * C31340 - C9463 * C30455 - C9464 * C2723) *
                C31548 * C9189) *
               C31467) *
              C2353 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C31548 * C9187 +
            (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C31548 * C9188 +
            (C11882 - (C11883 + C11884) + C11885 - C11886 - C11887) * C31548 *
                C9189) *
               C31639 +
           ((C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C31548 * C9187 +
            (C11884 + C11883 - C11882 - C11885 + C11886 + C11887) * C31548 *
                C9188 +
            (C6781 * C30449 + C6780 * C31332 - C11012 * C30445 -
             C11013 * C31340 + (C4585 * C2241 + C31314 * C2244) * C30455 +
             (C4585 * C2247 + C31314 * C2250) * C2723) *
                C31548 * C9189) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2463 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C2457 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2464 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31380 * C31711 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C2464 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C2457 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C2463) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31337) *
              C31548 * C31560 * C31380 * C31707 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C2463 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C2457 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C2464 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31337) *
              C31548 * C31560 * C31380 * C31697 +
          ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
            C115 * C1307 + C103 * C1308) *
               C2464 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C2457 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C2463) +
           (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
            C115 * C1309 + C103 * C1310) *
               C31337) *
              C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2355 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31710 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2356 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31703 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C2357 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31690 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C2358 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31380 * C2353 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C2356 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31710 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C2355) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31703 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C2357 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31690 +
           (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
            C115 * C569 + C103 * C570) *
               C2358 +
           (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
            C115 * C571 + C103 * C572) *
               C31671) *
              C31548 * C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C31380 * C2353 +
          ((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
               C4582 +
           (C6894 - (C6893 + C6892) + C6895 - C6896 - C6897 + C6898 + C6899) *
               C4583 +
           (C4745 * C2356 - (C4746 * C31710 + C4747 * C2355) + C4748 * C31703 -
            C4749 * C2357 - C4750 * C31690 +
            (C4585 * C1307 + C31314 * C1308) * C2358 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
              C31560 * C31380 * C31711 +
          ((C7000 - (C6999 + C6998) + C7001) * C4582 +
           (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
              C31560 * C31380 * C31707 +
          (C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
           (C7010 + C7011 - C7012 - C7013) * C4584) *
              C31560 * C31380 * C31697 +
          (C7019 * C4582 + (C7012 - (C7011 + C7010) + C7013) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C2464 -
            (C5523 * C2457 + C5524 * C2463) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C9447 * C2355 + C9448 * C31710 - C9449 * C2356 - C9450 * C31703 +
            C9451 * C2357 + C9452 * C31690 - C9705 * C2358 - C9706 * C31671) *
               C31548 * C9188 +
           (C9453 * C2355 + C9454 * C31710 - C9455 * C2356 - C9456 * C31703 +
            C9457 * C2357 + C9458 * C31690 - C9707 * C2358 - C9708 * C31671) *
               C31548 * C9189) *
              C31380 * C2353 +
          ((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
               C31548 * C9187 +
           (C5278 * C2356 - (C5279 * C31710 + C5280 * C2355) + C5281 * C31703 -
            C5282 * C2357 - C5283 * C31690 +
            (C4585 * C826 + C31314 * C834) * C2358 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C31548 * C9188 +
           (C6558 * C2356 - (C5674 * C31710 + C5673 * C2355) + C6559 * C31703 -
            C9867 * C2357 - C9868 * C31690 +
            (C4585 * C2031 + C31314 * C2032) * C2358 +
            (C4585 * C2033 + C31314 * C2034) * C31671) *
               C31548 * C9189) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C31548 * C9187 +
           (C9447 * C2463 + C9448 * C2457 - C9449 * C2464 - C9450 * C31337) *
               C31548 * C9188 +
           (C9453 * C2463 + C9454 * C2457 - C9455 * C2464 - C9456 * C31337) *
               C31548 * C9189) *
              C31380 * C31711 +
          ((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
           (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
           (C7176 - (C7175 + C7174) + C7177) * C31548 * C9189) *
              C31380 * C31707 +
          (C7018 * C31548 * C9187 +
           (C7172 + C7171 - C7170 - C7173) * C31548 * C9188 +
           (C7178 + C7179 - C7180 - C7181) * C31548 * C9189) *
              C31380 * C31697 +
          (C7019 * C31548 * C9187 +
           (C7622 - (C7621 + C7620) + C7623) * C31548 * C9188 +
           ((C4585 * C6541 + C31314 * C6542) * C2464 -
            (C5679 * C2457 + C5680 * C2463) +
            (C4585 * C6543 + C31314 * C6544) * C31337) *
               C31548 * C9189) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C30439 +
                     (C4585 * C131 + C31314 * C142) * C31624 -
                     (C4585 * C122 + C31314 * C129) * C30420 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C4582 +
                    (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
                       C31560 * C3120 +
                   (((C4585 * C421 + C31314 * C431) * C30420 -
                     ((C4585 * C436 + C31314 * C453) * C31624 +
                      (C4585 * C424 + C31314 * C437) * C30439) +
                     (C4585 * C435 + C31314 * C452) * C31337) *
                        C4582 +
                    (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
                       C31560 * C31467) *
                      C31423 +
                  (((C5794 - (C5793 + C5792) + C5795) * C4582 +
                    (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
                       C31560 * C3120 +
                   ((C5972 + C5971 - C5970 - C5973) * C4582 +
                    (C5976 + C5975 - C5974 - C5977) * C4583 +
                    (C5978 + C5979 - C5988 - C5989) * C4584) *
                       C31560 * C31467) *
                      C31430 +
                  ((C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
                    (C5804 + C5805 - C5816 - C5817) * C4584) *
                       C31560 * C3120 +
                   (C5990 * C4582 + (C5988 - (C5979 + C5978) + C5989) * C4583 +
                    ((C4585 * C5965 + C31314 * C5966) * C30420 -
                     (C6098 * C31624 + C6099 * C30439) +
                     (C4585 * C5967 + C31314 * C5968) * C31337) *
                        C4584) *
                       C31560 * C31467) *
                      C2726)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                     C115 * C123 + C103 * C130) *
                        C30439 +
                    (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                     C115 * C133 + C103 * C144) *
                        C31624 -
                    (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                     C113 * C122 + C101 * C129) *
                        C30420 -
                    (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                     C113 * C132 + C101 * C143) *
                        C31337) *
                       C31548 * C31560 * C3120 +
                   ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                     C115 * C423 + C103 * C433) *
                        C30420 -
                    ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                      C113 * C436 + C101 * C453) *
                         C31624 +
                     (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                      C113 * C424 + C101 * C437) *
                         C30439) +
                    (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                     C115 * C438 + C103 * C454) *
                        C31337) *
                       C31548 * C31560 * C31467) *
                      C31423 +
                  (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                     C115 * C270 + C103 * C280) *
                        C30420 -
                    ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                      C113 * C283 + C101 * C300) *
                         C31624 +
                     (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                      C113 * C271 + C101 * C284) *
                         C30439) +
                    (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                     C115 * C285 + C103 * C301) *
                        C31337) *
                       C31548 * C31560 * C3120 +
                   ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                     C115 * C825 + C103 * C830) *
                        C30439 +
                    (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                     C115 * C833 + C103 * C840) *
                        C31624 -
                    (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                     C113 * C824 + C101 * C829) *
                        C30420 -
                    (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                     C113 * C832 + C101 * C839) *
                        C31337) *
                       C31548 * C31560 * C31467) *
                      C31430 +
                  (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                     C115 * C275 + C103 * C290) *
                        C30439 +
                    (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                     C115 * C293 + C103 * C305) *
                        C31624 -
                    (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                     C113 * C274 + C101 * C289) *
                        C30420 -
                    (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                     C113 * C292 + C101 * C304) *
                        C31337) *
                       C31548 * C31560 * C3120 +
                   ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
                     C115 * C1457 + C103 * C1458) *
                        C30420 -
                    ((C115 * C1180 + C103 * C1195 + C114 * C1181 +
                      C102 * C1196 + C113 * C1182 + C101 * C1197) *
                         C31624 +
                     (C115 * C1168 + C103 * C1183 + C114 * C1169 +
                      C102 * C1184 + C113 * C1170 + C101 * C1185) *
                         C30439) +
                    (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
                     C115 * C1459 + C103 * C1460) *
                        C31337) *
                       C31548 * C31560 * C31467) *
                      C2726)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C30439 +
                     (C4585 * C131 + C31314 * C142) * C31624 -
                     (C4585 * C122 + C31314 * C129) * C30420 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C31548 * C9187 +
                    (C10408 + C10409 - C10410 - C10411) * C31548 * C9188 +
                    C11018 * C9189) *
                       C3120 +
                   ((C10410 - (C10409 + C10408) + C10411) * C31548 * C9187 +
                    (C10414 - (C10413 + C10412) + C10415) * C31548 * C9188 +
                    C11135 * C9189) *
                       C31467) *
                      C31423 +
                  (((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
                    (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
                    C11019 * C9189) *
                       C3120 +
                   ((C5972 + C5971 - C5970 - C5973) * C31548 * C9187 +
                    (C6546 + C6547 - C6562 - C6563) * C31548 * C9188 +
                    (C11004 + C11005 - C11016 - C11017) * C31548 * C9189) *
                       C31467) *
                      C31430 +
                  ((C5818 * C31548 * C9187 +
                    (C5976 + C5975 - C5974 - C5977) * C31548 * C9188 +
                    (C6552 + C6553 - C6564 - C6565) * C31548 * C9189) *
                       C3120 +
                   (C5990 * C31548 * C9187 +
                    (C6564 - (C6553 + C6552) + C6565) * C31548 * C9188 +
                    ((C4585 * C6663 + C31314 * C6664) * C30420 -
                     (C6778 * C31624 + C6779 * C30439) +
                     (C4585 * C6665 + C31314 * C6666) * C31337) *
                        C31548 * C9189) *
                       C31467) *
                      C2726)) /
                    (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31463 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31470 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C3628) *
              C31423 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31470 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31463 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C3628) *
              C31430 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31463 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31470 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C3628) *
              C2726)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31463 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31470 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C3628) *
              C31423 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31470 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31463 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C3628) *
              C31430 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31463 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31470 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C3628) *
              C2726)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C31463 -
           (C10837 * C9189 + (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31470 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            C10847 * C9189) *
               C3628) *
              C31423 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 + C11243 * C9189) *
               C31470 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C31463 -
           ((C11246 + C11247) * C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C3628) *
              C31430 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C31463 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31470 +
           (C10160 * C9187 + (C6783 + C6782) * C31548 * C9188 +
            ((C4585 * C6385 + C31314 * C6390) * C1030 +
             (C4585 * C6391 + C31314 * C6394) * C31327) *
                C31548 * C9189) *
               C3628) *
              C2726)) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C959 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C31701 -
                (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                 C113 * C122 + C101 * C129) *
                    C960 -
                (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                 C113 * C132 + C101 * C143) *
                    C31688 +
                (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                 C115 * C125 + C103 * C136) *
                    C961 +
                (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                 C115 * C137 + C103 * C146) *
                    C31661) *
                   C31548 * C31560 * C3120 +
               ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                 C115 * C423 + C103 * C433) *
                    C960 -
                ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                  C113 * C436 + C101 * C453) *
                     C31701 +
                 (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                  C113 * C424 + C101 * C437) *
                     C959) +
                (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                 C115 * C438 + C103 * C454) *
                    C31688 -
                (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
                 C113 * C422 + C101 * C432) *
                    C961 -
                (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
                 C113 * C434 + C101 * C451) *
                    C31661) *
                   C31548 * C31560 * C31467) *
                  C2353 +
              (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                 C115 * C270 + C103 * C280) *
                    C960 -
                ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                  C113 * C283 + C101 * C300) *
                     C31701 +
                 (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                  C113 * C271 + C101 * C284) *
                     C959) +
                (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                 C115 * C285 + C103 * C301) *
                    C31688 -
                (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                 C113 * C269 + C101 * C279) *
                    C961 -
                (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                 C113 * C281 + C101 * C298) *
                    C31661) *
                   C31548 * C31560 * C3120 +
               ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C959 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C31701 -
                (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                 C113 * C824 + C101 * C829) *
                    C960 -
                (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                 C113 * C832 + C101 * C839) *
                    C31688 +
                (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
                 C115 * C827 + C103 * C836) *
                    C961 +
                (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
                 C115 * C837 + C103 * C842) *
                    C31661) *
                   C31548 * C31560 * C31467) *
                  C31427) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C1030 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C31327) *
                   C31548 * C31560 * C3120 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C31327 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C1030) *
                   C31548 * C31560 * C31467) *
                  C31711 +
              (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C1030 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C31327) *
                   C31548 * C31560 * C31467 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31327 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C1030) *
                   C31548 * C31560 * C3120) *
                  C31707 +
              (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                 C115 * C275 + C103 * C290) *
                    C1030 +
                (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                 C115 * C293 + C103 * C305) *
                    C31327) *
                   C31548 * C31560 * C3120 -
               ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
                 C113 * C1182 + C101 * C1197) *
                    C31327 +
                (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
                 C113 * C1170 + C101 * C1185) *
                    C1030) *
                   C31548 * C31560 * C31467) *
                  C31697 +
              (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
                 C115 * C1561 + C103 * C1564) *
                    C1030 +
                (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
                 C115 * C1567 + C103 * C1570) *
                    C31327) *
                   C31548 * C31560 * C31467 -
               ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
                 C113 * C1039 + C101 * C1051) *
                    C31327 +
                (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
                 C113 * C1033 + C101 * C1042) *
                    C1030) *
                   C31548 * C31560 * C3120) *
                  C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31712 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31709 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31700 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31327 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C1030) *
               C31548 * C31560 * C31683) *
              C2353 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31709 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31712 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31700 +
           ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
             C115 * C2241 + C103 * C2244) *
                C1030 +
            (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
             C115 * C2247 + C103 * C2250) *
                C31327) *
               C31548 * C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
            C5434 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C960 -
             ((C4585 * C436 + C31314 * C453) * C31701 +
              (C4585 * C424 + C31314 * C437) * C959) +
             (C4585 * C435 + C31314 * C452) * C31688 -
             (C4585 * C422 + C31314 * C432) * C961 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C4583 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C4584) *
               C31560 * C31467) *
              C2353 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
            (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
               C31560 * C3120 +
           ((C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C4582 +
            (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C4583 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C3120 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C31711 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C3120) *
              C31707 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C3120 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C31697 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31712 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31709 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31700 -
           ((C6782 + C6783) * C4584 + (C6784 + C6785) * C4583 +
            ((C4585 * C1869 + C31314 * C1881) * C31327 +
             (C4585 * C1863 + C31314 * C1872) * C1030) *
                C4582) *
               C31560 * C31683) *
              C2353 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31709 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31712 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31700 +
           ((C6785 + C6784) * C4582 + (C6783 + C6782) * C4583 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C4584) *
               C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C31548 * C9187 +
            (C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C31548 *
                C9188 +
            C10647 * C9189) *
               C3120 +
           ((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C31548 *
                C9187 +
            (C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C31548 *
                C9188 +
            (C10636 - (C10637 + C10638) + C10639 - C10640 - C10641) * C31548 *
                C9189) *
               C31467) *
              C2353 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C31548 * C9187 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C31548 * C9188 +
            (C12960 - (C12961 + C12962) + C12963 - C12964 - C12965) * C31548 *
                C9189) *
               C3120 +
           ((C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C31548 * C9187 +
            (C12962 + C12961 - C12960 - C12963 + C12964 + C12965) * C31548 *
                C9188 +
            (C6781 * C959 + C6780 * C31701 - C11012 * C960 - C11013 * C31688 +
             (C4585 * C2241 + C31314 * C2244) * C961 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C31548 * C9189) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C3120 -
           (C10837 * C9189 + (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31467) *
              C31711 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 + C11243 * C9189) *
               C31467 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C3120) *
              C31707 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C3120 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31467) *
              C31697 +
          ((C6093 * C31548 * C9187 + (C5688 + C5687) * C31548 * C9188 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C31548 * C9189) *
               C31467 -
           ((C5687 + C5688) * C31548 * C9189 +
            (C5686 + C5685) * C31548 * C9188 + C5520 * C31548 * C9187) *
               C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C31712 -
           (C10837 * C9189 + (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31709 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            C10847 * C9189) *
               C31700 -
           ((C10844 + C10845) * C31548 * C9189 +
            (C10843 + C10842) * C31548 * C9188 + C10837 * C9187) *
               C31683) *
              C2353 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 + C11243 * C9189) *
               C31709 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C31712 -
           ((C11246 + C11247) * C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C31700 +
           (C11243 * C9187 + (C11247 + C11246) * C31548 * C9188 +
            ((C4585 * C11233 + C31314 * C11234) * C1030 +
             (C4585 * C11235 + C31314 * C11236) * C31327) *
                C31548 * C9189) *
               C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C30439 +
                     (C4585 * C131 + C31314 * C142) * C31624 -
                     (C4585 * C122 + C31314 * C129) * C30420 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C4582 +
                    (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
                       C31560 * C31463 +
                   (((C4585 * C421 + C31314 * C431) * C30420 -
                     ((C4585 * C436 + C31314 * C453) * C31624 +
                      (C4585 * C424 + C31314 * C437) * C30439) +
                     (C4585 * C435 + C31314 * C452) * C31337) *
                        C4582 +
                    (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
                       C31560 * C31470 +
                   (((C4585 * C426 + C31314 * C441) * C30439 +
                     (C4585 * C444 + C31314 * C456) * C31624 -
                     (C4585 * C427 + C31314 * C442) * C30420 -
                     (C4585 * C445 + C31314 * C457) * C31337) *
                        C4582 +
                    (C6546 + C6547 - C6562 - C6563) * C4583 +
                    (C6552 + C6553 - C6564 - C6565) * C4584) *
                       C31560 * C3628) *
                      C2353 +
                  (((C5794 - (C5793 + C5792) + C5795) * C4582 +
                    (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
                       C31560 * C31463 +
                   ((C5972 + C5971 - C5970 - C5973) * C4582 +
                    (C5976 + C5975 - C5974 - C5977) * C4583 +
                    (C5978 + C5979 - C5988 - C5989) * C4584) *
                       C31560 * C31470 +
                   ((C6562 - (C6547 + C6546) + C6563) * C4582 +
                    (C6564 - (C6553 + C6552) + C6565) * C4583 +
                    ((C4585 * C6541 + C31314 * C6542) * C30420 -
                     (C5679 * C31624 + C5680 * C30439) +
                     (C4585 * C6543 + C31314 * C6544) * C31337) *
                        C4584) *
                       C31560 * C3628) *
                      C31427)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                     C115 * C123 + C103 * C130) *
                        C30439 +
                    (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                     C115 * C133 + C103 * C144) *
                        C31624 -
                    (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                     C113 * C122 + C101 * C129) *
                        C30420 -
                    (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                     C113 * C132 + C101 * C143) *
                        C31337) *
                       C31548 * C31560 * C31463 +
                   ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                     C115 * C423 + C103 * C433) *
                        C30420 -
                    ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                      C113 * C436 + C101 * C453) *
                         C31624 +
                     (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                      C113 * C424 + C101 * C437) *
                         C30439) +
                    (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                     C115 * C438 + C103 * C454) *
                        C31337) *
                       C31548 * C31560 * C31470 +
                   ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
                     C115 * C428 + C103 * C443) *
                        C30439 +
                    (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
                     C115 * C446 + C103 * C458) *
                        C31624 -
                    (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
                     C113 * C427 + C101 * C442) *
                        C30420 -
                    (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
                     C113 * C445 + C101 * C457) *
                        C31337) *
                       C31548 * C31560 * C3628) *
                      C2353 +
                  (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                     C115 * C270 + C103 * C280) *
                        C30420 -
                    ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                      C113 * C283 + C101 * C300) *
                         C31624 +
                     (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                      C113 * C271 + C101 * C284) *
                         C30439) +
                    (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                     C115 * C285 + C103 * C301) *
                        C31337) *
                       C31548 * C31560 * C31463 +
                   ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                     C115 * C825 + C103 * C830) *
                        C30439 +
                    (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                     C115 * C833 + C103 * C840) *
                        C31624 -
                    (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                     C113 * C824 + C101 * C829) *
                        C30420 -
                    (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                     C113 * C832 + C101 * C839) *
                        C31337) *
                       C31548 * C31560 * C31470 +
                   ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
                     C115 * C2031 + C103 * C2032) *
                        C30420 -
                    ((C115 * C1174 + C103 * C1192 + C114 * C1175 +
                      C102 * C1193 + C113 * C1176 + C101 * C1194) *
                         C31624 +
                     (C115 * C1165 + C103 * C1177 + C114 * C1166 +
                      C102 * C1178 + C113 * C1167 + C101 * C1179) *
                         C30439) +
                    (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
                     C115 * C2033 + C103 * C2034) *
                        C31337) *
                       C31548 * C31560 * C3628) *
                      C31427)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C30439 +
                     (C4585 * C131 + C31314 * C142) * C31624 -
                     (C4585 * C122 + C31314 * C129) * C30420 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C31548 * C9187 +
                    (C10408 + C10409 - C10410 - C10411) * C31548 * C9188 +
                    C11018 * C9189) *
                       C31463 +
                   ((C10410 - (C10409 + C10408) + C10411) * C31548 * C9187 +
                    (C10414 - (C10413 + C10412) + C10415) * C31548 * C9188 +
                    C11135 * C9189) *
                       C31470 +
                   (C11018 * C9187 +
                    (C11001 + C11000 - C10999 - C11002) * C31548 * C9188 +
                    (C11123 + C11124 - C11133 - C11134) * C31548 * C9189) *
                       C3628) *
                      C2353 +
                  (((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
                    (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
                    C11019 * C9189) *
                       C31463 +
                   ((C5972 + C5971 - C5970 - C5973) * C31548 * C9187 +
                    (C6546 + C6547 - C6562 - C6563) * C31548 * C9188 +
                    (C11004 + C11005 - C11016 - C11017) * C31548 * C9189) *
                       C31470 +
                   (C11019 * C9187 +
                    (C11016 - (C11005 + C11004) + C11017) * C31548 * C9188 +
                    ((C4585 * C10993 + C31314 * C10994) * C30420 -
                     (C11244 * C31624 + C11245 * C30439) +
                     (C4585 * C10995 + C31314 * C10996) * C31337) *
                        C31548 * C9189) *
                       C3628) *
                      C31427)) /
                    (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C3120 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31467) *
              C31711 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C3120) *
              C31707 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C3120 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31467) *
              C31697 +
          (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
             C115 * C1561 + C103 * C1564) *
                C1030 +
            (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
             C115 * C1567 + C103 * C1570) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31327 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C1030) *
               C31548 * C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C959 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31701 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C960 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31688 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C961 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C31661) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C960 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31701 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C959) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31688 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C961 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C31661) *
               C31548 * C31560 * C31467) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C960 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31701 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C959) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31688 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C961 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C31661) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C959 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31701 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C960 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31688 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C961 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
            C5434 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C960 -
             ((C4585 * C436 + C31314 * C453) * C31701 +
              (C4585 * C424 + C31314 * C437) * C959) +
             (C4585 * C435 + C31314 * C452) * C31688 -
             (C4585 * C422 + C31314 * C432) * C961 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C4583 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C4584) *
               C31560 * C31467) *
              C2353 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
            (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
               C31560 * C3120 +
           ((C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C4582 +
            (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C4583 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C3120 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C31711 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C3120) *
              C31707 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C3120 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C31697 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C31548 * C9187 +
            (C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C31548 *
                C9188 +
            C10647 * C9189) *
               C3120 +
           ((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C31548 *
                C9187 +
            (C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C31548 *
                C9188 +
            (C10636 - (C10637 + C10638) + C10639 - C10640 - C10641) * C31548 *
                C9189) *
               C31467) *
              C2353 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C31548 * C9187 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C31548 * C9188 +
            (C12960 - (C12961 + C12962) + C12963 - C12964 - C12965) * C31548 *
                C9189) *
               C3120 +
           ((C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C31548 * C9187 +
            (C12962 + C12961 - C12960 - C12963 + C12964 + C12965) * C31548 *
                C9188 +
            (C6781 * C959 + C6780 * C31701 - C11012 * C960 - C11013 * C31688 +
             (C4585 * C2241 + C31314 * C2244) * C961 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C31548 * C9189) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C3120 -
           (C10837 * C9189 + (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31467) *
              C31711 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 + C11243 * C9189) *
               C31467 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C3120) *
              C31707 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C3120 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31467) *
              C31697 +
          ((C6093 * C31548 * C9187 + (C5688 + C5687) * C31548 * C9188 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C31548 * C9189) *
               C31467 -
           ((C5687 + C5688) * C31548 * C9189 +
            (C5686 + C5685) * C31548 * C9188 + C5520 * C31548 * C9187) *
               C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C565 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C559 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C566 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C560 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C567 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C561 -
               (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
                C113 * C124 + C101 * C134) *
                   C568 -
               (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
                C113 * C135 + C101 * C145) *
                   C31671) *
                  C31548 * C31560 * C31380 * C31638 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C566 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C559 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C565) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C560 -
               (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                C113 * C269 + C101 * C279) *
                   C567 -
               (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                C113 * C281 + C101 * C298) *
                   C561 +
               (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
                C115 * C569 + C103 * C570) *
                   C568 +
               (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
                C115 * C571 + C103 * C572) *
                   C31671) *
                  C31548 * C31560 * C31380 * C31427) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C30439 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C31624 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C30420 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C31337) *
                  C31548 * C31560 * C31380 * C1301 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C30420 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31624 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C30439) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C31337) *
                  C31548 * C31560 * C31380 * C1302 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C30439 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C31624 -
               (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                C113 * C274 + C101 * C289) *
                   C30420 -
               (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                C113 * C292 + C101 * C304) *
                   C31337) *
                  C31548 * C31560 * C31380 * C1303 +
              ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
                C115 * C1307 + C103 * C1308) *
                   C30420 -
               ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
                 C113 * C1039 + C101 * C1051) *
                    C31624 +
                (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
                 C113 * C1033 + C101 * C1042) *
                    C30439) +
               (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
                C115 * C1309 + C103 * C1310) *
                   C31337) *
                  C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C1681 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C1682 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C30439 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31624 -
            (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
             C113 * C427 + C101 * C442) *
                C30420 -
            (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
             C113 * C445 + C101 * C457) *
                C31337) *
               C31548 * C31560 * C31670) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C1681 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C1682 +
           ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
             C115 * C2031 + C103 * C2032) *
                C30420 -
            ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
              C113 * C1176 + C101 * C1194) *
                 C31624 +
             (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
              C113 * C1167 + C101 * C1179) *
                 C30439) +
            (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
             C115 * C2033 + C103 * C2034) *
                C31337) *
               C31548 * C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31380 * C31638 +
          ((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
               C4582 +
           (C4994 - (C4993 + C4992) + C4995 - C4996 - C4997 + C5008 + C5009) *
               C4583 +
           (C4745 * C566 - (C4746 * C559 + C4747 * C565) + C4748 * C560 -
            C4749 * C567 - C4750 * C561 +
            (C4585 * C1307 + C31314 * C1308) * C568 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
              C31560 * C31380 * C1301 +
          ((C5794 - (C5793 + C5792) + C5795) * C4582 +
           (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
              C31560 * C31380 * C1302 +
          (C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
           (C5804 + C5805 - C5816 - C5817) * C4584) *
              C31560 * C31380 * C1303 +
          (C5819 * C4582 + (C5816 - (C5805 + C5804) + C5817) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C30420 -
            (C5523 * C31624 + C5524 * C30439) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C1681 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C1682 +
           (((C4585 * C426 + C31314 * C441) * C30439 +
             (C4585 * C444 + C31314 * C456) * C31624 -
             (C4585 * C427 + C31314 * C442) * C30420 -
             (C4585 * C445 + C31314 * C457) * C31337) *
                C4582 +
            (C6546 + C6547 - C6562 - C6563) * C4583 +
            (C6552 + C6553 - C6564 - C6565) * C4584) *
               C31560 * C31670) *
              C31638 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C1681 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C1682 +
           ((C6562 - (C6547 + C6546) + C6563) * C4582 +
            (C6564 - (C6553 + C6552) + C6565) * C4583 +
            ((C4585 * C6541 + C31314 * C6542) * C30420 -
             (C5679 * C31624 + C5680 * C30439) +
             (C4585 * C6543 + C31314 * C6544) * C31337) *
                C4584) *
               C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C9447 * C565 + C9448 * C559 - C9449 * C566 - C9450 * C560 +
            C9451 * C567 + C9452 * C561 -
            (C4585 * C423 + C31314 * C433) * C568 -
            (C4585 * C438 + C31314 * C454) * C31671) *
               C31548 * C9188 +
           (C9453 * C565 + C9454 * C559 - C9455 * C566 - C9456 * C560 +
            C9457 * C567 + C9458 * C561 -
            (C4585 * C429 + C31314 * C447) * C568 -
            (C4585 * C448 + C31314 * C459) * C31671) *
               C31548 * C9189) *
              C31380 * C31638 +
          ((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
               C31548 * C9187 +
           (C5278 * C566 - (C5279 * C559 + C5280 * C565) + C5281 * C560 -
            C5282 * C567 - C5283 * C561 +
            (C4585 * C826 + C31314 * C834) * C568 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C31548 * C9188 +
           (C6558 * C566 - (C5674 * C559 + C5673 * C565) + C6559 * C560 -
            (C4585 * C1165 + C31314 * C1177) * C567 -
            (C4585 * C1174 + C31314 * C1192) * C561 +
            (C4585 * C2031 + C31314 * C2032) * C568 +
            (C4585 * C2033 + C31314 * C2034) * C31671) *
               C31548 * C9189) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C31548 * C9187 +
           (C9447 * C30439 + C9448 * C31624 - C9449 * C30420 - C9450 * C31337) *
               C31548 * C9188 +
           (C9453 * C30439 + C9454 * C31624 - C9455 * C30420 - C9456 * C31337) *
               C31548 * C9189) *
              C31380 * C1301 +
          ((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
           (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
           (C6562 - (C6547 + C6546) + C6563) * C31548 * C9189) *
              C31380 * C1302 +
          (C5818 * C31548 * C9187 +
           (C5976 + C5975 - C5974 - C5977) * C31548 * C9188 +
           (C6552 + C6553 - C6564 - C6565) * C31548 * C9189) *
              C31380 * C1303 +
          (C5819 * C31548 * C9187 +
           (C5988 - (C5979 + C5978) + C5989) * C31548 * C9188 +
           ((C4585 * C6541 + C31314 * C6542) * C30420 -
            (C5679 * C31624 + C5680 * C30439) +
            (C4585 * C6543 + C31314 * C6544) * C31337) *
               C31548 * C9189) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C31548 * C9187 +
            (C10408 + C10409 - C10410 - C10411) * C31548 * C9188 +
            C11018 * C9189) *
               C1681 +
           ((C10410 - (C10409 + C10408) + C10411) * C31548 * C9187 +
            (C10414 - (C10413 + C10412) + C10415) * C31548 * C9188 +
            (C10999 - (C11000 + C11001) + C11002) * C31548 * C9189) *
               C1682 +
           (C11018 * C9187 +
            (C11001 + C11000 - C10999 - C11002) * C31548 * C9188 +
            (C10838 * C30439 + C10839 * C31624 -
             (C4585 * C1865 + C31314 * C1874) * C30420 -
             (C4585 * C1877 + C31314 * C1883) * C31337) *
                C31548 * C9189) *
               C31670) *
              C31638 +
          (((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
            (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
            C11019 * C9189) *
               C1681 +
           ((C5972 + C5971 - C5970 - C5973) * C31548 * C9187 +
            (C6546 + C6547 - C6562 - C6563) * C31548 * C9188 +
            (C11004 + C11005 - C11016 - C11017) * C31548 * C9189) *
               C1682 +
           (C11019 * C9187 +
            (C11016 - (C11005 + C11004) + C11017) * C31548 * C9188 +
            ((C4585 * C10993 + C31314 * C10994) * C30420 -
             ((C4585 * C6389 + C31314 * C6393) * C31624 +
              (C4585 * C6384 + C31314 * C6388) * C30439) +
             (C4585 * C10995 + C31314 * C10996) * C31337) *
                C31548 * C9189) *
               C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C265 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C259 -
                (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                 C113 * C122 + C101 * C129) *
                    C266 -
                (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                 C113 * C132 + C101 * C143) *
                    C260 +
                (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                 C115 * C125 + C103 * C136) *
                    C267 +
                (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                 C115 * C137 + C103 * C146) *
                    C31661) *
                   C31548 * C31560 * C31639 +
               ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                 C115 * C423 + C103 * C433) *
                    C266 -
                ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                  C113 * C436 + C101 * C453) *
                     C259 +
                 (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                  C113 * C424 + C101 * C437) *
                     C265) +
                (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                 C115 * C438 + C103 * C454) *
                    C260 -
                (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
                 C113 * C422 + C101 * C432) *
                    C267 -
                (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
                 C113 * C434 + C101 * C451) *
                    C31661) *
                   C31548 * C31560 * C31467) *
                  C31638 +
              (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                 C115 * C270 + C103 * C280) *
                    C266 -
                ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                  C113 * C283 + C101 * C300) *
                     C259 +
                 (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                  C113 * C271 + C101 * C284) *
                     C265) +
                (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                 C115 * C285 + C103 * C301) *
                    C260 -
                (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                 C113 * C269 + C101 * C279) *
                    C267 -
                (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                 C113 * C281 + C101 * C298) *
                    C31661) *
                   C31548 * C31560 * C31639 +
               ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C265 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C259 -
                (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                 C113 * C824 + C101 * C829) *
                    C266 -
                (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                 C113 * C832 + C101 * C839) *
                    C260 +
                (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
                 C115 * C827 + C103 * C836) *
                    C267 +
                (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
                 C115 * C837 + C103 * C842) *
                    C31661) *
                   C31548 * C31560 * C31467) *
                  C31427) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C1030 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C31327) *
                   C31548 * C31560 * C31639 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C31327 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C1030) *
                   C31548 * C31560 * C31467) *
                  C1301 +
              (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C1030 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C31327) *
                   C31548 * C31560 * C31467 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31327 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C1030) *
                   C31548 * C31560 * C31639) *
                  C1302 +
              (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                 C115 * C275 + C103 * C290) *
                    C1030 +
                (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                 C115 * C293 + C103 * C305) *
                    C31327) *
                   C31548 * C31560 * C31639 -
               ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
                 C113 * C1182 + C101 * C1197) *
                    C31327 +
                (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
                 C113 * C1170 + C101 * C1185) *
                    C1030) *
                   C31548 * C31560 * C31467) *
                  C1303 +
              (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
                 C115 * C1561 + C103 * C1564) *
                    C1030 +
                (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
                 C115 * C1567 + C103 * C1570) *
                    C31327) *
                   C31548 * C31560 * C31467 -
               ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
                 C113 * C1039 + C101 * C1051) *
                    C31327 +
                (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
                 C113 * C1033 + C101 * C1042) *
                    C1030) *
                   C31548 * C31560 * C31639) *
                  C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C2133 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C2134 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C2135 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31327 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C1030) *
               C31548 * C31560 * C31683) *
              C31638 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C2134 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C2133 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C2135 +
           ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
             C115 * C2241 + C103 * C2244) *
                C1030 +
            (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
             C115 * C2247 + C103 * C2250) *
                C31327) *
               C31548 * C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
            C4773 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C266 -
             ((C4585 * C436 + C31314 * C453) * C259 +
              (C4585 * C424 + C31314 * C437) * C265) +
             (C4585 * C435 + C31314 * C452) * C260 -
             (C4585 * C422 + C31314 * C432) * C267 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C4583 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C4584) *
               C31560 * C31467) *
              C31638 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
            (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
               C31560 * C31639 +
           ((C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C4582 +
            (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C4583 +
            ((C4585 * C1559 + C31314 * C1562) * C265 +
             (C4585 * C1565 + C31314 * C1568) * C259 -
             (C4585 * C1560 + C31314 * C1563) * C266 -
             (C4585 * C1566 + C31314 * C1569) * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31639 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C1301 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31639) *
              C1302 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31639 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C1303 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C2133 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C2134 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C2135 -
           ((C6782 + C6783) * C4584 + (C6784 + C6785) * C4583 +
            ((C4585 * C1869 + C31314 * C1881) * C31327 +
             (C4585 * C1863 + C31314 * C1872) * C1030) *
                C4582) *
               C31560 * C31683) *
              C31638 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C2134 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C2133 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C2135 +
           ((C6785 + C6784) * C4582 + (C6783 + C6782) * C4583 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C4584) *
               C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C31548 * C9187 +
            (C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C31548 * C9188 +
            C9488 * C9189) *
               C31639 +
           ((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C31548 * C9187 +
            (C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C31548 * C9188 +
            (C9477 - (C9478 + C9479) + C9480 - C9481 - C9482) * C31548 *
                C9189) *
               C31467) *
              C31638 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C31548 * C9187 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C31548 * C9188 +
            (C9859 - (C9860 + C9861) + C9862 - C9869 - C9870) * C31548 *
                C9189) *
               C31639 +
           ((C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C31548 * C9187 +
            (C9861 + C9860 - C9859 - C9862 + C9869 + C9870) * C31548 * C9188 +
            (C6781 * C265 + C6780 * C259 -
             (C4585 * C2240 + C31314 * C2243) * C266 -
             (C4585 * C2246 + C31314 * C2249) * C260 +
             (C4585 * C2241 + C31314 * C2244) * C267 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C31548 * C9189) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C31639 -
           ((C10157 + C10158) * C31548 * C9189 +
            (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31467) *
              C1301 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 +
            (C6785 + C6784) * C31548 * C9189) *
               C31467 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C31639) *
              C1302 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C31639 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31467) *
              C1303 +
          ((C6093 * C31548 * C9187 + (C5688 + C5687) * C31548 * C9188 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C31548 * C9189) *
               C31467 -
           ((C5687 + C5688) * C31548 * C9189 +
            (C5686 + C5685) * C31548 * C9188 + C5520 * C31548 * C9187) *
               C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C2133 -
           (C10837 * C9189 + (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C2134 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            C10847 * C9189) *
               C2135 -
           ((C10844 + C10845) * C31548 * C9189 +
            (C10843 + C10842) * C31548 * C9188 + C10837 * C9187) *
               C31683) *
              C31638 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 + C11243 * C9189) *
               C2134 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C2133 -
           ((C11246 + C11247) * C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C2135 +
           (C11243 * C9187 + (C11247 + C11246) * C31548 * C9188 +
            ((C4585 * C11233 + C31314 * C11234) * C1030 +
             (C4585 * C11235 + C31314 * C11236) * C31327) *
                C31548 * C9189) *
               C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
               C115 * C123 + C103 * C130) *
                  C116 +
              (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
               C115 * C133 + C103 * C144) *
                  C104 -
              (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
               C113 * C122 + C101 * C129) *
                  C117 -
              (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
               C113 * C132 + C101 * C143) *
                  C105 +
              (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
               C115 * C125 + C103 * C136) *
                  C118 +
              (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
               C115 * C137 + C103 * C146) *
                  C106 -
              (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
               C113 * C124 + C101 * C134) *
                  C119 -
              (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
               C113 * C135 + C101 * C145) *
                  C107 +
              (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 +
               C115 * C127 + C103 * C140) *
                  C120 +
              (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 +
               C115 * C141 + C103 * C148) *
                  C108) *
             C31548 * C31560 * C31380 * C31368 -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C265 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C259 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C266 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C260 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C267 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31704 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C266 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C259 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C265) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C260 -
               (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                C113 * C269 + C101 * C279) *
                   C267 -
               (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                C113 * C281 + C101 * C298) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31692 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C265 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C259 -
               (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                C113 * C274 + C101 * C289) *
                   C266 -
               (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                C113 * C292 + C101 * C304) *
                   C260 +
               (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
                C115 * C277 + C103 * C296) *
                   C267 +
               (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
                C115 * C297 + C103 * C307) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31667) +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C265 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C259 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C266 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C260 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C267 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31661) *
                  C31548 * C31560 * C31705 +
              ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                C115 * C423 + C103 * C433) *
                   C266 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C259 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C265) +
               (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                C115 * C438 + C103 * C454) *
                   C260 -
               (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
                C113 * C422 + C101 * C432) *
                   C267 -
               (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
                C113 * C434 + C101 * C451) *
                   C31661) *
                  C31548 * C31560 * C31694 +
              ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
                C115 * C428 + C103 * C443) *
                   C265 +
               (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
                C115 * C446 + C103 * C458) *
                   C259 -
               (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
                C113 * C427 + C101 * C442) *
                   C266 -
               (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
                C113 * C445 + C101 * C457) *
                   C260 +
               (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
                C115 * C430 + C103 * C449) *
                   C267 +
               (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
                C115 * C450 + C103 * C460) *
                   C31661) *
                  C31548 * C31560 * C31670) *
             C31368 -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C959 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C31701 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C960 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C31688 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C961 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31661) *
                  C31548 * C31560 * C31380 * C956 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C960 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31701 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C959) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C31688 -
               (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                C113 * C269 + C101 * C279) *
                   C961 -
               (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                C113 * C281 + C101 * C298) *
                   C31661) *
                  C31548 * C31560 * C31380 * C957 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C959 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C31701 -
               (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                C113 * C274 + C101 * C289) *
                   C960 -
               (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                C113 * C292 + C101 * C304) *
                   C31688 +
               (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
                C115 * C277 + C103 * C296) *
                   C961 +
               (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
                C115 * C297 + C103 * C307) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31667) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C1030 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C31327) *
                  C31548 * C31560 * C31380 * C1025 -
              ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                C113 * C283 + C101 * C300) *
                   C31327 +
               (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                C113 * C271 + C101 * C284) *
                   C1030) *
                  C31548 * C31560 * C31380 * C1026 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C1030 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C31327) *
                  C31548 * C31560 * C31380 * C1027 -
              ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
                C113 * C1039 + C101 * C1051) *
                   C31327 +
               (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
                C113 * C1033 + C101 * C1042) *
                   C1030) *
                  C31548 * C31560 * C31380 * C1028 +
              ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
                C115 * C1036 + C103 * C1045) *
                   C1030 +
               (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
                C115 * C1048 + C103 * C1054) *
                   C31327) *
                  C31548 * C31560 * C31380 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C1030 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C31327) *
                   C31548 * C31560 * C31705 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C31327 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C1030) *
                   C31548 * C31560 * C31694 +
               ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
                 C115 * C428 + C103 * C443) *
                    C1030 +
                (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
                 C115 * C446 + C103 * C458) *
                    C31327) *
                   C31548 * C31560 * C31670) *
                  C956 +
              (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C1030 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C31327) *
                   C31548 * C31560 * C31694 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31327 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C1030) *
                   C31548 * C31560 * C31705 -
               ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
                 C113 * C1176 + C101 * C1194) *
                    C31327 +
                (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
                 C113 * C1167 + C101 * C1179) *
                    C1030) *
                   C31548 * C31560 * C31670) *
                  C957 +
              (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                 C115 * C275 + C103 * C290) *
                    C1030 +
                (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                 C115 * C293 + C103 * C305) *
                    C31327) *
                   C31548 * C31560 * C31705 -
               ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
                 C113 * C1182 + C101 * C1197) *
                    C31327 +
                (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
                 C113 * C1170 + C101 * C1185) *
                    C1030) *
                   C31548 * C31560 * C31694 +
               ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
                 C115 * C1173 + C103 * C1188) *
                    C1030 +
                (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
                 C115 * C1191 + C103 * C1200) *
                    C31327) *
                   C31548 * C31560 * C31670) *
                  C31667) +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C959 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C31701 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C960 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C31688 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C961 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31661) *
                  C31548 * C31560 * C1681 +
              ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                C115 * C423 + C103 * C433) *
                   C960 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C31701 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C959) +
               (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                C115 * C438 + C103 * C454) *
                   C31688 -
               (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
                C113 * C422 + C101 * C432) *
                   C961 -
               (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
                C113 * C434 + C101 * C451) *
                   C31661) *
                  C31548 * C31560 * C1682 +
              ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
                C115 * C428 + C103 * C443) *
                   C959 +
               (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
                C115 * C446 + C103 * C458) *
                   C31701 -
               (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
                C113 * C427 + C101 * C442) *
                   C960 -
               (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
                C113 * C445 + C101 * C457) *
                   C31688 +
               (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
                C115 * C430 + C103 * C449) *
                   C961 +
               (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
                C115 * C450 + C103 * C460) *
                   C31661) *
                  C31548 * C31560 * C31670) *
             C31368 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C1030 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C31327) *
                   C31548 * C31560 * C1681 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C31327 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C1030) *
                   C31548 * C31560 * C1682 +
               ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
                 C115 * C428 + C103 * C443) *
                    C1030 +
                (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
                 C115 * C446 + C103 * C458) *
                    C31327) *
                   C31548 * C31560 * C31670) *
                  C31704 +
              (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C1030 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C31327) *
                   C31548 * C31560 * C1682 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C31327 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C1030) *
                   C31548 * C31560 * C1681 -
               ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
                 C113 * C1176 + C101 * C1194) *
                    C31327 +
                (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
                 C113 * C1167 + C101 * C1179) *
                    C1030) *
                   C31548 * C31560 * C31670) *
                  C31692 +
              (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                 C115 * C275 + C103 * C290) *
                    C1030 +
                (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                 C115 * C293 + C103 * C305) *
                    C31327) *
                   C31548 * C31560 * C1681 -
               ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
                 C113 * C1182 + C101 * C1197) *
                    C31327 +
                (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
                 C113 * C1170 + C101 * C1185) *
                    C1030) *
                   C31548 * C31560 * C1682 +
               ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
                 C115 * C1173 + C103 * C1188) *
                    C1030 +
                (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
                 C115 * C1191 + C103 * C1200) *
                    C31327) *
                   C31548 * C31560 * C31670) *
                  C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C1856 -
          ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
            C113 * C436 + C101 * C453) *
               C31327 +
           (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
            C113 * C424 + C101 * C437) *
               C1030) *
              C31548 * C31560 * C1857 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C1030 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31327) *
              C31548 * C31560 * C1858 -
          ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
            C113 * C1869 + C101 * C1881) *
               C31327 +
           (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
            C113 * C1863 + C101 * C1872) *
               C1030) *
              C31548 * C31560 * C1859 +
          ((C113 * C1864 + C101 * C1873 + C114 * C1865 + C102 * C1874 +
            C115 * C1866 + C103 * C1875) *
               C1030 +
           (C113 * C1876 + C101 * C1882 + C114 * C1877 + C102 * C1883 +
            C115 * C1878 + C103 * C1884) *
               C31327) *
              C31548 * C31560 * C1860) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31705 +
          (((C4585 * C421 + C31314 * C431) * C266 -
            ((C4585 * C436 + C31314 * C453) * C259 +
             (C4585 * C424 + C31314 * C437) * C265) +
            (C4585 * C435 + C31314 * C452) * C260 -
            (C4585 * C422 + C31314 * C432) * C267 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C266 -
            ((C4585 * C831 + C31314 * C838) * C259 +
             (C4585 * C823 + C31314 * C828) * C265) +
            (C4585 * C832 + C31314 * C839) * C260 -
            (C4585 * C825 + C31314 * C830) * C267 -
            (C4585 * C833 + C31314 * C840) * C31661) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C266 -
            ((C4585 * C1182 + C31314 * C1197) * C259 +
             (C4585 * C1170 + C31314 * C1185) * C265) +
            (C4585 * C1181 + C31314 * C1196) * C260 -
            (C4585 * C1168 + C31314 * C1183) * C267 -
            (C4585 * C1180 + C31314 * C1195) * C31661) *
               C4584) *
              C31560 * C31694 +
          (((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           ((C4585 * C1167 + C31314 * C1179) * C265 +
            (C4585 * C1176 + C31314 * C1194) * C259 -
            (C4585 * C1166 + C31314 * C1178) * C266 -
            (C4585 * C1175 + C31314 * C1193) * C260 +
            (C4585 * C1165 + C31314 * C1177) * C267 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           ((C4585 * C1171 + C31314 * C1186) * C265 +
            (C4585 * C1189 + C31314 * C1198) * C259 -
            (C4585 * C1172 + C31314 * C1187) * C266 -
            (C4585 * C1190 + C31314 * C1199) * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31705 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31694 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C956 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 +
            (C5685 + C5686) * C4584) *
               C31560 * C31694 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31705 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C957 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31705 -
           (((C4585 * C5644 + C31314 * C5649) * C31327 +
             (C4585 * C5640 + C31314 * C5645) * C1030) *
                C4584 +
            (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31694 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C1681 +
          (((C4585 * C421 + C31314 * C431) * C960 -
            ((C4585 * C436 + C31314 * C453) * C31701 +
             (C4585 * C424 + C31314 * C437) * C959) +
            (C4585 * C435 + C31314 * C452) * C31688 -
            (C4585 * C422 + C31314 * C432) * C961 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           (C5278 * C960 - (C5279 * C31701 + C5280 * C959) + C5281 * C31688 -
            C5282 * C961 - C5283 * C31661) *
               C4583 +
           (C5284 * C960 - (C5285 * C31701 + C5286 * C959) + C5287 * C31688 -
            C5288 * C961 - C5289 * C31661) *
               C4584) *
              C31560 * C1682 +
          (((C4585 * C426 + C31314 * C441) * C959 +
            (C4585 * C444 + C31314 * C456) * C31701 -
            (C4585 * C427 + C31314 * C442) * C960 -
            (C4585 * C445 + C31314 * C457) * C31688 +
            (C4585 * C428 + C31314 * C443) * C961 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           (C5673 * C959 + C5674 * C31701 -
            (C4585 * C1166 + C31314 * C1178) * C960 -
            (C4585 * C1175 + C31314 * C1193) * C31688 +
            (C4585 * C1165 + C31314 * C1177) * C961 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           (C5675 * C959 + C5676 * C31701 -
            (C4585 * C1172 + C31314 * C1187) * C960 -
            (C4585 * C1190 + C31314 * C1199) * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C1681 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C1682 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C31704 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C1682 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C1681 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C31692 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C1681 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C1682 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C1856 -
          (C5672 * C4584 + (C5654 + C5655) * C4583 +
           ((C4585 * C436 + C31314 * C453) * C31327 +
            (C4585 * C424 + C31314 * C437) * C1030) *
               C4582) *
              C31560 * C1857 +
          (((C4585 * C426 + C31314 * C441) * C1030 +
            (C4585 * C444 + C31314 * C456) * C31327) *
               C4582 +
           (C5681 + C5682) * C4583 + C5689 * C4584) *
              C31560 * C1858 -
          (((C4585 * C6386 + C31314 * C6392) * C31327 +
            (C4585 * C6383 + C31314 * C6387) * C1030) *
               C4584 +
           ((C4585 * C2245 + C31314 * C2248) * C31327 +
            (C4585 * C2239 + C31314 * C2242) * C1030) *
               C4583 +
           ((C4585 * C1869 + C31314 * C1881) * C31327 +
            (C4585 * C1863 + C31314 * C1872) * C1030) *
               C4582) *
              C31560 * C1859 +
          (((C4585 * C1864 + C31314 * C1873) * C1030 +
            (C4585 * C1876 + C31314 * C1882) * C31327) *
               C4582 +
           ((C4585 * C6384 + C31314 * C6388) * C1030 +
            (C4585 * C6389 + C31314 * C6393) * C31327) *
               C4583 +
           ((C4585 * C6385 + C31314 * C6390) * C1030 +
            (C4585 * C6391 + C31314 * C6394) * C31327) *
               C4584) *
              C31560 * C1860) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C31548 * C9187 +
          ((C4585 * C424 + C31314 * C437) * C116 +
           (C4585 * C436 + C31314 * C453) * C104 -
           (C4585 * C421 + C31314 * C431) * C117 -
           (C4585 * C435 + C31314 * C452) * C105 +
           (C4585 * C422 + C31314 * C432) * C118 +
           (C4585 * C434 + C31314 * C451) * C106 -
           (C4585 * C423 + C31314 * C433) * C119 -
           (C4585 * C438 + C31314 * C454) * C107 +
           (C4585 * C425 + C31314 * C439) * C120 +
           (C4585 * C440 + C31314 * C455) * C108) *
              C31548 * C9188 +
          ((C4585 * C426 + C31314 * C441) * C116 +
           (C4585 * C444 + C31314 * C456) * C104 -
           (C4585 * C427 + C31314 * C442) * C117 -
           (C4585 * C445 + C31314 * C457) * C105 +
           (C4585 * C428 + C31314 * C443) * C118 +
           (C4585 * C446 + C31314 * C458) * C106 -
           (C4585 * C429 + C31314 * C447) * C119 -
           (C4585 * C448 + C31314 * C459) * C107 +
           (C4585 * C430 + C31314 * C449) * C120 +
           (C4585 * C450 + C31314 * C460) * C108) *
              C31548 * C9189) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           ((C4585 * C424 + C31314 * C437) * C265 +
            (C4585 * C436 + C31314 * C453) * C259 -
            (C4585 * C421 + C31314 * C431) * C266 -
            (C4585 * C435 + C31314 * C452) * C260 +
            (C4585 * C422 + C31314 * C432) * C267 +
            (C4585 * C434 + C31314 * C451) * C31661) *
               C31548 * C9188 +
           ((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C31548 * C9189) *
              C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C31548 * C9187 +
           (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C31548 * C9188 +
           (C6558 * C266 - (C5674 * C259 + C5673 * C265) + C6559 * C260 -
            (C4585 * C1165 + C31314 * C1177) * C267 -
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C31548 * C9189) *
              C31380 * C31692 +
          (C4773 * C31548 * C9187 +
           (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C31548 * C9188 +
           (C5675 * C265 + C5676 * C259 - C6560 * C266 - C6561 * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C31548 * C9188 +
           C9488 * C9189) *
              C31705 +
          ((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C31548 * C9187 +
           (C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C31548 * C9188 +
           (C9477 - (C9478 + C9479) + C9480 - C9481 - C9482) * C31548 * C9189) *
              C31694 +
          (C9488 * C9187 +
           (C9479 + C9478 - C9477 - C9480 + C9481 + C9482) * C31548 * C9188 +
           ((C4585 * C1864 + C31314 * C1873) * C265 +
            (C4585 * C1876 + C31314 * C1882) * C259 -
            (C4585 * C1865 + C31314 * C1874) * C266 -
            (C4585 * C1877 + C31314 * C1883) * C260 +
            (C4585 * C1866 + C31314 * C1875) * C267 +
            (C4585 * C1878 + C31314 * C1884) * C31661) *
               C31548 * C9189) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C9447 * C959 + C9448 * C31701 - C9449 * C960 - C9450 * C31688 +
            C9451 * C961 + C9452 * C31661) *
               C31548 * C9188 +
           (C9453 * C959 + C9454 * C31701 - C9455 * C960 - C9456 * C31688 +
            C9457 * C961 + C9458 * C31661) *
               C31548 * C9189) *
              C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C31548 * C9187 +
           (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C31548 * C9188 +
           (C6558 * C960 - (C5674 * C31701 + C5673 * C959) + C6559 * C31688 -
            C9867 * C961 - C9868 * C31661) *
               C31548 * C9189) *
              C31380 * C957 +
          (C5434 * C31548 * C9187 +
           (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C31548 * C9188 +
           (C5675 * C959 + C5676 * C31701 - C6560 * C960 - C6561 * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C31548 * C9187 +
           (C9447 * C1030 + C9448 * C31327) * C31548 * C9188 +
           (C9453 * C1030 + C9454 * C31327) * C31548 * C9189) *
              C31380 * C1025 -
          ((C5682 + C5681) * C31548 * C9189 + (C5654 + C5655) * C31548 * C9188 +
           (C5506 + C5505) * C31548 * C9187) *
              C31380 * C1026 +
          (C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
           C5689 * C31548 * C9189) *
              C31380 * C1027 -
          ((C5687 + C5688) * C31548 * C9189 + (C5686 + C5685) * C31548 * C9188 +
           C5520 * C31548 * C9187) *
              C31380 * C1028 +
          (C5529 * C31548 * C9187 + (C6101 + C6100) * C31548 * C9188 +
           ((C4585 * C5641 + C31314 * C5646) * C1030 +
            (C4585 * C5647 + C31314 * C5650) * C31327) *
               C31548 * C9189) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C31705 -
           ((C10157 + C10158) * C31548 * C9189 +
            (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31694 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            ((C4585 * C1864 + C31314 * C1873) * C1030 +
             (C4585 * C1876 + C31314 * C1882) * C31327) *
                C31548 * C9189) *
               C31670) *
              C956 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 +
            (C6785 + C6784) * C31548 * C9189) *
               C31694 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C31705 -
           (((C4585 * C6389 + C31314 * C6393) * C31327 +
             (C4585 * C6384 + C31314 * C6388) * C1030) *
                C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C31670) *
              C957 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C31705 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31694 +
           (C10160 * C9187 + (C6783 + C6782) * C31548 * C9188 +
            ((C4585 * C6385 + C31314 * C6390) * C1030 +
             (C4585 * C6391 + C31314 * C6394) * C31327) *
                C31548 * C9189) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C31548 *
               C9188 +
           C10647 * C9189) *
              C1681 +
          ((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C31548 *
               C9187 +
           (C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C31548 *
               C9188 +
           (C10636 - (C10637 + C10638) + C10639 - C10640 - C10641) * C31548 *
               C9189) *
              C1682 +
          (C10647 * C9187 +
           (C10638 + C10637 - C10636 - C10639 + C10640 + C10641) * C31548 *
               C9188 +
           ((C4585 * C1864 + C31314 * C1873) * C959 +
            (C4585 * C1876 + C31314 * C1882) * C31701 -
            (C4585 * C1865 + C31314 * C1874) * C960 -
            (C4585 * C1877 + C31314 * C1883) * C31688 +
            (C4585 * C1866 + C31314 * C1875) * C961 +
            (C4585 * C1878 + C31314 * C1884) * C31661) *
               C31548 * C9189) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C1681 -
           ((C10157 + C10158) * C31548 * C9189 +
            (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C1682 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            ((C4585 * C1864 + C31314 * C1873) * C1030 +
             (C4585 * C1876 + C31314 * C1882) * C31327) *
                C31548 * C9189) *
               C31670) *
              C31704 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 +
            (C6785 + C6784) * C31548 * C9189) *
               C1682 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C1681 -
           (((C4585 * C6389 + C31314 * C6393) * C31327 +
             (C4585 * C6384 + C31314 * C6388) * C1030) *
                C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C31670) *
              C31692 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C1681 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C1682 +
           (C10160 * C9187 + (C6783 + C6782) * C31548 * C9188 +
            ((C4585 * C6385 + C31314 * C6390) * C1030 +
             (C4585 * C6391 + C31314 * C6394) * C31327) *
                C31548 * C9189) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C31548 * C9187 +
           (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
              C1856 -
          (C10837 * C9189 + (C10156 + C10155) * C31548 * C9188 +
           (C10154 + C10153) * C31548 * C9187) *
              C1857 +
          (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
           C10847 * C9189) *
              C1858 -
          ((C10844 + C10845) * C31548 * C9189 +
           (C10843 + C10842) * C31548 * C9188 + C10837 * C9187) *
              C1859 +
          (C10847 * C9187 + (C10845 + C10844) * C31548 * C9188 +
           ((C4585 * C10820 + C31314 * C10823) * C1030 +
            (C4585 * C10824 + C31314 * C10826) * C31327) *
               C31548 * C9189) *
              C1860) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C565 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C559 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C566 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C560 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C567 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C561 -
               (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
                C113 * C124 + C101 * C134) *
                   C568 -
               (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
                C113 * C135 + C101 * C145) *
                   C31671) *
                  C31548 * C31560 * C31639 +
              ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                C115 * C423 + C103 * C433) *
                   C566 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C559 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C565) +
               (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                C115 * C438 + C103 * C454) *
                   C560 -
               (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
                C113 * C422 + C101 * C432) *
                   C567 -
               (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
                C113 * C434 + C101 * C451) *
                   C561 +
               (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
                C115 * C673 + C103 * C674) *
                   C568 +
               (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
                C115 * C675 + C103 * C676) *
                   C31671) *
                  C31548 * C31560 * C31467) *
             C31368 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C30439 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C31624 -
                (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                 C113 * C122 + C101 * C129) *
                    C30420 -
                (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                 C113 * C132 + C101 * C143) *
                    C31337) *
                   C31548 * C31560 * C31639 +
               ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                 C115 * C423 + C103 * C433) *
                    C30420 -
                ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                  C113 * C436 + C101 * C453) *
                     C31624 +
                 (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                  C113 * C424 + C101 * C437) *
                     C30439) +
                (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                 C115 * C438 + C103 * C454) *
                    C31337) *
                   C31548 * C31560 * C31467) *
                  C956 +
              (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                 C115 * C270 + C103 * C280) *
                    C30420 -
                ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                  C113 * C283 + C101 * C300) *
                     C31624 +
                 (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                  C113 * C271 + C101 * C284) *
                     C30439) +
                (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                 C115 * C285 + C103 * C301) *
                    C31337) *
                   C31548 * C31560 * C31639 +
               ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C30439 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C31624 -
                (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                 C113 * C824 + C101 * C829) *
                    C30420 -
                (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                 C113 * C832 + C101 * C839) *
                    C31337) *
                   C31548 * C31560 * C31467) *
                  C957 +
              (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                 C115 * C275 + C103 * C290) *
                    C30439 +
                (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                 C115 * C293 + C103 * C305) *
                    C31624 -
                (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                 C113 * C274 + C101 * C289) *
                    C30420 -
                (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                 C113 * C292 + C101 * C304) *
                    C31337) *
                   C31548 * C31560 * C31639 +
               ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
                 C115 * C1457 + C103 * C1458) *
                    C30420 -
                ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
                  C113 * C1182 + C101 * C1197) *
                     C31624 +
                 (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
                  C113 * C1170 + C101 * C1185) *
                     C30439) +
                (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
                 C115 * C1459 + C103 * C1460) *
                    C31337) *
                   C31548 * C31560 * C31467) *
                  C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30439 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31624 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30420 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C2133 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C30420 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31624 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C30439) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31337) *
              C31548 * C31560 * C2134 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C30439 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31624 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C30420 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31337) *
              C31548 * C31560 * C2135 +
          ((C113 * C1862 + C101 * C1871 + C114 * C1861 + C102 * C1870 +
            C115 * C2137 + C103 * C2138) *
               C30420 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31624 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C30439) +
           (C113 * C1868 + C101 * C1880 + C114 * C1867 + C102 * C1879 +
            C115 * C2139 + C103 * C2140) *
               C31337) *
              C31548 * C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31639 +
          (((C4585 * C421 + C31314 * C431) * C566 -
            ((C4585 * C436 + C31314 * C453) * C559 +
             (C4585 * C424 + C31314 * C437) * C565) +
            (C4585 * C435 + C31314 * C452) * C560 -
            (C4585 * C422 + C31314 * C432) * C567 -
            (C4585 * C434 + C31314 * C451) * C561 +
            (C4585 * C423 + C31314 * C433) * C568 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C566 -
            ((C4585 * C831 + C31314 * C838) * C559 +
             (C4585 * C823 + C31314 * C828) * C565) +
            (C4585 * C832 + C31314 * C839) * C560 -
            (C4585 * C825 + C31314 * C830) * C567 -
            (C4585 * C833 + C31314 * C840) * C561 +
            (C4585 * C826 + C31314 * C834) * C568 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C566 -
            ((C4585 * C1182 + C31314 * C1197) * C559 +
             (C4585 * C1170 + C31314 * C1185) * C565) +
            (C4585 * C1181 + C31314 * C1196) * C560 -
            (C4585 * C1168 + C31314 * C1183) * C567 -
            (C4585 * C1180 + C31314 * C1195) * C561 +
            (C4585 * C1457 + C31314 * C1458) * C568 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C31467) *
              C956 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C31639 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C31467) *
              C957 +
          ((C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
            (C5804 + C5805 - C5816 - C5817) * C4584) *
               C31560 * C31639 +
           (C5990 * C4582 + (C5988 - (C5979 + C5978) + C5989) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             ((C4585 * C5644 + C31314 * C5649) * C31624 +
              (C4585 * C5640 + C31314 * C5645) * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
              C31560 * C2133 +
          (((C4585 * C421 + C31314 * C431) * C30420 -
            ((C4585 * C436 + C31314 * C453) * C31624 +
             (C4585 * C424 + C31314 * C437) * C30439) +
            (C4585 * C435 + C31314 * C452) * C31337) *
               C4582 +
           (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
              C31560 * C2134 +
          (((C4585 * C426 + C31314 * C441) * C30439 +
            (C4585 * C444 + C31314 * C456) * C31624 -
            (C4585 * C427 + C31314 * C442) * C30420 -
            (C4585 * C445 + C31314 * C457) * C31337) *
               C4582 +
           (C6546 + C6547 - C6562 - C6563) * C4583 +
           (C6552 + C6553 - C6564 - C6565) * C4584) *
              C31560 * C2135 +
          (((C4585 * C1862 + C31314 * C1871) * C30420 -
            ((C4585 * C1869 + C31314 * C1881) * C31624 +
             (C4585 * C1863 + C31314 * C1872) * C30439) +
            (C4585 * C1868 + C31314 * C1880) * C31337) *
               C4582 +
           ((C4585 * C2240 + C31314 * C2243) * C30420 -
            ((C4585 * C2245 + C31314 * C2248) * C31624 +
             (C4585 * C2239 + C31314 * C2242) * C30439) +
            (C4585 * C2246 + C31314 * C2249) * C31337) *
               C4583 +
           ((C4585 * C6663 + C31314 * C6664) * C30420 -
            ((C4585 * C6386 + C31314 * C6392) * C31624 +
             (C4585 * C6383 + C31314 * C6387) * C30439) +
            (C4585 * C6665 + C31314 * C6666) * C31337) *
               C4584) *
              C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C9685 + C9686 - C9687 - C9688 + C9689 + C9690 - C9709 - C9710) *
               C31548 * C9188 +
           (C9695 + C9696 - C9697 - C9698 + C9699 + C9700 - C9711 - C9712) *
               C31548 * C9189) *
              C31639 +
          ((C9687 - (C9686 + C9685) + C9688 - C9689 - C9690 + C9709 + C9710) *
               C31548 * C9187 +
           (C9697 - (C9696 + C9695) + C9698 - C9699 - C9700 + C9711 + C9712) *
               C31548 * C9188 +
           (C9459 * C566 - (C9460 * C559 + C9461 * C565) + C9462 * C560 -
            C9463 * C567 - C9464 * C561 +
            (C4585 * C2137 + C31314 * C2138) * C568 +
            (C4585 * C2139 + C31314 * C2140) * C31671) *
               C31548 * C9189) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C31548 * C9187 +
            (C10408 + C10409 - C10410 - C10411) * C31548 * C9188 +
            (C10412 + C10413 - C10414 - C10415) * C31548 * C9189) *
               C31639 +
           ((C10410 - (C10409 + C10408) + C10411) * C31548 * C9187 +
            (C10414 - (C10413 + C10412) + C10415) * C31548 * C9188 +
            (C9459 * C30420 - (C9460 * C31624 + C9461 * C30439) +
             C9462 * C31337) *
                C31548 * C9189) *
               C31467) *
              C956 +
          (((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
            (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
            (C6562 - (C6547 + C6546) + C6563) * C31548 * C9189) *
               C31639 +
           ((C5972 + C5971 - C5970 - C5973) * C31548 * C9187 +
            (C6546 + C6547 - C6562 - C6563) * C31548 * C9188 +
            (C6781 * C30439 + C6780 * C31624 -
             (C4585 * C2240 + C31314 * C2243) * C30420 -
             (C4585 * C2246 + C31314 * C2249) * C31337) *
                C31548 * C9189) *
               C31467) *
              C957 +
          ((C5818 * C31548 * C9187 +
            (C5976 + C5975 - C5974 - C5977) * C31548 * C9188 +
            (C6552 + C6553 - C6564 - C6565) * C31548 * C9189) *
               C31639 +
           (C5990 * C31548 * C9187 +
            (C6564 - (C6553 + C6552) + C6565) * C31548 * C9188 +
            ((C4585 * C6663 + C31314 * C6664) * C30420 -
             (C6778 * C31624 + C6779 * C30439) +
             (C4585 * C6665 + C31314 * C6666) * C31337) *
                C31548 * C9189) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C31548 * C9187 +
           (C10408 + C10409 - C10410 - C10411) * C31548 * C9188 +
           C11018 * C9189) *
              C2133 +
          ((C10410 - (C10409 + C10408) + C10411) * C31548 * C9187 +
           (C10414 - (C10413 + C10412) + C10415) * C31548 * C9188 +
           C11135 * C9189) *
              C2134 +
          (C11018 * C9187 +
           (C11001 + C11000 - C10999 - C11002) * C31548 * C9188 +
           (C11123 + C11124 - C11133 - C11134) * C31548 * C9189) *
              C2135 +
          (C11135 * C9187 +
           (C11133 - (C11124 + C11123) + C11134) * C31548 * C9188 +
           ((C4585 * C11117 + C31314 * C11118) * C30420 -
            (C10840 * C31624 + C10841 * C30439) +
            (C4585 * C11119 + C31314 * C11120) * C31337) *
               C31548 * C9189) *
              C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 + C115 * C123 +
           C103 * C130) *
              C116 +
          (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 + C115 * C133 +
           C103 * C144) *
              C104 -
          (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 + C113 * C122 +
           C101 * C129) *
              C117 -
          (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 + C113 * C132 +
           C101 * C143) *
              C105 +
          (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 + C115 * C125 +
           C103 * C136) *
              C118 +
          (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 + C115 * C137 +
           C103 * C146) *
              C106 -
          (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 + C113 * C124 +
           C101 * C134) *
              C119 -
          (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 + C113 * C135 +
           C101 * C145) *
              C107 +
          (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 + C115 * C127 +
           C103 * C140) *
              C120 +
          (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 + C115 * C141 +
           C103 * C148) *
              C108) *
         C31548 * C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C31704 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C266 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C259 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C265) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C260 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C267 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C31692 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C265 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C259 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C266 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C260 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C267 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C1681 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C960 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31701 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C959) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31688 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C961 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31661) *
              C31548 * C31560 * C1682 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C959 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31701 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C960 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31688 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C961 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C31661) *
              C31548 * C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C1681 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C1682 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31704 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C1682 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C1681 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31670) *
              C31692 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C1681 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C1682 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C1681 +
          (((C4585 * C421 + C31314 * C431) * C960 -
            ((C4585 * C436 + C31314 * C453) * C31701 +
             (C4585 * C424 + C31314 * C437) * C959) +
            (C4585 * C435 + C31314 * C452) * C31688 -
            (C4585 * C422 + C31314 * C432) * C961 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           (C5278 * C960 - (C5279 * C31701 + C5280 * C959) + C5281 * C31688 -
            C5282 * C961 - C5283 * C31661) *
               C4583 +
           (C5284 * C960 - (C5285 * C31701 + C5286 * C959) + C5287 * C31688 -
            C5288 * C961 - C5289 * C31661) *
               C4584) *
              C31560 * C1682 +
          (((C4585 * C426 + C31314 * C441) * C959 +
            (C4585 * C444 + C31314 * C456) * C31701 -
            (C4585 * C427 + C31314 * C442) * C960 -
            (C4585 * C445 + C31314 * C457) * C31688 +
            (C4585 * C428 + C31314 * C443) * C961 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           (C5673 * C959 + C5674 * C31701 -
            (C4585 * C1166 + C31314 * C1178) * C960 -
            (C4585 * C1175 + C31314 * C1193) * C31688 +
            (C4585 * C1165 + C31314 * C1177) * C961 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           (C5675 * C959 + C5676 * C31701 -
            (C4585 * C1172 + C31314 * C1187) * C960 -
            (C4585 * C1190 + C31314 * C1199) * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C1681 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C1682 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C31704 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C1682 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C1681 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C31692 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C1681 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C1682 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C31548 * C9187 +
          ((C4585 * C424 + C31314 * C437) * C116 +
           (C4585 * C436 + C31314 * C453) * C104 -
           (C4585 * C421 + C31314 * C431) * C117 -
           (C4585 * C435 + C31314 * C452) * C105 +
           (C4585 * C422 + C31314 * C432) * C118 +
           (C4585 * C434 + C31314 * C451) * C106 -
           (C4585 * C423 + C31314 * C433) * C119 -
           (C4585 * C438 + C31314 * C454) * C107 +
           (C4585 * C425 + C31314 * C439) * C120 +
           (C4585 * C440 + C31314 * C455) * C108) *
              C31548 * C9188 +
          ((C4585 * C426 + C31314 * C441) * C116 +
           (C4585 * C444 + C31314 * C456) * C104 -
           (C4585 * C427 + C31314 * C442) * C117 -
           (C4585 * C445 + C31314 * C457) * C105 +
           (C4585 * C428 + C31314 * C443) * C118 +
           (C4585 * C446 + C31314 * C458) * C106 -
           (C4585 * C429 + C31314 * C447) * C119 -
           (C4585 * C448 + C31314 * C459) * C107 +
           (C4585 * C430 + C31314 * C449) * C120 +
           (C4585 * C450 + C31314 * C460) * C108) *
              C31548 * C9189) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           ((C4585 * C424 + C31314 * C437) * C265 +
            (C4585 * C436 + C31314 * C453) * C259 -
            (C4585 * C421 + C31314 * C431) * C266 -
            (C4585 * C435 + C31314 * C452) * C260 +
            (C4585 * C422 + C31314 * C432) * C267 +
            (C4585 * C434 + C31314 * C451) * C31661) *
               C31548 * C9188 +
           ((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C31548 * C9189) *
              C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C31548 * C9187 +
           (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C31548 * C9188 +
           (C6558 * C266 - (C5674 * C259 + C5673 * C265) + C6559 * C260 -
            (C4585 * C1165 + C31314 * C1177) * C267 -
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C31548 * C9189) *
              C31380 * C31692 +
          (C4773 * C31548 * C9187 +
           (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C31548 * C9188 +
           (C5675 * C265 + C5676 * C259 - C6560 * C266 - C6561 * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C9447 * C959 + C9448 * C31701 - C9449 * C960 - C9450 * C31688 +
            C9451 * C961 + C9452 * C31661) *
               C31548 * C9188 +
           (C9453 * C959 + C9454 * C31701 - C9455 * C960 - C9456 * C31688 +
            C9457 * C961 + C9458 * C31661) *
               C31548 * C9189) *
              C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C31548 * C9187 +
           (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C31548 * C9188 +
           (C6558 * C960 - (C5674 * C31701 + C5673 * C959) + C6559 * C31688 -
            C9867 * C961 - C9868 * C31661) *
               C31548 * C9189) *
              C31380 * C957 +
          (C5434 * C31548 * C9187 +
           (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C31548 * C9188 +
           (C5675 * C959 + C5676 * C31701 - C6560 * C960 - C6561 * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C31548 * C9187 +
           (C9447 * C1030 + C9448 * C31327) * C31548 * C9188 +
           (C9453 * C1030 + C9454 * C31327) * C31548 * C9189) *
              C31380 * C1025 -
          ((C5682 + C5681) * C31548 * C9189 + (C5654 + C5655) * C31548 * C9188 +
           (C5506 + C5505) * C31548 * C9187) *
              C31380 * C1026 +
          (C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
           C5689 * C31548 * C9189) *
              C31380 * C1027 -
          ((C5687 + C5688) * C31548 * C9189 + (C5686 + C5685) * C31548 * C9188 +
           C5520 * C31548 * C9187) *
              C31380 * C1028 +
          (C5529 * C31548 * C9187 + (C6101 + C6100) * C31548 * C9188 +
           ((C4585 * C5641 + C31314 * C5646) * C1030 +
            (C4585 * C5647 + C31314 * C5650) * C31327) *
               C31548 * C9189) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C10624 + C10625 - C10626 - C10627 + C10628 + C10629) * C31548 *
               C9188 +
           C10647 * C9189) *
              C1681 +
          ((C10626 - (C10625 + C10624) + C10627 - C10628 - C10629) * C31548 *
               C9187 +
           (C10632 - (C10631 + C10630) + C10633 - C10634 - C10635) * C31548 *
               C9188 +
           (C10636 - (C10637 + C10638) + C10639 - C10640 - C10641) * C31548 *
               C9189) *
              C1682 +
          (C10647 * C9187 +
           (C10638 + C10637 - C10636 - C10639 + C10640 + C10641) * C31548 *
               C9188 +
           ((C4585 * C1864 + C31314 * C1873) * C959 +
            (C4585 * C1876 + C31314 * C1882) * C31701 -
            (C4585 * C1865 + C31314 * C1874) * C960 -
            (C4585 * C1877 + C31314 * C1883) * C31688 +
            (C4585 * C1866 + C31314 * C1875) * C961 +
            (C4585 * C1878 + C31314 * C1884) * C31661) *
               C31548 * C9189) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C1681 -
           ((C10157 + C10158) * C31548 * C9189 +
            (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C1682 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            ((C4585 * C1864 + C31314 * C1873) * C1030 +
             (C4585 * C1876 + C31314 * C1882) * C31327) *
                C31548 * C9189) *
               C31670) *
              C31704 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 +
            (C6785 + C6784) * C31548 * C9189) *
               C1682 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C1681 -
           (((C4585 * C6389 + C31314 * C6393) * C31327 +
             (C4585 * C6384 + C31314 * C6388) * C1030) *
                C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C31670) *
              C31692 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C1681 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C1682 +
           (C10160 * C9187 + (C6783 + C6782) * C31548 * C9188 +
            ((C4585 * C6385 + C31314 * C6390) * C1030 +
             (C4585 * C6391 + C31314 * C6394) * C31327) *
                C31548 * C9189) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C4582 +
            (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
            C7314 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C30445 -
             ((C4585 * C436 + C31314 * C453) * C31332 +
              (C4585 * C424 + C31314 * C437) * C30449) +
             (C4585 * C435 + C31314 * C452) * C31340 -
             (C4585 * C422 + C31314 * C432) * C30455 -
             (C4585 * C434 + C31314 * C451) * C2723) *
                C4582 +
            (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C4583 +
            (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C4584) *
               C31560 * C31467) *
              C31638 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C4582 +
            (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C4583 +
            (C7304 - (C7305 + C7306) + C7307 - C7308 - C7309) * C4584) *
               C31560 * C3120 +
           ((C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C4582 +
            (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C4583 +
            (C5677 * C30449 + C5678 * C31332 - C5985 * C30445 - C5986 * C31340 +
             (C4585 * C1561 + C31314 * C1564) * C30455 +
             (C4585 * C1567 + C31314 * C1570) * C2723) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30449 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31332 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30445 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31340 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C30455 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C2723) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30445 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31332 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30449) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31340 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C30455 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C2723) *
               C31548 * C31560 * C31467) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30445 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31332 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30449) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31340 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C30455 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C2723) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30449 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31332 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30445 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31340 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C30455 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C2723) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C31548 * C9187 +
            (C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C31548 *
                C9188 +
            (C11876 + C11877 - C11878 - C11879 + C11880 + C11881) * C31548 *
                C9189) *
               C3120 +
           ((C11872 - (C11871 + C11870) + C11873 - C11874 - C11875) * C31548 *
                C9187 +
            (C11878 - (C11877 + C11876) + C11879 - C11880 - C11881) * C31548 *
                C9188 +
            (C9459 * C30445 - (C9460 * C31332 + C9461 * C30449) +
             C9462 * C31340 - C9463 * C30455 - C9464 * C2723) *
                C31548 * C9189) *
               C31467) *
              C31638 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C31548 * C9187 +
            (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C31548 * C9188 +
            (C11882 - (C11883 + C11884) + C11885 - C11886 - C11887) * C31548 *
                C9189) *
               C3120 +
           ((C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C31548 * C9187 +
            (C11884 + C11883 - C11882 - C11885 + C11886 + C11887) * C31548 *
                C9188 +
            (C6781 * C30449 + C6780 * C31332 - C11012 * C30445 -
             C11013 * C31340 + (C4585 * C2241 + C31314 * C2244) * C30455 +
             (C4585 * C2247 + C31314 * C2250) * C2723) *
                C31548 * C9189) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C2463 +
                     (C4585 * C131 + C31314 * C142) * C2457 -
                     (C4585 * C122 + C31314 * C129) * C2464 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C4582 +
                    (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
                       C31560 * C31463 +
                   (((C4585 * C421 + C31314 * C431) * C2464 -
                     ((C4585 * C436 + C31314 * C453) * C2457 +
                      (C4585 * C424 + C31314 * C437) * C2463) +
                     (C4585 * C435 + C31314 * C452) * C31337) *
                        C4582 +
                    (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
                       C31560 * C31470 +
                   (((C4585 * C426 + C31314 * C441) * C2463 +
                     (C4585 * C444 + C31314 * C456) * C2457 -
                     (C4585 * C427 + C31314 * C442) * C2464 -
                     (C4585 * C445 + C31314 * C457) * C31337) *
                        C4582 +
                    (C7174 + C7175 - C7176 - C7177) * C4583 +
                    (C7178 + C7179 - C7180 - C7181) * C4584) *
                       C31560 * C3628) *
                      C31638 +
                  (((C7000 - (C6999 + C6998) + C7001) * C4582 +
                    (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
                       C31560 * C31463 +
                   ((C7168 + C7167 - C7166 - C7169) * C4582 +
                    (C7172 + C7171 - C7170 - C7173) * C4583 +
                    (C7620 + C7621 - C7622 - C7623) * C4584) *
                       C31560 * C31470 +
                   ((C7176 - (C7175 + C7174) + C7177) * C4582 +
                    (C7180 - (C7179 + C7178) + C7181) * C4583 +
                    ((C4585 * C6541 + C31314 * C6542) * C2464 -
                     (C5679 * C2457 + C5680 * C2463) +
                     (C4585 * C6543 + C31314 * C6544) * C31337) *
                        C4584) *
                       C31560 * C3628) *
                      C31427)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                     C115 * C123 + C103 * C130) *
                        C2463 +
                    (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                     C115 * C133 + C103 * C144) *
                        C2457 -
                    (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                     C113 * C122 + C101 * C129) *
                        C2464 -
                    (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                     C113 * C132 + C101 * C143) *
                        C31337) *
                       C31548 * C31560 * C31463 +
                   ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                     C115 * C423 + C103 * C433) *
                        C2464 -
                    ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                      C113 * C436 + C101 * C453) *
                         C2457 +
                     (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                      C113 * C424 + C101 * C437) *
                         C2463) +
                    (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                     C115 * C438 + C103 * C454) *
                        C31337) *
                       C31548 * C31560 * C31470 +
                   ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
                     C115 * C428 + C103 * C443) *
                        C2463 +
                    (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
                     C115 * C446 + C103 * C458) *
                        C2457 -
                    (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
                     C113 * C427 + C101 * C442) *
                        C2464 -
                    (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
                     C113 * C445 + C101 * C457) *
                        C31337) *
                       C31548 * C31560 * C3628) *
                      C31638 +
                  (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                     C115 * C270 + C103 * C280) *
                        C2464 -
                    ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                      C113 * C283 + C101 * C300) *
                         C2457 +
                     (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                      C113 * C271 + C101 * C284) *
                         C2463) +
                    (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                     C115 * C285 + C103 * C301) *
                        C31337) *
                       C31548 * C31560 * C31463 +
                   ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                     C115 * C825 + C103 * C830) *
                        C2463 +
                    (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                     C115 * C833 + C103 * C840) *
                        C2457 -
                    (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                     C113 * C824 + C101 * C829) *
                        C2464 -
                    (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                     C113 * C832 + C101 * C839) *
                        C31337) *
                       C31548 * C31560 * C31470 +
                   ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
                     C115 * C2031 + C103 * C2032) *
                        C2464 -
                    ((C115 * C1174 + C103 * C1192 + C114 * C1175 +
                      C102 * C1193 + C113 * C1176 + C101 * C1194) *
                         C2457 +
                     (C115 * C1165 + C103 * C1177 + C114 * C1166 +
                      C102 * C1178 + C113 * C1167 + C101 * C1179) *
                         C2463) +
                    (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
                     C115 * C2033 + C103 * C2034) *
                        C31337) *
                       C31548 * C31560 * C3628) *
                      C31427)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C121 + C31314 * C128) * C2463 +
                     (C4585 * C131 + C31314 * C142) * C2457 -
                     (C4585 * C122 + C31314 * C129) * C2464 -
                     (C4585 * C132 + C31314 * C143) * C31337) *
                        C31548 * C9187 +
                    (C11590 + C11591 - C11592 - C11593) * C31548 * C9188 +
                    C11613 * C9189) *
                       C31463 +
                   ((C11592 - (C11591 + C11590) + C11593) * C31548 * C9187 +
                    (C11596 - (C11595 + C11594) + C11597) * C31548 * C9188 +
                    C12399 * C9189) *
                       C31470 +
                   (C11613 * C9187 +
                    (C11600 + C11599 - C11598 - C11601) * C31548 * C9188 +
                    (C12393 + C12394 - C12395 - C12396) * C31548 * C9189) *
                       C3628) *
                      C31638 +
                  (((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
                    (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
                    C11612 * C9189) *
                       C31463 +
                   ((C7168 + C7167 - C7166 - C7169) * C31548 * C9187 +
                    (C7174 + C7175 - C7176 - C7177) * C31548 * C9188 +
                    (C11603 + C11604 - C11605 - C11606) * C31548 * C9189) *
                       C31470 +
                   (C11612 * C9187 +
                    (C11605 - (C11604 + C11603) + C11606) * C31548 * C9188 +
                    ((C4585 * C10993 + C31314 * C10994) * C2464 -
                     (C11244 * C2457 + C11245 * C2463) +
                     (C4585 * C10995 + C31314 * C10996) * C31337) *
                        C31548 * C9189) *
                       C3628) *
                      C31427)) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C2355 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C31710 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C2356 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C31703 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C2357 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31690 -
               (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
                C113 * C124 + C101 * C134) *
                   C2358 -
               (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
                C113 * C135 + C101 * C145) *
                   C31671) *
                  C31548 * C31560 * C3120 +
              ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                C115 * C423 + C103 * C433) *
                   C2356 -
               ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                 C113 * C436 + C101 * C453) *
                    C31710 +
                (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                 C113 * C424 + C101 * C437) *
                    C2355) +
               (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                C115 * C438 + C103 * C454) *
                   C31703 -
               (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
                C113 * C422 + C101 * C432) *
                   C2357 -
               (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
                C113 * C434 + C101 * C451) *
                   C31690 +
               (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
                C115 * C673 + C103 * C674) *
                   C2358 +
               (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
                C115 * C675 + C103 * C676) *
                   C31671) *
                  C31548 * C31560 * C31467) *
             C31368 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                 C115 * C123 + C103 * C130) *
                    C2463 +
                (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                 C115 * C133 + C103 * C144) *
                    C2457 -
                (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                 C113 * C122 + C101 * C129) *
                    C2464 -
                (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                 C113 * C132 + C101 * C143) *
                    C31337) *
                   C31548 * C31560 * C3120 +
               ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
                 C115 * C423 + C103 * C433) *
                    C2464 -
                ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
                  C113 * C436 + C101 * C453) *
                     C2457 +
                 (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
                  C113 * C424 + C101 * C437) *
                     C2463) +
                (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
                 C115 * C438 + C103 * C454) *
                    C31337) *
                   C31548 * C31560 * C31467) *
                  C31704 +
              (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                 C115 * C270 + C103 * C280) *
                    C2464 -
                ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                  C113 * C283 + C101 * C300) *
                     C2457 +
                 (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                  C113 * C271 + C101 * C284) *
                     C2463) +
                (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                 C115 * C285 + C103 * C301) *
                    C31337) *
                   C31548 * C31560 * C3120 +
               ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
                 C115 * C825 + C103 * C830) *
                    C2463 +
                (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
                 C115 * C833 + C103 * C840) *
                    C2457 -
                (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
                 C113 * C824 + C101 * C829) *
                    C2464 -
                (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
                 C113 * C832 + C101 * C839) *
                    C31337) *
                   C31548 * C31560 * C31467) *
                  C31692 +
              (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                 C115 * C275 + C103 * C290) *
                    C2463 +
                (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                 C115 * C293 + C103 * C305) *
                    C2457 -
                (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                 C113 * C274 + C101 * C289) *
                    C2464 -
                (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                 C113 * C292 + C101 * C304) *
                    C31337) *
                   C31548 * C31560 * C3120 +
               ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
                 C115 * C1457 + C103 * C1458) *
                    C2464 -
                ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
                  C113 * C1182 + C101 * C1197) *
                     C2457 +
                 (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
                  C113 * C1170 + C101 * C1185) *
                     C2463) +
                (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
                 C115 * C1459 + C103 * C1460) *
                    C31337) *
                   C31548 * C31560 * C31467) *
                  C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2463 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C2457 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2464 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31712 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C2464 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C2457 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C2463) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31337) *
              C31548 * C31560 * C31709 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C2463 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C2457 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C2464 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31337) *
              C31548 * C31560 * C31700 +
          ((C113 * C1862 + C101 * C1871 + C114 * C1861 + C102 * C1870 +
            C115 * C2137 + C103 * C2138) *
               C2464 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C2457 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C2463) +
           (C113 * C1868 + C101 * C1880 + C114 * C1867 + C102 * C1879 +
            C115 * C2139 + C103 * C2140) *
               C31337) *
              C31548 * C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C3120 +
          (((C4585 * C421 + C31314 * C431) * C2356 -
            ((C4585 * C436 + C31314 * C453) * C31710 +
             (C4585 * C424 + C31314 * C437) * C2355) +
            (C4585 * C435 + C31314 * C452) * C31703 -
            (C4585 * C422 + C31314 * C432) * C2357 -
            (C4585 * C434 + C31314 * C451) * C31690 +
            (C4585 * C423 + C31314 * C433) * C2358 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           (C5278 * C2356 - (C5279 * C31710 + C5280 * C2355) + C5281 * C31703 -
            C5282 * C2357 - C5283 * C31690 +
            (C4585 * C826 + C31314 * C834) * C2358 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           (C5284 * C2356 - (C5285 * C31710 + C5286 * C2355) + C5287 * C31703 -
            C5288 * C2357 - C5289 * C31690 +
            (C4585 * C1457 + C31314 * C1458) * C2358 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
               C31560 * C31467) *
              C31704 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C3120 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C7620 + C7621 - C7622 - C7623) * C4584) *
               C31560 * C31467) *
              C31692 +
          ((C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
            (C7010 + C7011 - C7012 - C7013) * C4584) *
               C31560 * C3120 +
           (C7625 * C4582 + (C7622 - (C7621 + C7620) + C7623) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
              C31560 * C31712 +
          (((C4585 * C421 + C31314 * C431) * C2464 -
            ((C4585 * C436 + C31314 * C453) * C2457 +
             (C4585 * C424 + C31314 * C437) * C2463) +
            (C4585 * C435 + C31314 * C452) * C31337) *
               C4582 +
           (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
              C31560 * C31709 +
          (((C4585 * C426 + C31314 * C441) * C2463 +
            (C4585 * C444 + C31314 * C456) * C2457 -
            (C4585 * C427 + C31314 * C442) * C2464 -
            (C4585 * C445 + C31314 * C457) * C31337) *
               C4582 +
           (C7174 + C7175 - C7176 - C7177) * C4583 +
           (C7178 + C7179 - C7180 - C7181) * C4584) *
              C31560 * C31700 +
          (((C4585 * C1862 + C31314 * C1871) * C2464 -
            ((C4585 * C1869 + C31314 * C1881) * C2457 +
             (C4585 * C1863 + C31314 * C1872) * C2463) +
            (C4585 * C1868 + C31314 * C1880) * C31337) *
               C4582 +
           ((C4585 * C2240 + C31314 * C2243) * C2464 -
            (C6780 * C2457 + C6781 * C2463) +
            (C4585 * C2246 + C31314 * C2249) * C31337) *
               C4583 +
           ((C4585 * C6663 + C31314 * C6664) * C2464 -
            (C6778 * C2457 + C6779 * C2463) +
            (C4585 * C6665 + C31314 * C6666) * C31337) *
               C4584) *
              C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C12132 + C12133 - C12134 - C12135 + C12136 + C12137 - C12138 -
            C12139) *
               C31548 * C9188 +
           (C12140 + C12141 - C12142 - C12143 + C12144 + C12145 - C12146 -
            C12147) *
               C31548 * C9189) *
              C3120 +
          ((C12134 - (C12133 + C12132) + C12135 - C12136 - C12137 + C12138 +
            C12139) *
               C31548 * C9187 +
           (C12142 - (C12141 + C12140) + C12143 - C12144 - C12145 + C12146 +
            C12147) *
               C31548 * C9188 +
           (C9459 * C2356 - (C9460 * C31710 + C9461 * C2355) + C9462 * C31703 -
            C9463 * C2357 - C9464 * C31690 +
            (C4585 * C2137 + C31314 * C2138) * C2358 +
            (C4585 * C2139 + C31314 * C2140) * C31671) *
               C31548 * C9189) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C31548 * C9187 +
            (C11590 + C11591 - C11592 - C11593) * C31548 * C9188 +
            C11613 * C9189) *
               C3120 +
           ((C11592 - (C11591 + C11590) + C11593) * C31548 * C9187 +
            (C11596 - (C11595 + C11594) + C11597) * C31548 * C9188 +
            (C11598 - (C11599 + C11600) + C11601) * C31548 * C9189) *
               C31467) *
              C31704 +
          (((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
            (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
            C11612 * C9189) *
               C3120 +
           ((C7168 + C7167 - C7166 - C7169) * C31548 * C9187 +
            (C7174 + C7175 - C7176 - C7177) * C31548 * C9188 +
            (C11603 + C11604 - C11605 - C11606) * C31548 * C9189) *
               C31467) *
              C31692 +
          ((C7018 * C31548 * C9187 +
            (C7172 + C7171 - C7170 - C7173) * C31548 * C9188 +
            (C7178 + C7179 - C7180 - C7181) * C31548 * C9189) *
               C3120 +
           (C7625 * C31548 * C9187 +
            (C7180 - (C7179 + C7178) + C7181) * C31548 * C9188 +
            ((C4585 * C6663 + C31314 * C6664) * C2464 -
             (C6778 * C2457 + C6779 * C2463) +
             (C4585 * C6665 + C31314 * C6666) * C31337) *
                C31548 * C9189) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C31548 * C9187 +
           (C11590 + C11591 - C11592 - C11593) * C31548 * C9188 +
           C11613 * C9189) *
              C31712 +
          ((C11592 - (C11591 + C11590) + C11593) * C31548 * C9187 +
           (C11596 - (C11595 + C11594) + C11597) * C31548 * C9188 +
           C12399 * C9189) *
              C31709 +
          (C11613 * C9187 +
           (C11600 + C11599 - C11598 - C11601) * C31548 * C9188 +
           (C12393 + C12394 - C12395 - C12396) * C31548 * C9189) *
              C31700 +
          (C12399 * C9187 +
           (C12395 - (C12394 + C12393) + C12396) * C31548 * C9188 +
           ((C4585 * C11117 + C31314 * C11118) * C2464 -
            (C10840 * C2457 + C10841 * C2463) +
            (C4585 * C11119 + C31314 * C11120) * C31337) *
               C31548 * C9189) *
              C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30449 +
            (C4585 * C131 + C31314 * C142) * C31332 -
            (C4585 * C122 + C31314 * C129) * C30445 -
            (C4585 * C132 + C31314 * C143) * C31340 +
            (C4585 * C123 + C31314 * C130) * C30455 +
            (C4585 * C133 + C31314 * C144) * C2723) *
               C4582 +
           (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
           C7314 * C4584) *
              C31560 * C31463 +
          (((C4585 * C421 + C31314 * C431) * C30445 -
            ((C4585 * C436 + C31314 * C453) * C31332 +
             (C4585 * C424 + C31314 * C437) * C30449) +
            (C4585 * C435 + C31314 * C452) * C31340 -
            (C4585 * C422 + C31314 * C432) * C30455 -
            (C4585 * C434 + C31314 * C451) * C2723) *
               C4582 +
           (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C4583 +
           (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C4584) *
              C31560 * C31470 +
          (((C4585 * C426 + C31314 * C441) * C30449 +
            (C4585 * C444 + C31314 * C456) * C31332 -
            (C4585 * C427 + C31314 * C442) * C30445 -
            (C4585 * C445 + C31314 * C457) * C31340 +
            (C4585 * C428 + C31314 * C443) * C30455 +
            (C4585 * C446 + C31314 * C458) * C2723) *
               C4582 +
           (C5673 * C30449 + C5674 * C31332 - C6558 * C30445 - C6559 * C31340 +
            (C4585 * C1165 + C31314 * C1177) * C30455 +
            (C4585 * C1174 + C31314 * C1192) * C2723) *
               C4583 +
           (C5675 * C30449 + C5676 * C31332 - C6560 * C30445 - C6561 * C31340 +
            (C4585 * C1173 + C31314 * C1188) * C30455 +
            (C4585 * C1191 + C31314 * C1200) * C2723) *
               C4584) *
              C31560 * C3628) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30449 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31332 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30445 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31340 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C30455 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C2723) *
              C31548 * C31560 * C31463 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C30445 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31332 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C30449) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31340 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C30455 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C2723) *
              C31548 * C31560 * C31470 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C30449 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31332 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C30445 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31340 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C30455 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C2723) *
              C31548 * C31560 * C3628) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30449 +
            (C4585 * C131 + C31314 * C142) * C31332 -
            (C4585 * C122 + C31314 * C129) * C30445 -
            (C4585 * C132 + C31314 * C143) * C31340 +
            (C4585 * C123 + C31314 * C130) * C30455 +
            (C4585 * C133 + C31314 * C144) * C2723) *
               C31548 * C9187 +
           (C11870 + C11871 - C11872 - C11873 + C11874 + C11875) * C31548 *
               C9188 +
           C12667 * C9189) *
              C31463 +
          ((C11872 - (C11871 + C11870) + C11873 - C11874 - C11875) * C31548 *
               C9187 +
           (C11878 - (C11877 + C11876) + C11879 - C11880 - C11881) * C31548 *
               C9188 +
           (C12657 - (C12658 + C12659) + C12660 - C12661 - C12662) * C31548 *
               C9189) *
              C31470 +
          (C12667 * C9187 +
           (C12659 + C12658 - C12657 - C12660 + C12661 + C12662) * C31548 *
               C9188 +
           (C10838 * C30449 + C10839 * C31332 - C11130 * C30445 -
            C11131 * C31340 + (C4585 * C1866 + C31314 * C1875) * C30455 +
            (C4585 * C1878 + C31314 * C1884) * C2723) *
               C31548 * C9189) *
              C3628) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31704 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31692 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C2463 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C2457 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C2464 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C2464 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C2457 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C2463) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2355 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31710 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2356 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31703 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C2357 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31690 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C2358 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C3120 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C2356 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31710 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C2355) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31703 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C2357 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31690 +
           (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
            C115 * C673 + C103 * C674) *
               C2358 +
           (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
            C115 * C675 + C103 * C676) *
               C31671) *
              C31548 * C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C3120 +
          (((C4585 * C421 + C31314 * C431) * C2356 -
            ((C4585 * C436 + C31314 * C453) * C31710 +
             (C4585 * C424 + C31314 * C437) * C2355) +
            (C4585 * C435 + C31314 * C452) * C31703 -
            (C4585 * C422 + C31314 * C432) * C2357 -
            (C4585 * C434 + C31314 * C451) * C31690 +
            (C4585 * C423 + C31314 * C433) * C2358 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           (C5278 * C2356 - (C5279 * C31710 + C5280 * C2355) + C5281 * C31703 -
            C5282 * C2357 - C5283 * C31690 +
            (C4585 * C826 + C31314 * C834) * C2358 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           (C5284 * C2356 - (C5285 * C31710 + C5286 * C2355) + C5287 * C31703 -
            C5288 * C2357 - C5289 * C31690 +
            (C4585 * C1457 + C31314 * C1458) * C2358 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
               C31560 * C31467) *
              C31704 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C3120 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C7620 + C7621 - C7622 - C7623) * C4584) *
               C31560 * C31467) *
              C31692 +
          ((C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
            (C7010 + C7011 - C7012 - C7013) * C4584) *
               C31560 * C3120 +
           (C7625 * C4582 + (C7622 - (C7621 + C7620) + C7623) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C12132 + C12133 - C12134 - C12135 + C12136 + C12137 - C12138 -
            C12139) *
               C31548 * C9188 +
           (C12140 + C12141 - C12142 - C12143 + C12144 + C12145 - C12146 -
            C12147) *
               C31548 * C9189) *
              C3120 +
          ((C12134 - (C12133 + C12132) + C12135 - C12136 - C12137 + C12138 +
            C12139) *
               C31548 * C9187 +
           (C12142 - (C12141 + C12140) + C12143 - C12144 - C12145 + C12146 +
            C12147) *
               C31548 * C9188 +
           (C9459 * C2356 - (C9460 * C31710 + C9461 * C2355) + C9462 * C31703 -
            C9463 * C2357 - C9464 * C31690 +
            (C4585 * C2137 + C31314 * C2138) * C2358 +
            (C4585 * C2139 + C31314 * C2140) * C31671) *
               C31548 * C9189) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C31548 * C9187 +
            (C11590 + C11591 - C11592 - C11593) * C31548 * C9188 +
            C11613 * C9189) *
               C3120 +
           ((C11592 - (C11591 + C11590) + C11593) * C31548 * C9187 +
            (C11596 - (C11595 + C11594) + C11597) * C31548 * C9188 +
            (C11598 - (C11599 + C11600) + C11601) * C31548 * C9189) *
               C31467) *
              C31704 +
          (((C7000 - (C6999 + C6998) + C7001) * C31548 * C9187 +
            (C7166 - (C7167 + C7168) + C7169) * C31548 * C9188 +
            C11612 * C9189) *
               C3120 +
           ((C7168 + C7167 - C7166 - C7169) * C31548 * C9187 +
            (C7174 + C7175 - C7176 - C7177) * C31548 * C9188 +
            (C11603 + C11604 - C11605 - C11606) * C31548 * C9189) *
               C31467) *
              C31692 +
          ((C7018 * C31548 * C9187 +
            (C7172 + C7171 - C7170 - C7173) * C31548 * C9188 +
            (C7178 + C7179 - C7180 - C7181) * C31548 * C9189) *
               C3120 +
           (C7625 * C31548 * C9187 +
            (C7180 - (C7179 + C7178) + C7181) * C31548 * C9188 +
            ((C4585 * C6663 + C31314 * C6664) * C2464 -
             (C6778 * C2457 + C6779 * C2463) +
             (C4585 * C6665 + C31314 * C6666) * C31337) *
                C31548 * C9189) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30439 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31624 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30420 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31380 * C1301 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C30420 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31624 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C30439) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31337) *
              C31548 * C31560 * C31380 * C1302 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C30439 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31624 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C30420 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31337) *
              C31548 * C31560 * C31380 * C1303 +
          ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
            C115 * C1307 + C103 * C1308) *
               C30420 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31624 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C30439) +
           (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
            C115 * C1309 + C103 * C1310) *
               C31337) *
              C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C565 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C559 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C566 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C560 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C567 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C561 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C568 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31380 * C31638 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C566 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C559 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C565) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C560 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C567 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C561 +
           (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
            C115 * C569 + C103 * C570) *
               C568 +
           (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
            C115 * C571 + C103 * C572) *
               C31671) *
              C31548 * C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31380 * C31638 +
          ((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
               C4582 +
           (C4994 - (C4993 + C4992) + C4995 - C4996 - C4997 + C5008 + C5009) *
               C4583 +
           (C4745 * C566 - (C4746 * C559 + C4747 * C565) + C4748 * C560 -
            C4749 * C567 - C4750 * C561 +
            (C4585 * C1307 + C31314 * C1308) * C568 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
              C31560 * C31380 * C1301 +
          ((C5794 - (C5793 + C5792) + C5795) * C4582 +
           (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
              C31560 * C31380 * C1302 +
          (C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
           (C5804 + C5805 - C5816 - C5817) * C4584) *
              C31560 * C31380 * C1303 +
          (C5819 * C4582 + (C5816 - (C5805 + C5804) + C5817) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C30420 -
            (C5523 * C31624 + C5524 * C30439) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C9447 * C565 + C9448 * C559 - C9449 * C566 - C9450 * C560 +
            C9451 * C567 + C9452 * C561 -
            (C4585 * C423 + C31314 * C433) * C568 -
            (C4585 * C438 + C31314 * C454) * C31671) *
               C31548 * C9188 +
           (C9453 * C565 + C9454 * C559 - C9455 * C566 - C9456 * C560 +
            C9457 * C567 + C9458 * C561 -
            (C4585 * C429 + C31314 * C447) * C568 -
            (C4585 * C448 + C31314 * C459) * C31671) *
               C31548 * C9189) *
              C31380 * C31638 +
          ((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
               C31548 * C9187 +
           (C5278 * C566 - (C5279 * C559 + C5280 * C565) + C5281 * C560 -
            C5282 * C567 - C5283 * C561 +
            (C4585 * C826 + C31314 * C834) * C568 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C31548 * C9188 +
           (C6558 * C566 - (C5674 * C559 + C5673 * C565) + C6559 * C560 -
            (C4585 * C1165 + C31314 * C1177) * C567 -
            (C4585 * C1174 + C31314 * C1192) * C561 +
            (C4585 * C2031 + C31314 * C2032) * C568 +
            (C4585 * C2033 + C31314 * C2034) * C31671) *
               C31548 * C9189) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C31548 * C9187 +
           (C9447 * C30439 + C9448 * C31624 - C9449 * C30420 - C9450 * C31337) *
               C31548 * C9188 +
           (C9453 * C30439 + C9454 * C31624 - C9455 * C30420 - C9456 * C31337) *
               C31548 * C9189) *
              C31380 * C1301 +
          ((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
           (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
           (C6562 - (C6547 + C6546) + C6563) * C31548 * C9189) *
              C31380 * C1302 +
          (C5818 * C31548 * C9187 +
           (C5976 + C5975 - C5974 - C5977) * C31548 * C9188 +
           (C6552 + C6553 - C6564 - C6565) * C31548 * C9189) *
              C31380 * C1303 +
          (C5819 * C31548 * C9187 +
           (C5988 - (C5979 + C5978) + C5989) * C31548 * C9188 +
           ((C4585 * C6541 + C31314 * C6542) * C30420 -
            (C5679 * C31624 + C5680 * C30439) +
            (C4585 * C6543 + C31314 * C6544) * C31337) *
               C31548 * C9189) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31639 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31467) *
              C1301 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31639) *
              C1302 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31639 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31467) *
              C1303 +
          (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
             C115 * C1561 + C103 * C1564) *
                C1030 +
            (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
             C115 * C1567 + C103 * C1570) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31327 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C1030) *
               C31548 * C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C265 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C259 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C266 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C260 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C267 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C31661) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C266 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C259 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C265) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C260 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C267 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C266 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C259 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C265) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C260 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C267 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C31661) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C265 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C259 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C266 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C260 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C267 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
            C4773 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C266 -
             ((C4585 * C436 + C31314 * C453) * C259 +
              (C4585 * C424 + C31314 * C437) * C265) +
             (C4585 * C435 + C31314 * C452) * C260 -
             (C4585 * C422 + C31314 * C432) * C267 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C4583 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C4584) *
               C31560 * C31467) *
              C31638 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
            (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
               C31560 * C31639 +
           ((C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C4582 +
            (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C4583 +
            ((C4585 * C1559 + C31314 * C1562) * C265 +
             (C4585 * C1565 + C31314 * C1568) * C259 -
             (C4585 * C1560 + C31314 * C1563) * C266 -
             (C4585 * C1566 + C31314 * C1569) * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31639 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C1301 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31639) *
              C1302 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31639 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C1303 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C31548 * C9187 +
            (C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C31548 * C9188 +
            C9488 * C9189) *
               C31639 +
           ((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C31548 * C9187 +
            (C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C31548 * C9188 +
            (C9477 - (C9478 + C9479) + C9480 - C9481 - C9482) * C31548 *
                C9189) *
               C31467) *
              C31638 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C31548 * C9187 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C31548 * C9188 +
            (C9859 - (C9860 + C9861) + C9862 - C9869 - C9870) * C31548 *
                C9189) *
               C31639 +
           ((C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C31548 * C9187 +
            (C9861 + C9860 - C9859 - C9862 + C9869 + C9870) * C31548 * C9188 +
            (C6781 * C265 + C6780 * C259 -
             (C4585 * C2240 + C31314 * C2243) * C266 -
             (C4585 * C2246 + C31314 * C2249) * C260 +
             (C4585 * C2241 + C31314 * C2244) * C267 +
             (C4585 * C2247 + C31314 * C2250) * C31661) *
                C31548 * C9189) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C31639 -
           ((C10157 + C10158) * C31548 * C9189 +
            (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31467) *
              C1301 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 +
            (C6785 + C6784) * C31548 * C9189) *
               C31467 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C31639) *
              C1302 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C31639 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31467) *
              C1303 +
          ((C6093 * C31548 * C9187 + (C5688 + C5687) * C31548 * C9188 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C31548 * C9189) *
               C31467 -
           ((C5687 + C5688) * C31548 * C9189 +
            (C5686 + C5685) * C31548 * C9188 + C5520 * C31548 * C9187) *
               C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
               C115 * C123 + C103 * C130) *
                  C116 +
              (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
               C115 * C133 + C103 * C144) *
                  C104 -
              (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
               C113 * C122 + C101 * C129) *
                  C117 -
              (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
               C113 * C132 + C101 * C143) *
                  C105 +
              (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
               C115 * C125 + C103 * C136) *
                  C118 +
              (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
               C115 * C137 + C103 * C146) *
                  C106 -
              (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
               C113 * C124 + C101 * C134) *
                  C119 -
              (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
               C113 * C135 + C101 * C145) *
                  C107 +
              (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 +
               C115 * C127 + C103 * C140) *
                  C120 +
              (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 +
               C115 * C141 + C103 * C148) *
                  C108) *
             C31548 * C31560 * C31380 * C31368 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C265 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C259 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C266 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C260 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C267 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31704 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C266 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C259 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C265) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C260 -
               (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                C113 * C269 + C101 * C279) *
                   C267 -
               (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                C113 * C281 + C101 * C298) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31692 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C265 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C259 -
               (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                C113 * C274 + C101 * C289) *
                   C266 -
               (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                C113 * C292 + C101 * C304) *
                   C260 +
               (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
                C115 * C277 + C103 * C296) *
                   C267 +
               (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
                C115 * C297 + C103 * C307) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31705 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C266 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C259 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C265) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C260 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C267 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31661) *
              C31548 * C31560 * C31694 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C265 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C259 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C266 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C260 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C267 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C31661) *
              C31548 * C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31705 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31694 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31670) *
              C956 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31694 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31705 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31670) *
              C957 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31705 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31694 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31705 +
          (((C4585 * C421 + C31314 * C431) * C266 -
            ((C4585 * C436 + C31314 * C453) * C259 +
             (C4585 * C424 + C31314 * C437) * C265) +
            (C4585 * C435 + C31314 * C452) * C260 -
            (C4585 * C422 + C31314 * C432) * C267 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C266 -
            ((C4585 * C831 + C31314 * C838) * C259 +
             (C4585 * C823 + C31314 * C828) * C265) +
            (C4585 * C832 + C31314 * C839) * C260 -
            (C4585 * C825 + C31314 * C830) * C267 -
            (C4585 * C833 + C31314 * C840) * C31661) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C266 -
            ((C4585 * C1182 + C31314 * C1197) * C259 +
             (C4585 * C1170 + C31314 * C1185) * C265) +
            (C4585 * C1181 + C31314 * C1196) * C260 -
            (C4585 * C1168 + C31314 * C1183) * C267 -
            (C4585 * C1180 + C31314 * C1195) * C31661) *
               C4584) *
              C31560 * C31694 +
          (((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           ((C4585 * C1167 + C31314 * C1179) * C265 +
            (C4585 * C1176 + C31314 * C1194) * C259 -
            (C4585 * C1166 + C31314 * C1178) * C266 -
            (C4585 * C1175 + C31314 * C1193) * C260 +
            (C4585 * C1165 + C31314 * C1177) * C267 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           ((C4585 * C1171 + C31314 * C1186) * C265 +
            (C4585 * C1189 + C31314 * C1198) * C259 -
            (C4585 * C1172 + C31314 * C1187) * C266 -
            (C4585 * C1190 + C31314 * C1199) * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31705 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31694 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C956 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 +
            (C5685 + C5686) * C4584) *
               C31560 * C31694 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31705 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C957 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31705 -
           (((C4585 * C5644 + C31314 * C5649) * C31327 +
             (C4585 * C5640 + C31314 * C5645) * C1030) *
                C4584 +
            (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31694 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C31548 * C9187 +
          ((C4585 * C424 + C31314 * C437) * C116 +
           (C4585 * C436 + C31314 * C453) * C104 -
           (C4585 * C421 + C31314 * C431) * C117 -
           (C4585 * C435 + C31314 * C452) * C105 +
           (C4585 * C422 + C31314 * C432) * C118 +
           (C4585 * C434 + C31314 * C451) * C106 -
           (C4585 * C423 + C31314 * C433) * C119 -
           (C4585 * C438 + C31314 * C454) * C107 +
           (C4585 * C425 + C31314 * C439) * C120 +
           (C4585 * C440 + C31314 * C455) * C108) *
              C31548 * C9188 +
          ((C4585 * C426 + C31314 * C441) * C116 +
           (C4585 * C444 + C31314 * C456) * C104 -
           (C4585 * C427 + C31314 * C442) * C117 -
           (C4585 * C445 + C31314 * C457) * C105 +
           (C4585 * C428 + C31314 * C443) * C118 +
           (C4585 * C446 + C31314 * C458) * C106 -
           (C4585 * C429 + C31314 * C447) * C119 -
           (C4585 * C448 + C31314 * C459) * C107 +
           (C4585 * C430 + C31314 * C449) * C120 +
           (C4585 * C450 + C31314 * C460) * C108) *
              C31548 * C9189) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           ((C4585 * C424 + C31314 * C437) * C265 +
            (C4585 * C436 + C31314 * C453) * C259 -
            (C4585 * C421 + C31314 * C431) * C266 -
            (C4585 * C435 + C31314 * C452) * C260 +
            (C4585 * C422 + C31314 * C432) * C267 +
            (C4585 * C434 + C31314 * C451) * C31661) *
               C31548 * C9188 +
           ((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C31548 * C9189) *
              C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C31548 * C9187 +
           (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C31548 * C9188 +
           (C6558 * C266 - (C5674 * C259 + C5673 * C265) + C6559 * C260 -
            (C4585 * C1165 + C31314 * C1177) * C267 -
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C31548 * C9189) *
              C31380 * C31692 +
          (C4773 * C31548 * C9187 +
           (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C31548 * C9188 +
           (C5675 * C265 + C5676 * C259 - C6560 * C266 - C6561 * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C9465 + C9466 - C9467 - C9468 + C9469 + C9470) * C31548 * C9188 +
           C9488 * C9189) *
              C31705 +
          ((C9467 - (C9466 + C9465) + C9468 - C9469 - C9470) * C31548 * C9187 +
           (C9473 - (C9472 + C9471) + C9474 - C9475 - C9476) * C31548 * C9188 +
           (C9477 - (C9478 + C9479) + C9480 - C9481 - C9482) * C31548 * C9189) *
              C31694 +
          (C9488 * C9187 +
           (C9479 + C9478 - C9477 - C9480 + C9481 + C9482) * C31548 * C9188 +
           ((C4585 * C1864 + C31314 * C1873) * C265 +
            (C4585 * C1876 + C31314 * C1882) * C259 -
            (C4585 * C1865 + C31314 * C1874) * C266 -
            (C4585 * C1877 + C31314 * C1883) * C260 +
            (C4585 * C1866 + C31314 * C1875) * C267 +
            (C4585 * C1878 + C31314 * C1884) * C31661) *
               C31548 * C9189) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C9447 * C959 + C9448 * C31701 - C9449 * C960 - C9450 * C31688 +
            C9451 * C961 + C9452 * C31661) *
               C31548 * C9188 +
           (C9453 * C959 + C9454 * C31701 - C9455 * C960 - C9456 * C31688 +
            C9457 * C961 + C9458 * C31661) *
               C31548 * C9189) *
              C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C31548 * C9187 +
           (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C31548 * C9188 +
           (C6558 * C960 - (C5674 * C31701 + C5673 * C959) + C6559 * C31688 -
            C9867 * C961 - C9868 * C31661) *
               C31548 * C9189) *
              C31380 * C957 +
          (C5434 * C31548 * C9187 +
           (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C31548 * C9188 +
           (C5675 * C959 + C5676 * C31701 - C6560 * C960 - C6561 * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C31548 * C9187 +
           (C9447 * C1030 + C9448 * C31327) * C31548 * C9188 +
           (C9453 * C1030 + C9454 * C31327) * C31548 * C9189) *
              C31380 * C1025 -
          ((C5682 + C5681) * C31548 * C9189 + (C5654 + C5655) * C31548 * C9188 +
           (C5506 + C5505) * C31548 * C9187) *
              C31380 * C1026 +
          (C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
           C5689 * C31548 * C9189) *
              C31380 * C1027 -
          ((C5687 + C5688) * C31548 * C9189 + (C5686 + C5685) * C31548 * C9188 +
           C5520 * C31548 * C9187) *
              C31380 * C1028 +
          (C5529 * C31548 * C9187 + (C6101 + C6100) * C31548 * C9188 +
           ((C4585 * C5641 + C31314 * C5646) * C1030 +
            (C4585 * C5647 + C31314 * C5650) * C31327) *
               C31548 * C9189) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C31548 * C9187 +
            (C10153 + C10154) * C31548 * C9188 + C10163 * C9189) *
               C31705 -
           ((C10157 + C10158) * C31548 * C9189 +
            (C10156 + C10155) * C31548 * C9188 +
            (C10154 + C10153) * C31548 * C9187) *
               C31694 +
           (C10163 * C9187 + (C10158 + C10157) * C31548 * C9188 +
            ((C4585 * C1864 + C31314 * C1873) * C1030 +
             (C4585 * C1876 + C31314 * C1882) * C31327) *
                C31548 * C9189) *
               C31670) *
              C956 +
          (((C5655 + C5654) * C31548 * C9187 +
            (C5681 + C5682) * C31548 * C9188 +
            (C6785 + C6784) * C31548 * C9189) *
               C31694 -
           (C10162 * C9189 + (C5654 + C5655) * C31548 * C9188 +
            (C5506 + C5505) * C31548 * C9187) *
               C31705 -
           (((C4585 * C6389 + C31314 * C6393) * C31327 +
             (C4585 * C6384 + C31314 * C6388) * C1030) *
                C31548 * C9189 +
            (C6784 + C6785) * C31548 * C9188 + C10162 * C9187) *
               C31670) *
              C957 +
          ((C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
            C10160 * C9189) *
               C31705 -
           ((C6782 + C6783) * C31548 * C9189 +
            (C5684 + C5683) * C31548 * C9188 + C5672 * C31548 * C9187) *
               C31694 +
           (C10160 * C9187 + (C6783 + C6782) * C31548 * C9188 +
            ((C4585 * C6385 + C31314 * C6390) * C1030 +
             (C4585 * C6391 + C31314 * C6394) * C31327) *
                C31548 * C9189) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C956 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C957 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C30439 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31624 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C30420 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C30420 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C31624 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C30439) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C565 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C559 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C566 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C560 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C567 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C561 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C568 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31639 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C566 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C559 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C565) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C560 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C567 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C561 +
           (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
            C115 * C673 + C103 * C674) *
               C568 +
           (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
            C115 * C675 + C103 * C676) *
               C31671) *
              C31548 * C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31639 +
          (((C4585 * C421 + C31314 * C431) * C566 -
            ((C4585 * C436 + C31314 * C453) * C559 +
             (C4585 * C424 + C31314 * C437) * C565) +
            (C4585 * C435 + C31314 * C452) * C560 -
            (C4585 * C422 + C31314 * C432) * C567 -
            (C4585 * C434 + C31314 * C451) * C561 +
            (C4585 * C423 + C31314 * C433) * C568 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C566 -
            ((C4585 * C831 + C31314 * C838) * C559 +
             (C4585 * C823 + C31314 * C828) * C565) +
            (C4585 * C832 + C31314 * C839) * C560 -
            (C4585 * C825 + C31314 * C830) * C567 -
            (C4585 * C833 + C31314 * C840) * C561 +
            (C4585 * C826 + C31314 * C834) * C568 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C566 -
            ((C4585 * C1182 + C31314 * C1197) * C559 +
             (C4585 * C1170 + C31314 * C1185) * C565) +
            (C4585 * C1181 + C31314 * C1196) * C560 -
            (C4585 * C1168 + C31314 * C1183) * C567 -
            (C4585 * C1180 + C31314 * C1195) * C561 +
            (C4585 * C1457 + C31314 * C1458) * C568 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C31467) *
              C956 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C31639 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C31467) *
              C957 +
          ((C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
            (C5804 + C5805 - C5816 - C5817) * C4584) *
               C31560 * C31639 +
           (C5990 * C4582 + (C5988 - (C5979 + C5978) + C5989) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             ((C4585 * C5644 + C31314 * C5649) * C31624 +
              (C4585 * C5640 + C31314 * C5645) * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C31548 * C9187 +
           (C9685 + C9686 - C9687 - C9688 + C9689 + C9690 - C9709 - C9710) *
               C31548 * C9188 +
           (C9695 + C9696 - C9697 - C9698 + C9699 + C9700 - C9711 - C9712) *
               C31548 * C9189) *
              C31639 +
          ((C9687 - (C9686 + C9685) + C9688 - C9689 - C9690 + C9709 + C9710) *
               C31548 * C9187 +
           (C9697 - (C9696 + C9695) + C9698 - C9699 - C9700 + C9711 + C9712) *
               C31548 * C9188 +
           (C9459 * C566 - (C9460 * C559 + C9461 * C565) + C9462 * C560 -
            C9463 * C567 - C9464 * C561 +
            (C4585 * C2137 + C31314 * C2138) * C568 +
            (C4585 * C2139 + C31314 * C2140) * C31671) *
               C31548 * C9189) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C31548 * C9187 +
            (C10408 + C10409 - C10410 - C10411) * C31548 * C9188 +
            (C10412 + C10413 - C10414 - C10415) * C31548 * C9189) *
               C31639 +
           ((C10410 - (C10409 + C10408) + C10411) * C31548 * C9187 +
            (C10414 - (C10413 + C10412) + C10415) * C31548 * C9188 +
            (C9459 * C30420 - (C9460 * C31624 + C9461 * C30439) +
             C9462 * C31337) *
                C31548 * C9189) *
               C31467) *
              C956 +
          (((C5794 - (C5793 + C5792) + C5795) * C31548 * C9187 +
            (C5970 - (C5971 + C5972) + C5973) * C31548 * C9188 +
            (C6562 - (C6547 + C6546) + C6563) * C31548 * C9189) *
               C31639 +
           ((C5972 + C5971 - C5970 - C5973) * C31548 * C9187 +
            (C6546 + C6547 - C6562 - C6563) * C31548 * C9188 +
            (C6781 * C30439 + C6780 * C31624 -
             (C4585 * C2240 + C31314 * C2243) * C30420 -
             (C4585 * C2246 + C31314 * C2249) * C31337) *
                C31548 * C9189) *
               C31467) *
              C957 +
          ((C5818 * C31548 * C9187 +
            (C5976 + C5975 - C5974 - C5977) * C31548 * C9188 +
            (C6552 + C6553 - C6564 - C6565) * C31548 * C9189) *
               C31639 +
           (C5990 * C31548 * C9187 +
            (C6564 - (C6553 + C6552) + C6565) * C31548 * C9188 +
            ((C4585 * C6663 + C31314 * C6664) * C30420 -
             (C6778 * C31624 + C6779 * C30439) +
             (C4585 * C6665 + C31314 * C6666) * C31337) *
                C31548 * C9189) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C31704 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C266 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C259 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C265) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C260 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C267 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C31692 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C265 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C259 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C266 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C260 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C267 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 + C115 * C123 +
           C103 * C130) *
              C116 +
          (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 + C115 * C133 +
           C103 * C144) *
              C104 -
          (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 + C113 * C122 +
           C101 * C129) *
              C117 -
          (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 + C113 * C132 +
           C101 * C143) *
              C105 +
          (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 + C115 * C125 +
           C103 * C136) *
              C118 +
          (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 + C115 * C137 +
           C103 * C146) *
              C106 -
          (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 + C113 * C124 +
           C101 * C134) *
              C119 -
          (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 + C113 * C135 +
           C101 * C145) *
              C107 +
          (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 + C115 * C127 +
           C103 * C140) *
              C120 +
          (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 + C115 * C141 +
           C103 * C148) *
              C108) *
         C31548 * C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C31548 * C9187 +
          ((C4585 * C424 + C31314 * C437) * C116 +
           (C4585 * C436 + C31314 * C453) * C104 -
           (C4585 * C421 + C31314 * C431) * C117 -
           (C4585 * C435 + C31314 * C452) * C105 +
           (C4585 * C422 + C31314 * C432) * C118 +
           (C4585 * C434 + C31314 * C451) * C106 -
           (C4585 * C423 + C31314 * C433) * C119 -
           (C4585 * C438 + C31314 * C454) * C107 +
           (C4585 * C425 + C31314 * C439) * C120 +
           (C4585 * C440 + C31314 * C455) * C108) *
              C31548 * C9188 +
          ((C4585 * C426 + C31314 * C441) * C116 +
           (C4585 * C444 + C31314 * C456) * C104 -
           (C4585 * C427 + C31314 * C442) * C117 -
           (C4585 * C445 + C31314 * C457) * C105 +
           (C4585 * C428 + C31314 * C443) * C118 +
           (C4585 * C446 + C31314 * C458) * C106 -
           (C4585 * C429 + C31314 * C447) * C119 -
           (C4585 * C448 + C31314 * C459) * C107 +
           (C4585 * C430 + C31314 * C449) * C120 +
           (C4585 * C450 + C31314 * C460) * C108) *
              C31548 * C9189) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           ((C4585 * C424 + C31314 * C437) * C265 +
            (C4585 * C436 + C31314 * C453) * C259 -
            (C4585 * C421 + C31314 * C431) * C266 -
            (C4585 * C435 + C31314 * C452) * C260 +
            (C4585 * C422 + C31314 * C432) * C267 +
            (C4585 * C434 + C31314 * C451) * C31661) *
               C31548 * C9188 +
           ((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C31548 * C9189) *
              C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C31548 * C9187 +
           (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C31548 * C9188 +
           (C6558 * C266 - (C5674 * C259 + C5673 * C265) + C6559 * C260 -
            (C4585 * C1165 + C31314 * C1177) * C267 -
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C31548 * C9189) *
              C31380 * C31692 +
          (C4773 * C31548 * C9187 +
           (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C31548 * C9188 +
           (C5675 * C265 + C5676 * C259 - C6560 * C266 - C6561 * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C31548 * C9187 +
           (C9447 * C959 + C9448 * C31701 - C9449 * C960 - C9450 * C31688 +
            C9451 * C961 + C9452 * C31661) *
               C31548 * C9188 +
           (C9453 * C959 + C9454 * C31701 - C9455 * C960 - C9456 * C31688 +
            C9457 * C961 + C9458 * C31661) *
               C31548 * C9189) *
              C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C31548 * C9187 +
           (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C31548 * C9188 +
           (C6558 * C960 - (C5674 * C31701 + C5673 * C959) + C6559 * C31688 -
            C9867 * C961 - C9868 * C31661) *
               C31548 * C9189) *
              C31380 * C957 +
          (C5434 * C31548 * C9187 +
           (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C31548 * C9188 +
           (C5675 * C959 + C5676 * C31701 - C6560 * C960 - C6561 * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C31548 * C9189) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C31548 * C9187 +
           (C9447 * C1030 + C9448 * C31327) * C31548 * C9188 +
           (C9453 * C1030 + C9454 * C31327) * C31548 * C9189) *
              C31380 * C1025 -
          ((C5682 + C5681) * C31548 * C9189 + (C5654 + C5655) * C31548 * C9188 +
           (C5506 + C5505) * C31548 * C9187) *
              C31380 * C1026 +
          (C5519 * C31548 * C9187 + (C5653 + C5652) * C31548 * C9188 +
           C5689 * C31548 * C9189) *
              C31380 * C1027 -
          ((C5687 + C5688) * C31548 * C9189 + (C5686 + C5685) * C31548 * C9188 +
           C5520 * C31548 * C9187) *
              C31380 * C1028 +
          (C5529 * C31548 * C9187 + (C6101 + C6100) * C31548 * C9188 +
           ((C4585 * C5641 + C31314 * C5646) * C1030 +
            (C4585 * C5647 + C31314 * C5650) * C31327) *
               C31548 * C9189) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30449 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31332 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30445 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31340 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C30455 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C2723) *
               C31548 * C19339 +
           ((C19682 + C19683) * C30449 + (C19684 + C19685) * C31332 -
            (C19686 + C19687) * C30445 - (C19688 + C19689) * C31340 +
            (C19690 + C19691) * C30455 + (C19692 + C19693) * C2723) *
               C31548 * C19340) *
              C31380 * C31423 +
          (((C13851 + C13850) * C30445 -
            ((C13849 + C13848) * C31332 + (C13847 + C13846) * C30449) +
            (C13853 + C13852) * C31340 - (C13855 + C13854) * C30455 -
            (C13857 + C13856) * C2723) *
               C31548 * C19339 +
           ((C14506 + C14507) * C30445 -
            ((C14508 + C14509) * C31332 + (C14510 + C14511) * C30449) +
            (C14512 + C14513) * C31340 - (C14514 + C14515) * C30455 -
            (C14516 + C14517) * C2723) *
               C31548 * C19340) *
              C31380 * C31430 +
          (((C13863 + C13862) * C30449 + (C13861 + C13860) * C31332 -
            (C13859 + C13858) * C30445 - (C13865 + C13864) * C31340 +
            (C13867 + C13866) * C30455 + (C13869 + C13868) * C2723) *
               C31548 * C19339 +
           ((C14944 + C14945) * C30449 + (C14946 + C14947) * C31332 -
            (C15296 + C15297) * C30445 - (C15298 + C15299) * C31340 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C30455 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C2723) *
               C31548 * C19340) *
              C31380 * C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
             (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C19687 + C19686) * C2464 -
             ((C19685 + C19684) * C2457 + (C19683 + C19682) * C2463) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C2464 -
             ((C19696 + C19697) * C2457 + (C19698 + C19699) * C2463) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31423 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31430 +
          ((((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
             (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
                C31548 * C19339 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C15297 + C15296) * C2464 -
             ((C14947 + C14946) * C2457 + (C14945 + C14944) * C2463) +
             (C15299 + C15298) * C31337) *
                C31548 * C19339 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C2464 -
             ((C14948 + C14949) * C2457 + (C14950 + C14951) * C2463) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C31548 * C19340) *
               C31467) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2463 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C2457 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2464 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
            (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
               C31548 * C19340) *
              C31380 * C31711 +
          (((C13851 + C13850) * C2464 -
            ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
            (C13853 + C13852) * C31337) *
               C31548 * C19339 +
           ((C14506 + C14507) * C2464 -
            ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
            (C14512 + C14513) * C31337) *
               C31548 * C19340) *
              C31380 * C31707 +
          (((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
            (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
               C31548 * C19339 +
           ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
            (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
               C31548 * C19340) *
              C31380 * C31697 +
          (((C15091 + C15090) * C2464 -
            ((C14765 + C14764) * C2457 + (C14763 + C14762) * C2463) +
            (C15093 + C15092) * C31337) *
               C31548 * C19339 +
           ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
             C13646 * C1564) *
                C2464 -
            ((C15438 + C15439) * C2457 + (C15440 + C15441) * C2463) +
            (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
             C13646 * C1570) *
                C31337) *
               C31548 * C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2355 + (C19684 + C19685) * C31710 -
            (C19686 + C19687) * C2356 - (C19688 + C19689) * C31703 +
            (C19690 + C19691) * C2357 + (C19692 + C19693) * C31690 -
            (C19974 + C19975) * C2358 - (C19976 + C19977) * C31671) *
               C31548 * C19340) *
              C31380 * C2353 +
          (((C13851 + C13850) * C2356 -
            ((C13849 + C13848) * C31710 + (C13847 + C13846) * C2355) +
            (C13853 + C13852) * C31703 - (C13855 + C13854) * C2357 -
            (C13857 + C13856) * C31690 + (C14155 + C14154) * C2358 +
            (C14157 + C14156) * C31671) *
               C31548 * C19339 +
           ((C14506 + C14507) * C2356 -
            ((C14508 + C14509) * C31710 + (C14510 + C14511) * C2355) +
            (C14512 + C14513) * C31703 - (C14514 + C14515) * C2357 -
            (C14516 + C14517) * C31690 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C2358 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C31548 * C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
             (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C31705 +
           (((C19687 + C19686) * C2464 -
             ((C19685 + C19684) * C2457 + (C19683 + C19682) * C2463) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C2464 -
             ((C19696 + C19697) * C2457 + (C19698 + C19699) * C2463) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31694 +
           (((C19699 + C19698) * C2463 + (C19697 + C19696) * C2457 -
             (C19695 + C19694) * C2464 - (C19701 + C19700) * C31337) *
                C31548 * C19339 +
            ((C21390 + C21391) * C2463 + (C21392 + C21393) * C2457 -
             (C21730 + C21731) * C2464 - (C21732 + C21733) * C31337) *
                C31548 * C19340) *
               C31670) *
              C2353 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C31705 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31694 +
           (((C16019 + C16018) * C2464 -
             ((C14943 + C14942) * C2457 + (C14941 + C14940) * C2463) +
             (C16021 + C16020) * C31337) *
                C31548 * C19339 +
            ((C13649 * C2240 + C13645 * C2243 + C13650 * C2241 +
              C13646 * C2244) *
                 C2464 -
             ((C16290 + C16291) * C2457 + (C16292 + C16293) * C2463) +
             (C13649 * C2246 + C13645 * C2249 + C13650 * C2247 +
              C13646 * C2250) *
                 C31337) *
                C31548 * C19340) *
               C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30449 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31332 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30445 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31340 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C30455 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C2723) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30449 + (C19684 + C19685) * C31332 -
             (C19686 + C19687) * C30445 - (C19688 + C19689) * C31340 +
             (C19690 + C19691) * C30455 + (C19692 + C19693) * C2723) *
                C31548 * C19340) *
               C31639 +
           (((C19687 + C19686) * C30445 -
             ((C19685 + C19684) * C31332 + (C19683 + C19682) * C30449) +
             (C19689 + C19688) * C31340 - (C19691 + C19690) * C30455 -
             (C19693 + C19692) * C2723) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30445 -
             ((C19696 + C19697) * C31332 + (C19698 + C19699) * C30449) +
             (C19700 + C19701) * C31340 - (C19702 + C19703) * C30455 -
             (C19704 + C19705) * C2723) *
                C31548 * C19340) *
               C31467) *
              C2353 +
          ((((C13851 + C13850) * C30445 -
             ((C13849 + C13848) * C31332 + (C13847 + C13846) * C30449) +
             (C13853 + C13852) * C31340 - (C13855 + C13854) * C30455 -
             (C13857 + C13856) * C2723) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30445 -
             ((C14508 + C14509) * C31332 + (C14510 + C14511) * C30449) +
             (C14512 + C14513) * C31340 - (C14514 + C14515) * C30455 -
             (C14516 + C14517) * C2723) *
                C31548 * C19340) *
               C31639 +
           (((C14511 + C14510) * C30449 + (C14509 + C14508) * C31332 -
             (C14507 + C14506) * C30445 - (C14513 + C14512) * C31340 +
             (C14515 + C14514) * C30455 + (C14517 + C14516) * C2723) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30449 + (C14942 + C14943) * C31332 -
             (C16018 + C16019) * C30445 - (C16020 + C16021) * C31340 +
             (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
              C13646 * C2032) *
                 C30455 +
             (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
              C13646 * C2034) *
                 C2723) *
                C31548 * C19340) *
               C31467) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2355 + (C19684 + C19685) * C31710 -
            (C19686 + C19687) * C2356 - (C19688 + C19689) * C31703 +
            (C19690 + C19691) * C2357 + (C19692 + C19693) * C31690 -
            (C19974 + C19975) * C2358 - (C19976 + C19977) * C31671) *
               C31548 * C19340) *
              C31380 * C2353 +
          (((C13851 + C13850) * C2356 -
            ((C13849 + C13848) * C31710 + (C13847 + C13846) * C2355) +
            (C13853 + C13852) * C31703 - (C13855 + C13854) * C2357 -
            (C13857 + C13856) * C31690 + (C14155 + C14154) * C2358 +
            (C14157 + C14156) * C31671) *
               C31548 * C19339 +
           ((C14506 + C14507) * C2356 -
            ((C14508 + C14509) * C31710 + (C14510 + C14511) * C2355) +
            (C14512 + C14513) * C31703 - (C14514 + C14515) * C2357 -
            (C14516 + C14517) * C31690 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C2358 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C31548 * C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2463 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C2457 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2464 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
            (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
               C31548 * C19340) *
              C31380 * C31711 +
          (((C13851 + C13850) * C2464 -
            ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
            (C13853 + C13852) * C31337) *
               C31548 * C19339 +
           ((C14506 + C14507) * C2464 -
            ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
            (C14512 + C14513) * C31337) *
               C31548 * C19340) *
              C31380 * C31707 +
          (((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
            (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
               C31548 * C19339 +
           ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
            (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
               C31548 * C19340) *
              C31380 * C31697 +
          (((C15091 + C15090) * C2464 -
            ((C14765 + C14764) * C2457 + (C14763 + C14762) * C2463) +
            (C15093 + C15092) * C31337) *
               C31548 * C19339 +
           ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
             C13646 * C1564) *
                C2464 -
            ((C15438 + C15439) * C2457 + (C15440 + C15441) * C2463) +
            (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
             C13646 * C1570) *
                C31337) *
               C31548 * C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
             (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C19687 + C19686) * C30420 -
             ((C19685 + C19684) * C31624 + (C19683 + C19682) * C30439) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30420 -
             ((C19696 + C19697) * C31624 + (C19698 + C19699) * C30439) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31423 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31430 +
          ((((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
             (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
                C31548 * C19339 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C15297 + C15296) * C30420 -
             ((C14947 + C14946) * C31624 + (C14945 + C14944) * C30439) +
             (C15299 + C15298) * C31337) *
                C31548 * C19339 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C30420 -
             ((C14948 + C14949) * C31624 + (C14950 + C14951) * C30439) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C31548 * C19340) *
               C31467) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C31463 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31470 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C21390 + C21391) * C1030 + (C21392 + C21393) * C31327) * C31548 *
                C19340) *
               C3628) *
              C31423 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31470 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C31463 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C3628) *
              C31430 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C31463 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31470 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C31548 * C19340) *
               C3628) *
              C2726)) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C3120 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31467) *
              C31711 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31467 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C3120) *
              C31707 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C3120 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31467) *
              C31697 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C31548 *
                C19339 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C31548 * C19340) *
               C31467 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
                C19340 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
                C19339) *
               C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C959 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31701 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C960 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31688 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C961 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C31548 * C19339 +
            ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
             (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
             (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
                C31548 * C19340) *
               C3120 +
           (((C19687 + C19686) * C960 -
             ((C19685 + C19684) * C31701 + (C19683 + C19682) * C959) +
             (C19689 + C19688) * C31688 - (C19691 + C19690) * C961 -
             (C19693 + C19692) * C31661) *
                C31548 * C19339 +
            ((C19694 + C19695) * C960 -
             ((C19696 + C19697) * C31701 + (C19698 + C19699) * C959) +
             (C19700 + C19701) * C31688 - (C19702 + C19703) * C961 -
             (C19704 + C19705) * C31661) *
                C31548 * C19340) *
               C31467) *
              C2353 +
          ((((C13851 + C13850) * C960 -
             ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
             (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
             (C13857 + C13856) * C31661) *
                C31548 * C19339 +
            ((C14506 + C14507) * C960 -
             ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
             (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
             (C14516 + C14517) * C31661) *
                C31548 * C19340) *
               C3120 +
           (((C14511 + C14510) * C959 + (C14509 + C14508) * C31701 -
             (C14507 + C14506) * C960 - (C14513 + C14512) * C31688 +
             (C14515 + C14514) * C961 + (C14517 + C14516) * C31661) *
                C31548 * C19339 +
            ((C14940 + C14941) * C959 + (C14942 + C14943) * C31701 -
             (C16018 + C16019) * C960 - (C16020 + C16021) * C31688 +
             (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
              C13646 * C2032) *
                 C961 +
             (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
              C13646 * C2034) *
                 C31661) *
                C31548 * C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C31712 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31709 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C21390 + C21391) * C1030 + (C21392 + C21393) * C31327) * C31548 *
                C19340) *
               C31700 -
           (((C21394 + C21395) * C31327 + (C21396 + C21397) * C1030) * C31548 *
                C19340 +
            ((C21393 + C21392) * C31327 + (C21391 + C21390) * C1030) * C31548 *
                C19339) *
               C31683) *
              C2353 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31709 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C31712 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C31700 +
           (((C16293 + C16292) * C1030 + (C16291 + C16290) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6384 + C13645 * C6388 + C13650 * C10993 +
              C13646 * C10994) *
                 C1030 +
             (C13649 * C6389 + C13645 * C6393 + C13650 * C10995 +
              C13646 * C10996) *
                 C31327) *
                C31548 * C19340) *
               C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
             (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C31463 +
           (((C19687 + C19686) * C30420 -
             ((C19685 + C19684) * C31624 + (C19683 + C19682) * C30439) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30420 -
             ((C19696 + C19697) * C31624 + (C19698 + C19699) * C30439) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31470 +
           (((C19699 + C19698) * C30439 + (C19697 + C19696) * C31624 -
             (C19695 + C19694) * C30420 - (C19701 + C19700) * C31337) *
                C31548 * C19339 +
            ((C21390 + C21391) * C30439 + (C21392 + C21393) * C31624 -
             (C21730 + C21731) * C30420 - (C21732 + C21733) * C31337) *
                C31548 * C19340) *
               C3628) *
              C2353 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C31463 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31470 +
           (((C16019 + C16018) * C30420 -
             ((C14943 + C14942) * C31624 + (C14941 + C14940) * C30439) +
             (C16021 + C16020) * C31337) *
                C31548 * C19339 +
            ((C13649 * C2240 + C13645 * C2243 + C13650 * C2241 +
              C13646 * C2244) *
                 C30420 -
             ((C16290 + C16291) * C31624 + (C16292 + C16293) * C30439) +
             (C13649 * C2246 + C13645 * C2249 + C13650 * C2247 +
              C13646 * C2250) *
                 C31337) *
                C31548 * C19340) *
               C3628) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C959 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31701 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C960 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31688 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C961 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C31548 * C19339 +
            ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
             (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
             (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
                C31548 * C19340) *
               C3120 +
           (((C19687 + C19686) * C960 -
             ((C19685 + C19684) * C31701 + (C19683 + C19682) * C959) +
             (C19689 + C19688) * C31688 - (C19691 + C19690) * C961 -
             (C19693 + C19692) * C31661) *
                C31548 * C19339 +
            ((C19694 + C19695) * C960 -
             ((C19696 + C19697) * C31701 + (C19698 + C19699) * C959) +
             (C19700 + C19701) * C31688 - (C19702 + C19703) * C961 -
             (C19704 + C19705) * C31661) *
                C31548 * C19340) *
               C31467) *
              C2353 +
          ((((C13851 + C13850) * C960 -
             ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
             (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
             (C13857 + C13856) * C31661) *
                C31548 * C19339 +
            ((C14506 + C14507) * C960 -
             ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
             (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
             (C14516 + C14517) * C31661) *
                C31548 * C19340) *
               C3120 +
           (((C14511 + C14510) * C959 + (C14509 + C14508) * C31701 -
             (C14507 + C14506) * C960 - (C14513 + C14512) * C31688 +
             (C14515 + C14514) * C961 + (C14517 + C14516) * C31661) *
                C31548 * C19339 +
            ((C14940 + C14941) * C959 + (C14942 + C14943) * C31701 -
             (C16018 + C16019) * C960 - (C16020 + C16021) * C31688 +
             (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
              C13646 * C2032) *
                 C961 +
             (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
              C13646 * C2034) *
                 C31661) *
                C31548 * C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C3120 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31467) *
              C31711 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31467 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C3120) *
              C31707 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C3120 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31467) *
              C31697 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C31548 *
                C19339 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C31548 * C19340) *
               C31467 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
                C19340 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
                C19339) *
               C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30439 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31624 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30420 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C31548 * C19339 +
           ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
            (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
               C31548 * C19340) *
              C31380 * C1301 +
          (((C13851 + C13850) * C30420 -
            ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
            (C13853 + C13852) * C31337) *
               C31548 * C19339 +
           ((C14506 + C14507) * C30420 -
            ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
            (C14512 + C14513) * C31337) *
               C31548 * C19340) *
              C31380 * C1302 +
          (((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
            (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
               C31548 * C19339 +
           ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
            (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
               C31548 * C19340) *
              C31380 * C1303 +
          (((C15091 + C15090) * C30420 -
            ((C14765 + C14764) * C31624 + (C14763 + C14762) * C30439) +
            (C15093 + C15092) * C31337) *
               C31548 * C19339 +
           ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
             C13646 * C1564) *
                C30420 -
            ((C15438 + C15439) * C31624 + (C15440 + C15441) * C30439) +
            (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
             C13646 * C1570) *
                C31337) *
               C31548 * C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C565 + (C19684 + C19685) * C559 -
            (C19686 + C19687) * C566 - (C19688 + C19689) * C560 +
            (C19690 + C19691) * C567 + (C19692 + C19693) * C561 -
            (C13650 * C425 + C13646 * C439 + C13649 * C423 + C13645 * C433) *
                C568 -
            (C13650 * C440 + C13646 * C455 + C13649 * C438 + C13645 * C454) *
                C31671) *
               C31548 * C19340) *
              C31380 * C31638 +
          (((C13851 + C13850) * C566 -
            ((C13849 + C13848) * C559 + (C13847 + C13846) * C565) +
            (C13853 + C13852) * C560 - (C13855 + C13854) * C567 -
            (C13857 + C13856) * C561 + (C14155 + C14154) * C568 +
            (C14157 + C14156) * C31671) *
               C31548 * C19339 +
           ((C14506 + C14507) * C566 -
            ((C14508 + C14509) * C559 + (C14510 + C14511) * C565) +
            (C14512 + C14513) * C560 - (C14514 + C14515) * C567 -
            (C14516 + C14517) * C561 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C568 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C31548 * C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
             (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C1681 +
           (((C19687 + C19686) * C30420 -
             ((C19685 + C19684) * C31624 + (C19683 + C19682) * C30439) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30420 -
             ((C19696 + C19697) * C31624 + (C19698 + C19699) * C30439) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C1682 +
           (((C19699 + C19698) * C30439 + (C19697 + C19696) * C31624 -
             (C19695 + C19694) * C30420 - (C19701 + C19700) * C31337) *
                C31548 * C19339 +
            ((C21390 + C21391) * C30439 + (C21392 + C21393) * C31624 -
             (C13650 * C1861 + C13646 * C1870 + C13649 * C1862 +
              C13645 * C1871) *
                 C30420 -
             (C13650 * C1867 + C13646 * C1879 + C13649 * C1868 +
              C13645 * C1880) *
                 C31337) *
                C31548 * C19340) *
               C31670) *
              C31638 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C1681 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C1682 +
           (((C16019 + C16018) * C30420 -
             ((C14943 + C14942) * C31624 + (C14941 + C14940) * C30439) +
             (C16021 + C16020) * C31337) *
                C31548 * C19339 +
            ((C13649 * C2240 + C13645 * C2243 + C13650 * C2241 +
              C13646 * C2244) *
                 C30420 -
             ((C16290 + C16291) * C31624 + (C16292 + C16293) * C30439) +
             (C13649 * C2246 + C13645 * C2249 + C13650 * C2247 +
              C13646 * C2250) *
                 C31337) *
                C31548 * C19340) *
               C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C31639 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31467) *
              C1301 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31467 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C31639) *
              C1302 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C31639 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31467) *
              C1303 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C31548 *
                C19339 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C31548 * C19340) *
               C31467 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
                C19340 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
                C19339) *
               C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C265 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C259 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C266 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C260 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C267 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C31548 * C19339 +
            ((C19682 + C19683) * C265 + (C19684 + C19685) * C259 -
             (C19686 + C19687) * C266 - (C19688 + C19689) * C260 +
             (C19690 + C19691) * C267 + (C19692 + C19693) * C31661) *
                C31548 * C19340) *
               C31639 +
           (((C19687 + C19686) * C266 -
             ((C19685 + C19684) * C259 + (C19683 + C19682) * C265) +
             (C19689 + C19688) * C260 - (C19691 + C19690) * C267 -
             (C19693 + C19692) * C31661) *
                C31548 * C19339 +
            ((C19694 + C19695) * C266 -
             ((C19696 + C19697) * C259 + (C19698 + C19699) * C265) +
             (C19700 + C19701) * C260 - (C19702 + C19703) * C267 -
             (C19704 + C19705) * C31661) *
                C31548 * C19340) *
               C31467) *
              C31638 +
          ((((C13851 + C13850) * C266 -
             ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
             (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
             (C13857 + C13856) * C31661) *
                C31548 * C19339 +
            ((C14506 + C14507) * C266 -
             ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
             (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
             (C14516 + C14517) * C31661) *
                C31548 * C19340) *
               C31639 +
           (((C14511 + C14510) * C265 + (C14509 + C14508) * C259 -
             (C14507 + C14506) * C266 - (C14513 + C14512) * C260 +
             (C14515 + C14514) * C267 + (C14517 + C14516) * C31661) *
                C31548 * C19339 +
            ((C14940 + C14941) * C265 + (C14942 + C14943) * C259 -
             (C16018 + C16019) * C266 - (C16020 + C16021) * C260 +
             (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
              C13646 * C2032) *
                 C267 +
             (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
              C13646 * C2034) *
                 C31661) *
                C31548 * C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C2133 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C2134 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C21390 + C21391) * C1030 + (C21392 + C21393) * C31327) * C31548 *
                C19340) *
               C2135 -
           (((C21394 + C21395) * C31327 + (C21396 + C21397) * C1030) * C31548 *
                C19340 +
            ((C21393 + C21392) * C31327 + (C21391 + C21390) * C1030) * C31548 *
                C19339) *
               C31683) *
              C31638 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C2134 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C2133 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C2135 +
           (((C16293 + C16292) * C1030 + (C16291 + C16290) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6384 + C13645 * C6388 + C13650 * C10993 +
              C13646 * C10994) *
                 C1030 +
             (C13649 * C6389 + C13645 * C6393 + C13650 * C10995 +
              C13646 * C10996) *
                 C31327) *
                C31548 * C19340) *
               C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                   C116 +
               (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                   C104 -
               (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                   C117 -
               (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                   C105 +
               (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                   C118 +
               (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                   C106 -
               (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                   C119 -
               (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                   C107 +
               (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
                   C120 +
               (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
                   C108) *
                  C31548 * C19339 +
              ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
                   C116 +
               (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
                   C104 -
               (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
                   C117 -
               (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
                   C105 +
               (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
                   C118 +
               (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
                   C106 -
               (C13650 * C425 + C13646 * C439 + C13649 * C423 + C13645 * C433) *
                   C119 -
               (C13650 * C440 + C13646 * C455 + C13649 * C438 + C13645 * C454) *
                   C107 +
               (C13649 * C425 + C13645 * C439 + C13650 * C673 + C13646 * C674) *
                   C120 +
               (C13649 * C440 + C13645 * C455 + C13650 * C675 + C13646 * C676) *
                   C108) *
                  C31548 * C19340) *
             C31380 * C31368 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13649 * C121 + C13645 * C128 + C13650 * C122 +
                 C13646 * C129) *
                    C265 +
                (C13649 * C131 + C13645 * C142 + C13650 * C132 +
                 C13646 * C143) *
                    C259 -
                (C13650 * C123 + C13646 * C130 + C13649 * C122 +
                 C13645 * C129) *
                    C266 -
                (C13650 * C133 + C13646 * C144 + C13649 * C132 +
                 C13645 * C143) *
                    C260 +
                (C13649 * C123 + C13645 * C130 + C13650 * C124 +
                 C13646 * C134) *
                    C267 +
                (C13649 * C133 + C13645 * C144 + C13650 * C135 +
                 C13646 * C145) *
                    C31661) *
                   C31548 * C19339 +
               ((C13649 * C424 + C13645 * C437 + C13650 * C421 +
                 C13646 * C431) *
                    C265 +
                (C13649 * C436 + C13645 * C453 + C13650 * C435 +
                 C13646 * C452) *
                    C259 -
                (C13650 * C422 + C13646 * C432 + C13649 * C421 +
                 C13645 * C431) *
                    C266 -
                (C13650 * C434 + C13646 * C451 + C13649 * C435 +
                 C13645 * C452) *
                    C260 +
                (C13649 * C422 + C13645 * C432 + C13650 * C423 +
                 C13646 * C433) *
                    C267 +
                (C13649 * C434 + C13645 * C451 + C13650 * C438 +
                 C13646 * C454) *
                    C31661) *
                   C31548 * C19340) *
                  C31380 * C31704 +
              (((C13851 + C13850) * C266 -
                ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
                (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
                (C13857 + C13856) * C31661) *
                   C31548 * C19339 +
               ((C14506 + C14507) * C266 -
                ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
                (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
                (C14516 + C14517) * C31661) *
                   C31548 * C19340) *
                  C31380 * C31692 +
              (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
                (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
                (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
                   C31548 * C19339 +
               ((C14944 + C14945) * C265 + (C14946 + C14947) * C259 -
                (C15296 + C15297) * C266 - (C15298 + C15299) * C260 +
                (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
                 C13646 * C1458) *
                    C267 +
                (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
                 C13646 * C1460) *
                    C31661) *
                   C31548 * C19340) *
                  C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C265 + (C19684 + C19685) * C259 -
            (C19686 + C19687) * C266 - (C19688 + C19689) * C260 +
            (C19690 + C19691) * C267 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C31705 +
          (((C19687 + C19686) * C266 -
            ((C19685 + C19684) * C259 + (C19683 + C19682) * C265) +
            (C19689 + C19688) * C260 - (C19691 + C19690) * C267 -
            (C19693 + C19692) * C31661) *
               C31548 * C19339 +
           ((C19694 + C19695) * C266 -
            ((C19696 + C19697) * C259 + (C19698 + C19699) * C265) +
            (C19700 + C19701) * C260 - (C19702 + C19703) * C267 -
            (C19704 + C19705) * C31661) *
               C31548 * C19340) *
              C31694 +
          (((C19699 + C19698) * C265 + (C19697 + C19696) * C259 -
            (C19695 + C19694) * C266 - (C19701 + C19700) * C260 +
            (C19703 + C19702) * C267 + (C19705 + C19704) * C31661) *
               C31548 * C19339 +
           ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
             C13646 * C1871) *
                C265 +
            (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
             C13646 * C1880) *
                C259 -
            (C13650 * C1861 + C13646 * C1870 + C13649 * C1862 +
             C13645 * C1871) *
                C266 -
            (C13650 * C1867 + C13646 * C1879 + C13649 * C1868 +
             C13645 * C1880) *
                C260 +
            (C13649 * C1861 + C13645 * C1870 + C13650 * C2137 +
             C13646 * C2138) *
                C267 +
            (C13649 * C1867 + C13645 * C1879 + C13650 * C2139 +
             C13646 * C2140) *
                C31661) *
               C31548 * C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
            (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
            (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C960 -
            ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
            (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C959 + (C14946 + C14947) * C31701 -
            (C15296 + C15297) * C960 - (C15298 + C15299) * C31688 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C961 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C31548 * C19339 +
           ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
               C19340) *
              C31380 * C1025 -
          (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
               C19340 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
               C19339) *
              C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
               C19339 +
           ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
               C19340) *
              C31380 * C1027 -
          (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
               C19340 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
               C19339) *
              C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C31548 *
               C19339 +
           ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
             C13646 * C5966) *
                C1030 +
            (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
             C13646 * C5968) *
                C31327) *
               C31548 * C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C31705 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31694 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
              C13646 * C1871) *
                 C1030 +
             (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
              C13646 * C1880) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C956 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31694 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C31705 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C31670) *
              C957 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C31705 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31694 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
            (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
            (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C1681 +
          (((C19687 + C19686) * C960 -
            ((C19685 + C19684) * C31701 + (C19683 + C19682) * C959) +
            (C19689 + C19688) * C31688 - (C19691 + C19690) * C961 -
            (C19693 + C19692) * C31661) *
               C31548 * C19339 +
           ((C19694 + C19695) * C960 -
            ((C19696 + C19697) * C31701 + (C19698 + C19699) * C959) +
            (C19700 + C19701) * C31688 - (C19702 + C19703) * C961 -
            (C19704 + C19705) * C31661) *
               C31548 * C19340) *
              C1682 +
          (((C19699 + C19698) * C959 + (C19697 + C19696) * C31701 -
            (C19695 + C19694) * C960 - (C19701 + C19700) * C31688 +
            (C19703 + C19702) * C961 + (C19705 + C19704) * C31661) *
               C31548 * C19339 +
           ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
             C13646 * C1871) *
                C959 +
            (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
             C13646 * C1880) *
                C31701 -
            (C13650 * C1861 + C13646 * C1870 + C13649 * C1862 +
             C13645 * C1871) *
                C960 -
            (C13650 * C1867 + C13646 * C1879 + C13649 * C1868 +
             C13645 * C1880) *
                C31688 +
            (C13649 * C1861 + C13645 * C1870 + C13650 * C2137 +
             C13646 * C2138) *
                C961 +
            (C13649 * C1867 + C13645 * C1879 + C13650 * C2139 +
             C13646 * C2140) *
                C31661) *
               C31548 * C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C1681 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C1682 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
              C13646 * C1871) *
                 C1030 +
             (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
              C13646 * C1880) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C31704 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C1682 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C1681 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C31670) *
              C31692 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C1681 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C1682 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C31548 * C19339 +
           ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
               C19340) *
              C1856 -
          (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
               C19340 +
           ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
               C19339) *
              C1857 +
          (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
               C19339 +
           ((C21390 + C21391) * C1030 + (C21392 + C21393) * C31327) * C31548 *
               C19340) *
              C1858 -
          (((C21394 + C21395) * C31327 + (C21396 + C21397) * C1030) * C31548 *
               C19340 +
           ((C21393 + C21392) * C31327 + (C21391 + C21390) * C1030) * C31548 *
               C19339) *
              C1859 +
          (((C21397 + C21396) * C1030 + (C21395 + C21394) * C31327) * C31548 *
               C19339 +
           ((C13649 * C10819 + C13645 * C10822 + C13650 * C11117 +
             C13646 * C11118) *
                C1030 +
            (C13649 * C10821 + C13645 * C10825 + C13650 * C11119 +
             C13646 * C11120) *
                C31327) *
               C31548 * C19340) *
              C1860) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
             (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C19687 + C19686) * C30420 -
             ((C19685 + C19684) * C31624 + (C19683 + C19682) * C30439) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30420 -
             ((C19696 + C19697) * C31624 + (C19698 + C19699) * C30439) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31467) *
              C956 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31467) *
              C957 +
          ((((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
             (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
                C31548 * C19339 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C15297 + C15296) * C30420 -
             ((C14947 + C14946) * C31624 + (C14945 + C14944) * C30439) +
             (C15299 + C15298) * C31337) *
                C31548 * C19339 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C30420 -
             ((C14948 + C14949) * C31624 + (C14950 + C14951) * C30439) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C31548 * C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C565 + (C19684 + C19685) * C559 -
            (C19686 + C19687) * C566 - (C19688 + C19689) * C560 +
            (C19690 + C19691) * C567 + (C19692 + C19693) * C561 -
            (C19974 + C19975) * C568 - (C19976 + C19977) * C31671) *
               C31548 * C19340) *
              C31639 +
          (((C19687 + C19686) * C566 -
            ((C19685 + C19684) * C559 + (C19683 + C19682) * C565) +
            (C19689 + C19688) * C560 - (C19691 + C19690) * C567 -
            (C19693 + C19692) * C561 + (C19975 + C19974) * C568 +
            (C19977 + C19976) * C31671) *
               C31548 * C19339 +
           ((C19694 + C19695) * C566 -
            ((C19696 + C19697) * C559 + (C19698 + C19699) * C565) +
            (C19700 + C19701) * C560 - (C19702 + C19703) * C567 -
            (C19704 + C19705) * C561 +
            (C13649 * C429 + C13645 * C447 + C13650 * C430 + C13646 * C449) *
                C568 +
            (C13649 * C448 + C13645 * C459 + C13650 * C450 + C13646 * C460) *
                C31671) *
               C31548 * C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30439 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31624 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30420 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C31548 * C19339 +
           ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
            (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
               C31548 * C19340) *
              C2133 +
          (((C19687 + C19686) * C30420 -
            ((C19685 + C19684) * C31624 + (C19683 + C19682) * C30439) +
            (C19689 + C19688) * C31337) *
               C31548 * C19339 +
           ((C19694 + C19695) * C30420 -
            ((C19696 + C19697) * C31624 + (C19698 + C19699) * C30439) +
            (C19700 + C19701) * C31337) *
               C31548 * C19340) *
              C2134 +
          (((C19699 + C19698) * C30439 + (C19697 + C19696) * C31624 -
            (C19695 + C19694) * C30420 - (C19701 + C19700) * C31337) *
               C31548 * C19339 +
           ((C21390 + C21391) * C30439 + (C21392 + C21393) * C31624 -
            (C21730 + C21731) * C30420 - (C21732 + C21733) * C31337) *
               C31548 * C19340) *
              C2135 +
          (((C21731 + C21730) * C30420 -
            ((C21393 + C21392) * C31624 + (C21391 + C21390) * C30439) +
            (C21733 + C21732) * C31337) *
               C31548 * C19339 +
           ((C13649 * C1865 + C13645 * C1874 + C13650 * C1866 +
             C13646 * C1875) *
                C30420 -
            ((C21394 + C21395) * C31624 + (C21396 + C21397) * C30439) +
            (C13649 * C1877 + C13645 * C1883 + C13650 * C1878 +
             C13646 * C1884) *
                C31337) *
               C31548 * C19340) *
              C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
                C265 +
            (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
                C259 -
            (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
                C266 -
            (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
                C260 +
            (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
                C267 +
            (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31704 +
          (((C13851 + C13850) * C266 -
            ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
            (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C266 -
            ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
            (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C31692 +
          (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
            (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
            (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C265 + (C14946 + C14947) * C259 -
            (C15296 + C15297) * C266 - (C15298 + C15299) * C260 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C267 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
               C116 +
           (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
               C104 -
           (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
               C117 -
           (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
               C105 +
           (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
               C118 +
           (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
               C106 -
           (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
               C119 -
           (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
               C107 +
           (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
               C120 +
           (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
               C108) *
              C31548 * C19339 +
          ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
               C116 +
           (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
               C104 -
           (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
               C117 -
           (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
               C105 +
           (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
               C118 +
           (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
               C106 -
           (C13650 * C425 + C13646 * C439 + C13649 * C423 + C13645 * C433) *
               C119 -
           (C13650 * C440 + C13646 * C455 + C13649 * C438 + C13645 * C454) *
               C107 +
           (C13649 * C425 + C13645 * C439 + C13650 * C673 + C13646 * C674) *
               C120 +
           (C13649 * C440 + C13645 * C455 + C13650 * C675 + C13646 * C676) *
               C108) *
              C31548 * C19340) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
            (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
            (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C960 -
            ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
            (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C959 + (C14946 + C14947) * C31701 -
            (C15296 + C15297) * C960 - (C15298 + C15299) * C31688 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C961 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C31548 * C19339 +
           ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
               C19340) *
              C31380 * C1025 -
          (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
               C19340 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
               C19339) *
              C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
               C19339 +
           ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
               C19340) *
              C31380 * C1027 -
          (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
               C19340 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
               C19339) *
              C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C31548 *
               C19339 +
           ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
             C13646 * C5966) *
                C1030 +
            (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
             C13646 * C5968) *
                C31327) *
               C31548 * C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
            (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
            (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C1681 +
          (((C19687 + C19686) * C960 -
            ((C19685 + C19684) * C31701 + (C19683 + C19682) * C959) +
            (C19689 + C19688) * C31688 - (C19691 + C19690) * C961 -
            (C19693 + C19692) * C31661) *
               C31548 * C19339 +
           ((C19694 + C19695) * C960 -
            ((C19696 + C19697) * C31701 + (C19698 + C19699) * C959) +
            (C19700 + C19701) * C31688 - (C19702 + C19703) * C961 -
            (C19704 + C19705) * C31661) *
               C31548 * C19340) *
              C1682 +
          (((C19699 + C19698) * C959 + (C19697 + C19696) * C31701 -
            (C19695 + C19694) * C960 - (C19701 + C19700) * C31688 +
            (C19703 + C19702) * C961 + (C19705 + C19704) * C31661) *
               C31548 * C19339 +
           ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
             C13646 * C1871) *
                C959 +
            (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
             C13646 * C1880) *
                C31701 -
            (C13650 * C1861 + C13646 * C1870 + C13649 * C1862 +
             C13645 * C1871) *
                C960 -
            (C13650 * C1867 + C13646 * C1879 + C13649 * C1868 +
             C13645 * C1880) *
                C31688 +
            (C13649 * C1861 + C13645 * C1870 + C13650 * C2137 +
             C13646 * C2138) *
                C961 +
            (C13649 * C1867 + C13645 * C1879 + C13650 * C2139 +
             C13646 * C2140) *
                C31661) *
               C31548 * C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C1681 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C1682 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
              C13646 * C1871) *
                 C1030 +
             (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
              C13646 * C1880) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C31704 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C1682 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C1681 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C31670) *
              C31692 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C1681 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C1682 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30449 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31332 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30445 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31340 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C30455 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C2723) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30449 + (C19684 + C19685) * C31332 -
             (C19686 + C19687) * C30445 - (C19688 + C19689) * C31340 +
             (C19690 + C19691) * C30455 + (C19692 + C19693) * C2723) *
                C31548 * C19340) *
               C3120 +
           (((C19687 + C19686) * C30445 -
             ((C19685 + C19684) * C31332 + (C19683 + C19682) * C30449) +
             (C19689 + C19688) * C31340 - (C19691 + C19690) * C30455 -
             (C19693 + C19692) * C2723) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30445 -
             ((C19696 + C19697) * C31332 + (C19698 + C19699) * C30449) +
             (C19700 + C19701) * C31340 - (C19702 + C19703) * C30455 -
             (C19704 + C19705) * C2723) *
                C31548 * C19340) *
               C31467) *
              C31638 +
          ((((C13851 + C13850) * C30445 -
             ((C13849 + C13848) * C31332 + (C13847 + C13846) * C30449) +
             (C13853 + C13852) * C31340 - (C13855 + C13854) * C30455 -
             (C13857 + C13856) * C2723) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30445 -
             ((C14508 + C14509) * C31332 + (C14510 + C14511) * C30449) +
             (C14512 + C14513) * C31340 - (C14514 + C14515) * C30455 -
             (C14516 + C14517) * C2723) *
                C31548 * C19340) *
               C3120 +
           (((C14511 + C14510) * C30449 + (C14509 + C14508) * C31332 -
             (C14507 + C14506) * C30445 - (C14513 + C14512) * C31340 +
             (C14515 + C14514) * C30455 + (C14517 + C14516) * C2723) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30449 + (C14942 + C14943) * C31332 -
             (C16018 + C16019) * C30445 - (C16020 + C16021) * C31340 +
             (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
              C13646 * C2032) *
                 C30455 +
             (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
              C13646 * C2034) *
                 C2723) *
                C31548 * C19340) *
               C31467) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
             (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C31463 +
           (((C19687 + C19686) * C2464 -
             ((C19685 + C19684) * C2457 + (C19683 + C19682) * C2463) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C2464 -
             ((C19696 + C19697) * C2457 + (C19698 + C19699) * C2463) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31470 +
           (((C19699 + C19698) * C2463 + (C19697 + C19696) * C2457 -
             (C19695 + C19694) * C2464 - (C19701 + C19700) * C31337) *
                C31548 * C19339 +
            ((C21390 + C21391) * C2463 + (C21392 + C21393) * C2457 -
             (C21730 + C21731) * C2464 - (C21732 + C21733) * C31337) *
                C31548 * C19340) *
               C3628) *
              C31638 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C31463 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31470 +
           (((C16019 + C16018) * C2464 -
             ((C14943 + C14942) * C2457 + (C14941 + C14940) * C2463) +
             (C16021 + C16020) * C31337) *
                C31548 * C19339 +
            ((C13649 * C2240 + C13645 * C2243 + C13650 * C2241 +
              C13646 * C2244) *
                 C2464 -
             ((C16290 + C16291) * C2457 + (C16292 + C16293) * C2463) +
             (C13649 * C2246 + C13645 * C2249 + C13650 * C2247 +
              C13646 * C2250) *
                 C31337) *
                C31548 * C19340) *
               C3628) *
              C31427)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
             (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C19687 + C19686) * C2464 -
             ((C19685 + C19684) * C2457 + (C19683 + C19682) * C2463) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C2464 -
             ((C19696 + C19697) * C2457 + (C19698 + C19699) * C2463) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31704 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31692 +
          ((((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
             (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
                C31548 * C19339 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C15297 + C15296) * C2464 -
             ((C14947 + C14946) * C2457 + (C14945 + C14944) * C2463) +
             (C15299 + C15298) * C31337) *
                C31548 * C19339 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C2464 -
             ((C14948 + C14949) * C2457 + (C14950 + C14951) * C2463) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C31548 * C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2355 + (C19684 + C19685) * C31710 -
            (C19686 + C19687) * C2356 - (C19688 + C19689) * C31703 +
            (C19690 + C19691) * C2357 + (C19692 + C19693) * C31690 -
            (C19974 + C19975) * C2358 - (C19976 + C19977) * C31671) *
               C31548 * C19340) *
              C3120 +
          (((C19687 + C19686) * C2356 -
            ((C19685 + C19684) * C31710 + (C19683 + C19682) * C2355) +
            (C19689 + C19688) * C31703 - (C19691 + C19690) * C2357 -
            (C19693 + C19692) * C31690 + (C19975 + C19974) * C2358 +
            (C19977 + C19976) * C31671) *
               C31548 * C19339 +
           ((C19694 + C19695) * C2356 -
            ((C19696 + C19697) * C31710 + (C19698 + C19699) * C2355) +
            (C19700 + C19701) * C31703 - (C19702 + C19703) * C2357 -
            (C19704 + C19705) * C31690 +
            (C13649 * C429 + C13645 * C447 + C13650 * C430 + C13646 * C449) *
                C2358 +
            (C13649 * C448 + C13645 * C459 + C13650 * C450 + C13646 * C460) *
                C31671) *
               C31548 * C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2463 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C2457 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2464 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
            (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
               C31548 * C19340) *
              C31712 +
          (((C19687 + C19686) * C2464 -
            ((C19685 + C19684) * C2457 + (C19683 + C19682) * C2463) +
            (C19689 + C19688) * C31337) *
               C31548 * C19339 +
           ((C19694 + C19695) * C2464 -
            ((C19696 + C19697) * C2457 + (C19698 + C19699) * C2463) +
            (C19700 + C19701) * C31337) *
               C31548 * C19340) *
              C31709 +
          (((C19699 + C19698) * C2463 + (C19697 + C19696) * C2457 -
            (C19695 + C19694) * C2464 - (C19701 + C19700) * C31337) *
               C31548 * C19339 +
           ((C21390 + C21391) * C2463 + (C21392 + C21393) * C2457 -
            (C21730 + C21731) * C2464 - (C21732 + C21733) * C31337) *
               C31548 * C19340) *
              C31700 +
          (((C21731 + C21730) * C2464 -
            ((C21393 + C21392) * C2457 + (C21391 + C21390) * C2463) +
            (C21733 + C21732) * C31337) *
               C31548 * C19339 +
           ((C13649 * C1865 + C13645 * C1874 + C13650 * C1866 +
             C13646 * C1875) *
                C2464 -
            ((C21394 + C21395) * C2457 + (C21396 + C21397) * C2463) +
            (C13649 * C1877 + C13645 * C1883 + C13650 * C1878 +
             C13646 * C1884) *
                C31337) *
               C31548 * C19340) *
              C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30449 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31332 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30445 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31340 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C30455 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C2723) *
               C31548 * C19339 +
           ((C19682 + C19683) * C30449 + (C19684 + C19685) * C31332 -
            (C19686 + C19687) * C30445 - (C19688 + C19689) * C31340 +
            (C19690 + C19691) * C30455 + (C19692 + C19693) * C2723) *
               C31548 * C19340) *
              C31463 +
          (((C19687 + C19686) * C30445 -
            ((C19685 + C19684) * C31332 + (C19683 + C19682) * C30449) +
            (C19689 + C19688) * C31340 - (C19691 + C19690) * C30455 -
            (C19693 + C19692) * C2723) *
               C31548 * C19339 +
           ((C19694 + C19695) * C30445 -
            ((C19696 + C19697) * C31332 + (C19698 + C19699) * C30449) +
            (C19700 + C19701) * C31340 - (C19702 + C19703) * C30455 -
            (C19704 + C19705) * C2723) *
               C31548 * C19340) *
              C31470 +
          (((C19699 + C19698) * C30449 + (C19697 + C19696) * C31332 -
            (C19695 + C19694) * C30445 - (C19701 + C19700) * C31340 +
            (C19703 + C19702) * C30455 + (C19705 + C19704) * C2723) *
               C31548 * C19339 +
           ((C21390 + C21391) * C30449 + (C21392 + C21393) * C31332 -
            (C21730 + C21731) * C30445 - (C21732 + C21733) * C31340 +
            (C13649 * C1861 + C13645 * C1870 + C13650 * C2137 +
             C13646 * C2138) *
                C30455 +
            (C13649 * C1867 + C13645 * C1879 + C13650 * C2139 +
             C13646 * C2140) *
                C2723) *
               C31548 * C19340) *
              C3628) *
         C31368) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C2355 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31710 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C2356 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31703 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C2357 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31690 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C2358 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C2355 + (C19684 + C19685) * C31710 -
            (C19686 + C19687) * C2356 - (C19688 + C19689) * C31703 +
            (C19690 + C19691) * C2357 + (C19692 + C19693) * C31690 -
            (C19974 + C19975) * C2358 - (C19976 + C19977) * C31671) *
               C31548 * C19340) *
              C3120 +
          (((C19687 + C19686) * C2356 -
            ((C19685 + C19684) * C31710 + (C19683 + C19682) * C2355) +
            (C19689 + C19688) * C31703 - (C19691 + C19690) * C2357 -
            (C19693 + C19692) * C31690 + (C19975 + C19974) * C2358 +
            (C19977 + C19976) * C31671) *
               C31548 * C19339 +
           ((C19694 + C19695) * C2356 -
            ((C19696 + C19697) * C31710 + (C19698 + C19699) * C2355) +
            (C19700 + C19701) * C31703 - (C19702 + C19703) * C2357 -
            (C19704 + C19705) * C31690 +
            (C13649 * C429 + C13645 * C447 + C13650 * C430 + C13646 * C449) *
                C2358 +
            (C13649 * C448 + C13645 * C459 + C13650 * C450 + C13646 * C460) *
                C31671) *
               C31548 * C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C2463 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C2457 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C2464 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C2463 + (C19684 + C19685) * C2457 -
             (C19686 + C19687) * C2464 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C19687 + C19686) * C2464 -
             ((C19685 + C19684) * C2457 + (C19683 + C19682) * C2463) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C2464 -
             ((C19696 + C19697) * C2457 + (C19698 + C19699) * C2463) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31704 +
          ((((C13851 + C13850) * C2464 -
             ((C13849 + C13848) * C2457 + (C13847 + C13846) * C2463) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C2464 -
             ((C14508 + C14509) * C2457 + (C14510 + C14511) * C2463) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C14511 + C14510) * C2463 + (C14509 + C14508) * C2457 -
             (C14507 + C14506) * C2464 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C2463 + (C14942 + C14943) * C2457 -
             (C16018 + C16019) * C2464 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31467) *
              C31692 +
          ((((C13863 + C13862) * C2463 + (C13861 + C13860) * C2457 -
             (C13859 + C13858) * C2464 - (C13865 + C13864) * C31337) *
                C31548 * C19339 +
            ((C14944 + C14945) * C2463 + (C14946 + C14947) * C2457 -
             (C15296 + C15297) * C2464 - (C15298 + C15299) * C31337) *
                C31548 * C19340) *
               C3120 +
           (((C15297 + C15296) * C2464 -
             ((C14947 + C14946) * C2457 + (C14945 + C14944) * C2463) +
             (C15299 + C15298) * C31337) *
                C31548 * C19339 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C2464 -
             ((C14948 + C14949) * C2457 + (C14950 + C14951) * C2463) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C31548 * C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C565 + (C19684 + C19685) * C559 -
            (C19686 + C19687) * C566 - (C19688 + C19689) * C560 +
            (C19690 + C19691) * C567 + (C19692 + C19693) * C561 -
            (C13650 * C425 + C13646 * C439 + C13649 * C423 + C13645 * C433) *
                C568 -
            (C13650 * C440 + C13646 * C455 + C13649 * C438 + C13645 * C454) *
                C31671) *
               C31548 * C19340) *
              C31380 * C31638 +
          (((C13851 + C13850) * C566 -
            ((C13849 + C13848) * C559 + (C13847 + C13846) * C565) +
            (C13853 + C13852) * C560 - (C13855 + C13854) * C567 -
            (C13857 + C13856) * C561 + (C14155 + C14154) * C568 +
            (C14157 + C14156) * C31671) *
               C31548 * C19339 +
           ((C14506 + C14507) * C566 -
            ((C14508 + C14509) * C559 + (C14510 + C14511) * C565) +
            (C14512 + C14513) * C560 - (C14514 + C14515) * C567 -
            (C14516 + C14517) * C561 +
            (C13649 * C826 + C13645 * C834 + C13650 * C827 + C13646 * C836) *
                C568 +
            (C13649 * C835 + C13645 * C841 + C13650 * C837 + C13646 * C842) *
                C31671) *
               C31548 * C19340) *
              C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C30439 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31624 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C30420 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31337) *
               C31548 * C19339 +
           ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
            (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
               C31548 * C19340) *
              C31380 * C1301 +
          (((C13851 + C13850) * C30420 -
            ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
            (C13853 + C13852) * C31337) *
               C31548 * C19339 +
           ((C14506 + C14507) * C30420 -
            ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
            (C14512 + C14513) * C31337) *
               C31548 * C19340) *
              C31380 * C1302 +
          (((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
            (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
               C31548 * C19339 +
           ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
            (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
               C31548 * C19340) *
              C31380 * C1303 +
          (((C15091 + C15090) * C30420 -
            ((C14765 + C14764) * C31624 + (C14763 + C14762) * C30439) +
            (C15093 + C15092) * C31337) *
               C31548 * C19339 +
           ((C13649 * C1560 + C13645 * C1563 + C13650 * C1561 +
             C13646 * C1564) *
                C30420 -
            ((C15438 + C15439) * C31624 + (C15440 + C15441) * C30439) +
            (C13649 * C1566 + C13645 * C1569 + C13650 * C1567 +
             C13646 * C1570) *
                C31337) *
               C31548 * C19340) *
              C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C265 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C259 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C266 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C260 +
             (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                 C267 +
             (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                 C31661) *
                C31548 * C19339 +
            ((C19682 + C19683) * C265 + (C19684 + C19685) * C259 -
             (C19686 + C19687) * C266 - (C19688 + C19689) * C260 +
             (C19690 + C19691) * C267 + (C19692 + C19693) * C31661) *
                C31548 * C19340) *
               C31639 +
           (((C19687 + C19686) * C266 -
             ((C19685 + C19684) * C259 + (C19683 + C19682) * C265) +
             (C19689 + C19688) * C260 - (C19691 + C19690) * C267 -
             (C19693 + C19692) * C31661) *
                C31548 * C19339 +
            ((C19694 + C19695) * C266 -
             ((C19696 + C19697) * C259 + (C19698 + C19699) * C265) +
             (C19700 + C19701) * C260 - (C19702 + C19703) * C267 -
             (C19704 + C19705) * C31661) *
                C31548 * C19340) *
               C31467) *
              C31638 +
          ((((C13851 + C13850) * C266 -
             ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
             (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
             (C13857 + C13856) * C31661) *
                C31548 * C19339 +
            ((C14506 + C14507) * C266 -
             ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
             (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
             (C14516 + C14517) * C31661) *
                C31548 * C19340) *
               C31639 +
           (((C14511 + C14510) * C265 + (C14509 + C14508) * C259 -
             (C14507 + C14506) * C266 - (C14513 + C14512) * C260 +
             (C14515 + C14514) * C267 + (C14517 + C14516) * C31661) *
                C31548 * C19339 +
            ((C14940 + C14941) * C265 + (C14942 + C14943) * C259 -
             (C16018 + C16019) * C266 - (C16020 + C16021) * C260 +
             (C13649 * C1165 + C13645 * C1177 + C13650 * C2031 +
              C13646 * C2032) *
                 C267 +
             (C13649 * C1174 + C13645 * C1192 + C13650 * C2033 +
              C13646 * C2034) *
                 C31661) *
                C31548 * C19340) *
               C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C31639 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31467) *
              C1301 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31467 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C31639) *
              C1302 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C31639 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31467) *
              C1303 +
          ((((C15441 + C15440) * C1030 + (C15439 + C15438) * C31327) * C31548 *
                C19339 +
            ((C13649 * C5639 + C13645 * C5643 + C13650 * C6541 +
              C13646 * C6542) *
                 C1030 +
             (C13649 * C5642 + C13645 * C5648 + C13650 * C6543 +
              C13646 * C6544) *
                 C31327) *
                C31548 * C19340) *
               C31467 -
           (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
                C19340 +
            ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
                C19339) *
               C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
                C265 +
            (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
                C259 -
            (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
                C266 -
            (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
                C260 +
            (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
                C267 +
            (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31704 +
          (((C13851 + C13850) * C266 -
            ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
            (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C266 -
            ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
            (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C31692 +
          (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
            (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
            (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C265 + (C14946 + C14947) * C259 -
            (C15296 + C15297) * C266 - (C15298 + C15299) * C260 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C267 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
               C116 +
           (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
               C104 -
           (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
               C117 -
           (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
               C105 +
           (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
               C118 +
           (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
               C106 -
           (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
               C119 -
           (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
               C107 +
           (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
               C120 +
           (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
               C108) *
              C31548 * C19339 +
          ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
               C116 +
           (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
               C104 -
           (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
               C117 -
           (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
               C105 +
           (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
               C118 +
           (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
               C106 -
           (C13650 * C425 + C13646 * C439 + C13649 * C423 + C13645 * C433) *
               C119 -
           (C13650 * C440 + C13646 * C455 + C13649 * C438 + C13645 * C454) *
               C107 +
           (C13649 * C425 + C13645 * C439 + C13650 * C673 + C13646 * C674) *
               C120 +
           (C13649 * C440 + C13645 * C455 + C13650 * C675 + C13646 * C676) *
               C108) *
              C31548 * C19340) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C265 + (C19684 + C19685) * C259 -
            (C19686 + C19687) * C266 - (C19688 + C19689) * C260 +
            (C19690 + C19691) * C267 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C31705 +
          (((C19687 + C19686) * C266 -
            ((C19685 + C19684) * C259 + (C19683 + C19682) * C265) +
            (C19689 + C19688) * C260 - (C19691 + C19690) * C267 -
            (C19693 + C19692) * C31661) *
               C31548 * C19339 +
           ((C19694 + C19695) * C266 -
            ((C19696 + C19697) * C259 + (C19698 + C19699) * C265) +
            (C19700 + C19701) * C260 - (C19702 + C19703) * C267 -
            (C19704 + C19705) * C31661) *
               C31548 * C19340) *
              C31694 +
          (((C19699 + C19698) * C265 + (C19697 + C19696) * C259 -
            (C19695 + C19694) * C266 - (C19701 + C19700) * C260 +
            (C19703 + C19702) * C267 + (C19705 + C19704) * C31661) *
               C31548 * C19339 +
           ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
             C13646 * C1871) *
                C265 +
            (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
             C13646 * C1880) *
                C259 -
            (C13650 * C1861 + C13646 * C1870 + C13649 * C1862 +
             C13645 * C1871) *
                C266 -
            (C13650 * C1867 + C13646 * C1879 + C13649 * C1868 +
             C13645 * C1880) *
                C260 +
            (C13649 * C1861 + C13645 * C1870 + C13650 * C2137 +
             C13646 * C2138) *
                C267 +
            (C13649 * C1867 + C13645 * C1879 + C13650 * C2139 +
             C13646 * C2140) *
                C31661) *
               C31548 * C19340) *
              C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
            (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
            (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C960 -
            ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
            (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C959 + (C14946 + C14947) * C31701 -
            (C15296 + C15297) * C960 - (C15298 + C15299) * C31688 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C961 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C31548 * C19339 +
           ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
               C19340) *
              C31380 * C1025 -
          (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
               C19340 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
               C19339) *
              C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
               C19339 +
           ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
               C19340) *
              C31380 * C1027 -
          (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
               C19340 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
               C19339) *
              C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C31548 *
               C19339 +
           ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
             C13646 * C5966) *
                C1030 +
            (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
             C13646 * C5968) *
                C31327) *
               C31548 * C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C1030 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31327) *
                C31548 * C19339 +
            ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
                C19340) *
               C31705 -
           (((C19696 + C19697) * C31327 + (C19698 + C19699) * C1030) * C31548 *
                C19340 +
            ((C19685 + C19684) * C31327 + (C19683 + C19682) * C1030) * C31548 *
                C19339) *
               C31694 +
           (((C19699 + C19698) * C1030 + (C19697 + C19696) * C31327) * C31548 *
                C19339 +
            ((C13649 * C1863 + C13645 * C1872 + C13650 * C1862 +
              C13646 * C1871) *
                 C1030 +
             (C13649 * C1869 + C13645 * C1881 + C13650 * C1868 +
              C13646 * C1880) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C956 +
          ((((C14511 + C14510) * C1030 + (C14509 + C14508) * C31327) * C31548 *
                C19339 +
            ((C14940 + C14941) * C1030 + (C14942 + C14943) * C31327) * C31548 *
                C19340) *
               C31694 -
           (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
                C19340 +
            ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
                C19339) *
               C31705 -
           (((C16290 + C16291) * C31327 + (C16292 + C16293) * C1030) * C31548 *
                C19340 +
            ((C14943 + C14942) * C31327 + (C14941 + C14940) * C1030) * C31548 *
                C19339) *
               C31670) *
              C957 +
          ((((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
                C19339 +
            ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
                C19340) *
               C31705 -
           (((C14948 + C14949) * C31327 + (C14950 + C14951) * C1030) * C31548 *
                C19340 +
            ((C14947 + C14946) * C31327 + (C14945 + C14944) * C1030) * C31548 *
                C19339) *
               C31694 +
           (((C14951 + C14950) * C1030 + (C14949 + C14948) * C31327) * C31548 *
                C19339 +
            ((C13649 * C6383 + C13645 * C6387 + C13650 * C6663 +
              C13646 * C6664) *
                 C1030 +
             (C13649 * C6386 + C13645 * C6392 + C13650 * C6665 +
              C13646 * C6666) *
                 C31327) *
                C31548 * C19340) *
               C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C565 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C559 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C566 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C560 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C567 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C561 -
            (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
                C568 -
            (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
                C31671) *
               C31548 * C19339 +
           ((C19682 + C19683) * C565 + (C19684 + C19685) * C559 -
            (C19686 + C19687) * C566 - (C19688 + C19689) * C560 +
            (C19690 + C19691) * C567 + (C19692 + C19693) * C561 -
            (C19974 + C19975) * C568 - (C19976 + C19977) * C31671) *
               C31548 * C19340) *
              C31639 +
          (((C19687 + C19686) * C566 -
            ((C19685 + C19684) * C559 + (C19683 + C19682) * C565) +
            (C19689 + C19688) * C560 - (C19691 + C19690) * C567 -
            (C19693 + C19692) * C561 + (C19975 + C19974) * C568 +
            (C19977 + C19976) * C31671) *
               C31548 * C19339 +
           ((C19694 + C19695) * C566 -
            ((C19696 + C19697) * C559 + (C19698 + C19699) * C565) +
            (C19700 + C19701) * C560 - (C19702 + C19703) * C567 -
            (C19704 + C19705) * C561 +
            (C13649 * C429 + C13645 * C447 + C13650 * C430 + C13646 * C449) *
                C568 +
            (C13649 * C448 + C13645 * C459 + C13650 * C450 + C13646 * C460) *
                C31671) *
               C31548 * C19340) *
              C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                 C30439 +
             (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                 C31624 -
             (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                 C30420 -
             (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                 C31337) *
                C31548 * C19339 +
            ((C19682 + C19683) * C30439 + (C19684 + C19685) * C31624 -
             (C19686 + C19687) * C30420 - (C19688 + C19689) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C19687 + C19686) * C30420 -
             ((C19685 + C19684) * C31624 + (C19683 + C19682) * C30439) +
             (C19689 + C19688) * C31337) *
                C31548 * C19339 +
            ((C19694 + C19695) * C30420 -
             ((C19696 + C19697) * C31624 + (C19698 + C19699) * C30439) +
             (C19700 + C19701) * C31337) *
                C31548 * C19340) *
               C31467) *
              C956 +
          ((((C13851 + C13850) * C30420 -
             ((C13849 + C13848) * C31624 + (C13847 + C13846) * C30439) +
             (C13853 + C13852) * C31337) *
                C31548 * C19339 +
            ((C14506 + C14507) * C30420 -
             ((C14508 + C14509) * C31624 + (C14510 + C14511) * C30439) +
             (C14512 + C14513) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C14511 + C14510) * C30439 + (C14509 + C14508) * C31624 -
             (C14507 + C14506) * C30420 - (C14513 + C14512) * C31337) *
                C31548 * C19339 +
            ((C14940 + C14941) * C30439 + (C14942 + C14943) * C31624 -
             (C16018 + C16019) * C30420 - (C16020 + C16021) * C31337) *
                C31548 * C19340) *
               C31467) *
              C957 +
          ((((C13863 + C13862) * C30439 + (C13861 + C13860) * C31624 -
             (C13859 + C13858) * C30420 - (C13865 + C13864) * C31337) *
                C31548 * C19339 +
            ((C14944 + C14945) * C30439 + (C14946 + C14947) * C31624 -
             (C15296 + C15297) * C30420 - (C15298 + C15299) * C31337) *
                C31548 * C19340) *
               C31639 +
           (((C15297 + C15296) * C30420 -
             ((C14947 + C14946) * C31624 + (C14945 + C14944) * C30439) +
             (C15299 + C15298) * C31337) *
                C31548 * C19339 +
            ((C13649 * C1172 + C13645 * C1187 + C13650 * C1173 +
              C13646 * C1188) *
                 C30420 -
             ((C14948 + C14949) * C31624 + (C14950 + C14951) * C30439) +
             (C13649 * C1190 + C13645 * C1199 + C13650 * C1191 +
              C13646 * C1200) *
                 C31337) *
                C31548 * C19340) *
               C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
               C116 +
           (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
               C104 -
           (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
               C117 -
           (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
               C105 +
           (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
               C118 +
           (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
               C106 -
           (C13650 * C125 + C13646 * C136 + C13649 * C124 + C13645 * C134) *
               C119 -
           (C13650 * C137 + C13646 * C146 + C13649 * C135 + C13645 * C145) *
               C107 +
           (C13649 * C125 + C13645 * C136 + C13650 * C126 + C13646 * C138) *
               C120 +
           (C13649 * C137 + C13645 * C146 + C13650 * C139 + C13646 * C147) *
               C108) *
              C31548 * C19339 +
          ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
               C116 +
           (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
               C104 -
           (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
               C117 -
           (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
               C105 +
           (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
               C118 +
           (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
               C106 -
           (C13650 * C425 + C13646 * C439 + C13649 * C423 + C13645 * C433) *
               C119 -
           (C13650 * C440 + C13646 * C455 + C13649 * C438 + C13645 * C454) *
               C107 +
           (C13649 * C425 + C13645 * C439 + C13650 * C673 + C13646 * C674) *
               C120 +
           (C13649 * C440 + C13645 * C455 + C13650 * C675 + C13646 * C676) *
               C108) *
              C31548 * C19340) *
         C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C265 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C259 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C266 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C260 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C267 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C13649 * C424 + C13645 * C437 + C13650 * C421 + C13646 * C431) *
                C265 +
            (C13649 * C436 + C13645 * C453 + C13650 * C435 + C13646 * C452) *
                C259 -
            (C13650 * C422 + C13646 * C432 + C13649 * C421 + C13645 * C431) *
                C266 -
            (C13650 * C434 + C13646 * C451 + C13649 * C435 + C13645 * C452) *
                C260 +
            (C13649 * C422 + C13645 * C432 + C13650 * C423 + C13646 * C433) *
                C267 +
            (C13649 * C434 + C13645 * C451 + C13650 * C438 + C13646 * C454) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31704 +
          (((C13851 + C13850) * C266 -
            ((C13849 + C13848) * C259 + (C13847 + C13846) * C265) +
            (C13853 + C13852) * C260 - (C13855 + C13854) * C267 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C266 -
            ((C14508 + C14509) * C259 + (C14510 + C14511) * C265) +
            (C14512 + C14513) * C260 - (C14514 + C14515) * C267 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C31692 +
          (((C13863 + C13862) * C265 + (C13861 + C13860) * C259 -
            (C13859 + C13858) * C266 - (C13865 + C13864) * C260 +
            (C13867 + C13866) * C267 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C265 + (C14946 + C14947) * C259 -
            (C15296 + C15297) * C266 - (C15298 + C15299) * C260 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C267 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C959 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31701 -
            (C13650 * C123 + C13646 * C130 + C13649 * C122 + C13645 * C129) *
                C960 -
            (C13650 * C133 + C13646 * C144 + C13649 * C132 + C13645 * C143) *
                C31688 +
            (C13649 * C123 + C13645 * C130 + C13650 * C124 + C13646 * C134) *
                C961 +
            (C13649 * C133 + C13645 * C144 + C13650 * C135 + C13646 * C145) *
                C31661) *
               C31548 * C19339 +
           ((C19682 + C19683) * C959 + (C19684 + C19685) * C31701 -
            (C19686 + C19687) * C960 - (C19688 + C19689) * C31688 +
            (C19690 + C19691) * C961 + (C19692 + C19693) * C31661) *
               C31548 * C19340) *
              C31380 * C956 +
          (((C13851 + C13850) * C960 -
            ((C13849 + C13848) * C31701 + (C13847 + C13846) * C959) +
            (C13853 + C13852) * C31688 - (C13855 + C13854) * C961 -
            (C13857 + C13856) * C31661) *
               C31548 * C19339 +
           ((C14506 + C14507) * C960 -
            ((C14508 + C14509) * C31701 + (C14510 + C14511) * C959) +
            (C14512 + C14513) * C31688 - (C14514 + C14515) * C961 -
            (C14516 + C14517) * C31661) *
               C31548 * C19340) *
              C31380 * C957 +
          (((C13863 + C13862) * C959 + (C13861 + C13860) * C31701 -
            (C13859 + C13858) * C960 - (C13865 + C13864) * C31688 +
            (C13867 + C13866) * C961 + (C13869 + C13868) * C31661) *
               C31548 * C19339 +
           ((C14944 + C14945) * C959 + (C14946 + C14947) * C31701 -
            (C15296 + C15297) * C960 - (C15298 + C15299) * C31688 +
            (C13649 * C1168 + C13645 * C1183 + C13650 * C1457 +
             C13646 * C1458) *
                C961 +
            (C13649 * C1180 + C13645 * C1195 + C13650 * C1459 +
             C13646 * C1460) *
                C31661) *
               C31548 * C19340) *
              C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C121 + C13645 * C128 + C13650 * C122 + C13646 * C129) *
                C1030 +
            (C13649 * C131 + C13645 * C142 + C13650 * C132 + C13646 * C143) *
                C31327) *
               C31548 * C19339 +
           ((C19682 + C19683) * C1030 + (C19684 + C19685) * C31327) * C31548 *
               C19340) *
              C31380 * C1025 -
          (((C14508 + C14509) * C31327 + (C14510 + C14511) * C1030) * C31548 *
               C19340 +
           ((C13849 + C13848) * C31327 + (C13847 + C13846) * C1030) * C31548 *
               C19339) *
              C31380 * C1026 +
          (((C13863 + C13862) * C1030 + (C13861 + C13860) * C31327) * C31548 *
               C19339 +
           ((C14944 + C14945) * C1030 + (C14946 + C14947) * C31327) * C31548 *
               C19340) *
              C31380 * C1027 -
          (((C15438 + C15439) * C31327 + (C15440 + C15441) * C1030) * C31548 *
               C19340 +
           ((C14765 + C14764) * C31327 + (C14763 + C14762) * C1030) * C31548 *
               C19339) *
              C31380 * C1028 +
          (((C14769 + C14768) * C1030 + (C14767 + C14766) * C31327) * C31548 *
               C19339 +
           ((C13649 * C5640 + C13645 * C5645 + C13650 * C5965 +
             C13646 * C5966) *
                C1030 +
            (C13649 * C5644 + C13645 * C5649 + C13650 * C5967 +
             C13646 * C5968) *
                C31327) *
               C31548 * C19340) *
              C31380 * C1029)) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30449 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31332 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30445 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31340 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C30455 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C2723) *
              C31548 * C31560 * C31380 * C31423 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C30445 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31332 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C30449) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31340 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C30455 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C2723) *
              C31548 * C31560 * C31380 * C31430 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C30449 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31332 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C30445 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31340 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C30455 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C2723) *
              C31548 * C31560 * C31380 * C2726)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30449 +
            (C4585 * C131 + C31314 * C142) * C31332 -
            (C4585 * C122 + C31314 * C129) * C30445 -
            (C4585 * C132 + C31314 * C143) * C31340 +
            (C4585 * C123 + C31314 * C130) * C30455 +
            (C4585 * C133 + C31314 * C144) * C2723) *
               C4582 +
           (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
           C7314 * C4584) *
              C31560 * C31380 * C31423 +
          ((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C4582 +
           (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C4583 +
           (C7304 - (C7305 + C7306) + C7307 - C7308 - C7309) * C4584) *
              C31560 * C31380 * C31430 +
          (C7314 * C4582 +
           (C7306 + C7305 - C7304 - C7307 + C7308 + C7309) * C4583 +
           (C5521 * C30449 + C5522 * C31332 - C5812 * C30445 - C5813 * C31340 +
            (C4585 * C1036 + C31314 * C1045) * C30455 +
            (C4585 * C1048 + C31314 * C1054) * C2723) *
               C4584) *
              C31560 * C31380 * C2726)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31423 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31430 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C2463 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C2457 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C2464 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C2464 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C2457 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C2463) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C2726)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
               C31560 * C31467) *
              C31423 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C31639 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C7620 + C7621 - C7622 - C7623) * C4584) *
               C31560 * C31467) *
              C31430 +
          ((C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
            (C7010 + C7011 - C7012 - C7013) * C4584) *
               C31560 * C31639 +
           (C7625 * C4582 + (C7622 - (C7621 + C7620) + C7623) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C2726)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2463 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C2457 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2464 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31380 * C31711 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C2464 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C2457 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C2463) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31337) *
              C31548 * C31560 * C31380 * C31707 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C2463 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C2457 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C2464 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31337) *
              C31548 * C31560 * C31380 * C31697 +
          ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
            C115 * C1307 + C103 * C1308) *
               C2464 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C2457 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C2463) +
           (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
            C115 * C1309 + C103 * C1310) *
               C31337) *
              C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2355 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31710 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2356 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31703 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C2357 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31690 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C2358 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31380 * C2353 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C2356 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31710 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C2355) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31703 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C2357 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31690 +
           (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
            C115 * C569 + C103 * C570) *
               C2358 +
           (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
            C115 * C571 + C103 * C572) *
               C31671) *
              C31548 * C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31705 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31694 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C2463 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C2457 -
            (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
             C113 * C427 + C101 * C442) *
                C2464 -
            (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
             C113 * C445 + C101 * C457) *
                C31337) *
               C31548 * C31560 * C31670) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31705 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31694 +
           ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
             C115 * C2031 + C103 * C2032) *
                C2464 -
            ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
              C113 * C1176 + C101 * C1194) *
                 C2457 +
             (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
              C113 * C1167 + C101 * C1179) *
                 C2463) +
            (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
             C115 * C2033 + C103 * C2034) *
                C31337) *
               C31548 * C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C31380 * C2353 +
          ((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
               C4582 +
           (C6894 - (C6893 + C6892) + C6895 - C6896 - C6897 + C6898 + C6899) *
               C4583 +
           (C4745 * C2356 - (C4746 * C31710 + C4747 * C2355) + C4748 * C31703 -
            C4749 * C2357 - C4750 * C31690 +
            (C4585 * C1307 + C31314 * C1308) * C2358 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
              C31560 * C31380 * C31711 +
          ((C7000 - (C6999 + C6998) + C7001) * C4582 +
           (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
              C31560 * C31380 * C31707 +
          (C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
           (C7010 + C7011 - C7012 - C7013) * C4584) *
              C31560 * C31380 * C31697 +
          (C7019 * C4582 + (C7012 - (C7011 + C7010) + C7013) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C2464 -
            (C5523 * C2457 + C5524 * C2463) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C31705 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 +
            (C7170 - (C7171 + C7172) + C7173) * C4584) *
               C31560 * C31694 +
           (((C4585 * C426 + C31314 * C441) * C2463 +
             (C4585 * C444 + C31314 * C456) * C2457 -
             (C4585 * C427 + C31314 * C442) * C2464 -
             (C4585 * C445 + C31314 * C457) * C31337) *
                C4582 +
            (C7174 + C7175 - C7176 - C7177) * C4583 +
            (C7178 + C7179 - C7180 - C7181) * C4584) *
               C31560 * C31670) *
              C2353 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C31705 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C5677 * C2463 + C5678 * C2457 - C5985 * C2464 - C5986 * C31337) *
                C4584) *
               C31560 * C31694 +
           ((C7176 - (C7175 + C7174) + C7177) * C4582 +
            (C7180 - (C7179 + C7178) + C7181) * C4583 +
            ((C4585 * C6541 + C31314 * C6542) * C2464 -
             (C5679 * C2457 + C5680 * C2463) +
             (C4585 * C6543 + C31314 * C6544) * C31337) *
                C4584) *
               C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30449 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31332 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30445 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31340 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C30455 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C2723) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30445 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31332 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30449) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31340 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C30455 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C2723) *
               C31548 * C31560 * C31467) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30445 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31332 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30449) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31340 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C30455 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C2723) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30449 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31332 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30445 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31340 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C30455 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C2723) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C4582 +
            (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
            C7314 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C30445 -
             ((C4585 * C436 + C31314 * C453) * C31332 +
              (C4585 * C424 + C31314 * C437) * C30449) +
             (C4585 * C435 + C31314 * C452) * C31340 -
             (C4585 * C422 + C31314 * C432) * C30455 -
             (C4585 * C434 + C31314 * C451) * C2723) *
                C4582 +
            (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C4583 +
            (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C4584) *
               C31560 * C31467) *
              C2353 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C4582 +
            (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C4583 +
            (C7304 - (C7305 + C7306) + C7307 - C7308 - C7309) * C4584) *
               C31560 * C31639 +
           ((C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C4582 +
            (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C4583 +
            (C5677 * C30449 + C5678 * C31332 - C5985 * C30445 - C5986 * C31340 +
             (C4585 * C1561 + C31314 * C1564) * C30455 +
             (C4585 * C1567 + C31314 * C1570) * C2723) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2355 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31710 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2356 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31703 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C2357 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31690 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C2358 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31380 * C2353 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C2356 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31710 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C2355) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31703 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C2357 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31690 +
           (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
            C115 * C569 + C103 * C570) *
               C2358 +
           (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
            C115 * C571 + C103 * C572) *
               C31671) *
              C31548 * C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2463 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C2457 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2464 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31380 * C31711 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C2464 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C2457 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C2463) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31337) *
              C31548 * C31560 * C31380 * C31707 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C2463 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C2457 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C2464 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31337) *
              C31548 * C31560 * C31380 * C31697 +
          ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
            C115 * C1307 + C103 * C1308) *
               C2464 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C2457 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C2463) +
           (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
            C115 * C1309 + C103 * C1310) *
               C31337) *
              C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C31380 * C2353 +
          ((C6886 - (C6885 + C6884) + C6887 - C6888 - C6889 + C6890 + C6891) *
               C4582 +
           (C6894 - (C6893 + C6892) + C6895 - C6896 - C6897 + C6898 + C6899) *
               C4583 +
           (C4745 * C2356 - (C4746 * C31710 + C4747 * C2355) + C4748 * C31703 -
            C4749 * C2357 - C4750 * C31690 +
            (C4585 * C1307 + C31314 * C1308) * C2358 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
              C31560 * C31380 * C31711 +
          ((C7000 - (C6999 + C6998) + C7001) * C4582 +
           (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
              C31560 * C31380 * C31707 +
          (C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
           (C7010 + C7011 - C7012 - C7013) * C4584) *
              C31560 * C31380 * C31697 +
          (C7019 * C4582 + (C7012 - (C7011 + C7010) + C7013) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C2464 -
            (C5523 * C2457 + C5524 * C2463) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31423 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31430 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C30439 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31624 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C30420 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C30420 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C31624 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C30439) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C2726)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C31467) *
              C31423 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C3120 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C31467) *
              C31430 +
          ((C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
            (C5804 + C5805 - C5816 - C5817) * C4584) *
               C31560 * C3120 +
           (C5990 * C4582 + (C5988 - (C5979 + C5978) + C5989) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             (C6098 * C31624 + C6099 * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C2726)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31463 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31470 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C3628) *
              C31423 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31470 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31463 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C3628) *
              C31430 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31463 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31470 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C3628) *
              C2726)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31463 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31470 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C3628) *
              C31423 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31470 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31463 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C3628) *
              C31430 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31463 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31470 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C3628) *
              C2726)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C3120 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31467) *
              C31711 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C3120) *
              C31707 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C3120 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31467) *
              C31697 +
          (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
             C115 * C1561 + C103 * C1564) *
                C1030 +
            (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
             C115 * C1567 + C103 * C1570) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31327 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C1030) *
               C31548 * C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C959 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31701 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C960 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31688 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C961 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C31661) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C960 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31701 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C959) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31688 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C961 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C31661) *
               C31548 * C31560 * C31467) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C960 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31701 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C959) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31688 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C961 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C31661) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C959 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31701 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C960 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31688 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C961 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31712 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31709 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31700 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31327 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C1030) *
               C31548 * C31560 * C31683) *
              C2353 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31709 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31712 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31700 +
           ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
             C115 * C2241 + C103 * C2244) *
                C1030 +
            (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
             C115 * C2247 + C103 * C2250) *
                C31327) *
               C31548 * C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
            C5434 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C960 -
             ((C4585 * C436 + C31314 * C453) * C31701 +
              (C4585 * C424 + C31314 * C437) * C959) +
             (C4585 * C435 + C31314 * C452) * C31688 -
             (C4585 * C422 + C31314 * C432) * C961 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C4583 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C4584) *
               C31560 * C31467) *
              C2353 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
            (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
               C31560 * C3120 +
           ((C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C4582 +
            (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C4583 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C3120 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C31711 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C3120) *
              C31707 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C3120 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C31697 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31712 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31709 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31700 -
           ((C6782 + C6783) * C4584 + (C6784 + C6785) * C4583 +
            ((C4585 * C1869 + C31314 * C1881) * C31327 +
             (C4585 * C1863 + C31314 * C1872) * C1030) *
                C4582) *
               C31560 * C31683) *
              C2353 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31709 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31712 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31700 +
           ((C6785 + C6784) * C4582 + (C6783 + C6782) * C4583 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C4584) *
               C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31463 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31470 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C30439 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31624 -
            (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
             C113 * C427 + C101 * C442) *
                C30420 -
            (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
             C113 * C445 + C101 * C457) *
                C31337) *
               C31548 * C31560 * C3628) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31463 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31470 +
           ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
             C115 * C2031 + C103 * C2032) *
                C30420 -
            ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
              C113 * C1176 + C101 * C1194) *
                 C31624 +
             (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
              C113 * C1167 + C101 * C1179) *
                 C30439) +
            (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
             C115 * C2033 + C103 * C2034) *
                C31337) *
               C31548 * C31560 * C3628) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C31463 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C31470 +
           (((C4585 * C426 + C31314 * C441) * C30439 +
             (C4585 * C444 + C31314 * C456) * C31624 -
             (C4585 * C427 + C31314 * C442) * C30420 -
             (C4585 * C445 + C31314 * C457) * C31337) *
                C4582 +
            (C6546 + C6547 - C6562 - C6563) * C4583 +
            (C6552 + C6553 - C6564 - C6565) * C4584) *
               C31560 * C3628) *
              C2353 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C31463 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C31470 +
           ((C6562 - (C6547 + C6546) + C6563) * C4582 +
            (C6564 - (C6553 + C6552) + C6565) * C4583 +
            ((C4585 * C6541 + C31314 * C6542) * C30420 -
             (C5679 * C31624 + C5680 * C30439) +
             (C4585 * C6543 + C31314 * C6544) * C31337) *
                C4584) *
               C31560 * C3628) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C959 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31701 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C960 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31688 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C961 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C31661) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C960 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31701 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C959) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31688 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C961 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C31661) *
               C31548 * C31560 * C31467) *
              C2353 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C960 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31701 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C959) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31688 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C961 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C31661) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C959 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31701 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C960 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31688 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C961 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C3120 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31467) *
              C31711 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C3120) *
              C31707 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C3120 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31467) *
              C31697 +
          (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
             C115 * C1561 + C103 * C1564) *
                C1030 +
            (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
             C115 * C1567 + C103 * C1570) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31327 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C1030) *
               C31548 * C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C959 +
             (C4585 * C131 + C31314 * C142) * C31701 -
             (C4585 * C122 + C31314 * C129) * C960 -
             (C4585 * C132 + C31314 * C143) * C31688 +
             (C4585 * C123 + C31314 * C130) * C961 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
            C5434 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C960 -
             ((C4585 * C436 + C31314 * C453) * C31701 +
              (C4585 * C424 + C31314 * C437) * C959) +
             (C4585 * C435 + C31314 * C452) * C31688 -
             (C4585 * C422 + C31314 * C432) * C961 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C8516 - (C8517 + C8518) + C8519 - C8520 - C8521) * C4583 +
            (C8522 - (C8523 + C8524) + C8525 - C8526 - C8527) * C4584) *
               C31560 * C31467) *
              C2353 +
          (((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
            (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
            (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
               C31560 * C3120 +
           ((C8518 + C8517 - C8516 - C8519 + C8520 + C8521) * C4582 +
            (C8524 + C8523 - C8522 - C8525 + C8526 + C8527) * C4583 +
            (C5677 * C959 + C5678 * C31701 - C5985 * C960 - C5986 * C31688 +
             (C4585 * C1561 + C31314 * C1564) * C961 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C3120 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C31711 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C3120) *
              C31707 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C3120 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C31697 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C3120) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30439 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31624 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30420 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31380 * C1301 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C30420 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31624 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C30439) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31337) *
              C31548 * C31560 * C31380 * C1302 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C30439 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31624 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C30420 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31337) *
              C31548 * C31560 * C31380 * C1303 +
          ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
            C115 * C1307 + C103 * C1308) *
               C30420 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31624 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C30439) +
           (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
            C115 * C1309 + C103 * C1310) *
               C31337) *
              C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C565 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C559 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C566 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C560 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C567 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C561 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C568 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31380 * C31638 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C566 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C559 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C565) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C560 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C567 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C561 +
           (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
            C115 * C569 + C103 * C570) *
               C568 +
           (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
            C115 * C571 + C103 * C572) *
               C31671) *
              C31548 * C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C1681 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C1682 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C30439 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31624 -
            (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
             C113 * C427 + C101 * C442) *
                C30420 -
            (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
             C113 * C445 + C101 * C457) *
                C31337) *
               C31548 * C31560 * C31670) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C1681 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C1682 +
           ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
             C115 * C2031 + C103 * C2032) *
                C30420 -
            ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
              C113 * C1176 + C101 * C1194) *
                 C31624 +
             (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
              C113 * C1167 + C101 * C1179) *
                 C30439) +
            (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
             C115 * C2033 + C103 * C2034) *
                C31337) *
               C31548 * C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31380 * C31638 +
          ((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
               C4582 +
           (C4994 - (C4993 + C4992) + C4995 - C4996 - C4997 + C5008 + C5009) *
               C4583 +
           (C4745 * C566 - (C4746 * C559 + C4747 * C565) + C4748 * C560 -
            C4749 * C567 - C4750 * C561 +
            (C4585 * C1307 + C31314 * C1308) * C568 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
              C31560 * C31380 * C1301 +
          ((C5794 - (C5793 + C5792) + C5795) * C4582 +
           (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
              C31560 * C31380 * C1302 +
          (C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
           (C5804 + C5805 - C5816 - C5817) * C4584) *
              C31560 * C31380 * C1303 +
          (C5819 * C4582 + (C5816 - (C5805 + C5804) + C5817) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C30420 -
            (C5523 * C31624 + C5524 * C30439) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C1681 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C1682 +
           (((C4585 * C426 + C31314 * C441) * C30439 +
             (C4585 * C444 + C31314 * C456) * C31624 -
             (C4585 * C427 + C31314 * C442) * C30420 -
             (C4585 * C445 + C31314 * C457) * C31337) *
                C4582 +
            (C6546 + C6547 - C6562 - C6563) * C4583 +
            (C6552 + C6553 - C6564 - C6565) * C4584) *
               C31560 * C31670) *
              C31638 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C1681 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C1682 +
           ((C6562 - (C6547 + C6546) + C6563) * C4582 +
            (C6564 - (C6553 + C6552) + C6565) * C4583 +
            ((C4585 * C6541 + C31314 * C6542) * C30420 -
             (C5679 * C31624 + C5680 * C30439) +
             (C4585 * C6543 + C31314 * C6544) * C31337) *
                C4584) *
               C31560 * C31670) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31639 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31467) *
              C1301 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31639) *
              C1302 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31639 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31467) *
              C1303 +
          (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
             C115 * C1561 + C103 * C1564) *
                C1030 +
            (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
             C115 * C1567 + C103 * C1570) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31327 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C1030) *
               C31548 * C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C265 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C259 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C266 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C260 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C267 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C31661) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C266 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C259 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C265) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C260 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C267 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C266 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C259 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C265) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C260 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C267 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C31661) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C265 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C259 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C266 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C260 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C267 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C2133 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C2134 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C2135 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31327 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C1030) *
               C31548 * C31560 * C31683) *
              C31638 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C2134 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C2133 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C2135 +
           ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
             C115 * C2241 + C103 * C2244) *
                C1030 +
            (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
             C115 * C2247 + C103 * C2250) *
                C31327) *
               C31548 * C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
            C4773 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C266 -
             ((C4585 * C436 + C31314 * C453) * C259 +
              (C4585 * C424 + C31314 * C437) * C265) +
             (C4585 * C435 + C31314 * C452) * C260 -
             (C4585 * C422 + C31314 * C432) * C267 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C4583 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C4584) *
               C31560 * C31467) *
              C31638 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
            (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
               C31560 * C31639 +
           ((C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C4582 +
            (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C4583 +
            ((C4585 * C1559 + C31314 * C1562) * C265 +
             (C4585 * C1565 + C31314 * C1568) * C259 -
             (C4585 * C1560 + C31314 * C1563) * C266 -
             (C4585 * C1566 + C31314 * C1569) * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31639 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C1301 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31639) *
              C1302 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31639 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C1303 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C2133 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C2134 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C2135 -
           ((C6782 + C6783) * C4584 + (C6784 + C6785) * C4583 +
            ((C4585 * C1869 + C31314 * C1881) * C31327 +
             (C4585 * C1863 + C31314 * C1872) * C1030) *
                C4582) *
               C31560 * C31683) *
              C31638 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C2134 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C2133 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C2135 +
           ((C6785 + C6784) * C4582 + (C6783 + C6782) * C4583 +
            ((C4585 * C6765 + C31314 * C6766) * C1030 +
             (C4585 * C6767 + C31314 * C6768) * C31327) *
                C4584) *
               C31560 * C31683) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
               C115 * C123 + C103 * C130) *
                  C116 +
              (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
               C115 * C133 + C103 * C144) *
                  C104 -
              (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
               C113 * C122 + C101 * C129) *
                  C117 -
              (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
               C113 * C132 + C101 * C143) *
                  C105 +
              (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
               C115 * C125 + C103 * C136) *
                  C118 +
              (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
               C115 * C137 + C103 * C146) *
                  C106 -
              (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
               C113 * C124 + C101 * C134) *
                  C119 -
              (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
               C113 * C135 + C101 * C145) *
                  C107 +
              (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 +
               C115 * C127 + C103 * C140) *
                  C120 +
              (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 +
               C115 * C141 + C103 * C148) *
                  C108) *
             C31548 * C31560 * C31380 * C31368 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130) *
                   C265 +
               (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
                C115 * C133 + C103 * C144) *
                   C259 -
               (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
                C113 * C122 + C101 * C129) *
                   C266 -
               (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
                C113 * C132 + C101 * C143) *
                   C260 +
               (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
                C115 * C125 + C103 * C136) *
                   C267 +
               (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
                C115 * C137 + C103 * C146) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31704 +
              ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
                C115 * C270 + C103 * C280) *
                   C266 -
               ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
                 C113 * C283 + C101 * C300) *
                    C259 +
                (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
                 C113 * C271 + C101 * C284) *
                    C265) +
               (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
                C115 * C285 + C103 * C301) *
                   C260 -
               (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
                C113 * C269 + C101 * C279) *
                   C267 -
               (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
                C113 * C281 + C101 * C298) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31692 +
              ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
                C115 * C275 + C103 * C290) *
                   C265 +
               (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
                C115 * C293 + C103 * C305) *
                   C259 -
               (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
                C113 * C274 + C101 * C289) *
                   C266 -
               (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
                C113 * C292 + C101 * C304) *
                   C260 +
               (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
                C115 * C277 + C103 * C296) *
                   C267 +
               (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
                C115 * C297 + C103 * C307) *
                   C31661) *
                  C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31705 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C266 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C259 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C265) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C260 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C267 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31661) *
              C31548 * C31560 * C31694 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C265 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C259 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C266 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C260 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C267 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C31661) *
              C31548 * C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31705 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31694 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31670) *
              C956 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31694 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31705 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31670) *
              C957 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31705 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31694 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C1681 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C960 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31701 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C959) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31688 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C961 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31661) *
              C31548 * C31560 * C1682 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C959 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31701 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C960 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31688 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C961 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C31661) *
              C31548 * C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C1681 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C1682 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31704 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C1682 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C1681 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31670) *
              C31692 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C1681 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C1682 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C1856 -
          ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
            C113 * C436 + C101 * C453) *
               C31327 +
           (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
            C113 * C424 + C101 * C437) *
               C1030) *
              C31548 * C31560 * C1857 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C1030 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31327) *
              C31548 * C31560 * C1858 -
          ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
            C113 * C1869 + C101 * C1881) *
               C31327 +
           (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
            C113 * C1863 + C101 * C1872) *
               C1030) *
              C31548 * C31560 * C1859 +
          ((C113 * C1864 + C101 * C1873 + C114 * C1865 + C102 * C1874 +
            C115 * C1866 + C103 * C1875) *
               C1030 +
           (C113 * C1876 + C101 * C1882 + C114 * C1877 + C102 * C1883 +
            C115 * C1878 + C103 * C1884) *
               C31327) *
              C31548 * C31560 * C1860) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31705 +
          (((C4585 * C421 + C31314 * C431) * C266 -
            ((C4585 * C436 + C31314 * C453) * C259 +
             (C4585 * C424 + C31314 * C437) * C265) +
            (C4585 * C435 + C31314 * C452) * C260 -
            (C4585 * C422 + C31314 * C432) * C267 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C266 -
            ((C4585 * C831 + C31314 * C838) * C259 +
             (C4585 * C823 + C31314 * C828) * C265) +
            (C4585 * C832 + C31314 * C839) * C260 -
            (C4585 * C825 + C31314 * C830) * C267 -
            (C4585 * C833 + C31314 * C840) * C31661) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C266 -
            ((C4585 * C1182 + C31314 * C1197) * C259 +
             (C4585 * C1170 + C31314 * C1185) * C265) +
            (C4585 * C1181 + C31314 * C1196) * C260 -
            (C4585 * C1168 + C31314 * C1183) * C267 -
            (C4585 * C1180 + C31314 * C1195) * C31661) *
               C4584) *
              C31560 * C31694 +
          (((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           ((C4585 * C1167 + C31314 * C1179) * C265 +
            (C4585 * C1176 + C31314 * C1194) * C259 -
            (C4585 * C1166 + C31314 * C1178) * C266 -
            (C4585 * C1175 + C31314 * C1193) * C260 +
            (C4585 * C1165 + C31314 * C1177) * C267 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           ((C4585 * C1171 + C31314 * C1186) * C265 +
            (C4585 * C1189 + C31314 * C1198) * C259 -
            (C4585 * C1172 + C31314 * C1187) * C266 -
            (C4585 * C1190 + C31314 * C1199) * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31705 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31694 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C956 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 +
            (C5685 + C5686) * C4584) *
               C31560 * C31694 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31705 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C957 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31705 -
           (((C4585 * C5644 + C31314 * C5649) * C31327 +
             (C4585 * C5640 + C31314 * C5645) * C1030) *
                C4584 +
            (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31694 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C1681 +
          (((C4585 * C421 + C31314 * C431) * C960 -
            ((C4585 * C436 + C31314 * C453) * C31701 +
             (C4585 * C424 + C31314 * C437) * C959) +
            (C4585 * C435 + C31314 * C452) * C31688 -
            (C4585 * C422 + C31314 * C432) * C961 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           (C5278 * C960 - (C5279 * C31701 + C5280 * C959) + C5281 * C31688 -
            C5282 * C961 - C5283 * C31661) *
               C4583 +
           (C5284 * C960 - (C5285 * C31701 + C5286 * C959) + C5287 * C31688 -
            C5288 * C961 - C5289 * C31661) *
               C4584) *
              C31560 * C1682 +
          (((C4585 * C426 + C31314 * C441) * C959 +
            (C4585 * C444 + C31314 * C456) * C31701 -
            (C4585 * C427 + C31314 * C442) * C960 -
            (C4585 * C445 + C31314 * C457) * C31688 +
            (C4585 * C428 + C31314 * C443) * C961 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           (C5673 * C959 + C5674 * C31701 -
            (C4585 * C1166 + C31314 * C1178) * C960 -
            (C4585 * C1175 + C31314 * C1193) * C31688 +
            (C4585 * C1165 + C31314 * C1177) * C961 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           (C5675 * C959 + C5676 * C31701 -
            (C4585 * C1172 + C31314 * C1187) * C960 -
            (C4585 * C1190 + C31314 * C1199) * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C1681 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C1682 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C31704 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C1682 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C1681 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C31692 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C1681 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C1682 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C1856 -
          (C5672 * C4584 + (C5654 + C5655) * C4583 +
           ((C4585 * C436 + C31314 * C453) * C31327 +
            (C4585 * C424 + C31314 * C437) * C1030) *
               C4582) *
              C31560 * C1857 +
          (((C4585 * C426 + C31314 * C441) * C1030 +
            (C4585 * C444 + C31314 * C456) * C31327) *
               C4582 +
           (C5681 + C5682) * C4583 + C5689 * C4584) *
              C31560 * C1858 -
          (((C4585 * C6386 + C31314 * C6392) * C31327 +
            (C4585 * C6383 + C31314 * C6387) * C1030) *
               C4584 +
           ((C4585 * C2245 + C31314 * C2248) * C31327 +
            (C4585 * C2239 + C31314 * C2242) * C1030) *
               C4583 +
           ((C4585 * C1869 + C31314 * C1881) * C31327 +
            (C4585 * C1863 + C31314 * C1872) * C1030) *
               C4582) *
              C31560 * C1859 +
          (((C4585 * C1864 + C31314 * C1873) * C1030 +
            (C4585 * C1876 + C31314 * C1882) * C31327) *
               C4582 +
           ((C4585 * C6384 + C31314 * C6388) * C1030 +
            (C4585 * C6389 + C31314 * C6393) * C31327) *
               C4583 +
           ((C4585 * C6385 + C31314 * C6390) * C1030 +
            (C4585 * C6391 + C31314 * C6394) * C31327) *
               C4584) *
              C31560 * C1860) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C956 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C957 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C30439 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31624 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C30420 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C30420 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C31624 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C30439) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C565 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C559 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C566 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C560 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C567 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C561 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C568 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31639 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C566 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C559 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C565) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C560 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C567 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C561 +
           (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
            C115 * C673 + C103 * C674) *
               C568 +
           (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
            C115 * C675 + C103 * C676) *
               C31671) *
              C31548 * C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30439 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31624 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30420 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C2133 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C30420 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31624 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C30439) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31337) *
              C31548 * C31560 * C2134 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C30439 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31624 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C30420 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31337) *
              C31548 * C31560 * C2135 +
          ((C113 * C1862 + C101 * C1871 + C114 * C1861 + C102 * C1870 +
            C115 * C2137 + C103 * C2138) *
               C30420 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31624 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C30439) +
           (C113 * C1868 + C101 * C1880 + C114 * C1867 + C102 * C1879 +
            C115 * C2139 + C103 * C2140) *
               C31337) *
              C31548 * C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31639 +
          (((C4585 * C421 + C31314 * C431) * C566 -
            ((C4585 * C436 + C31314 * C453) * C559 +
             (C4585 * C424 + C31314 * C437) * C565) +
            (C4585 * C435 + C31314 * C452) * C560 -
            (C4585 * C422 + C31314 * C432) * C567 -
            (C4585 * C434 + C31314 * C451) * C561 +
            (C4585 * C423 + C31314 * C433) * C568 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C566 -
            ((C4585 * C831 + C31314 * C838) * C559 +
             (C4585 * C823 + C31314 * C828) * C565) +
            (C4585 * C832 + C31314 * C839) * C560 -
            (C4585 * C825 + C31314 * C830) * C567 -
            (C4585 * C833 + C31314 * C840) * C561 +
            (C4585 * C826 + C31314 * C834) * C568 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C566 -
            ((C4585 * C1182 + C31314 * C1197) * C559 +
             (C4585 * C1170 + C31314 * C1185) * C565) +
            (C4585 * C1181 + C31314 * C1196) * C560 -
            (C4585 * C1168 + C31314 * C1183) * C567 -
            (C4585 * C1180 + C31314 * C1195) * C561 +
            (C4585 * C1457 + C31314 * C1458) * C568 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C31467) *
              C956 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C31639 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C31467) *
              C957 +
          ((C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
            (C5804 + C5805 - C5816 - C5817) * C4584) *
               C31560 * C31639 +
           (C5990 * C4582 + (C5988 - (C5979 + C5978) + C5989) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             ((C4585 * C5644 + C31314 * C5649) * C31624 +
              (C4585 * C5640 + C31314 * C5645) * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
              C31560 * C2133 +
          (((C4585 * C421 + C31314 * C431) * C30420 -
            ((C4585 * C436 + C31314 * C453) * C31624 +
             (C4585 * C424 + C31314 * C437) * C30439) +
            (C4585 * C435 + C31314 * C452) * C31337) *
               C4582 +
           (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
              C31560 * C2134 +
          (((C4585 * C426 + C31314 * C441) * C30439 +
            (C4585 * C444 + C31314 * C456) * C31624 -
            (C4585 * C427 + C31314 * C442) * C30420 -
            (C4585 * C445 + C31314 * C457) * C31337) *
               C4582 +
           (C6546 + C6547 - C6562 - C6563) * C4583 +
           (C6552 + C6553 - C6564 - C6565) * C4584) *
              C31560 * C2135 +
          (((C4585 * C1862 + C31314 * C1871) * C30420 -
            ((C4585 * C1869 + C31314 * C1881) * C31624 +
             (C4585 * C1863 + C31314 * C1872) * C30439) +
            (C4585 * C1868 + C31314 * C1880) * C31337) *
               C4582 +
           ((C4585 * C2240 + C31314 * C2243) * C30420 -
            ((C4585 * C2245 + C31314 * C2248) * C31624 +
             (C4585 * C2239 + C31314 * C2242) * C30439) +
            (C4585 * C2246 + C31314 * C2249) * C31337) *
               C4583 +
           ((C4585 * C6663 + C31314 * C6664) * C30420 -
            ((C4585 * C6386 + C31314 * C6392) * C31624 +
             (C4585 * C6383 + C31314 * C6387) * C30439) +
            (C4585 * C6665 + C31314 * C6666) * C31337) *
               C4584) *
              C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C31704 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C266 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C259 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C265) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C260 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C267 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C31692 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C265 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C259 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C266 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C260 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C267 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 + C115 * C123 +
           C103 * C130) *
              C116 +
          (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 + C115 * C133 +
           C103 * C144) *
              C104 -
          (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 + C113 * C122 +
           C101 * C129) *
              C117 -
          (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 + C113 * C132 +
           C101 * C143) *
              C105 +
          (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 + C115 * C125 +
           C103 * C136) *
              C118 +
          (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 + C115 * C137 +
           C103 * C146) *
              C106 -
          (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 + C113 * C124 +
           C101 * C134) *
              C119 -
          (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 + C113 * C135 +
           C101 * C145) *
              C107 +
          (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 + C115 * C127 +
           C103 * C140) *
              C120 +
          (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 + C115 * C141 +
           C103 * C148) *
              C108) *
         C31548 * C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C1681 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C960 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31701 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C959) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31688 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C961 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31661) *
              C31548 * C31560 * C1682 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C959 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31701 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C960 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31688 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C961 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C31661) *
              C31548 * C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C1681 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C1682 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31704 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C1682 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C1681 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31670) *
              C31692 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C1681 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C1682 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C1681 +
          (((C4585 * C421 + C31314 * C431) * C960 -
            ((C4585 * C436 + C31314 * C453) * C31701 +
             (C4585 * C424 + C31314 * C437) * C959) +
            (C4585 * C435 + C31314 * C452) * C31688 -
            (C4585 * C422 + C31314 * C432) * C961 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           (C5278 * C960 - (C5279 * C31701 + C5280 * C959) + C5281 * C31688 -
            C5282 * C961 - C5283 * C31661) *
               C4583 +
           (C5284 * C960 - (C5285 * C31701 + C5286 * C959) + C5287 * C31688 -
            C5288 * C961 - C5289 * C31661) *
               C4584) *
              C31560 * C1682 +
          (((C4585 * C426 + C31314 * C441) * C959 +
            (C4585 * C444 + C31314 * C456) * C31701 -
            (C4585 * C427 + C31314 * C442) * C960 -
            (C4585 * C445 + C31314 * C457) * C31688 +
            (C4585 * C428 + C31314 * C443) * C961 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           (C5673 * C959 + C5674 * C31701 -
            (C4585 * C1166 + C31314 * C1178) * C960 -
            (C4585 * C1175 + C31314 * C1193) * C31688 +
            (C4585 * C1165 + C31314 * C1177) * C961 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           (C5675 * C959 + C5676 * C31701 -
            (C4585 * C1172 + C31314 * C1187) * C960 -
            (C4585 * C1190 + C31314 * C1199) * C31688 +
            (C4585 * C1173 + C31314 * C1188) * C961 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C1681 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C1682 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C31704 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C1682 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C1681 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C31692 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C1681 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C1682 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30449 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31332 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30445 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31340 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C30455 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C2723) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30445 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31332 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30449) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31340 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C30455 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C2723) *
               C31548 * C31560 * C31467) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30445 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31332 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30449) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31340 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C30455 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C2723) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30449 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31332 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30445 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31340 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C30455 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C2723) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30449 +
             (C4585 * C131 + C31314 * C142) * C31332 -
             (C4585 * C122 + C31314 * C129) * C30445 -
             (C4585 * C132 + C31314 * C143) * C31340 +
             (C4585 * C123 + C31314 * C130) * C30455 +
             (C4585 * C133 + C31314 * C144) * C2723) *
                C4582 +
            (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
            C7314 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C30445 -
             ((C4585 * C436 + C31314 * C453) * C31332 +
              (C4585 * C424 + C31314 * C437) * C30449) +
             (C4585 * C435 + C31314 * C452) * C31340 -
             (C4585 * C422 + C31314 * C432) * C30455 -
             (C4585 * C434 + C31314 * C451) * C2723) *
                C4582 +
            (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C4583 +
            (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C4584) *
               C31560 * C31467) *
              C31638 +
          (((C7294 - (C7293 + C7292) + C7295 - C7296 - C7297) * C4582 +
            (C7300 - (C7299 + C7298) + C7301 - C7302 - C7303) * C4583 +
            (C7304 - (C7305 + C7306) + C7307 - C7308 - C7309) * C4584) *
               C31560 * C3120 +
           ((C7463 + C7462 - C7461 - C7464 + C7465 + C7466) * C4582 +
            (C7469 + C7468 - C7467 - C7470 + C7471 + C7472) * C4583 +
            (C5677 * C30449 + C5678 * C31332 - C5985 * C30445 - C5986 * C31340 +
             (C4585 * C1561 + C31314 * C1564) * C30455 +
             (C4585 * C1567 + C31314 * C1570) * C2723) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31463 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31470 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C2463 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C2457 -
            (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
             C113 * C427 + C101 * C442) *
                C2464 -
            (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
             C113 * C445 + C101 * C457) *
                C31337) *
               C31548 * C31560 * C3628) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31463 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31470 +
           ((C113 * C1166 + C101 * C1178 + C114 * C1165 + C102 * C1177 +
             C115 * C2031 + C103 * C2032) *
                C2464 -
            ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
              C113 * C1176 + C101 * C1194) *
                 C2457 +
             (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
              C113 * C1167 + C101 * C1179) *
                 C2463) +
            (C113 * C1175 + C101 * C1193 + C114 * C1174 + C102 * C1192 +
             C115 * C2033 + C103 * C2034) *
                C31337) *
               C31548 * C31560 * C3628) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C31463 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
               C31560 * C31470 +
           (((C4585 * C426 + C31314 * C441) * C2463 +
             (C4585 * C444 + C31314 * C456) * C2457 -
             (C4585 * C427 + C31314 * C442) * C2464 -
             (C4585 * C445 + C31314 * C457) * C31337) *
                C4582 +
            (C7174 + C7175 - C7176 - C7177) * C4583 +
            (C7178 + C7179 - C7180 - C7181) * C4584) *
               C31560 * C3628) *
              C31638 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C31463 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C7620 + C7621 - C7622 - C7623) * C4584) *
               C31560 * C31470 +
           ((C7176 - (C7175 + C7174) + C7177) * C4582 +
            (C7180 - (C7179 + C7178) + C7181) * C4583 +
            ((C4585 * C6541 + C31314 * C6542) * C2464 -
             (C5679 * C2457 + C5680 * C2463) +
             (C4585 * C6543 + C31314 * C6544) * C31337) *
                C4584) *
               C31560 * C3628) *
              C31427)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31704 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31692 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C2463 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C2457 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C2464 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C2464 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C2457 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C2463) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2355 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31710 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2356 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31703 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C2357 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31690 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C2358 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C3120 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C2356 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31710 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C2355) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31703 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C2357 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31690 +
           (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
            C115 * C673 + C103 * C674) *
               C2358 +
           (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
            C115 * C675 + C103 * C676) *
               C31671) *
              C31548 * C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2463 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C2457 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2464 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31712 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C2464 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C2457 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C2463) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31337) *
              C31548 * C31560 * C31709 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C2463 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C2457 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C2464 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31337) *
              C31548 * C31560 * C31700 +
          ((C113 * C1862 + C101 * C1871 + C114 * C1861 + C102 * C1870 +
            C115 * C2137 + C103 * C2138) *
               C2464 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C2457 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C2463) +
           (C113 * C1868 + C101 * C1880 + C114 * C1867 + C102 * C1879 +
            C115 * C2139 + C103 * C2140) *
               C31337) *
              C31548 * C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C3120 +
          (((C4585 * C421 + C31314 * C431) * C2356 -
            ((C4585 * C436 + C31314 * C453) * C31710 +
             (C4585 * C424 + C31314 * C437) * C2355) +
            (C4585 * C435 + C31314 * C452) * C31703 -
            (C4585 * C422 + C31314 * C432) * C2357 -
            (C4585 * C434 + C31314 * C451) * C31690 +
            (C4585 * C423 + C31314 * C433) * C2358 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           (C5278 * C2356 - (C5279 * C31710 + C5280 * C2355) + C5281 * C31703 -
            C5282 * C2357 - C5283 * C31690 +
            (C4585 * C826 + C31314 * C834) * C2358 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           (C5284 * C2356 - (C5285 * C31710 + C5286 * C2355) + C5287 * C31703 -
            C5288 * C2357 - C5289 * C31690 +
            (C4585 * C1457 + C31314 * C1458) * C2358 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
               C31560 * C31467) *
              C31704 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C3120 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C7620 + C7621 - C7622 - C7623) * C4584) *
               C31560 * C31467) *
              C31692 +
          ((C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
            (C7010 + C7011 - C7012 - C7013) * C4584) *
               C31560 * C3120 +
           (C7625 * C4582 + (C7622 - (C7621 + C7620) + C7623) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2463 +
            (C4585 * C131 + C31314 * C142) * C2457 -
            (C4585 * C122 + C31314 * C129) * C2464 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
              C31560 * C31712 +
          (((C4585 * C421 + C31314 * C431) * C2464 -
            ((C4585 * C436 + C31314 * C453) * C2457 +
             (C4585 * C424 + C31314 * C437) * C2463) +
            (C4585 * C435 + C31314 * C452) * C31337) *
               C4582 +
           (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
              C31560 * C31709 +
          (((C4585 * C426 + C31314 * C441) * C2463 +
            (C4585 * C444 + C31314 * C456) * C2457 -
            (C4585 * C427 + C31314 * C442) * C2464 -
            (C4585 * C445 + C31314 * C457) * C31337) *
               C4582 +
           (C7174 + C7175 - C7176 - C7177) * C4583 +
           (C7178 + C7179 - C7180 - C7181) * C4584) *
              C31560 * C31700 +
          (((C4585 * C1862 + C31314 * C1871) * C2464 -
            ((C4585 * C1869 + C31314 * C1881) * C2457 +
             (C4585 * C1863 + C31314 * C1872) * C2463) +
            (C4585 * C1868 + C31314 * C1880) * C31337) *
               C4582 +
           ((C4585 * C2240 + C31314 * C2243) * C2464 -
            (C6780 * C2457 + C6781 * C2463) +
            (C4585 * C2246 + C31314 * C2249) * C31337) *
               C4583 +
           ((C4585 * C6663 + C31314 * C6664) * C2464 -
            (C6778 * C2457 + C6779 * C2463) +
            (C4585 * C6665 + C31314 * C6666) * C31337) *
               C4584) *
              C31560 * C31683) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30449 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31332 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30445 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31340 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C30455 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C2723) *
              C31548 * C31560 * C31463 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C30445 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31332 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C30449) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31340 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C30455 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C2723) *
              C31548 * C31560 * C31470 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C30449 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C31332 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C30445 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C31340 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C30455 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C2723) *
              C31548 * C31560 * C3628) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30449 +
            (C4585 * C131 + C31314 * C142) * C31332 -
            (C4585 * C122 + C31314 * C129) * C30445 -
            (C4585 * C132 + C31314 * C143) * C31340 +
            (C4585 * C123 + C31314 * C130) * C30455 +
            (C4585 * C133 + C31314 * C144) * C2723) *
               C4582 +
           (C7292 + C7293 - C7294 - C7295 + C7296 + C7297) * C4583 +
           C7314 * C4584) *
              C31560 * C31463 +
          (((C4585 * C421 + C31314 * C431) * C30445 -
            ((C4585 * C436 + C31314 * C453) * C31332 +
             (C4585 * C424 + C31314 * C437) * C30449) +
            (C4585 * C435 + C31314 * C452) * C31340 -
            (C4585 * C422 + C31314 * C432) * C30455 -
            (C4585 * C434 + C31314 * C451) * C2723) *
               C4582 +
           (C7461 - (C7462 + C7463) + C7464 - C7465 - C7466) * C4583 +
           (C7467 - (C7468 + C7469) + C7470 - C7471 - C7472) * C4584) *
              C31560 * C31470 +
          (((C4585 * C426 + C31314 * C441) * C30449 +
            (C4585 * C444 + C31314 * C456) * C31332 -
            (C4585 * C427 + C31314 * C442) * C30445 -
            (C4585 * C445 + C31314 * C457) * C31340 +
            (C4585 * C428 + C31314 * C443) * C30455 +
            (C4585 * C446 + C31314 * C458) * C2723) *
               C4582 +
           (C5673 * C30449 + C5674 * C31332 - C6558 * C30445 - C6559 * C31340 +
            (C4585 * C1165 + C31314 * C1177) * C30455 +
            (C4585 * C1174 + C31314 * C1192) * C2723) *
               C4583 +
           (C5675 * C30449 + C5676 * C31332 - C6560 * C30445 - C6561 * C31340 +
            (C4585 * C1173 + C31314 * C1188) * C30455 +
            (C4585 * C1191 + C31314 * C1200) * C2723) *
               C4584) *
              C31560 * C3628) *
         C31368) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C2355 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31710 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C2356 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31703 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C2357 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31690 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C2358 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C3120 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C2356 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31710 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C2355) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C31703 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C2357 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31690 +
           (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
            C115 * C673 + C103 * C674) *
               C2358 +
           (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
            C115 * C675 + C103 * C676) *
               C31671) *
              C31548 * C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C2463 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C2457 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C2464 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C2464 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C2457 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C2463) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31704 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C2464 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C2457 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C2463) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C2463 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C2457 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C2464 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31692 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C2463 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C2457 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C2464 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C3120 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C2464 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C2457 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C2463) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C2355 +
            (C4585 * C131 + C31314 * C142) * C31710 -
            (C4585 * C122 + C31314 * C129) * C2356 -
            (C4585 * C132 + C31314 * C143) * C31703 +
            (C4585 * C123 + C31314 * C130) * C2357 +
            (C4585 * C133 + C31314 * C144) * C31690 -
            (C4585 * C124 + C31314 * C134) * C2358 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C6884 + C6885 - C6886 - C6887 + C6888 + C6889 - C6890 - C6891) *
               C4583 +
           (C6892 + C6893 - C6894 - C6895 + C6896 + C6897 - C6898 - C6899) *
               C4584) *
              C31560 * C3120 +
          (((C4585 * C421 + C31314 * C431) * C2356 -
            ((C4585 * C436 + C31314 * C453) * C31710 +
             (C4585 * C424 + C31314 * C437) * C2355) +
            (C4585 * C435 + C31314 * C452) * C31703 -
            (C4585 * C422 + C31314 * C432) * C2357 -
            (C4585 * C434 + C31314 * C451) * C31690 +
            (C4585 * C423 + C31314 * C433) * C2358 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           (C5278 * C2356 - (C5279 * C31710 + C5280 * C2355) + C5281 * C31703 -
            C5282 * C2357 - C5283 * C31690 +
            (C4585 * C826 + C31314 * C834) * C2358 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           (C5284 * C2356 - (C5285 * C31710 + C5286 * C2355) + C5287 * C31703 -
            C5288 * C2357 - C5289 * C31690 +
            (C4585 * C1457 + C31314 * C1458) * C2358 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C2463 +
             (C4585 * C131 + C31314 * C142) * C2457 -
             (C4585 * C122 + C31314 * C129) * C2464 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C6998 + C6999 - C7000 - C7001) * C4583 + C7018 * C4584) *
               C31560 * C3120 +
           (((C4585 * C421 + C31314 * C431) * C2464 -
             ((C4585 * C436 + C31314 * C453) * C2457 +
              (C4585 * C424 + C31314 * C437) * C2463) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C7166 - (C7167 + C7168) + C7169) * C4583 + C7625 * C4584) *
               C31560 * C31467) *
              C31704 +
          (((C7000 - (C6999 + C6998) + C7001) * C4582 +
            (C7004 - (C7003 + C7002) + C7005) * C4583 + C7019 * C4584) *
               C31560 * C3120 +
           ((C7168 + C7167 - C7166 - C7169) * C4582 +
            (C7172 + C7171 - C7170 - C7173) * C4583 +
            (C7620 + C7621 - C7622 - C7623) * C4584) *
               C31560 * C31467) *
              C31692 +
          ((C7018 * C4582 + (C7008 + C7007 - C7006 - C7009) * C4583 +
            (C7010 + C7011 - C7012 - C7013) * C4584) *
               C31560 * C3120 +
           (C7625 * C4582 + (C7622 - (C7621 + C7620) + C7623) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C2464 -
             (C6098 * C2457 + C6099 * C2463) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C565 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C559 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C566 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C560 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C567 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C561 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C568 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31380 * C31638 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C566 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C559 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C565) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C560 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C567 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C561 +
           (C113 * C270 + C101 * C280 + C114 * C272 + C102 * C286 +
            C115 * C569 + C103 * C570) *
               C568 +
           (C113 * C285 + C101 * C301 + C114 * C287 + C102 * C302 +
            C115 * C571 + C103 * C572) *
               C31671) *
              C31548 * C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C30439 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31624 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C30420 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31337) *
              C31548 * C31560 * C31380 * C1301 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C30420 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31624 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C30439) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31337) *
              C31548 * C31560 * C31380 * C1302 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C30439 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31624 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C30420 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31337) *
              C31548 * C31560 * C31380 * C1303 +
          ((C113 * C1032 + C101 * C1041 + C114 * C1031 + C102 * C1040 +
            C115 * C1307 + C103 * C1308) *
               C30420 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31624 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C30439) +
           (C113 * C1038 + C101 * C1050 + C114 * C1037 + C102 * C1049 +
            C115 * C1309 + C103 * C1310) *
               C31337) *
              C31548 * C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31380 * C31638 +
          ((C4984 - (C4983 + C4982) + C4985 - C4986 - C4987 + C5006 + C5007) *
               C4582 +
           (C4994 - (C4993 + C4992) + C4995 - C4996 - C4997 + C5008 + C5009) *
               C4583 +
           (C4745 * C566 - (C4746 * C559 + C4747 * C565) + C4748 * C560 -
            C4749 * C567 - C4750 * C561 +
            (C4585 * C1307 + C31314 * C1308) * C568 +
            (C4585 * C1309 + C31314 * C1310) * C31671) *
               C4584) *
              C31560 * C31380 * C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C30439 +
            (C4585 * C131 + C31314 * C142) * C31624 -
            (C4585 * C122 + C31314 * C129) * C30420 -
            (C4585 * C132 + C31314 * C143) * C31337) *
               C4582 +
           (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
              C31560 * C31380 * C1301 +
          ((C5794 - (C5793 + C5792) + C5795) * C4582 +
           (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
              C31560 * C31380 * C1302 +
          (C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
           (C5804 + C5805 - C5816 - C5817) * C4584) *
              C31560 * C31380 * C1303 +
          (C5819 * C4582 + (C5816 - (C5805 + C5804) + C5817) * C4583 +
           ((C4585 * C5787 + C31314 * C5788) * C30420 -
            (C5523 * C31624 + C5524 * C30439) +
            (C4585 * C5789 + C31314 * C5790) * C31337) *
               C4584) *
              C31560 * C31380 * C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C265 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C259 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C266 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C260 +
            (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
             C115 * C125 + C103 * C136) *
                C267 +
            (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
             C115 * C137 + C103 * C146) *
                C31661) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C266 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C259 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C265) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C260 -
            (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
             C113 * C422 + C101 * C432) *
                C267 -
            (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
             C113 * C434 + C101 * C451) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31638 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C266 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C259 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C265) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C260 -
            (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
             C113 * C269 + C101 * C279) *
                C267 -
            (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
             C113 * C281 + C101 * C298) *
                C31661) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C265 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C259 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C266 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C260 +
            (C113 * C825 + C101 * C830 + C114 * C826 + C102 * C834 +
             C115 * C827 + C103 * C836) *
                C267 +
            (C113 * C833 + C101 * C840 + C114 * C835 + C102 * C841 +
             C115 * C837 + C103 * C842) *
                C31661) *
               C31548 * C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31639 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31467) *
              C1301 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31639) *
              C1302 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31639 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31467) *
              C1303 +
          (((C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
             C115 * C1561 + C103 * C1564) *
                C1030 +
            (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
             C115 * C1567 + C103 * C1570) *
                C31327) *
               C31548 * C31560 * C31467 -
           ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
             C113 * C1039 + C101 * C1051) *
                C31327 +
            (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
             C113 * C1033 + C101 * C1042) *
                C1030) *
               C31548 * C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C265 +
             (C4585 * C131 + C31314 * C142) * C259 -
             (C4585 * C122 + C31314 * C129) * C266 -
             (C4585 * C132 + C31314 * C143) * C260 +
             (C4585 * C123 + C31314 * C130) * C267 +
             (C4585 * C133 + C31314 * C144) * C31661) *
                C4582 +
            (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
            C4773 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C266 -
             ((C4585 * C436 + C31314 * C453) * C259 +
              (C4585 * C424 + C31314 * C437) * C265) +
             (C4585 * C435 + C31314 * C452) * C260 -
             (C4585 * C422 + C31314 * C432) * C267 -
             (C4585 * C434 + C31314 * C451) * C31661) *
                C4582 +
            (C5290 - (C5291 + C5292) + C5293 - C5294 - C5295) * C4583 +
            (C5296 - (C5297 + C5298) + C5299 - C5300 - C5301) * C4584) *
               C31560 * C31467) *
              C31638 +
          (((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
            (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
            (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
               C31560 * C31639 +
           ((C5292 + C5291 - C5290 - C5293 + C5294 + C5295) * C4582 +
            (C5298 + C5297 - C5296 - C5299 + C5300 + C5301) * C4583 +
            ((C4585 * C1559 + C31314 * C1562) * C265 +
             (C4585 * C1565 + C31314 * C1568) * C259 -
             (C4585 * C1560 + C31314 * C1563) * C266 -
             (C4585 * C1566 + C31314 * C1569) * C260 +
             (C4585 * C1561 + C31314 * C1564) * C267 +
             (C4585 * C1567 + C31314 * C1570) * C31661) *
                C4584) *
               C31560 * C31467) *
              C31427)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31639 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31467) *
              C1301 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 + C6093 * C4584) *
               C31560 * C31467 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31639) *
              C1302 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31639 -
           ((C6100 + C6101) * C4584 + (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31467) *
              C1303 +
          ((C6093 * C4582 + (C6101 + C6100) * C4583 +
            ((C4585 * C6088 + C31314 * C6089) * C1030 +
             (C4585 * C6090 + C31314 * C6091) * C31327) *
                C4584) *
               C31560 * C31467 -
           ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
               C31560 * C31639) *
              C31677)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C31704 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C266 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C259 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C265) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C260 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C267 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C31692 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C265 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C259 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C266 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C260 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C267 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 + C115 * C123 +
           C103 * C130) *
              C116 +
          (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 + C115 * C133 +
           C103 * C144) *
              C104 -
          (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 + C113 * C122 +
           C101 * C129) *
              C117 -
          (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 + C113 * C132 +
           C101 * C143) *
              C105 +
          (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 + C115 * C125 +
           C103 * C136) *
              C118 +
          (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 + C115 * C137 +
           C103 * C146) *
              C106 -
          (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 + C113 * C124 +
           C101 * C134) *
              C119 -
          (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 + C113 * C135 +
           C101 * C145) *
              C107 +
          (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 + C115 * C127 +
           C103 * C140) *
              C120 +
          (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 + C115 * C141 +
           C103 * C148) *
              C108) *
         C31548 * C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31705 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C266 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C259 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C265) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C260 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C267 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C31661) *
              C31548 * C31560 * C31694 +
          ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
            C115 * C428 + C103 * C443) *
               C265 +
           (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
            C115 * C446 + C103 * C458) *
               C259 -
           (C115 * C429 + C103 * C447 + C114 * C428 + C102 * C443 +
            C113 * C427 + C101 * C442) *
               C266 -
           (C115 * C448 + C103 * C459 + C114 * C446 + C102 * C458 +
            C113 * C445 + C101 * C457) *
               C260 +
           (C113 * C428 + C101 * C443 + C114 * C429 + C102 * C447 +
            C115 * C430 + C103 * C449) *
               C267 +
           (C113 * C446 + C101 * C458 + C114 * C448 + C102 * C459 +
            C115 * C450 + C103 * C460) *
               C31661) *
              C31548 * C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C1030 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31327) *
               C31548 * C31560 * C31705 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C31327 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C1030) *
               C31548 * C31560 * C31694 +
           ((C113 * C426 + C101 * C441 + C114 * C427 + C102 * C442 +
             C115 * C428 + C103 * C443) *
                C1030 +
            (C113 * C444 + C101 * C456 + C114 * C445 + C102 * C457 +
             C115 * C446 + C103 * C458) *
                C31327) *
               C31548 * C31560 * C31670) *
              C956 +
          (((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C1030 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31327) *
               C31548 * C31560 * C31694 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31327 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C1030) *
               C31548 * C31560 * C31705 -
           ((C115 * C1174 + C103 * C1192 + C114 * C1175 + C102 * C1193 +
             C113 * C1176 + C101 * C1194) *
                C31327 +
            (C115 * C1165 + C103 * C1177 + C114 * C1166 + C102 * C1178 +
             C113 * C1167 + C101 * C1179) *
                C1030) *
               C31548 * C31560 * C31670) *
              C957 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C1030 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31327) *
               C31548 * C31560 * C31705 -
           ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
             C113 * C1182 + C101 * C1197) *
                C31327 +
            (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
             C113 * C1170 + C101 * C1185) *
                C1030) *
               C31548 * C31560 * C31694 +
           ((C113 * C1171 + C101 * C1186 + C114 * C1172 + C102 * C1187 +
             C115 * C1173 + C103 * C1188) *
                C1030 +
            (C113 * C1189 + C101 * C1198 + C114 * C1190 + C102 * C1199 +
             C115 * C1191 + C103 * C1200) *
                C31327) *
               C31548 * C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31705 +
          (((C4585 * C421 + C31314 * C431) * C266 -
            ((C4585 * C436 + C31314 * C453) * C259 +
             (C4585 * C424 + C31314 * C437) * C265) +
            (C4585 * C435 + C31314 * C452) * C260 -
            (C4585 * C422 + C31314 * C432) * C267 -
            (C4585 * C434 + C31314 * C451) * C31661) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C266 -
            ((C4585 * C831 + C31314 * C838) * C259 +
             (C4585 * C823 + C31314 * C828) * C265) +
            (C4585 * C832 + C31314 * C839) * C260 -
            (C4585 * C825 + C31314 * C830) * C267 -
            (C4585 * C833 + C31314 * C840) * C31661) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C266 -
            ((C4585 * C1182 + C31314 * C1197) * C259 +
             (C4585 * C1170 + C31314 * C1185) * C265) +
            (C4585 * C1181 + C31314 * C1196) * C260 -
            (C4585 * C1168 + C31314 * C1183) * C267 -
            (C4585 * C1180 + C31314 * C1195) * C31661) *
               C4584) *
              C31560 * C31694 +
          (((C4585 * C426 + C31314 * C441) * C265 +
            (C4585 * C444 + C31314 * C456) * C259 -
            (C4585 * C427 + C31314 * C442) * C266 -
            (C4585 * C445 + C31314 * C457) * C260 +
            (C4585 * C428 + C31314 * C443) * C267 +
            (C4585 * C446 + C31314 * C458) * C31661) *
               C4582 +
           ((C4585 * C1167 + C31314 * C1179) * C265 +
            (C4585 * C1176 + C31314 * C1194) * C259 -
            (C4585 * C1166 + C31314 * C1178) * C266 -
            (C4585 * C1175 + C31314 * C1193) * C260 +
            (C4585 * C1165 + C31314 * C1177) * C267 +
            (C4585 * C1174 + C31314 * C1192) * C31661) *
               C4583 +
           ((C4585 * C1171 + C31314 * C1186) * C265 +
            (C4585 * C1189 + C31314 * C1198) * C259 -
            (C4585 * C1172 + C31314 * C1187) * C266 -
            (C4585 * C1190 + C31314 * C1199) * C260 +
            (C4585 * C1173 + C31314 * C1188) * C267 +
            (C4585 * C1191 + C31314 * C1200) * C31661) *
               C4584) *
              C31560 * C31670) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C1030 +
             (C4585 * C131 + C31314 * C142) * C31327) *
                C4582 +
            (C5505 + C5506) * C4583 + C5519 * C4584) *
               C31560 * C31705 -
           (C5672 * C4584 + (C5654 + C5655) * C4583 +
            ((C4585 * C436 + C31314 * C453) * C31327 +
             (C4585 * C424 + C31314 * C437) * C1030) *
                C4582) *
               C31560 * C31694 +
           (((C4585 * C426 + C31314 * C441) * C1030 +
             (C4585 * C444 + C31314 * C456) * C31327) *
                C4582 +
            (C5681 + C5682) * C4583 + C5689 * C4584) *
               C31560 * C31670) *
              C956 +
          (((C5655 + C5654) * C4582 + (C5653 + C5652) * C4583 +
            (C5685 + C5686) * C4584) *
               C31560 * C31694 -
           (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
               C31560 * C31705 -
           ((C5687 + C5688) * C4584 + (C5684 + C5683) * C4583 +
            (C5682 + C5681) * C4582) *
               C31560 * C31670) *
              C957 +
          ((C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
               C31705 -
           (((C4585 * C5644 + C31314 * C5649) * C31327 +
             (C4585 * C5640 + C31314 * C5645) * C1030) *
                C4584 +
            (C5686 + C5685) * C4583 + C5672 * C4582) *
               C31560 * C31694 +
           (C5689 * C4582 + (C5688 + C5687) * C4583 +
            ((C4585 * C5641 + C31314 * C5646) * C1030 +
             (C4585 * C5647 + C31314 * C5650) * C31327) *
                C4584) *
               C31560 * C31670) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C565 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C559 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C566 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C560 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C567 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C561 -
           (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 +
            C113 * C124 + C101 * C134) *
               C568 -
           (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 +
            C113 * C135 + C101 * C145) *
               C31671) *
              C31548 * C31560 * C31639 +
          ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
            C115 * C423 + C103 * C433) *
               C566 -
           ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
             C113 * C436 + C101 * C453) *
                C559 +
            (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
             C113 * C424 + C101 * C437) *
                C565) +
           (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
            C115 * C438 + C103 * C454) *
               C560 -
           (C115 * C425 + C103 * C439 + C114 * C423 + C102 * C433 +
            C113 * C422 + C101 * C432) *
               C567 -
           (C115 * C440 + C103 * C455 + C114 * C438 + C102 * C454 +
            C113 * C434 + C101 * C451) *
               C561 +
           (C113 * C423 + C101 * C433 + C114 * C425 + C102 * C439 +
            C115 * C673 + C103 * C674) *
               C568 +
           (C113 * C438 + C101 * C454 + C114 * C440 + C102 * C455 +
            C115 * C675 + C103 * C676) *
               C31671) *
              C31548 * C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
             C115 * C123 + C103 * C130) *
                C30439 +
            (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
             C115 * C133 + C103 * C144) *
                C31624 -
            (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
             C113 * C122 + C101 * C129) *
                C30420 -
            (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
             C113 * C132 + C101 * C143) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C421 + C101 * C431 + C114 * C422 + C102 * C432 +
             C115 * C423 + C103 * C433) *
                C30420 -
            ((C115 * C434 + C103 * C451 + C114 * C435 + C102 * C452 +
              C113 * C436 + C101 * C453) *
                 C31624 +
             (C115 * C422 + C103 * C432 + C114 * C421 + C102 * C431 +
              C113 * C424 + C101 * C437) *
                 C30439) +
            (C113 * C435 + C101 * C452 + C114 * C434 + C102 * C451 +
             C115 * C438 + C103 * C454) *
                C31337) *
               C31548 * C31560 * C31467) *
              C956 +
          (((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
             C115 * C270 + C103 * C280) *
                C30420 -
            ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
              C113 * C283 + C101 * C300) *
                 C31624 +
             (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
              C113 * C271 + C101 * C284) *
                 C30439) +
            (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
             C115 * C285 + C103 * C301) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C823 + C101 * C828 + C114 * C824 + C102 * C829 +
             C115 * C825 + C103 * C830) *
                C30439 +
            (C113 * C831 + C101 * C838 + C114 * C832 + C102 * C839 +
             C115 * C833 + C103 * C840) *
                C31624 -
            (C115 * C826 + C103 * C834 + C114 * C825 + C102 * C830 +
             C113 * C824 + C101 * C829) *
                C30420 -
            (C115 * C835 + C103 * C841 + C114 * C833 + C102 * C840 +
             C113 * C832 + C101 * C839) *
                C31337) *
               C31548 * C31560 * C31467) *
              C957 +
          (((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
             C115 * C275 + C103 * C290) *
                C30439 +
            (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
             C115 * C293 + C103 * C305) *
                C31624 -
            (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
             C113 * C274 + C101 * C289) *
                C30420 -
            (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
             C113 * C292 + C101 * C304) *
                C31337) *
               C31548 * C31560 * C31639 +
           ((C113 * C1169 + C101 * C1184 + C114 * C1168 + C102 * C1183 +
             C115 * C1457 + C103 * C1458) *
                C30420 -
            ((C115 * C1180 + C103 * C1195 + C114 * C1181 + C102 * C1196 +
              C113 * C1182 + C101 * C1197) *
                 C31624 +
             (C115 * C1168 + C103 * C1183 + C114 * C1169 + C102 * C1184 +
              C113 * C1170 + C101 * C1185) *
                 C30439) +
            (C113 * C1181 + C101 * C1196 + C114 * C1180 + C102 * C1195 +
             C115 * C1459 + C103 * C1460) *
                C31337) *
               C31548 * C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C565 +
            (C4585 * C131 + C31314 * C142) * C559 -
            (C4585 * C122 + C31314 * C129) * C566 -
            (C4585 * C132 + C31314 * C143) * C560 +
            (C4585 * C123 + C31314 * C130) * C567 +
            (C4585 * C133 + C31314 * C144) * C561 -
            (C4585 * C124 + C31314 * C134) * C568 -
            (C4585 * C135 + C31314 * C145) * C31671) *
               C4582 +
           (C4982 + C4983 - C4984 - C4985 + C4986 + C4987 - C5006 - C5007) *
               C4583 +
           (C4992 + C4993 - C4994 - C4995 + C4996 + C4997 - C5008 - C5009) *
               C4584) *
              C31560 * C31639 +
          (((C4585 * C421 + C31314 * C431) * C566 -
            ((C4585 * C436 + C31314 * C453) * C559 +
             (C4585 * C424 + C31314 * C437) * C565) +
            (C4585 * C435 + C31314 * C452) * C560 -
            (C4585 * C422 + C31314 * C432) * C567 -
            (C4585 * C434 + C31314 * C451) * C561 +
            (C4585 * C423 + C31314 * C433) * C568 +
            (C4585 * C438 + C31314 * C454) * C31671) *
               C4582 +
           ((C4585 * C824 + C31314 * C829) * C566 -
            ((C4585 * C831 + C31314 * C838) * C559 +
             (C4585 * C823 + C31314 * C828) * C565) +
            (C4585 * C832 + C31314 * C839) * C560 -
            (C4585 * C825 + C31314 * C830) * C567 -
            (C4585 * C833 + C31314 * C840) * C561 +
            (C4585 * C826 + C31314 * C834) * C568 +
            (C4585 * C835 + C31314 * C841) * C31671) *
               C4583 +
           ((C4585 * C1169 + C31314 * C1184) * C566 -
            ((C4585 * C1182 + C31314 * C1197) * C559 +
             (C4585 * C1170 + C31314 * C1185) * C565) +
            (C4585 * C1181 + C31314 * C1196) * C560 -
            (C4585 * C1168 + C31314 * C1183) * C567 -
            (C4585 * C1180 + C31314 * C1195) * C561 +
            (C4585 * C1457 + C31314 * C1458) * C568 +
            (C4585 * C1459 + C31314 * C1460) * C31671) *
               C4584) *
              C31560 * C31467) *
         C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C121 + C31314 * C128) * C30439 +
             (C4585 * C131 + C31314 * C142) * C31624 -
             (C4585 * C122 + C31314 * C129) * C30420 -
             (C4585 * C132 + C31314 * C143) * C31337) *
                C4582 +
            (C5792 + C5793 - C5794 - C5795) * C4583 + C5818 * C4584) *
               C31560 * C31639 +
           (((C4585 * C421 + C31314 * C431) * C30420 -
             ((C4585 * C436 + C31314 * C453) * C31624 +
              (C4585 * C424 + C31314 * C437) * C30439) +
             (C4585 * C435 + C31314 * C452) * C31337) *
                C4582 +
            (C5970 - (C5971 + C5972) + C5973) * C4583 + C5990 * C4584) *
               C31560 * C31467) *
              C956 +
          (((C5794 - (C5793 + C5792) + C5795) * C4582 +
            (C5798 - (C5797 + C5796) + C5799) * C4583 + C5819 * C4584) *
               C31560 * C31639 +
           ((C5972 + C5971 - C5970 - C5973) * C4582 +
            (C5976 + C5975 - C5974 - C5977) * C4583 +
            (C5978 + C5979 - C5988 - C5989) * C4584) *
               C31560 * C31467) *
              C957 +
          ((C5818 * C4582 + (C5802 + C5801 - C5800 - C5803) * C4583 +
            (C5804 + C5805 - C5816 - C5817) * C4584) *
               C31560 * C31639 +
           (C5990 * C4582 + (C5988 - (C5979 + C5978) + C5989) * C4583 +
            ((C4585 * C5965 + C31314 * C5966) * C30420 -
             ((C4585 * C5644 + C31314 * C5649) * C31624 +
              (C4585 * C5640 + C31314 * C5645) * C30439) +
             (C4585 * C5967 + C31314 * C5968) * C31337) *
                C4584) *
               C31560 * C31467) *
              C31667)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 + C115 * C123 +
           C103 * C130) *
              C116 +
          (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 + C115 * C133 +
           C103 * C144) *
              C104 -
          (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 + C113 * C122 +
           C101 * C129) *
              C117 -
          (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 + C113 * C132 +
           C101 * C143) *
              C105 +
          (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 + C115 * C125 +
           C103 * C136) *
              C118 +
          (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 + C115 * C137 +
           C103 * C146) *
              C106 -
          (C115 * C126 + C103 * C138 + C114 * C125 + C102 * C136 + C113 * C124 +
           C101 * C134) *
              C119 -
          (C115 * C139 + C103 * C147 + C114 * C137 + C102 * C146 + C113 * C135 +
           C101 * C145) *
              C107 +
          (C113 * C125 + C101 * C136 + C114 * C126 + C102 * C138 + C115 * C127 +
           C103 * C140) *
              C120 +
          (C113 * C137 + C101 * C146 + C114 * C139 + C102 * C147 + C115 * C141 +
           C103 * C148) *
              C108) *
         C31548 * C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C265 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C259 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C266 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C260 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C267 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C31704 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C266 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C259 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C265) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C260 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C267 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C31692 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C265 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C259 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C266 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C260 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C267 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C959 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31701 -
           (C115 * C124 + C103 * C134 + C114 * C123 + C102 * C130 +
            C113 * C122 + C101 * C129) *
               C960 -
           (C115 * C135 + C103 * C145 + C114 * C133 + C102 * C144 +
            C113 * C132 + C101 * C143) *
               C31688 +
           (C113 * C123 + C101 * C130 + C114 * C124 + C102 * C134 +
            C115 * C125 + C103 * C136) *
               C961 +
           (C113 * C133 + C101 * C144 + C114 * C135 + C102 * C145 +
            C115 * C137 + C103 * C146) *
               C31661) *
              C31548 * C31560 * C31380 * C956 +
          ((C113 * C268 + C101 * C278 + C114 * C269 + C102 * C279 +
            C115 * C270 + C103 * C280) *
               C960 -
           ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
             C113 * C283 + C101 * C300) *
                C31701 +
            (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
             C113 * C271 + C101 * C284) *
                C959) +
           (C113 * C282 + C101 * C299 + C114 * C281 + C102 * C298 +
            C115 * C285 + C103 * C301) *
               C31688 -
           (C115 * C272 + C103 * C286 + C114 * C270 + C102 * C280 +
            C113 * C269 + C101 * C279) *
               C961 -
           (C115 * C287 + C103 * C302 + C114 * C285 + C102 * C301 +
            C113 * C281 + C101 * C298) *
               C31661) *
              C31548 * C31560 * C31380 * C957 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C959 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31701 -
           (C115 * C276 + C103 * C294 + C114 * C275 + C102 * C290 +
            C113 * C274 + C101 * C289) *
               C960 -
           (C115 * C295 + C103 * C306 + C114 * C293 + C102 * C305 +
            C113 * C292 + C101 * C304) *
               C31688 +
           (C113 * C275 + C101 * C290 + C114 * C276 + C102 * C294 +
            C115 * C277 + C103 * C296) *
               C961 +
           (C113 * C293 + C101 * C305 + C114 * C295 + C102 * C306 +
            C115 * C297 + C103 * C307) *
               C31661) *
              C31548 * C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130) *
               C1030 +
           (C113 * C131 + C101 * C142 + C114 * C132 + C102 * C143 +
            C115 * C133 + C103 * C144) *
               C31327) *
              C31548 * C31560 * C31380 * C1025 -
          ((C115 * C281 + C103 * C298 + C114 * C282 + C102 * C299 +
            C113 * C283 + C101 * C300) *
               C31327 +
           (C115 * C269 + C103 * C279 + C114 * C268 + C102 * C278 +
            C113 * C271 + C101 * C284) *
               C1030) *
              C31548 * C31560 * C31380 * C1026 +
          ((C113 * C273 + C101 * C288 + C114 * C274 + C102 * C289 +
            C115 * C275 + C103 * C290) *
               C1030 +
           (C113 * C291 + C101 * C303 + C114 * C292 + C102 * C304 +
            C115 * C293 + C103 * C305) *
               C31327) *
              C31548 * C31560 * C31380 * C1027 -
          ((C115 * C1037 + C103 * C1049 + C114 * C1038 + C102 * C1050 +
            C113 * C1039 + C101 * C1051) *
               C31327 +
           (C115 * C1031 + C103 * C1040 + C114 * C1032 + C102 * C1041 +
            C113 * C1033 + C101 * C1042) *
               C1030) *
              C31548 * C31560 * C31380 * C1028 +
          ((C113 * C1034 + C101 * C1043 + C114 * C1035 + C102 * C1044 +
            C115 * C1036 + C103 * C1045) *
               C1030 +
           (C113 * C1046 + C101 * C1052 + C114 * C1047 + C102 * C1053 +
            C115 * C1048 + C103 * C1054) *
               C31327) *
              C31548 * C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C121 + C31314 * C128) * C116 +
           (C4585 * C131 + C31314 * C142) * C104 -
           (C4585 * C122 + C31314 * C129) * C117 -
           (C4585 * C132 + C31314 * C143) * C105 +
           (C4585 * C123 + C31314 * C130) * C118 +
           (C4585 * C133 + C31314 * C144) * C106 -
           (C4585 * C124 + C31314 * C134) * C119 -
           (C4585 * C135 + C31314 * C145) * C107 +
           (C4585 * C125 + C31314 * C136) * C120 +
           (C4585 * C137 + C31314 * C146) * C108) *
              C4582 +
          ((C4585 * C271 + C31314 * C284) * C116 +
           (C4585 * C283 + C31314 * C300) * C104 -
           (C4585 * C268 + C31314 * C278) * C117 -
           (C4585 * C282 + C31314 * C299) * C105 +
           (C4585 * C269 + C31314 * C279) * C118 +
           (C4585 * C281 + C31314 * C298) * C106 -
           (C4585 * C270 + C31314 * C280) * C119 -
           (C4585 * C285 + C31314 * C301) * C107 +
           (C4585 * C272 + C31314 * C286) * C120 +
           (C4585 * C287 + C31314 * C302) * C108) *
              C4583 +
          ((C4585 * C273 + C31314 * C288) * C116 +
           (C4585 * C291 + C31314 * C303) * C104 -
           (C4585 * C274 + C31314 * C289) * C117 -
           (C4585 * C292 + C31314 * C304) * C105 +
           (C4585 * C275 + C31314 * C290) * C118 +
           (C4585 * C293 + C31314 * C305) * C106 -
           (C4585 * C276 + C31314 * C294) * C119 -
           (C4585 * C295 + C31314 * C306) * C107 +
           (C4585 * C277 + C31314 * C296) * C120 +
           (C4585 * C297 + C31314 * C307) * C108) *
              C4584) *
         C31560 * C31380 * C31368) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C265 +
            (C4585 * C131 + C31314 * C142) * C259 -
            (C4585 * C122 + C31314 * C129) * C266 -
            (C4585 * C132 + C31314 * C143) * C260 +
            (C4585 * C123 + C31314 * C130) * C267 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C4751 + C4752 - C4753 - C4754 + C4755 + C4756) * C4583 +
           C4773 * C4584) *
              C31560 * C31380 * C31704 +
          ((C4753 - (C4752 + C4751) + C4754 - C4755 - C4756) * C4582 +
           (C4759 - (C4758 + C4757) + C4760 - C4761 - C4762) * C4583 +
           (C4763 - (C4764 + C4765) + C4766 - C4767 - C4768) * C4584) *
              C31560 * C31380 * C31692 +
          (C4773 * C4582 +
           (C4765 + C4764 - C4763 - C4766 + C4767 + C4768) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C265 +
            (C4585 * C1046 + C31314 * C1052) * C259 -
            (C4585 * C1035 + C31314 * C1044) * C266 -
            (C4585 * C1047 + C31314 * C1053) * C260 +
            (C4585 * C1036 + C31314 * C1045) * C267 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C959 +
            (C4585 * C131 + C31314 * C142) * C31701 -
            (C4585 * C122 + C31314 * C129) * C960 -
            (C4585 * C132 + C31314 * C143) * C31688 +
            (C4585 * C123 + C31314 * C130) * C961 +
            (C4585 * C133 + C31314 * C144) * C31661) *
               C4582 +
           (C5412 + C5413 - C5414 - C5415 + C5416 + C5417) * C4583 +
           C5434 * C4584) *
              C31560 * C31380 * C956 +
          ((C5414 - (C5413 + C5412) + C5415 - C5416 - C5417) * C4582 +
           (C5420 - (C5419 + C5418) + C5421 - C5422 - C5423) * C4583 +
           (C5424 - (C5425 + C5426) + C5427 - C5428 - C5429) * C4584) *
              C31560 * C31380 * C957 +
          (C5434 * C4582 +
           (C5426 + C5425 - C5424 - C5427 + C5428 + C5429) * C4583 +
           ((C4585 * C1034 + C31314 * C1043) * C959 +
            (C4585 * C1046 + C31314 * C1052) * C31701 -
            (C4585 * C1035 + C31314 * C1044) * C960 -
            (C4585 * C1047 + C31314 * C1053) * C31688 +
            (C4585 * C1036 + C31314 * C1045) * C961 +
            (C4585 * C1048 + C31314 * C1054) * C31661) *
               C4584) *
              C31560 * C31380 * C31667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C121 + C31314 * C128) * C1030 +
            (C4585 * C131 + C31314 * C142) * C31327) *
               C4582 +
           (C5505 + C5506) * C4583 + C5519 * C4584) *
              C31560 * C31380 * C1025 -
          (C5520 * C4584 + (C5508 + C5507) * C4583 + (C5506 + C5505) * C4582) *
              C31560 * C31380 * C1026 +
          (C5519 * C4582 + (C5510 + C5509) * C4583 + C5529 * C4584) * C31560 *
              C31380 * C1027 -
          ((C5527 + C5528) * C4584 + (C5526 + C5525) * C4583 + C5520 * C4582) *
              C31560 * C31380 * C1028 +
          (C5529 * C4582 + (C5528 + C5527) * C4583 +
           ((C4585 * C5497 + C31314 * C5500) * C1030 +
            (C4585 * C5501 + C31314 * C5503) * C31327) *
               C4584) *
              C31560 * C31380 * C1029)) /
            (p * q * std::sqrt(p + q));
}
