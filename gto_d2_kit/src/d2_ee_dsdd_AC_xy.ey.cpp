/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dsdd_AC_xy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2022_13_12(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30235 = ae * be;
    const double C30234 = 0 * be;
    const double C30233 = xA - xB;
    const double C30232 = ae + be;
    const double C30256 = ce * de;
    const double C30255 = ce + de;
    const double C30254 = 0 * de;
    const double C30253 = yC - yD;
    const double C30294 = 0 * ce;
    const double C30289 = 0 * de;
    const double C30288 = 0 * de;
    const double C30339 = 0 * de;
    const double C30387 = yP - yQ;
    const double C30386 = p + q;
    const double C30385 = p * q;
    const double C30384 = xP - xQ;
    const double C30392 = bs[3];
    const double C30403 = bs[4];
    const double C30411 = bs[5];
    const double C30430 = bs[6];
    const double C30462 = bs[7];
    const double C30633 = zP - zQ;
    const double C30751 = bs[2];
    const double C117 = bs[0];
    const double C31136 = xC - xD;
    const double C31184 = zC - zD;
    const double C31352 = yA - yB;
    const double C31364 = zA - zB;
    const double C30237 = C30235 * C30233;
    const double C31119 = std::pow(C30233, 2);
    const double C31427 = C30233 * be;
    const double C30236 = 2 * C30232;
    const double C31428 = std::pow(C30232, 2);
    const double C30257 = std::pow(C30255, 2);
    const double C30272 = 2 * C30255;
    const double C30395 = C30255 * C30232;
    const double C138 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (xP - xQ) * (yP - yQ) * ae * ce) /
                         C30255) /
                        C30232;
    const double C30290 = C30254 / C30255;
    const double C30258 = C30256 * C30253;
    const double C30291 = C30253 * C30254;
    const double C31167 = std::pow(C30253, 2);
    const double C31226 = C30253 * de;
    const double C31224 = C30253 * ce;
    const double C30301 = C30294 / C30255;
    const double C30296 = C30253 * C30289;
    const double C30340 = C30339 / C30255;
    const double C30393 = C30387 * ce;
    const double C30594 = std::pow(C30387, 2);
    const double C30388 = 2 * C30385;
    const double C30394 = C30384 * C30387;
    const double C30413 = std::pow(C30384, 2);
    const double C30497 = C30384 * ae;
    const double C30637 = std::pow(C30633, 2);
    const double C31139 = C31136 * de;
    const double C31138 = C31136 * ce;
    const double C31137 = std::pow(C31136, 2);
    const double C31185 = std::pow(C31184, 2);
    const double C31268 = C31184 * de;
    const double C31266 = C31184 * ce;
    const double C31353 = std::pow(C31352, 2);
    const double C31461 = C31352 * be;
    const double C31365 = std::pow(C31364, 2);
    const double C31462 = C31364 * be;
    const double C31120 = C31119 * C30235;
    const double C31430 = std::pow(C30236, -2);
    const double C31429 = std::pow(C30236, -1);
    const double C30259 = 2 * C30257;
    const double C31441 = 4 * C30257;
    const double C31151 = std::pow(C30272, -1);
    const double C31442 = C30257 * C30272;
    const double C31438 = std::pow(C30272, -2);
    const double C30299 = C30291 / C30255;
    const double C31168 = C31167 * C30256;
    const double C31443 = std::pow(C31224, 2);
    const double C30302 = C30296 / C30255;
    const double C30397 = C30392 * C30393;
    const double C30405 = C30403 * C30393;
    const double C30416 = C30411 * C30393;
    const double C30436 = C30430 * C30393;
    const double C30471 = C30462 * C30393;
    const double C30389 = C30388 / C30386;
    const double C127 = (bs[1] * C30393 * C30388) / (C30386 * C30255);
    const double C118 = -(C30384 * bs[1] * C30388) / C30386;
    const double C266 = -(C30387 * bs[1] * C30388) / C30386;
    const double C420 = -(C30633 * bs[1] * C30388) / C30386;
    const double C30398 = C30394 * ae;
    const double C30502 = C30392 * C30497;
    const double C30505 = C30403 * C30497;
    const double C30511 = C30411 * C30497;
    const double C30525 = C30430 * C30497;
    const double C30546 = C30462 * C30497;
    const double C124 = (-(bs[1] * C30497 * C30388) / C30386) / C30232;
    const double C31431 = std::pow(C31138, 2);
    const double C31140 = C31137 * C30256;
    const double C31186 = C31185 * C30256;
    const double C31445 = std::pow(C31266, 2);
    const double C31354 = C31353 * C30235;
    const double C31366 = C31365 * C30235;
    const double C31121 = C31120 / C30232;
    const double C30293 = C30254 / C30259;
    const double C30298 = C30289 / C30259;
    const double C30297 = C30288 / C30259;
    const double C31472 = C30255 * C31441;
    const double C31473 = 4 * C31442;
    const double C30303 = 0 - C30299;
    const double C31169 = C31168 / C30255;
    const double C30306 = 0 - C30302;
    const double C30391 = -C30389;
    const double C30402 = std::pow(C30389, 4);
    const double C30429 = std::pow(C30389, 6);
    const double C139 =
        (-(C30384 * std::pow(-C30389, 3) * bs[3] * C30384 * C30387 * ae * ce) /
         C30255) /
            C30232 -
        (ae * std::pow(C30389, 2) * bs[2] * C30387 * ce) / (C30255 * C30232);
    const double C30750 = std::pow(C30389, 2);
    const double C125 =
        (C30384 * std::pow(C30389, 2) * bs[2] * C30497) / C30232 -
        (ae * bs[1] * C30388) / (C30386 * C30232);
    const double C30400 = C30398 * ce;
    const double C31141 = C31140 / C30255;
    const double C31187 = C31186 / C30255;
    const double C31355 = C31354 / C30232;
    const double C31367 = C31366 / C30232;
    const double C31122 = -C31121;
    const double C30307 = C30303 * ce;
    const double C31170 = -C31169;
    const double C30310 = C30306 * ce;
    const double C30396 = std::pow(C30391, 3);
    const double C30410 = std::pow(C30391, 5);
    const double C30461 = std::pow(C30391, 7);
    const double C30407 = C30402 * C30405;
    const double C30507 = C30402 * C30505;
    const double C30512 = C30403 * C30402;
    const double C30440 = C30429 * C30436;
    const double C30527 = C30429 * C30525;
    const double C30547 = C30430 * C30429;
    const double C30752 = C30751 * C30750;
    const double C128 = -(C30384 * C30750 * C30751 * C30393) / C30255;
    const double C276 = (C30387 * C30750 * C30751 * C30497) / C30232;
    const double C279 = (ce * bs[1] * C30388) / (C30386 * C30255) -
                        (C30387 * C30750 * C30751 * C30393) / C30255;
    const double C433 = -(C30633 * C30750 * C30751 * C30393) / C30255;
    const double C434 = (C30633 * C30750 * C30751 * C30497) / C30232;
    const double C30404 = C30403 * C30400;
    const double C30414 = C30411 * C30400;
    const double C30433 = C30430 * C30400;
    const double C30467 = C30462 * C30400;
    const double C31142 = -C31141;
    const double C31188 = -C31187;
    const double C31356 = -C31355;
    const double C31368 = -C31367;
    const double C31123 = std::exp(C31122);
    const double C30311 = C30307 / C30255;
    const double C31171 = std::exp(C31170);
    const double C30314 = C30310 / C30255;
    const double C30399 = C30396 * C30397;
    const double C30498 = C30392 * C30396;
    const double C30503 = C30396 * C30502;
    const double C296 =
        (-(C30387 * C30396 * C30392 * C30400) / C30255) / C30232 -
        (std::pow(C30389, 2) * bs[2] * C30497 * ce) / C30395;
    const double C450 =
        (-((zP - zQ) * C30396 * C30392 * C30400) / C30255) / C30232;
    const double C30418 = C30410 * C30416;
    const double C30513 = C30410 * C30511;
    const double C30526 = C30411 * C30410;
    const double C30476 = C30461 * C30471;
    const double C30549 = C30461 * C30546;
    const double C30412 = ae * C30407;
    const double C30409 = C30384 * C30407;
    const double C30837 = C30387 * C30407;
    const double C30508 = C30384 * C30507;
    const double C30593 = C30507 * ce;
    const double C30591 = C30387 * C30507;
    const double C30515 = C30384 * C30512;
    const double C30514 = C30512 * ae;
    const double C30760 = C30512 * C30413;
    const double C30840 = C30512 * C30594;
    const double C30911 = C30387 * C30512;
    const double C30910 = C30512 * ce;
    const double C31101 = C30512 * C30637;
    const double C31104 = C30633 * C30512;
    const double C30443 = C30440 * C30413;
    const double C30463 = ae * C30440;
    const double C30459 = C30384 * C30440;
    const double C30925 = C30387 * C30440;
    const double C31000 = C30440 * C30637;
    const double C30531 = C30384 * C30527;
    const double C30649 = C30527 * C30594;
    const double C30671 = C30527 * ce;
    const double C30669 = C30387 * C30527;
    const double C30993 = C30527 * C30637;
    const double C30552 = C30547 * C30413;
    const double C30551 = C30384 * C30547;
    const double C30550 = C30547 * ae;
    const double C30929 = C30547 * C30594;
    const double C119 = C30752 * C30413 - (bs[1] * C30388) / C30386;
    const double C265 = C30387 * C30384 * C30752;
    const double C267 = C30752 * C30594 - (bs[1] * C30388) / C30386;
    const double C417 = C30633 * C30384 * C30752;
    const double C422 = C30752 * C30637 - (bs[1] * C30388) / C30386;
    const double C817 = C30633 * C30387 * C30752;
    const double C30406 = C30402 * C30404;
    const double C30417 = C30410 * C30414;
    const double C30438 = C30429 * C30433;
    const double C30474 = C30461 * C30467;
    const double C31143 = std::exp(C31142);
    const double C31189 = std::exp(C31188);
    const double C31357 = std::exp(C31356);
    const double C31369 = std::exp(C31368);
    const double C4698 = C31123 * C276;
    const double C9151 = C31123 * C434;
    const double C30238 = C30237 * C31123;
    const double C31463 = C31123 * C31427;
    const double C101 =
        (C31123 * std::pow(C31427, 2)) / C31428 + C31123 / C30236;
    const double C103 = C31430 * C31123;
    const double C13452 = C31429 * C31123;
    const double C30315 = C30311 - C30298;
    const double C30260 = C30258 * C31171;
    const double C116 = -(2 * ce * de * (yC - yD) * C31171) / (ce + de);
    const double C31225 = C31171 / C30272;
    const double C31227 = C31171 * C31224;
    const double C31234 = C31151 * C31171;
    const double C31449 = C31171 * C31226;
    const double C31476 = C31438 * C31171;
    const double C31474 = C31171 * C31443;
    const double C30318 = C30314 - C30297;
    const double C140 =
        (-(ae * C30384 * C30399) / C30255) / C30232 -
        (C30396 * C30392 * C30400) / C30395 +
        C30384 * ((-(C30384 * std::pow(C30389, 4) * bs[4] * C30400) / C30255) /
                      C30232 -
                  (ae * C30399) / C30395);
    const double C129 = -(C30399 * C30413 + C30750 * C30751 * C30393) / C30255;
    const double C130 = (-2 * C30384 * C30399) / C30255 -
                        (C30384 * (C30407 * C30413 + C30399)) / C30255;
    const double C278 =
        -(C30387 * C30384 * C30399 + C30384 * C30752 * ce) / C30255;
    const double C283 = -(C30387 * (C30387 * C30399 + C30752 * ce) +
                          C30750 * C30751 * C30393 + C30387 * C30752 * ce) /
                        C30255;
    const double C430 = -(C30633 * C30384 * C30399) / C30255;
    const double C431 = -(C30633 * (C30407 * C30413 + C30399)) / C30255;
    const double C440 = -(C30399 * C30637 + C30750 * C30751 * C30393) / C30255;
    const double C825 = -(C30633 * (C30387 * C30399 + C30752 * ce)) / C30255;
    const double C1869 = (-2 * C30633 * C30399) / C30255 -
                         (C30633 * (C30407 * C30637 + C30399)) / C30255;
    const double C30506 = C30498 * ae;
    const double C30759 = C30384 * C30498;
    const double C30839 = C30387 * C30498;
    const double C30838 = C30498 * ce;
    const double C277 = -(C30387 * (C30407 * C30413 + C30399) +
                          (C30752 + C30498 * C30413) * ce) /
                        C30255;
    const double C1040 = (-2 * (C30387 * C30399 + C30752 * ce)) / C30255 -
                         (C30387 * (C30387 * (C30387 * C30407 + C30498 * ce) +
                                    C30399 + C30387 * C30498 * ce)) /
                             C30255 -
                         ((C30752 + C30498 * C30594) * ce) / C30255;
    const double C120 =
        2 * C30384 * C30752 + C30384 * (C30752 + C30498 * C30413);
    const double C264 = C30387 * (C30752 + C30498 * C30413);
    const double C418 = C30633 * (C30752 + C30498 * C30413);
    const double C1031 =
        2 * C30387 * C30752 + C30387 * (C30752 + C30498 * C30594);
    const double C1165 = C30633 * (C30752 + C30498 * C30594);
    const double C1863 =
        2 * C30633 * C30752 + C30633 * (C30752 + C30498 * C30637);
    const double C1864 =
        3 * (C30752 + C30498 * C30637) +
        C30633 * (2 * C30633 * C30498 + C30633 * (C30498 + C30512 * C30637));
    const double C126 =
        (C30750 * C30751 * C30497 + C30384 * (C30384 * C30503 + C30752 * ae) +
         C30384 * C30752 * ae) /
        C30232;
    const double C275 = (C30387 * (C30384 * C30503 + C30752 * ae)) / C30232;
    const double C280 = (C30750 * C30751 * C30497 + C30503 * C30594) / C30232;
    const double C427 = (C30633 * (C30384 * C30503 + C30752 * ae)) / C30232;
    const double C437 = (C30750 * C30751 * C30497 + C30503 * C30637) / C30232;
    const double C822 = (C30633 * C30387 * C30503) / C30232;
    const double C1037 =
        (2 * C30387 * C30503 + C30387 * (C30503 + C30507 * C30594)) / C30232;
    const double C1174 = (C30633 * (C30503 + C30507 * C30594)) / C30232;
    const double C1872 =
        (2 * C30633 * C30503 + C30633 * (C30503 + C30507 * C30637)) / C30232;
    const double C4700 = C31123 * C296;
    const double C9153 = C31123 * C450;
    const double C30420 = C30418 * C30413;
    const double C30431 = ae * C30418;
    const double C30427 = C30384 * C30418;
    const double C30909 = C30387 * C30418;
    const double C30986 = C30418 * C30637;
    const double C30999 = C30633 * C30418;
    const double C1876 =
        (-3 * (C30407 * C30637 + C30399)) / C30255 +
        C30633 * ((-2 * C30633 * C30407) / C30255 -
                  (C30633 * (C30418 * C30637 + C30407)) / C30255);
    const double C30516 = C30384 * C30513;
    const double C30597 = C30513 * C30594;
    const double C30648 = C30513 * ce;
    const double C30646 = C30387 * C30513;
    const double C30989 = C30513 * C30637;
    const double C30992 = C30633 * C30513;
    const double C1873 =
        (3 * (C30503 + C30507 * C30637) +
         C30633 * (2 * C30633 * C30507 + C30633 * (C30507 + C30513 * C30637))) /
        C30232;
    const double C30530 = C30526 * C30413;
    const double C30529 = C30384 * C30526;
    const double C30528 = C30526 * ae;
    const double C30912 = C30526 * C30594;
    const double C30927 = C30387 * C30526;
    const double C30926 = C30526 * ce;
    const double C31105 = C30526 * C30637;
    const double C30479 = C30476 * C30413;
    const double C30553 = C30384 * C30549;
    const double C30673 = C30549 * C30594;
    const double C30415 = C30412 / C30395;
    const double C441 = -(C30409 * C30637 + C30384 * C30399) / C30255;
    const double C30596 = C30593 / C30395;
    const double C1180 = (C30387 * C30503 + C30591 * C30637) / C30232;
    const double C30517 = C30515 * ae;
    const double C30765 = 2 * C30515;
    const double C30846 = C30387 * C30515;
    const double C30845 = C30515 * ce;
    const double C30761 = C30498 + C30760;
    const double C30842 = C30498 + C30840;
    const double C30916 = 2 * C30911;
    const double C30914 = C30911 * ce;
    const double C31102 = C30498 + C31101;
    const double C31106 = 2 * C31104;
    const double C30446 = C30443 + C30418;
    const double C30468 = C30463 / C30395;
    const double C30470 = -2 * C30459;
    const double C30466 = ae * C30459;
    const double C30956 = C30387 * C30459;
    const double C31013 = C30459 * C30637;
    const double C31002 = C31000 + C30418;
    const double C30654 = C30513 + C30649;
    const double C30677 = C30671 / C30395;
    const double C30678 = 2 * C30669;
    const double C30675 = C30669 * ce;
    const double C31016 = C30669 * C30637;
    const double C30995 = C30513 + C30993;
    const double C30555 = C30526 + C30552;
    const double C30554 = C30551 * ae;
    const double C30959 = C30551 * C30594;
    const double C30935 = C30526 + C30929;
    const double C141 =
        2 * ((-(C30384 * C30406) / C30255) / C30232 - (ae * C30399) / C30395) -
        (ae * (C30407 * std::pow(C30384, 2) + C30399)) / C30395 +
        C30384 *
            ((-(ae * C30384 * C30407) / C30255) / C30232 - C30406 / C30395 +
             C30384 *
                 ((-(C30384 * std::pow(C30391, 5) * bs[5] * C30400) / C30255) /
                      C30232 -
                  (ae * C30407) / C30395));
    const double C295 = C30387 * ((-(C30384 * C30406) / C30255) / C30232 -
                                  (ae * C30399) / C30395) -
                        ((C30384 * C30396 * C30392 * C30497 +
                          bs[2] * std::pow(C30389, 2) * ae) *
                         ce) /
                            C30395;
    const double C297 = (-(C30387 * C30503 * ce) / C30255) / C30232 -
                        (C30396 * C30392 * C30400) / C30395 +
                        C30387 * ((-(C30387 * C30406) / C30255) / C30232 -
                                  (C30503 * ce) / C30395);
    const double C447 = (zP - zQ) * ((-(C30384 * C30406) / C30255) / C30232 -
                                     (ae * C30399) / C30395);
    const double C452 = (-(C30406 * std::pow(zP - zQ, 2)) / C30255) / C30232 -
                        (C30396 * C30392 * C30400) / C30395;
    const double C832 = (zP - zQ) * ((-(C30387 * C30406) / C30255) / C30232 -
                                     (C30503 * ce) / C30395);
    const double C30419 = C30384 * C30417;
    const double C30428 = C30417 / C30395;
    const double C30592 = C30387 * C30417;
    const double C1049 =
        2 * ((-(C30387 * C30406) / C30255) / C30232 - (C30503 * ce) / C30395) -
        ((C30503 + C30507 * std::pow(C30387, 2)) * ce) / C30395 +
        C30387 *
            ((-(C30387 * C30507 * ce) / C30255) / C30232 - C30406 / C30395 +
             C30387 * ((-(C30387 * C30417) / C30255) / C30232 -
                       (C30507 * ce) / C30395));
    const double C1881 =
        (-2 * C30633 * C30406) / C30395 +
        C30633 * ((-(C30417 * std::pow(C30633, 2)) / C30255) / C30232 -
                  C30406 / C30395);
    const double C30442 = C30384 * C30438;
    const double C30460 = C30438 / C30395;
    const double C30647 = C30387 * C30438;
    const double C30724 = C30438 * C30637;
    const double C30730 = C30633 * C30438;
    const double C30478 = C30384 * C30474;
    const double C30670 = C30387 * C30474;
    const double C30731 = C30474 * C30637;
    const double C31145 = C31143 * C31138;
    const double C31144 = C31143 / C30272;
    const double C31153 = C31151 * C31143;
    const double C31434 = C31143 * C31139;
    const double C31470 = C31438 * C31143;
    const double C31464 = C31143 * C31431;
    const double C31267 = C31189 / C30272;
    const double C31269 = C31189 * C31266;
    const double C31276 = C31151 * C31189;
    const double C31455 = C31189 * C31268;
    const double C31479 = C31438 * C31189;
    const double C31477 = C31189 * C31445;
    const double C31493 = C31357 * C31461;
    const double C4582 =
        (C31357 * std::pow(C31461, 2)) / C31428 + C31357 / C30236;
    const double C4584 = C31430 * C31357;
    const double C13454 = C31429 * C31357;
    const double C31494 = C31369 * C31462;
    const double C8926 =
        (C31369 * std::pow(C31462, 2)) / C31428 + C31369 / C30236;
    const double C8928 = C31430 * C31369;
    const double C19146 = C31429 * C31369;
    const double C30239 = 2 * C30238;
    const double C102 = (-2 * C31429 * C31463) / C30232;
    const double C13451 = -C31463 / C30232;
    const double C30320 = C30315 / C30272;
    const double C30319 = C30253 * C30315;
    const double C30273 = 2 * C30260;
    const double C30295 = C30260 / C30257;
    const double C263 = ((0 * ce) / C30255 - C30260 / C30257) / (2 * C30255) +
                        (0 * ce) / C30255;
    const double C561 =
        ((C31171 - (C30253 * 2 * C30260) / C30255) * ce) / C30255 -
        C30254 / C30259;
    const double C562 = (0 * ce) / C30255 - C30260 / C30257;
    const double C947 = (C31171 * std::pow(C31226, 2)) / C30257 + C31225;
    const double C31228 = C31227 * C31226;
    const double C31233 = C31227 / C30259;
    const double C31447 = C31227 / C30255;
    const double C31444 = C31151 * C31227;
    const double C262 =
        (((C31171 - (C30253 * 2 * C30260) / C30255) * ce) / C30255 -
         C30254 / C30259) /
            (2 * C30255) +
        ((C30253 * ((0 * ce) / C30255 - C30260 / C30257) + C31234) * ce) /
            C30255;
    const double C31235 = C31234 * C31226;
    const double C31453 = C31224 * C31234;
    const double C31452 = 2 * C31234;
    const double C31486 = C31234 / C31441;
    const double C1022 = C31234 / C31473;
    const double C2723 = C31234 / C30272;
    const double C31482 = C31449 / C30255;
    const double C948 = (-2 * C31151 * C31449) / C30255;
    const double C31500 = C31474 / C30257;
    const double C30324 = C30318 + C30290;
    const double C30509 = C30508 + C30506;
    const double C284 = -(C30387 * (C30387 * C30409 + C30759 * ce) +
                          C30384 * C30399 + C30387 * C30759 * ce) /
                        C30255;
    const double C826 = -(C30633 * (C30387 * C30409 + C30759 * ce)) / C30255;
    const double C268 = C30384 * C30752 + C30759 * C30594;
    const double C423 = C30384 * C30752 + C30759 * C30637;
    const double C818 = C30633 * C30387 * C30759;
    const double C1030 =
        2 * C30387 * C30759 + C30387 * (C30759 + C30515 * C30594);
    const double C1164 = C30633 * (C30759 + C30515 * C30594);
    const double C1862 =
        2 * C30633 * C30759 + C30633 * (C30759 + C30515 * C30637);
    const double C1168 = C30387 * C30752 + C30839 * C30637;
    const double C2239 =
        2 * C30633 * C30839 + C30633 * (C30839 + C30911 * C30637);
    const double C30841 = C30837 + C30838;
    const double C4710 = C31123 * C275;
    const double C13605 = C13452 * C275;
    const double C4702 = C31123 * C280;
    const double C9165 = C31123 * C427;
    const double C19443 = C13452 * C427;
    const double C9155 = C31123 * C437;
    const double C5216 = C31123 * C822;
    const double C4706 = C31123 * C1037;
    const double C5220 = C31123 * C1174;
    const double C9181 = C31123 * C1872;
    const double C30422 = C30420 + C30407;
    const double C30434 = C30431 / C30395;
    const double C30435 = -2 * C30427;
    const double C30432 = ae * C30427;
    const double C30844 = C30387 * C30427;
    const double C1039 = (-2 * (C30387 * C30409 + C30759 * ce)) / C30255 -
                         (C30387 * (C30387 * (C30387 * C30427 + C30515 * ce) +
                                    C30409 + C30387 * C30515 * ce)) /
                             C30255 -
                         ((C30759 + C30515 * C30594) * ce) / C30255;
    const double C1868 = (-2 * C30633 * C30409) / C30255 -
                         (C30633 * (C30427 * C30637 + C30409)) / C30255;
    const double C1877 =
        (-3 * (C30427 * C30637 + C30409)) / C30255 +
        C30633 * ((-2 * C30633 * C30427) / C30255 -
                  (C30633 * (C30459 * C30637 + C30427)) / C30255);
    const double C30913 = C30909 + C30910;
    const double C30987 = C30986 + C30407;
    const double C31001 = -2 * C30999;
    const double C30518 = C30516 + C30514;
    const double C30599 = C30507 + C30597;
    const double C30652 = C30648 / C30395;
    const double C30653 = 2 * C30646;
    const double C30650 = C30646 * ce;
    const double C2242 =
        (2 * C30633 * C30591 + C30633 * (C30591 + C30646 * C30637)) / C30232;
    const double C6247 =
        (3 * (C30591 + C30646 * C30637) +
         C30633 * (2 * C30633 * C30646 + C30633 * (C30646 + C30669 * C30637))) /
        C30232;
    const double C30990 = C30507 + C30989;
    const double C30994 = 2 * C30992;
    const double C10608 = C31123 * C1873;
    const double C30533 = C30512 + C30530;
    const double C30532 = C30529 * ae;
    const double C30548 = 2 * C30529;
    const double C30847 = C30529 * C30594;
    const double C30958 = C30387 * C30529;
    const double C30957 = C30529 * ce;
    const double C31112 = C30529 * C30637;
    const double C1865 =
        3 * (C30759 + C30515 * C30637) +
        C30633 * (2 * C30633 * C30515 + C30633 * (C30515 + C30529 * C30637));
    const double C30534 = C30531 + C30528;
    const double C30915 = C30512 + C30912;
    const double C30936 = 2 * C30927;
    const double C30933 = C30927 * ce;
    const double C31115 = C30927 * C30637;
    const double C6243 =
        3 * (C30839 + C30911 * C30637) +
        C30633 * (2 * C30633 * C30911 + C30633 * (C30911 + C30927 * C30637));
    const double C30932 = C30925 + C30926;
    const double C31107 = C30512 + C31105;
    const double C30482 = C30479 + C30440;
    const double C30556 = C30553 + C30550;
    const double C30679 = C30527 + C30673;
    const double C5570 = C31123 * C1180;
    const double C1167 = C30387 * C30759 + C30846 * C30637;
    const double C121 = 3 * (C30752 + C30498 * C30413) +
                        C30384 * (2 * C30759 + C30384 * C30761);
    const double C269 = C30752 + C30498 * C30413 + C30761 * C30594;
    const double C270 = C30387 * (2 * C30759 + C30384 * C30761);
    const double C419 = C30633 * (2 * C30759 + C30384 * C30761);
    const double C424 = C30752 + C30498 * C30413 + C30761 * C30637;
    const double C819 = C30633 * C30387 * C30761;
    const double C1032 = 3 * (C30752 + C30498 * C30594) +
                         C30387 * (2 * C30839 + C30387 * C30842);
    const double C1169 = C30752 + C30498 * C30594 + C30842 * C30637;
    const double C1559 = C30633 * (2 * C30839 + C30387 * C30842);
    const double C10597 =
        4 * (2 * C30633 * C30498 + C30633 * C31102) +
        C30633 * (3 * C31102 + C30633 * (2 * C30633 * C30512 +
                                         C30633 * (C30512 + C30526 * C30637)));
    const double C30449 = C30384 * C30446;
    const double C30464 = -3 * C30446;
    const double C30458 = ae * C30446;
    const double C30851 = C30387 * C30446;
    const double C30475 = C30470 / C30255;
    const double C30473 = C30466 / C30255;
    const double C31014 = C31013 + C30427;
    const double C31004 = C30633 * C31002;
    const double C30657 = C30387 * C30654;
    const double C30672 = 3 * C30654;
    const double C30668 = C30654 * ce;
    const double C30681 = C30675 / C30255;
    const double C31017 = C30646 + C31016;
    const double C30996 = C30633 * C30995;
    const double C30558 = C30384 * C30555;
    const double C30557 = C30555 * ae;
    const double C30854 = C30555 * C30594;
    const double C30962 = C30529 + C30959;
    const double C30938 = C30387 * C30935;
    const double C4712 = C31123 * C295;
    const double C13609 = C13452 * C295;
    const double C4704 = C31123 * C297;
    const double C9163 = C31123 * C447;
    const double C19447 = C13452 * C447;
    const double C9157 = C31123 * C452;
    const double C5218 = C31123 * C832;
    const double C30421 = C30419 / C30255;
    const double C1882 =
        3 * ((-(C30417 * C30637) / C30255) / C30232 - C30406 / C30395) +
        C30633 * ((-2 * C30633 * C30417) / C30395 +
                  C30633 * ((-(C30438 * C30637) / C30255) / C30232 - C30428));
    const double C30595 = C30592 / C30255;
    const double C4708 = C31123 * C1049;
    const double C9179 = C31123 * C1881;
    const double C30445 = C30442 / C30255;
    const double C30651 = C30647 / C30255;
    const double C30725 = C30724 / C30255;
    const double C30732 = -2 * C30730;
    const double C30481 = C30478 / C30255;
    const double C30676 = C30670 / C30255;
    const double C30733 = C30731 / C30255;
    const double C31146 = C31145 * C31139;
    const double C31152 = C31145 / C30259;
    const double C31435 = C31151 * C31145;
    const double C31433 = C31145 / C30255;
    const double C258 = (C31143 * std::pow(C31139, 2)) / C30257 + C31144;
    const double C31154 = C31153 * C31139;
    const double C31439 = C31138 * C31153;
    const double C31437 = 2 * C31153;
    const double C31480 = C31153 / C31441;
    const double C111 = C31153 / C31473;
    const double C2726 = C31153 / C30272;
    const double C31466 = C31434 / C30255;
    const double C259 = (-2 * C31151 * C31434) / C30255;
    const double C31495 = C31464 / C30257;
    const double C1681 = (C31189 * std::pow(C31268, 2)) / C30257 + C31267;
    const double C31270 = C31269 * C31268;
    const double C31275 = C31269 / C30259;
    const double C31448 = C31269 / C30255;
    const double C31446 = C31151 * C31269;
    const double C31277 = C31276 * C31268;
    const double C31459 = C31266 * C31276;
    const double C31458 = 2 * C31276;
    const double C31492 = C31276 / C31441;
    const double C1860 = C31276 / C31473;
    const double C3628 = C31276 / C30272;
    const double C31488 = C31455 / C30255;
    const double C1682 = (-2 * C31151 * C31455) / C30255;
    const double C31502 = C31477 / C30257;
    const double C4583 = (-2 * C31429 * C31493) / C30232;
    const double C13453 = -C31493 / C30232;
    const double C8927 = (-2 * C31429 * C31494) / C30232;
    const double C19145 = -C31494 / C30232;
    const double C114 =
        ((-C30234 / C30232) / C30236 -
         ((C31123 - (C30233 * C30239) / C30232) * be) / C30232) /
            C30236 -
        ((C30233 * ((-C30239 / C30232) / C30236 - (0 * be) / C30232) + C13452) *
         be) /
            C30232;
    const double C115 =
        ((-C30239 / C30232) / C30236 - (0 * be) / C30232) / C30236 -
        (0 * be) / C30232;
    const double C4585 = -C30239 / C30232;
    const double C13455 = (-C30234 / C30232) / C30236 -
                          ((C31123 - (C30233 * C30239) / C30232) * be) / C30232;
    const double C13456 = (-C30239 / C30232) / C30236 - (0 * be) / C30232;
    const double C13625 = C13451 * C295;
    const double C13621 = C13451 * C275;
    const double C13617 = C13451 * C297;
    const double C13613 = C13451 * C280;
    const double C13611 = C13451 * C296;
    const double C13607 = C13451 * C276;
    const double C14293 = C13451 * C832;
    const double C14289 = C13451 * C822;
    const double C14559 = C13451 * C1049;
    const double C14555 = C13451 * C1037;
    const double C14733 = C13451 * C1180;
    const double C14725 = C13451 * C1174;
    const double C19479 = C13451 * C437;
    const double C19475 = C13451 * C452;
    const double C19455 = C13451 * C427;
    const double C19451 = C13451 * C447;
    const double C19445 = C13451 * C450;
    const double C19441 = C13451 * C434;
    const double C21195 = C13451 * C1873;
    const double C21185 = C13451 * C1881;
    const double C21181 = C13451 * C1872;
    const double C113 =
        ((-(0 * be) / C30232) / C30236 -
         ((0 - (C30233 * C30234) / C30232) * be) / C30232) /
            C30236 -
        ((C30233 * ((-C30234 / C30232) / C30236 -
                    ((C31123 - (C30233 * C30239) / C30232) * be) / C30232) +
          C13451) *
         be) /
            C30232 +
        (-C30239 / C30232) / C30236 - (0 * be) / C30232;
    const double C30325 = C30319 + 0;
    const double C30292 = C30253 * C30273;
    const double C954 =
        ((-C30254 / C30255) / C30272 -
         ((C31171 - (C30253 * C30273) / C30255) * de) / C30255) /
            C30272 -
        ((C30253 * ((-C30273 / C30255) / C30272 - (0 * de) / C30255) + C31234) *
         de) /
            C30255;
    const double C955 =
        ((-C30273 / C30255) / C30272 - (0 * de) / C30255) / C30272 -
        (0 * de) / C30255;
    const double C2356 = (-C30273 / C30255) / C30272 - (0 * de) / C30255;
    const double C30305 = C30301 - C30295;
    const double C31229 = C31228 / C30257;
    const double C261 =
        (((0 - (C30253 * C30254) / C30255) * ce) / C30255 - (0 * de) / C30259) /
            (2 * C30255) +
        ((C30253 * (((C31171 - (C30253 * 2 * C30260) / C30255) * ce) / C30255 -
                    C30254 / C30259) +
          C31447) *
         ce) /
            C30255 +
        (0 * ce) / C30255 - C30260 / C30257;
    const double C31475 = 2 * C31444;
    const double C31236 = C31235 / C30255;
    const double C31485 = C31453 / C30259;
    const double C31504 = C31447 - C31482;
    const double C2349 = -C31482;
    const double C31513 = C31500 + C31225;
    const double C30328 = C30324 / C30272;
    const double C131 =
        (2 * (C30384 * C30503 + C30752 * ae) +
         C30384 * (C30503 + C30384 * C30509 + C30384 * C30498 * ae) +
         (C30752 + C30498 * C30413) * ae) /
        C30232;
    const double C274 =
        (C30387 * (C30503 + C30384 * C30509 + C30759 * ae)) / C30232;
    const double C281 =
        (C30384 * C30503 + C30752 * ae + C30509 * C30594) / C30232;
    const double C428 =
        (C30633 * (C30503 + C30384 * C30509 + C30759 * ae)) / C30232;
    const double C438 =
        (C30384 * C30503 + C30752 * ae + C30509 * C30637) / C30232;
    const double C823 = (C30633 * C30387 * C30509) / C30232;
    const double C1044 =
        (-3 * (C30387 * C30841 + C30399 + C30839 * ce)) / C30255 +
        C30387 * ((-2 * C30841) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30418 + C30512 * ce) + C30407 +
                             C30387 * C30512 * ce)) /
                      C30255 -
                  (C30842 * ce) / C30255) -
        ((2 * C30839 + C30387 * C30842) * ce) / C30255;
    const double C1177 =
        -(C30633 * (C30387 * C30841 + C30399 + C30839 * ce)) / C30255;
    const double C1183 =
        -(C30841 * C30637 + C30387 * C30399 + C30752 * ce) / C30255;
    const double C1187 = -((C30387 * (C30387 * C30418 + C30512 * ce) + C30407 +
                            C30387 * C30512 * ce) *
                               C30637 +
                           C30387 * C30841 + C30399 + C30839 * ce) /
                         C30255;
    const double C1565 =
        C30633 * ((-2 * C30841) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30418 + C30512 * ce) + C30407 +
                             C30387 * C30512 * ce)) /
                      C30255 -
                  (C30842 * ce) / C30255);
    const double C2245 =
        (-2 * C30633 * C30841) / C30255 -
        (C30633 * ((C30387 * C30418 + C30512 * ce) * C30637 + C30841)) / C30255;
    const double C133 =
        (-3 * (C30407 * C30413 + C30399)) / C30255 +
        C30384 * ((-2 * C30409) / C30255 - (C30384 * C30422) / C30255);
    const double C285 = -(C30387 * (C30387 * C30422 + C30761 * ce) +
                          C30407 * C30413 + C30399 + C30387 * C30761 * ce) /
                        C30255;
    const double C287 =
        C30387 * ((-2 * C30409) / C30255 - (C30384 * C30422) / C30255) -
        ((2 * C30759 + C30384 * C30761) * ce) / C30255;
    const double C432 =
        C30633 * ((-2 * C30409) / C30255 - (C30384 * C30422) / C30255);
    const double C442 = -(C30422 * C30637 + C30407 * C30413 + C30399) / C30255;
    const double C827 = -(C30633 * (C30387 * C30422 + C30761 * ce)) / C30255;
    const double C1867 = (-2 * C30633 * C30422) / C30255 -
                         (C30633 * (C30446 * C30637 + C30422)) / C30255;
    const double C30439 = C30435 / C30255;
    const double C30437 = C30432 / C30255;
    const double C30848 = C30844 + C30845;
    const double C30917 = C30387 * C30913;
    const double C30924 = -2 * C30913;
    const double C10599 =
        4 * ((-2 * C30633 * C30407) / C30255 - (C30633 * C30987) / C30255) +
        C30633 * ((-3 * C30987) / C30255 +
                  C30633 * ((-2 * C30633 * C30418) / C30255 -
                            (C30633 * (C30440 * C30637 + C30418)) / C30255));
    const double C31003 = C31001 / C30255;
    const double C30519 = C30384 * C30518;
    const double C30524 = 2 * C30518;
    const double C30605 = C30518 * ce;
    const double C30603 = C30387 * C30518;
    const double C1036 =
        (2 * C30387 * C30509 + C30387 * (C30509 + C30518 * C30594)) / C30232;
    const double C1173 = (C30633 * (C30509 + C30518 * C30594)) / C30232;
    const double C1871 =
        (2 * C30633 * C30509 + C30633 * (C30509 + C30518 * C30637)) / C30232;
    const double C1041 = (3 * (C30503 + C30507 * C30594) +
                          C30387 * (2 * C30591 + C30387 * C30599)) /
                         C30232;
    const double C1184 = (C30503 + C30507 * C30594 + C30599 * C30637) / C30232;
    const double C1562 = (C30633 * (2 * C30591 + C30387 * C30599)) / C30232;
    const double C6246 =
        (2 * C30633 * C30599 + C30633 * (C30599 + C30654 * C30637)) / C30232;
    const double C30655 = C30650 / C30255;
    const double C6622 = C31123 * C2242;
    const double C16089 = C13451 * C2242;
    const double C11016 = C31123 * C6247;
    const double C10600 =
        (4 * (2 * C30633 * C30507 + C30633 * C30990) +
         C30633 *
             (3 * C30990 + C30633 * (2 * C30633 * C30513 +
                                     C30633 * (C30513 + C30527 * C30637)))) /
        C30232;
    const double C30535 = C30533 * ae;
    const double C30766 = C30384 * C30533;
    const double C30769 = 3 * C30533;
    const double C30853 = C30387 * C30533;
    const double C30852 = C30533 * ce;
    const double C1038 = (-2 * (C30387 * C30422 + C30761 * ce)) / C30255 -
                         (C30387 * (C30387 * (C30387 * C30446 + C30533 * ce) +
                                    C30422 + C30387 * C30533 * ce)) /
                             C30255 -
                         ((C30761 + C30533 * C30594) * ce) / C30255;
    const double C1029 =
        2 * C30387 * C30761 + C30387 * (C30761 + C30533 * C30594);
    const double C1163 = C30633 * (C30761 + C30533 * C30594);
    const double C1861 =
        2 * C30633 * C30761 + C30633 * (C30761 + C30533 * C30637);
    const double C1866 =
        3 * (C30761 + C30533 * C30637) +
        C30633 * (2 * C30633 * C30533 + C30633 * (C30533 + C30555 * C30637));
    const double C30849 = C30515 + C30847;
    const double C30963 = 2 * C30958;
    const double C30961 = C30958 * ce;
    const double C2240 =
        2 * C30633 * C30846 + C30633 * (C30846 + C30958 * C30637);
    const double C10771 =
        3 * (C30846 + C30958 * C30637) +
        C30633 * (2 * C30633 * C30958 +
                  C30633 * (C30958 + C30387 * C30551 * C30637));
    const double C30960 = C30956 + C30957;
    const double C31113 = C30515 + C31112;
    const double C30536 = C30384 * C30534;
    const double C30545 = 2 * C30534;
    const double C30606 = C30534 * C30594;
    const double C30702 = C30534 * ce;
    const double C30700 = C30387 * C30534;
    const double C31010 = C30534 * C30637;
    const double C1874 =
        (3 * (C30509 + C30518 * C30637) +
         C30633 * (2 * C30633 * C30518 + C30633 * (C30518 + C30534 * C30637))) /
        C30232;
    const double C30918 = C30387 * C30915;
    const double C30930 = 3 * C30915;
    const double C30928 = C30915 * ce;
    const double C6242 =
        2 * C30633 * C30842 + C30633 * (C30842 + C30915 * C30637);
    const double C6244 =
        3 * (C30842 + C30915 * C30637) +
        C30633 * (2 * C30633 * C30915 + C30633 * (C30915 + C30935 * C30637));
    const double C31116 = C30911 + C31115;
    const double C30937 = C30387 * C30932;
    const double C31019 = C30932 * C30637;
    const double C6248 =
        (-3 * (C30913 * C30637 + C30841)) / C30255 +
        C30633 * ((-2 * C30633 * C30913) / C30255 -
                  (C30633 * (C30932 * C30637 + C30913)) / C30255);
    const double C31108 = C30633 * C31107;
    const double C30485 = C30384 * C30482;
    const double C1878 =
        (-3 * (C30446 * C30637 + C30422)) / C30255 +
        C30633 * ((-2 * C30633 * C30446) / C30255 -
                  (C30633 * (C30482 * C30637 + C30446)) / C30255);
    const double C30559 = C30384 * C30556;
    const double C30703 = C30556 * C30594;
    const double C30683 = C30387 * C30679;
    const double C6249 =
        (3 * (C30599 + C30654 * C30637) +
         C30633 * (2 * C30633 * C30654 + C30633 * (C30654 + C30679 * C30637))) /
        C30232;
    const double C30451 = C30449 / C30255;
    const double C30469 = C30464 / C30255;
    const double C30465 = C30458 / C30395;
    const double C30477 = -C30473;
    const double C10897 =
        4 * ((-2 * C30633 * C30427) / C30255 - (C30633 * C31014) / C30255) +
        C30633 * ((-3 * C31014) / C30255 +
                  C30633 * ((-2 * C30633 * C30459) / C30255 -
                            (C30633 * (C30384 * C30476 * C30637 + C30459)) /
                                C30255));
    const double C31005 = C31004 / C30255;
    const double C30660 = C30653 + C30657;
    const double C30674 = C30668 / C30395;
    const double C30684 = -C30681;
    const double C11008 =
        (4 * (2 * C30633 * C30646 + C30633 * C31017) +
         C30633 * (3 * C31017 +
                   C30633 * (2 * C30633 * C30669 +
                             C30633 * (C30669 + C30387 * C30549 * C30637)))) /
        C30232;
    const double C30997 = C30994 + C30996;
    const double C30560 = C30548 + C30558;
    const double C30856 = C30533 + C30854;
    const double C30965 = C30387 * C30962;
    const double C30940 = C30936 + C30938;
    const double C30423 = -C30421;
    const double C10610 = C31123 * C1882;
    const double C21191 = C13451 * C1882;
    const double C30598 = -C30595;
    const double C30448 = -C30445;
    const double C30656 = -C30651;
    const double C30726 = -C30725;
    const double C30734 = C30732 / C30395;
    const double C30484 = -C30481;
    const double C30682 = -C30676;
    const double C30735 = -C30733;
    const double C31147 = C31146 / C30257;
    const double C31467 = 2 * C31435;
    const double C31155 = C31154 / C30255;
    const double C31471 = C31439 / C30259;
    const double C31496 = C31433 - C31466;
    const double C2459 = -C31466;
    const double C31510 = C31495 + C31144;
    const double C31271 = C31270 / C30257;
    const double C31478 = 2 * C31446;
    const double C31278 = C31277 / C30255;
    const double C31491 = C31459 / C30259;
    const double C31507 = C31448 - C31488;
    const double C3120 = -C31488;
    const double C31514 = C31502 + C31267;
    const double C4725 = C4585 * C269;
    const double C4723 = C4585 * C277;
    const double C4721 = C4585 * C264;
    const double C4719 = C4585 * C1039;
    const double C4717 = C4585 * C1030;
    const double C4715 = C4585 * C284;
    const double C4713 = C4585 * C268;
    const double C4711 = C4585 * C278;
    const double C4709 = C4585 * C265;
    const double C4707 = C4585 * C1040;
    const double C4705 = C4585 * C1031;
    const double C4703 = C4585 * C283;
    const double C4701 = C4585 * C267;
    const double C4699 = C4585 * C279;
    const double C4697 = C4585 * C266;
    const double C4959 = C4585 * C270;
    const double C5231 = C4585 * C819;
    const double C5227 = C4585 * C1164;
    const double C5225 = C4585 * C826;
    const double C5223 = C4585 * C818;
    const double C5219 = C4585 * C1165;
    const double C5217 = C4585 * C825;
    const double C5215 = C4585 * C817;
    const double C5431 = C4585 * C1032;
    const double C5573 = C4585 * C1169;
    const double C5569 = C4585 * C1168;
    const double C5565 = C4585 * C1559;
    const double C6405 = C4585 * C1167;
    const double C6621 = C4585 * C2239;
    const double C9180 = C4585 * C1863;
    const double C9178 = C4585 * C1869;
    const double C9176 = C4585 * C1868;
    const double C9174 = C4585 * C1862;
    const double C9170 = C4585 * C424;
    const double C9168 = C4585 * C431;
    const double C9166 = C4585 * C418;
    const double C9164 = C4585 * C417;
    const double C9162 = C4585 * C430;
    const double C9160 = C4585 * C423;
    const double C9158 = C4585 * C441;
    const double C9156 = C4585 * C440;
    const double C9154 = C4585 * C422;
    const double C9152 = C4585 * C433;
    const double C9150 = C4585 * C420;
    const double C9430 = C4585 * C419;
    const double C10613 = C4585 * C10597;
    const double C10609 = C4585 * C1876;
    const double C10607 = C4585 * C1864;
    const double C10903 = C4585 * C1865;
    const double C10901 = C4585 * C1877;
    const double C11015 = C4585 * C6243;
    const double C13644 = C13455 * C269;
    const double C13642 = C13455 * C277;
    const double C13638 = C13455 * C264;
    const double C13634 = C13455 * C284;
    const double C13630 = C13455 * C268;
    const double C13624 = C13455 * C278;
    const double C13620 = C13455 * C265;
    const double C13616 = C13455 * C283;
    const double C13612 = C13455 * C267;
    const double C13610 = C13455 * C279;
    const double C13606 = C13455 * C266;
    const double C13952 = C13455 * C270;
    const double C14304 = C13455 * C819;
    const double C14302 = C13455 * C826;
    const double C14298 = C13455 * C818;
    const double C14292 = C13455 * C825;
    const double C14288 = C13455 * C817;
    const double C14560 = C13455 * C1032;
    const double C14558 = C13455 * C1040;
    const double C14554 = C13455 * C1031;
    const double C14738 = C13455 * C1169;
    const double C14732 = C13455 * C1168;
    const double C14724 = C13455 * C1165;
    const double C14892 = C13455 * C1039;
    const double C14888 = C13455 * C1030;
    const double C15094 = C13455 * C1164;
    const double C15236 = C13455 * C1559;
    const double C15816 = C13455 * C1167;
    const double C16088 = C13455 * C2239;
    const double C19486 = C13455 * C424;
    const double C19478 = C13455 * C422;
    const double C19474 = C13455 * C440;
    const double C19468 = C13455 * C441;
    const double C19464 = C13455 * C423;
    const double C19460 = C13455 * C431;
    const double C19456 = C13455 * C418;
    const double C19454 = C13455 * C417;
    const double C19450 = C13455 * C430;
    const double C19444 = C13455 * C433;
    const double C19440 = C13455 * C420;
    const double C19778 = C13455 * C419;
    const double C21194 = C13455 * C1864;
    const double C21190 = C13455 * C1876;
    const double C21184 = C13455 * C1869;
    const double C21180 = C13455 * C1863;
    const double C21534 = C13455 * C1862;
    const double C21530 = C13455 * C1868;
    const double C13636 = C13456 * C270;
    const double C13628 = C13456 * C269;
    const double C13626 = C13456 * C277;
    const double C13622 = C13456 * C264;
    const double C13618 = C13456 * C284;
    const double C13614 = C13456 * C268;
    const double C13608 = C13456 * C278;
    const double C13604 = C13456 * C265;
    const double C14296 = C13456 * C819;
    const double C14294 = C13456 * C826;
    const double C14290 = C13456 * C818;
    const double C14556 = C13456 * C1039;
    const double C14552 = C13456 * C1030;
    const double C14730 = C13456 * C1167;
    const double C14722 = C13456 * C1164;
    const double C19476 = C13456 * C423;
    const double C19472 = C13456 * C441;
    const double C19466 = C13456 * C424;
    const double C19458 = C13456 * C419;
    const double C19452 = C13456 * C418;
    const double C19448 = C13456 * C431;
    const double C19446 = C13456 * C430;
    const double C19442 = C13456 * C417;
    const double C21192 = C13456 * C1865;
    const double C21188 = C13456 * C1877;
    const double C21186 = C13456 * C1868;
    const double C21182 = C13456 * C1862;
    const double C30329 = C30325 * de;
    const double C30300 = C30292 / C30255;
    const double C30309 = C30253 * C30305;
    const double C30338 = C30305 / C30272;
    const double C31230 = C31225 - C31229;
    const double C31501 = C31475 / C30255;
    const double C31237 = C31233 - C31236;
    const double C31515 = C31504 / C30272;
    const double C953 =
        ((-(0 * de) / C30255) / C30272 -
         ((0 - (C30253 * C30254) / C30255) * de) / C30255) /
            C30272 -
        ((C30253 * ((-C30254 / C30255) / C30272 -
                    ((C31171 - (C30253 * C30273) / C30255) * de) / C30255) +
          C2349) *
         de) /
            C30255 +
        (-C30273 / C30255) / C30272 - (0 * de) / C30255;
    const double C4722 = C31123 * C274;
    const double C13639 = C13451 * C274;
    const double C13623 = C13452 * C274;
    const double C4714 = C31123 * C281;
    const double C13631 = C13451 * C281;
    const double C13615 = C13452 * C281;
    const double C9167 = C31123 * C428;
    const double C19457 = C13451 * C428;
    const double C19453 = C13452 * C428;
    const double C9161 = C31123 * C438;
    const double C19477 = C13452 * C438;
    const double C19465 = C13451 * C438;
    const double C5224 = C31123 * C823;
    const double C14299 = C13451 * C823;
    const double C14291 = C13452 * C823;
    const double C5433 = C4585 * C1044;
    const double C14564 = C13455 * C1044;
    const double C5221 = C4585 * C1177;
    const double C14728 = C13455 * C1177;
    const double C5571 = C4585 * C1183;
    const double C14736 = C13455 * C1183;
    const double C5575 = C4585 * C1187;
    const double C14742 = C13455 * C1187;
    const double C5567 = C4585 * C1565;
    const double C15240 = C13455 * C1565;
    const double C6623 = C4585 * C2245;
    const double C16092 = C13455 * C2245;
    const double C4727 = C4585 * C285;
    const double C13648 = C13455 * C285;
    const double C13632 = C13456 * C285;
    const double C4961 = C4585 * C287;
    const double C13640 = C13456 * C287;
    const double C13956 = C13455 * C287;
    const double C9428 = C4585 * C432;
    const double C19462 = C13456 * C432;
    const double C19774 = C13455 * C432;
    const double C9172 = C4585 * C442;
    const double C19482 = C13455 * C442;
    const double C19470 = C13456 * C442;
    const double C5233 = C4585 * C827;
    const double C14308 = C13455 * C827;
    const double C14300 = C13456 * C827;
    const double C9182 = C4585 * C1867;
    const double C21528 = C13456 * C1867;
    const double C30441 = -C30437;
    const double C1176 =
        -(C30633 * (C30387 * C30848 + C30409 + C30846 * ce)) / C30255;
    const double C1182 =
        -(C30848 * C30637 + C30387 * C30409 + C30759 * ce) / C30255;
    const double C1188 = -((C30387 * (C30387 * C30459 + C30529 * ce) + C30427 +
                            C30387 * C30529 * ce) *
                               C30637 +
                           C30387 * C30848 + C30409 + C30846 * ce) /
                         C30255;
    const double C2246 =
        (-2 * C30633 * C30848) / C30255 -
        (C30633 * ((C30387 * C30459 + C30529 * ce) * C30637 + C30848)) / C30255;
    const double C30919 = C30917 + C30407;
    const double C30931 = C30924 / C30255;
    const double C10611 = C4585 * C10599;
    const double C30520 = C30507 + C30519;
    const double C30607 = C30605 / C30395;
    const double C1179 = (C30387 * C30509 + C30603 * C30637) / C30232;
    const double C4718 = C31123 * C1036;
    const double C14553 = C13452 * C1036;
    const double C14889 = C13451 * C1036;
    const double C5228 = C31123 * C1173;
    const double C14723 = C13452 * C1173;
    const double C15095 = C13451 * C1173;
    const double C9175 = C31123 * C1871;
    const double C21183 = C13452 * C1871;
    const double C21535 = C13451 * C1871;
    const double C5432 = C31123 * C1041;
    const double C14561 = C13451 * C1041;
    const double C5574 = C31123 * C1184;
    const double C14739 = C13451 * C1184;
    const double C5566 = C31123 * C1562;
    const double C15237 = C13451 * C1562;
    const double C6626 = C31123 * C6246;
    const double C30658 = -C30655;
    const double C10614 = C31123 * C10600;
    const double C30767 = C30765 + C30766;
    const double C1166 = C30387 * C30761 + C30853 * C30637;
    const double C2241 =
        2 * C30633 * C30853 + C30633 * (C30853 + C30387 * C30555 * C30637);
    const double C30855 = C30851 + C30852;
    const double C4731 = C4585 * C1038;
    const double C14894 = C13456 * C1038;
    const double C4729 = C4585 * C1029;
    const double C14890 = C13456 * C1029;
    const double C5235 = C4585 * C1163;
    const double C15096 = C13456 * C1163;
    const double C9184 = C4585 * C1861;
    const double C21532 = C13456 * C1861;
    const double C1045 =
        (-3 * (C30387 * C30848 + C30409 + C30846 * ce)) / C30255 +
        C30387 * ((-2 * C30848) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30459 + C30529 * ce) + C30427 +
                             C30387 * C30529 * ce)) /
                      C30255 -
                  (C30849 * ce) / C30255) -
        ((2 * C30846 + C30387 * C30849) * ce) / C30255;
    const double C1566 =
        C30633 * ((-2 * C30848) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30459 + C30529 * ce) + C30427 +
                             C30387 * C30529 * ce)) /
                      C30255 -
                  (C30849 * ce) / C30255);
    const double C1033 = 3 * (C30759 + C30515 * C30594) +
                         C30387 * (2 * C30846 + C30387 * C30849);
    const double C1170 = C30759 + C30515 * C30594 + C30849 * C30637;
    const double C1560 = C30633 * (2 * C30846 + C30387 * C30849);
    const double C6514 =
        2 * C30633 * C30849 + C30633 * (C30849 + C30962 * C30637);
    const double C10784 = C4585 * C2240;
    const double C16090 = C13456 * C2240;
    const double C30964 = C30387 * C30960;
    const double C10773 =
        (-3 * (C30960 * C30637 + C30848)) / C30255 +
        C30633 * ((-2 * C30633 * C30960) / C30255 -
                  (C30633 * ((C30387 * C30384 * C30476 + C30551 * ce) * C30637 +
                             C30960)) /
                      C30255);
    const double C10895 =
        4 * (2 * C30633 * C30515 + C30633 * C31113) +
        C30633 * (3 * C31113 + C30633 * (2 * C30633 * C30529 +
                                         C30633 * (C30529 + C30551 * C30637)));
    const double C30537 = C30513 + C30536;
    const double C30608 = C30518 + C30606;
    const double C30705 = C30702 / C30395;
    const double C30706 = 2 * C30700;
    const double C30704 = C30700 * ce;
    const double C2243 =
        (2 * C30633 * C30603 + C30633 * (C30603 + C30700 * C30637)) / C30232;
    const double C10772 =
        (3 * (C30603 + C30700 * C30637) +
         C30633 * (2 * C30633 * C30700 +
                   C30633 * (C30700 + C30387 * C30556 * C30637))) /
        C30232;
    const double C31011 = C30518 + C31010;
    const double C10904 = C31123 * C1874;
    const double C21193 = C13452 * C1874;
    const double C30920 = C30916 + C30918;
    const double C30934 = C30928 / C30255;
    const double C6625 = C4585 * C6242;
    const double C11007 =
        4 * (2 * C30633 * C30911 + C30633 * C31116) +
        C30633 * (3 * C31116 +
                  C30633 * (2 * C30633 * C30927 +
                            C30633 * (C30927 + C30387 * C30547 * C30637)));
    const double C30939 = C30937 + C30418;
    const double C31020 = C31019 + C30913;
    const double C11017 = C4585 * C6248;
    const double C31109 = C31106 + C31108;
    const double C30487 = C30485 / C30255;
    const double C30561 = C30527 + C30559;
    const double C30707 = C30534 + C30703;
    const double C30686 = C30678 + C30683;
    const double C30453 = C30439 - C30451;
    const double C30480 = C30477 / C30232;
    const double C31006 = C31003 - C31005;
    const double C5424 = (4 * (2 * C30591 + C30387 * C30599) +
                          C30387 * (3 * C30599 + C30387 * C30660)) /
                         C30232;
    const double C5555 = (C30633 * (3 * C30599 + C30387 * C30660)) / C30232;
    const double C5557 =
        (2 * C30591 + C30387 * C30599 + C30660 * C30637) / C30232;
    const double C30687 = C30684 / C30232;
    const double C10601 =
        (5 * (3 * C30990 + C30633 * C30997) +
         C30633 * (4 * C30997 +
                   C30633 * (3 * C30995 +
                             C30633 * (2 * C30633 * C30527 +
                                       C30633 * (C30527 + C30549 * C30637))))) /
        C30232;
    const double C30562 = C30560 * ae;
    const double C30770 = C30384 * C30560;
    const double C1034 = 3 * (C30761 + C30533 * C30594) +
                         C30387 * (2 * C30853 + C30387 * C30856);
    const double C1171 = C30761 + C30533 * C30594 + C30856 * C30637;
    const double C1561 = C30633 * (2 * C30853 + C30387 * C30856);
    const double C30967 = C30963 + C30965;
    const double C30942 = C30387 * C30940;
    const double C30424 = C30423 / C30232;
    const double C30600 = C30598 / C30232;
    const double C30450 = C30448 / C30232;
    const double C30659 = C30656 / C30232;
    const double C30727 = C30726 / C30232;
    const double C30486 = C30484 / C30232;
    const double C30685 = C30682 / C30232;
    const double C30736 = C30735 / C30232;
    const double C31148 = C31144 - C31147;
    const double C31497 = C31467 / C30255;
    const double C31156 = C31152 - C31155;
    const double C31511 = C31496 / C30272;
    const double C31272 = C31267 - C31271;
    const double C31503 = C31478 / C30255;
    const double C31279 = C31275 - C31278;
    const double C31517 = C31507 / C30272;
    const double C4740 = C4711 + C4712;
    const double C4739 = C4709 + C4710;
    const double C4738 = C4707 + C4708;
    const double C4737 = C4705 + C4706;
    const double C4736 = C4703 + C4704;
    const double C4735 = C4701 + C4702;
    const double C4734 = C4699 + C4700;
    const double C4733 = C4697 + C4698;
    const double C5241 = C5219 + C5220;
    const double C5240 = C5217 + C5218;
    const double C5239 = C5215 + C5216;
    const double C5583 = C5569 + C5570;
    const double C6629 = C6621 + C6622;
    const double C9201 = C9180 + C9181;
    const double C9200 = C9178 + C9179;
    const double C9193 = C9164 + C9165;
    const double C9192 = C9162 + C9163;
    const double C9189 = C9156 + C9157;
    const double C9188 = C9154 + C9155;
    const double C9187 = C9152 + C9153;
    const double C9186 = C9150 + C9151;
    const double C10617 = C10609 + C10610;
    const double C10616 = C10607 + C10608;
    const double C11020 = C11015 + C11016;
    const double C13662 = C13624 + C13625;
    const double C13660 = C13620 + C13621;
    const double C13658 = C13616 + C13617;
    const double C13656 = C13612 + C13613;
    const double C13655 = C13610 + C13611;
    const double C13653 = C13606 + C13607;
    const double C14314 = C14292 + C14293;
    const double C14312 = C14288 + C14289;
    const double C14571 = C14558 + C14559;
    const double C14569 = C14554 + C14555;
    const double C14751 = C14732 + C14733;
    const double C14747 = C14724 + C14725;
    const double C16096 = C16088 + C16089;
    const double C19507 = C19478 + C19479;
    const double C19505 = C19474 + C19475;
    const double C19495 = C19454 + C19455;
    const double C19493 = C19450 + C19451;
    const double C19490 = C19444 + C19445;
    const double C19488 = C19440 + C19441;
    const double C21203 = C21194 + C21195;
    const double C21201 = C21190 + C21191;
    const double C21198 = C21184 + C21185;
    const double C21196 = C21180 + C21181;
    const double C13654 = C13608 + C13609;
    const double C13652 = C13604 + C13605;
    const double C19491 = C19446 + C19447;
    const double C19489 = C19442 + C19443;
    const double C30331 = C30329 / C30255;
    const double C30304 = C31171 - C30300;
    const double C30313 = C30309 + C31234;
    const double C30341 = C30338 - C30340;
    const double C31450 = C31230 * C31224;
    const double C31484 = C31452 + C31230;
    const double C31454 = C31237 / C30272;
    const double C31451 = C31237 * C31224;
    const double C1297 = C31515 - (C31230 * C31226) / C30255;
    const double C4745 = C4721 + C4722;
    const double C13669 = C13638 + C13639;
    const double C13661 = C13622 + C13623;
    const double C4741 = C4713 + C4714;
    const double C13665 = C13630 + C13631;
    const double C13657 = C13614 + C13615;
    const double C9194 = C9166 + C9167;
    const double C19496 = C19456 + C19457;
    const double C19494 = C19452 + C19453;
    const double C9191 = C9160 + C9161;
    const double C19506 = C19476 + C19477;
    const double C19500 = C19464 + C19465;
    const double C5243 = C5223 + C5224;
    const double C14317 = C14298 + C14299;
    const double C14313 = C14290 + C14291;
    const double C30444 = C30441 / C30232;
    const double C5229 = C4585 * C1176;
    const double C14726 = C13456 * C1176;
    const double C15098 = C13455 * C1176;
    const double C6407 = C4585 * C1182;
    const double C14734 = C13456 * C1182;
    const double C15820 = C13455 * C1182;
    const double C6411 = C4585 * C1188;
    const double C14744 = C13456 * C1188;
    const double C10786 = C4585 * C2246;
    const double C16094 = C13456 * C2246;
    const double C30921 = C30919 + C30914;
    const double C30521 = C30520 + C30517;
    const double C6406 = C31123 * C1179;
    const double C14731 = C13452 * C1179;
    const double C15817 = C13451 * C1179;
    const double C4743 = C4717 + C4718;
    const double C14568 = C14552 + C14553;
    const double C14896 = C14888 + C14889;
    const double C5245 = C5227 + C5228;
    const double C14746 = C14722 + C14723;
    const double C15102 = C15094 + C15095;
    const double C9198 = C9174 + C9175;
    const double C21197 = C21182 + C21183;
    const double C21539 = C21534 + C21535;
    const double C5439 = C5431 + C5432;
    const double C14572 = C14560 + C14561;
    const double C5585 = C5573 + C5574;
    const double C14754 = C14738 + C14739;
    const double C5581 = C5565 + C5566;
    const double C15244 = C15236 + C15237;
    const double C30661 = C30658 / C30232;
    const double C10619 = C10613 + C10614;
    const double C122 = 4 * (2 * C30759 + C30384 * C30761) +
                        C30384 * (3 * C30761 + C30384 * C30767);
    const double C271 = 2 * C30759 + C30384 * C30761 + C30767 * C30594;
    const double C272 = C30387 * (3 * C30761 + C30384 * C30767);
    const double C421 = C30633 * (3 * C30761 + C30384 * C30767);
    const double C425 = 2 * C30759 + C30384 * C30761 + C30767 * C30637;
    const double C820 = C30633 * C30387 * C30767;
    const double C1307 =
        2 * C30387 * C30767 + C30387 * (C30767 + C30560 * C30594);
    const double C1457 = C30633 * (C30767 + C30560 * C30594);
    const double C2031 = C30387 * C30767 + C30387 * C30560 * C30637;
    const double C2137 =
        2 * C30633 * C30767 + C30633 * (C30767 + C30560 * C30637);
    const double C9608 = C4585 * C1166;
    const double C15818 = C13456 * C1166;
    const double C1046 =
        (-3 * (C30387 * C30855 + C30422 + C30853 * ce)) / C30255 +
        C30387 * ((-2 * C30855) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30482 + C30555 * ce) + C30446 +
                             C30387 * C30555 * ce)) /
                      C30255 -
                  (C30856 * ce) / C30255) -
        ((2 * C30853 + C30387 * C30856) * ce) / C30255;
    const double C1175 =
        -(C30633 * (C30387 * C30855 + C30422 + C30853 * ce)) / C30255;
    const double C1181 =
        -(C30855 * C30637 + C30387 * C30422 + C30761 * ce) / C30255;
    const double C1189 = -((C30387 * (C30387 * C30482 + C30555 * ce) + C30446 +
                            C30387 * C30555 * ce) *
                               C30637 +
                           C30387 * C30855 + C30422 + C30853 * ce) /
                         C30255;
    const double C1567 =
        C30633 * ((-2 * C30855) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30482 + C30555 * ce) + C30446 +
                             C30387 * C30555 * ce)) /
                      C30255 -
                  (C30856 * ce) / C30255);
    const double C2247 =
        (-2 * C30633 * C30855) / C30255 -
        (C30633 * ((C30387 * C30482 + C30555 * ce) * C30637 + C30855)) / C30255;
    const double C5693 = C4585 * C1045;
    const double C14566 = C13456 * C1045;
    const double C5849 = C4585 * C1566;
    const double C15242 = C13456 * C1566;
    const double C5691 = C4585 * C1033;
    const double C14562 = C13456 * C1033;
    const double C6409 = C4585 * C1170;
    const double C14740 = C13456 * C1170;
    const double C5847 = C4585 * C1560;
    const double C15238 = C13456 * C1560;
    const double C30966 = C30964 + C30427;
    const double C30538 = C30537 + C30532;
    const double C1042 = (3 * (C30509 + C30518 * C30594) +
                          C30387 * (2 * C30603 + C30387 * C30608)) /
                         C30232;
    const double C1185 = (C30509 + C30518 * C30594 + C30608 * C30637) / C30232;
    const double C1563 = (C30633 * (2 * C30603 + C30387 * C30608)) / C30232;
    const double C30708 = C30704 / C30395;
    const double C10785 = C31123 * C2243;
    const double C16091 = C13452 * C2243;
    const double C10896 =
        (4 * (2 * C30633 * C30518 + C30633 * C31011) +
         C30633 *
             (3 * C31011 + C30633 * (2 * C30633 * C30534 +
                                     C30633 * (C30534 + C30556 * C30637)))) /
        C30232;
    const double C10907 = C10903 + C10904;
    const double C21202 = C21192 + C21193;
    const double C5422 = 4 * (2 * C30839 + C30387 * C30842) +
                         C30387 * (3 * C30842 + C30387 * C30920);
    const double C5552 = C30633 * (3 * C30842 + C30387 * C30920);
    const double C5553 = 2 * C30839 + C30387 * C30842 + C30920 * C30637;
    const double C6616 =
        2 * C30633 * C30920 + C30633 * (C30920 + C30940 * C30637);
    const double C6631 = C6625 + C6626;
    const double C30941 = C30939 + C30933;
    const double C11009 =
        4 * ((-2 * C30633 * C30913) / C30255 - (C30633 * C31020) / C30255) +
        C30633 *
            ((-3 * C31020) / C30255 +
             C30633 * ((-2 * C30633 * C30932) / C30255 -
                       (C30633 *
                        ((C30387 * C30476 + C30547 * ce) * C30637 + C30932)) /
                           C30255));
    const double C10598 =
        5 * (3 * C31102 + C30633 * C31109) +
        C30633 * (4 * C31109 +
                  C30633 * (3 * C31107 +
                            C30633 * (2 * C30633 * C30526 +
                                      C30633 * (C30526 + C30547 * C30637))));
    const double C30489 = C30475 - C30487;
    const double C30563 = C30561 + C30554;
    const double C30710 = C30387 * C30707;
    const double C6515 =
        (2 * C30633 * C30608 + C30633 * (C30608 + C30707 * C30637)) / C30232;
    const double C30689 = C30387 * C30686;
    const double C6617 =
        (2 * C30633 * C30660 + C30633 * (C30660 + C30686 * C30637)) / C30232;
    const double C134 =
        4 * ((-2 * C30409) / C30255 - (C30384 * C30422) / C30255) +
        C30384 * ((-3 * C30422) / C30255 + C30384 * C30453);
    const double C289 = (-2 * C30409) / C30255 - (C30384 * C30422) / C30255 +
                        C30387 * (C30387 * C30453 - (C30767 * ce) / C30255) -
                        (C30387 * C30767 * ce) / C30255;
    const double C291 = C30387 * ((-3 * C30422) / C30255 + C30384 * C30453) -
                        ((3 * C30761 + C30384 * C30767) * ce) / C30255;
    const double C435 = C30633 * ((-3 * C30422) / C30255 + C30384 * C30453);
    const double C443 =
        (-2 * C30409) / C30255 - (C30384 * C30422) / C30255 + C30453 * C30637;
    const double C829 = C30633 * (C30387 * C30453 - (C30767 * ce) / C30255);
    const double C30483 = C30480 - C30460;
    const double C10602 =
        5 * ((-3 * C30987) / C30255 + C30633 * C31006) +
        C30633 * (4 * C31006 +
                  C30633 * ((-3 * C31002) / C30255 +
                            C30633 * ((-2 * C30633 * C30440) / C30255 -
                                      (C30633 * (C30476 * C30637 + C30440)) /
                                          C30255)));
    const double C5436 = C31123 * C5424;
    const double C5956 = C31123 * C5555;
    const double C5578 = C31123 * C5557;
    const double C30690 = C30687 - C30460;
    const double C30771 = C30769 + C30770;
    const double C5686 = 4 * (2 * C30846 + C30387 * C30849) +
                         C30387 * (3 * C30849 + C30387 * C30967);
    const double C5842 = C30633 * (3 * C30849 + C30387 * C30967);
    const double C6400 = 2 * C30846 + C30387 * C30849 + C30967 * C30637;
    const double C30944 = C30930 + C30942;
    const double C30425 = C30424 - C30415;
    const double C30601 = C30600 - C30596;
    const double C30452 = C30450 - C30434;
    const double C30662 = C30659 - C30652;
    const double C30728 = C30727 - C30428;
    const double C30488 = C30486 - C30468;
    const double C30688 = C30685 - C30677;
    const double C30737 = C30736 - C30460;
    const double C31432 = C31148 * C31138;
    const double C31469 = C31437 + C31148;
    const double C31440 = C31156 / C30272;
    const double C31436 = C31156 * C31138;
    const double C557 = C31511 - (C31148 * C31139) / C30255;
    const double C31456 = C31272 * C31266;
    const double C31490 = C31458 + C31272;
    const double C31460 = C31279 / C30272;
    const double C31457 = C31279 * C31266;
    const double C2133 = C31517 - (C31272 * C31268) / C30255;
    const double C9902 = C5241 * C955;
    const double C10516 = C5241 * C263;
    const double C25484 = C5241 * C562;
    const double C25870 = C5241 * C954;
    const double C26642 = C5241 * C262;
    const double C27662 = C5241 * C2356;
    const double C9589 = C5240 * C31234;
    const double C9901 = C5240 * C948;
    const double C10515 = C5240 * C31501;
    const double C11371 = C5240 * C31234;
    const double C11813 = C5240 * C31237;
    const double C25009 = C5240 * C31171;
    const double C25483 = C5240 * C31447;
    const double C25869 = C5240 * C947;
    const double C26641 = C5240 * C31513;
    const double C27661 = C5240 * C2349;
    const double C28215 = C5240 * C31230;
    const double C9588 = C5239 * C562;
    const double C9900 = C5239 * C954;
    const double C10514 = C5239 * C262;
    const double C11370 = C5239 * C2356;
    const double C25008 = C5239 * C116;
    const double C25482 = C5239 * C561;
    const double C25868 = C5239 * C953;
    const double C26640 = C5239 * C261;
    const double C9592 = C5583 * C562;
    const double C9906 = C5583 * C954;
    const double C10520 = C5583 * C262;
    const double C11374 = C5583 * C2356;
    const double C25017 = C5583 * C116;
    const double C25876 = C5583 * C953;
    const double C26648 = C5583 * C261;
    const double C26934 = C5583 * C561;
    const double C9910 = C6629 * C954;
    const double C10524 = C6629 * C262;
    const double C10778 = C6629 * C562;
    const double C11384 = C6629 * C2356;
    const double C26734 = C6629 * C116;
    const double C27202 = C6629 * C561;
    const double C9219 = C9201 * C116;
    const double C9912 = C9201 * C953;
    const double C10526 = C9201 * C261;
    const double C10780 = C9201 * C561;
    const double C9218 = C9200 * C31171;
    const double C9911 = C9200 * C947;
    const double C10525 = C9200 * C31513;
    const double C10779 = C9200 * C31447;
    const double C11385 = C9200 * C2349;
    const double C13360 = C9200 * C31230;
    const double C9211 = C9193 * C116;
    const double C9596 = C9193 * C561;
    const double C10168 = C9193 * C953;
    const double C12080 = C9193 * C261;
    const double C9210 = C9192 * C31171;
    const double C9595 = C9192 * C31447;
    const double C10167 = C9192 * C947;
    const double C11377 = C9192 * C2349;
    const double C11823 = C9192 * C31230;
    const double C12079 = C9192 * C31513;
    const double C9207 = C9189 * C31171;
    const double C9591 = C9189 * C31447;
    const double C9905 = C9189 * C947;
    const double C10519 = C9189 * C31513;
    const double C11373 = C9189 * C2349;
    const double C11817 = C9189 * C31230;
    const double C9206 = C9188 * C116;
    const double C9590 = C9188 * C561;
    const double C9904 = C9188 * C953;
    const double C10518 = C9188 * C261;
    const double C9205 = C9187 * C31171;
    const double C9587 = C9187 * C31447;
    const double C9899 = C9187 * C947;
    const double C10513 = C9187 * C31513;
    const double C11369 = C9187 * C2349;
    const double C11811 = C9187 * C31230;
    const double C9204 = C9186 * C116;
    const double C9586 = C9186 * C561;
    const double C9898 = C9186 * C953;
    const double C10512 = C9186 * C261;
    const double C10621 = C10617 * C31171;
    const double C11014 = C10617 * C31447;
    const double C12950 = C10617 * C2349;
    const double C10620 = C10616 * C116;
    const double C11013 = C10616 * C561;
    const double C11023 = C11020 * C562;
    const double C12951 = C11020 * C2356;
    const double C26737 = C11020 * C116;
    const double C30333 = C30328 - C30331;
    const double C30308 = C30304 * ce;
    const double C2355 = (-C30290) / C30272 - (C30304 * de) / C30255;
    const double C30317 = C30313 * de;
    const double C11814 = C5241 * C30341;
    const double C1028 =
        (C30341 / C30272 + (0 * ce) / C30255) / C30272 - (0 * de) / C30255;
    const double C1306 = C30341 / C30272 - (0 * de) / C30255;
    const double C2464 = C30341 / C30272 + (0 * ce) / C30255;
    const double C31481 = C31450 / C30255;
    const double C31505 = C31484 / C30272;
    const double C31506 = C31485 + C31454;
    const double C1299 = C31454 - C31235 / C30259;
    const double C31483 = C31451 / C30255;
    const double C10285 = C9189 * C1297;
    const double C10277 = C9187 * C1297;
    const double C26341 = C5240 * C1297;
    const double C9212 = C9194 * C116;
    const double C9602 = C9194 * C561;
    const double C9209 = C9191 * C116;
    const double C9600 = C9191 * C561;
    const double C10174 = C9191 * C953;
    const double C12086 = C9191 * C261;
    const double C9594 = C5243 * C562;
    const double C10166 = C5243 * C954;
    const double C11376 = C5243 * C2356;
    const double C12078 = C5243 * C262;
    const double C25011 = C5243 * C116;
    const double C25488 = C5243 * C561;
    const double C26206 = C5243 * C953;
    const double C28552 = C5243 * C261;
    const double C30447 = C30444 - C30428;
    const double C5425 =
        4 * ((-2 * C30841) / C30255 - (C30387 * C30921) / C30255 -
             (C30842 * ce) / C30255) +
        C30387 *
            ((-3 * C30921) / C30255 +
             C30387 * ((-2 * C30913) / C30255 -
                       (C30387 * (C30387 * (C30387 * C30440 + C30526 * ce) +
                                  C30418 + C30387 * C30526 * ce)) /
                           C30255 -
                       (C30915 * ce) / C30255) -
             (C30920 * ce) / C30255) -
        ((3 * C30842 + C30387 * C30920) * ce) / C30255;
    const double C132 = (3 * (C30503 + C30384 * C30509 + C30759 * ae) +
                         C30384 * (2 * C30509 + C30384 * C30521 + C30761 * ae) +
                         (2 * C30759 + C30384 * C30761) * ae) /
                        C30232;
    const double C282 =
        (C30503 + C30384 * C30509 + C30759 * ae + C30521 * C30594) / C30232;
    const double C286 =
        (C30387 * (2 * C30509 + C30384 * C30521 + C30761 * ae)) / C30232;
    const double C429 =
        (C30633 * (2 * C30509 + C30384 * C30521 + C30761 * ae)) / C30232;
    const double C439 =
        (C30503 + C30384 * C30509 + C30759 * ae + C30521 * C30637) / C30232;
    const double C824 = (C30633 * C30387 * C30521) / C30232;
    const double C6413 = C6405 + C6406;
    const double C14750 = C14730 + C14731;
    const double C15824 = C15816 + C15817;
    const double C10170 = C5245 * C955;
    const double C11826 = C5245 * C30341;
    const double C12082 = C5245 * C263;
    const double C25486 = C5245 * C562;
    const double C26204 = C5245 * C954;
    const double C27664 = C5245 * C2356;
    const double C28550 = C5245 * C262;
    const double C9216 = C9198 * C116;
    const double C10782 = C9198 * C561;
    const double C9908 = C5585 * C955;
    const double C10522 = C5585 * C263;
    const double C11820 = C5585 * C30341;
    const double C25874 = C5585 * C954;
    const double C26646 = C5585 * C262;
    const double C26932 = C5585 * C562;
    const double C27668 = C5585 * C2356;
    const double C25872 = C5581 * C955;
    const double C26644 = C5581 * C263;
    const double C28218 = C5581 * C30341;
    const double C30663 = C30661 - C30428;
    const double C10623 = C10619 * C116;
    const double C4963 = C4585 * C271;
    const double C13646 = C13456 * C271;
    const double C13954 = C13456 * C272;
    const double C19776 = C13456 * C421;
    const double C9426 = C4585 * C425;
    const double C19484 = C13456 * C425;
    const double C14306 = C13456 * C820;
    const double C25150 = C4585 * C820;
    const double C5237 = C4585 * C1175;
    const double C15100 = C13456 * C1175;
    const double C9610 = C4585 * C1181;
    const double C15822 = C13456 * C1181;
    const double C30968 = C30966 + C30961;
    const double C30539 = C30384 * C30538;
    const double C30544 = 3 * C30538;
    const double C30613 = C30538 * ce;
    const double C30611 = C30387 * C30538;
    const double C1035 =
        (2 * C30387 * C30521 + C30387 * (C30521 + C30538 * C30594)) / C30232;
    const double C1172 = (C30633 * (C30521 + C30538 * C30594)) / C30232;
    const double C1870 =
        (2 * C30633 * C30521 + C30633 * (C30521 + C30538 * C30637)) / C30232;
    const double C5692 = C31123 * C1042;
    const double C14563 = C13452 * C1042;
    const double C6410 = C31123 * C1185;
    const double C14741 = C13452 * C1185;
    const double C5848 = C31123 * C1563;
    const double C15239 = C13452 * C1563;
    const double C10790 = C10784 + C10785;
    const double C16097 = C16090 + C16091;
    const double C10909 = C10907 * C116;
    const double C5435 = C4585 * C5422;
    const double C5955 = C4585 * C5552;
    const double C5577 = C4585 * C5553;
    const double C9914 = C6631 * C955;
    const double C10528 = C6631 * C263;
    const double C13363 = C6631 * C30341;
    const double C27204 = C6631 * C562;
    const double C29684 = C6631 * C2356;
    const double C30943 = C30387 * C30941;
    const double C6245 = (-2 * C30633 * C30921) / C30255 -
                         (C30633 * (C30941 * C30637 + C30921)) / C30255;
    const double C6250 =
        (-3 * (C30941 * C30637 + C30921)) / C30255 +
        C30633 * ((-2 * C30633 * C30941) / C30255 -
                  (C30633 * ((C30387 * (C30387 * C30476 + C30547 * ce) +
                              C30440 + C30387 * C30547 * ce) *
                                 C30637 +
                             C30941)) /
                      C30255);
    const double C30491 = C30384 * C30489;
    const double C1309 =
        2 * (C30387 * C30453 - (C30767 * ce) / C30255) +
        C30387 * (C30453 + C30387 * (C30387 * C30489 - (C30560 * ce) / C30255) -
                  (C30387 * C30560 * ce) / C30255) -
        ((C30767 + C30560 * C30594) * ce) / C30255;
    const double C1459 =
        C30633 * (C30453 + C30387 * (C30387 * C30489 - (C30560 * ce) / C30255) -
                  (C30387 * C30560 * ce) / C30255);
    const double C2033 = C30387 * C30453 - (C30767 * ce) / C30255 +
                         (C30387 * C30489 - (C30560 * ce) / C30255) * C30637;
    const double C2139 =
        2 * C30633 * C30453 + C30633 * (C30453 + C30489 * C30637);
    const double C30564 = C30384 * C30563;
    const double C30614 = C30563 * C30594;
    const double C1875 =
        (3 * (C30521 + C30538 * C30637) +
         C30633 * (2 * C30633 * C30538 + C30633 * (C30538 + C30563 * C30637))) /
        C30232;
    const double C30713 = C30706 + C30710;
    const double C30692 = C30672 + C30689;
    const double C4965 = C4585 * C289;
    const double C13650 = C13456 * C289;
    const double C13958 = C13456 * C291;
    const double C19772 = C13456 * C435;
    const double C9424 = C4585 * C443;
    const double C19480 = C13456 * C443;
    const double C14310 = C13456 * C829;
    const double C25152 = C4585 * C829;
    const double C123 = 5 * (3 * C30761 + C30384 * C30767) +
                        C30384 * (4 * C30767 + C30384 * C30771);
    const double C273 = 3 * C30761 + C30384 * C30767 + C30771 * C30594;
    const double C426 = 3 * C30761 + C30384 * C30767 + C30771 * C30637;
    const double C563 = C30387 * (4 * C30767 + C30384 * C30771);
    const double C667 = C30633 * (4 * C30767 + C30384 * C30771);
    const double C821 = C30633 * C30387 * C30771;
    const double C5423 = 5 * (3 * C30842 + C30387 * C30920) +
                         C30387 * (4 * C30920 + C30387 * C30944);
    const double C5554 = 3 * C30842 + C30387 * C30920 + C30944 * C30637;
    const double C5950 = C30633 * (4 * C30920 + C30387 * C30944);
    const double C142 =
        3 * ((-(ae * C30409) / C30255) / C30232 - C30406 / C30395 +
             C30384 * C30425) +
        (((-2 * C30409) / C30255 - (C30384 * C30422) / C30255) * ae) / C30232 +
        C30384 *
            (2 * C30425 - (ae * C30422) / C30395 +
             C30384 *
                 ((-(ae * C30384 * C30418) / C30255) / C30232 -
                  C30417 / C30395 +
                  C30384 * ((-(C30384 * std::pow(C30389, 6) * bs[6] * C30400) /
                             C30255) /
                                C30232 -
                            (ae * C30418) / C30395)));
    const double C294 =
        C30387 * ((-(ae * C30409) / C30255) / C30232 - C30406 / C30395 +
                  C30384 * C30425) -
        ((C30396 * C30392 * C30497 +
          C30384 * (C30384 * C30402 * C30403 * C30497 + C30498 * ae) +
          C30384 * C30498 * ae) *
         ce) /
            C30395;
    const double C298 = (-(C30384 * C30406) / C30255) / C30232 -
                        (ae * C30399) / C30395 -
                        (C30387 * C30509 * ce) / C30395 +
                        C30387 * (C30387 * C30425 - (C30509 * ce) / C30395);
    const double C448 = (zP - zQ) * ((-(ae * C30409) / C30255) / C30232 -
                                     C30406 / C30395 + C30384 * C30425);
    const double C453 = (-(C30384 * C30406) / C30255) / C30232 -
                        (ae * C30399) / C30395 + C30425 * std::pow(zP - zQ, 2);
    const double C833 = (zP - zQ) * (C30387 * C30425 - (C30509 * ce) / C30395);
    const double C1050 =
        3 * ((-(C30591 * ce) / C30255) / C30232 - C30406 / C30395 +
             C30387 * C30601) -
        ((2 * C30591 + C30387 * C30599) * ce) / C30395 +
        C30387 *
            (2 * C30601 - (C30599 * ce) / C30395 +
             C30387 * ((-(C30387 * C30513 * ce) / C30255) / C30232 - C30428 +
                       C30387 * ((-(C30387 * C30438) / C30255) / C30232 -
                                 (C30513 * ce) / C30395)));
    const double C1192 = (zP - zQ) * ((-(C30591 * ce) / C30255) / C30232 -
                                      C30406 / C30395 + C30387 * C30601);
    const double C1195 = (-(C30387 * C30406) / C30255) / C30232 -
                         (C30503 * ce) / C30395 + C30601 * std::pow(zP - zQ, 2);
    const double C1196 = (-(C30591 * ce) / C30255) / C30232 - C30406 / C30395 +
                         C30387 * C30601 +
                         ((-(C30387 * C30513 * ce) / C30255) / C30232 - C30428 +
                          C30387 * ((-(C30387 * C30438) / C30255) / C30232 -
                                    (C30513 * ce) / C30395)) *
                             std::pow(zP - zQ, 2);
    const double C1568 =
        (zP - zQ) *
        (2 * C30601 - (C30599 * ce) / C30395 +
         C30387 * ((-(C30387 * C30513 * ce) / C30255) / C30232 - C30428 +
                   C30387 * ((-(C30387 * C30438) / C30255) / C30232 -
                             (C30513 * ce) / C30395)));
    const double C2248 =
        2 * C30633 * C30601 +
        C30633 * (C30601 + ((-(C30387 * C30438) / C30255) / C30232 -
                            (C30513 * ce) / C30395) *
                               C30637);
    const double C30454 = C30384 * C30452;
    const double C30457 = 2 * C30452;
    const double C30604 = C30387 * C30452;
    const double C30711 = C30452 - C30708;
    const double C1048 =
        2 * (C30387 * C30425 - (C30509 * ce) / C30395) -
        ((C30509 + C30518 * std::pow(C30387, 2)) * ce) / C30395 +
        C30387 * (C30425 - (C30387 * C30518 * ce) / C30395 +
                  C30387 * (C30387 * C30452 - (C30518 * ce) / C30395));
    const double C1880 =
        2 * C30633 * C30425 + C30633 * (C30425 + C30452 * std::pow(C30633, 2));
    const double C30664 = C30387 * C30662;
    const double C30667 = 2 * C30662;
    const double C10603 =
        4 * ((-2 * C30633 * C30417) / C30395 + C30633 * C30728) +
        C30633 * (3 * C30728 +
                  C30633 * ((-2 * C30633 * C30438) / C30395 +
                            C30633 * ((-(C30474 * C30637) / C30255) / C30232 -
                                      C30460)));
    const double C30490 = C30384 * C30488;
    const double C30701 = C30387 * C30488;
    const double C30742 = C30488 * C30637;
    const double C1883 =
        3 * (C30425 + C30452 * C30637) +
        C30633 * (2 * C30633 * C30452 + C30633 * (C30452 + C30488 * C30637));
    const double C30691 = C30387 * C30688;
    const double C30745 = C30688 * C30637;
    const double C6252 =
        3 * (C30601 + C30662 * C30637) +
        C30633 * (2 * C30633 * C30662 + C30633 * (C30662 + C30688 * C30637));
    const double C30738 = C30633 * C30737;
    const double C31465 = C31432 / C30255;
    const double C31498 = C31469 / C30272;
    const double C31499 = C31471 + C31440;
    const double C559 = C31440 - C31154 / C30259;
    const double C31468 = C31436 / C30255;
    const double C31487 = C31456 / C30255;
    const double C31508 = C31490 / C30272;
    const double C31509 = C31491 + C31460;
    const double C2135 = C31460 - C31277 / C30259;
    const double C31489 = C31457 / C30255;
    const double C10606 = C9218 + C9219;
    const double C11012 = C10779 + C10780;
    const double C9222 = C9206 + C9207;
    const double C10776 = C9590 + C9591;
    const double C9916 = C9904 + C9905;
    const double C10530 = C10518 + C10519;
    const double C10624 = C10620 + C10621;
    const double C30312 = C30308 / C30255;
    const double C11388 = C9198 * C2355;
    const double C11386 = C9201 * C2355;
    const double C11382 = C9191 * C2355;
    const double C11378 = C9193 * C2355;
    const double C11372 = C9188 * C2355;
    const double C11368 = C9186 * C2355;
    const double C11656 = C9194 * C2355;
    const double C12949 = C10616 * C2355;
    const double C27670 = C5583 * C2355;
    const double C27666 = C5243 * C2355;
    const double C27660 = C5239 * C2355;
    const double C29682 = C6629 * C2355;
    const double C30323 = C30317 / C30255;
    const double C10282 = C5581 * C1306;
    const double C12840 = C5581 * C2464;
    const double C31520 = C31481 + C31515;
    const double C1298 = C31505 - (C31237 * C31226) / C30255;
    const double C1021 = C31506 / C30272 - C31235 / C31472;
    const double C31516 = C31483 + C31505;
    const double C5437 = C4585 * C5425;
    const double C4726 = C31123 * C282;
    const double C13645 = C13451 * C282;
    const double C13629 = C13452 * C282;
    const double C4960 = C31123 * C286;
    const double C13637 = C13452 * C286;
    const double C13953 = C13451 * C286;
    const double C9431 = C31123 * C429;
    const double C19459 = C13452 * C429;
    const double C19779 = C13451 * C429;
    const double C9171 = C31123 * C439;
    const double C19487 = C13451 * C439;
    const double C19467 = C13452 * C439;
    const double C5232 = C31123 * C824;
    const double C14305 = C13451 * C824;
    const double C14297 = C13452 * C824;
    const double C9598 = C6413 * C562;
    const double C10172 = C6413 * C954;
    const double C11380 = C6413 * C2356;
    const double C12084 = C6413 * C262;
    const double C25014 = C6413 * C116;
    const double C26936 = C6413 * C561;
    const double C27672 = C6413 * C2355;
    const double C5688 =
        4 * ((-2 * C30848) / C30255 - (C30387 * C30968) / C30255 -
             (C30849 * ce) / C30255) +
        C30387 *
            ((-3 * C30968) / C30255 +
             C30387 *
                 ((-2 * C30960) / C30255 -
                  (C30387 * (C30387 * (C30387 * C30384 * C30476 + C30551 * ce) +
                             C30459 + C30387 * C30551 * ce)) /
                      C30255 -
                  (C30962 * ce) / C30255) -
             (C30967 * ce) / C30255) -
        ((3 * C30849 + C30387 * C30967) * ce) / C30255;
    const double C5844 =
        C30633 *
        ((-3 * C30968) / C30255 +
         C30387 *
             ((-2 * C30960) / C30255 -
              (C30387 * (C30387 * (C30387 * C30384 * C30476 + C30551 * ce) +
                         C30459 + C30387 * C30551 * ce)) /
                  C30255 -
              (C30962 * ce) / C30255) -
         (C30967 * ce) / C30255);
    const double C6402 =
        (-2 * C30848) / C30255 - (C30387 * C30968) / C30255 -
        (C30849 * ce) / C30255 +
        ((-2 * C30960) / C30255 -
         (C30387 * (C30387 * (C30387 * C30384 * C30476 + C30551 * ce) + C30459 +
                    C30387 * C30551 * ce)) /
             C30255 -
         (C30962 * ce) / C30255) *
            C30637;
    const double C6516 =
        (-2 * C30633 * C30968) / C30255 -
        (C30633 * ((C30387 * (C30387 * C30384 * C30476 + C30551 * ce) + C30459 +
                    C30387 * C30551 * ce) *
                       C30637 +
                   C30968)) /
            C30255;
    const double C30540 = C30524 + C30539;
    const double C30615 = C30613 / C30395;
    const double C1178 = (C30387 * C30521 + C30611 * C30637) / C30232;
    const double C2244 =
        (2 * C30633 * C30611 + C30633 * (C30611 + C30387 * C30563 * C30637)) /
        C30232;
    const double C4730 = C31123 * C1035;
    const double C14891 = C13452 * C1035;
    const double C5236 = C31123 * C1172;
    const double C15097 = C13452 * C1172;
    const double C9185 = C31123 * C1870;
    const double C21533 = C13452 * C1870;
    const double C5695 = C5691 + C5692;
    const double C14573 = C14562 + C14563;
    const double C6415 = C6409 + C6410;
    const double C14755 = C14740 + C14741;
    const double C5851 = C5847 + C5848;
    const double C15245 = C15238 + C15239;
    const double C10794 = C10790 * C562;
    const double C11390 = C10790 * C2356;
    const double C27071 = C10790 * C116;
    const double C5441 = C5435 + C5436;
    const double C5959 = C5955 + C5956;
    const double C5587 = C5577 + C5578;
    const double C30945 = C30943 / C30255;
    const double C6627 = C4585 * C6245;
    const double C30493 = C30469 + C30491;
    const double C30565 = C30545 + C30564;
    const double C30616 = C30538 + C30614;
    const double C5687 = (4 * (2 * C30603 + C30387 * C30608) +
                          C30387 * (3 * C30608 + C30387 * C30713)) /
                         C30232;
    const double C5843 = (C30633 * (3 * C30608 + C30387 * C30713)) / C30232;
    const double C6401 =
        (2 * C30603 + C30387 * C30608 + C30713 * C30637) / C30232;
    const double C5426 = (5 * (3 * C30599 + C30387 * C30660) +
                          C30387 * (4 * C30660 + C30387 * C30692)) /
                         C30232;
    const double C5559 =
        (3 * C30599 + C30387 * C30660 + C30692 * C30637) / C30232;
    const double C5951 = (C30633 * (4 * C30660 + C30387 * C30692)) / C30232;
    const double C4724 = C31123 * C294;
    const double C13643 = C13451 * C294;
    const double C13627 = C13452 * C294;
    const double C4716 = C31123 * C298;
    const double C13635 = C13451 * C298;
    const double C13619 = C13452 * C298;
    const double C9169 = C31123 * C448;
    const double C19461 = C13451 * C448;
    const double C19449 = C13452 * C448;
    const double C9159 = C31123 * C453;
    const double C19473 = C13452 * C453;
    const double C19469 = C13451 * C453;
    const double C5226 = C31123 * C833;
    const double C14303 = C13451 * C833;
    const double C14295 = C13452 * C833;
    const double C5434 = C31123 * C1050;
    const double C14565 = C13451 * C1050;
    const double C5222 = C31123 * C1192;
    const double C14729 = C13451 * C1192;
    const double C5572 = C31123 * C1195;
    const double C14737 = C13451 * C1195;
    const double C5576 = C31123 * C1196;
    const double C14743 = C13451 * C1196;
    const double C5568 = C31123 * C1568;
    const double C15241 = C13451 * C1568;
    const double C6624 = C31123 * C2248;
    const double C16093 = C13451 * C2248;
    const double C30455 = C30447 + C30454;
    const double C30472 = C30457 - C30465;
    const double C30609 = C30604 - C30607;
    const double C4720 = C31123 * C1048;
    const double C14557 = C13452 * C1048;
    const double C14893 = C13451 * C1048;
    const double C9177 = C31123 * C1880;
    const double C21187 = C13452 * C1880;
    const double C21531 = C13451 * C1880;
    const double C30665 = C30663 + C30664;
    const double C30680 = C30667 - C30674;
    const double C10612 = C31123 * C10603;
    const double C30492 = C30483 + C30490;
    const double C30709 = C30701 - C30705;
    const double C30743 = C30452 + C30742;
    const double C10902 = C31123 * C1883;
    const double C21189 = C13452 * C1883;
    const double C30693 = C30690 + C30691;
    const double C30746 = C30662 + C30745;
    const double C11018 = C31123 * C6252;
    const double C30739 = C30734 + C30738;
    const double C31519 = C31465 + C31511;
    const double C558 = C31498 - (C31156 * C31139) / C30255;
    const double C110 = C31499 / C30272 - C31154 / C31472;
    const double C31512 = C31468 + C31498;
    const double C31521 = C31487 + C31517;
    const double C2134 = C31508 - (C31279 * C31268) / C30255;
    const double C1859 = C31509 / C30272 - C31277 / C31472;
    const double C31518 = C31489 + C31508;
    const double C10615 = C10606 * C31357;
    const double C11019 = C10778 - C11012;
    const double C9225 = C9222 * C31357;
    const double C10788 = C10776 - C9592;
    const double C9917 = C9916 - C9906;
    const double C10531 = C10530 - C10520;
    const double C10625 = C10624 * C31357;
    const double C30316 = C30312 - C30293;
    const double C12948 = C11385 + C11386;
    const double C11392 = C11372 + C11373;
    const double C12843 = C9189 * C31520;
    const double C12835 = C9187 * C31520;
    const double C29545 = C5240 * C31520;
    const double C1018 =
        (C31513 + 2 * C31230) / C30272 - (C31520 * C31226) / C30255;
    const double C10279 = C5240 * C1298;
    const double C12837 = C5240 * C31516;
    const double C1019 =
        (C31501 + 2 * C31237 + C31520) / C30272 - (C31516 * C31226) / C30255;
    const double C1020 = (C31476 + C31234 / C30255 + C31516) / C30272 -
                         (C31506 * C31226) / C30255;
    const double C4747 = C4725 + C4726;
    const double C13672 = C13644 + C13645;
    const double C13664 = C13628 + C13629;
    const double C4967 = C4959 + C4960;
    const double C13668 = C13636 + C13637;
    const double C13960 = C13952 + C13953;
    const double C9435 = C9430 + C9431;
    const double C19497 = C19458 + C19459;
    const double C19783 = C19778 + C19779;
    const double C9196 = C9170 + C9171;
    const double C19511 = C19486 + C19487;
    const double C19501 = C19466 + C19467;
    const double C5247 = C5231 + C5232;
    const double C14320 = C14304 + C14305;
    const double C14316 = C14296 + C14297;
    const double C30541 = C30540 + C30535;
    const double C9609 = C31123 * C1178;
    const double C15819 = C13452 * C1178;
    const double C4749 = C4729 + C4730;
    const double C14897 = C14890 + C14891;
    const double C5249 = C5235 + C5236;
    const double C15103 = C15096 + C15097;
    const double C9203 = C9184 + C9185;
    const double C21538 = C21532 + C21533;
    const double C10176 = C6415 * C955;
    const double C11832 = C6415 * C30341;
    const double C12088 = C6415 * C263;
    const double C26938 = C6415 * C562;
    const double C27674 = C6415 * C2356;
    const double C26208 = C5851 * C955;
    const double C28224 = C5851 * C30341;
    const double C28554 = C5851 * C263;
    const double C26346 = C5959 * C1306;
    const double C29550 = C5959 * C2464;
    const double C10290 = C5587 * C1306;
    const double C12848 = C5587 * C2464;
    const double C25878 = C5587 * C955;
    const double C26650 = C5587 * C263;
    const double C30224 = C5587 * C30341;
    const double C30946 = C30931 - C30945;
    const double C137 = 5 * ((-3 * C30422) / C30255 + C30384 * C30453) +
                        C30384 * (4 * C30453 + C30384 * C30493);
    const double C293 = (-3 * C30422) / C30255 + C30384 * C30453 +
                        C30387 * (C30387 * C30493 - (C30771 * ce) / C30255) -
                        (C30387 * C30771 * ce) / C30255;
    const double C446 =
        (-3 * C30422) / C30255 + C30384 * C30453 + C30493 * C30637;
    const double C565 = C30387 * (4 * C30453 + C30384 * C30493) -
                        ((4 * C30767 + C30384 * C30771) * ce) / C30255;
    const double C669 = C30633 * (4 * C30453 + C30384 * C30493);
    const double C831 = C30633 * (C30387 * C30493 - (C30771 * ce) / C30255);
    const double C30566 = C30565 + C30557;
    const double C1043 = (3 * (C30521 + C30538 * C30594) +
                          C30387 * (2 * C30611 + C30387 * C30616)) /
                         C30232;
    const double C1186 = (C30521 + C30538 * C30594 + C30616 * C30637) / C30232;
    const double C1564 = (C30633 * (2 * C30611 + C30387 * C30616)) / C30232;
    const double C4746 = C4723 + C4724;
    const double C13671 = C13642 + C13643;
    const double C13663 = C13626 + C13627;
    const double C4742 = C4715 + C4716;
    const double C13667 = C13634 + C13635;
    const double C13659 = C13618 + C13619;
    const double C9195 = C9168 + C9169;
    const double C19498 = C19460 + C19461;
    const double C19492 = C19448 + C19449;
    const double C9190 = C9158 + C9159;
    const double C19504 = C19472 + C19473;
    const double C19502 = C19468 + C19469;
    const double C5244 = C5225 + C5226;
    const double C14319 = C14302 + C14303;
    const double C14315 = C14294 + C14295;
    const double C5440 = C5433 + C5434;
    const double C14574 = C14564 + C14565;
    const double C5242 = C5221 + C5222;
    const double C14749 = C14728 + C14729;
    const double C5584 = C5571 + C5572;
    const double C14753 = C14736 + C14737;
    const double C5586 = C5575 + C5576;
    const double C14756 = C14742 + C14743;
    const double C5582 = C5567 + C5568;
    const double C15246 = C15240 + C15241;
    const double C6630 = C6623 + C6624;
    const double C16098 = C16092 + C16093;
    const double C143 =
        4 * (2 * C30425 - (ae * C30422) / C30395 + C30384 * C30455) +
        (((-3 * C30422) / C30255 + C30384 * C30453) * ae) / C30232 +
        C30384 *
            (3 * C30455 + (C30453 * ae) / C30232 +
             C30384 * (2 * C30452 - (ae * C30446) / C30395 +
                       C30384 * ((-(ae * C30384 * C30440) / C30255) / C30232 -
                                 C30438 / C30395 +
                                 C30384 * ((-(C30384 * std::pow(C30391, 7) *
                                              bs[7] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30440) / C30395))));
    const double C299 = (-(ae * C30409) / C30255) / C30232 - C30406 / C30395 +
                        C30384 * C30425 - (C30387 * C30521 * ce) / C30395 +
                        C30387 * (C30387 * C30455 - (C30521 * ce) / C30395);
    const double C300 =
        C30387 * (2 * C30425 - (ae * C30422) / C30395 + C30384 * C30455) -
        ((2 * C30509 + C30384 * C30521 + (C30498 + C30512 * C30413) * ae) *
         ce) /
            C30395;
    const double C449 =
        (zP - zQ) * (2 * C30425 - (ae * C30422) / C30395 + C30384 * C30455);
    const double C454 = (-(ae * C30409) / C30255) / C30232 - C30406 / C30395 +
                        C30384 * C30425 + C30455 * std::pow(zP - zQ, 2);
    const double C834 = (zP - zQ) * (C30387 * C30455 - (C30521 * ce) / C30395);
    const double C1051 =
        3 * (C30425 - (C30603 * ce) / C30395 + C30387 * C30609) -
        ((2 * C30603 + C30387 * C30608) * ce) / C30395 +
        C30387 *
            (2 * C30609 - (C30608 * ce) / C30395 +
             C30387 * (C30452 - (C30387 * C30534 * ce) / C30395 +
                       C30387 * (C30387 * C30488 - (C30534 * ce) / C30395)));
    const double C1191 =
        (zP - zQ) * (C30425 - (C30603 * ce) / C30395 + C30387 * C30609);
    const double C1194 = C30387 * C30425 - (C30509 * ce) / C30395 +
                         C30609 * std::pow(zP - zQ, 2);
    const double C1197 = C30425 - (C30603 * ce) / C30395 + C30387 * C30609 +
                         (C30452 - (C30387 * C30534 * ce) / C30395 +
                          C30387 * (C30387 * C30488 - (C30534 * ce) / C30395)) *
                             std::pow(zP - zQ, 2);
    const double C1569 =
        (zP - zQ) *
        (2 * C30609 - (C30608 * ce) / C30395 +
         C30387 * (C30452 - (C30387 * C30534 * ce) / C30395 +
                   C30387 * (C30387 * C30488 - (C30534 * ce) / C30395)));
    const double C2249 =
        2 * C30633 * C30609 +
        C30633 * (C30609 + (C30387 * C30488 - (C30534 * ce) / C30395) * C30637);
    const double C4744 = C4719 + C4720;
    const double C14570 = C14556 + C14557;
    const double C14898 = C14892 + C14893;
    const double C9199 = C9176 + C9177;
    const double C21199 = C21186 + C21187;
    const double C21537 = C21530 + C21531;
    const double C5428 =
        4 * (2 * C30601 - (C30599 * ce) / C30395 + C30387 * C30665) -
        ((3 * C30599 + C30387 * C30660) * ce) / C30395 +
        C30387 *
            (3 * C30665 - (C30660 * ce) / C30395 +
             C30387 *
                 (2 * C30662 - (C30654 * ce) / C30395 +
                  C30387 *
                      ((-(C30387 * C30527 * ce) / C30255) / C30232 - C30460 +
                       C30387 * ((-(C30387 * C30474) / C30255) / C30232 -
                                 (C30527 * ce) / C30395))));
    const double C10618 = C10611 + C10612;
    const double C30494 = C30384 * C30492;
    const double C30612 = C30387 * C30492;
    const double C1047 =
        2 * (C30387 * C30455 - (C30521 * ce) / C30395) -
        ((C30521 + C30538 * std::pow(C30387, 2)) * ce) / C30395 +
        C30387 * (C30455 - (C30387 * C30538 * ce) / C30395 +
                  C30387 * (C30387 * C30492 - (C30538 * ce) / C30395));
    const double C1879 =
        2 * C30633 * C30455 + C30633 * (C30455 + C30492 * std::pow(C30633, 2));
    const double C1884 =
        3 * (C30455 + C30492 * C30637) +
        C30633 *
            (2 * C30633 * C30492 +
             C30633 *
                 (C30492 +
                  ((-(ae * C30384 * C30476) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30384 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395)) *
                      C30637));
    const double C30712 = C30387 * C30709;
    const double C10774 =
        3 * (C30609 + C30709 * C30637) +
        C30633 *
            (2 * C30633 * C30709 +
             C30633 *
                 (C30709 +
                  (C30387 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395) -
                   (C30556 * ce) / C30395) *
                      C30637));
    const double C10898 =
        4 * (2 * C30633 * C30452 + C30633 * C30743) +
        C30633 *
            (3 * C30743 +
             C30633 * (2 * C30633 * C30488 +
                       C30633 * (C30488 + ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395) *
                                              C30637)));
    const double C10906 = C10901 + C10902;
    const double C21200 = C21188 + C21189;
    const double C30694 = C30387 * C30693;
    const double C6251 =
        2 * C30633 * C30665 + C30633 * (C30665 + C30693 * C30637);
    const double C6253 =
        3 * (C30665 + C30693 * C30637) +
        C30633 *
            (2 * C30633 * C30693 +
             C30633 *
                 (C30693 +
                  ((-(C30387 * C30549 * ce) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30387 * ((-(C30387 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (C30549 * ce) / C30395)) *
                      C30637));
    const double C11010 =
        4 * (2 * C30633 * C30662 + C30633 * C30746) +
        C30633 *
            (3 * C30746 +
             C30633 * (2 * C30633 * C30688 +
                       C30633 * (C30688 + ((-(C30387 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (C30549 * ce) / C30395) *
                                              C30637)));
    const double C11021 = C11017 + C11018;
    const double C10604 =
        5 * (3 * C30728 + C30633 * C30739) +
        C30633 * (4 * C30739 +
                  C30633 * (3 * C30737 +
                            C30633 * ((-2 * C30633 * C30474) / C30395 +
                                      C30633 * ((-(std::pow(C30389, 8) * bs[8] *
                                                   C30400 * C30637) /
                                                 C30255) /
                                                    C30232 -
                                                C30474 / C30395))));
    const double C107 =
        (C31510 + 2 * C31148) / C30272 - (C31519 * C31139) / C30255;
    const double C108 =
        (C31497 + 2 * C31156 + C31519) / C30272 - (C31512 * C31139) / C30255;
    const double C109 = (C31470 + C31153 / C30255 + C31512) / C30272 -
                        (C31499 * C31139) / C30255;
    const double C1856 =
        (C31514 + 2 * C31272) / C30272 - (C31521 * C31268) / C30255;
    const double C1857 =
        (C31503 + 2 * C31279 + C31521) / C30272 - (C31518 * C31268) / C30255;
    const double C1858 = (C31479 + C31276 / C30255 + C31518) / C30272 -
                         (C31509 * C31268) / C30255;
    const double C30322 = C30316 / C30272;
    const double C30321 = C30253 * C30316;
    const double C12953 = C11384 - C12948;
    const double C11394 = C11392 - C11374;
    const double C9439 = C9435 * C116;
    const double C9214 = C9196 * C116;
    const double C9606 = C9196 * C561;
    const double C11660 = C9196 * C2355;
    const double C9604 = C5247 * C562;
    const double C11658 = C5247 * C2356;
    const double C25012 = C5247 * C116;
    const double C25490 = C5247 * C561;
    const double C28016 = C5247 * C2355;
    const double C135 = (4 * (2 * C30509 + C30384 * C30521 + C30761 * ae) +
                         C30384 * (3 * C30521 + C30384 * C30541 + C30767 * ae) +
                         (3 * C30761 + C30384 * C30767) * ae) /
                        C30232;
    const double C288 =
        (2 * C30509 + C30384 * C30521 + C30761 * ae + C30541 * C30594) / C30232;
    const double C290 =
        (C30387 * (3 * C30521 + C30384 * C30541 + C30767 * ae)) / C30232;
    const double C436 =
        (C30633 * (3 * C30521 + C30384 * C30541 + C30767 * ae)) / C30232;
    const double C444 =
        (2 * C30509 + C30384 * C30521 + C30761 * ae + C30541 * C30637) / C30232;
    const double C828 = (C30633 * C30387 * C30541) / C30232;
    const double C9612 = C9608 + C9609;
    const double C15825 = C15818 + C15819;
    const double C25492 = C5249 * C562;
    const double C28018 = C5249 * C2356;
    const double C9221 = C9203 * C116;
    const double C30947 = C30946 - C30934;
    const double C30567 = C30384 * C30566;
    const double C1308 =
        (2 * C30387 * C30541 + C30387 * (C30541 + C30566 * C30594)) / C30232;
    const double C1458 = (C30633 * (C30541 + C30566 * C30594)) / C30232;
    const double C2032 = (C30387 * C30541 + C30387 * C30566 * C30637) / C30232;
    const double C2138 =
        (2 * C30633 * C30541 + C30633 * (C30541 + C30566 * C30637)) / C30232;
    const double C9213 = C9195 * C31171;
    const double C9603 = C9195 * C31447;
    const double C11657 = C9195 * C2349;
    const double C9208 = C9190 * C31171;
    const double C9599 = C9190 * C31447;
    const double C10173 = C9190 * C947;
    const double C11381 = C9190 * C2349;
    const double C11829 = C9190 * C31230;
    const double C12085 = C9190 * C31513;
    const double C9597 = C5244 * C31234;
    const double C10169 = C5244 * C948;
    const double C11379 = C5244 * C31234;
    const double C11825 = C5244 * C31237;
    const double C12081 = C5244 * C31501;
    const double C25010 = C5244 * C31171;
    const double C25487 = C5244 * C31447;
    const double C26205 = C5244 * C947;
    const double C27665 = C5244 * C2349;
    const double C28221 = C5244 * C31230;
    const double C28551 = C5244 * C31513;
    const double C9903 = C5242 * C31476;
    const double C10281 = C5242 * C1299;
    const double C10517 = C5242 * C31476;
    const double C11815 = C5242 * C2723;
    const double C12839 = C5242 * C31506;
    const double C25485 = C5242 * C31234;
    const double C25871 = C5242 * C948;
    const double C26343 = C5242 * C1298;
    const double C26643 = C5242 * C31501;
    const double C27663 = C5242 * C31234;
    const double C28217 = C5242 * C31237;
    const double C29547 = C5242 * C31516;
    const double C9593 = C5584 * C31234;
    const double C9907 = C5584 * C948;
    const double C10287 = C5584 * C1298;
    const double C10521 = C5584 * C31501;
    const double C11375 = C5584 * C31234;
    const double C11819 = C5584 * C31237;
    const double C12845 = C5584 * C31516;
    const double C25016 = C5584 * C31171;
    const double C25875 = C5584 * C947;
    const double C26647 = C5584 * C31513;
    const double C26933 = C5584 * C31447;
    const double C27669 = C5584 * C2349;
    const double C30221 = C5584 * C31230;
    const double C9909 = C5586 * C31476;
    const double C10289 = C5586 * C1299;
    const double C10523 = C5586 * C31476;
    const double C11821 = C5586 * C2723;
    const double C12847 = C5586 * C31506;
    const double C25877 = C5586 * C948;
    const double C26649 = C5586 * C31501;
    const double C26935 = C5586 * C31234;
    const double C27671 = C5586 * C31234;
    const double C30223 = C5586 * C31237;
    const double C10283 = C5582 * C31486;
    const double C12841 = C5582 * C31486;
    const double C25873 = C5582 * C31476;
    const double C26345 = C5582 * C1299;
    const double C26645 = C5582 * C31476;
    const double C28219 = C5582 * C2723;
    const double C29549 = C5582 * C31506;
    const double C9913 = C6630 * C948;
    const double C10527 = C6630 * C31501;
    const double C10781 = C6630 * C31234;
    const double C11387 = C6630 * C31234;
    const double C13362 = C6630 * C31237;
    const double C26735 = C6630 * C31171;
    const double C27203 = C6630 * C31447;
    const double C29683 = C6630 * C2349;
    const double C4728 = C31123 * C299;
    const double C13649 = C13451 * C299;
    const double C13633 = C13452 * C299;
    const double C4962 = C31123 * C300;
    const double C13641 = C13452 * C300;
    const double C13957 = C13451 * C300;
    const double C9429 = C31123 * C449;
    const double C19463 = C13452 * C449;
    const double C19775 = C13451 * C449;
    const double C9173 = C31123 * C454;
    const double C19483 = C13451 * C454;
    const double C19471 = C13452 * C454;
    const double C5234 = C31123 * C834;
    const double C14309 = C13451 * C834;
    const double C14301 = C13452 * C834;
    const double C5694 = C31123 * C1051;
    const double C14567 = C13452 * C1051;
    const double C5230 = C31123 * C1191;
    const double C14727 = C13452 * C1191;
    const double C15099 = C13451 * C1191;
    const double C6408 = C31123 * C1194;
    const double C14735 = C13452 * C1194;
    const double C15821 = C13451 * C1194;
    const double C6412 = C31123 * C1197;
    const double C14745 = C13452 * C1197;
    const double C5850 = C31123 * C1569;
    const double C15243 = C13452 * C1569;
    const double C10787 = C31123 * C2249;
    const double C16095 = C13452 * C2249;
    const double C9217 = C9199 * C31171;
    const double C10783 = C9199 * C31447;
    const double C11389 = C9199 * C2349;
    const double C5438 = C31123 * C5428;
    const double C10622 = C10618 * C31171;
    const double C30495 = C30472 + C30494;
    const double C30617 = C30612 - C30615;
    const double C4732 = C31123 * C1047;
    const double C14895 = C13452 * C1047;
    const double C9183 = C31123 * C1879;
    const double C21529 = C13452 * C1879;
    const double C30714 = C30711 + C30712;
    const double C10908 = C10906 * C31171;
    const double C30695 = C30680 + C30694;
    const double C6628 = C31123 * C6251;
    const double C11024 = C11021 * C31234;
    const double C12952 = C11021 * C31234;
    const double C26736 = C11021 * C31171;
    const double C30327 = C30322 - C30323;
    const double C30326 = C30321 + C31447;
    const double C4964 = C31123 * C288;
    const double C13647 = C13452 * C288;
    const double C13955 = C13452 * C290;
    const double C19777 = C13452 * C436;
    const double C9427 = C31123 * C444;
    const double C19485 = C13452 * C444;
    const double C14307 = C13452 * C828;
    const double C25151 = C31123 * C828;
    const double C9614 = C9612 * C562;
    const double C11662 = C9612 * C2356;
    const double C25019 = C9612 * C116;
    const double C5427 =
        5 * ((-3 * C30921) / C30255 + C30387 * C30947 -
             (C30920 * ce) / C30255) +
        C30387 *
            (4 * C30947 +
             C30387 * ((-3 * C30941) / C30255 +
                       C30387 * ((-2 * C30932) / C30255 -
                                 (C30387 *
                                  (C30387 * (C30387 * C30476 + C30547 * ce) +
                                   C30440 + C30387 * C30547 * ce)) /
                                     C30255 -
                                 (C30935 * ce) / C30255) -
                       (C30940 * ce) / C30255) -
             (C30944 * ce) / C30255) -
        ((4 * C30920 + C30387 * C30944) * ce) / C30255;
    const double C5556 = C30633 * ((-3 * C30921) / C30255 + C30387 * C30947 -
                                   (C30920 * ce) / C30255);
    const double C5558 = (-2 * C30841) / C30255 - (C30387 * C30921) / C30255 -
                         (C30842 * ce) / C30255 + C30947 * C30637;
    const double C5560 =
        (-3 * C30921) / C30255 + C30387 * C30947 - (C30920 * ce) / C30255 +
        ((-3 * C30941) / C30255 +
         C30387 * ((-2 * C30932) / C30255 -
                   (C30387 * (C30387 * (C30387 * C30476 + C30547 * ce) +
                              C30440 + C30387 * C30547 * ce)) /
                       C30255 -
                   (C30935 * ce) / C30255) -
         (C30940 * ce) / C30255) *
            C30637;
    const double C5952 =
        C30633 *
        (4 * C30947 +
         C30387 *
             ((-3 * C30941) / C30255 +
              C30387 * ((-2 * C30932) / C30255 -
                        (C30387 * (C30387 * (C30387 * C30476 + C30547 * ce) +
                                   C30440 + C30387 * C30547 * ce)) /
                            C30255 -
                        (C30935 * ce) / C30255) -
              (C30940 * ce) / C30255) -
         (C30944 * ce) / C30255);
    const double C6618 =
        2 * C30633 * C30947 +
        C30633 *
            (C30947 + ((-2 * C30932) / C30255 -
                       (C30387 * (C30387 * (C30387 * C30476 + C30547 * ce) +
                                  C30440 + C30387 * C30547 * ce)) /
                           C30255 -
                       (C30935 * ce) / C30255) *
                          C30637);
    const double C30568 = C30544 + C30567;
    const double C9223 = C9208 + C9209;
    const double C10777 = C9599 + C9600;
    const double C11393 = C11381 + C11382;
    const double C10792 = C10788 - C9593;
    const double C9918 = C9917 - C9907;
    const double C10532 = C10531 - C10521;
    const double C11396 = C11394 - C11375;
    const double C11022 = C11019 + C10781;
    const double C12954 = C12953 + C11387;
    const double C4748 = C4727 + C4728;
    const double C13674 = C13648 + C13649;
    const double C13666 = C13632 + C13633;
    const double C4968 = C4961 + C4962;
    const double C13670 = C13640 + C13641;
    const double C13962 = C13956 + C13957;
    const double C9434 = C9428 + C9429;
    const double C19499 = C19462 + C19463;
    const double C19781 = C19774 + C19775;
    const double C9197 = C9172 + C9173;
    const double C19509 = C19482 + C19483;
    const double C19503 = C19470 + C19471;
    const double C5248 = C5233 + C5234;
    const double C14322 = C14308 + C14309;
    const double C14318 = C14300 + C14301;
    const double C5696 = C5693 + C5694;
    const double C14575 = C14566 + C14567;
    const double C5246 = C5229 + C5230;
    const double C14748 = C14726 + C14727;
    const double C15104 = C15098 + C15099;
    const double C6414 = C6407 + C6408;
    const double C14752 = C14734 + C14735;
    const double C15826 = C15820 + C15821;
    const double C6416 = C6411 + C6412;
    const double C14757 = C14744 + C14745;
    const double C5852 = C5849 + C5850;
    const double C15247 = C15242 + C15243;
    const double C10791 = C10786 + C10787;
    const double C16099 = C16094 + C16095;
    const double C10900 = C9216 + C9217;
    const double C5442 = C5437 + C5438;
    const double C144 =
        5 * (3 * C30455 + (C30453 * ae) / C30232 + C30384 * C30495) +
        ((4 * C30453 + C30384 * C30493) * ae) / C30232 +
        C30384 *
            (4 * C30495 + (C30493 * ae) / C30232 +
             C30384 *
                 (3 * C30492 + (C30489 * ae) / C30232 +
                  C30384 *
                      (2 * C30488 - (ae * C30482) / C30395 +
                       C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                 C30474 / C30395 +
                                 C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395)))));
    const double C301 = 2 * C30425 - (ae * C30422) / C30395 + C30384 * C30455 -
                        (C30387 * C30541 * ce) / C30395 +
                        C30387 * (C30387 * C30495 - (C30541 * ce) / C30395);
    const double C302 =
        C30387 * (3 * C30455 + (C30453 * ae) / C30232 + C30384 * C30495) -
        ((3 * C30521 + C30384 * C30541 + (2 * C30515 + C30384 * C30533) * ae) *
         ce) /
            C30395;
    const double C451 =
        (zP - zQ) * (3 * C30455 + (C30453 * ae) / C30232 + C30384 * C30495);
    const double C455 = 2 * C30425 - (ae * C30422) / C30395 + C30384 * C30455 +
                        C30495 * std::pow(zP - zQ, 2);
    const double C456 =
        3 * C30455 + (C30453 * ae) / C30232 + C30384 * C30495 +
        (3 * C30492 + (C30489 * ae) / C30232 +
         C30384 *
             (2 * C30488 - (ae * C30482) / C30395 +
              C30384 *
                  ((-(ae * C30384 * C30476) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30384 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395)))) *
            std::pow(zP - zQ, 2);
    const double C670 =
        (zP - zQ) *
        (4 * C30495 + (C30493 * ae) / C30232 +
         C30384 *
             (3 * C30492 + (C30489 * ae) / C30232 +
              C30384 * (2 * C30488 - (ae * C30482) / C30395 +
                        C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                  C30474 / C30395 +
                                  C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                               bs[8] * C30400) /
                                             C30255) /
                                                C30232 -
                                            (ae * C30476) / C30395)))));
    const double C835 = (zP - zQ) * (C30387 * C30495 - (C30541 * ce) / C30395);
    const double C1310 =
        2 * (C30387 * C30495 - (C30541 * ce) / C30395) -
        ((C30541 + C30566 * C30594) * ce) / C30395 +
        C30387 *
            (C30495 - (C30387 * C30566 * ce) / C30395 +
             C30387 *
                 (C30387 *
                      (2 * C30488 - (ae * C30482) / C30395 +
                       C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                 C30474 / C30395 +
                                 C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395))) -
                  (C30566 * ce) / C30395));
    const double C1460 =
        (zP - zQ) *
        (C30495 - (C30387 * C30566 * ce) / C30395 +
         C30387 *
             (C30387 * (2 * C30488 - (ae * C30482) / C30395 +
                        C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                  C30474 / C30395 +
                                  C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                               bs[8] * C30400) /
                                             C30255) /
                                                C30232 -
                                            (ae * C30476) / C30395))) -
              (C30566 * ce) / C30395));
    const double C2034 =
        C30387 * C30495 - (C30541 * ce) / C30395 +
        (C30387 *
             (2 * C30488 - (ae * C30482) / C30395 +
              C30384 *
                  ((-(ae * C30384 * C30476) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30384 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395))) -
         (C30566 * ce) / C30395) *
            C30637;
    const double C2140 =
        2 * C30633 * C30495 +
        C30633 *
            (C30495 +
             (2 * C30488 - (ae * C30482) / C30395 +
              C30384 *
                  ((-(ae * C30384 * C30476) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30384 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395))) *
                 C30637);
    const double C1052 =
        3 * (C30455 - (C30611 * ce) / C30395 + C30387 * C30617) -
        ((2 * C30611 + C30387 * C30616) * ce) / C30395 +
        C30387 *
            (2 * C30617 - (C30616 * ce) / C30395 +
             C30387 *
                 (C30492 - (C30387 * C30563 * ce) / C30395 +
                  C30387 *
                      (C30387 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                 C30474 / C30395 +
                                 C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395)) -
                       (C30563 * ce) / C30395)));
    const double C1190 =
        (zP - zQ) * (C30455 - (C30611 * ce) / C30395 + C30387 * C30617);
    const double C1193 = C30387 * C30455 - (C30521 * ce) / C30395 +
                         C30617 * std::pow(zP - zQ, 2);
    const double C1198 =
        C30455 - (C30611 * ce) / C30395 + C30387 * C30617 +
        (C30492 - (C30387 * C30563 * ce) / C30395 +
         C30387 *
             (C30387 *
                  ((-(ae * C30384 * C30476) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30384 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395)) -
              (C30563 * ce) / C30395)) *
            std::pow(zP - zQ, 2);
    const double C1570 =
        (zP - zQ) *
        (2 * C30617 - (C30616 * ce) / C30395 +
         C30387 *
             (C30492 - (C30387 * C30563 * ce) / C30395 +
              C30387 * (C30387 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                  C30474 / C30395 +
                                  C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                               bs[8] * C30400) /
                                             C30255) /
                                                C30232 -
                                            (ae * C30476) / C30395)) -
                        (C30563 * ce) / C30395)));
    const double C2250 =
        2 * C30633 * C30617 +
        C30633 *
            (C30617 +
             (C30387 *
                  ((-(ae * C30384 * C30476) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30384 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395)) -
              (C30563 * ce) / C30395) *
                 C30637);
    const double C4750 = C4731 + C4732;
    const double C14899 = C14894 + C14895;
    const double C9202 = C9182 + C9183;
    const double C21536 = C21528 + C21529;
    const double C5689 =
        4 * (2 * C30609 - (C30608 * ce) / C30395 + C30387 * C30714) -
        ((3 * C30608 + C30387 * C30713) * ce) / C30395 +
        C30387 *
            (3 * C30714 - (C30713 * ce) / C30395 +
             C30387 *
                 (2 * C30709 - (C30707 * ce) / C30395 +
                  C30387 *
                      (C30488 - (C30387 * C30556 * ce) / C30395 +
                       C30387 * (C30387 * ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395) -
                                 (C30556 * ce) / C30395))));
    const double C5845 =
        C30633 *
        (3 * C30714 - (C30713 * ce) / C30395 +
         C30387 *
             (2 * C30709 - (C30707 * ce) / C30395 +
              C30387 * (C30488 - (C30387 * C30556 * ce) / C30395 +
                        C30387 * (C30387 * ((-(C30384 * std::pow(C30389, 8) *
                                               bs[8] * C30400) /
                                             C30255) /
                                                C30232 -
                                            (ae * C30476) / C30395) -
                                  (C30556 * ce) / C30395))));
    const double C6403 =
        2 * C30609 - (C30608 * ce) / C30395 + C30387 * C30714 +
        (2 * C30709 - (C30707 * ce) / C30395 +
         C30387 *
             (C30488 - (C30387 * C30556 * ce) / C30395 +
              C30387 *
                  (C30387 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395) -
                   (C30556 * ce) / C30395))) *
            C30637;
    const double C6517 =
        2 * C30633 * C30714 +
        C30633 *
            (C30714 +
             (C30488 - (C30387 * C30556 * ce) / C30395 +
              C30387 *
                  (C30387 * ((-(C30384 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (ae * C30476) / C30395) -
                   (C30556 * ce) / C30395)) *
                 C30637);
    const double C5429 =
        5 * (3 * C30665 - (C30660 * ce) / C30395 + C30387 * C30695) -
        ((4 * C30660 + C30387 * C30692) * ce) / C30395 +
        C30387 *
            (4 * C30695 - (C30692 * ce) / C30395 +
             C30387 *
                 (3 * C30693 - (C30686 * ce) / C30395 +
                  C30387 *
                      (2 * C30688 - (C30679 * ce) / C30395 +
                       C30387 * ((-(C30387 * C30549 * ce) / C30255) / C30232 -
                                 C30474 / C30395 +
                                 C30387 * ((-(C30387 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (C30549 * ce) / C30395)))));
    const double C5561 =
        C30633 * (3 * C30665 - (C30660 * ce) / C30395 + C30387 * C30695);
    const double C5562 =
        2 * C30601 - (C30599 * ce) / C30395 + C30387 * C30665 + C30695 * C30637;
    const double C5563 =
        3 * C30665 - (C30660 * ce) / C30395 + C30387 * C30695 +
        (3 * C30693 - (C30686 * ce) / C30395 +
         C30387 *
             (2 * C30688 - (C30679 * ce) / C30395 +
              C30387 *
                  ((-(C30387 * C30549 * ce) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30387 * ((-(C30387 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (C30549 * ce) / C30395)))) *
            C30637;
    const double C5953 =
        C30633 *
        (4 * C30695 - (C30692 * ce) / C30395 +
         C30387 *
             (3 * C30693 - (C30686 * ce) / C30395 +
              C30387 * (2 * C30688 - (C30679 * ce) / C30395 +
                        C30387 * ((-(C30387 * C30549 * ce) / C30255) / C30232 -
                                  C30474 / C30395 +
                                  C30387 * ((-(C30387 * std::pow(C30389, 8) *
                                               bs[8] * C30400) /
                                             C30255) /
                                                C30232 -
                                            (C30549 * ce) / C30395)))));
    const double C6619 =
        2 * C30633 * C30695 +
        C30633 *
            (C30695 +
             (2 * C30688 - (C30679 * ce) / C30395 +
              C30387 *
                  ((-(C30387 * C30549 * ce) / C30255) / C30232 -
                   C30474 / C30395 +
                   C30387 * ((-(C30387 * std::pow(C30389, 8) * bs[8] * C30400) /
                              C30255) /
                                 C30232 -
                             (C30549 * ce) / C30395))) *
                 C30637);
    const double C6632 = C6627 + C6628;
    const double C11828 = C6413 * C30327;
    const double C11822 = C5243 * C30327;
    const double C11818 = C5583 * C30327;
    const double C11812 = C5239 * C30327;
    const double C13359 = C6629 * C30327;
    const double C28220 = C5245 * C30327;
    const double C28216 = C5241 * C30327;
    const double C30220 = C5585 * C30327;
    const double C1027 =
        (C30327 / C30272 + ((C30253 * C30341 + C2723) * ce) / C30255) / C30272 -
        ((C30253 * (C30341 / C30272 + (0 * ce) / C30255) + C31486) * de) /
            C30255;
    const double C1305 =
        C30327 / C30272 - ((C30253 * C30341 + C2723) * de) / C30255;
    const double C2463 =
        C30327 / C30272 + ((C30253 * C30341 + C2723) * ce) / C30255;
    const double C30330 = C30326 * de;
    const double C4969 = C4963 + C4964;
    const double C13673 = C13646 + C13647;
    const double C13961 = C13954 + C13955;
    const double C19782 = C19776 + C19777;
    const double C9433 = C9426 + C9427;
    const double C19510 = C19484 + C19485;
    const double C14321 = C14306 + C14307;
    const double C25154 = C25150 + C25151;
    const double C5957 = C4585 * C5556;
    const double C5579 = C4585 * C5558;
    const double C30569 = C30568 + C30562;
    const double C9226 = C9223 * C31357;
    const double C10789 = C9598 - C10777;
    const double C11395 = C11380 - C11393;
    const double C10796 = C10792 * C31357;
    const double C9919 = C9918 + C9908;
    const double C10533 = C10532 + C10522;
    const double C11398 = C11396 * C31357;
    const double C11025 = C11022 * C31357;
    const double C12955 = C12954 * C31357;
    const double C9438 = C9434 * C31171;
    const double C9215 = C9197 * C31171;
    const double C9607 = C9197 * C31447;
    const double C11661 = C9197 * C2349;
    const double C9605 = C5248 * C31234;
    const double C11659 = C5248 * C31234;
    const double C25013 = C5248 * C31171;
    const double C25491 = C5248 * C31447;
    const double C28017 = C5248 * C2349;
    const double C10171 = C5246 * C31476;
    const double C11827 = C5246 * C2723;
    const double C12083 = C5246 * C31476;
    const double C25489 = C5246 * C31234;
    const double C26207 = C5246 * C948;
    const double C27667 = C5246 * C31234;
    const double C28223 = C5246 * C31237;
    const double C28553 = C5246 * C31501;
    const double C9601 = C6414 * C31234;
    const double C10175 = C6414 * C948;
    const double C11383 = C6414 * C31234;
    const double C11831 = C6414 * C31237;
    const double C12087 = C6414 * C31501;
    const double C25015 = C6414 * C31171;
    const double C26937 = C6414 * C31447;
    const double C27673 = C6414 * C2349;
    const double C10177 = C6416 * C31476;
    const double C11833 = C6416 * C2723;
    const double C12089 = C6416 * C31476;
    const double C26939 = C6416 * C31234;
    const double C27675 = C6416 * C31234;
    const double C26209 = C5852 * C31476;
    const double C28225 = C5852 * C2723;
    const double C28555 = C5852 * C31476;
    const double C10795 = C10791 * C31234;
    const double C11391 = C10791 * C31234;
    const double C27070 = C10791 * C31171;
    const double C10905 = C10900 * C31357;
    const double C4966 = C31123 * C301;
    const double C13651 = C13452 * C301;
    const double C13959 = C13452 * C302;
    const double C19773 = C13452 * C451;
    const double C9425 = C31123 * C455;
    const double C19481 = C13452 * C455;
    const double C14311 = C13452 * C835;
    const double C25153 = C31123 * C835;
    const double C5238 = C31123 * C1190;
    const double C15101 = C13452 * C1190;
    const double C9611 = C31123 * C1193;
    const double C15823 = C13452 * C1193;
    const double C9220 = C9202 * C31171;
    const double C5958 = C31123 * C5561;
    const double C5580 = C31123 * C5562;
    const double C9915 = C6632 * C31476;
    const double C10529 = C6632 * C31476;
    const double C13364 = C6632 * C2723;
    const double C27205 = C6632 * C31234;
    const double C29685 = C6632 * C31234;
    const double C10288 = C5585 * C1305;
    const double C10280 = C5241 * C1305;
    const double C26344 = C5581 * C1305;
    const double C12846 = C5585 * C2463;
    const double C12838 = C5241 * C2463;
    const double C29548 = C5581 * C2463;
    const double C30332 = C30330 / C30255;
    const double C9437 = C9433 * C116;
    const double C25287 = C25154 * C116;
    const double C303 =
        3 * C30455 + (C30453 * ae) / C30232 + C30384 * C30495 -
        (C30387 * C30569 * ce) / C30395 +
        C30387 *
            (C30387 *
                 (3 * C30492 + (C30489 * ae) / C30232 +
                  C30384 *
                      (2 * C30488 - (ae * C30482) / C30395 +
                       C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                 C30474 / C30395 +
                                 C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395)))) -
             (C30569 * ce) / C30395);
    const double C566 =
        C30387 *
            (4 * C30495 + (C30493 * ae) / C30232 +
             C30384 *
                 (3 * C30492 + (C30489 * ae) / C30232 +
                  C30384 *
                      (2 * C30488 - (ae * C30482) / C30395 +
                       C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                 C30474 / C30395 +
                                 C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                              bs[8] * C30400) /
                                            C30255) /
                                               C30232 -
                                           (ae * C30476) / C30395))))) -
        ((4 * C30541 + C30384 * C30569 + (3 * C30533 + C30384 * C30560) * ae) *
         ce) /
            C30395;
    const double C836 =
        (zP - zQ) *
        (C30387 *
             (3 * C30492 + (C30489 * ae) / C30232 +
              C30384 * (2 * C30488 - (ae * C30482) / C30395 +
                        C30384 * ((-(ae * C30384 * C30476) / C30255) / C30232 -
                                  C30474 / C30395 +
                                  C30384 * ((-(C30384 * std::pow(C30389, 8) *
                                               bs[8] * C30400) /
                                             C30255) /
                                                C30232 -
                                            (ae * C30476) / C30395)))) -
         (C30569 * ce) / C30395);
    const double C136 = (5 * (3 * C30521 + C30384 * C30541 + C30767 * ae) +
                         C30384 * (4 * C30541 + C30384 * C30569 + C30771 * ae) +
                         (4 * C30767 + C30384 * C30771) * ae) /
                        C30232;
    const double C292 =
        (3 * C30521 + C30384 * C30541 + C30767 * ae + C30569 * C30594) / C30232;
    const double C445 =
        (3 * C30521 + C30384 * C30541 + C30767 * ae + C30569 * C30637) / C30232;
    const double C564 =
        (C30387 * (4 * C30541 + C30384 * C30569 + C30771 * ae)) / C30232;
    const double C668 =
        (C30633 * (4 * C30541 + C30384 * C30569 + C30771 * ae)) / C30232;
    const double C830 = (C30633 * C30387 * C30569) / C30232;
    const double C9920 = C9919 + C9909;
    const double C10534 = C10533 + C10523;
    const double C9224 = C9214 + C9215;
    const double C10793 = C10789 + C9601;
    const double C11397 = C11395 + C11383;
    const double C4970 = C4965 + C4966;
    const double C13675 = C13650 + C13651;
    const double C13963 = C13958 + C13959;
    const double C19780 = C19772 + C19773;
    const double C9432 = C9424 + C9425;
    const double C19508 = C19480 + C19481;
    const double C14323 = C14310 + C14311;
    const double C25155 = C25152 + C25153;
    const double C5250 = C5237 + C5238;
    const double C15105 = C15100 + C15101;
    const double C9613 = C9610 + C9611;
    const double C15827 = C15822 + C15823;
    const double C5960 = C5957 + C5958;
    const double C5588 = C5579 + C5580;
    const double C30334 = C30320 - C30332;
    const double C9921 = C9920 * C31357;
    const double C10535 = C10534 * C31357;
    const double C9227 = C9224 * C31357;
    const double C10797 = C10793 * C31357;
    const double C11399 = C11397 * C31357;
    const double C9436 = C9432 * C31171;
    const double C25286 = C25155 * C31171;
    const double C25493 = C5250 * C31234;
    const double C28019 = C5250 * C31234;
    const double C9615 = C9613 * C31234;
    const double C11663 = C9613 * C31234;
    const double C25018 = C9613 * C31171;
    const double C26347 = C5960 * C31486;
    const double C29551 = C5960 * C31486;
    const double C10291 = C5588 * C31486;
    const double C12849 = C5588 * C31486;
    const double C25879 = C5588 * C31476;
    const double C26651 = C5588 * C31476;
    const double C30225 = C5588 * C2723;
    const double C30335 = C30334 + C30305;
    const double C11830 = C9191 * C30335;
    const double C11824 = C9193 * C30335;
    const double C11816 = C9188 * C30335;
    const double C11810 = C9186 * C30335;
    const double C13361 = C9201 * C30335;
    const double C28222 = C5243 * C30335;
    const double C28214 = C5239 * C30335;
    const double C30222 = C5583 * C30335;
    const double C1024 =
        (((((0 - (C30253 * C30288) / C30255) * ce) / C30255 -
           (0 * de) / C30259 + (2 * C30289) / C30255) /
              C30272 -
          ((C30253 * C30324 + 0) * de) / C30255 + C30298 - C30311) /
             C30272 +
         ((C30253 * C30333 + 0) * ce) / C30255) /
            C30272 -
        ((C30253 * (C30333 / C30272 +
                    ((C30253 * C30335 + C31230) * ce) / C30255 + C30327) +
          C31520) *
         de) /
            C30255 +
        C30335 / C30272 + ((C30253 * C30327 + C31237) * ce) / C30255 +
        2 * (C30305 / C30272 - (0 * de) / C30255);
    const double C1025 =
        (C30333 / C30272 + ((C30253 * C30335 + C31230) * ce) / C30255 +
         C30327) /
            C30272 -
        ((C30253 * (C30335 / C30272 +
                    ((C30253 * C30327 + C31237) * ce) / C30255 + 2 * C30341) +
          C31516) *
         de) /
            C30255 +
        2 * (C30327 / C30272 + ((C30253 * C30341 + C2723) * ce) / C30255);
    const double C1026 =
        (C30335 / C30272 + ((C30253 * C30327 + C31237) * ce) / C30255 +
         2 * C30341) /
            C30272 -
        ((C30253 *
              (C30327 / C30272 + ((C30253 * C30341 + C2723) * ce) / C30255) +
          C31506) *
         de) /
            C30255 +
        3 * (C30341 / C30272 + (0 * ce) / C30255);
    const double C1303 =
        C30333 / C30272 - ((C30253 * C30335 + C31230) * de) / C30255 + C30327;
    const double C1304 = C30335 / C30272 -
                         ((C30253 * C30327 + C31237) * de) / C30255 +
                         2 * C30341;
    const double C2461 =
        C30333 / C30272 + ((C30253 * C30335 + C31230) * ce) / C30255 + C30327;
    const double C2462 = C30335 / C30272 +
                         ((C30253 * C30327 + C31237) * ce) / C30255 +
                         2 * C30341;
    const double C13358 = C11816 + C11817;
    const double C10284 = C9188 * C1303;
    const double C10276 = C9186 * C1303;
    const double C26340 = C5239 * C1303;
    const double C10286 = C5583 * C1304;
    const double C10278 = C5239 * C1304;
    const double C26342 = C5241 * C1304;
    const double C12842 = C9188 * C2461;
    const double C12834 = C9186 * C2461;
    const double C29544 = C5239 * C2461;
    const double C12844 = C5583 * C2462;
    const double C12836 = C5239 * C2462;
    const double C29546 = C5241 * C2462;
    const double C13365 = C13358 - C11818;
    const double C13366 = C13365 - C11819;
    const double C13367 = C13366 + C11820;
    const double C13368 = C13367 + C11821;
    const double C13369 = C13368 * C31357;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C30335 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31230 -
            (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
            (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
               C13453 +
           ((C13653 + C13652) * C30335 + (C13655 + C13654) * C31230 -
            (C13657 + C13656) * C30327 - (C13659 + C13658) * C31237 +
            (C14569 + C14568) * C30341 + (C14571 + C14570) * C2723) *
               C13454) *
              C31369 * C31148 +
          (((C13660 + C13661) * C30327 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31230 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C30335) +
            (C13662 + C13663) * C31237 - (C13664 + C13665) * C30341 -
            (C13666 + C13667) * C2723) *
               C13453 +
           ((C13665 + C13664) * C30327 -
            ((C13663 + C13662) * C31230 + (C13661 + C13660) * C30335) +
            (C13667 + C13666) * C31237 - (C14897 + C14896) * C30341 -
            (C14899 + C14898) * C2723) *
               C13454) *
              C31369 * C31156 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C30335 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31230 -
            (C13668 + C13669) * C30327 - (C13670 + C13671) * C31237 +
            (C13672 + C13673) * C30341 + (C13674 + C13675) * C2723) *
               C13453 +
           ((C13669 + C13668) * C30335 + (C13671 + C13670) * C31230 -
            (C13673 + C13672) * C30327 - (C13675 + C13674) * C31237 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C30341 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C2723) *
               C13454) *
              C31369 * C2726) *
         C31189) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C30335 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31230 -
             (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
             (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
                C13453 +
            ((C13653 + C13652) * C30335 + (C13655 + C13654) * C31230 -
             (C13657 + C13656) * C30327 - (C13659 + C13658) * C31237 +
             (C14569 + C14568) * C30341 + (C14571 + C14570) * C2723) *
                C13454) *
               C31369 * C2459 +
           (((C13660 + C13661) * C30327 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31230 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C30335) +
             (C13662 + C13663) * C31237 - (C13664 + C13665) * C30341 -
             (C13666 + C13667) * C2723) *
                C13453 +
            ((C13665 + C13664) * C30327 -
             ((C13663 + C13662) * C31230 + (C13661 + C13660) * C30335) +
             (C13667 + C13666) * C31237 - (C14897 + C14896) * C30341 -
             (C14899 + C14898) * C2723) *
                C13454) *
               C31369 * C31153) *
              C31448 +
          ((((C14312 + C14313) * C30327 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31230 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C30335) +
             (C14314 + C14315) * C31237 - (C14746 + C14747) * C30341 -
             (C14748 + C14749) * C2723) *
                C13453 +
            ((C14747 + C14746) * C30327 -
             ((C14315 + C14314) * C31230 + (C14313 + C14312) * C30335) +
             (C14749 + C14748) * C31237 - (C15245 + C15244) * C30341 -
             (C15247 + C15246) * C2723) *
                C13454) *
               C31369 * C2459 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C30335 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31230 -
             (C14316 + C14317) * C30327 - (C14318 + C14319) * C31237 +
             (C15102 + C15103) * C30341 + (C15104 + C15105) * C2723) *
                C13453 +
            ((C14317 + C14316) * C30335 + (C14319 + C14318) * C31230 -
             (C15103 + C15102) * C30327 - (C15105 + C15104) * C31237 +
             (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
              C13452 * C1564) *
                 C30341 +
             (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
              C13452 * C1570) *
                 C2723) *
                C13454) *
               C31369 * C31153) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C2461 + (C13655 + C13654) * C31520 -
            (C13657 + C13656) * C2462 - (C13659 + C13658) * C31516 +
            (C14569 + C14568) * C2463 + (C14571 + C14570) * C31506 -
            (C14573 + C14572) * C2464 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C2459 +
          (((C13660 + C13661) * C2462 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31520 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2461) +
            (C13662 + C13663) * C31516 - (C13664 + C13665) * C2463 -
            (C13666 + C13667) * C31506 + (C14896 + C14897) * C2464 +
            (C14898 + C14899) * C31486) *
               C13453 +
           ((C13665 + C13664) * C2462 -
            ((C13663 + C13662) * C31520 + (C13661 + C13660) * C2461) +
            (C13667 + C13666) * C31516 - (C14897 + C14896) * C2463 -
            (C14899 + C14898) * C31506 +
            (C13455 * C1033 + C13451 * C1042 + C13456 * C1034 +
             C13452 * C1043) *
                C2464 +
            (C13455 * C1045 + C13451 * C1051 + C13456 * C1046 +
             C13452 * C1052) *
                C31486) *
               C13454) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2355 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C2349 -
            (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
               C13453 +
           ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
            (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
               C13454) *
              C31369 * C31519 +
          (((C13660 + C13661) * C2356 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C2349 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2355) +
            (C13662 + C13663) * C31234) *
               C13453 +
           ((C13665 + C13664) * C2356 -
            ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
            (C13667 + C13666) * C31234) *
               C13454) *
              C31369 * C31512 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C2355 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C2349 -
            (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
               C13453 +
           ((C13669 + C13668) * C2355 + (C13671 + C13670) * C2349 -
            (C13673 + C13672) * C2356 - (C13675 + C13674) * C31234) *
               C13454) *
              C31369 * C31499 +
          (((C13960 + C13961) * C2356 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C2349 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C2355) +
            (C13962 + C13963) * C31234) *
               C13453 +
           ((C13455 * C271 + C13451 * C288 + C13456 * C273 + C13452 * C292) *
                C2356 -
            ((C13963 + C13962) * C2349 + (C13961 + C13960) * C2355) +
            (C13455 * C289 + C13451 * C301 + C13456 * C293 + C13452 * C303) *
                C31234) *
               C13454) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
             (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C2459 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C2356 -
             ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31153) *
              C31514 +
          ((((C14312 + C14313) * C2356 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C2349 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C2355) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C2356 -
             ((C14315 + C14314) * C2349 + (C14313 + C14312) * C2355) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C2459 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C2355 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C2355 + (C14319 + C14318) * C2349 -
             (C15103 + C15102) * C2356 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31153) *
              C31503 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C2355 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C2349 -
             (C14750 + C14751) * C2356 - (C14752 + C14753) * C31234) *
                C13453 +
            ((C14751 + C14750) * C2355 + (C14753 + C14752) * C2349 -
             (C14755 + C14754) * C2356 - (C14757 + C14756) * C31234) *
                C13454) *
               C31369 * C2459 +
           (((C15824 + C15825) * C2356 -
             ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                  C2349 +
              (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                  C2355) +
             (C15826 + C15827) * C31234) *
                C13453 +
            ((C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C2356 -
             ((C15827 + C15826) * C2349 + (C15825 + C15824) * C2355) +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31234) *
                C13454) *
               C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
             (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C31148 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C2356 -
             ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31156 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C2355 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C2349 -
             (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
                C13453 +
            ((C13669 + C13668) * C2355 + (C13671 + C13670) * C2349 -
             (C13673 + C13672) * C2356 - (C13675 + C13674) * C31234) *
                C13454) *
               C31369 * C2726) *
              C31448 +
          ((((C14312 + C14313) * C2356 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C2349 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C2355) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C2356 -
             ((C14315 + C14314) * C2349 + (C14313 + C14312) * C2355) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C31148 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C2355 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C2355 + (C14319 + C14318) * C2349 -
             (C15103 + C15102) * C2356 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31156 +
           (((C14320 + C14321) * C2356 -
             ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                  C2349 +
              (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                  C2355) +
             (C14322 + C14323) * C31234) *
                C13453 +
            ((C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
              C13452 * C1458) *
                 C2356 -
             ((C14323 + C14322) * C2349 + (C14321 + C14320) * C2355) +
             (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
              C13452 * C1460) *
                 C31234) *
                C13454) *
               C31369 * C2726) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2355 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C2349 -
            (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
               C13453 +
           ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
            (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
               C13454) *
              C31369 * C31519 +
          (((C13660 + C13661) * C2356 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C2349 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2355) +
            (C13662 + C13663) * C31234) *
               C13453 +
           ((C13665 + C13664) * C2356 -
            ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
            (C13667 + C13666) * C31234) *
               C13454) *
              C31369 * C31512 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C2355 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C2349 -
            (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
               C13453 +
           ((C13669 + C13668) * C2355 + (C13671 + C13670) * C2349 -
            (C13673 + C13672) * C2356 - (C13675 + C13674) * C31234) *
               C13454) *
              C31369 * C31499 +
          (((C13960 + C13961) * C2356 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C2349 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C2355) +
            (C13962 + C13963) * C31234) *
               C13453 +
           ((C13455 * C271 + C13451 * C288 + C13456 * C273 + C13452 * C292) *
                C2356 -
            ((C13963 + C13962) * C2349 + (C13961 + C13960) * C2355) +
            (C13455 * C289 + C13451 * C301 + C13456 * C293 + C13452 * C303) *
                C31234) *
               C13454) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C2461 + (C13655 + C13654) * C31520 -
            (C13657 + C13656) * C2462 - (C13659 + C13658) * C31516 +
            (C14569 + C14568) * C2463 + (C14571 + C14570) * C31506 -
            (C14573 + C14572) * C2464 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C2459 +
          (((C13660 + C13661) * C2462 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31520 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2461) +
            (C13662 + C13663) * C31516 - (C13664 + C13665) * C2463 -
            (C13666 + C13667) * C31506 + (C14896 + C14897) * C2464 +
            (C14898 + C14899) * C31486) *
               C13453 +
           ((C13665 + C13664) * C2462 -
            ((C13663 + C13662) * C31520 + (C13661 + C13660) * C2461) +
            (C13667 + C13666) * C31516 - (C14897 + C14896) * C2463 -
            (C14899 + C14898) * C31506 +
            (C13455 * C1033 + C13451 * C1042 + C13456 * C1034 +
             C13452 * C1043) *
                C2464 +
            (C13455 * C1045 + C13451 * C1051 + C13456 * C1046 +
             C13452 * C1052) *
                C31486) *
               C13454) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C30335 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31230 -
             (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
             (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
                C13453 +
            ((C13653 + C13652) * C30335 + (C13655 + C13654) * C31230 -
             (C13657 + C13656) * C30327 - (C13659 + C13658) * C31237 +
             (C14569 + C14568) * C30341 + (C14571 + C14570) * C2723) *
                C13454) *
               C31369 * C31433 +
           (((C13660 + C13661) * C30327 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31230 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C30335) +
             (C13662 + C13663) * C31237 - (C13664 + C13665) * C30341 -
             (C13666 + C13667) * C2723) *
                C13453 +
            ((C13665 + C13664) * C30327 -
             ((C13663 + C13662) * C31230 + (C13661 + C13660) * C30335) +
             (C13667 + C13666) * C31237 - (C14897 + C14896) * C30341 -
             (C14899 + C14898) * C2723) *
                C13454) *
               C31369 * C31153) *
              C3120 +
          ((((C14312 + C14313) * C30327 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31230 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C30335) +
             (C14314 + C14315) * C31237 - (C14746 + C14747) * C30341 -
             (C14748 + C14749) * C2723) *
                C13453 +
            ((C14747 + C14746) * C30327 -
             ((C14315 + C14314) * C31230 + (C14313 + C14312) * C30335) +
             (C14749 + C14748) * C31237 - (C15245 + C15244) * C30341 -
             (C15247 + C15246) * C2723) *
                C13454) *
               C31369 * C31433 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C30335 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31230 -
             (C14316 + C14317) * C30327 - (C14318 + C14319) * C31237 +
             (C15102 + C15103) * C30341 + (C15104 + C15105) * C2723) *
                C13453 +
            ((C14317 + C14316) * C30335 + (C14319 + C14318) * C31230 -
             (C15103 + C15102) * C30327 - (C15105 + C15104) * C31237 +
             (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
              C13452 * C1564) *
                 C30341 +
             (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
              C13452 * C1570) *
                 C2723) *
                C13454) *
               C31369 * C31153) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C30335 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31230 -
            (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
            (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
               C13453 +
           ((C13653 + C13652) * C30335 + (C13655 + C13654) * C31230 -
            (C13657 + C13656) * C30327 - (C13659 + C13658) * C31237 +
            (C14569 + C14568) * C30341 + (C14571 + C14570) * C2723) *
               C13454) *
              C31369 * C31143 * C31272 +
          (((C14312 + C14313) * C30327 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31230 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C30335) +
            (C14314 + C14315) * C31237 - (C14746 + C14747) * C30341 -
            (C14748 + C14749) * C2723) *
               C13453 +
           ((C14747 + C14746) * C30327 -
            ((C14315 + C14314) * C31230 + (C14313 + C14312) * C30335) +
            (C14749 + C14748) * C31237 - (C15245 + C15244) * C30341 -
            (C15247 + C15246) * C2723) *
               C13454) *
              C31369 * C31143 * C31279 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C30335 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C31230 -
            (C14750 + C14751) * C30327 - (C14752 + C14753) * C31237 +
            (C14754 + C14755) * C30341 + (C14756 + C14757) * C2723) *
               C13453 +
           ((C14751 + C14750) * C30335 + (C14753 + C14752) * C31230 -
            (C14755 + C14754) * C30327 - (C14757 + C14756) * C31237 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C30341 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C2723) *
               C13454) *
              C31369 * C31143 * C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C2461 + (C13655 + C13654) * C31520 -
            (C13657 + C13656) * C2462 - (C13659 + C13658) * C31516 +
            (C14569 + C14568) * C2463 + (C14571 + C14570) * C31506 -
            (C14573 + C14572) * C2464 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C31143 * C3120 +
          (((C14312 + C14313) * C2462 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31520 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C2461) +
            (C14314 + C14315) * C31516 - (C14746 + C14747) * C2463 -
            (C14748 + C14749) * C31506 + (C15244 + C15245) * C2464 +
            (C15246 + C15247) * C31486) *
               C13453 +
           ((C14747 + C14746) * C2462 -
            ((C14315 + C14314) * C31520 + (C14313 + C14312) * C2461) +
            (C14749 + C14748) * C31516 - (C15245 + C15244) * C2463 -
            (C15247 + C15246) * C31506 +
            (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 +
             C13452 * C5843) *
                C2464 +
            (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 +
             C13452 * C5845) *
                C31486) *
               C13454) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
             (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C31510 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C2356 -
             ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C2355 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C2349 -
             (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
                C13453 +
            ((C13669 + C13668) * C2355 + (C13671 + C13670) * C2349 -
             (C13673 + C13672) * C2356 - (C13675 + C13674) * C31234) *
                C13454) *
               C31369 * C31470) *
              C3120 +
          ((((C14312 + C14313) * C2356 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C2349 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C2355) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C2356 -
             ((C14315 + C14314) * C2349 + (C14313 + C14312) * C2355) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C31510 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C2355 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C2355 + (C14319 + C14318) * C2349 -
             (C15103 + C15102) * C2356 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31497 +
           (((C14320 + C14321) * C2356 -
             ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                  C2349 +
              (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                  C2355) +
             (C14322 + C14323) * C31234) *
                C13453 +
            ((C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
              C13452 * C1458) *
                 C2356 -
             ((C14323 + C14322) * C2349 + (C14321 + C14320) * C2355) +
             (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
              C13452 * C1460) *
                 C31234) *
                C13454) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2355 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C2349 -
            (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
               C13453 +
           ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
            (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
               C13454) *
              C31369 * C31143 * C31521 +
          (((C14312 + C14313) * C2356 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C2349 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C2355) +
            (C14314 + C14315) * C31234) *
               C13453 +
           ((C14747 + C14746) * C2356 -
            ((C14315 + C14314) * C2349 + (C14313 + C14312) * C2355) +
            (C14749 + C14748) * C31234) *
               C13454) *
              C31369 * C31143 * C31518 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C2355 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C2349 -
            (C14750 + C14751) * C2356 - (C14752 + C14753) * C31234) *
               C13453 +
           ((C14751 + C14750) * C2355 + (C14753 + C14752) * C2349 -
            (C14755 + C14754) * C2356 - (C14757 + C14756) * C31234) *
               C13454) *
              C31369 * C31143 * C31509 +
          (((C16096 + C16097) * C2356 -
            ((C13456 * C1868 + C13452 * C1880 + C13455 * C1869 +
              C13451 * C1881) *
                 C2349 +
             (C13456 * C1862 + C13452 * C1871 + C13455 * C1863 +
              C13451 * C1872) *
                 C2355) +
            (C16098 + C16099) * C31234) *
               C13453 +
           ((C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C2356 -
            ((C16099 + C16098) * C2349 + (C16097 + C16096) * C2355) +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C31234) *
               C13454) *
              C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
             (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C31433 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C2356 -
             ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31153) *
              C31272 +
          ((((C14312 + C14313) * C2356 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C2349 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C2355) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C2356 -
             ((C14315 + C14314) * C2349 + (C14313 + C14312) * C2355) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C31433 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C2355 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C2355 + (C14319 + C14318) * C2349 -
             (C15103 + C15102) * C2356 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31153) *
              C31279 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C2355 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C2349 -
             (C14750 + C14751) * C2356 - (C14752 + C14753) * C31234) *
                C13453 +
            ((C14751 + C14750) * C2355 + (C14753 + C14752) * C2349 -
             (C14755 + C14754) * C2356 - (C14757 + C14756) * C31234) *
                C13454) *
               C31369 * C31433 +
           (((C15824 + C15825) * C2356 -
             ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                  C2349 +
              (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                  C2355) +
             (C15826 + C15827) * C31234) *
                C13453 +
            ((C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C2356 -
             ((C15827 + C15826) * C2349 + (C15825 + C15824) * C2355) +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31234) *
                C13454) *
               C31369 * C31153) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C2355 + (C13655 + C13654) * C2349 -
             (C13657 + C13656) * C2356 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C31510 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C2356 -
             ((C13663 + C13662) * C2349 + (C13661 + C13660) * C2355) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C2355 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C2349 -
             (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
                C13453 +
            ((C13669 + C13668) * C2355 + (C13671 + C13670) * C2349 -
             (C13673 + C13672) * C2356 - (C13675 + C13674) * C31234) *
                C13454) *
               C31369 * C31470) *
              C3120 +
          ((((C14312 + C14313) * C2356 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C2349 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C2355) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C2356 -
             ((C14315 + C14314) * C2349 + (C14313 + C14312) * C2355) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C31510 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C2355 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C2355 + (C14319 + C14318) * C2349 -
             (C15103 + C15102) * C2356 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31497 +
           (((C14320 + C14321) * C2356 -
             ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                  C2349 +
              (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                  C2355) +
             (C14322 + C14323) * C31234) *
                C13453 +
            ((C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
              C13452 * C1458) *
                 C2356 -
             ((C14323 + C14322) * C2349 + (C14321 + C14320) * C2355) +
             (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
              C13452 * C1460) *
                 C31234) *
                C13454) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C2461 + (C13655 + C13654) * C31520 -
            (C13657 + C13656) * C2462 - (C13659 + C13658) * C31516 +
            (C14569 + C14568) * C2463 + (C14571 + C14570) * C31506 -
            (C14573 + C14572) * C2464 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C31143 * C3120 +
          (((C14312 + C14313) * C2462 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31520 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C2461) +
            (C14314 + C14315) * C31516 - (C14746 + C14747) * C2463 -
            (C14748 + C14749) * C31506 + (C15244 + C15245) * C2464 +
            (C15246 + C15247) * C31486) *
               C13453 +
           ((C14747 + C14746) * C2462 -
            ((C14315 + C14314) * C31520 + (C14313 + C14312) * C2461) +
            (C14749 + C14748) * C31516 - (C15245 + C15244) * C2463 -
            (C15247 + C15246) * C31506 +
            (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 +
             C13452 * C5843) *
                C2464 +
            (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 +
             C13452 * C5845) *
                C31486) *
               C13454) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C1303 + (C13655 + C13654) * C1297 -
            (C13657 + C13656) * C1304 - (C13659 + C13658) * C1298 +
            (C14569 + C14568) * C1305 + (C14571 + C14570) * C1299 -
            (C14573 + C14572) * C1306 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C31433 +
          (((C13660 + C13661) * C1304 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C1297 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C1303) +
            (C13662 + C13663) * C1298 - (C13664 + C13665) * C1305 -
            (C13666 + C13667) * C1299 + (C14896 + C14897) * C1306 +
            (C14898 + C14899) * C31486) *
               C13453 +
           ((C13665 + C13664) * C1304 -
            ((C13663 + C13662) * C1297 + (C13661 + C13660) * C1303) +
            (C13667 + C13666) * C1298 - (C14897 + C14896) * C1305 -
            (C14899 + C14898) * C1299 +
            (C13455 * C1033 + C13451 * C1042 + C13456 * C1034 +
             C13452 * C1043) *
                C1306 +
            (C13455 * C1045 + C13451 * C1051 + C13456 * C1046 +
             C13452 * C1052) *
                C31486) *
               C13454) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C561 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31447 -
            (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
               C13453 +
           ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
            (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
               C13454) *
              C31369 * C557 +
          (((C13660 + C13661) * C562 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31447 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C561) +
            (C13662 + C13663) * C31234) *
               C13453 +
           ((C13665 + C13664) * C562 -
            ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
            (C13667 + C13666) * C31234) *
               C13454) *
              C31369 * C558 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C561 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31447 -
            (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
               C13453 +
           ((C13669 + C13668) * C561 + (C13671 + C13670) * C31447 -
            (C13673 + C13672) * C562 - (C13675 + C13674) * C31234) *
               C13454) *
              C31369 * C559 +
          (((C13960 + C13961) * C562 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31447 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C561) +
            (C13962 + C13963) * C31234) *
               C13453 +
           ((C13455 * C271 + C13451 * C288 + C13456 * C273 + C13452 * C292) *
                C562 -
            ((C13963 + C13962) * C31447 + (C13961 + C13960) * C561) +
            (C13455 * C289 + C13451 * C301 + C13456 * C293 + C13452 * C303) *
                C31234) *
               C13454) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
             (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C31433 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C562 -
             ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31153) *
              C1681 +
          ((((C14312 + C14313) * C562 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31447 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C561) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C562 -
             ((C14315 + C14314) * C31447 + (C14313 + C14312) * C561) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C31433 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C561 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C561 + (C14319 + C14318) * C31447 -
             (C15103 + C15102) * C562 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31153) *
              C1682 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C561 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31447 -
             (C14750 + C14751) * C562 - (C14752 + C14753) * C31234) *
                C13453 +
            ((C14751 + C14750) * C561 + (C14753 + C14752) * C31447 -
             (C14755 + C14754) * C562 - (C14757 + C14756) * C31234) *
                C13454) *
               C31369 * C31433 +
           (((C15824 + C15825) * C562 -
             ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                  C31447 +
              (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                  C561) +
             (C15826 + C15827) * C31234) *
                C13453 +
            ((C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C562 -
             ((C15827 + C15826) * C31447 + (C15825 + C15824) * C561) +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31234) *
                C13454) *
               C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C1303 + (C13655 + C13654) * C1297 -
            (C13657 + C13656) * C1304 - (C13659 + C13658) * C1298 +
            (C14569 + C14568) * C1305 + (C14571 + C14570) * C1299 -
            (C14573 + C14572) * C1306 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C31143 * C31448 +
          (((C14312 + C14313) * C1304 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C1297 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C1303) +
            (C14314 + C14315) * C1298 - (C14746 + C14747) * C1305 -
            (C14748 + C14749) * C1299 + (C15244 + C15245) * C1306 +
            (C15246 + C15247) * C31486) *
               C13453 +
           ((C14747 + C14746) * C1304 -
            ((C14315 + C14314) * C1297 + (C14313 + C14312) * C1303) +
            (C14749 + C14748) * C1298 - (C15245 + C15244) * C1305 -
            (C15247 + C15246) * C1299 +
            (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 +
             C13452 * C5843) *
                C1306 +
            (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 +
             C13452 * C5845) *
                C31486) *
               C13454) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
             (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C258 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C562 -
             ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C561 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31447 -
             (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
                C13453 +
            ((C13669 + C13668) * C561 + (C13671 + C13670) * C31447 -
             (C13673 + C13672) * C562 - (C13675 + C13674) * C31234) *
                C13454) *
               C31369 * C31470) *
              C31448 +
          ((((C14312 + C14313) * C562 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31447 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C561) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C13455 * C1165 + C13451 * C1174 + C13456 * C1164 +
              C13452 * C1173) *
                 C562 -
             ((C14315 + C14314) * C31447 + (C14313 + C14312) * C561) +
             (C13455 * C1177 + C13451 * C1192 + C13456 * C1176 +
              C13452 * C1191) *
                 C31234) *
                C13454) *
               C31369 * C258 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C561 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C561 + (C14319 + C14318) * C31447 -
             (C13456 * C1163 + C13452 * C1172 + C13455 * C1164 +
              C13451 * C1173) *
                 C562 -
             (C13456 * C1175 + C13452 * C1190 + C13455 * C1176 +
              C13451 * C1191) *
                 C31234) *
                C13454) *
               C31369 * C259 +
           (((C14320 + C14321) * C562 -
             ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                  C31447 +
              (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                  C561) +
             (C14322 + C14323) * C31234) *
                C13453 +
            ((C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
              C13452 * C1458) *
                 C562 -
             ((C14323 + C14322) * C31447 + (C14321 + C14320) * C561) +
             (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
              C13452 * C1460) *
                 C31234) *
                C13454) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C561 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31447 -
            (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
               C13453 +
           ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
            (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
               C13454) *
              C31369 * C31143 * C2133 +
          (((C14312 + C14313) * C562 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31447 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C561) +
            (C14314 + C14315) * C31234) *
               C13453 +
           ((C14747 + C14746) * C562 -
            ((C14315 + C14314) * C31447 + (C14313 + C14312) * C561) +
            (C14749 + C14748) * C31234) *
               C13454) *
              C31369 * C31143 * C2134 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C561 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C31447 -
            (C14750 + C14751) * C562 - (C14752 + C14753) * C31234) *
               C13453 +
           ((C14751 + C14750) * C561 + (C14753 + C14752) * C31447 -
            (C14755 + C14754) * C562 - (C14757 + C14756) * C31234) *
               C13454) *
              C31369 * C31143 * C2135 +
          (((C16096 + C16097) * C562 -
            ((C13456 * C1868 + C13452 * C1880 + C13455 * C1869 +
              C13451 * C1881) *
                 C31447 +
             (C13456 * C1862 + C13452 * C1871 + C13455 * C1863 +
              C13451 * C1872) *
                 C561) +
            (C16098 + C16099) * C31234) *
               C13453 +
           ((C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C562 -
            ((C16099 + C16098) * C31447 + (C16097 + C16096) * C561) +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C31234) *
               C13454) *
              C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13455 * C117 + C13451 * C124 + C13456 * C118 +
                 C13452 * C125) *
                    C116 +
                (C13455 * C127 + C13451 * C138 + C13456 * C128 +
                 C13452 * C139) *
                    C31171) *
                   C13453 +
               ((C13455 * C266 + C13451 * C276 + C13456 * C265 +
                 C13452 * C275) *
                    C116 +
                (C13455 * C279 + C13451 * C296 + C13456 * C278 +
                 C13452 * C295) *
                    C31171) *
                   C13454) *
                  C31369 * C107 -
              (((C13456 * C277 + C13452 * C294 + C13455 * C278 +
                 C13451 * C295) *
                    C31171 +
                (C13456 * C264 + C13452 * C274 + C13455 * C265 +
                 C13451 * C275) *
                    C116) *
                   C13454 +
               ((C13456 * C129 + C13452 * C140 + C13455 * C128 +
                 C13451 * C139) *
                    C31171 +
                (C13456 * C119 + C13452 * C126 + C13455 * C118 +
                 C13451 * C125) *
                    C116) *
                   C13453) *
                  C31369 * C108 +
              (((C13455 * C119 + C13451 * C126 + C13456 * C120 +
                 C13452 * C131) *
                    C116 +
                (C13455 * C129 + C13451 * C140 + C13456 * C130 +
                 C13452 * C141) *
                    C31171) *
                   C13453 +
               ((C13455 * C264 + C13451 * C274 + C13456 * C270 +
                 C13452 * C286) *
                    C116 +
                (C13455 * C277 + C13451 * C294 + C13456 * C287 +
                 C13452 * C300) *
                    C31171) *
                   C13454) *
                  C31369 * C109 -
              (((C13456 * C291 + C13452 * C302 + C13455 * C287 +
                 C13451 * C300) *
                    C31171 +
                (C13456 * C272 + C13452 * C290 + C13455 * C270 +
                 C13451 * C286) *
                    C116) *
                   C13454 +
               ((C13456 * C133 + C13452 * C142 + C13455 * C130 +
                 C13451 * C141) *
                    C31171 +
                (C13456 * C121 + C13452 * C132 + C13455 * C120 +
                 C13451 * C131) *
                    C116) *
                   C13453) *
                  C31369 * C110 +
              (((C13455 * C121 + C13451 * C132 + C13456 * C122 +
                 C13452 * C135) *
                    C116 +
                (C13455 * C133 + C13451 * C142 + C13456 * C134 +
                 C13452 * C143) *
                    C31171) *
                   C13453 +
               ((C13455 * C272 + C13451 * C290 + C13456 * C563 +
                 C13452 * C564) *
                    C116 +
                (C13455 * C291 + C13451 * C302 + C13456 * C565 +
                 C13452 * C566) *
                    C31171) *
                   C13454) *
                  C31369 * C111) *
             C31189 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13455 * C117 + C13451 * C124 + C13456 * C118 +
                 C13452 * C125) *
                    C261 +
                (C13455 * C127 + C13451 * C138 + C13456 * C128 +
                 C13452 * C139) *
                    C31513 -
                (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
                (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
                   C13453 +
               ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
                (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
                (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
                 C13452 * C1036) *
                    C263 +
                (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
                 C13452 * C1048) *
                    C31476) *
                   C13454) *
                  C31369 * C258 +
              (((C13660 + C13661) * C262 -
                ((C13456 * C129 + C13452 * C140 + C13455 * C128 +
                  C13451 * C139) *
                     C31513 +
                 (C13456 * C119 + C13452 * C126 + C13455 * C118 +
                  C13451 * C125) *
                     C261) +
                (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
                (C13666 + C13667) * C31476) *
                   C13453 +
               ((C13665 + C13664) * C262 -
                ((C13663 + C13662) * C31513 + (C13661 + C13660) * C261) +
                (C13667 + C13666) * C31501 -
                (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
                 C13451 * C1036) *
                    C263 -
                (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
                 C13451 * C1048) *
                    C31476) *
                   C13454) *
                  C31369 * C259 +
              (((C13455 * C119 + C13451 * C126 + C13456 * C120 +
                 C13452 * C131) *
                    C261 +
                (C13455 * C129 + C13451 * C140 + C13456 * C130 +
                 C13452 * C141) *
                    C31513 -
                (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
                (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
                   C13453 +
               ((C13669 + C13668) * C261 + (C13671 + C13670) * C31513 -
                (C13673 + C13672) * C262 - (C13675 + C13674) * C31501 +
                (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
                 C13452 * C1308) *
                    C263 +
                (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
                 C13452 * C1310) *
                    C31476) *
                   C13454) *
                  C31369 * C31470) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C258 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C31470) *
              C31514 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C13455 * C818 + C13451 * C823 + C13456 * C819 + C13452 * C824) *
                 C116 +
             (C13455 * C826 + C13451 * C833 + C13456 * C827 + C13452 * C834) *
                 C31171) *
                C13454) *
               C31369 * C259 -
           (((C13456 * C826 + C13452 * C833 + C13455 * C825 + C13451 * C832) *
                 C31171 +
             (C13456 * C818 + C13452 * C823 + C13455 * C817 + C13451 * C822) *
                 C116) *
                C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C258 -
           (((C13456 * C829 + C13452 * C835 + C13455 * C827 + C13451 * C834) *
                 C31171 +
             (C13456 * C820 + C13452 * C828 + C13455 * C819 + C13451 * C824) *
                 C116) *
                C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C31470) *
              C31503 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C13455 * C1168 + C13451 * C1180 + C13456 * C1167 +
              C13452 * C1179) *
                 C116 +
             (C13455 * C1183 + C13451 * C1195 + C13456 * C1182 +
              C13452 * C1194) *
                 C31171) *
                C13454) *
               C31369 * C258 -
           (((C13456 * C1181 + C13452 * C1193 + C13455 * C1182 +
              C13451 * C1194) *
                 C31171 +
             (C13456 * C1166 + C13452 * C1178 + C13455 * C1167 +
              C13451 * C1179) *
                 C116) *
                C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C259 +
           (((C13455 * C424 + C13451 * C439 + C13456 * C425 + C13452 * C444) *
                 C116 +
             (C13455 * C442 + C13451 * C454 + C13456 * C443 + C13452 * C455) *
                 C31171) *
                C13453 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C116 +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31171) *
                C13454) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
            (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C955 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C954 -
            ((C13663 + C13662) * C947 + (C13661 + C13660) * C953) +
            (C13667 + C13666) * C948 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C955 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C953 + (C13671 + C13670) * C947 -
            (C13673 + C13672) * C954 - (C13675 + C13674) * C948 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C955 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C13453 +
          ((C13653 + C13652) * C1024 + (C13655 + C13654) * C1018 -
           (C13657 + C13656) * C1025 - (C13659 + C13658) * C1019 +
           (C14569 + C14568) * C1026 + (C14571 + C14570) * C1020 -
           (C14573 + C14572) * C1027 - (C14575 + C14574) * C1021 +
           (C13455 * C5422 + C13451 * C5424 + C13456 * C5686 + C13452 * C5687) *
               C1028 +
           (C13455 * C5425 + C13451 * C5428 + C13456 * C5688 + C13452 * C5689) *
               C1022) *
              C13454) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
            (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
            (C14569 + C14568) * C955 + (C14571 + C14570) * C31476) *
               C13454) *
              C31369 * C31143 * C31514 +
          (((C14312 + C14313) * C954 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C947 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C953) +
            (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
            (C14748 + C14749) * C31476) *
               C13453 +
           ((C14747 + C14746) * C954 -
            ((C14315 + C14314) * C947 + (C14313 + C14312) * C953) +
            (C14749 + C14748) * C948 -
            (C13456 * C1560 + C13452 * C1563 + C13455 * C1559 +
             C13451 * C1562) *
                C955 -
            (C13456 * C1566 + C13452 * C1569 + C13455 * C1565 +
             C13451 * C1568) *
                C31476) *
               C13454) *
              C31369 * C31143 * C31503 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C953 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C947 -
            (C14750 + C14751) * C954 - (C14752 + C14753) * C948 +
            (C14754 + C14755) * C955 + (C14756 + C14757) * C31476) *
               C13453 +
           ((C14751 + C14750) * C953 + (C14753 + C14752) * C947 -
            (C14755 + C14754) * C954 - (C14757 + C14756) * C948 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C955 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31476) *
               C13454) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C31510 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C31470) *
              C1681 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31497 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C31510 -
           (((C14323 + C14322) * C31171 + (C14321 + C14320) * C116) * C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C31470) *
              C1682 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C14751 + C14750) * C116 + (C14753 + C14752) * C31171) * C13454) *
               C31369 * C31510 -
           (((C13456 * C1181 + C13452 * C1193 + C13455 * C1182 +
              C13451 * C1194) *
                 C31171 +
             (C13456 * C1166 + C13452 * C1178 + C13455 * C1167 +
              C13451 * C1179) *
                 C116) *
                C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C31497 +
           (((C13455 * C424 + C13451 * C439 + C13456 * C425 + C13452 * C444) *
                 C116 +
             (C13455 * C442 + C13451 * C454 + C13456 * C443 + C13452 * C455) *
                 C31171) *
                C13453 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C116 +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31171) *
                C13454) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
            (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
            (C14569 + C14568) * C263 + (C14571 + C14570) * C31476) *
               C13454) *
              C31369 * C31143 * C1681 +
          (((C14312 + C14313) * C262 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31513 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C261) +
            (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
            (C14748 + C14749) * C31476) *
               C13453 +
           ((C14747 + C14746) * C262 -
            ((C14315 + C14314) * C31513 + (C14313 + C14312) * C261) +
            (C14749 + C14748) * C31501 - (C15245 + C15244) * C263 -
            (C15247 + C15246) * C31476) *
               C13454) *
              C31369 * C31143 * C1682 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C261 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C31513 -
            (C14750 + C14751) * C262 - (C14752 + C14753) * C31501 +
            (C14754 + C14755) * C263 + (C14756 + C14757) * C31476) *
               C13453 +
           ((C14751 + C14750) * C261 + (C14753 + C14752) * C31513 -
            (C14755 + C14754) * C262 - (C14757 + C14756) * C31501 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C263 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31476) *
               C13454) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C13453 +
           ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
              C31369 * C31143 * C1856 -
          (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
           ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                C31171 +
            (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                C116) *
               C13453) *
              C31369 * C31143 * C1857 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C116 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C31171) *
               C13453 +
           ((C14751 + C14750) * C116 + (C14753 + C14752) * C31171) * C13454) *
              C31369 * C31143 * C1858 -
          (((C13456 * C2246 + C13452 * C2249 + C13455 * C2245 +
             C13451 * C2248) *
                C31171 +
            (C13456 * C2240 + C13452 * C2243 + C13455 * C2239 +
             C13451 * C2242) *
                C116) *
               C13454 +
           ((C13456 * C1868 + C13452 * C1880 + C13455 * C1869 +
             C13451 * C1881) *
                C31171 +
            (C13456 * C1862 + C13452 * C1871 + C13455 * C1863 +
             C13451 * C1872) *
                C116) *
               C13453) *
              C31369 * C31143 * C1859 +
          (((C13455 * C1864 + C13451 * C1873 + C13456 * C1865 +
             C13452 * C1874) *
                C116 +
            (C13455 * C1876 + C13451 * C1882 + C13456 * C1877 +
             C13452 * C1883) *
                C31171) *
               C13453 +
           ((C13455 * C6243 + C13451 * C6247 + C13456 * C10771 +
             C13452 * C10772) *
                C116 +
            (C13455 * C6248 + C13451 * C6252 + C13456 * C10773 +
             C13452 * C10774) *
                C31171) *
               C13454) *
              C31369 * C31143 * C1860)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C953 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C947 -
             (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
             (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
                C13453 +
            ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
             (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
             (C14569 + C14568) * C955 + (C14571 + C14570) * C31476) *
                C13454) *
               C31369 * C31433 +
           (((C13660 + C13661) * C954 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C947 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C953) +
             (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
             (C13666 + C13667) * C31476) *
                C13453 +
            ((C13665 + C13664) * C954 -
             ((C13663 + C13662) * C947 + (C13661 + C13660) * C953) +
             (C13667 + C13666) * C948 - (C14897 + C14896) * C955 -
             (C14899 + C14898) * C31476) *
                C13454) *
               C31369 * C31153) *
              C31448 +
          ((((C14312 + C14313) * C954 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C947 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C953) +
             (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
             (C14748 + C14749) * C31476) *
                C13453 +
            ((C14747 + C14746) * C954 -
             ((C14315 + C14314) * C947 + (C14313 + C14312) * C953) +
             (C14749 + C14748) * C948 -
             (C13456 * C1560 + C13452 * C1563 + C13455 * C1559 +
              C13451 * C1562) *
                 C955 -
             (C13456 * C1566 + C13452 * C1569 + C13455 * C1565 +
              C13451 * C1568) *
                 C31476) *
                C13454) *
               C31369 * C31433 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C953 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C947 -
             (C14316 + C14317) * C954 - (C14318 + C14319) * C948 +
             (C15102 + C15103) * C955 + (C15104 + C15105) * C31476) *
                C13453 +
            ((C14317 + C14316) * C953 + (C14319 + C14318) * C947 -
             (C15103 + C15102) * C954 - (C15105 + C15104) * C948 +
             (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
              C13452 * C1564) *
                 C955 +
             (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
              C13452 * C1570) *
                 C31476) *
                C13454) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C557 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C558 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C559 -
           (((C13963 + C13962) * C31171 + (C13961 + C13960) * C116) * C13454 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C13453) *
               C31369 * C31480) *
              C31448 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C13455 * C818 + C13451 * C823 + C13456 * C819 + C13452 * C824) *
                 C116 +
             (C13455 * C826 + C13451 * C833 + C13456 * C827 + C13452 * C834) *
                 C31171) *
                C13454) *
               C31369 * C558 -
           (((C13456 * C826 + C13452 * C833 + C13455 * C825 + C13451 * C832) *
                 C31171 +
             (C13456 * C818 + C13452 * C823 + C13455 * C817 + C13451 * C822) *
                 C116) *
                C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C557 -
           (((C13456 * C829 + C13452 * C835 + C13455 * C827 + C13451 * C834) *
                 C31171 +
             (C13456 * C820 + C13452 * C828 + C13455 * C819 + C13451 * C824) *
                 C116) *
                C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C559 +
           (((C13455 * C419 + C13451 * C429 + C13456 * C421 + C13452 * C436) *
                 C116 +
             (C13455 * C432 + C13451 * C449 + C13456 * C435 + C13452 * C451) *
                 C31171) *
                C13453 +
            ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                 C116 +
             (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                 C31171) *
                C13454) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C31433 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31153) *
              C2133 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31153 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C31433) *
              C2134 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C14751 + C14750) * C116 + (C14753 + C14752) * C31171) * C13454) *
               C31369 * C31433 -
           (((C15827 + C15826) * C31171 + (C15825 + C15824) * C116) * C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C31153) *
              C2135 +
          ((((C13455 * C1862 + C13451 * C1871 + C13456 * C1861 +
              C13452 * C1870) *
                 C116 +
             (C13455 * C1868 + C13451 * C1880 + C13456 * C1867 +
              C13452 * C1879) *
                 C31171) *
                C13453 +
            ((C13455 * C2240 + C13451 * C2243 + C13456 * C2241 +
              C13452 * C2244) *
                 C116 +
             (C13455 * C2246 + C13451 * C2249 + C13456 * C2247 +
              C13452 * C2250) *
                 C31171) *
                C13454) *
               C31369 * C31153 -
           (((C13456 * C2246 + C13452 * C2249 + C13455 * C2245 +
              C13451 * C2248) *
                 C31171 +
             (C13456 * C2240 + C13452 * C2243 + C13455 * C2239 +
              C13451 * C2242) *
                 C116) *
                C13454 +
            ((C13456 * C1868 + C13452 * C1880 + C13455 * C1869 +
              C13451 * C1881) *
                 C31171 +
             (C13456 * C1862 + C13452 * C1871 + C13455 * C1863 +
              C13451 * C1872) *
                 C116) *
                C13453) *
               C31369 * C31433) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
            (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C263 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C258 +
          (((C13660 + C13661) * C262 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31513 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C261) +
            (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C262 -
            ((C13663 + C13662) * C31513 + (C13661 + C13660) * C261) +
            (C13667 + C13666) * C31501 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C263 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C259 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C261 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31513 -
            (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
            (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C261 + (C13671 + C13670) * C31513 -
            (C13673 + C13672) * C262 - (C13675 + C13674) * C31501 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C263 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C13453 +
           ((C13455 * C266 + C13451 * C276 + C13456 * C265 + C13452 * C275) *
                C116 +
            (C13455 * C279 + C13451 * C296 + C13456 * C278 + C13452 * C295) *
                C31171) *
               C13454) *
              C31369 * C107 -
          (((C13456 * C277 + C13452 * C294 + C13455 * C278 + C13451 * C295) *
                C31171 +
            (C13456 * C264 + C13452 * C274 + C13455 * C265 + C13451 * C275) *
                C116) *
               C13454 +
           ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                C31171 +
            (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                C116) *
               C13453) *
              C31369 * C108 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C116 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31171) *
               C13453 +
           ((C13455 * C264 + C13451 * C274 + C13456 * C270 + C13452 * C286) *
                C116 +
            (C13455 * C277 + C13451 * C294 + C13456 * C287 + C13452 * C300) *
                C31171) *
               C13454) *
              C31369 * C109 -
          (((C13456 * C291 + C13452 * C302 + C13455 * C287 + C13451 * C300) *
                C31171 +
            (C13456 * C272 + C13452 * C290 + C13455 * C270 + C13451 * C286) *
                C116) *
               C13454 +
           ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                C31171 +
            (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                C116) *
               C13453) *
              C31369 * C110 +
          (((C13455 * C121 + C13451 * C132 + C13456 * C122 + C13452 * C135) *
                C116 +
            (C13455 * C133 + C13451 * C142 + C13456 * C134 + C13452 * C143) *
                C31171) *
               C13453 +
           ((C13455 * C272 + C13451 * C290 + C13456 * C563 + C13452 * C564) *
                C116 +
            (C13455 * C291 + C13451 * C302 + C13456 * C565 + C13452 * C566) *
                C31171) *
               C13454) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
            (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C955 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C954 -
            ((C13663 + C13662) * C947 + (C13661 + C13660) * C953) +
            (C13667 + C13666) * C948 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C955 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C953 + (C13671 + C13670) * C947 -
            (C13673 + C13672) * C954 - (C13675 + C13674) * C948 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C955 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C13453 +
          ((C13653 + C13652) * C1024 + (C13655 + C13654) * C1018 -
           (C13657 + C13656) * C1025 - (C13659 + C13658) * C1019 +
           (C14569 + C14568) * C1026 + (C14571 + C14570) * C1020 -
           (C14573 + C14572) * C1027 - (C14575 + C14574) * C1021 +
           (C13455 * C5422 + C13451 * C5424 + C13456 * C5686 + C13452 * C5687) *
               C1028 +
           (C13455 * C5425 + C13451 * C5428 + C13456 * C5688 + C13452 * C5689) *
               C1022) *
              C13454) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C31510 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C31470) *
              C1681 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31497 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C31510 -
           (((C14323 + C14322) * C31171 + (C14321 + C14320) * C116) * C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C31470) *
              C1682 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C14751 + C14750) * C116 + (C14753 + C14752) * C31171) * C13454) *
               C31369 * C31510 -
           (((C13456 * C1181 + C13452 * C1193 + C13455 * C1182 +
              C13451 * C1194) *
                 C31171 +
             (C13456 * C1166 + C13452 * C1178 + C13455 * C1167 +
              C13451 * C1179) *
                 C116) *
                C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C31497 +
           (((C13455 * C424 + C13451 * C439 + C13456 * C425 + C13452 * C444) *
                 C116 +
             (C13455 * C442 + C13451 * C454 + C13456 * C443 + C13452 * C455) *
                 C31171) *
                C13453 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C116 +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31171) *
                C13454) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
            (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
            (C14569 + C14568) * C263 + (C14571 + C14570) * C31476) *
               C13454) *
              C31369 * C31143 * C1681 +
          (((C14312 + C14313) * C262 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31513 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C261) +
            (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
            (C14748 + C14749) * C31476) *
               C13453 +
           ((C14747 + C14746) * C262 -
            ((C14315 + C14314) * C31513 + (C14313 + C14312) * C261) +
            (C14749 + C14748) * C31501 - (C15245 + C15244) * C263 -
            (C15247 + C15246) * C31476) *
               C13454) *
              C31369 * C31143 * C1682 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C261 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C31513 -
            (C14750 + C14751) * C262 - (C14752 + C14753) * C31501 +
            (C14754 + C14755) * C263 + (C14756 + C14757) * C31476) *
               C13453 +
           ((C14751 + C14750) * C261 + (C14753 + C14752) * C31513 -
            (C14755 + C14754) * C262 - (C14757 + C14756) * C31501 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C263 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31476) *
               C13454) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
             (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C31148 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C562 -
             ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31156 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C561 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31447 -
             (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
                C13453 +
            ((C13669 + C13668) * C561 + (C13671 + C13670) * C31447 -
             (C13673 + C13672) * C562 - (C13675 + C13674) * C31234) *
                C13454) *
               C31369 * C2726) *
              C3120 +
          ((((C14312 + C14313) * C562 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31447 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C561) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C562 -
             ((C14315 + C14314) * C31447 + (C14313 + C14312) * C561) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C31148 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C561 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C561 + (C14319 + C14318) * C31447 -
             (C15103 + C15102) * C562 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31156 +
           (((C14320 + C14321) * C562 -
             ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                  C31447 +
              (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                  C561) +
             (C14322 + C14323) * C31234) *
                C13453 +
            ((C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
              C13452 * C1458) *
                 C562 -
             ((C14323 + C14322) * C31447 + (C14321 + C14320) * C561) +
             (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
              C13452 * C1460) *
                 C31234) *
                C13454) *
               C31369 * C2726) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
             (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C2459 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C562 -
             ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C31153) *
              C31272 +
          ((((C14312 + C14313) * C562 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31447 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C561) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C14747 + C14746) * C562 -
             ((C14315 + C14314) * C31447 + (C14313 + C14312) * C561) +
             (C14749 + C14748) * C31234) *
                C13454) *
               C31369 * C2459 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C561 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C561 + (C14319 + C14318) * C31447 -
             (C15103 + C15102) * C562 - (C15105 + C15104) * C31234) *
                C13454) *
               C31369 * C31153) *
              C31279 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C561 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31447 -
             (C14750 + C14751) * C562 - (C14752 + C14753) * C31234) *
                C13453 +
            ((C14751 + C14750) * C561 + (C14753 + C14752) * C31447 -
             (C14755 + C14754) * C562 - (C14757 + C14756) * C31234) *
                C13454) *
               C31369 * C2459 +
           (((C15824 + C15825) * C562 -
             ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                  C31447 +
              (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                  C561) +
             (C15826 + C15827) * C31234) *
                C13453 +
            ((C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C562 -
             ((C15827 + C15826) * C31447 + (C15825 + C15824) * C561) +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31234) *
                C13454) *
               C31369 * C31153) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C261 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31513 -
             (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
             (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
                C13453 +
            ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
             (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
             (C14569 + C14568) * C263 + (C14571 + C14570) * C31476) *
                C13454) *
               C31369 * C2459 +
           (((C13660 + C13661) * C262 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31513 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C261) +
             (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
             (C13666 + C13667) * C31476) *
                C13453 +
            ((C13665 + C13664) * C262 -
             ((C13663 + C13662) * C31513 + (C13661 + C13660) * C261) +
             (C13667 + C13666) * C31501 - (C14897 + C14896) * C263 -
             (C14899 + C14898) * C31476) *
                C13454) *
               C31369 * C31153) *
              C3120 +
          ((((C14312 + C14313) * C262 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31513 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C261) +
             (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
             (C14748 + C14749) * C31476) *
                C13453 +
            ((C14747 + C14746) * C262 -
             ((C14315 + C14314) * C31513 + (C14313 + C14312) * C261) +
             (C14749 + C14748) * C31501 - (C15245 + C15244) * C263 -
             (C15247 + C15246) * C31476) *
                C13454) *
               C31369 * C2459 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C261 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31513 -
             (C14316 + C14317) * C262 - (C14318 + C14319) * C31501 +
             (C15102 + C15103) * C263 + (C15104 + C15105) * C31476) *
                C13453 +
            ((C14317 + C14316) * C261 + (C14319 + C14318) * C31513 -
             (C15103 + C15102) * C262 - (C15105 + C15104) * C31501 +
             (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
              C13452 * C1564) *
                 C263 +
             (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
              C13452 * C1570) *
                 C31476) *
                C13454) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C31519 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31512 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C31499 -
           (((C13963 + C13962) * C31171 + (C13961 + C13960) * C116) * C13454 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C13453) *
               C31369 * C31480) *
              C3120 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31512 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C31519 -
           (((C14323 + C14322) * C31171 + (C14321 + C14320) * C116) * C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C31499 +
           (((C13455 * C419 + C13451 * C429 + C13456 * C421 + C13452 * C436) *
                 C116 +
             (C13455 * C432 + C13451 * C449 + C13456 * C435 + C13452 * C451) *
                 C31171) *
                C13453 +
            ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                 C116 +
             (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                 C31171) *
                C13454) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C2459 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31153) *
              C31521 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31153 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C2459) *
              C31518 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C14751 + C14750) * C116 + (C14753 + C14752) * C31171) * C13454) *
               C31369 * C2459 -
           (((C15827 + C15826) * C31171 + (C15825 + C15824) * C116) * C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C31153) *
              C31509 +
          ((((C13455 * C1862 + C13451 * C1871 + C13456 * C1861 +
              C13452 * C1870) *
                 C116 +
             (C13455 * C1868 + C13451 * C1880 + C13456 * C1867 +
              C13452 * C1879) *
                 C31171) *
                C13453 +
            ((C13455 * C2240 + C13451 * C2243 + C13456 * C2241 +
              C13452 * C2244) *
                 C116 +
             (C13455 * C2246 + C13451 * C2249 + C13456 * C2247 +
              C13452 * C2250) *
                 C31171) *
                C13454) *
               C31369 * C31153 -
           (((C16099 + C16098) * C31171 + (C16097 + C16096) * C116) * C13454 +
            ((C13456 * C1868 + C13452 * C1880 + C13455 * C1869 +
              C13451 * C1881) *
                 C31171 +
             (C13456 * C1862 + C13452 * C1871 + C13455 * C1863 +
              C13451 * C1872) *
                 C116) *
                C13453) *
               C31369 * C2459) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C31148 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31156 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C2726) *
              C31272 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31156 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C31148 -
           (((C14323 + C14322) * C31171 + (C14321 + C14320) * C116) * C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C2726) *
              C31279 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C14751 + C14750) * C116 + (C14753 + C14752) * C31171) * C13454) *
               C31369 * C31148 -
           (((C15827 + C15826) * C31171 + (C15825 + C15824) * C116) * C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C31156 +
           (((C13455 * C424 + C13451 * C439 + C13456 * C425 + C13452 * C444) *
                 C116 +
             (C13455 * C442 + C13451 * C454 + C13456 * C443 + C13452 * C455) *
                 C31171) *
                C13453 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C116 +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31171) *
                C13454) *
               C31369 * C2726) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C31519 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C31512 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C31499 -
           (((C13963 + C13962) * C31171 + (C13961 + C13960) * C116) * C13454 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C13453) *
               C31369 * C31480) *
              C3120 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C14317 + C14316) * C116 + (C14319 + C14318) * C31171) * C13454) *
               C31369 * C31512 -
           (((C14315 + C14314) * C31171 + (C14313 + C14312) * C116) * C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C31519 -
           (((C14323 + C14322) * C31171 + (C14321 + C14320) * C116) * C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C31499 +
           (((C13455 * C419 + C13451 * C429 + C13456 * C421 + C13452 * C436) *
                 C116 +
             (C13455 * C432 + C13451 * C449 + C13456 * C435 + C13452 * C451) *
                 C31171) *
                C13453 +
            ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                 C116 +
             (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                 C31171) *
                C13454) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C261 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31513 -
             (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
             (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
                C13453 +
            ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
             (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
             (C14569 + C14568) * C263 + (C14571 + C14570) * C31476) *
                C13454) *
               C31369 * C2459 +
           (((C13660 + C13661) * C262 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31513 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C261) +
             (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
             (C13666 + C13667) * C31476) *
                C13453 +
            ((C13665 + C13664) * C262 -
             ((C13663 + C13662) * C31513 + (C13661 + C13660) * C261) +
             (C13667 + C13666) * C31501 - (C14897 + C14896) * C263 -
             (C14899 + C14898) * C31476) *
                C13454) *
               C31369 * C31153) *
              C3120 +
          ((((C14312 + C14313) * C262 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31513 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C261) +
             (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
             (C14748 + C14749) * C31476) *
                C13453 +
            ((C14747 + C14746) * C262 -
             ((C14315 + C14314) * C31513 + (C14313 + C14312) * C261) +
             (C14749 + C14748) * C31501 - (C15245 + C15244) * C263 -
             (C15247 + C15246) * C31476) *
                C13454) *
               C31369 * C2459 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C261 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31513 -
             (C14316 + C14317) * C262 - (C14318 + C14319) * C31501 +
             (C15102 + C15103) * C263 + (C15104 + C15105) * C31476) *
                C13453 +
            ((C14317 + C14316) * C261 + (C14319 + C14318) * C31513 -
             (C15103 + C15102) * C262 - (C15105 + C15104) * C31501 +
             (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
              C13452 * C1564) *
                 C263 +
             (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
              C13452 * C1570) *
                 C31476) *
                C13454) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C561 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31447 -
            (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
               C13453 +
           ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
            (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
               C13454) *
              C31369 * C557 +
          (((C13660 + C13661) * C562 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31447 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C561) +
            (C13662 + C13663) * C31234) *
               C13453 +
           ((C13665 + C13664) * C562 -
            ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
            (C13667 + C13666) * C31234) *
               C13454) *
              C31369 * C558 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C561 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31447 -
            (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
               C13453 +
           ((C13669 + C13668) * C561 + (C13671 + C13670) * C31447 -
            (C13673 + C13672) * C562 - (C13675 + C13674) * C31234) *
               C13454) *
              C31369 * C559 +
          (((C13960 + C13961) * C562 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31447 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C561) +
            (C13962 + C13963) * C31234) *
               C13453 +
           ((C13455 * C271 + C13451 * C288 + C13456 * C273 + C13452 * C292) *
                C562 -
            ((C13963 + C13962) * C31447 + (C13961 + C13960) * C561) +
            (C13455 * C289 + C13451 * C301 + C13456 * C293 + C13452 * C303) *
                C31234) *
               C13454) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C1303 + (C13655 + C13654) * C1297 -
            (C13657 + C13656) * C1304 - (C13659 + C13658) * C1298 +
            (C14569 + C14568) * C1305 + (C14571 + C14570) * C1299 -
            (C14573 + C14572) * C1306 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C31433 +
          (((C13660 + C13661) * C1304 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C1297 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C1303) +
            (C13662 + C13663) * C1298 - (C13664 + C13665) * C1305 -
            (C13666 + C13667) * C1299 + (C14896 + C14897) * C1306 +
            (C14898 + C14899) * C31486) *
               C13453 +
           ((C13665 + C13664) * C1304 -
            ((C13663 + C13662) * C1297 + (C13661 + C13660) * C1303) +
            (C13667 + C13666) * C1298 - (C14897 + C14896) * C1305 -
            (C14899 + C14898) * C1299 +
            (C13455 * C1033 + C13451 * C1042 + C13456 * C1034 +
             C13452 * C1043) *
                C1306 +
            (C13455 * C1045 + C13451 * C1051 + C13456 * C1046 +
             C13452 * C1052) *
                C31486) *
               C13454) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C13453 +
            ((C13653 + C13652) * C561 + (C13655 + C13654) * C31447 -
             (C13657 + C13656) * C562 - (C13659 + C13658) * C31234) *
                C13454) *
               C31369 * C258 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C13453 +
            ((C13665 + C13664) * C562 -
             ((C13663 + C13662) * C31447 + (C13661 + C13660) * C561) +
             (C13667 + C13666) * C31234) *
                C13454) *
               C31369 * C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C561 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31447 -
             (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
                C13453 +
            ((C13669 + C13668) * C561 + (C13671 + C13670) * C31447 -
             (C13673 + C13672) * C562 - (C13675 + C13674) * C31234) *
                C13454) *
               C31369 * C31470) *
              C31448 +
          ((((C14312 + C14313) * C562 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C31447 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C561) +
             (C14314 + C14315) * C31234) *
                C13453 +
            ((C13455 * C1165 + C13451 * C1174 + C13456 * C1164 +
              C13452 * C1173) *
                 C562 -
             ((C14315 + C14314) * C31447 + (C14313 + C14312) * C561) +
             (C13455 * C1177 + C13451 * C1192 + C13456 * C1176 +
              C13452 * C1191) *
                 C31234) *
                C13454) *
               C31369 * C258 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C561 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C13453 +
            ((C14317 + C14316) * C561 + (C14319 + C14318) * C31447 -
             (C13456 * C1163 + C13452 * C1172 + C13455 * C1164 +
              C13451 * C1173) *
                 C562 -
             (C13456 * C1175 + C13452 * C1190 + C13455 * C1176 +
              C13451 * C1191) *
                 C31234) *
                C13454) *
               C31369 * C259 +
           (((C14320 + C14321) * C562 -
             ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                  C31447 +
              (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                  C561) +
             (C14322 + C14323) * C31234) *
                C13453 +
            ((C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
              C13452 * C1458) *
                 C562 -
             ((C14323 + C14322) * C31447 + (C14321 + C14320) * C561) +
             (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
              C13452 * C1460) *
                 C31234) *
                C13454) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C13453 +
           ((C13653 + C13652) * C1303 + (C13655 + C13654) * C1297 -
            (C13657 + C13656) * C1304 - (C13659 + C13658) * C1298 +
            (C14569 + C14568) * C1305 + (C14571 + C14570) * C1299 -
            (C14573 + C14572) * C1306 - (C14575 + C14574) * C31486) *
               C13454) *
              C31369 * C31143 * C31448 +
          (((C14312 + C14313) * C1304 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C1297 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C1303) +
            (C14314 + C14315) * C1298 - (C14746 + C14747) * C1305 -
            (C14748 + C14749) * C1299 + (C15244 + C15245) * C1306 +
            (C15246 + C15247) * C31486) *
               C13453 +
           ((C14747 + C14746) * C1304 -
            ((C14315 + C14314) * C1297 + (C14313 + C14312) * C1303) +
            (C14749 + C14748) * C1298 - (C15245 + C15244) * C1305 -
            (C15247 + C15246) * C1299 +
            (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 +
             C13452 * C5843) *
                C1306 +
            (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 +
             C13452 * C5845) *
                C31486) *
               C13454) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
            (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C263 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C258 +
          (((C13660 + C13661) * C262 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31513 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C261) +
            (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C262 -
            ((C13663 + C13662) * C31513 + (C13661 + C13660) * C261) +
            (C13667 + C13666) * C31501 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C263 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C259 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C261 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31513 -
            (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
            (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C261 + (C13671 + C13670) * C31513 -
            (C13673 + C13672) * C262 - (C13675 + C13674) * C31501 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C263 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C13453 +
           ((C13455 * C266 + C13451 * C276 + C13456 * C265 + C13452 * C275) *
                C116 +
            (C13455 * C279 + C13451 * C296 + C13456 * C278 + C13452 * C295) *
                C31171) *
               C13454) *
              C31369 * C107 -
          (((C13456 * C277 + C13452 * C294 + C13455 * C278 + C13451 * C295) *
                C31171 +
            (C13456 * C264 + C13452 * C274 + C13455 * C265 + C13451 * C275) *
                C116) *
               C13454 +
           ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                C31171 +
            (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                C116) *
               C13453) *
              C31369 * C108 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C116 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31171) *
               C13453 +
           ((C13455 * C264 + C13451 * C274 + C13456 * C270 + C13452 * C286) *
                C116 +
            (C13455 * C277 + C13451 * C294 + C13456 * C287 + C13452 * C300) *
                C31171) *
               C13454) *
              C31369 * C109 -
          (((C13456 * C291 + C13452 * C302 + C13455 * C287 + C13451 * C300) *
                C31171 +
            (C13456 * C272 + C13452 * C290 + C13455 * C270 + C13451 * C286) *
                C116) *
               C13454 +
           ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                C31171 +
            (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                C116) *
               C13453) *
              C31369 * C110 +
          (((C13455 * C121 + C13451 * C132 + C13456 * C122 + C13452 * C135) *
                C116 +
            (C13455 * C133 + C13451 * C142 + C13456 * C134 + C13452 * C143) *
                C31171) *
               C13453 +
           ((C13455 * C272 + C13451 * C290 + C13456 * C563 + C13452 * C564) *
                C116 +
            (C13455 * C291 + C13451 * C302 + C13456 * C565 + C13452 * C566) *
                C31171) *
               C13454) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C258 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C31470) *
              C31514 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C13455 * C818 + C13451 * C823 + C13456 * C819 + C13452 * C824) *
                 C116 +
             (C13455 * C826 + C13451 * C833 + C13456 * C827 + C13452 * C834) *
                 C31171) *
                C13454) *
               C31369 * C259 -
           (((C13456 * C826 + C13452 * C833 + C13455 * C825 + C13451 * C832) *
                 C31171 +
             (C13456 * C818 + C13452 * C823 + C13455 * C817 + C13451 * C822) *
                 C116) *
                C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C258 -
           (((C13456 * C829 + C13452 * C835 + C13455 * C827 + C13451 * C834) *
                 C31171 +
             (C13456 * C820 + C13452 * C828 + C13455 * C819 + C13451 * C824) *
                 C116) *
                C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C31470) *
              C31503 +
          ((((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                 C116 +
             (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                 C31171) *
                C13453 +
            ((C13455 * C1168 + C13451 * C1180 + C13456 * C1167 +
              C13452 * C1179) *
                 C116 +
             (C13455 * C1183 + C13451 * C1195 + C13456 * C1182 +
              C13452 * C1194) *
                 C31171) *
                C13454) *
               C31369 * C258 -
           (((C13456 * C1181 + C13452 * C1193 + C13455 * C1182 +
              C13451 * C1194) *
                 C31171 +
             (C13456 * C1166 + C13452 * C1178 + C13455 * C1167 +
              C13451 * C1179) *
                 C116) *
                C13454 +
            ((C13456 * C442 + C13452 * C454 + C13455 * C441 + C13451 * C453) *
                 C31171 +
             (C13456 * C424 + C13452 * C439 + C13455 * C423 + C13451 * C438) *
                 C116) *
                C13453) *
               C31369 * C259 +
           (((C13455 * C424 + C13451 * C439 + C13456 * C425 + C13452 * C444) *
                 C116 +
             (C13455 * C442 + C13451 * C454 + C13456 * C443 + C13452 * C455) *
                 C31171) *
                C13453 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C116 +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31171) *
                C13454) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
            (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C955 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C954 -
            ((C13663 + C13662) * C947 + (C13661 + C13660) * C953) +
            (C13667 + C13666) * C948 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C955 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C953 + (C13671 + C13670) * C947 -
            (C13673 + C13672) * C954 - (C13675 + C13674) * C948 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C955 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C13453 +
          ((C13653 + C13652) * C1024 + (C13655 + C13654) * C1018 -
           (C13657 + C13656) * C1025 - (C13659 + C13658) * C1019 +
           (C14569 + C14568) * C1026 + (C14571 + C14570) * C1020 -
           (C14573 + C14572) * C1027 - (C14575 + C14574) * C1021 +
           (C13455 * C5422 + C13451 * C5424 + C13456 * C5686 + C13452 * C5687) *
               C1028 +
           (C13455 * C5425 + C13451 * C5428 + C13456 * C5688 + C13452 * C5689) *
               C1022) *
              C13454) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
            (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
            (C14569 + C14568) * C955 + (C14571 + C14570) * C31476) *
               C13454) *
              C31369 * C31143 * C31514 +
          (((C14312 + C14313) * C954 -
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C947 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C953) +
            (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
            (C14748 + C14749) * C31476) *
               C13453 +
           ((C14747 + C14746) * C954 -
            ((C14315 + C14314) * C947 + (C14313 + C14312) * C953) +
            (C14749 + C14748) * C948 -
            (C13456 * C1560 + C13452 * C1563 + C13455 * C1559 +
             C13451 * C1562) *
                C955 -
            (C13456 * C1566 + C13452 * C1569 + C13455 * C1565 +
             C13451 * C1568) *
                C31476) *
               C13454) *
              C31369 * C31143 * C31503 +
          (((C13455 * C422 + C13451 * C437 + C13456 * C423 + C13452 * C438) *
                C953 +
            (C13455 * C440 + C13451 * C452 + C13456 * C441 + C13452 * C453) *
                C947 -
            (C14750 + C14751) * C954 - (C14752 + C14753) * C948 +
            (C14754 + C14755) * C955 + (C14756 + C14757) * C31476) *
               C13453 +
           ((C14751 + C14750) * C953 + (C14753 + C14752) * C947 -
            (C14755 + C14754) * C954 - (C14757 + C14756) * C948 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C955 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31476) *
               C13454) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C13453 +
            ((C13653 + C13652) * C116 + (C13655 + C13654) * C31171) * C13454) *
               C31369 * C557 -
           (((C13663 + C13662) * C31171 + (C13661 + C13660) * C116) * C13454 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C13453) *
               C31369 * C558 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C13453 +
            ((C13669 + C13668) * C116 + (C13671 + C13670) * C31171) * C13454) *
               C31369 * C559 -
           (((C13963 + C13962) * C31171 + (C13961 + C13960) * C116) * C13454 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C13453) *
               C31369 * C31480) *
              C31448 +
          ((((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C116 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C31171) *
                C13453 +
            ((C13455 * C818 + C13451 * C823 + C13456 * C819 + C13452 * C824) *
                 C116 +
             (C13455 * C826 + C13451 * C833 + C13456 * C827 + C13452 * C834) *
                 C31171) *
                C13454) *
               C31369 * C558 -
           (((C13456 * C826 + C13452 * C833 + C13455 * C825 + C13451 * C832) *
                 C31171 +
             (C13456 * C818 + C13452 * C823 + C13455 * C817 + C13451 * C822) *
                 C116) *
                C13454 +
            ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                 C31171 +
             (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                 C116) *
                C13453) *
               C31369 * C557 -
           (((C13456 * C829 + C13452 * C835 + C13455 * C827 + C13451 * C834) *
                 C31171 +
             (C13456 * C820 + C13452 * C828 + C13455 * C819 + C13451 * C824) *
                 C116) *
                C13454 +
            ((C13456 * C432 + C13452 * C449 + C13455 * C431 + C13451 * C448) *
                 C31171 +
             (C13456 * C419 + C13452 * C429 + C13455 * C418 + C13451 * C428) *
                 C116) *
                C13453) *
               C31369 * C559 +
           (((C13455 * C419 + C13451 * C429 + C13456 * C421 + C13452 * C436) *
                 C116 +
             (C13455 * C432 + C13451 * C449 + C13456 * C435 + C13452 * C451) *
                 C31171) *
                C13453 +
            ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                 C116 +
             (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                 C31171) *
                C13454) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C953 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C947 -
             (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
             (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
                C13453 +
            ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
             (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
             (C14569 + C14568) * C955 + (C14571 + C14570) * C31476) *
                C13454) *
               C31369 * C31433 +
           (((C13660 + C13661) * C954 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C947 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C953) +
             (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
             (C13666 + C13667) * C31476) *
                C13453 +
            ((C13665 + C13664) * C954 -
             ((C13663 + C13662) * C947 + (C13661 + C13660) * C953) +
             (C13667 + C13666) * C948 - (C14897 + C14896) * C955 -
             (C14899 + C14898) * C31476) *
                C13454) *
               C31369 * C31153) *
              C31448 +
          ((((C14312 + C14313) * C954 -
             ((C13456 * C430 + C13452 * C447 + C13455 * C433 + C13451 * C450) *
                  C947 +
              (C13456 * C417 + C13452 * C427 + C13455 * C420 + C13451 * C434) *
                  C953) +
             (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
             (C14748 + C14749) * C31476) *
                C13453 +
            ((C14747 + C14746) * C954 -
             ((C14315 + C14314) * C947 + (C14313 + C14312) * C953) +
             (C14749 + C14748) * C948 -
             (C13456 * C1560 + C13452 * C1563 + C13455 * C1559 +
              C13451 * C1562) *
                 C955 -
             (C13456 * C1566 + C13452 * C1569 + C13455 * C1565 +
              C13451 * C1568) *
                 C31476) *
                C13454) *
               C31369 * C31433 +
           (((C13455 * C417 + C13451 * C427 + C13456 * C418 + C13452 * C428) *
                 C953 +
             (C13455 * C430 + C13451 * C447 + C13456 * C431 + C13452 * C448) *
                 C947 -
             (C14316 + C14317) * C954 - (C14318 + C14319) * C948 +
             (C15102 + C15103) * C955 + (C15104 + C15105) * C31476) *
                C13453 +
            ((C14317 + C14316) * C953 + (C14319 + C14318) * C947 -
             (C15103 + C15102) * C954 - (C15105 + C15104) * C948 +
             (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
              C13452 * C1564) *
                 C955 +
             (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
              C13452 * C1570) *
                 C31476) *
                C13454) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C13453 +
           ((C13455 * C266 + C13451 * C276 + C13456 * C265 + C13452 * C275) *
                C116 +
            (C13455 * C279 + C13451 * C296 + C13456 * C278 + C13452 * C295) *
                C31171) *
               C13454) *
              C31369 * C107 -
          (((C13456 * C277 + C13452 * C294 + C13455 * C278 + C13451 * C295) *
                C31171 +
            (C13456 * C264 + C13452 * C274 + C13455 * C265 + C13451 * C275) *
                C116) *
               C13454 +
           ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                C31171 +
            (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                C116) *
               C13453) *
              C31369 * C108 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C116 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31171) *
               C13453 +
           ((C13455 * C264 + C13451 * C274 + C13456 * C270 + C13452 * C286) *
                C116 +
            (C13455 * C277 + C13451 * C294 + C13456 * C287 + C13452 * C300) *
                C31171) *
               C13454) *
              C31369 * C109 -
          (((C13456 * C291 + C13452 * C302 + C13455 * C287 + C13451 * C300) *
                C31171 +
            (C13456 * C272 + C13452 * C290 + C13455 * C270 + C13451 * C286) *
                C116) *
               C13454 +
           ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                C31171 +
            (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                C116) *
               C13453) *
              C31369 * C110 +
          (((C13455 * C121 + C13451 * C132 + C13456 * C122 + C13452 * C135) *
                C116 +
            (C13455 * C133 + C13451 * C142 + C13456 * C134 + C13452 * C143) *
                C31171) *
               C13453 +
           ((C13455 * C272 + C13451 * C290 + C13456 * C563 + C13452 * C564) *
                C116 +
            (C13455 * C291 + C13451 * C302 + C13456 * C565 + C13452 * C566) *
                C31171) *
               C13454) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C261 + (C13655 + C13654) * C31513 -
            (C13657 + C13656) * C262 - (C13659 + C13658) * C31501 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C263 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C258 +
          (((C13660 + C13661) * C262 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31513 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C261) +
            (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C262 -
            ((C13663 + C13662) * C31513 + (C13661 + C13660) * C261) +
            (C13667 + C13666) * C31501 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C263 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C259 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C261 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31513 -
            (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
            (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C261 + (C13671 + C13670) * C31513 -
            (C13673 + C13672) * C262 - (C13675 + C13674) * C31501 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C263 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C13453 +
           ((C13653 + C13652) * C953 + (C13655 + C13654) * C947 -
            (C13657 + C13656) * C954 - (C13659 + C13658) * C948 +
            (C13455 * C1031 + C13451 * C1037 + C13456 * C1030 +
             C13452 * C1036) *
                C955 +
            (C13455 * C1040 + C13451 * C1049 + C13456 * C1039 +
             C13452 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C13453 +
           ((C13665 + C13664) * C954 -
            ((C13663 + C13662) * C947 + (C13661 + C13660) * C953) +
            (C13667 + C13666) * C948 -
            (C13456 * C1029 + C13452 * C1035 + C13455 * C1030 +
             C13451 * C1036) *
                C955 -
            (C13456 * C1038 + C13452 * C1047 + C13455 * C1039 +
             C13451 * C1048) *
                C31476) *
               C13454) *
              C31369 * C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C13453 +
           ((C13669 + C13668) * C953 + (C13671 + C13670) * C947 -
            (C13673 + C13672) * C954 - (C13675 + C13674) * C948 +
            (C13455 * C1029 + C13451 * C1035 + C13456 * C1307 +
             C13452 * C1308) *
                C955 +
            (C13455 * C1038 + C13451 * C1047 + C13456 * C1309 +
             C13452 * C1310) *
                C31476) *
               C13454) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C13453 +
          ((C13653 + C13652) * C1024 + (C13655 + C13654) * C1018 -
           (C13657 + C13656) * C1025 - (C13659 + C13658) * C1019 +
           (C14569 + C14568) * C1026 + (C14571 + C14570) * C1020 -
           (C14573 + C14572) * C1027 - (C14575 + C14574) * C1021 +
           (C13455 * C5422 + C13451 * C5424 + C13456 * C5686 + C13452 * C5687) *
               C1028 +
           (C13455 * C5425 + C13451 * C5428 + C13456 * C5688 + C13452 * C5689) *
               C1022) *
              C13454) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C13453 +
            (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
             C4737 * C30341 + C4738 * C2723) *
                C13454) *
               C19145 +
           ((C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C13453 +
            (C5239 * C30335 + C5240 * C31230 - C5241 * C30327 - C5242 * C31237 +
             C5581 * C30341 + C5582 * C2723) *
                C13454) *
               C19146) *
              C31148 +
          (((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C13453 +
            (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
             C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                C13454) *
               C19145 +
           ((C11822 - (C11823 + C11824) + C11825 - C11826 - C11827) * C13453 +
            (C5245 * C30327 - (C5244 * C31230 + C5243 * C30335) +
             C5246 * C31237 - C5851 * C30341 - C5852 * C2723) *
                C13454) *
               C19146) *
              C31156 +
          ((((C4585 * C119 + C31123 * C126) * C30335 +
             (C4585 * C129 + C31123 * C140) * C31230 - C4745 * C30327 -
             C4746 * C31237 + C4747 * C30341 + C4748 * C2723) *
                C13453 +
            (C4745 * C30335 + C4746 * C31230 - C4747 * C30327 - C4748 * C31237 +
             C4749 * C30341 + C4750 * C2723) *
                C13454) *
               C19145 +
           ((C9194 * C30335 + C9195 * C31230 - C5247 * C30327 - C5248 * C31237 +
             C5249 * C30341 + C5250 * C2723) *
                C13453 +
            (C5247 * C30335 + C5248 * C31230 - C5249 * C30327 - C5250 * C31237 +
             (C4585 * C1561 + C31123 * C1564) * C30341 +
             (C4585 * C1567 + C31123 * C1570) * C2723) *
                C13454) *
               C19146) *
              C2726) *
         C31189) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C30335 +
              (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
              C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                 C13453 +
             (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 -
              C4736 * C31237 + C4737 * C30341 + C4738 * C2723) *
                 C13454) *
                C19145 +
            ((C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C13453 +
             (C28214 + C28215 - C28216 - C28217 + C28218 + C28219) * C13454) *
                C19146) *
               C2459 +
           (((C4739 * C30327 -
              ((C4585 * C128 + C31123 * C139) * C31230 +
               (C4585 * C118 + C31123 * C125) * C30335) +
              C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                 C13453 +
             (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
              C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                 C13454) *
                C19145 +
            ((C11822 - (C11823 + C11824) + C11825 - C11826 - C11827) * C13453 +
             (C28220 - (C28221 + C28222) + C28223 - C28224 - C28225) * C13454) *
                C19146) *
               C31153) *
              C31448 +
          ((((C11812 - (C11811 + C11810) + C11813 - C11814 - C11815) * C13453 +
             (C28216 - (C28215 + C28214) + C28217 - C28218 - C28219) * C13454) *
                C19145 +
            ((C11818 - (C11817 + C11816) + C11819 - C11820 - C11821) * C13453 +
             (C5585 * C30327 - (C5584 * C31230 + C5583 * C30335) +
              C5586 * C31237 - C5587 * C30341 - C5588 * C2723) *
                 C13454) *
                C19146) *
               C2459 +
           (((C11824 + C11823 - C11822 - C11825 + C11826 + C11827) * C13453 +
             (C28222 + C28221 - C28220 - C28223 + C28224 + C28225) * C13454) *
                C19145 +
            ((C11830 + C11829 - C11828 - C11831 + C11832 + C11833) * C13453 +
             (C6413 * C30335 + C6414 * C31230 - C6415 * C30327 -
              C6416 * C31237 + (C4585 * C6400 + C31123 * C6401) * C30341 +
              (C4585 * C6402 + C31123 * C6403) * C2723) *
                 C13454) *
                C19146) *
               C31153) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2461 +
             (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
             C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
             C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C12834 + C12835 - C12836 - C12837 + C12838 + C12839 - C12840 -
             C12841) *
                C13453 +
            (C5239 * C2461 + C5240 * C31520 - C5241 * C2462 - C5242 * C31516 +
             C5581 * C2463 + C5582 * C31506 - C5959 * C2464 - C5960 * C31486) *
                C13454) *
               C19146) *
              C2459 +
          (((C4739 * C2462 -
             ((C4585 * C128 + C31123 * C139) * C31520 +
              (C4585 * C118 + C31123 * C125) * C2461) +
             C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
             C4744 * C31486) *
                C13453 +
            (C4741 * C2462 - (C4740 * C31520 + C4739 * C2461) + C4742 * C31516 -
             C4743 * C2463 - C4744 * C31506 + C5695 * C2464 + C5696 * C31486) *
                C13454) *
               C19145 +
           ((C5243 * C2462 - (C9192 * C31520 + C9193 * C2461) + C5244 * C31516 -
             C5245 * C2463 - C5246 * C31506 + C5851 * C2464 + C5852 * C31486) *
                C13453 +
            (C5245 * C2462 - (C5244 * C31520 + C5243 * C2461) + C5246 * C31516 -
             C5851 * C2463 - C5852 * C31506 +
             (C4585 * C5842 + C31123 * C5843) * C2464 +
             (C4585 * C5844 + C31123 * C5845) * C31486) *
                C13454) *
               C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C13453 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C13454) *
               C19145 +
           ((C11368 + C11369 - C11370 - C11371) * C13453 +
            (C5239 * C2355 + C5240 * C2349 - C5241 * C2356 - C5242 * C31234) *
                C13454) *
               C19146) *
              C31519 +
          (((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C13453 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C13454) *
               C19145 +
           ((C11376 - (C11377 + C11378) + C11379) * C13453 +
            (C5245 * C2356 - (C5244 * C2349 + C5243 * C2355) + C5246 * C31234) *
                C13454) *
               C19146) *
              C31512 +
          ((((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C13453 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C13454) *
               C19145 +
           ((C11656 + C11657 - C11658 - C11659) * C13453 +
            (C5247 * C2355 + C5248 * C2349 - C5249 * C2356 - C5250 * C31234) *
                C13454) *
               C19146) *
              C31499 +
          (((C4967 * C2356 -
             ((C4585 * C130 + C31123 * C141) * C2349 +
              (C4585 * C120 + C31123 * C131) * C2355) +
             C4968 * C31234) *
                C13453 +
            (C4969 * C2356 - (C4968 * C2349 + C4967 * C2355) + C4970 * C31234) *
                C13454) *
               C19145 +
           ((C25154 * C2356 - (C9434 * C2349 + C9435 * C2355) +
             C25155 * C31234) *
                C13453 +
            ((C4585 * C1457 + C31123 * C1458) * C2356 -
             (C25155 * C2349 + C25154 * C2355) +
             (C4585 * C1459 + C31123 * C1460) * C31234) *
                C13454) *
               C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C2355 +
              (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C11368 + C11369 - C11370 - C11371) * C13453 +
             (C27660 + C27661 - C27662 - C27663) * C13454) *
                C19146) *
               C2459 +
           (((C4739 * C2356 -
              ((C4585 * C128 + C31123 * C139) * C2349 +
               (C4585 * C118 + C31123 * C125) * C2355) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) +
              C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C11376 - (C11377 + C11378) + C11379) * C13453 +
             (C27664 - (C27665 + C27666) + C27667) * C13454) *
                C19146) *
               C31153) *
              C31514 +
          ((((C11370 - (C11369 + C11368) + C11371) * C13453 +
             (C27662 - (C27661 + C27660) + C27663) * C13454) *
                C19145 +
            ((C11374 - (C11373 + C11372) + C11375) * C13453 +
             (C27668 - (C27669 + C27670) + C27671) * C13454) *
                C19146) *
               C2459 +
           (((C11378 + C11377 - C11376 - C11379) * C13453 +
             (C27666 + C27665 - C27664 - C27667) * C13454) *
                C19145 +
            ((C11382 + C11381 - C11380 - C11383) * C13453 +
             (C27672 + C27673 - C27674 - C27675) * C13454) *
                C19146) *
               C31153) *
              C31503 +
          (((C11396 * C13453 + (C27670 + C27669 - C27668 - C27671) * C13454) *
                C19145 +
            ((C11386 + C11385 - C11384 - C11387) * C13453 +
             (C6629 * C2355 + C6630 * C2349 - C6631 * C2356 - C6632 * C31234) *
                 C13454) *
                C19146) *
               C2459 +
           ((C11397 * C13453 + (C27674 - (C27673 + C27672) + C27675) * C13454) *
                C19145 +
            ((C11390 - (C11389 + C11388) + C11391) * C13453 +
             ((C4585 * C6514 + C31123 * C6515) * C2356 -
              (C10791 * C2349 + C10790 * C2355) +
              (C4585 * C6516 + C31123 * C6517) * C31234) *
                 C13454) *
                C19146) *
               C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C2355 +
              (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C11368 + C11369 - C11370 - C11371) * C13453 +
             (C27660 + C27661 - C27662 - C27663) * C13454) *
                C19146) *
               C31148 +
           (((C4739 * C2356 -
              ((C4585 * C128 + C31123 * C139) * C2349 +
               (C4585 * C118 + C31123 * C125) * C2355) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) +
              C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C11376 - (C11377 + C11378) + C11379) * C13453 +
             (C27664 - (C27665 + C27666) + C27667) * C13454) *
                C19146) *
               C31156 +
           ((((C4585 * C119 + C31123 * C126) * C2355 +
              (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
              C4746 * C31234) *
                 C13453 +
             (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                 C13454) *
                C19145 +
            ((C11656 + C11657 - C11658 - C11659) * C13453 +
             (C28016 + C28017 - C28018 - C28019) * C13454) *
                C19146) *
               C2726) *
              C31448 +
          ((((C11370 - (C11369 + C11368) + C11371) * C13453 +
             (C27662 - (C27661 + C27660) + C27663) * C13454) *
                C19145 +
            ((C11374 - (C11373 + C11372) + C11375) * C13453 +
             (C27668 - (C27669 + C27670) + C27671) * C13454) *
                C19146) *
               C31148 +
           (((C11378 + C11377 - C11376 - C11379) * C13453 +
             (C27666 + C27665 - C27664 - C27667) * C13454) *
                C19145 +
            ((C11382 + C11381 - C11380 - C11383) * C13453 +
             (C27672 + C27673 - C27674 - C27675) * C13454) *
                C19146) *
               C31156 +
           (((C11658 - (C11657 + C11656) + C11659) * C13453 +
             (C28018 - (C28017 + C28016) + C28019) * C13454) *
                C19145 +
            ((C11662 - (C11661 + C11660) + C11663) * C13453 +
             ((C4585 * C1171 + C31123 * C1186) * C2356 -
              (C9613 * C2349 + C9612 * C2355) +
              (C4585 * C1189 + C31123 * C1198) * C31234) *
                 C13454) *
                C19146) *
               C2726) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C13453 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C13454) *
               C19145 +
           ((C11368 + C11369 - C11370 - C11371) * C13453 +
            (C5239 * C2355 + C5240 * C2349 - C5241 * C2356 - C5242 * C31234) *
                C13454) *
               C19146) *
              C31519 +
          (((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C13453 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C13454) *
               C19145 +
           ((C11376 - (C11377 + C11378) + C11379) * C13453 +
            (C5245 * C2356 - (C5244 * C2349 + C5243 * C2355) + C5246 * C31234) *
                C13454) *
               C19146) *
              C31512 +
          ((((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C13453 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C13454) *
               C19145 +
           ((C11656 + C11657 - C11658 - C11659) * C13453 +
            (C5247 * C2355 + C5248 * C2349 - C5249 * C2356 - C5250 * C31234) *
                C13454) *
               C19146) *
              C31499 +
          (((C4967 * C2356 -
             ((C4585 * C130 + C31123 * C141) * C2349 +
              (C4585 * C120 + C31123 * C131) * C2355) +
             C4968 * C31234) *
                C13453 +
            (C4969 * C2356 - (C4968 * C2349 + C4967 * C2355) + C4970 * C31234) *
                C13454) *
               C19145 +
           ((C25154 * C2356 - (C9434 * C2349 + C9435 * C2355) +
             C25155 * C31234) *
                C13453 +
            ((C4585 * C1457 + C31123 * C1458) * C2356 -
             (C25155 * C2349 + C25154 * C2355) +
             (C4585 * C1459 + C31123 * C1460) * C31234) *
                C13454) *
               C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2461 +
             (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
             C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
             C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C12834 + C12835 - C12836 - C12837 + C12838 + C12839 - C12840 -
             C12841) *
                C13453 +
            (C5239 * C2461 + C5240 * C31520 - C5241 * C2462 - C5242 * C31516 +
             C5581 * C2463 + C5582 * C31506 - C5959 * C2464 - C5960 * C31486) *
                C13454) *
               C19146) *
              C2459 +
          (((C4739 * C2462 -
             ((C4585 * C128 + C31123 * C139) * C31520 +
              (C4585 * C118 + C31123 * C125) * C2461) +
             C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
             C4744 * C31486) *
                C13453 +
            (C4741 * C2462 - (C4740 * C31520 + C4739 * C2461) + C4742 * C31516 -
             C4743 * C2463 - C4744 * C31506 + C5695 * C2464 + C5696 * C31486) *
                C13454) *
               C19145 +
           ((C5243 * C2462 - (C9192 * C31520 + C9193 * C2461) + C5244 * C31516 -
             C5245 * C2463 - C5246 * C31506 + C5851 * C2464 + C5852 * C31486) *
                C13453 +
            (C5245 * C2462 - (C5244 * C31520 + C5243 * C2461) + C5246 * C31516 -
             C5851 * C2463 - C5852 * C31506 +
             (C4585 * C5842 + C31123 * C5843) * C2464 +
             (C4585 * C5844 + C31123 * C5845) * C31486) *
                C13454) *
               C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C30335 +
              (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
              C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                 C13453 +
             (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 -
              C4736 * C31237 + C4737 * C30341 + C4738 * C2723) *
                 C13454) *
                C19145 +
            ((C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C13453 +
             (C28214 + C28215 - C28216 - C28217 + C28218 + C28219) * C13454) *
                C19146) *
               C31433 +
           (((C4739 * C30327 -
              ((C4585 * C128 + C31123 * C139) * C31230 +
               (C4585 * C118 + C31123 * C125) * C30335) +
              C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                 C13453 +
             (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
              C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                 C13454) *
                C19145 +
            ((C11822 - (C11823 + C11824) + C11825 - C11826 - C11827) * C13453 +
             (C28220 - (C28221 + C28222) + C28223 - C28224 - C28225) * C13454) *
                C19146) *
               C31153) *
              C3120 +
          ((((C11812 - (C11811 + C11810) + C11813 - C11814 - C11815) * C13453 +
             (C28216 - (C28215 + C28214) + C28217 - C28218 - C28219) * C13454) *
                C19145 +
            ((C11818 - (C11817 + C11816) + C11819 - C11820 - C11821) * C13453 +
             (C5585 * C30327 - (C5584 * C31230 + C5583 * C30335) +
              C5586 * C31237 - C5587 * C30341 - C5588 * C2723) *
                 C13454) *
                C19146) *
               C31433 +
           (((C11824 + C11823 - C11822 - C11825 + C11826 + C11827) * C13453 +
             (C28222 + C28221 - C28220 - C28223 + C28224 + C28225) * C13454) *
                C19145 +
            ((C11830 + C11829 - C11828 - C11831 + C11832 + C11833) * C13453 +
             (C6413 * C30335 + C6414 * C31230 - C6415 * C30327 -
              C6416 * C31237 + (C4585 * C6400 + C31123 * C6401) * C30341 +
              (C4585 * C6402 + C31123 * C6403) * C2723) *
                 C13454) *
                C19146) *
               C31153) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C13453 +
            (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
             C4737 * C30341 + C4738 * C2723) *
                C13454) *
               C19145 +
           ((C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C13453 +
            (C28214 + C28215 - C28216 - C28217 + C28218 + C28219) * C13454) *
               C19146) *
              C31143 * C31272 +
          (((C11812 - (C11811 + C11810) + C11813 - C11814 - C11815) * C13453 +
            (C28216 - (C28215 + C28214) + C28217 - C28218 - C28219) * C13454) *
               C19145 +
           ((C11818 - (C11817 + C11816) + C11819 - C11820 - C11821) * C13453 +
            (C30220 - (C30221 + C30222) + C30223 - C30224 - C30225) * C13454) *
               C19146) *
              C31143 * C31279 +
          ((C13368 * C13453 +
            (C30222 + C30221 - C30220 - C30223 + C30224 + C30225) * C13454) *
               C19145 +
           ((C13361 + C13360 - C13359 - C13362 + C13363 + C13364) * C13453 +
            (C6629 * C30335 + C6630 * C31230 - C6631 * C30327 - C6632 * C31237 +
             (C4585 * C6616 + C31123 * C6617) * C30341 +
             (C4585 * C6618 + C31123 * C6619) * C2723) *
                C13454) *
               C19146) *
              C31143 * C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2461 +
             (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
             C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
             C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C12834 + C12835 - C12836 - C12837 + C12838 + C12839 - C12840 -
             C12841) *
                C13453 +
            (C29544 + C29545 - C29546 - C29547 + C29548 + C29549 - C29550 -
             C29551) *
                C13454) *
               C19146) *
              C31143 * C3120 +
          (((C12836 - (C12835 + C12834) + C12837 - C12838 - C12839 + C12840 +
             C12841) *
                C13453 +
            (C29546 - (C29545 + C29544) + C29547 - C29548 - C29549 + C29550 +
             C29551) *
                C13454) *
               C19145 +
           ((C12844 - (C12843 + C12842) + C12845 - C12846 - C12847 + C12848 +
             C12849) *
                C13453 +
            (C5585 * C2462 - (C5584 * C31520 + C5583 * C2461) + C5586 * C31516 -
             C5587 * C2463 - C5588 * C31506 +
             (C4585 * C5554 + C31123 * C5559) * C2464 +
             (C4585 * C5560 + C31123 * C5563) * C31486) *
                C13454) *
               C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C2355 +
              (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C11368 + C11369 - C11370 - C11371) * C13453 +
             (C27660 + C27661 - C27662 - C27663) * C13454) *
                C19146) *
               C31510 +
           (((C4739 * C2356 -
              ((C4585 * C128 + C31123 * C139) * C2349 +
               (C4585 * C118 + C31123 * C125) * C2355) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) +
              C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C11376 - (C11377 + C11378) + C11379) * C13453 +
             (C27664 - (C27665 + C27666) + C27667) * C13454) *
                C19146) *
               C31497 +
           ((((C4585 * C119 + C31123 * C126) * C2355 +
              (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
              C4746 * C31234) *
                 C13453 +
             (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                 C13454) *
                C19145 +
            ((C11656 + C11657 - C11658 - C11659) * C13453 +
             (C28016 + C28017 - C28018 - C28019) * C13454) *
                C19146) *
               C31470) *
              C3120 +
          ((((C11370 - (C11369 + C11368) + C11371) * C13453 +
             (C27662 - (C27661 + C27660) + C27663) * C13454) *
                C19145 +
            ((C11374 - (C11373 + C11372) + C11375) * C13453 +
             (C27668 - (C27669 + C27670) + C27671) * C13454) *
                C19146) *
               C31510 +
           (((C11378 + C11377 - C11376 - C11379) * C13453 +
             (C27666 + C27665 - C27664 - C27667) * C13454) *
                C19145 +
            ((C11382 + C11381 - C11380 - C11383) * C13453 +
             (C27672 + C27673 - C27674 - C27675) * C13454) *
                C19146) *
               C31497 +
           (((C11658 - (C11657 + C11656) + C11659) * C13453 +
             (C28018 - (C28017 + C28016) + C28019) * C13454) *
                C19145 +
            ((C11662 - (C11661 + C11660) + C11663) * C13453 +
             ((C4585 * C1171 + C31123 * C1186) * C2356 -
              (C9613 * C2349 + C9612 * C2355) +
              (C4585 * C1189 + C31123 * C1198) * C31234) *
                 C13454) *
                C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C13453 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C13454) *
               C19145 +
           ((C11368 + C11369 - C11370 - C11371) * C13453 +
            (C27660 + C27661 - C27662 - C27663) * C13454) *
               C19146) *
              C31143 * C31521 +
          (((C11370 - (C11369 + C11368) + C11371) * C13453 +
            (C27662 - (C27661 + C27660) + C27663) * C13454) *
               C19145 +
           ((C11374 - (C11373 + C11372) + C11375) * C13453 +
            (C27668 - (C27669 + C27670) + C27671) * C13454) *
               C19146) *
              C31143 * C31518 +
          ((C11396 * C13453 + (C27670 + C27669 - C27668 - C27671) * C13454) *
               C19145 +
           ((C11386 + C11385 - C11384 - C11387) * C13453 +
            (C29682 + C29683 - C29684 - C29685) * C13454) *
               C19146) *
              C31143 * C31509 +
          ((C12954 * C13453 + (C29684 - (C29683 + C29682) + C29685) * C13454) *
               C19145 +
           ((C12951 - (C12950 + C12949) + C12952) * C13453 +
            ((C4585 * C6244 + C31123 * C6249) * C2356 -
             (C11021 * C2349 + C11020 * C2355) +
             (C4585 * C6250 + C31123 * C6253) * C31234) *
                C13454) *
               C19146) *
              C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C2355 +
              (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C11368 + C11369 - C11370 - C11371) * C13453 +
             (C27660 + C27661 - C27662 - C27663) * C13454) *
                C19146) *
               C31433 +
           (((C4739 * C2356 -
              ((C4585 * C128 + C31123 * C139) * C2349 +
               (C4585 * C118 + C31123 * C125) * C2355) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) +
              C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C11376 - (C11377 + C11378) + C11379) * C13453 +
             (C27664 - (C27665 + C27666) + C27667) * C13454) *
                C19146) *
               C31153) *
              C31272 +
          ((((C11370 - (C11369 + C11368) + C11371) * C13453 +
             (C27662 - (C27661 + C27660) + C27663) * C13454) *
                C19145 +
            ((C11374 - (C11373 + C11372) + C11375) * C13453 +
             (C27668 - (C27669 + C27670) + C27671) * C13454) *
                C19146) *
               C31433 +
           (((C11378 + C11377 - C11376 - C11379) * C13453 +
             (C27666 + C27665 - C27664 - C27667) * C13454) *
                C19145 +
            ((C11382 + C11381 - C11380 - C11383) * C13453 +
             (C27672 + C27673 - C27674 - C27675) * C13454) *
                C19146) *
               C31153) *
              C31279 +
          (((C11396 * C13453 + (C27670 + C27669 - C27668 - C27671) * C13454) *
                C19145 +
            ((C11386 + C11385 - C11384 - C11387) * C13453 +
             (C29682 + C29683 - C29684 - C29685) * C13454) *
                C19146) *
               C31433 +
           ((C11397 * C13453 + (C27674 - (C27673 + C27672) + C27675) * C13454) *
                C19145 +
            ((C11390 - (C11389 + C11388) + C11391) * C13453 +
             ((C4585 * C6514 + C31123 * C6515) * C2356 -
              (C10791 * C2349 + C10790 * C2355) +
              (C4585 * C6516 + C31123 * C6517) * C31234) *
                 C13454) *
                C19146) *
               C31153) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C2355 +
              (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C11368 + C11369 - C11370 - C11371) * C13453 +
             (C27660 + C27661 - C27662 - C27663) * C13454) *
                C19146) *
               C31510 +
           (((C4739 * C2356 -
              ((C4585 * C128 + C31123 * C139) * C2349 +
               (C4585 * C118 + C31123 * C125) * C2355) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) +
              C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C11376 - (C11377 + C11378) + C11379) * C13453 +
             (C27664 - (C27665 + C27666) + C27667) * C13454) *
                C19146) *
               C31497 +
           ((((C4585 * C119 + C31123 * C126) * C2355 +
              (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
              C4746 * C31234) *
                 C13453 +
             (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                 C13454) *
                C19145 +
            ((C11656 + C11657 - C11658 - C11659) * C13453 +
             (C28016 + C28017 - C28018 - C28019) * C13454) *
                C19146) *
               C31470) *
              C3120 +
          ((((C11370 - (C11369 + C11368) + C11371) * C13453 +
             (C27662 - (C27661 + C27660) + C27663) * C13454) *
                C19145 +
            ((C11374 - (C11373 + C11372) + C11375) * C13453 +
             (C27668 - (C27669 + C27670) + C27671) * C13454) *
                C19146) *
               C31510 +
           (((C11378 + C11377 - C11376 - C11379) * C13453 +
             (C27666 + C27665 - C27664 - C27667) * C13454) *
                C19145 +
            ((C11382 + C11381 - C11380 - C11383) * C13453 +
             (C27672 + C27673 - C27674 - C27675) * C13454) *
                C19146) *
               C31497 +
           (((C11658 - (C11657 + C11656) + C11659) * C13453 +
             (C28018 - (C28017 + C28016) + C28019) * C13454) *
                C19145 +
            ((C11662 - (C11661 + C11660) + C11663) * C13453 +
             ((C4585 * C1171 + C31123 * C1186) * C2356 -
              (C9613 * C2349 + C9612 * C2355) +
              (C4585 * C1189 + C31123 * C1198) * C31234) *
                 C13454) *
                C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2461 +
             (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
             C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
             C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C12834 + C12835 - C12836 - C12837 + C12838 + C12839 - C12840 -
             C12841) *
                C13453 +
            (C29544 + C29545 - C29546 - C29547 + C29548 + C29549 - C29550 -
             C29551) *
                C13454) *
               C19146) *
              C31143 * C3120 +
          (((C12836 - (C12835 + C12834) + C12837 - C12838 - C12839 + C12840 +
             C12841) *
                C13453 +
            (C29546 - (C29545 + C29544) + C29547 - C29548 - C29549 + C29550 +
             C29551) *
                C13454) *
               C19145 +
           ((C12844 - (C12843 + C12842) + C12845 - C12846 - C12847 + C12848 +
             C12849) *
                C13453 +
            (C5585 * C2462 - (C5584 * C31520 + C5583 * C2461) + C5586 * C31516 -
             C5587 * C2463 - C5588 * C31506 +
             (C4585 * C5554 + C31123 * C5559) * C2464 +
             (C4585 * C5560 + C31123 * C5563) * C31486) *
                C13454) *
               C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C1303 +
             (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
             C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
             C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C10276 + C10277 - C10278 - C10279 + C10280 + C10281 - C10282 -
             C10283) *
                C13453 +
            (C5239 * C1303 + C5240 * C1297 - C5241 * C1304 - C5242 * C1298 +
             C5581 * C1305 + C5582 * C1299 - C5959 * C1306 - C5960 * C31486) *
                C13454) *
               C19146) *
              C31433 +
          (((C4739 * C1304 -
             ((C4585 * C128 + C31123 * C139) * C1297 +
              (C4585 * C118 + C31123 * C125) * C1303) +
             C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
             C4744 * C31486) *
                C13453 +
            (C4741 * C1304 - (C4740 * C1297 + C4739 * C1303) + C4742 * C1298 -
             C4743 * C1305 - C4744 * C1299 + C5695 * C1306 + C5696 * C31486) *
                C13454) *
               C19145 +
           ((C5243 * C1304 - (C9192 * C1297 + C9193 * C1303) + C5244 * C1298 -
             C5245 * C1305 - C5246 * C1299 + C5851 * C1306 + C5852 * C31486) *
                C13453 +
            (C5245 * C1304 - (C5244 * C1297 + C5243 * C1303) + C5246 * C1298 -
             C5851 * C1305 - C5852 * C1299 +
             (C4585 * C5842 + C31123 * C5843) * C1306 +
             (C4585 * C5844 + C31123 * C5845) * C31486) *
                C13454) *
               C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C13453 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C13454) *
               C19145 +
           ((C9586 + C9587 - C9588 - C9589) * C13453 +
            (C5239 * C561 + C5240 * C31447 - C5241 * C562 - C5242 * C31234) *
                C13454) *
               C19146) *
              C557 +
          (((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C13453 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C13454) *
               C19145 +
           ((C9594 - (C9595 + C9596) + C9597) * C13453 +
            (C5245 * C562 - (C5244 * C31447 + C5243 * C561) + C5246 * C31234) *
                C13454) *
               C19146) *
              C558 +
          ((((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C13453 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C13454) *
               C19145 +
           ((C9602 + C9603 - C9604 - C9605) * C13453 +
            (C5247 * C561 + C5248 * C31447 - C5249 * C562 - C5250 * C31234) *
                C13454) *
               C19146) *
              C559 +
          (((C4967 * C562 -
             ((C4585 * C130 + C31123 * C141) * C31447 +
              (C4585 * C120 + C31123 * C131) * C561) +
             C4968 * C31234) *
                C13453 +
            (C4969 * C562 - (C4968 * C31447 + C4967 * C561) + C4970 * C31234) *
                C13454) *
               C19145 +
           ((C25154 * C562 - (C9434 * C31447 + C9435 * C561) +
             C25155 * C31234) *
                C13453 +
            ((C4585 * C1457 + C31123 * C1458) * C562 -
             (C25155 * C31447 + C25154 * C561) +
             (C4585 * C1459 + C31123 * C1460) * C31234) *
                C13454) *
               C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C561 +
              (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C9586 + C9587 - C9588 - C9589) * C13453 +
             (C25482 + C25483 - C25484 - C25485) * C13454) *
                C19146) *
               C31433 +
           (((C4739 * C562 -
              ((C4585 * C128 + C31123 * C139) * C31447 +
               (C4585 * C118 + C31123 * C125) * C561) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C9594 - (C9595 + C9596) + C9597) * C13453 +
             (C25486 - (C25487 + C25488) + C25489) * C13454) *
                C19146) *
               C31153) *
              C1681 +
          ((((C9588 - (C9587 + C9586) + C9589) * C13453 +
             (C25484 - (C25483 + C25482) + C25485) * C13454) *
                C19145 +
            ((C9592 - (C9591 + C9590) + C9593) * C13453 +
             (C26932 - (C26933 + C26934) + C26935) * C13454) *
                C19146) *
               C31433 +
           (((C9596 + C9595 - C9594 - C9597) * C13453 +
             (C25488 + C25487 - C25486 - C25489) * C13454) *
                C19145 +
            ((C9600 + C9599 - C9598 - C9601) * C13453 +
             (C26936 + C26937 - C26938 - C26939) * C13454) *
                C19146) *
               C31153) *
              C1682 +
          (((C10792 * C13453 + (C26934 + C26933 - C26932 - C26935) * C13454) *
                C19145 +
            ((C10780 + C10779 - C10778 - C10781) * C13453 +
             (C6629 * C561 + C6630 * C31447 - C6631 * C562 - C6632 * C31234) *
                 C13454) *
                C19146) *
               C31433 +
           ((C10793 * C13453 + (C26938 - (C26937 + C26936) + C26939) * C13454) *
                C19145 +
            ((C10794 - (C10783 + C10782) + C10795) * C13453 +
             ((C4585 * C6514 + C31123 * C6515) * C562 -
              (C10791 * C31447 + C10790 * C561) +
              (C4585 * C6516 + C31123 * C6517) * C31234) *
                 C13454) *
                C19146) *
               C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C1303 +
             (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
             C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
             C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C10276 + C10277 - C10278 - C10279 + C10280 + C10281 - C10282 -
             C10283) *
                C13453 +
            (C26340 + C26341 - C26342 - C26343 + C26344 + C26345 - C26346 -
             C26347) *
                C13454) *
               C19146) *
              C31143 * C31448 +
          (((C10278 - (C10277 + C10276) + C10279 - C10280 - C10281 + C10282 +
             C10283) *
                C13453 +
            (C26342 - (C26341 + C26340) + C26343 - C26344 - C26345 + C26346 +
             C26347) *
                C13454) *
               C19145 +
           ((C10286 - (C10285 + C10284) + C10287 - C10288 - C10289 + C10290 +
             C10291) *
                C13453 +
            (C5585 * C1304 - (C5584 * C1297 + C5583 * C1303) + C5586 * C1298 -
             C5587 * C1305 - C5588 * C1299 +
             (C4585 * C5554 + C31123 * C5559) * C1306 +
             (C4585 * C5560 + C31123 * C5563) * C31486) *
                C13454) *
               C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C561 +
              (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C9586 + C9587 - C9588 - C9589) * C13453 +
             (C25482 + C25483 - C25484 - C25485) * C13454) *
                C19146) *
               C258 +
           (((C4739 * C562 -
              ((C4585 * C128 + C31123 * C139) * C31447 +
               (C4585 * C118 + C31123 * C125) * C561) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C9594 - (C9595 + C9596) + C9597) * C13453 +
             (C25486 - (C25487 + C25488) + C25489) * C13454) *
                C19146) *
               C259 +
           ((((C4585 * C119 + C31123 * C126) * C561 +
              (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
              C4746 * C31234) *
                 C13453 +
             (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                 C13454) *
                C19145 +
            ((C9602 + C9603 - C9604 - C9605) * C13453 +
             (C25490 + C25491 - C25492 - C25493) * C13454) *
                C19146) *
               C31470) *
              C31448 +
          ((((C9588 - (C9587 + C9586) + C9589) * C13453 +
             (C25484 - (C25483 + C25482) + C25485) * C13454) *
                C19145 +
            ((C9592 - (C9591 + C9590) + C9593) * C13453 +
             (C5585 * C562 - (C5584 * C31447 + C5583 * C561) + C5586 * C31234) *
                 C13454) *
                C19146) *
               C258 +
           (((C9596 + C9595 - C9594 - C9597) * C13453 +
             (C25488 + C25487 - C25486 - C25489) * C13454) *
                C19145 +
            ((C9600 + C9599 - C9598 - C9601) * C13453 +
             (C6413 * C561 + C6414 * C31447 - C6415 * C562 - C6416 * C31234) *
                 C13454) *
                C19146) *
               C259 +
           (((C9604 - (C9603 + C9602) + C9605) * C13453 +
             (C25492 - (C25491 + C25490) + C25493) * C13454) *
                C19145 +
            ((C9614 - (C9607 + C9606) + C9615) * C13453 +
             ((C4585 * C1171 + C31123 * C1186) * C562 -
              (C9613 * C31447 + C9612 * C561) +
              (C4585 * C1189 + C31123 * C1198) * C31234) *
                 C13454) *
                C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C13453 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C13454) *
               C19145 +
           ((C9586 + C9587 - C9588 - C9589) * C13453 +
            (C25482 + C25483 - C25484 - C25485) * C13454) *
               C19146) *
              C31143 * C2133 +
          (((C9588 - (C9587 + C9586) + C9589) * C13453 +
            (C25484 - (C25483 + C25482) + C25485) * C13454) *
               C19145 +
           ((C9592 - (C9591 + C9590) + C9593) * C13453 +
            (C26932 - (C26933 + C26934) + C26935) * C13454) *
               C19146) *
              C31143 * C2134 +
          ((C10792 * C13453 + (C26934 + C26933 - C26932 - C26935) * C13454) *
               C19145 +
           ((C10780 + C10779 - C10778 - C10781) * C13453 +
            (C27202 + C27203 - C27204 - C27205) * C13454) *
               C19146) *
              C31143 * C2135 +
          ((C11022 * C13453 + (C27204 - (C27203 + C27202) + C27205) * C13454) *
               C19145 +
           ((C11023 - (C11014 + C11013) + C11024) * C13453 +
            ((C4585 * C6244 + C31123 * C6249) * C562 -
             (C11021 * C31447 + C11020 * C561) +
             (C4585 * C6250 + C31123 * C6253) * C31234) *
                C13454) *
               C19146) *
              C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C4585 * C117 + C31123 * C124) * C116 +
                 (C4585 * C127 + C31123 * C138) * C31171) *
                    C13453 +
                (C4733 * C116 + C4734 * C31171) * C13454) *
                   C19145 +
               ((C9204 + C9205) * C13453 +
                (C5239 * C116 + C5240 * C31171) * C13454) *
                   C19146) *
                  C107 -
              (((C5244 * C31171 + C5243 * C116) * C13454 +
                (C9210 + C9211) * C13453) *
                   C19146 +
               ((C4740 * C31171 + C4739 * C116) * C13454 +
                ((C4585 * C128 + C31123 * C139) * C31171 +
                 (C4585 * C118 + C31123 * C125) * C116) *
                    C13453) *
                   C19145) *
                  C108 +
              ((((C4585 * C119 + C31123 * C126) * C116 +
                 (C4585 * C129 + C31123 * C140) * C31171) *
                    C13453 +
                (C4745 * C116 + C4746 * C31171) * C13454) *
                   C19145 +
               ((C9212 + C9213) * C13453 +
                (C5247 * C116 + C5248 * C31171) * C13454) *
                   C19146) *
                  C109 -
              ((((C4585 * C829 + C31123 * C835) * C31171 +
                 (C4585 * C820 + C31123 * C828) * C116) *
                    C13454 +
                (C9438 + C9439) * C13453) *
                   C19146 +
               ((C4968 * C31171 + C4967 * C116) * C13454 +
                ((C4585 * C130 + C31123 * C141) * C31171 +
                 (C4585 * C120 + C31123 * C131) * C116) *
                    C13453) *
                   C19145) *
                  C110 +
              ((((C4585 * C121 + C31123 * C132) * C116 +
                 (C4585 * C133 + C31123 * C142) * C31171) *
                    C13453 +
                ((C4585 * C272 + C31123 * C290) * C116 +
                 (C4585 * C291 + C31123 * C302) * C31171) *
                    C13454) *
                   C19145 +
               (((C4585 * C421 + C31123 * C436) * C116 +
                 (C4585 * C435 + C31123 * C451) * C31171) *
                    C13453 +
                ((C4585 * C821 + C31123 * C830) * C116 +
                 (C4585 * C831 + C31123 * C836) * C31171) *
                    C13454) *
                   C19146) *
                  C111) *
             C31189 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C4585 * C117 + C31123 * C124) * C261 +
                 (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
                 C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                    C13453 +
                (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
                 C4737 * C263 + C4738 * C31476) *
                    C13454) *
                   C19145 +
               ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
                (C5239 * C261 + C5240 * C31513 - C5241 * C262 - C5242 * C31501 +
                 C5581 * C263 + C5582 * C31476) *
                    C13454) *
                   C19146) *
                  C258 +
              (((C4739 * C262 -
                 ((C4585 * C128 + C31123 * C139) * C31513 +
                  (C4585 * C118 + C31123 * C125) * C261) +
                 C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                    C13453 +
                (C4741 * C262 - (C4740 * C31513 + C4739 * C261) +
                 C4742 * C31501 - C4743 * C263 - C4744 * C31476) *
                    C13454) *
                   C19145 +
               ((C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) *
                    C13453 +
                (C5245 * C262 - (C5244 * C31513 + C5243 * C261) +
                 C5246 * C31501 - C5851 * C263 - C5852 * C31476) *
                    C13454) *
                   C19146) *
                  C259 +
              ((((C4585 * C119 + C31123 * C126) * C261 +
                 (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
                 C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
                    C13453 +
                (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
                 C4749 * C263 + C4750 * C31476) *
                    C13454) *
                   C19145 +
               ((C9194 * C261 + C9195 * C31513 - C5247 * C262 - C5248 * C31501 +
                 C5249 * C263 + C5250 * C31476) *
                    C13453 +
                (C5247 * C261 + C5248 * C31513 - C5249 * C262 - C5250 * C31501 +
                 (C4585 * C1561 + C31123 * C1564) * C263 +
                 (C4585 * C1567 + C31123 * C1570) * C31476) *
                    C13454) *
                   C19146) *
                  C31470) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C258 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C259 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C31470) *
              C31514 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C259 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C258 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C31470) *
              C31503 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 +
             (C6629 * C116 + C6630 * C31171) * C13454) *
                C19146) *
               C258 -
           (((C10791 * C31171 + C10790 * C116) * C13454 +
             (C9217 + C9216) * C13453) *
                C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C259 +
           ((C9224 * C13453 + (C25019 + C25018) * C13454) * C19145 +
            ((C9221 + C9220) * C13453 +
             ((C4585 * C2241 + C31123 * C2244) * C116 +
              (C4585 * C2247 + C31123 * C2250) * C31171) *
                 C13454) *
                C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C13453 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
            (C5239 * C953 + C5240 * C947 - C5241 * C954 - C5242 * C948 +
             C5581 * C955 + C5582 * C31476) *
                C13454) *
               C19146) *
              C31510 +
          (((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C13453 +
            (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
             C4743 * C955 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C13453 +
            (C5245 * C954 - (C5244 * C947 + C5243 * C953) + C5246 * C948 -
             C5851 * C955 - C5852 * C31476) *
                C13454) *
               C19146) *
              C31497 +
          ((((C4585 * C119 + C31123 * C126) * C953 +
             (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
             C4746 * C948 + C4747 * C955 + C4748 * C31476) *
                C13453 +
            (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
             C4749 * C955 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
             C5249 * C955 + C5250 * C31476) *
                C13453 +
            (C5247 * C953 + C5248 * C947 - C5249 * C954 - C5250 * C948 +
             (C4585 * C1561 + C31123 * C1564) * C955 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1024 +
            (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
            C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
            C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
               C13453 +
           (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
            C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
            C5441 * C1028 + C5442 * C1022) *
               C13454) *
              C19145 +
          ((C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
            C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
            C5959 * C1028 + C5960 * C1022) *
               C13453 +
           (C5239 * C1024 + C5240 * C1018 - C5241 * C1025 - C5242 * C1019 +
            C5581 * C1026 + C5582 * C1020 - C5959 * C1027 - C5960 * C1021 +
            (C4585 * C5950 + C31123 * C5951) * C1028 +
            (C4585 * C5952 + C31123 * C5953) * C1022) *
               C13454) *
              C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C13453 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
            (C25868 + C25869 - C25870 - C25871 + C25872 + C25873) * C13454) *
               C19146) *
              C31143 * C31514 +
          (((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C13453 +
            (C25870 - (C25869 + C25868) + C25871 - C25872 - C25873) * C13454) *
               C19145 +
           ((C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C13453 +
            (C25874 - (C25875 + C25876) + C25877 - C25878 - C25879) * C13454) *
               C19146) *
              C31143 * C31503 +
          ((C9920 * C13453 +
            (C25876 + C25875 - C25874 - C25877 + C25878 + C25879) * C13454) *
               C19145 +
           ((C9912 + C9911 - C9910 - C9913 + C9914 + C9915) * C13453 +
            (C6629 * C953 + C6630 * C947 - C6631 * C954 - C6632 * C948 +
             (C4585 * C6616 + C31123 * C6617) * C955 +
             (C4585 * C6618 + C31123 * C6619) * C31476) *
                C13454) *
               C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C31510 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31497 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C31470) *
              C1681 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31497 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C31510 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C31470) *
              C1682 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 +
             (C6629 * C116 + C6630 * C31171) * C13454) *
                C19146) *
               C31510 -
           (((C10791 * C31171 + C10790 * C116) * C13454 +
             (C9217 + C9216) * C13453) *
                C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C31497 +
           ((C9224 * C13453 + (C25019 + C25018) * C13454) * C19145 +
            ((C9221 + C9220) * C13453 +
             ((C4585 * C2241 + C31123 * C2244) * C116 +
              (C4585 * C2247 + C31123 * C2250) * C31171) *
                 C13454) *
                C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C13453 +
            (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
             C4737 * C263 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
            (C26640 + C26641 - C26642 - C26643 + C26644 + C26645) * C13454) *
               C19146) *
              C31143 * C1681 +
          (((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C13453 +
            (C26642 - (C26641 + C26640) + C26643 - C26644 - C26645) * C13454) *
               C19145 +
           ((C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C13453 +
            (C26646 - (C26647 + C26648) + C26649 - C26650 - C26651) * C13454) *
               C19146) *
              C31143 * C1682 +
          ((C10534 * C13453 +
            (C26648 + C26647 - C26646 - C26649 + C26650 + C26651) * C13454) *
               C19145 +
           ((C10526 + C10525 - C10524 - C10527 + C10528 + C10529) * C13453 +
            (C6629 * C261 + C6630 * C31513 - C6631 * C262 - C6632 * C31501 +
             (C4585 * C6616 + C31123 * C6617) * C263 +
             (C4585 * C6618 + C31123 * C6619) * C31476) *
                C13454) *
               C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C13453 +
            (C4733 * C116 + C4734 * C31171) * C13454) *
               C19145 +
           ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
              C31143 * C1856 -
          (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
           ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
              C31143 * C1857 +
          ((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
           ((C9219 + C9218) * C13453 + (C26734 + C26735) * C13454) * C19146) *
              C31143 * C1858 -
          (((C26736 + C26737) * C13454 + (C10621 + C10620) * C13453) * C19146 +
           ((C26735 + C26734) * C13454 + C10606 * C13453) * C19145) *
              C31143 * C1859 +
          ((C10624 * C13453 + (C26737 + C26736) * C13454) * C19145 +
           ((C10623 + C10622) * C13453 +
            ((C4585 * C11007 + C31123 * C11008) * C116 +
             (C4585 * C11009 + C31123 * C11010) * C31171) *
                C13454) *
               C19146) *
              C31143 * C1860)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C953 +
              (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
              C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                 C13453 +
             (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
              C4737 * C955 + C4738 * C31476) *
                 C13454) *
                C19145 +
            ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
             (C25868 + C25869 - C25870 - C25871 + C25872 + C25873) * C13454) *
                C19146) *
               C31433 +
           (((C4739 * C954 -
              ((C4585 * C128 + C31123 * C139) * C947 +
               (C4585 * C118 + C31123 * C125) * C953) +
              C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                 C13453 +
             (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
              C4743 * C955 - C4744 * C31476) *
                 C13454) *
                C19145 +
            ((C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C13453 +
             (C26204 - (C26205 + C26206) + C26207 - C26208 - C26209) * C13454) *
                C19146) *
               C31153) *
              C31448 +
          ((((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C13453 +
             (C25870 - (C25869 + C25868) + C25871 - C25872 - C25873) * C13454) *
                C19145 +
            ((C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C13453 +
             (C25874 - (C25875 + C25876) + C25877 - C25878 - C25879) * C13454) *
                C19146) *
               C31433 +
           (((C10168 + C10167 - C10166 - C10169 + C10170 + C10171) * C13453 +
             (C26206 + C26205 - C26204 - C26207 + C26208 + C26209) * C13454) *
                C19145 +
            ((C10174 + C10173 - C10172 - C10175 + C10176 + C10177) * C13453 +
             (C6413 * C953 + C6414 * C947 - C6415 * C954 - C6416 * C948 +
              (C4585 * C6400 + C31123 * C6401) * C955 +
              (C4585 * C6402 + C31123 * C6403) * C31476) *
                 C13454) *
                C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C557 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C558 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C559 -
           (((C25286 + C25287) * C13454 + (C9438 + C9439) * C13453) * C19146 +
            ((C4968 * C31171 + C4967 * C116) * C13454 +
             ((C4585 * C130 + C31123 * C141) * C31171 +
              (C4585 * C120 + C31123 * C131) * C116) *
                 C13453) *
                C19145) *
               C31480) *
              C31448 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C558 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C557 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C559 +
           (((C9439 + C9438) * C13453 + (C25287 + C25286) * C13454) * C19145 +
            ((C9437 + C9436) * C13453 +
             ((C4585 * C2031 + C31123 * C2032) * C116 +
              (C4585 * C2033 + C31123 * C2034) * C31171) *
                 C13454) *
                C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C31433 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31153) *
              C2133 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31153 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C31433) *
              C2134 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 + (C26734 + C26735) * C13454) * C19146) *
               C31433 -
           (((C27070 + C27071) * C13454 + (C9217 + C9216) * C13453) * C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C31153) *
              C2135 +
          (((C10900 * C13453 + (C27071 + C27070) * C13454) * C19145 +
            ((C10909 + C10908) * C13453 +
             ((C4585 * C10771 + C31123 * C10772) * C116 +
              (C4585 * C10773 + C31123 * C10774) * C31171) *
                 C13454) *
                C19146) *
               C31153 -
           (((C26736 + C26737) * C13454 + (C10621 + C10620) * C13453) * C19146 +
            ((C26735 + C26734) * C13454 + C10606 * C13453) * C19145) *
               C31433) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C13453 +
            (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
             C4737 * C263 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
            (C5239 * C261 + C5240 * C31513 - C5241 * C262 - C5242 * C31501 +
             C5581 * C263 + C5582 * C31476) *
                C13454) *
               C19146) *
              C258 +
          (((C4739 * C262 -
             ((C4585 * C128 + C31123 * C139) * C31513 +
              (C4585 * C118 + C31123 * C125) * C261) +
             C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                C13453 +
            (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
             C4743 * C263 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) * C13453 +
            (C5245 * C262 - (C5244 * C31513 + C5243 * C261) + C5246 * C31501 -
             C5851 * C263 - C5852 * C31476) *
                C13454) *
               C19146) *
              C259 +
          ((((C4585 * C119 + C31123 * C126) * C261 +
             (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
             C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
                C13453 +
            (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
             C4749 * C263 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C261 + C9195 * C31513 - C5247 * C262 - C5248 * C31501 +
             C5249 * C263 + C5250 * C31476) *
                C13453 +
            (C5247 * C261 + C5248 * C31513 - C5249 * C262 - C5250 * C31501 +
             (C4585 * C1561 + C31123 * C1564) * C263 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C13453 +
            (C4733 * C116 + C4734 * C31171) * C13454) *
               C19145 +
           ((C9204 + C9205) * C13453 +
            (C5239 * C116 + C5240 * C31171) * C13454) *
               C19146) *
              C107 -
          (((C5244 * C31171 + C5243 * C116) * C13454 +
            (C9210 + C9211) * C13453) *
               C19146 +
           ((C4740 * C31171 + C4739 * C116) * C13454 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C13453) *
               C19145) *
              C108 +
          ((((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C13453 +
            (C4745 * C116 + C4746 * C31171) * C13454) *
               C19145 +
           ((C9212 + C9213) * C13453 +
            (C5247 * C116 + C5248 * C31171) * C13454) *
               C19146) *
              C109 -
          ((((C4585 * C829 + C31123 * C835) * C31171 +
             (C4585 * C820 + C31123 * C828) * C116) *
                C13454 +
            (C9438 + C9439) * C13453) *
               C19146 +
           ((C4968 * C31171 + C4967 * C116) * C13454 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C13453) *
               C19145) *
              C110 +
          ((((C4585 * C121 + C31123 * C132) * C116 +
             (C4585 * C133 + C31123 * C142) * C31171) *
                C13453 +
            ((C4585 * C272 + C31123 * C290) * C116 +
             (C4585 * C291 + C31123 * C302) * C31171) *
                C13454) *
               C19145 +
           (((C4585 * C421 + C31123 * C436) * C116 +
             (C4585 * C435 + C31123 * C451) * C31171) *
                C13453 +
            ((C4585 * C821 + C31123 * C830) * C116 +
             (C4585 * C831 + C31123 * C836) * C31171) *
                C13454) *
               C19146) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C13453 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
            (C5239 * C953 + C5240 * C947 - C5241 * C954 - C5242 * C948 +
             C5581 * C955 + C5582 * C31476) *
                C13454) *
               C19146) *
              C31510 +
          (((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C13453 +
            (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
             C4743 * C955 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C13453 +
            (C5245 * C954 - (C5244 * C947 + C5243 * C953) + C5246 * C948 -
             C5851 * C955 - C5852 * C31476) *
                C13454) *
               C19146) *
              C31497 +
          ((((C4585 * C119 + C31123 * C126) * C953 +
             (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
             C4746 * C948 + C4747 * C955 + C4748 * C31476) *
                C13453 +
            (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
             C4749 * C955 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
             C5249 * C955 + C5250 * C31476) *
                C13453 +
            (C5247 * C953 + C5248 * C947 - C5249 * C954 - C5250 * C948 +
             (C4585 * C1561 + C31123 * C1564) * C955 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1024 +
            (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
            C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
            C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
               C13453 +
           (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
            C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
            C5441 * C1028 + C5442 * C1022) *
               C13454) *
              C19145 +
          ((C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
            C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
            C5959 * C1028 + C5960 * C1022) *
               C13453 +
           (C5239 * C1024 + C5240 * C1018 - C5241 * C1025 - C5242 * C1019 +
            C5581 * C1026 + C5582 * C1020 - C5959 * C1027 - C5960 * C1021 +
            (C4585 * C5950 + C31123 * C5951) * C1028 +
            (C4585 * C5952 + C31123 * C5953) * C1022) *
               C13454) *
              C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C31510 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31497 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C31470) *
              C1681 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31497 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C31510 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C31470) *
              C1682 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 +
             (C6629 * C116 + C6630 * C31171) * C13454) *
                C19146) *
               C31510 -
           (((C10791 * C31171 + C10790 * C116) * C13454 +
             (C9217 + C9216) * C13453) *
                C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C31497 +
           ((C9224 * C13453 + (C25019 + C25018) * C13454) * C19145 +
            ((C9221 + C9220) * C13453 +
             ((C4585 * C2241 + C31123 * C2244) * C116 +
              (C4585 * C2247 + C31123 * C2250) * C31171) *
                 C13454) *
                C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C13453 +
            (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
             C4737 * C263 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
            (C26640 + C26641 - C26642 - C26643 + C26644 + C26645) * C13454) *
               C19146) *
              C31143 * C1681 +
          (((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C13453 +
            (C26642 - (C26641 + C26640) + C26643 - C26644 - C26645) * C13454) *
               C19145 +
           ((C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C13453 +
            (C26646 - (C26647 + C26648) + C26649 - C26650 - C26651) * C13454) *
               C19146) *
              C31143 * C1682 +
          ((C10534 * C13453 +
            (C26648 + C26647 - C26646 - C26649 + C26650 + C26651) * C13454) *
               C19145 +
           ((C10526 + C10525 - C10524 - C10527 + C10528 + C10529) * C13453 +
            (C6629 * C261 + C6630 * C31513 - C6631 * C262 - C6632 * C31501 +
             (C4585 * C6616 + C31123 * C6617) * C263 +
             (C4585 * C6618 + C31123 * C6619) * C31476) *
                C13454) *
               C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C561 +
              (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C9586 + C9587 - C9588 - C9589) * C13453 +
             (C25482 + C25483 - C25484 - C25485) * C13454) *
                C19146) *
               C31148 +
           (((C4739 * C562 -
              ((C4585 * C128 + C31123 * C139) * C31447 +
               (C4585 * C118 + C31123 * C125) * C561) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C9594 - (C9595 + C9596) + C9597) * C13453 +
             (C25486 - (C25487 + C25488) + C25489) * C13454) *
                C19146) *
               C31156 +
           ((((C4585 * C119 + C31123 * C126) * C561 +
              (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
              C4746 * C31234) *
                 C13453 +
             (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                 C13454) *
                C19145 +
            ((C9602 + C9603 - C9604 - C9605) * C13453 +
             (C25490 + C25491 - C25492 - C25493) * C13454) *
                C19146) *
               C2726) *
              C3120 +
          ((((C9588 - (C9587 + C9586) + C9589) * C13453 +
             (C25484 - (C25483 + C25482) + C25485) * C13454) *
                C19145 +
            ((C9592 - (C9591 + C9590) + C9593) * C13453 +
             (C26932 - (C26933 + C26934) + C26935) * C13454) *
                C19146) *
               C31148 +
           (((C9596 + C9595 - C9594 - C9597) * C13453 +
             (C25488 + C25487 - C25486 - C25489) * C13454) *
                C19145 +
            ((C9600 + C9599 - C9598 - C9601) * C13453 +
             (C26936 + C26937 - C26938 - C26939) * C13454) *
                C19146) *
               C31156 +
           (((C9604 - (C9603 + C9602) + C9605) * C13453 +
             (C25492 - (C25491 + C25490) + C25493) * C13454) *
                C19145 +
            ((C9614 - (C9607 + C9606) + C9615) * C13453 +
             ((C4585 * C1171 + C31123 * C1186) * C562 -
              (C9613 * C31447 + C9612 * C561) +
              (C4585 * C1189 + C31123 * C1198) * C31234) *
                 C13454) *
                C19146) *
               C2726) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C561 +
              (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C9586 + C9587 - C9588 - C9589) * C13453 +
             (C25482 + C25483 - C25484 - C25485) * C13454) *
                C19146) *
               C2459 +
           (((C4739 * C562 -
              ((C4585 * C128 + C31123 * C139) * C31447 +
               (C4585 * C118 + C31123 * C125) * C561) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C9594 - (C9595 + C9596) + C9597) * C13453 +
             (C25486 - (C25487 + C25488) + C25489) * C13454) *
                C19146) *
               C31153) *
              C31272 +
          ((((C9588 - (C9587 + C9586) + C9589) * C13453 +
             (C25484 - (C25483 + C25482) + C25485) * C13454) *
                C19145 +
            ((C9592 - (C9591 + C9590) + C9593) * C13453 +
             (C26932 - (C26933 + C26934) + C26935) * C13454) *
                C19146) *
               C2459 +
           (((C9596 + C9595 - C9594 - C9597) * C13453 +
             (C25488 + C25487 - C25486 - C25489) * C13454) *
                C19145 +
            ((C9600 + C9599 - C9598 - C9601) * C13453 +
             (C26936 + C26937 - C26938 - C26939) * C13454) *
                C19146) *
               C31153) *
              C31279 +
          (((C10792 * C13453 + (C26934 + C26933 - C26932 - C26935) * C13454) *
                C19145 +
            ((C10780 + C10779 - C10778 - C10781) * C13453 +
             (C27202 + C27203 - C27204 - C27205) * C13454) *
                C19146) *
               C2459 +
           ((C10793 * C13453 + (C26938 - (C26937 + C26936) + C26939) * C13454) *
                C19145 +
            ((C10794 - (C10783 + C10782) + C10795) * C13453 +
             ((C4585 * C6514 + C31123 * C6515) * C562 -
              (C10791 * C31447 + C10790 * C561) +
              (C4585 * C6516 + C31123 * C6517) * C31234) *
                 C13454) *
                C19146) *
               C31153) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C261 +
              (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
              C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                 C13453 +
             (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
              C4737 * C263 + C4738 * C31476) *
                 C13454) *
                C19145 +
            ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
             (C26640 + C26641 - C26642 - C26643 + C26644 + C26645) * C13454) *
                C19146) *
               C2459 +
           (((C4739 * C262 -
              ((C4585 * C128 + C31123 * C139) * C31513 +
               (C4585 * C118 + C31123 * C125) * C261) +
              C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                 C13453 +
             (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
              C4743 * C263 - C4744 * C31476) *
                 C13454) *
                C19145 +
            ((C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) * C13453 +
             (C28550 - (C28551 + C28552) + C28553 - C28554 - C28555) * C13454) *
                C19146) *
               C31153) *
              C3120 +
          ((((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C13453 +
             (C26642 - (C26641 + C26640) + C26643 - C26644 - C26645) * C13454) *
                C19145 +
            ((C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C13453 +
             (C26646 - (C26647 + C26648) + C26649 - C26650 - C26651) * C13454) *
                C19146) *
               C2459 +
           (((C12080 + C12079 - C12078 - C12081 + C12082 + C12083) * C13453 +
             (C28552 + C28551 - C28550 - C28553 + C28554 + C28555) * C13454) *
                C19145 +
            ((C12086 + C12085 - C12084 - C12087 + C12088 + C12089) * C13453 +
             (C6413 * C261 + C6414 * C31513 - C6415 * C262 - C6416 * C31501 +
              (C4585 * C6400 + C31123 * C6401) * C263 +
              (C4585 * C6402 + C31123 * C6403) * C31476) *
                 C13454) *
                C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C31519 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31512 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C31499 -
           (((C25286 + C25287) * C13454 + (C9438 + C9439) * C13453) * C19146 +
            ((C4968 * C31171 + C4967 * C116) * C13454 +
             ((C4585 * C130 + C31123 * C141) * C31171 +
              (C4585 * C120 + C31123 * C131) * C116) *
                 C13453) *
                C19145) *
               C31480) *
              C3120 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31512 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C31519 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C31499 +
           (((C9439 + C9438) * C13453 + (C25287 + C25286) * C13454) * C19145 +
            ((C9437 + C9436) * C13453 +
             ((C4585 * C2031 + C31123 * C2032) * C116 +
              (C4585 * C2033 + C31123 * C2034) * C31171) *
                 C13454) *
                C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C2459 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31153) *
              C31521 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31153 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C2459) *
              C31518 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 + (C26734 + C26735) * C13454) * C19146) *
               C2459 -
           (((C27070 + C27071) * C13454 + (C9217 + C9216) * C13453) * C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C31153) *
              C31509 +
          (((C10900 * C13453 + (C27071 + C27070) * C13454) * C19145 +
            ((C10909 + C10908) * C13453 +
             ((C4585 * C10771 + C31123 * C10772) * C116 +
              (C4585 * C10773 + C31123 * C10774) * C31171) *
                 C13454) *
                C19146) *
               C31153 -
           (((C26736 + C26737) * C13454 + (C10621 + C10620) * C13453) * C19146 +
            ((C26735 + C26734) * C13454 + C10606 * C13453) * C19145) *
               C2459) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C31148 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31156 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C2726) *
              C31272 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31156 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C31148 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C2726) *
              C31279 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 + (C26734 + C26735) * C13454) * C19146) *
               C31148 -
           (((C27070 + C27071) * C13454 + (C9217 + C9216) * C13453) * C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C31156 +
           ((C9224 * C13453 + (C25019 + C25018) * C13454) * C19145 +
            ((C9221 + C9220) * C13453 +
             ((C4585 * C2241 + C31123 * C2244) * C116 +
              (C4585 * C2247 + C31123 * C2250) * C31171) *
                 C13454) *
                C19146) *
               C2726) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C31519 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C31512 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C31499 -
           (((C25286 + C25287) * C13454 + (C9438 + C9439) * C13453) * C19146 +
            ((C4968 * C31171 + C4967 * C116) * C13454 +
             ((C4585 * C130 + C31123 * C141) * C31171 +
              (C4585 * C120 + C31123 * C131) * C116) *
                 C13453) *
                C19145) *
               C31480) *
              C3120 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C31512 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C31519 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C31499 +
           (((C9439 + C9438) * C13453 + (C25287 + C25286) * C13454) * C19145 +
            ((C9437 + C9436) * C13453 +
             ((C4585 * C2031 + C31123 * C2032) * C116 +
              (C4585 * C2033 + C31123 * C2034) * C31171) *
                 C13454) *
                C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C261 +
              (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
              C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                 C13453 +
             (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
              C4737 * C263 + C4738 * C31476) *
                 C13454) *
                C19145 +
            ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
             (C26640 + C26641 - C26642 - C26643 + C26644 + C26645) * C13454) *
                C19146) *
               C2459 +
           (((C4739 * C262 -
              ((C4585 * C128 + C31123 * C139) * C31513 +
               (C4585 * C118 + C31123 * C125) * C261) +
              C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                 C13453 +
             (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
              C4743 * C263 - C4744 * C31476) *
                 C13454) *
                C19145 +
            ((C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) * C13453 +
             (C28550 - (C28551 + C28552) + C28553 - C28554 - C28555) * C13454) *
                C19146) *
               C31153) *
              C3120 +
          ((((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C13453 +
             (C26642 - (C26641 + C26640) + C26643 - C26644 - C26645) * C13454) *
                C19145 +
            ((C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C13453 +
             (C26646 - (C26647 + C26648) + C26649 - C26650 - C26651) * C13454) *
                C19146) *
               C2459 +
           (((C12080 + C12079 - C12078 - C12081 + C12082 + C12083) * C13453 +
             (C28552 + C28551 - C28550 - C28553 + C28554 + C28555) * C13454) *
                C19145 +
            ((C12086 + C12085 - C12084 - C12087 + C12088 + C12089) * C13453 +
             (C6413 * C261 + C6414 * C31513 - C6415 * C262 - C6416 * C31501 +
              (C4585 * C6400 + C31123 * C6401) * C263 +
              (C4585 * C6402 + C31123 * C6403) * C31476) *
                 C13454) *
                C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C13453 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C13454) *
               C19145 +
           ((C9586 + C9587 - C9588 - C9589) * C13453 +
            (C5239 * C561 + C5240 * C31447 - C5241 * C562 - C5242 * C31234) *
                C13454) *
               C19146) *
              C557 +
          (((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C13453 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C13454) *
               C19145 +
           ((C9594 - (C9595 + C9596) + C9597) * C13453 +
            (C5245 * C562 - (C5244 * C31447 + C5243 * C561) + C5246 * C31234) *
                C13454) *
               C19146) *
              C558 +
          ((((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C13453 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C13454) *
               C19145 +
           ((C9602 + C9603 - C9604 - C9605) * C13453 +
            (C5247 * C561 + C5248 * C31447 - C5249 * C562 - C5250 * C31234) *
                C13454) *
               C19146) *
              C559 +
          (((C4967 * C562 -
             ((C4585 * C130 + C31123 * C141) * C31447 +
              (C4585 * C120 + C31123 * C131) * C561) +
             C4968 * C31234) *
                C13453 +
            (C4969 * C562 - (C4968 * C31447 + C4967 * C561) + C4970 * C31234) *
                C13454) *
               C19145 +
           ((C25154 * C562 - (C9434 * C31447 + C9435 * C561) +
             C25155 * C31234) *
                C13453 +
            ((C4585 * C1457 + C31123 * C1458) * C562 -
             (C25155 * C31447 + C25154 * C561) +
             (C4585 * C1459 + C31123 * C1460) * C31234) *
                C13454) *
               C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C1303 +
             (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
             C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
             C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C10276 + C10277 - C10278 - C10279 + C10280 + C10281 - C10282 -
             C10283) *
                C13453 +
            (C5239 * C1303 + C5240 * C1297 - C5241 * C1304 - C5242 * C1298 +
             C5581 * C1305 + C5582 * C1299 - C5959 * C1306 - C5960 * C31486) *
                C13454) *
               C19146) *
              C31433 +
          (((C4739 * C1304 -
             ((C4585 * C128 + C31123 * C139) * C1297 +
              (C4585 * C118 + C31123 * C125) * C1303) +
             C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
             C4744 * C31486) *
                C13453 +
            (C4741 * C1304 - (C4740 * C1297 + C4739 * C1303) + C4742 * C1298 -
             C4743 * C1305 - C4744 * C1299 + C5695 * C1306 + C5696 * C31486) *
                C13454) *
               C19145 +
           ((C5243 * C1304 - (C9192 * C1297 + C9193 * C1303) + C5244 * C1298 -
             C5245 * C1305 - C5246 * C1299 + C5851 * C1306 + C5852 * C31486) *
                C13453 +
            (C5245 * C1304 - (C5244 * C1297 + C5243 * C1303) + C5246 * C1298 -
             C5851 * C1305 - C5852 * C1299 +
             (C4585 * C5842 + C31123 * C5843) * C1306 +
             (C4585 * C5844 + C31123 * C5845) * C31486) *
                C13454) *
               C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C561 +
              (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
              C4734 * C31234) *
                 C13453 +
             (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                 C13454) *
                C19145 +
            ((C9586 + C9587 - C9588 - C9589) * C13453 +
             (C25482 + C25483 - C25484 - C25485) * C13454) *
                C19146) *
               C258 +
           (((C4739 * C562 -
              ((C4585 * C128 + C31123 * C139) * C31447 +
               (C4585 * C118 + C31123 * C125) * C561) +
              C4740 * C31234) *
                 C13453 +
             (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                 C13454) *
                C19145 +
            ((C9594 - (C9595 + C9596) + C9597) * C13453 +
             (C25486 - (C25487 + C25488) + C25489) * C13454) *
                C19146) *
               C259 +
           ((((C4585 * C119 + C31123 * C126) * C561 +
              (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
              C4746 * C31234) *
                 C13453 +
             (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                 C13454) *
                C19145 +
            ((C9602 + C9603 - C9604 - C9605) * C13453 +
             (C25490 + C25491 - C25492 - C25493) * C13454) *
                C19146) *
               C31470) *
              C31448 +
          ((((C9588 - (C9587 + C9586) + C9589) * C13453 +
             (C25484 - (C25483 + C25482) + C25485) * C13454) *
                C19145 +
            ((C9592 - (C9591 + C9590) + C9593) * C13453 +
             (C5585 * C562 - (C5584 * C31447 + C5583 * C561) + C5586 * C31234) *
                 C13454) *
                C19146) *
               C258 +
           (((C9596 + C9595 - C9594 - C9597) * C13453 +
             (C25488 + C25487 - C25486 - C25489) * C13454) *
                C19145 +
            ((C9600 + C9599 - C9598 - C9601) * C13453 +
             (C6413 * C561 + C6414 * C31447 - C6415 * C562 - C6416 * C31234) *
                 C13454) *
                C19146) *
               C259 +
           (((C9604 - (C9603 + C9602) + C9605) * C13453 +
             (C25492 - (C25491 + C25490) + C25493) * C13454) *
                C19145 +
            ((C9614 - (C9607 + C9606) + C9615) * C13453 +
             ((C4585 * C1171 + C31123 * C1186) * C562 -
              (C9613 * C31447 + C9612 * C561) +
              (C4585 * C1189 + C31123 * C1198) * C31234) *
                 C13454) *
                C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C1303 +
             (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
             C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
             C4738 * C31486) *
                C13453 +
            (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
             C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
                C13454) *
               C19145 +
           ((C10276 + C10277 - C10278 - C10279 + C10280 + C10281 - C10282 -
             C10283) *
                C13453 +
            (C26340 + C26341 - C26342 - C26343 + C26344 + C26345 - C26346 -
             C26347) *
                C13454) *
               C19146) *
              C31143 * C31448 +
          (((C10278 - (C10277 + C10276) + C10279 - C10280 - C10281 + C10282 +
             C10283) *
                C13453 +
            (C26342 - (C26341 + C26340) + C26343 - C26344 - C26345 + C26346 +
             C26347) *
                C13454) *
               C19145 +
           ((C10286 - (C10285 + C10284) + C10287 - C10288 - C10289 + C10290 +
             C10291) *
                C13453 +
            (C5585 * C1304 - (C5584 * C1297 + C5583 * C1303) + C5586 * C1298 -
             C5587 * C1305 - C5588 * C1299 +
             (C4585 * C5554 + C31123 * C5559) * C1306 +
             (C4585 * C5560 + C31123 * C5563) * C31486) *
                C13454) *
               C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C13453 +
            (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
             C4737 * C263 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
            (C5239 * C261 + C5240 * C31513 - C5241 * C262 - C5242 * C31501 +
             C5581 * C263 + C5582 * C31476) *
                C13454) *
               C19146) *
              C258 +
          (((C4739 * C262 -
             ((C4585 * C128 + C31123 * C139) * C31513 +
              (C4585 * C118 + C31123 * C125) * C261) +
             C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                C13453 +
            (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
             C4743 * C263 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) * C13453 +
            (C5245 * C262 - (C5244 * C31513 + C5243 * C261) + C5246 * C31501 -
             C5851 * C263 - C5852 * C31476) *
                C13454) *
               C19146) *
              C259 +
          ((((C4585 * C119 + C31123 * C126) * C261 +
             (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
             C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
                C13453 +
            (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
             C4749 * C263 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C261 + C9195 * C31513 - C5247 * C262 - C5248 * C31501 +
             C5249 * C263 + C5250 * C31476) *
                C13453 +
            (C5247 * C261 + C5248 * C31513 - C5249 * C262 - C5250 * C31501 +
             (C4585 * C1561 + C31123 * C1564) * C263 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C13453 +
            (C4733 * C116 + C4734 * C31171) * C13454) *
               C19145 +
           ((C9204 + C9205) * C13453 +
            (C5239 * C116 + C5240 * C31171) * C13454) *
               C19146) *
              C107 -
          (((C5244 * C31171 + C5243 * C116) * C13454 +
            (C9210 + C9211) * C13453) *
               C19146 +
           ((C4740 * C31171 + C4739 * C116) * C13454 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C13453) *
               C19145) *
              C108 +
          ((((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C13453 +
            (C4745 * C116 + C4746 * C31171) * C13454) *
               C19145 +
           ((C9212 + C9213) * C13453 +
            (C5247 * C116 + C5248 * C31171) * C13454) *
               C19146) *
              C109 -
          ((((C4585 * C829 + C31123 * C835) * C31171 +
             (C4585 * C820 + C31123 * C828) * C116) *
                C13454 +
            (C9438 + C9439) * C13453) *
               C19146 +
           ((C4968 * C31171 + C4967 * C116) * C13454 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C13453) *
               C19145) *
              C110 +
          ((((C4585 * C121 + C31123 * C132) * C116 +
             (C4585 * C133 + C31123 * C142) * C31171) *
                C13453 +
            ((C4585 * C272 + C31123 * C290) * C116 +
             (C4585 * C291 + C31123 * C302) * C31171) *
                C13454) *
               C19145 +
           (((C4585 * C421 + C31123 * C436) * C116 +
             (C4585 * C435 + C31123 * C451) * C31171) *
                C13453 +
            ((C4585 * C821 + C31123 * C830) * C116 +
             (C4585 * C831 + C31123 * C836) * C31171) *
                C13454) *
               C19146) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C258 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C259 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C31470) *
              C31514 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C259 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C258 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C31470) *
              C31503 +
          (((C9222 * C13453 + (C25017 + C25016) * C13454) * C19145 +
            ((C9219 + C9218) * C13453 +
             (C6629 * C116 + C6630 * C31171) * C13454) *
                C19146) *
               C258 -
           (((C10791 * C31171 + C10790 * C116) * C13454 +
             (C9217 + C9216) * C13453) *
                C19146 +
            ((C25015 + C25014) * C13454 + C9223 * C13453) * C19145) *
               C259 +
           ((C9224 * C13453 + (C25019 + C25018) * C13454) * C19145 +
            ((C9221 + C9220) * C13453 +
             ((C4585 * C2241 + C31123 * C2244) * C116 +
              (C4585 * C2247 + C31123 * C2250) * C31171) *
                 C13454) *
                C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C13453 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
            (C5239 * C953 + C5240 * C947 - C5241 * C954 - C5242 * C948 +
             C5581 * C955 + C5582 * C31476) *
                C13454) *
               C19146) *
              C31510 +
          (((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C13453 +
            (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
             C4743 * C955 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C13453 +
            (C5245 * C954 - (C5244 * C947 + C5243 * C953) + C5246 * C948 -
             C5851 * C955 - C5852 * C31476) *
                C13454) *
               C19146) *
              C31497 +
          ((((C4585 * C119 + C31123 * C126) * C953 +
             (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
             C4746 * C948 + C4747 * C955 + C4748 * C31476) *
                C13453 +
            (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
             C4749 * C955 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
             C5249 * C955 + C5250 * C31476) *
                C13453 +
            (C5247 * C953 + C5248 * C947 - C5249 * C954 - C5250 * C948 +
             (C4585 * C1561 + C31123 * C1564) * C955 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1024 +
            (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
            C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
            C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
               C13453 +
           (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
            C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
            C5441 * C1028 + C5442 * C1022) *
               C13454) *
              C19145 +
          ((C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
            C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
            C5959 * C1028 + C5960 * C1022) *
               C13453 +
           (C5239 * C1024 + C5240 * C1018 - C5241 * C1025 - C5242 * C1019 +
            C5581 * C1026 + C5582 * C1020 - C5959 * C1027 - C5960 * C1021 +
            (C4585 * C5950 + C31123 * C5951) * C1028 +
            (C4585 * C5952 + C31123 * C5953) * C1022) *
               C13454) *
              C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C13453 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
            (C25868 + C25869 - C25870 - C25871 + C25872 + C25873) * C13454) *
               C19146) *
              C31143 * C31514 +
          (((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C13453 +
            (C25870 - (C25869 + C25868) + C25871 - C25872 - C25873) * C13454) *
               C19145 +
           ((C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C13453 +
            (C25874 - (C25875 + C25876) + C25877 - C25878 - C25879) * C13454) *
               C19146) *
              C31143 * C31503 +
          ((C9920 * C13453 +
            (C25876 + C25875 - C25874 - C25877 + C25878 + C25879) * C13454) *
               C19145 +
           ((C9912 + C9911 - C9910 - C9913 + C9914 + C9915) * C13453 +
            (C6629 * C953 + C6630 * C947 - C6631 * C954 - C6632 * C948 +
             (C4585 * C6616 + C31123 * C6617) * C955 +
             (C4585 * C6618 + C31123 * C6619) * C31476) *
                C13454) *
               C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C116 +
              (C4585 * C127 + C31123 * C138) * C31171) *
                 C13453 +
             (C4733 * C116 + C4734 * C31171) * C13454) *
                C19145 +
            ((C9204 + C9205) * C13453 + (C25008 + C25009) * C13454) * C19146) *
               C557 -
           (((C25010 + C25011) * C13454 + (C9210 + C9211) * C13453) * C19146 +
            ((C4740 * C31171 + C4739 * C116) * C13454 +
             ((C4585 * C128 + C31123 * C139) * C31171 +
              (C4585 * C118 + C31123 * C125) * C116) *
                 C13453) *
                C19145) *
               C558 +
           ((((C4585 * C119 + C31123 * C126) * C116 +
              (C4585 * C129 + C31123 * C140) * C31171) *
                 C13453 +
             (C4745 * C116 + C4746 * C31171) * C13454) *
                C19145 +
            ((C9212 + C9213) * C13453 + (C25012 + C25013) * C13454) * C19146) *
               C559 -
           (((C25286 + C25287) * C13454 + (C9438 + C9439) * C13453) * C19146 +
            ((C4968 * C31171 + C4967 * C116) * C13454 +
             ((C4585 * C130 + C31123 * C141) * C31171 +
              (C4585 * C120 + C31123 * C131) * C116) *
                 C13453) *
                C19145) *
               C31480) *
              C31448 +
          ((((C9211 + C9210) * C13453 + (C25011 + C25010) * C13454) * C19145 +
            ((C9209 + C9208) * C13453 + (C25014 + C25015) * C13454) * C19146) *
               C558 -
           (((C25016 + C25017) * C13454 + (C9207 + C9206) * C13453) * C19146 +
            ((C25009 + C25008) * C13454 + (C9205 + C9204) * C13453) * C19145) *
               C557 -
           (((C25018 + C25019) * C13454 + (C9215 + C9214) * C13453) * C19146 +
            ((C25013 + C25012) * C13454 + (C9213 + C9212) * C13453) * C19145) *
               C559 +
           (((C9439 + C9438) * C13453 + (C25287 + C25286) * C13454) * C19145 +
            ((C9437 + C9436) * C13453 +
             ((C4585 * C2031 + C31123 * C2032) * C116 +
              (C4585 * C2033 + C31123 * C2034) * C31171) *
                 C13454) *
                C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31123 * C124) * C953 +
              (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
              C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                 C13453 +
             (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
              C4737 * C955 + C4738 * C31476) *
                 C13454) *
                C19145 +
            ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
             (C25868 + C25869 - C25870 - C25871 + C25872 + C25873) * C13454) *
                C19146) *
               C31433 +
           (((C4739 * C954 -
              ((C4585 * C128 + C31123 * C139) * C947 +
               (C4585 * C118 + C31123 * C125) * C953) +
              C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                 C13453 +
             (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
              C4743 * C955 - C4744 * C31476) *
                 C13454) *
                C19145 +
            ((C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C13453 +
             (C26204 - (C26205 + C26206) + C26207 - C26208 - C26209) * C13454) *
                C19146) *
               C31153) *
              C31448 +
          ((((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C13453 +
             (C25870 - (C25869 + C25868) + C25871 - C25872 - C25873) * C13454) *
                C19145 +
            ((C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C13453 +
             (C25874 - (C25875 + C25876) + C25877 - C25878 - C25879) * C13454) *
                C19146) *
               C31433 +
           (((C10168 + C10167 - C10166 - C10169 + C10170 + C10171) * C13453 +
             (C26206 + C26205 - C26204 - C26207 + C26208 + C26209) * C13454) *
                C19145 +
            ((C10174 + C10173 - C10172 - C10175 + C10176 + C10177) * C13453 +
             (C6413 * C953 + C6414 * C947 - C6415 * C954 - C6416 * C948 +
              (C4585 * C6400 + C31123 * C6401) * C955 +
              (C4585 * C6402 + C31123 * C6403) * C31476) *
                 C13454) *
                C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C13453 +
            (C4733 * C116 + C4734 * C31171) * C13454) *
               C19145 +
           ((C9204 + C9205) * C13453 +
            (C5239 * C116 + C5240 * C31171) * C13454) *
               C19146) *
              C107 -
          (((C5244 * C31171 + C5243 * C116) * C13454 +
            (C9210 + C9211) * C13453) *
               C19146 +
           ((C4740 * C31171 + C4739 * C116) * C13454 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C13453) *
               C19145) *
              C108 +
          ((((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C13453 +
            (C4745 * C116 + C4746 * C31171) * C13454) *
               C19145 +
           ((C9212 + C9213) * C13453 +
            (C5247 * C116 + C5248 * C31171) * C13454) *
               C19146) *
              C109 -
          ((((C4585 * C829 + C31123 * C835) * C31171 +
             (C4585 * C820 + C31123 * C828) * C116) *
                C13454 +
            (C9438 + C9439) * C13453) *
               C19146 +
           ((C4968 * C31171 + C4967 * C116) * C13454 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C13453) *
               C19145) *
              C110 +
          ((((C4585 * C121 + C31123 * C132) * C116 +
             (C4585 * C133 + C31123 * C142) * C31171) *
                C13453 +
            ((C4585 * C272 + C31123 * C290) * C116 +
             (C4585 * C291 + C31123 * C302) * C31171) *
                C13454) *
               C19145 +
           (((C4585 * C421 + C31123 * C436) * C116 +
             (C4585 * C435 + C31123 * C451) * C31171) *
                C13453 +
            ((C4585 * C821 + C31123 * C830) * C116 +
             (C4585 * C831 + C31123 * C836) * C31171) *
                C13454) *
               C19146) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C13453 +
            (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
             C4737 * C263 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C13453 +
            (C5239 * C261 + C5240 * C31513 - C5241 * C262 - C5242 * C31501 +
             C5581 * C263 + C5582 * C31476) *
                C13454) *
               C19146) *
              C258 +
          (((C4739 * C262 -
             ((C4585 * C128 + C31123 * C139) * C31513 +
              (C4585 * C118 + C31123 * C125) * C261) +
             C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                C13453 +
            (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
             C4743 * C263 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) * C13453 +
            (C5245 * C262 - (C5244 * C31513 + C5243 * C261) + C5246 * C31501 -
             C5851 * C263 - C5852 * C31476) *
                C13454) *
               C19146) *
              C259 +
          ((((C4585 * C119 + C31123 * C126) * C261 +
             (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
             C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
                C13453 +
            (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
             C4749 * C263 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C261 + C9195 * C31513 - C5247 * C262 - C5248 * C31501 +
             C5249 * C263 + C5250 * C31476) *
                C13453 +
            (C5247 * C261 + C5248 * C31513 - C5249 * C262 - C5250 * C31501 +
             (C4585 * C1561 + C31123 * C1564) * C263 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C13453 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C13454) *
               C19145 +
           ((C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C13453 +
            (C5239 * C953 + C5240 * C947 - C5241 * C954 - C5242 * C948 +
             C5581 * C955 + C5582 * C31476) *
                C13454) *
               C19146) *
              C31510 +
          (((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C13453 +
            (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
             C4743 * C955 - C4744 * C31476) *
                C13454) *
               C19145 +
           ((C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C13453 +
            (C5245 * C954 - (C5244 * C947 + C5243 * C953) + C5246 * C948 -
             C5851 * C955 - C5852 * C31476) *
                C13454) *
               C19146) *
              C31497 +
          ((((C4585 * C119 + C31123 * C126) * C953 +
             (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
             C4746 * C948 + C4747 * C955 + C4748 * C31476) *
                C13453 +
            (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
             C4749 * C955 + C4750 * C31476) *
                C13454) *
               C19145 +
           ((C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
             C5249 * C955 + C5250 * C31476) *
                C13453 +
            (C5247 * C953 + C5248 * C947 - C5249 * C954 - C5250 * C948 +
             (C4585 * C1561 + C31123 * C1564) * C955 +
             (C4585 * C1567 + C31123 * C1570) * C31476) *
                C13454) *
               C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1024 +
            (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
            C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
            C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
               C13453 +
           (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
            C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
            C5441 * C1028 + C5442 * C1022) *
               C13454) *
              C19145 +
          ((C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
            C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
            C5959 * C1028 + C5960 * C1022) *
               C13453 +
           (C5239 * C1024 + C5240 * C1018 - C5241 * C1025 - C5242 * C1019 +
            C5581 * C1026 + C5582 * C1020 - C5959 * C1027 - C5960 * C1021 +
            (C4585 * C5950 + C31123 * C5951) * C1028 +
            (C4585 * C5952 + C31123 * C5953) * C1022) *
               C13454) *
              C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[50] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4585 * C117 + C31123 * C124) * C30335 +
                    (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
                    C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                       C4582 +
                   (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 -
                    C4736 * C31237 + C4737 * C30341 + C4738 * C2723) *
                       C4583 +
                   (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 -
                    C4738 * C31237 + C5439 * C30341 + C5440 * C2723) *
                       C4584) *
                      C31369 * C31148 +
                  ((C4739 * C30327 -
                    ((C4585 * C128 + C31123 * C139) * C31230 +
                     (C4585 * C118 + C31123 * C125) * C30335) +
                    C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                       C4582 +
                   (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
                    C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                       C4583 +
                   (C4743 * C30327 - (C4742 * C31230 + C4741 * C30335) +
                    C4744 * C31237 - C5695 * C30341 - C5696 * C2723) *
                       C4584) *
                      C31369 * C31156 +
                  (((C4585 * C119 + C31123 * C126) * C30335 +
                    (C4585 * C129 + C31123 * C140) * C31230 - C4745 * C30327 -
                    C4746 * C31237 + C4747 * C30341 + C4748 * C2723) *
                       C4582 +
                   (C4745 * C30335 + C4746 * C31230 - C4747 * C30327 -
                    C4748 * C31237 + C4749 * C30341 + C4750 * C2723) *
                       C4583 +
                   (C4747 * C30335 + C4748 * C31230 - C4749 * C30327 -
                    C4750 * C31237 + (C4585 * C1034 + C31123 * C1043) * C30341 +
                    (C4585 * C1046 + C31123 * C1052) * C2723) *
                       C4584) *
                      C31369 * C2726) *
                 C31189) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                    C115 * C119 + C103 * C126) *
                       C30335 +
                   (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                    C115 * C129 + C103 * C140) *
                       C31230 -
                   (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                    C113 * C266 + C101 * C276) *
                       C30327 -
                   (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                    C113 * C279 + C101 * C296) *
                       C31237 +
                   (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                    C115 * C269 + C103 * C282) *
                       C30341 +
                   (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                    C115 * C285 + C103 * C299) *
                       C2723) *
                      C31357 * C31369 * C31148 +
                  ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                    C115 * C270 + C103 * C286) *
                       C30327 -
                   ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                     C113 * C128 + C101 * C139) *
                        C31230 +
                    (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                     C113 * C118 + C101 * C125) *
                        C30335) +
                   (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                    C115 * C287 + C103 * C300) *
                       C31237 -
                   (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                    C113 * C268 + C101 * C281) *
                       C30341 -
                   (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                    C113 * C284 + C101 * C298) *
                       C2723) *
                      C31357 * C31369 * C31156 +
                  ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                    C115 * C121 + C103 * C132) *
                       C30335 +
                   (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                    C115 * C133 + C103 * C142) *
                       C31230 -
                   (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                    C113 * C264 + C101 * C274) *
                       C30327 -
                   (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                    C113 * C277 + C101 * C294) *
                       C31237 +
                   (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
                    C115 * C273 + C103 * C292) *
                       C30341 +
                   (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
                    C115 * C293 + C103 * C303) *
                       C2723) *
                      C31357 * C31369 * C2726) *
                 C31189) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4585 * C117 + C31123 * C124) * C30335 +
                    (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
                    C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                       C31357 * C8926 +
                   (C9186 * C30335 + C9187 * C31230 - C5239 * C30327 -
                    C5240 * C31237 + C5241 * C30341 + C5242 * C2723) *
                       C31357 * C8927 +
                   (C9188 * C30335 + C9189 * C31230 - C5583 * C30327 -
                    C5584 * C31237 + C5585 * C30341 + C5586 * C2723) *
                       C31357 * C8928) *
                      C31148 +
                  ((C4739 * C30327 -
                    ((C4585 * C128 + C31123 * C139) * C31230 +
                     (C4585 * C118 + C31123 * C125) * C30335) +
                    C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                       C31357 * C8926 +
                   (C5243 * C30327 - (C9192 * C31230 + C9193 * C30335) +
                    C5244 * C31237 - C5245 * C30341 - C5246 * C2723) *
                       C31357 * C8927 +
                   (C6413 * C30327 - (C9190 * C31230 + C9191 * C30335) +
                    C6414 * C31237 - C6415 * C30341 - C6416 * C2723) *
                       C31357 * C8928) *
                      C31156 +
                  (((C4585 * C119 + C31123 * C126) * C30335 +
                    (C4585 * C129 + C31123 * C140) * C31230 - C4745 * C30327 -
                    C4746 * C31237 + C4747 * C30341 + C4748 * C2723) *
                       C31357 * C8926 +
                   (C9194 * C30335 + C9195 * C31230 - C5247 * C30327 -
                    C5248 * C31237 + C5249 * C30341 + C5250 * C2723) *
                       C31357 * C8927 +
                   (C9196 * C30335 + C9197 * C31230 - C9612 * C30327 -
                    C9613 * C31237 + (C4585 * C1171 + C31123 * C1186) * C30341 +
                    (C4585 * C1189 + C31123 * C1198) * C2723) *
                       C31357 * C8928) *
                      C2726) *
                 C31189) /
                    (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C4582 +
            (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
             C4737 * C30341 + C4738 * C2723) *
                C4583 +
            (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
             C5439 * C30341 + C5440 * C2723) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C4582 +
            (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
             C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                C4583 +
            (C4743 * C30327 - (C4742 * C31230 + C4741 * C30335) +
             C4744 * C31237 - C5695 * C30341 - C5696 * C2723) *
                C4584) *
               C31369 * C31153) *
              C31448 +
          (((C5239 * C30327 -
             ((C4585 * C433 + C31123 * C450) * C31230 +
              (C4585 * C420 + C31123 * C434) * C30335) +
             C5240 * C31237 - C5241 * C30341 - C5242 * C2723) *
                C4582 +
            (C5241 * C30327 - (C5240 * C31230 + C5239 * C30335) +
             C5242 * C31237 - C5581 * C30341 - C5582 * C2723) *
                C4583 +
            (C5581 * C30327 - (C5242 * C31230 + C5241 * C30335) +
             C5582 * C31237 - C5959 * C30341 - C5960 * C2723) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C30335 +
             (C4585 * C430 + C31123 * C447) * C31230 - C5243 * C30327 -
             C5244 * C31237 + C5245 * C30341 + C5246 * C2723) *
                C4582 +
            (C5243 * C30335 + C5244 * C31230 - C5245 * C30327 - C5246 * C31237 +
             C5851 * C30341 + C5852 * C2723) *
                C4583 +
            (C5245 * C30335 + C5246 * C31230 - C5851 * C30327 - C5852 * C31237 +
             (C4585 * C5842 + C31123 * C5843) * C30341 +
             (C4585 * C5844 + C31123 * C5845) * C2723) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30335 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31230 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C30327 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31237 +
            (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
             C115 * C269 + C103 * C282) *
                C30341 +
            (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
             C115 * C285 + C103 * C299) *
                C2723) *
               C31357 * C31369 * C2459 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C30327 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31230 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30335) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31237 -
            (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
             C113 * C268 + C101 * C281) *
                C30341 -
            (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
             C113 * C284 + C101 * C298) *
                C2723) *
               C31357 * C31369 * C31153) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30327 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31230 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C30335) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31237 -
            (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
             C113 * C1165 + C101 * C1174) *
                C30341 -
            (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
             C113 * C1177 + C101 * C1192) *
                C2723) *
               C31357 * C31369 * C2459 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C30335 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31230 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30327 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31237 +
            (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
             C115 * C1457 + C103 * C1458) *
                C30341 +
            (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
             C115 * C1459 + C103 * C1460) *
                C2723) *
               C31357 * C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C31357 * C8926 +
            (C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C31357 *
                C8927 +
            (C11816 + C11817 - C11818 - C11819 + C11820 + C11821) * C31357 *
                C8928) *
               C2459 +
           ((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C31357 * C8926 +
            (C11822 - (C11823 + C11824) + C11825 - C11826 - C11827) * C31357 *
                C8927 +
            (C11828 - (C11829 + C11830) + C11831 - C11832 - C11833) * C31357 *
                C8928) *
               C31153) *
              C31448 +
          (((C11812 - (C11811 + C11810) + C11813 - C11814 - C11815) * C31357 *
                C8926 +
            (C11818 - (C11817 + C11816) + C11819 - C11820 - C11821) * C31357 *
                C8927 +
            (C6629 * C30327 - (C9200 * C31230 + C9201 * C30335) +
             C6630 * C31237 - C6631 * C30341 - C6632 * C2723) *
                C31357 * C8928) *
               C2459 +
           ((C11824 + C11823 - C11822 - C11825 + C11826 + C11827) * C31357 *
                C8926 +
            (C11830 + C11829 - C11828 - C11831 + C11832 + C11833) * C31357 *
                C8927 +
            (C9198 * C30335 + C9199 * C31230 - C10790 * C30327 -
             C10791 * C31237 + (C4585 * C6514 + C31123 * C6515) * C30341 +
             (C4585 * C6516 + C31123 * C6517) * C2723) *
                C31357 * C8928) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C2355 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C2349 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C2356 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31234) *
                  C31357 * C31369 * C31519 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C2356 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C2349 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C2355) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C31234) *
                  C31357 * C31369 * C31512 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C2355 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C2349 -
               (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                C113 * C264 + C101 * C274) *
                   C2356 -
               (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                C113 * C277 + C101 * C294) *
                   C31234) *
                  C31357 * C31369 * C31499 +
              ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
                C115 * C563 + C103 * C564) *
                   C2356 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C2349 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C2355) +
               (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
                C115 * C565 + C103 * C566) *
                   C31234) *
                  C31357 * C31369 * C31480) *
             C31189 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C2461 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31520 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C2462 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31516 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C2463 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31506 -
               (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
                C113 * C1031 + C101 * C1037) *
                   C2464 -
               (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
                C113 * C1040 + C101 * C1049) *
                   C31486) *
                  C31357 * C31369 * C2459 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C2462 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31520 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C2461) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C31516 -
               (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                C113 * C268 + C101 * C281) *
                   C2463 -
               (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                C113 * C284 + C101 * C298) *
                   C31506 +
               (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
                C115 * C1307 + C103 * C1308) *
                   C2464 +
               (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
                C115 * C1309 + C103 * C1310) *
                   C31486) *
                  C31357 * C31369 * C31153) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31514 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31503 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C2355 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C2349 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C2356 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C2356 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C2349 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C2355) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
               C4583 +
           (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
               C4584) *
              C31369 * C31519 +
          ((C4739 * C2356 -
            ((C4585 * C128 + C31123 * C139) * C2349 +
             (C4585 * C118 + C31123 * C125) * C2355) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
               C4583 +
           (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
               C4584) *
              C31369 * C31512 +
          (((C4585 * C119 + C31123 * C126) * C2355 +
            (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
               C4583 +
           (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
               C4584) *
              C31369 * C31499 +
          ((C4967 * C2356 -
            ((C4585 * C130 + C31123 * C141) * C2349 +
             (C4585 * C120 + C31123 * C131) * C2355) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C2356 - (C4968 * C2349 + C4967 * C2355) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C2356 -
            (C4970 * C2349 + C4969 * C2355) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C2459 +
          ((C4739 * C2462 -
            ((C4585 * C128 + C31123 * C139) * C31520 +
             (C4585 * C118 + C31123 * C125) * C2461) +
            C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C2462 - (C4740 * C31520 + C4739 * C2461) + C4742 * C31516 -
            C4743 * C2463 - C4744 * C31506 + C5695 * C2464 + C5696 * C31486) *
               C4583 +
           (C4743 * C2462 - (C4742 * C31520 + C4741 * C2461) + C4744 * C31516 -
            C5695 * C2463 - C5696 * C31506 +
            (C4585 * C5686 + C31123 * C5687) * C2464 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31514 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31503 +
          ((((C4585 * C422 + C31123 * C437) * C2355 +
             (C4585 * C440 + C31123 * C452) * C2349 - C5583 * C2356 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C2355 + C5584 * C2349 - C5585 * C2356 - C5586 * C31234) *
                C4583 +
            (C5585 * C2355 + C5586 * C2349 - C5587 * C2356 - C5588 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C6413 * C2356 -
             ((C4585 * C441 + C31123 * C453) * C2349 +
              (C4585 * C423 + C31123 * C438) * C2355) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C2356 - (C6414 * C2349 + C6413 * C2355) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C2356 -
             (C6416 * C2349 + C6415 * C2355) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C31357 * C8926 +
           (C9186 * C2355 + C9187 * C2349 - C5239 * C2356 - C5240 * C31234) *
               C31357 * C8927 +
           (C9188 * C2355 + C9189 * C2349 - C5583 * C2356 - C5584 * C31234) *
               C31357 * C8928) *
              C31519 +
          ((C4739 * C2356 -
            ((C4585 * C128 + C31123 * C139) * C2349 +
             (C4585 * C118 + C31123 * C125) * C2355) +
            C4740 * C31234) *
               C31357 * C8926 +
           (C5243 * C2356 - (C9192 * C2349 + C9193 * C2355) + C5244 * C31234) *
               C31357 * C8927 +
           (C6413 * C2356 - (C9190 * C2349 + C9191 * C2355) + C6414 * C31234) *
               C31357 * C8928) *
              C31512 +
          (((C4585 * C119 + C31123 * C126) * C2355 +
            (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
            C4746 * C31234) *
               C31357 * C8926 +
           (C9194 * C2355 + C9195 * C2349 - C5247 * C2356 - C5248 * C31234) *
               C31357 * C8927 +
           (C9196 * C2355 + C9197 * C2349 - C9612 * C2356 - C9613 * C31234) *
               C31357 * C8928) *
              C31499 +
          ((C4967 * C2356 -
            ((C4585 * C130 + C31123 * C141) * C2349 +
             (C4585 * C120 + C31123 * C131) * C2355) +
            C4968 * C31234) *
               C31357 * C8926 +
           ((C4585 * C820 + C31123 * C828) * C2356 -
            (C9434 * C2349 + C9435 * C2355) +
            (C4585 * C829 + C31123 * C835) * C31234) *
               C31357 * C8927 +
           ((C4585 * C2031 + C31123 * C2032) * C2356 -
            (C9432 * C2349 + C9433 * C2355) +
            (C4585 * C2033 + C31123 * C2034) * C31234) *
               C31357 * C8928) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C9186 * C2461 + C9187 * C31520 - C5239 * C2462 - C5240 * C31516 +
            C5241 * C2463 + C5242 * C31506 - C5581 * C2464 - C5582 * C31486) *
               C31357 * C8927 +
           (C9188 * C2461 + C9189 * C31520 - C5583 * C2462 - C5584 * C31516 +
            C5585 * C2463 + C5586 * C31506 - C5587 * C2464 - C5588 * C31486) *
               C31357 * C8928) *
              C2459 +
          ((C4739 * C2462 -
            ((C4585 * C128 + C31123 * C139) * C31520 +
             (C4585 * C118 + C31123 * C125) * C2461) +
            C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
            C4744 * C31486) *
               C31357 * C8926 +
           (C5243 * C2462 - (C9192 * C31520 + C9193 * C2461) + C5244 * C31516 -
            C5245 * C2463 - C5246 * C31506 + C5851 * C2464 + C5852 * C31486) *
               C31357 * C8927 +
           (C6413 * C2462 - (C9190 * C31520 + C9191 * C2461) + C6414 * C31516 -
            C6415 * C2463 - C6416 * C31506 +
            (C4585 * C6400 + C31123 * C6401) * C2464 +
            (C4585 * C6402 + C31123 * C6403) * C31486) *
               C31357 * C8928) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C11368 + C11369 - C11370 - C11371) * C31357 * C8927 +
            C11398 * C8928) *
               C2459 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C11376 - (C11377 + C11378) + C11379) * C31357 * C8927 +
            C11399 * C8928) *
               C31153) *
              C31514 +
          (((C11370 - (C11369 + C11368) + C11371) * C31357 * C8926 +
            (C11374 - (C11373 + C11372) + C11375) * C31357 * C8927 +
            (C11384 - (C11385 + C11386) + C11387) * C31357 * C8928) *
               C2459 +
           ((C11378 + C11377 - C11376 - C11379) * C31357 * C8926 +
            (C11382 + C11381 - C11380 - C11383) * C31357 * C8927 +
            (C11388 + C11389 - C11390 - C11391) * C31357 * C8928) *
               C31153) *
              C31503 +
          ((C11398 * C8926 +
            (C11386 + C11385 - C11384 - C11387) * C31357 * C8927 +
            (C10616 * C2355 + C10617 * C2349 - C11020 * C2356 -
             C11021 * C31234) *
                C31357 * C8928) *
               C2459 +
           (C11399 * C8926 +
            (C11390 - (C11389 + C11388) + C11391) * C31357 * C8927 +
            ((C4585 * C10771 + C31123 * C10772) * C2356 -
             (C10906 * C2349 + C10907 * C2355) +
             (C4585 * C10773 + C31123 * C10774) * C31234) *
                C31357 * C8928) *
               C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31148 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31156 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C4583 +
            (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
                C4584) *
               C31369 * C2726) *
              C31448 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31148 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31156 +
           ((C5247 * C2356 -
             ((C4585 * C431 + C31123 * C448) * C2349 +
              (C4585 * C418 + C31123 * C428) * C2355) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C2356 - (C5248 * C2349 + C5247 * C2355) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C2356 -
             (C5250 * C2349 + C5249 * C2355) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C2355 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C2349 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C2356 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C2726) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C2356 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C2349 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C2355) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C11368 + C11369 - C11370 - C11371) * C31357 * C8927 +
            C11398 * C8928) *
               C31148 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C11376 - (C11377 + C11378) + C11379) * C31357 * C8927 +
            C11399 * C8928) *
               C31156 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C31357 * C8926 +
            (C11656 + C11657 - C11658 - C11659) * C31357 * C8927 +
            (C11660 + C11661 - C11662 - C11663) * C31357 * C8928) *
               C2726) *
              C31448 +
          (((C11370 - (C11369 + C11368) + C11371) * C31357 * C8926 +
            (C11374 - (C11373 + C11372) + C11375) * C31357 * C8927 +
            (C11384 - (C11385 + C11386) + C11387) * C31357 * C8928) *
               C31148 +
           ((C11378 + C11377 - C11376 - C11379) * C31357 * C8926 +
            (C11382 + C11381 - C11380 - C11383) * C31357 * C8927 +
            (C11388 + C11389 - C11390 - C11391) * C31357 * C8928) *
               C31156 +
           ((C11658 - (C11657 + C11656) + C11659) * C31357 * C8926 +
            (C11662 - (C11661 + C11660) + C11663) * C31357 * C8927 +
            ((C4585 * C2241 + C31123 * C2244) * C2356 -
             (C9202 * C2349 + C9203 * C2355) +
             (C4585 * C2247 + C31123 * C2250) * C31234) *
                C31357 * C8928) *
               C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2461 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31520 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2462 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31516 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C2463 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31506 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C2464 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C2459 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C2462 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31520 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2461) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31516 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C2463 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31506 +
           (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
            C115 * C1307 + C103 * C1308) *
               C2464 +
           (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
            C115 * C1309 + C103 * C1310) *
               C31486) *
              C31357 * C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2355 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2349 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2356 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31519 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C2356 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C2349 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2355) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31234) *
              C31357 * C31369 * C31512 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C2355 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C2349 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C2356 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31234) *
              C31357 * C31369 * C31499 +
          ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
            C115 * C563 + C103 * C564) *
               C2356 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C2349 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C2355) +
           (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
            C115 * C565 + C103 * C566) *
               C31234) *
              C31357 * C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
               C4583 +
           (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
               C4584) *
              C31369 * C31519 +
          ((C4739 * C2356 -
            ((C4585 * C128 + C31123 * C139) * C2349 +
             (C4585 * C118 + C31123 * C125) * C2355) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
               C4583 +
           (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
               C4584) *
              C31369 * C31512 +
          (((C4585 * C119 + C31123 * C126) * C2355 +
            (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
               C4583 +
           (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
               C4584) *
              C31369 * C31499 +
          ((C4967 * C2356 -
            ((C4585 * C130 + C31123 * C141) * C2349 +
             (C4585 * C120 + C31123 * C131) * C2355) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C2356 - (C4968 * C2349 + C4967 * C2355) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C2356 -
            (C4970 * C2349 + C4969 * C2355) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C2459 +
          ((C4739 * C2462 -
            ((C4585 * C128 + C31123 * C139) * C31520 +
             (C4585 * C118 + C31123 * C125) * C2461) +
            C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C2462 - (C4740 * C31520 + C4739 * C2461) + C4742 * C31516 -
            C4743 * C2463 - C4744 * C31506 + C5695 * C2464 + C5696 * C31486) *
               C4583 +
           (C4743 * C2462 - (C4742 * C31520 + C4741 * C2461) + C4744 * C31516 -
            C5695 * C2463 - C5696 * C31506 +
            (C4585 * C5686 + C31123 * C5687) * C2464 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C31357 * C8926 +
           (C9186 * C2355 + C9187 * C2349 - C5239 * C2356 - C5240 * C31234) *
               C31357 * C8927 +
           (C9188 * C2355 + C9189 * C2349 - C5583 * C2356 - C5584 * C31234) *
               C31357 * C8928) *
              C31519 +
          ((C4739 * C2356 -
            ((C4585 * C128 + C31123 * C139) * C2349 +
             (C4585 * C118 + C31123 * C125) * C2355) +
            C4740 * C31234) *
               C31357 * C8926 +
           (C5243 * C2356 - (C9192 * C2349 + C9193 * C2355) + C5244 * C31234) *
               C31357 * C8927 +
           (C6413 * C2356 - (C9190 * C2349 + C9191 * C2355) + C6414 * C31234) *
               C31357 * C8928) *
              C31512 +
          (((C4585 * C119 + C31123 * C126) * C2355 +
            (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
            C4746 * C31234) *
               C31357 * C8926 +
           (C9194 * C2355 + C9195 * C2349 - C5247 * C2356 - C5248 * C31234) *
               C31357 * C8927 +
           (C9196 * C2355 + C9197 * C2349 - C9612 * C2356 - C9613 * C31234) *
               C31357 * C8928) *
              C31499 +
          ((C4967 * C2356 -
            ((C4585 * C130 + C31123 * C141) * C2349 +
             (C4585 * C120 + C31123 * C131) * C2355) +
            C4968 * C31234) *
               C31357 * C8926 +
           ((C4585 * C820 + C31123 * C828) * C2356 -
            (C9434 * C2349 + C9435 * C2355) +
            (C4585 * C829 + C31123 * C835) * C31234) *
               C31357 * C8927 +
           ((C4585 * C2031 + C31123 * C2032) * C2356 -
            (C9432 * C2349 + C9433 * C2355) +
            (C4585 * C2033 + C31123 * C2034) * C31234) *
               C31357 * C8928) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C9186 * C2461 + C9187 * C31520 - C5239 * C2462 - C5240 * C31516 +
            C5241 * C2463 + C5242 * C31506 - C5581 * C2464 - C5582 * C31486) *
               C31357 * C8927 +
           (C9188 * C2461 + C9189 * C31520 - C5583 * C2462 - C5584 * C31516 +
            C5585 * C2463 + C5586 * C31506 - C5587 * C2464 - C5588 * C31486) *
               C31357 * C8928) *
              C2459 +
          ((C4739 * C2462 -
            ((C4585 * C128 + C31123 * C139) * C31520 +
             (C4585 * C118 + C31123 * C125) * C2461) +
            C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
            C4744 * C31486) *
               C31357 * C8926 +
           (C5243 * C2462 - (C9192 * C31520 + C9193 * C2461) + C5244 * C31516 -
            C5245 * C2463 - C5246 * C31506 + C5851 * C2464 + C5852 * C31486) *
               C31357 * C8927 +
           (C6413 * C2462 - (C9190 * C31520 + C9191 * C2461) + C6414 * C31516 -
            C6415 * C2463 - C6416 * C31506 +
            (C4585 * C6400 + C31123 * C6401) * C2464 +
            (C4585 * C6402 + C31123 * C6403) * C31486) *
               C31357 * C8928) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C4582 +
            (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
             C4737 * C30341 + C4738 * C2723) *
                C4583 +
            (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
             C5439 * C30341 + C5440 * C2723) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C4582 +
            (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
             C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                C4583 +
            (C4743 * C30327 - (C4742 * C31230 + C4741 * C30335) +
             C4744 * C31237 - C5695 * C30341 - C5696 * C2723) *
                C4584) *
               C31369 * C31153) *
              C3120 +
          (((C5239 * C30327 -
             ((C4585 * C433 + C31123 * C450) * C31230 +
              (C4585 * C420 + C31123 * C434) * C30335) +
             C5240 * C31237 - C5241 * C30341 - C5242 * C2723) *
                C4582 +
            (C5241 * C30327 - (C5240 * C31230 + C5239 * C30335) +
             C5242 * C31237 - C5581 * C30341 - C5582 * C2723) *
                C4583 +
            (C5581 * C30327 - (C5242 * C31230 + C5241 * C30335) +
             C5582 * C31237 - C5959 * C30341 - C5960 * C2723) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C30335 +
             (C4585 * C430 + C31123 * C447) * C31230 - C5243 * C30327 -
             C5244 * C31237 + C5245 * C30341 + C5246 * C2723) *
                C4582 +
            (C5243 * C30335 + C5244 * C31230 - C5245 * C30327 - C5246 * C31237 +
             C5851 * C30341 + C5852 * C2723) *
                C4583 +
            (C5245 * C30335 + C5246 * C31230 - C5851 * C30327 - C5852 * C31237 +
             (C4585 * C5842 + C31123 * C5843) * C30341 +
             (C4585 * C5844 + C31123 * C5845) * C2723) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30335 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31230 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C30327 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31237 +
            (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
             C115 * C269 + C103 * C282) *
                C30341 +
            (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
             C115 * C285 + C103 * C299) *
                C2723) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C30327 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31230 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30335) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31237 -
            (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
             C113 * C268 + C101 * C281) *
                C30341 -
            (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
             C113 * C284 + C101 * C298) *
                C2723) *
               C31357 * C31369 * C31153) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30327 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31230 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C30335) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31237 -
            (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
             C113 * C1165 + C101 * C1174) *
                C30341 -
            (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
             C113 * C1177 + C101 * C1192) *
                C2723) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C30335 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31230 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30327 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31237 +
            (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
             C115 * C1457 + C103 * C1458) *
                C30341 +
            (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
             C115 * C1459 + C103 * C1460) *
                C2723) *
               C31357 * C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C31357 * C8926 +
            (C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C31357 *
                C8927 +
            (C11816 + C11817 - C11818 - C11819 + C11820 + C11821) * C31357 *
                C8928) *
               C31433 +
           ((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C31357 * C8926 +
            (C11822 - (C11823 + C11824) + C11825 - C11826 - C11827) * C31357 *
                C8927 +
            (C11828 - (C11829 + C11830) + C11831 - C11832 - C11833) * C31357 *
                C8928) *
               C31153) *
              C3120 +
          (((C11812 - (C11811 + C11810) + C11813 - C11814 - C11815) * C31357 *
                C8926 +
            (C11818 - (C11817 + C11816) + C11819 - C11820 - C11821) * C31357 *
                C8927 +
            (C6629 * C30327 - (C9200 * C31230 + C9201 * C30335) +
             C6630 * C31237 - C6631 * C30341 - C6632 * C2723) *
                C31357 * C8928) *
               C31433 +
           ((C11824 + C11823 - C11822 - C11825 + C11826 + C11827) * C31357 *
                C8926 +
            (C11830 + C11829 - C11828 - C11831 + C11832 + C11833) * C31357 *
                C8927 +
            (C9198 * C30335 + C9199 * C31230 - C10790 * C30327 -
             C10791 * C31237 + (C4585 * C6514 + C31123 * C6515) * C30341 +
             (C4585 * C6516 + C31123 * C6517) * C2723) *
                C31357 * C8928) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C30335 +
            (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
            C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
               C4582 +
           (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
            C4737 * C30341 + C4738 * C2723) *
               C4583 +
           (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
            C5439 * C30341 + C5440 * C2723) *
               C4584) *
              C31369 * C31143 * C31272 +
          ((C5239 * C30327 -
            ((C4585 * C433 + C31123 * C450) * C31230 +
             (C4585 * C420 + C31123 * C434) * C30335) +
            C5240 * C31237 - C5241 * C30341 - C5242 * C2723) *
               C4582 +
           (C5241 * C30327 - (C5240 * C31230 + C5239 * C30335) +
            C5242 * C31237 - C5581 * C30341 - C5582 * C2723) *
               C4583 +
           (C5581 * C30327 - (C5242 * C31230 + C5241 * C30335) +
            C5582 * C31237 - C5959 * C30341 - C5960 * C2723) *
               C4584) *
              C31369 * C31143 * C31279 +
          (((C4585 * C422 + C31123 * C437) * C30335 +
            (C4585 * C440 + C31123 * C452) * C31230 - C5583 * C30327 -
            C5584 * C31237 + C5585 * C30341 + C5586 * C2723) *
               C4582 +
           (C5583 * C30335 + C5584 * C31230 - C5585 * C30327 - C5586 * C31237 +
            C5587 * C30341 + C5588 * C2723) *
               C4583 +
           (C5585 * C30335 + C5586 * C31230 - C5587 * C30327 - C5588 * C31237 +
            (C4585 * C5554 + C31123 * C5559) * C30341 +
            (C4585 * C5560 + C31123 * C5563) * C2723) *
               C4584) *
              C31369 * C31143 * C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C30335 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31230 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C30327 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31237 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C30341 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C2723) *
              C31357 * C31369 * C31143 * C31272 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C30327 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31230 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C30335) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31237 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C30341 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C2723) *
              C31357 * C31369 * C31143 * C31279 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C30335 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31230 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C30327 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31237 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C30341 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C2723) *
              C31357 * C31369 * C31143 * C3628)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C30335 +
            (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
            C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
               C31357 * C8926 +
           (C11810 + C11811 - C11812 - C11813 + C11814 + C11815) * C31357 *
               C8927 +
           C13369 * C8928) *
              C31143 * C31272 +
          ((C11812 - (C11811 + C11810) + C11813 - C11814 - C11815) * C31357 *
               C8926 +
           (C11818 - (C11817 + C11816) + C11819 - C11820 - C11821) * C31357 *
               C8927 +
           (C13359 - (C13360 + C13361) + C13362 - C13363 - C13364) * C31357 *
               C8928) *
              C31143 * C31279 +
          (C13369 * C8926 +
           (C13361 + C13360 - C13359 - C13362 + C13363 + C13364) * C31357 *
               C8927 +
           (C10616 * C30335 + C10617 * C31230 - C11020 * C30327 -
            C11021 * C31237 + (C4585 * C6244 + C31123 * C6249) * C30341 +
            (C4585 * C6250 + C31123 * C6253) * C2723) *
               C31357 * C8928) *
              C31143 * C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C2355 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C2349 -
                (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                 C113 * C266 + C101 * C276) *
                    C2356 -
                (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                 C113 * C279 + C101 * C296) *
                    C31234) *
                   C31357 * C31369 * C31510 +
               ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                 C115 * C270 + C103 * C286) *
                    C2356 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C2349 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C2355) +
                (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                 C115 * C287 + C103 * C300) *
                    C31234) *
                   C31357 * C31369 * C31497 +
               ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C2355 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C2349 -
                (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                 C113 * C264 + C101 * C274) *
                    C2356 -
                (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                 C113 * C277 + C101 * C294) *
                    C31234) *
                   C31357 * C31369 * C31470) *
                  C3120 +
              (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C2356 -
                ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                  C113 * C433 + C101 * C450) *
                     C2349 +
                 (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                  C113 * C420 + C101 * C434) *
                     C2355) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31234) *
                   C31357 * C31369 * C31510 +
               ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C2355 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C2349 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C2356 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31234) *
                   C31357 * C31369 * C31497 +
               ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
                 C115 * C821 + C103 * C830) *
                    C2356 -
                ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                  C113 * C431 + C101 * C448) *
                     C2349 +
                 (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                  C113 * C418 + C101 * C428) *
                     C2355) +
                (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
                 C115 * C831 + C103 * C836) *
                    C31234) *
                   C31357 * C31369 * C31470) *
                  C31276) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C2461 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31520 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C2462 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31516 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C2463 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31506 -
               (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
                C113 * C1031 + C101 * C1037) *
                   C2464 -
               (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
                C113 * C1040 + C101 * C1049) *
                   C31486) *
                  C31357 * C31369 * C31143 * C3120 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C2462 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C31520 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C2461) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C31516 -
               (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                C113 * C1165 + C101 * C1174) *
                   C2463 -
               (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                C113 * C1177 + C101 * C1192) *
                   C31506 +
               (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
                C115 * C1561 + C103 * C1564) *
                   C2464 +
               (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
                C115 * C1567 + C103 * C1570) *
                   C31486) *
                  C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2355 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2349 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2356 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31143 * C31521 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2356 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C2349 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C2355) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31234) *
              C31357 * C31369 * C31143 * C31518 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C2355 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C2349 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C2356 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31234) *
              C31357 * C31369 * C31143 * C31509 +
          ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C2356 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C2349 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C2355) +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31234) *
              C31357 * C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31510 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C4583 +
            (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C3120 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31510 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31497 +
           ((C5247 * C2356 -
             ((C4585 * C431 + C31123 * C448) * C2349 +
              (C4585 * C418 + C31123 * C428) * C2355) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C2356 - (C5248 * C2349 + C5247 * C2355) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C2356 -
             (C5250 * C2349 + C5249 * C2355) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C3120 +
          ((C5239 * C2462 -
            ((C4585 * C433 + C31123 * C450) * C31520 +
             (C4585 * C420 + C31123 * C434) * C2461) +
            C5240 * C31516 - C5241 * C2463 - C5242 * C31506 + C5581 * C2464 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C2462 - (C5240 * C31520 + C5239 * C2461) + C5242 * C31516 -
            C5581 * C2463 - C5582 * C31506 + C5959 * C2464 + C5960 * C31486) *
               C4583 +
           (C5581 * C2462 - (C5242 * C31520 + C5241 * C2461) + C5582 * C31516 -
            C5959 * C2463 - C5960 * C31506 +
            (C4585 * C5950 + C31123 * C5951) * C2464 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
               C4583 +
           (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
               C4584) *
              C31369 * C31143 * C31521 +
          ((C5239 * C2356 -
            ((C4585 * C433 + C31123 * C450) * C2349 +
             (C4585 * C420 + C31123 * C434) * C2355) +
            C5240 * C31234) *
               C4582 +
           (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
               C4583 +
           (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
               C4584) *
              C31369 * C31143 * C31518 +
          (((C4585 * C422 + C31123 * C437) * C2355 +
            (C4585 * C440 + C31123 * C452) * C2349 - C5583 * C2356 -
            C5584 * C31234) *
               C4582 +
           (C5583 * C2355 + C5584 * C2349 - C5585 * C2356 - C5586 * C31234) *
               C4583 +
           (C5585 * C2355 + C5586 * C2349 - C5587 * C2356 - C5588 * C31234) *
               C4584) *
              C31369 * C31143 * C31509 +
          ((C6629 * C2356 -
            ((C4585 * C1869 + C31123 * C1881) * C2349 +
             (C4585 * C1863 + C31123 * C1872) * C2355) +
            C6630 * C31234) *
               C4582 +
           (C6631 * C2356 - (C6630 * C2349 + C6629 * C2355) + C6632 * C31234) *
               C4583 +
           ((C4585 * C6616 + C31123 * C6617) * C2356 -
            (C6632 * C2349 + C6631 * C2355) +
            (C4585 * C6618 + C31123 * C6619) * C31234) *
               C4584) *
              C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C11368 + C11369 - C11370 - C11371) * C31357 * C8927 +
            C11398 * C8928) *
               C31510 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C11376 - (C11377 + C11378) + C11379) * C31357 * C8927 +
            C11399 * C8928) *
               C31497 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C31357 * C8926 +
            (C11656 + C11657 - C11658 - C11659) * C31357 * C8927 +
            (C11660 + C11661 - C11662 - C11663) * C31357 * C8928) *
               C31470) *
              C3120 +
          (((C11370 - (C11369 + C11368) + C11371) * C31357 * C8926 +
            (C11374 - (C11373 + C11372) + C11375) * C31357 * C8927 +
            (C11384 - (C11385 + C11386) + C11387) * C31357 * C8928) *
               C31510 +
           ((C11378 + C11377 - C11376 - C11379) * C31357 * C8926 +
            (C11382 + C11381 - C11380 - C11383) * C31357 * C8927 +
            (C11388 + C11389 - C11390 - C11391) * C31357 * C8928) *
               C31497 +
           ((C11658 - (C11657 + C11656) + C11659) * C31357 * C8926 +
            (C11662 - (C11661 + C11660) + C11663) * C31357 * C8927 +
            ((C4585 * C2241 + C31123 * C2244) * C2356 -
             (C9202 * C2349 + C9203 * C2355) +
             (C4585 * C2247 + C31123 * C2250) * C31234) *
                C31357 * C8928) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C12834 + C12835 - C12836 - C12837 + C12838 + C12839 - C12840 -
            C12841) *
               C31357 * C8927 +
           (C12842 + C12843 - C12844 - C12845 + C12846 + C12847 - C12848 -
            C12849) *
               C31357 * C8928) *
              C31143 * C3120 +
          ((C12836 - (C12835 + C12834) + C12837 - C12838 - C12839 + C12840 +
            C12841) *
               C31357 * C8926 +
           (C12844 - (C12843 + C12842) + C12845 - C12846 - C12847 + C12848 +
            C12849) *
               C31357 * C8927 +
           (C6629 * C2462 - (C9200 * C31520 + C9201 * C2461) + C6630 * C31516 -
            C6631 * C2463 - C6632 * C31506 +
            (C4585 * C6616 + C31123 * C6617) * C2464 +
            (C4585 * C6618 + C31123 * C6619) * C31486) *
               C31357 * C8928) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C31357 * C8926 +
           (C11368 + C11369 - C11370 - C11371) * C31357 * C8927 +
           C11398 * C8928) *
              C31143 * C31521 +
          ((C11370 - (C11369 + C11368) + C11371) * C31357 * C8926 +
           (C11374 - (C11373 + C11372) + C11375) * C31357 * C8927 +
           C12955 * C8928) *
              C31143 * C31518 +
          (C11398 * C8926 +
           (C11386 + C11385 - C11384 - C11387) * C31357 * C8927 +
           (C12949 + C12950 - C12951 - C12952) * C31357 * C8928) *
              C31143 * C31509 +
          (C12955 * C8926 +
           (C12951 - (C12950 + C12949) + C12952) * C31357 * C8927 +
           ((C4585 * C11007 + C31123 * C11008) * C2356 -
            (C10618 * C2349 + C10619 * C2355) +
            (C4585 * C11009 + C31123 * C11010) * C31234) *
               C31357 * C8928) *
              C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31272 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31279 +
          ((((C4585 * C422 + C31123 * C437) * C2355 +
             (C4585 * C440 + C31123 * C452) * C2349 - C5583 * C2356 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C2355 + C5584 * C2349 - C5585 * C2356 - C5586 * C31234) *
                C4583 +
            (C5585 * C2355 + C5586 * C2349 - C5587 * C2356 - C5588 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C6413 * C2356 -
             ((C4585 * C441 + C31123 * C453) * C2349 +
              (C4585 * C423 + C31123 * C438) * C2355) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C2356 - (C6414 * C2349 + C6413 * C2355) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C2356 -
             (C6416 * C2349 + C6415 * C2355) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31272 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31279 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C2355 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C2349 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C2356 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C2356 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C2349 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C2355) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C11368 + C11369 - C11370 - C11371) * C31357 * C8927 +
            C11398 * C8928) *
               C31433 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C11376 - (C11377 + C11378) + C11379) * C31357 * C8927 +
            C11399 * C8928) *
               C31153) *
              C31272 +
          (((C11370 - (C11369 + C11368) + C11371) * C31357 * C8926 +
            (C11374 - (C11373 + C11372) + C11375) * C31357 * C8927 +
            C12955 * C8928) *
               C31433 +
           ((C11378 + C11377 - C11376 - C11379) * C31357 * C8926 +
            (C11382 + C11381 - C11380 - C11383) * C31357 * C8927 +
            (C11388 + C11389 - C11390 - C11391) * C31357 * C8928) *
               C31153) *
              C31279 +
          ((C11398 * C8926 +
            (C11386 + C11385 - C11384 - C11387) * C31357 * C8927 +
            (C12949 + C12950 - C12951 - C12952) * C31357 * C8928) *
               C31433 +
           (C11399 * C8926 +
            (C11390 - (C11389 + C11388) + C11391) * C31357 * C8927 +
            ((C4585 * C10771 + C31123 * C10772) * C2356 -
             (C10906 * C2349 + C10907 * C2355) +
             (C4585 * C10773 + C31123 * C10774) * C31234) *
                C31357 * C8928) *
               C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2461 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31520 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2462 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31516 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C2463 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31506 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C2464 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31143 * C3120 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2462 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31520 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C2461) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31516 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C2463 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31506 +
           (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
            C115 * C1561 + C103 * C1564) *
               C2464 +
           (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
            C115 * C1567 + C103 * C1570) *
               C31486) *
              C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31510 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31497 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C2355 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C2349 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C2356 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C31470) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31510 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31497 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C2356 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C2349 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C2355) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31510 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C4583 +
            (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C3120 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31510 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31497 +
           ((C5247 * C2356 -
             ((C4585 * C431 + C31123 * C448) * C2349 +
              (C4585 * C418 + C31123 * C428) * C2355) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C2356 - (C5248 * C2349 + C5247 * C2355) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C2356 -
             (C5250 * C2349 + C5249 * C2355) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C3120 +
          ((C5239 * C2462 -
            ((C4585 * C433 + C31123 * C450) * C31520 +
             (C4585 * C420 + C31123 * C434) * C2461) +
            C5240 * C31516 - C5241 * C2463 - C5242 * C31506 + C5581 * C2464 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C2462 - (C5240 * C31520 + C5239 * C2461) + C5242 * C31516 -
            C5581 * C2463 - C5582 * C31506 + C5959 * C2464 + C5960 * C31486) *
               C4583 +
           (C5581 * C2462 - (C5242 * C31520 + C5241 * C2461) + C5582 * C31516 -
            C5959 * C2463 - C5960 * C31506 +
            (C4585 * C5950 + C31123 * C5951) * C2464 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C11368 + C11369 - C11370 - C11371) * C31357 * C8927 +
            C11398 * C8928) *
               C31510 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C11376 - (C11377 + C11378) + C11379) * C31357 * C8927 +
            C11399 * C8928) *
               C31497 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C31357 * C8926 +
            (C11656 + C11657 - C11658 - C11659) * C31357 * C8927 +
            (C11660 + C11661 - C11662 - C11663) * C31357 * C8928) *
               C31470) *
              C3120 +
          (((C11370 - (C11369 + C11368) + C11371) * C31357 * C8926 +
            (C11374 - (C11373 + C11372) + C11375) * C31357 * C8927 +
            (C11384 - (C11385 + C11386) + C11387) * C31357 * C8928) *
               C31510 +
           ((C11378 + C11377 - C11376 - C11379) * C31357 * C8926 +
            (C11382 + C11381 - C11380 - C11383) * C31357 * C8927 +
            (C11388 + C11389 - C11390 - C11391) * C31357 * C8928) *
               C31497 +
           ((C11658 - (C11657 + C11656) + C11659) * C31357 * C8926 +
            (C11662 - (C11661 + C11660) + C11663) * C31357 * C8927 +
            ((C4585 * C2241 + C31123 * C2244) * C2356 -
             (C9202 * C2349 + C9203 * C2355) +
             (C4585 * C2247 + C31123 * C2250) * C31234) *
                C31357 * C8928) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C12834 + C12835 - C12836 - C12837 + C12838 + C12839 - C12840 -
            C12841) *
               C31357 * C8927 +
           (C12842 + C12843 - C12844 - C12845 + C12846 + C12847 - C12848 -
            C12849) *
               C31357 * C8928) *
              C31143 * C3120 +
          ((C12836 - (C12835 + C12834) + C12837 - C12838 - C12839 + C12840 +
            C12841) *
               C31357 * C8926 +
           (C12844 - (C12843 + C12842) + C12845 - C12846 - C12847 + C12848 +
            C12849) *
               C31357 * C8927 +
           (C6629 * C2462 - (C9200 * C31520 + C9201 * C2461) + C6630 * C31516 -
            C6631 * C2463 - C6632 * C31506 +
            (C4585 * C6616 + C31123 * C6617) * C2464 +
            (C4585 * C6618 + C31123 * C6619) * C31486) *
               C31357 * C8928) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C561 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31447 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C562 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31234) *
                  C31357 * C31369 * C557 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C562 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31447 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C561) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C31234) *
                  C31357 * C31369 * C558 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C561 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31447 -
               (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                C113 * C264 + C101 * C274) *
                   C562 -
               (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                C113 * C277 + C101 * C294) *
                   C31234) *
                  C31357 * C31369 * C559 +
              ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
                C115 * C563 + C103 * C564) *
                   C562 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31447 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C561) +
               (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
                C115 * C565 + C103 * C566) *
                   C31234) *
                  C31357 * C31369 * C31480) *
             C31189 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C1303 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C1297 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C1304 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C1298 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C1305 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C1299 -
               (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
                C113 * C1031 + C101 * C1037) *
                   C1306 -
               (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
                C113 * C1040 + C101 * C1049) *
                   C31486) *
                  C31357 * C31369 * C31433 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C1304 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C1297 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C1303) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C1298 -
               (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                C113 * C268 + C101 * C281) *
                   C1305 -
               (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                C113 * C284 + C101 * C298) *
                   C1299 +
               (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
                C115 * C1307 + C103 * C1308) *
                   C1306 +
               (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
                C115 * C1309 + C103 * C1310) *
                   C31486) *
                  C31357 * C31369 * C31153) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C1681 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C1682 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C561 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31447 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C562 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C562 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C31447 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C561) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
               C4583 +
           (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
               C4584) *
              C31369 * C557 +
          ((C4739 * C562 -
            ((C4585 * C128 + C31123 * C139) * C31447 +
             (C4585 * C118 + C31123 * C125) * C561) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
               C4583 +
           (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
               C4584) *
              C31369 * C558 +
          (((C4585 * C119 + C31123 * C126) * C561 +
            (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
               C4583 +
           (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
               C4584) *
              C31369 * C559 +
          ((C4967 * C562 -
            ((C4585 * C130 + C31123 * C141) * C31447 +
             (C4585 * C120 + C31123 * C131) * C561) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C562 - (C4968 * C31447 + C4967 * C561) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C562 -
            (C4970 * C31447 + C4969 * C561) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31433 +
          ((C4739 * C1304 -
            ((C4585 * C128 + C31123 * C139) * C1297 +
             (C4585 * C118 + C31123 * C125) * C1303) +
            C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C1304 - (C4740 * C1297 + C4739 * C1303) + C4742 * C1298 -
            C4743 * C1305 - C4744 * C1299 + C5695 * C1306 + C5696 * C31486) *
               C4583 +
           (C4743 * C1304 - (C4742 * C1297 + C4741 * C1303) + C4744 * C1298 -
            C5695 * C1305 - C5696 * C1299 +
            (C4585 * C5686 + C31123 * C5687) * C1306 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C1681 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 - C5851 * C562 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C1682 +
          ((((C4585 * C422 + C31123 * C437) * C561 +
             (C4585 * C440 + C31123 * C452) * C31447 - C5583 * C562 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C561 + C5584 * C31447 - C5585 * C562 - C5586 * C31234) *
                C4583 +
            (C5585 * C561 + C5586 * C31447 - C5587 * C562 - C5588 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C6413 * C562 -
             ((C4585 * C441 + C31123 * C453) * C31447 +
              (C4585 * C423 + C31123 * C438) * C561) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C562 - (C6414 * C31447 + C6413 * C561) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C562 -
             (C6416 * C31447 + C6415 * C561) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C31357 * C8926 +
           (C9186 * C561 + C9187 * C31447 - C5239 * C562 - C5240 * C31234) *
               C31357 * C8927 +
           (C9188 * C561 + C9189 * C31447 - C5583 * C562 - C5584 * C31234) *
               C31357 * C8928) *
              C557 +
          ((C4739 * C562 -
            ((C4585 * C128 + C31123 * C139) * C31447 +
             (C4585 * C118 + C31123 * C125) * C561) +
            C4740 * C31234) *
               C31357 * C8926 +
           (C5243 * C562 - (C9192 * C31447 + C9193 * C561) + C5244 * C31234) *
               C31357 * C8927 +
           (C6413 * C562 - (C9190 * C31447 + C9191 * C561) + C6414 * C31234) *
               C31357 * C8928) *
              C558 +
          (((C4585 * C119 + C31123 * C126) * C561 +
            (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
            C4746 * C31234) *
               C31357 * C8926 +
           (C9194 * C561 + C9195 * C31447 - C5247 * C562 - C5248 * C31234) *
               C31357 * C8927 +
           (C9196 * C561 + C9197 * C31447 -
            (C4585 * C1166 + C31123 * C1178) * C562 -
            (C4585 * C1181 + C31123 * C1193) * C31234) *
               C31357 * C8928) *
              C559 +
          ((C4967 * C562 -
            ((C4585 * C130 + C31123 * C141) * C31447 +
             (C4585 * C120 + C31123 * C131) * C561) +
            C4968 * C31234) *
               C31357 * C8926 +
           ((C4585 * C820 + C31123 * C828) * C562 -
            ((C4585 * C432 + C31123 * C449) * C31447 +
             (C4585 * C419 + C31123 * C429) * C561) +
            (C4585 * C829 + C31123 * C835) * C31234) *
               C31357 * C8927 +
           ((C4585 * C2031 + C31123 * C2032) * C562 -
            ((C4585 * C443 + C31123 * C455) * C31447 +
             (C4585 * C425 + C31123 * C444) * C561) +
            (C4585 * C2033 + C31123 * C2034) * C31234) *
               C31357 * C8928) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C9186 * C1303 + C9187 * C1297 - C5239 * C1304 - C5240 * C1298 +
            C5241 * C1305 + C5242 * C1299 - C5581 * C1306 - C5582 * C31486) *
               C31357 * C8927 +
           (C9188 * C1303 + C9189 * C1297 - C5583 * C1304 - C5584 * C1298 +
            C5585 * C1305 + C5586 * C1299 - C5587 * C1306 - C5588 * C31486) *
               C31357 * C8928) *
              C31433 +
          ((C4739 * C1304 -
            ((C4585 * C128 + C31123 * C139) * C1297 +
             (C4585 * C118 + C31123 * C125) * C1303) +
            C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
            C4744 * C31486) *
               C31357 * C8926 +
           (C5243 * C1304 - (C9192 * C1297 + C9193 * C1303) + C5244 * C1298 -
            C5245 * C1305 - C5246 * C1299 + C5851 * C1306 + C5852 * C31486) *
               C31357 * C8927 +
           (C6413 * C1304 - (C9190 * C1297 + C9191 * C1303) + C6414 * C1298 -
            C6415 * C1305 - C6416 * C1299 +
            (C4585 * C6400 + C31123 * C6401) * C1306 +
            (C4585 * C6402 + C31123 * C6403) * C31486) *
               C31357 * C8928) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C9586 + C9587 - C9588 - C9589) * C31357 * C8927 + C10796 * C8928) *
               C31433 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C9594 - (C9595 + C9596) + C9597) * C31357 * C8927 +
            C10797 * C8928) *
               C31153) *
              C1681 +
          (((C9588 - (C9587 + C9586) + C9589) * C31357 * C8926 +
            (C9592 - (C9591 + C9590) + C9593) * C31357 * C8927 +
            (C10778 - (C10779 + C10780) + C10781) * C31357 * C8928) *
               C31433 +
           ((C9596 + C9595 - C9594 - C9597) * C31357 * C8926 +
            (C9600 + C9599 - C9598 - C9601) * C31357 * C8927 +
            (C10782 + C10783 - C10794 - C10795) * C31357 * C8928) *
               C31153) *
              C1682 +
          ((C10796 * C8926 +
            (C10780 + C10779 - C10778 - C10781) * C31357 * C8927 +
            (C10616 * C561 + C10617 * C31447 -
             (C4585 * C6243 + C31123 * C6247) * C562 -
             (C4585 * C6248 + C31123 * C6252) * C31234) *
                C31357 * C8928) *
               C31433 +
           (C10797 * C8926 +
            (C10794 - (C10783 + C10782) + C10795) * C31357 * C8927 +
            ((C4585 * C10771 + C31123 * C10772) * C562 -
             ((C4585 * C1877 + C31123 * C1883) * C31447 +
              (C4585 * C1865 + C31123 * C1874) * C561) +
             (C4585 * C10773 + C31123 * C10774) * C31234) *
                C31357 * C8928) *
               C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C561 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31447 -
                (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                 C113 * C266 + C101 * C276) *
                    C562 -
                (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                 C113 * C279 + C101 * C296) *
                    C31234) *
                   C31357 * C31369 * C258 +
               ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                 C115 * C270 + C103 * C286) *
                    C562 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31447 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C561) +
                (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                 C115 * C287 + C103 * C300) *
                    C31234) *
                   C31357 * C31369 * C259 +
               ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C561 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31447 -
                (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                 C113 * C264 + C101 * C274) *
                    C562 -
                (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                 C113 * C277 + C101 * C294) *
                    C31234) *
                   C31357 * C31369 * C31470) *
                  C31448 +
              (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C562 -
                ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                  C113 * C433 + C101 * C450) *
                     C31447 +
                 (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                  C113 * C420 + C101 * C434) *
                     C561) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31234) *
                   C31357 * C31369 * C258 +
               ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C561 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C31447 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C562 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31234) *
                   C31357 * C31369 * C259 +
               ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
                 C115 * C821 + C103 * C830) *
                    C562 -
                ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                  C113 * C431 + C101 * C448) *
                     C31447 +
                 (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                  C113 * C418 + C101 * C428) *
                     C561) +
                (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
                 C115 * C831 + C103 * C836) *
                    C31234) *
                   C31357 * C31369 * C31470) *
                  C31276) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C1303 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C1297 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C1304 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C1298 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C1305 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C1299 -
               (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
                C113 * C1031 + C101 * C1037) *
                   C1306 -
               (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
                C113 * C1040 + C101 * C1049) *
                   C31486) *
                  C31357 * C31369 * C31143 * C31448 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C1304 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C1297 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C1303) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C1298 -
               (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                C113 * C1165 + C101 * C1174) *
                   C1305 -
               (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                C113 * C1177 + C101 * C1192) *
                   C1299 +
               (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
                C115 * C1561 + C103 * C1564) *
                   C1306 +
               (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
                C115 * C1567 + C103 * C1570) *
                   C31486) *
                  C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C561 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31447 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C562 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31143 * C2133 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C562 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31447 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C561) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31234) *
              C31357 * C31369 * C31143 * C2134 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C561 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31447 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C562 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31234) *
              C31357 * C31369 * C31143 * C2135 +
          ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C562 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31447 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C561) +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31234) *
              C31357 * C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C258 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C4583 +
            (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C31448 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            ((C4585 * C1559 + C31123 * C1562) * C562 -
             (C5242 * C31447 + C5241 * C561) +
             (C4585 * C1565 + C31123 * C1568) * C31234) *
                C4584) *
               C31369 * C258 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 -
             (C4585 * C1560 + C31123 * C1563) * C562 -
             (C4585 * C1566 + C31123 * C1569) * C31234) *
                C4584) *
               C31369 * C259 +
           ((C5247 * C562 -
             ((C4585 * C431 + C31123 * C448) * C31447 +
              (C4585 * C418 + C31123 * C428) * C561) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C562 - (C5248 * C31447 + C5247 * C561) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C562 -
             (C5250 * C31447 + C5249 * C561) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C31448 +
          ((C5239 * C1304 -
            ((C4585 * C433 + C31123 * C450) * C1297 +
             (C4585 * C420 + C31123 * C434) * C1303) +
            C5240 * C1298 - C5241 * C1305 - C5242 * C1299 + C5581 * C1306 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C1304 - (C5240 * C1297 + C5239 * C1303) + C5242 * C1298 -
            C5581 * C1305 - C5582 * C1299 + C5959 * C1306 + C5960 * C31486) *
               C4583 +
           (C5581 * C1304 - (C5242 * C1297 + C5241 * C1303) + C5582 * C1298 -
            C5959 * C1305 - C5960 * C1299 +
            (C4585 * C5950 + C31123 * C5951) * C1306 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
               C4583 +
           (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
               C4584) *
              C31369 * C31143 * C2133 +
          ((C5239 * C562 -
            ((C4585 * C433 + C31123 * C450) * C31447 +
             (C4585 * C420 + C31123 * C434) * C561) +
            C5240 * C31234) *
               C4582 +
           (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
               C4583 +
           (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
               C4584) *
              C31369 * C31143 * C2134 +
          (((C4585 * C422 + C31123 * C437) * C561 +
            (C4585 * C440 + C31123 * C452) * C31447 - C5583 * C562 -
            C5584 * C31234) *
               C4582 +
           (C5583 * C561 + C5584 * C31447 - C5585 * C562 - C5586 * C31234) *
               C4583 +
           (C5585 * C561 + C5586 * C31447 - C5587 * C562 - C5588 * C31234) *
               C4584) *
              C31369 * C31143 * C2135 +
          ((C6629 * C562 -
            ((C4585 * C1869 + C31123 * C1881) * C31447 +
             (C4585 * C1863 + C31123 * C1872) * C561) +
            C6630 * C31234) *
               C4582 +
           (C6631 * C562 - (C6630 * C31447 + C6629 * C561) + C6632 * C31234) *
               C4583 +
           ((C4585 * C6616 + C31123 * C6617) * C562 -
            (C6632 * C31447 + C6631 * C561) +
            (C4585 * C6618 + C31123 * C6619) * C31234) *
               C4584) *
              C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C9586 + C9587 - C9588 - C9589) * C31357 * C8927 +
            (C9590 + C9591 - C9592 - C9593) * C31357 * C8928) *
               C258 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C9594 - (C9595 + C9596) + C9597) * C31357 * C8927 +
            (C9598 - (C9599 + C9600) + C9601) * C31357 * C8928) *
               C259 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C31357 * C8926 +
            (C9602 + C9603 - C9604 - C9605) * C31357 * C8927 +
            (C9606 + C9607 - C9614 - C9615) * C31357 * C8928) *
               C31470) *
              C31448 +
          (((C9588 - (C9587 + C9586) + C9589) * C31357 * C8926 +
            (C9592 - (C9591 + C9590) + C9593) * C31357 * C8927 +
            (C6629 * C562 - (C9200 * C31447 + C9201 * C561) + C6630 * C31234) *
                C31357 * C8928) *
               C258 +
           ((C9596 + C9595 - C9594 - C9597) * C31357 * C8926 +
            (C9600 + C9599 - C9598 - C9601) * C31357 * C8927 +
            (C9198 * C561 + C9199 * C31447 -
             (C4585 * C2240 + C31123 * C2243) * C562 -
             (C4585 * C2246 + C31123 * C2249) * C31234) *
                C31357 * C8928) *
               C259 +
           ((C9604 - (C9603 + C9602) + C9605) * C31357 * C8926 +
            (C9614 - (C9607 + C9606) + C9615) * C31357 * C8927 +
            ((C4585 * C2241 + C31123 * C2244) * C562 -
             (C9202 * C31447 + C9203 * C561) +
             (C4585 * C2247 + C31123 * C2250) * C31234) *
                C31357 * C8928) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C10276 + C10277 - C10278 - C10279 + C10280 + C10281 - C10282 -
            C10283) *
               C31357 * C8927 +
           (C10284 + C10285 - C10286 - C10287 + C10288 + C10289 - C10290 -
            C10291) *
               C31357 * C8928) *
              C31143 * C31448 +
          ((C10278 - (C10277 + C10276) + C10279 - C10280 - C10281 + C10282 +
            C10283) *
               C31357 * C8926 +
           (C10286 - (C10285 + C10284) + C10287 - C10288 - C10289 + C10290 +
            C10291) *
               C31357 * C8927 +
           (C6629 * C1304 - (C9200 * C1297 + C9201 * C1303) + C6630 * C1298 -
            C6631 * C1305 - C6632 * C1299 +
            (C4585 * C6616 + C31123 * C6617) * C1306 +
            (C4585 * C6618 + C31123 * C6619) * C31486) *
               C31357 * C8928) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C31357 * C8926 +
           (C9586 + C9587 - C9588 - C9589) * C31357 * C8927 + C10796 * C8928) *
              C31143 * C2133 +
          ((C9588 - (C9587 + C9586) + C9589) * C31357 * C8926 +
           (C9592 - (C9591 + C9590) + C9593) * C31357 * C8927 +
           C11025 * C8928) *
              C31143 * C2134 +
          (C10796 * C8926 +
           (C10780 + C10779 - C10778 - C10781) * C31357 * C8927 +
           (C11013 + C11014 - C11023 - C11024) * C31357 * C8928) *
              C31143 * C2135 +
          (C11025 * C8926 +
           (C11023 - (C11014 + C11013) + C11024) * C31357 * C8927 +
           ((C4585 * C11007 + C31123 * C11008) * C562 -
            (C10618 * C31447 + C10619 * C561) +
            (C4585 * C11009 + C31123 * C11010) * C31234) *
               C31357 * C8928) *
              C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31171) *
                  C31357 * C31369 * C107 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31171 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31357 * C31369 * C108 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31171) *
                  C31357 * C31369 * C109 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31171 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31357 * C31369 * C110 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31171) *
                  C31357 * C31369 * C111) *
             C31189 -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C261 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31513 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C262 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31501 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C263 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31476) *
                  C31357 * C31369 * C258 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C262 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31513 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C261) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C31501 -
               (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                C113 * C268 + C101 * C281) *
                   C263 -
               (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                C113 * C284 + C101 * C298) *
                   C31476) *
                  C31357 * C31369 * C259 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C261 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31513 -
               (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                C113 * C264 + C101 * C274) *
                   C262 -
               (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                C113 * C277 + C101 * C294) *
                   C31501 +
               (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
                C115 * C273 + C103 * C292) *
                   C263 +
               (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
                C115 * C293 + C103 * C303) *
                   C31476) *
                  C31357 * C31369 * C31470) *
             C31189 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31171) *
                   C31357 * C31369 * C258 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31171 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31357 * C31369 * C259 +
               ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31171) *
                   C31357 * C31369 * C31470) *
                  C31514 +
              (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C116 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C31171) *
                   C31357 * C31369 * C259 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C31171 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C116) *
                   C31357 * C31369 * C258 -
               ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                 C113 * C431 + C101 * C448) *
                    C31171 +
                (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                 C113 * C418 + C101 * C428) *
                    C116) *
                   C31357 * C31369 * C31470) *
                  C31503 +
              (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                 C115 * C424 + C103 * C439) *
                    C116 +
                (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                 C115 * C442 + C103 * C454) *
                    C31171) *
                   C31357 * C31369 * C258 -
               ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
                 C113 * C441 + C101 * C453) *
                    C31171 +
                (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
                 C113 * C423 + C101 * C438) *
                    C116) *
                   C31357 * C31369 * C259 +
               ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
                 C115 * C426 + C103 * C445) *
                    C116 +
                (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
                 C115 * C446 + C103 * C456) *
                    C31171) *
                   C31357 * C31369 * C31470) *
                  C31479) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C953 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C947 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C954 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C948 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C955 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31476) *
                  C31357 * C31369 * C31510 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C954 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C947 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C953) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C948 -
               (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                C113 * C268 + C101 * C281) *
                   C955 -
               (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                C113 * C284 + C101 * C298) *
                   C31476) *
                  C31357 * C31369 * C31497 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C953 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C947 -
               (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                C113 * C264 + C101 * C274) *
                   C954 -
               (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                C113 * C277 + C101 * C294) *
                   C948 +
               (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
                C115 * C273 + C103 * C292) *
                   C955 +
               (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
                C115 * C293 + C103 * C303) *
                   C31476) *
                  C31357 * C31369 * C31470) *
             C31189 -
         0.25 * std::pow(Pi, 2.5) *
             ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
               C115 * C119 + C103 * C126) *
                  C1024 +
              (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
               C115 * C129 + C103 * C140) *
                  C1018 -
              (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
               C113 * C266 + C101 * C276) *
                  C1025 -
              (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
               C113 * C279 + C101 * C296) *
                  C1019 +
              (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
               C115 * C269 + C103 * C282) *
                  C1026 +
              (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
               C115 * C285 + C103 * C299) *
                  C1020 -
              (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
               C113 * C1031 + C101 * C1037) *
                  C1027 -
              (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
               C113 * C1040 + C101 * C1049) *
                  C1021 +
              (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
               C115 * C1034 + C103 * C1043) *
                  C1028 +
              (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
               C115 * C1046 + C103 * C1052) *
                  C1022) *
             C31357 * C31369 * C31143 * C31189 +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C953 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C947 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C954 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C948 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C955 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31476) *
                  C31357 * C31369 * C31143 * C31514 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C954 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C947 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C953) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C948 -
               (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                C113 * C1165 + C101 * C1174) *
                   C955 -
               (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                C113 * C1177 + C101 * C1192) *
                   C31476) *
                  C31357 * C31369 * C31143 * C31503 +
              ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                C115 * C424 + C103 * C439) *
                   C953 +
               (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                C115 * C442 + C103 * C454) *
                   C947 -
               (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
                C113 * C1168 + C101 * C1180) *
                   C954 -
               (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
                C113 * C1183 + C101 * C1195) *
                   C948 +
               (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
                C115 * C1171 + C103 * C1186) *
                   C955 +
               (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
                C115 * C1189 + C103 * C1198) *
                   C31476) *
                  C31357 * C31369 * C31143 * C31479) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31171) *
                   C31357 * C31369 * C31510 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31171 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31357 * C31369 * C31497 +
               ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31171) *
                   C31357 * C31369 * C31470) *
                  C1681 +
              (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C116 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C31171) *
                   C31357 * C31369 * C31497 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C31171 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C116) *
                   C31357 * C31369 * C31510 -
               ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                 C113 * C431 + C101 * C448) *
                    C31171 +
                (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                 C113 * C418 + C101 * C428) *
                    C116) *
                   C31357 * C31369 * C31470) *
                  C1682 +
              (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                 C115 * C424 + C103 * C439) *
                    C116 +
                (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                 C115 * C442 + C103 * C454) *
                    C31171) *
                   C31357 * C31369 * C31510 -
               ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
                 C113 * C441 + C101 * C453) *
                    C31171 +
                (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
                 C113 * C423 + C101 * C438) *
                    C116) *
                   C31357 * C31369 * C31497 +
               ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
                 C115 * C426 + C103 * C445) *
                    C116 +
                (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
                 C115 * C446 + C103 * C456) *
                    C31171) *
                   C31357 * C31369 * C31470) *
                  C31479) +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C261 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31513 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C262 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31501 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C263 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31476) *
                  C31357 * C31369 * C31143 * C1681 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C262 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C31513 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C261) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C31501 -
               (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                C113 * C1165 + C101 * C1174) *
                   C263 -
               (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                C113 * C1177 + C101 * C1192) *
                   C31476) *
                  C31357 * C31369 * C31143 * C1682 +
              ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                C115 * C424 + C103 * C439) *
                   C261 +
               (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                C115 * C442 + C103 * C454) *
                   C31513 -
               (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
                C113 * C1168 + C101 * C1180) *
                   C262 -
               (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
                C113 * C1183 + C101 * C1195) *
                   C31501 +
               (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
                C115 * C1171 + C103 * C1186) *
                   C263 +
               (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
                C115 * C1189 + C103 * C1198) *
                   C31476) *
                  C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C113 * C117 + C101 * C124 + C114 * C118 +
                                C102 * C125 + C115 * C119 + C103 * C126) *
                                   C116 +
                               (C113 * C127 + C101 * C138 + C114 * C128 +
                                C102 * C139 + C115 * C129 + C103 * C140) *
                                   C31171) *
                                  C31357 * C31369 * C31143 * C1856 -
                              ((C115 * C431 + C103 * C448 + C114 * C430 +
                                C102 * C447 + C113 * C433 + C101 * C450) *
                                   C31171 +
                               (C115 * C418 + C103 * C428 + C114 * C417 +
                                C102 * C427 + C113 * C420 + C101 * C434) *
                                   C116) *
                                  C31357 * C31369 * C31143 * C1857 +
                              ((C113 * C422 + C101 * C437 + C114 * C423 +
                                C102 * C438 + C115 * C424 + C103 * C439) *
                                   C116 +
                               (C113 * C440 + C101 * C452 + C114 * C441 +
                                C102 * C453 + C115 * C442 + C103 * C454) *
                                   C31171) *
                                  C31357 * C31369 * C31143 * C1858 -
                              ((C115 * C1867 + C103 * C1879 + C114 * C1868 +
                                C102 * C1880 + C113 * C1869 + C101 * C1881) *
                                   C31171 +
                               (C115 * C1861 + C103 * C1870 + C114 * C1862 +
                                C102 * C1871 + C113 * C1863 + C101 * C1872) *
                                   C116) *
                                  C31357 * C31369 * C31143 * C1859 +
                              ((C113 * C1864 + C101 * C1873 + C114 * C1865 +
                                C102 * C1874 + C115 * C1866 + C103 * C1875) *
                                   C116 +
                               (C113 * C1876 + C101 * C1882 + C114 * C1877 +
                                C102 * C1883 + C115 * C1878 + C103 * C1884) *
                                   C31171) *
                                  C31357 * C31369 * C31143 * C1860)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C258 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C31514 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            ((C4585 * C818 + C31123 * C823) * C116 +
             (C4585 * C826 + C31123 * C833) * C31171) *
                C4583 +
            ((C4585 * C1164 + C31123 * C1173) * C116 +
             (C4585 * C1176 + C31123 * C1191) * C31171) *
                C4584) *
               C31369 * C259 -
           (((C4585 * C1177 + C31123 * C1192) * C31171 +
             (C4585 * C1165 + C31123 * C1174) * C116) *
                C4584 +
            ((C4585 * C825 + C31123 * C832) * C31171 +
             (C4585 * C817 + C31123 * C822) * C116) *
                C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C258 -
           (((C4585 * C1175 + C31123 * C1190) * C31171 +
             (C4585 * C1163 + C31123 * C1172) * C116) *
                C4584 +
            ((C4585 * C827 + C31123 * C834) * C31171 +
             (C4585 * C819 + C31123 * C824) * C116) *
                C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C31503 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            ((C4585 * C1168 + C31123 * C1180) * C116 +
             (C4585 * C1183 + C31123 * C1195) * C31171) *
                C4583 +
            ((C4585 * C1169 + C31123 * C1184) * C116 +
             (C4585 * C1187 + C31123 * C1196) * C31171) *
                C4584) *
               C31369 * C258 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            C5439 * C955 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C31514 +
          ((C5239 * C954 -
            ((C4585 * C433 + C31123 * C450) * C947 +
             (C4585 * C420 + C31123 * C434) * C953) +
            C5240 * C948 - C5241 * C955 - C5242 * C31476) *
               C4582 +
           (C5241 * C954 - (C5240 * C947 + C5239 * C953) + C5242 * C948 -
            C5581 * C955 - C5582 * C31476) *
               C4583 +
           (C5581 * C954 - (C5242 * C947 + C5241 * C953) + C5582 * C948 -
            (C4585 * C5552 + C31123 * C5555) * C955 -
            (C4585 * C5556 + C31123 * C5561) * C31476) *
               C4584) *
              C31369 * C31143 * C31503 +
          (((C4585 * C422 + C31123 * C437) * C953 +
            (C4585 * C440 + C31123 * C452) * C947 - C5583 * C954 -
            C5584 * C948 + C5585 * C955 + C5586 * C31476) *
               C4582 +
           (C5583 * C953 + C5584 * C947 - C5585 * C954 - C5586 * C948 +
            C5587 * C955 + C5588 * C31476) *
               C4583 +
           (C5585 * C953 + C5586 * C947 - C5587 * C954 - C5588 * C948 +
            (C4585 * C5554 + C31123 * C5559) * C955 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31510 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C1681 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31497 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31510 -
           ((C5250 * C31171 + C5249 * C116) * C4584 +
            (C5248 * C31171 + C5247 * C116) * C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C1682 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C31510 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            C5439 * C263 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C1681 +
          ((C5239 * C262 -
            ((C4585 * C433 + C31123 * C450) * C31513 +
             (C4585 * C420 + C31123 * C434) * C261) +
            C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
               C4582 +
           (C5241 * C262 - (C5240 * C31513 + C5239 * C261) + C5242 * C31501 -
            C5581 * C263 - C5582 * C31476) *
               C4583 +
           (C5581 * C262 - (C5242 * C31513 + C5241 * C261) + C5582 * C31501 -
            C5959 * C263 - C5960 * C31476) *
               C4584) *
              C31369 * C31143 * C1682 +
          (((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C4582 +
           (C5583 * C261 + C5584 * C31513 - C5585 * C262 - C5586 * C31501 +
            C5587 * C263 + C5588 * C31476) *
               C4583 +
           (C5585 * C261 + C5586 * C31513 - C5587 * C262 - C5588 * C31501 +
            (C4585 * C5554 + C31123 * C5559) * C263 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C4585 * C117 + C31123 * C124) * C116 +
                                (C4585 * C127 + C31123 * C138) * C31171) *
                                   C4582 +
                               (C4733 * C116 + C4734 * C31171) * C4583 +
                               (C4735 * C116 + C4736 * C31171) * C4584) *
                                  C31369 * C31143 * C1856 -
                              ((C5242 * C31171 + C5241 * C116) * C4584 +
                               (C5240 * C31171 + C5239 * C116) * C4583 +
                               ((C4585 * C433 + C31123 * C450) * C31171 +
                                (C4585 * C420 + C31123 * C434) * C116) *
                                   C4582) *
                                  C31369 * C31143 * C1857 +
                              (((C4585 * C422 + C31123 * C437) * C116 +
                                (C4585 * C440 + C31123 * C452) * C31171) *
                                   C4582 +
                               (C5583 * C116 + C5584 * C31171) * C4583 +
                               (C5585 * C116 + C5586 * C31171) * C4584) *
                                  C31369 * C31143 * C1858 -
                              (((C4585 * C6245 + C31123 * C6251) * C31171 +
                                (C4585 * C6242 + C31123 * C6246) * C116) *
                                   C4584 +
                               ((C4585 * C2245 + C31123 * C2248) * C31171 +
                                (C4585 * C2239 + C31123 * C2242) * C116) *
                                   C4583 +
                               ((C4585 * C1869 + C31123 * C1881) * C31171 +
                                (C4585 * C1863 + C31123 * C1872) * C116) *
                                   C4582) *
                                  C31369 * C31143 * C1859 +
                              (((C4585 * C1864 + C31123 * C1873) * C116 +
                                (C4585 * C1876 + C31123 * C1882) * C31171) *
                                   C4582 +
                               ((C4585 * C6243 + C31123 * C6247) * C116 +
                                (C4585 * C6248 + C31123 * C6252) * C31171) *
                                   C4583 +
                               ((C4585 * C6244 + C31123 * C6249) * C116 +
                                (C4585 * C6250 + C31123 * C6253) * C31171) *
                                   C4584) *
                                  C31369 * C31143 * C1860)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C116 +
            (C4585 * C433 + C31123 * C450) * C31171) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C116 +
            (C4585 * C440 + C31123 * C452) * C31171) *
               C31357 * C8928) *
              C107 -
          (((C4585 * C441 + C31123 * C453) * C31171 +
            (C4585 * C423 + C31123 * C438) * C116) *
               C31357 * C8928 +
           ((C4585 * C430 + C31123 * C447) * C31171 +
            (C4585 * C417 + C31123 * C427) * C116) *
               C31357 * C8927 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C31357 * C8926) *
              C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C116 +
            (C4585 * C431 + C31123 * C448) * C31171) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C116 +
            (C4585 * C442 + C31123 * C454) * C31171) *
               C31357 * C8928) *
              C109 -
          (((C4585 * C443 + C31123 * C455) * C31171 +
            (C4585 * C425 + C31123 * C444) * C116) *
               C31357 * C8928 +
           ((C4585 * C432 + C31123 * C449) * C31171 +
            (C4585 * C419 + C31123 * C429) * C116) *
               C31357 * C8927 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C31357 * C8926) *
              C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C31357 * C8926 +
           ((C4585 * C421 + C31123 * C436) * C116 +
            (C4585 * C435 + C31123 * C451) * C31171) *
               C31357 * C8927 +
           ((C4585 * C426 + C31123 * C445) * C116 +
            (C4585 * C446 + C31123 * C456) * C31171) *
               C31357 * C8928) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C261 +
            (C4585 * C433 + C31123 * C450) * C31513 - C5239 * C262 -
            C5240 * C31501 + C5241 * C263 + C5242 * C31476) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C31357 * C8928) *
              C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C262 -
            ((C4585 * C430 + C31123 * C447) * C31513 +
             (C4585 * C417 + C31123 * C427) * C261) +
            C5244 * C31501 - C5245 * C263 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C262 -
            ((C4585 * C441 + C31123 * C453) * C31513 +
             (C4585 * C423 + C31123 * C438) * C261) +
            C6414 * C31501 - C6415 * C263 - C6416 * C31476) *
               C31357 * C8928) *
              C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C261 +
            (C4585 * C431 + C31123 * C448) * C31513 - C5247 * C262 -
            C5248 * C31501 + C5249 * C263 + C5250 * C31476) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C261 +
            (C4585 * C442 + C31123 * C454) * C31513 -
            (C4585 * C1166 + C31123 * C1178) * C262 -
            (C4585 * C1181 + C31123 * C1193) * C31501 +
            (C4585 * C1171 + C31123 * C1186) * C263 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C258 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C259 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C31470) *
              C31514 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 +
            (C9216 + C9217) * C31357 * C8928) *
               C259 -
           ((C9218 + C9219) * C31357 * C8928 +
            (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C258 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C31470) *
              C31503 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 +
            ((C4585 * C1864 + C31123 * C1873) * C116 +
             (C4585 * C1876 + C31123 * C1882) * C31171) *
                C31357 * C8928) *
               C258 -
           (((C4585 * C1877 + C31123 * C1883) * C31171 +
             (C4585 * C1865 + C31123 * C1874) * C116) *
                C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C259 +
           (C9227 * C8926 + (C9221 + C9220) * C31357 * C8927 +
            ((C4585 * C1866 + C31123 * C1875) * C116 +
             (C4585 * C1878 + C31123 * C1884) * C31171) *
                C31357 * C8928) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C31357 * C8926 +
           (C9186 * C953 + C9187 * C947 - C5239 * C954 - C5240 * C948 +
            C5241 * C955 + C5242 * C31476) *
               C31357 * C8927 +
           (C9188 * C953 + C9189 * C947 - C5583 * C954 - C5584 * C948 +
            C5585 * C955 + C5586 * C31476) *
               C31357 * C8928) *
              C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C954 - (C9192 * C947 + C9193 * C953) + C5244 * C948 -
            C5245 * C955 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C954 - (C9190 * C947 + C9191 * C953) + C6414 * C948 -
            C6415 * C955 - C6416 * C31476) *
               C31357 * C8928) *
              C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C31357 * C8926 +
           (C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
            C5249 * C955 + C5250 * C31476) *
               C31357 * C8927 +
           (C9196 * C953 + C9197 * C947 - C9612 * C954 - C9613 * C948 +
            (C4585 * C1171 + C31123 * C1186) * C955 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C31357 * C8926 +
          (C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
           C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
           C5959 * C1028 + C5960 * C1022) *
              C31357 * C8927 +
          (C9188 * C1024 + C9189 * C1018 - C5583 * C1025 - C5584 * C1019 +
           C5585 * C1026 + C5586 * C1020 - C5587 * C1027 - C5588 * C1021 +
           (C4585 * C5554 + C31123 * C5559) * C1028 +
           (C4585 * C5560 + C31123 * C5563) * C1022) *
              C31357 * C8928) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C31357 * C8926 +
           (C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C31357 * C8927 +
           C9921 * C8928) *
              C31143 * C31514 +
          ((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C31357 * C8926 +
           (C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C31357 * C8927 +
           (C9910 - (C9911 + C9912) + C9913 - C9914 - C9915) * C31357 * C8928) *
              C31143 * C31503 +
          (C9921 * C8926 +
           (C9912 + C9911 - C9910 - C9913 + C9914 + C9915) * C31357 * C8927 +
           ((C4585 * C1864 + C31123 * C1873) * C953 +
            (C4585 * C1876 + C31123 * C1882) * C947 -
            (C4585 * C6243 + C31123 * C6247) * C954 -
            (C4585 * C6248 + C31123 * C6252) * C948 +
            (C4585 * C6244 + C31123 * C6249) * C955 +
            (C4585 * C6250 + C31123 * C6253) * C31476) *
               C31357 * C8928) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C31510 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C31497 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C31470) *
              C1681 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 +
            (C9216 + C9217) * C31357 * C8928) *
               C31497 -
           ((C9218 + C9219) * C31357 * C8928 +
            (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C31510 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C31470) *
              C1682 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 +
            ((C4585 * C1864 + C31123 * C1873) * C116 +
             (C4585 * C1876 + C31123 * C1882) * C31171) *
                C31357 * C8928) *
               C31510 -
           (((C4585 * C1877 + C31123 * C1883) * C31171 +
             (C4585 * C1865 + C31123 * C1874) * C116) *
                C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C31497 +
           (C9227 * C8926 + (C9221 + C9220) * C31357 * C8927 +
            ((C4585 * C1866 + C31123 * C1875) * C116 +
             (C4585 * C1878 + C31123 * C1884) * C31171) *
                C31357 * C8928) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C31357 * C8926 +
           (C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C31357 *
               C8927 +
           C10535 * C8928) *
              C31143 * C1681 +
          ((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C31357 *
               C8926 +
           (C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C31357 *
               C8927 +
           (C10524 - (C10525 + C10526) + C10527 - C10528 - C10529) * C31357 *
               C8928) *
              C31143 * C1682 +
          (C10535 * C8926 +
           (C10526 + C10525 - C10524 - C10527 + C10528 + C10529) * C31357 *
               C8927 +
           ((C4585 * C1864 + C31123 * C1873) * C261 +
            (C4585 * C1876 + C31123 * C1882) * C31513 -
            (C4585 * C6243 + C31123 * C6247) * C262 -
            (C4585 * C6248 + C31123 * C6252) * C31501 +
            (C4585 * C6244 + C31123 * C6249) * C263 +
            (C4585 * C6250 + C31123 * C6253) * C31476) *
               C31357 * C8928) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C31357 * C8926 +
           (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
              C31143 * C1856 -
          (C10615 * C8928 + (C9207 + C9206) * C31357 * C8927 +
           (C9205 + C9204) * C31357 * C8926) *
              C31143 * C1857 +
          (C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 + C10625 * C8928) *
              C31143 * C1858 -
          ((C10622 + C10623) * C31357 * C8928 +
           (C10621 + C10620) * C31357 * C8927 + C10615 * C8926) *
              C31143 * C1859 +
          (C10625 * C8926 + (C10623 + C10622) * C31357 * C8927 +
           ((C4585 * C10598 + C31123 * C10601) * C116 +
            (C4585 * C10602 + C31123 * C10604) * C31171) *
               C31357 * C8928) *
              C31143 * C1860)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31171) *
                   C31357 * C31369 * C557 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31171 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31357 * C31369 * C558 +
               ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31171) *
                   C31357 * C31369 * C559 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31171 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31357 * C31369 * C31480) *
                  C31448 +
              (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C116 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C31171) *
                   C31357 * C31369 * C558 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C31171 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C116) *
                   C31357 * C31369 * C557 -
               ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                 C113 * C431 + C101 * C448) *
                    C31171 +
                (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                 C113 * C418 + C101 * C428) *
                    C116) *
                   C31357 * C31369 * C559 +
               ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                 C115 * C667 + C103 * C668) *
                    C116 +
                (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                 C115 * C669 + C103 * C670) *
                    C31171) *
                   C31357 * C31369 * C31480) *
                  C31276) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C953 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C947 -
                (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                 C113 * C266 + C101 * C276) *
                    C954 -
                (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                 C113 * C279 + C101 * C296) *
                    C948 +
                (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                 C115 * C269 + C103 * C282) *
                    C955 +
                (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                 C115 * C285 + C103 * C299) *
                    C31476) *
                   C31357 * C31369 * C31433 +
               ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                 C115 * C270 + C103 * C286) *
                    C954 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C947 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C953) +
                (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                 C115 * C287 + C103 * C300) *
                    C948 -
                (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                 C113 * C268 + C101 * C281) *
                    C955 -
                (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                 C113 * C284 + C101 * C298) *
                    C31476) *
                   C31357 * C31369 * C31153) *
                  C31448 +
              (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C954 -
                ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                  C113 * C433 + C101 * C450) *
                     C947 +
                 (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                  C113 * C420 + C101 * C434) *
                     C953) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C948 -
                (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                 C113 * C1165 + C101 * C1174) *
                    C955 -
                (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                 C113 * C1177 + C101 * C1192) *
                    C31476) *
                   C31357 * C31369 * C31433 +
               ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C953 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C947 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C954 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C948 +
                (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
                 C115 * C1457 + C103 * C1458) *
                    C955 +
                (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
                 C115 * C1459 + C103 * C1460) *
                    C31476) *
                   C31357 * C31369 * C31153) *
                  C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C31433 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C31153) *
              C2133 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C31153 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C31433) *
              C2134 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C31433 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C31153) *
              C2135 +
          (((C113 * C1862 + C101 * C1871 + C114 * C1861 + C102 * C1870 +
             C115 * C2137 + C103 * C2138) *
                C116 +
            (C113 * C1868 + C101 * C1880 + C114 * C1867 + C102 * C1879 +
             C115 * C2139 + C103 * C2140) *
                C31171) *
               C31357 * C31369 * C31153 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31171 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C116) *
               C31357 * C31369 * C31433) *
              C31492)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C557 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C558 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C559 -
           ((C4970 * C31171 + C4969 * C116) * C4584 +
            (C4968 * C31171 + C4967 * C116) * C4583 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C4582) *
               C31369 * C31480) *
              C31448 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            ((C4585 * C818 + C31123 * C823) * C116 +
             (C4585 * C826 + C31123 * C833) * C31171) *
                C4583 +
            ((C4585 * C1164 + C31123 * C1173) * C116 +
             (C4585 * C1176 + C31123 * C1191) * C31171) *
                C4584) *
               C31369 * C558 -
           (((C4585 * C1177 + C31123 * C1192) * C31171 +
             (C4585 * C1165 + C31123 * C1174) * C116) *
                C4584 +
            ((C4585 * C825 + C31123 * C832) * C31171 +
             (C4585 * C817 + C31123 * C822) * C116) *
                C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C557 -
           (((C4585 * C1175 + C31123 * C1190) * C31171 +
             (C4585 * C1163 + C31123 * C1172) * C116) *
                C4584 +
            ((C4585 * C827 + C31123 * C834) * C31171 +
             (C4585 * C819 + C31123 * C824) * C116) *
                C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C559 +
           (((C4585 * C419 + C31123 * C429) * C116 +
             (C4585 * C432 + C31123 * C449) * C31171) *
                C4582 +
            ((C4585 * C820 + C31123 * C828) * C116 +
             (C4585 * C829 + C31123 * C835) * C31171) *
                C4583 +
            ((C4585 * C1457 + C31123 * C1458) * C116 +
             (C4585 * C1459 + C31123 * C1460) * C31171) *
                C4584) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C4582 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C4583 +
            (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
             C5439 * C955 + C5440 * C31476) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C4582 +
            (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
             C4743 * C955 - C4744 * C31476) *
                C4583 +
            (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
             C5695 * C955 - C5696 * C31476) *
                C4584) *
               C31369 * C31153) *
              C31448 +
          (((C5239 * C954 -
             ((C4585 * C433 + C31123 * C450) * C947 +
              (C4585 * C420 + C31123 * C434) * C953) +
             C5240 * C948 - C5241 * C955 - C5242 * C31476) *
                C4582 +
            (C5241 * C954 - (C5240 * C947 + C5239 * C953) + C5242 * C948 -
             C5581 * C955 - C5582 * C31476) *
                C4583 +
            (C5581 * C954 - (C5242 * C947 + C5241 * C953) + C5582 * C948 -
             (C4585 * C5552 + C31123 * C5555) * C955 -
             (C4585 * C5556 + C31123 * C5561) * C31476) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C953 +
             (C4585 * C430 + C31123 * C447) * C947 - C5243 * C954 -
             C5244 * C948 + C5245 * C955 + C5246 * C31476) *
                C4582 +
            (C5243 * C953 + C5244 * C947 - C5245 * C954 - C5246 * C948 +
             C5851 * C955 + C5852 * C31476) *
                C4583 +
            (C5245 * C953 + C5246 * C947 - C5851 * C954 - C5852 * C948 +
             (C4585 * C5842 + C31123 * C5843) * C955 +
             (C4585 * C5844 + C31123 * C5845) * C31476) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31433 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31153) *
              C2133 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31153 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31433) *
              C2134 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C31433 -
           ((C6416 * C31171 + C6415 * C116) * C4584 +
            (C6414 * C31171 + C6413 * C116) * C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31153) *
              C2135 +
          ((((C4585 * C1862 + C31123 * C1871) * C116 +
             (C4585 * C1868 + C31123 * C1880) * C31171) *
                C4582 +
            ((C4585 * C2240 + C31123 * C2243) * C116 +
             (C4585 * C2246 + C31123 * C2249) * C31171) *
                C4583 +
            ((C4585 * C6514 + C31123 * C6515) * C116 +
             (C4585 * C6516 + C31123 * C6517) * C31171) *
                C4584) *
               C31369 * C31153 -
           (((C4585 * C6245 + C31123 * C6251) * C31171 +
             (C4585 * C6242 + C31123 * C6246) * C116) *
                C4584 +
            ((C4585 * C2245 + C31123 * C2248) * C31171 +
             (C4585 * C2239 + C31123 * C2242) * C116) *
                C4583 +
            ((C4585 * C1869 + C31123 * C1881) * C31171 +
             (C4585 * C1863 + C31123 * C1872) * C116) *
                C4582) *
               C31369 * C31433) *
              C31492)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C557 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C558 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C559 -
           ((C9436 + C9437) * C31357 * C8928 +
            (C9438 + C9439) * C31357 * C8927 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C31357 * C8926) *
               C31480) *
              C31448 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 +
            (C9216 + C9217) * C31357 * C8928) *
               C558 -
           ((C9218 + C9219) * C31357 * C8928 +
            (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C557 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C559 +
           ((C9439 + C9438) * C31357 * C8926 +
            (C9437 + C9436) * C31357 * C8927 +
            ((C4585 * C2137 + C31123 * C2138) * C116 +
             (C4585 * C2139 + C31123 * C2140) * C31171) *
                C31357 * C8928) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C31357 * C8926 +
            (C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C31357 * C8927 +
            C9921 * C8928) *
               C31433 +
           ((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C31357 * C8926 +
            (C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C31357 *
                C8927 +
            (C10172 - (C10173 + C10174) + C10175 - C10176 - C10177) * C31357 *
                C8928) *
               C31153) *
              C31448 +
          (((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C31357 * C8926 +
            (C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C31357 * C8927 +
            (C9910 - (C9911 + C9912) + C9913 - C9914 - C9915) * C31357 *
                C8928) *
               C31433 +
           ((C10168 + C10167 - C10166 - C10169 + C10170 + C10171) * C31357 *
                C8926 +
            (C10174 + C10173 - C10172 - C10175 + C10176 + C10177) * C31357 *
                C8927 +
            (C9198 * C953 + C9199 * C947 -
             (C4585 * C2240 + C31123 * C2243) * C954 -
             (C4585 * C2246 + C31123 * C2249) * C948 +
             (C4585 * C6514 + C31123 * C6515) * C955 +
             (C4585 * C6516 + C31123 * C6517) * C31476) *
                C31357 * C8928) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C31433 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C31153) *
              C2133 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 + C10905 * C8928) *
               C31153 -
           (C10615 * C8928 + (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C31433) *
              C2134 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 + C10625 * C8928) *
               C31433 -
           ((C10908 + C10909) * C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C31153) *
              C2135 +
          ((C10905 * C8926 + (C10909 + C10908) * C31357 * C8927 +
            ((C4585 * C10895 + C31123 * C10896) * C116 +
             (C4585 * C10897 + C31123 * C10898) * C31171) *
                C31357 * C8928) *
               C31153 -
           ((C10622 + C10623) * C31357 * C8928 +
            (C10621 + C10620) * C31357 * C8927 + C10615 * C8926) *
               C31433) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31171) *
              C31357 * C31369 * C107 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31171 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31357 * C31369 * C108 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31171) *
              C31357 * C31369 * C109 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31171 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31357 * C31369 * C110 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31171) *
              C31357 * C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C258 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C262 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31513 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C261) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31501 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C263 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C261 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31513 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C262 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31501 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C263 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C31510 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C31497 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C31470) *
              C1681 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C31497 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C31510 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C31470) *
              C1682 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C31510 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C31497 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31143 * C1681 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C262 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31513 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C261) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31501 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C263 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31476) *
              C31357 * C31369 * C31143 * C1682 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C261 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31513 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C262 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31501 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C263 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C31476) *
              C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31510 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C1681 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31497 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31510 -
           ((C5250 * C31171 + C5249 * C116) * C4584 +
            (C5248 * C31171 + C5247 * C116) * C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C1682 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C31510 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            C5439 * C263 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C1681 +
          ((C5239 * C262 -
            ((C4585 * C433 + C31123 * C450) * C31513 +
             (C4585 * C420 + C31123 * C434) * C261) +
            C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
               C4582 +
           (C5241 * C262 - (C5240 * C31513 + C5239 * C261) + C5242 * C31501 -
            C5581 * C263 - C5582 * C31476) *
               C4583 +
           (C5581 * C262 - (C5242 * C31513 + C5241 * C261) + C5582 * C31501 -
            C5959 * C263 - C5960 * C31476) *
               C4584) *
              C31369 * C31143 * C1682 +
          (((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C4582 +
           (C5583 * C261 + C5584 * C31513 - C5585 * C262 - C5586 * C31501 +
            C5587 * C263 + C5588 * C31476) *
               C4583 +
           (C5585 * C261 + C5586 * C31513 - C5587 * C262 - C5588 * C31501 +
            (C4585 * C5554 + C31123 * C5559) * C263 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C116 +
            (C4585 * C433 + C31123 * C450) * C31171) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C116 +
            (C4585 * C440 + C31123 * C452) * C31171) *
               C31357 * C8928) *
              C107 -
          (((C4585 * C441 + C31123 * C453) * C31171 +
            (C4585 * C423 + C31123 * C438) * C116) *
               C31357 * C8928 +
           ((C4585 * C430 + C31123 * C447) * C31171 +
            (C4585 * C417 + C31123 * C427) * C116) *
               C31357 * C8927 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C31357 * C8926) *
              C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C116 +
            (C4585 * C431 + C31123 * C448) * C31171) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C116 +
            (C4585 * C442 + C31123 * C454) * C31171) *
               C31357 * C8928) *
              C109 -
          (((C4585 * C443 + C31123 * C455) * C31171 +
            (C4585 * C425 + C31123 * C444) * C116) *
               C31357 * C8928 +
           ((C4585 * C432 + C31123 * C449) * C31171 +
            (C4585 * C419 + C31123 * C429) * C116) *
               C31357 * C8927 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C31357 * C8926) *
              C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C31357 * C8926 +
           ((C4585 * C421 + C31123 * C436) * C116 +
            (C4585 * C435 + C31123 * C451) * C31171) *
               C31357 * C8927 +
           ((C4585 * C426 + C31123 * C445) * C116 +
            (C4585 * C446 + C31123 * C456) * C31171) *
               C31357 * C8928) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C261 +
            (C4585 * C433 + C31123 * C450) * C31513 - C5239 * C262 -
            C5240 * C31501 + C5241 * C263 + C5242 * C31476) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C31357 * C8928) *
              C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C262 -
            ((C4585 * C430 + C31123 * C447) * C31513 +
             (C4585 * C417 + C31123 * C427) * C261) +
            C5244 * C31501 - C5245 * C263 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C262 -
            ((C4585 * C441 + C31123 * C453) * C31513 +
             (C4585 * C423 + C31123 * C438) * C261) +
            C6414 * C31501 - C6415 * C263 - C6416 * C31476) *
               C31357 * C8928) *
              C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C261 +
            (C4585 * C431 + C31123 * C448) * C31513 - C5247 * C262 -
            C5248 * C31501 + C5249 * C263 + C5250 * C31476) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C261 +
            (C4585 * C442 + C31123 * C454) * C31513 -
            (C4585 * C1166 + C31123 * C1178) * C262 -
            (C4585 * C1181 + C31123 * C1193) * C31501 +
            (C4585 * C1171 + C31123 * C1186) * C263 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C31357 * C8926 +
           (C9186 * C953 + C9187 * C947 - C5239 * C954 - C5240 * C948 +
            C5241 * C955 + C5242 * C31476) *
               C31357 * C8927 +
           (C9188 * C953 + C9189 * C947 - C5583 * C954 - C5584 * C948 +
            C5585 * C955 + C5586 * C31476) *
               C31357 * C8928) *
              C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C954 - (C9192 * C947 + C9193 * C953) + C5244 * C948 -
            C5245 * C955 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C954 - (C9190 * C947 + C9191 * C953) + C6414 * C948 -
            C6415 * C955 - C6416 * C31476) *
               C31357 * C8928) *
              C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C31357 * C8926 +
           (C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
            C5249 * C955 + C5250 * C31476) *
               C31357 * C8927 +
           (C9196 * C953 + C9197 * C947 - C9612 * C954 - C9613 * C948 +
            (C4585 * C1171 + C31123 * C1186) * C955 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C31357 * C8926 +
          (C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
           C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
           C5959 * C1028 + C5960 * C1022) *
              C31357 * C8927 +
          (C9188 * C1024 + C9189 * C1018 - C5583 * C1025 - C5584 * C1019 +
           C5585 * C1026 + C5586 * C1020 - C5587 * C1027 - C5588 * C1021 +
           (C4585 * C5554 + C31123 * C5559) * C1028 +
           (C4585 * C5560 + C31123 * C5563) * C1022) *
              C31357 * C8928) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C31510 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C31497 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C31470) *
              C1681 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 +
            (C9216 + C9217) * C31357 * C8928) *
               C31497 -
           ((C9218 + C9219) * C31357 * C8928 +
            (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C31510 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C31470) *
              C1682 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 +
            ((C4585 * C1864 + C31123 * C1873) * C116 +
             (C4585 * C1876 + C31123 * C1882) * C31171) *
                C31357 * C8928) *
               C31510 -
           (((C4585 * C1877 + C31123 * C1883) * C31171 +
             (C4585 * C1865 + C31123 * C1874) * C116) *
                C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C31497 +
           (C9227 * C8926 + (C9221 + C9220) * C31357 * C8927 +
            ((C4585 * C1866 + C31123 * C1875) * C116 +
             (C4585 * C1878 + C31123 * C1884) * C31171) *
                C31357 * C8928) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C31357 * C8926 +
           (C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C31357 *
               C8927 +
           C10535 * C8928) *
              C31143 * C1681 +
          ((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C31357 *
               C8926 +
           (C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C31357 *
               C8927 +
           (C10524 - (C10525 + C10526) + C10527 - C10528 - C10529) * C31357 *
               C8928) *
              C31143 * C1682 +
          (C10535 * C8926 +
           (C10526 + C10525 - C10524 - C10527 + C10528 + C10529) * C31357 *
               C8927 +
           ((C4585 * C1864 + C31123 * C1873) * C261 +
            (C4585 * C1876 + C31123 * C1882) * C31513 -
            (C4585 * C6243 + C31123 * C6247) * C262 -
            (C4585 * C6248 + C31123 * C6252) * C31501 +
            (C4585 * C6244 + C31123 * C6249) * C263 +
            (C4585 * C6250 + C31123 * C6253) * C31476) *
               C31357 * C8928) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C31148 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C31156 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C4583 +
            (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
                C4584) *
               C31369 * C2726) *
              C3120 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
                C4584) *
               C31369 * C31148 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 - C5851 * C562 - C5852 * C31234) *
                C4584) *
               C31369 * C31156 +
           ((C5247 * C562 -
             ((C4585 * C431 + C31123 * C448) * C31447 +
              (C4585 * C418 + C31123 * C428) * C561) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C562 - (C5248 * C31447 + C5247 * C561) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C562 -
             (C5250 * C31447 + C5249 * C561) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C561 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31447 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C562 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C2726) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C562 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C31447 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C561) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C9586 + C9587 - C9588 - C9589) * C31357 * C8927 + C10796 * C8928) *
               C31148 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C9594 - (C9595 + C9596) + C9597) * C31357 * C8927 +
            C10797 * C8928) *
               C31156 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C31357 * C8926 +
            (C9602 + C9603 - C9604 - C9605) * C31357 * C8927 +
            (C9606 + C9607 - C9614 - C9615) * C31357 * C8928) *
               C2726) *
              C3120 +
          (((C9588 - (C9587 + C9586) + C9589) * C31357 * C8926 +
            (C9592 - (C9591 + C9590) + C9593) * C31357 * C8927 +
            C11025 * C8928) *
               C31148 +
           ((C9596 + C9595 - C9594 - C9597) * C31357 * C8926 +
            (C9600 + C9599 - C9598 - C9601) * C31357 * C8927 +
            (C10782 + C10783 - C10794 - C10795) * C31357 * C8928) *
               C31156 +
           ((C9604 - (C9603 + C9602) + C9605) * C31357 * C8926 +
            (C9614 - (C9607 + C9606) + C9615) * C31357 * C8927 +
            ((C4585 * C2241 + C31123 * C2244) * C562 -
             (C9202 * C31447 + C9203 * C561) +
             (C4585 * C2247 + C31123 * C2250) * C31234) *
                C31357 * C8928) *
               C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31272 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 - C5851 * C562 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31279 +
          ((((C4585 * C422 + C31123 * C437) * C561 +
             (C4585 * C440 + C31123 * C452) * C31447 - C5583 * C562 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C561 + C5584 * C31447 - C5585 * C562 - C5586 * C31234) *
                C4583 +
            (C5585 * C561 + C5586 * C31447 - C5587 * C562 - C5588 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C6413 * C562 -
             ((C4585 * C441 + C31123 * C453) * C31447 +
              (C4585 * C423 + C31123 * C438) * C561) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C562 - (C6414 * C31447 + C6413 * C561) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C562 -
             (C6416 * C31447 + C6415 * C561) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31272 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31279 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C561 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31447 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C562 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C562 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C31447 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C561) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C9586 + C9587 - C9588 - C9589) * C31357 * C8927 + C10796 * C8928) *
               C2459 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C9594 - (C9595 + C9596) + C9597) * C31357 * C8927 +
            C10797 * C8928) *
               C31153) *
              C31272 +
          (((C9588 - (C9587 + C9586) + C9589) * C31357 * C8926 +
            (C9592 - (C9591 + C9590) + C9593) * C31357 * C8927 +
            C11025 * C8928) *
               C2459 +
           ((C9596 + C9595 - C9594 - C9597) * C31357 * C8926 +
            (C9600 + C9599 - C9598 - C9601) * C31357 * C8927 +
            (C10782 + C10783 - C10794 - C10795) * C31357 * C8928) *
               C31153) *
              C31279 +
          ((C10796 * C8926 +
            (C10780 + C10779 - C10778 - C10781) * C31357 * C8927 +
            (C11013 + C11014 - C11023 - C11024) * C31357 * C8928) *
               C2459 +
           (C10797 * C8926 +
            (C10794 - (C10783 + C10782) + C10795) * C31357 * C8927 +
            ((C4585 * C10771 + C31123 * C10772) * C562 -
             (C10906 * C31447 + C10907 * C561) +
             (C4585 * C10773 + C31123 * C10774) * C31234) *
                C31357 * C8928) *
               C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31171) *
                   C31357 * C31369 * C31519 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31171 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31357 * C31369 * C31512 +
               ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31171) *
                   C31357 * C31369 * C31499 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31171 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31357 * C31369 * C31480) *
                  C3120 +
              (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C116 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C31171) *
                   C31357 * C31369 * C31512 -
               ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                 C113 * C433 + C101 * C450) *
                    C31171 +
                (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                 C113 * C420 + C101 * C434) *
                    C116) *
                   C31357 * C31369 * C31519 -
               ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                 C113 * C431 + C101 * C448) *
                    C31171 +
                (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                 C113 * C418 + C101 * C428) *
                    C116) *
                   C31357 * C31369 * C31499 +
               ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                 C115 * C667 + C103 * C668) *
                    C116 +
                (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                 C115 * C669 + C103 * C670) *
                    C31171) *
                   C31357 * C31369 * C31480) *
                  C31276) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C261 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31513 -
                (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                 C113 * C266 + C101 * C276) *
                    C262 -
                (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                 C113 * C279 + C101 * C296) *
                    C31501 +
                (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                 C115 * C269 + C103 * C282) *
                    C263 +
                (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                 C115 * C285 + C103 * C299) *
                    C31476) *
                   C31357 * C31369 * C2459 +
               ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                 C115 * C270 + C103 * C286) *
                    C262 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31513 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C261) +
                (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                 C115 * C287 + C103 * C300) *
                    C31501 -
                (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                 C113 * C268 + C101 * C281) *
                    C263 -
                (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                 C113 * C284 + C101 * C298) *
                    C31476) *
                   C31357 * C31369 * C31153) *
                  C3120 +
              (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C262 -
                ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                  C113 * C433 + C101 * C450) *
                     C31513 +
                 (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                  C113 * C420 + C101 * C434) *
                     C261) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31501 -
                (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                 C113 * C1165 + C101 * C1174) *
                    C263 -
                (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                 C113 * C1177 + C101 * C1192) *
                    C31476) *
                   C31357 * C31369 * C2459 +
               ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                 C115 * C419 + C103 * C429) *
                    C261 +
                (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                 C115 * C432 + C103 * C449) *
                    C31513 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C262 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31501 +
                (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
                 C115 * C1457 + C103 * C1458) *
                    C263 +
                (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
                 C115 * C1459 + C103 * C1460) *
                    C31476) *
                   C31357 * C31369 * C31153) *
                  C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C2459 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C31153) *
              C31521 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C31153 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C2459) *
              C31518 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C2459 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C31153) *
              C31509 +
          (((C113 * C1862 + C101 * C1871 + C114 * C1861 + C102 * C1870 +
             C115 * C2137 + C103 * C2138) *
                C116 +
            (C113 * C1868 + C101 * C1880 + C114 * C1867 + C102 * C1879 +
             C115 * C2139 + C103 * C2140) *
                C31171) *
               C31357 * C31369 * C31153 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31171 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C116) *
               C31357 * C31369 * C2459) *
              C31492)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31519 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31512 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31499 -
           ((C4970 * C31171 + C4969 * C116) * C4584 +
            (C4968 * C31171 + C4967 * C116) * C4583 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C4582) *
               C31369 * C31480) *
              C3120 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31512 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31519 -
           ((C5250 * C31171 + C5249 * C116) * C4584 +
            (C5248 * C31171 + C5247 * C116) * C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31499 +
           (((C4585 * C419 + C31123 * C429) * C116 +
             (C4585 * C432 + C31123 * C449) * C31171) *
                C4582 +
            ((C4585 * C820 + C31123 * C828) * C116 +
             (C4585 * C829 + C31123 * C835) * C31171) *
                C4583 +
            ((C4585 * C1457 + C31123 * C1458) * C116 +
             (C4585 * C1459 + C31123 * C1460) * C31171) *
                C4584) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C4582 +
            (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
             C4737 * C263 + C4738 * C31476) *
                C4583 +
            (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
             C5439 * C263 + C5440 * C31476) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C262 -
             ((C4585 * C128 + C31123 * C139) * C31513 +
              (C4585 * C118 + C31123 * C125) * C261) +
             C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                C4582 +
            (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
             C4743 * C263 - C4744 * C31476) *
                C4583 +
            (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
             C5695 * C263 - C5696 * C31476) *
                C4584) *
               C31369 * C31153) *
              C3120 +
          (((C5239 * C262 -
             ((C4585 * C433 + C31123 * C450) * C31513 +
              (C4585 * C420 + C31123 * C434) * C261) +
             C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
                C4582 +
            (C5241 * C262 - (C5240 * C31513 + C5239 * C261) + C5242 * C31501 -
             C5581 * C263 - C5582 * C31476) *
                C4583 +
            (C5581 * C262 - (C5242 * C31513 + C5241 * C261) + C5582 * C31501 -
             C5959 * C263 - C5960 * C31476) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C261 +
             (C4585 * C430 + C31123 * C447) * C31513 - C5243 * C262 -
             C5244 * C31501 + C5245 * C263 + C5246 * C31476) *
                C4582 +
            (C5243 * C261 + C5244 * C31513 - C5245 * C262 - C5246 * C31501 +
             C5851 * C263 + C5852 * C31476) *
                C4583 +
            (C5245 * C261 + C5246 * C31513 - C5851 * C262 - C5852 * C31501 +
             (C4585 * C5842 + C31123 * C5843) * C263 +
             (C4585 * C5844 + C31123 * C5845) * C31476) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C2459 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31153) *
              C31521 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31153 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C2459) *
              C31518 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C2459 -
           ((C6416 * C31171 + C6415 * C116) * C4584 +
            (C6414 * C31171 + C6413 * C116) * C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31153) *
              C31509 +
          ((((C4585 * C1862 + C31123 * C1871) * C116 +
             (C4585 * C1868 + C31123 * C1880) * C31171) *
                C4582 +
            ((C4585 * C2240 + C31123 * C2243) * C116 +
             (C4585 * C2246 + C31123 * C2249) * C31171) *
                C4583 +
            ((C4585 * C6514 + C31123 * C6515) * C116 +
             (C4585 * C6516 + C31123 * C6517) * C31171) *
                C4584) *
               C31369 * C31153 -
           ((C6632 * C31171 + C6631 * C116) * C4584 +
            (C6630 * C31171 + C6629 * C116) * C4583 +
            ((C4585 * C1869 + C31123 * C1881) * C31171 +
             (C4585 * C1863 + C31123 * C1872) * C116) *
                C4582) *
               C31369 * C2459) *
              C31492)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C31519 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C31512 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C31499 -
           ((C9436 + C9437) * C31357 * C8928 +
            (C9438 + C9439) * C31357 * C8927 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C31357 * C8926) *
               C31480) *
              C3120 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 + C10905 * C8928) *
               C31512 -
           (C10615 * C8928 + (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C31519 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C31499 +
           ((C9439 + C9438) * C31357 * C8926 +
            (C9437 + C9436) * C31357 * C8927 +
            ((C4585 * C2137 + C31123 * C2138) * C116 +
             (C4585 * C2139 + C31123 * C2140) * C31171) *
                C31357 * C8928) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C261 +
             (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
             C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                C31357 * C8926 +
            (C10512 + C10513 - C10514 - C10515 + C10516 + C10517) * C31357 *
                C8927 +
            C10535 * C8928) *
               C2459 +
           ((C4739 * C262 -
             ((C4585 * C128 + C31123 * C139) * C31513 +
              (C4585 * C118 + C31123 * C125) * C261) +
             C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                C31357 * C8926 +
            (C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) * C31357 *
                C8927 +
            (C12084 - (C12085 + C12086) + C12087 - C12088 - C12089) * C31357 *
                C8928) *
               C31153) *
              C3120 +
          (((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) * C31357 *
                C8926 +
            (C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) * C31357 *
                C8927 +
            (C10524 - (C10525 + C10526) + C10527 - C10528 - C10529) * C31357 *
                C8928) *
               C2459 +
           ((C12080 + C12079 - C12078 - C12081 + C12082 + C12083) * C31357 *
                C8926 +
            (C12086 + C12085 - C12084 - C12087 + C12088 + C12089) * C31357 *
                C8927 +
            (C9198 * C261 + C9199 * C31513 - C10790 * C262 - C10791 * C31501 +
             (C4585 * C6514 + C31123 * C6515) * C263 +
             (C4585 * C6516 + C31123 * C6517) * C31476) *
                C31357 * C8928) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C2459 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C31153) *
              C31521 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 + C10905 * C8928) *
               C31153 -
           (C10615 * C8928 + (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C2459) *
              C31518 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 + C10625 * C8928) *
               C2459 -
           ((C10908 + C10909) * C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C31153) *
              C31509 +
          ((C10905 * C8926 + (C10909 + C10908) * C31357 * C8927 +
            ((C4585 * C10895 + C31123 * C10896) * C116 +
             (C4585 * C10897 + C31123 * C10898) * C31171) *
                C31357 * C8928) *
               C31153 -
           ((C10622 + C10623) * C31357 * C8928 +
            (C10621 + C10620) * C31357 * C8927 + C10615 * C8926) *
               C2459) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31148 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31156 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C2726) *
              C31272 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31156 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31148 -
           ((C5250 * C31171 + C5249 * C116) * C4584 +
            (C5248 * C31171 + C5247 * C116) * C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C2726) *
              C31279 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C31148 -
           ((C6416 * C31171 + C6415 * C116) * C4584 +
            (C6414 * C31171 + C6413 * C116) * C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31156 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C2726) *
              C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C31148 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C31156 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C2726) *
              C31272 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C31156 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C31148 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C2726) *
              C31279 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C31148 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C31156 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C2726) *
              C3628)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C31148 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C31156 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C2726) *
              C31272 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 + C10905 * C8928) *
               C31156 -
           (C10615 * C8928 + (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C31148 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C2726) *
              C31279 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 + C10625 * C8928) *
               C31148 -
           ((C10908 + C10909) * C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C31156 +
           (C9227 * C8926 + (C9221 + C9220) * C31357 * C8927 +
            ((C4585 * C1866 + C31123 * C1875) * C116 +
             (C4585 * C1878 + C31123 * C1884) * C31171) *
                C31357 * C8928) *
               C2726) *
              C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                     C115 * C119 + C103 * C126) *
                        C261 +
                    (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                     C115 * C129 + C103 * C140) *
                        C31513 -
                    (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                     C113 * C266 + C101 * C276) *
                        C262 -
                    (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                     C113 * C279 + C101 * C296) *
                        C31501 +
                    (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                     C115 * C269 + C103 * C282) *
                        C263 +
                    (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                     C115 * C285 + C103 * C299) *
                        C31476) *
                       C31357 * C31369 * C2459 +
                   ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                     C115 * C270 + C103 * C286) *
                        C262 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31513 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C261) +
                    (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                     C115 * C287 + C103 * C300) *
                        C31501 -
                    (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                     C113 * C268 + C101 * C281) *
                        C263 -
                    (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                     C113 * C284 + C101 * C298) *
                        C31476) *
                       C31357 * C31369 * C31153) *
                      C3120 +
                  (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                     C115 * C819 + C103 * C824) *
                        C262 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31513 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C261) +
                    (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                     C115 * C827 + C103 * C834) *
                        C31501 -
                    (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
                     C113 * C1165 + C101 * C1174) *
                        C263 -
                    (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
                     C113 * C1177 + C101 * C1192) *
                        C31476) *
                       C31357 * C31369 * C2459 +
                   ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                     C115 * C419 + C103 * C429) *
                        C261 +
                    (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                     C115 * C432 + C103 * C449) *
                        C31513 -
                    (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                     C113 * C818 + C101 * C823) *
                        C262 -
                    (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                     C113 * C826 + C101 * C833) *
                        C31501 +
                    (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
                     C115 * C1457 + C103 * C1458) *
                        C263 +
                    (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
                     C115 * C1459 + C103 * C1460) *
                        C31476) *
                       C31357 * C31369 * C31153) *
                      C31276)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                     C115 * C119 + C103 * C126) *
                        C116 +
                    (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                     C115 * C129 + C103 * C140) *
                        C31171) *
                       C31357 * C31369 * C31519 -
                   ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                     C113 * C128 + C101 * C139) *
                        C31171 +
                    (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                     C113 * C118 + C101 * C125) *
                        C116) *
                       C31357 * C31369 * C31512 +
                   ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                     C115 * C121 + C103 * C132) *
                        C116 +
                    (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                     C115 * C133 + C103 * C142) *
                        C31171) *
                       C31357 * C31369 * C31499 -
                   ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                     C113 * C130 + C101 * C141) *
                        C31171 +
                    (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                     C113 * C120 + C101 * C131) *
                        C116) *
                       C31357 * C31369 * C31480) *
                      C3120 +
                  (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                     C115 * C419 + C103 * C429) *
                        C116 +
                    (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                     C115 * C432 + C103 * C449) *
                        C31171) *
                       C31357 * C31369 * C31512 -
                   ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                     C113 * C433 + C101 * C450) *
                        C31171 +
                    (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                     C113 * C420 + C101 * C434) *
                        C116) *
                       C31357 * C31369 * C31519 -
                   ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                     C113 * C431 + C101 * C448) *
                        C31171 +
                    (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                     C113 * C418 + C101 * C428) *
                        C116) *
                       C31357 * C31369 * C31499 +
                   ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                     C115 * C667 + C103 * C668) *
                        C116 +
                    (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                     C115 * C669 + C103 * C670) *
                        C31171) *
                       C31357 * C31369 * C31480) *
                      C31276)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C117 + C31123 * C124) * C116 +
                     (C4585 * C127 + C31123 * C138) * C31171) *
                        C4582 +
                    (C4733 * C116 + C4734 * C31171) * C4583 +
                    (C4735 * C116 + C4736 * C31171) * C4584) *
                       C31369 * C31519 -
                   ((C4742 * C31171 + C4741 * C116) * C4584 +
                    (C4740 * C31171 + C4739 * C116) * C4583 +
                    ((C4585 * C128 + C31123 * C139) * C31171 +
                     (C4585 * C118 + C31123 * C125) * C116) *
                        C4582) *
                       C31369 * C31512 +
                   (((C4585 * C119 + C31123 * C126) * C116 +
                     (C4585 * C129 + C31123 * C140) * C31171) *
                        C4582 +
                    (C4745 * C116 + C4746 * C31171) * C4583 +
                    (C4747 * C116 + C4748 * C31171) * C4584) *
                       C31369 * C31499 -
                   ((C4970 * C31171 + C4969 * C116) * C4584 +
                    (C4968 * C31171 + C4967 * C116) * C4583 +
                    ((C4585 * C130 + C31123 * C141) * C31171 +
                     (C4585 * C120 + C31123 * C131) * C116) *
                        C4582) *
                       C31369 * C31480) *
                      C3120 +
                  ((((C4585 * C417 + C31123 * C427) * C116 +
                     (C4585 * C430 + C31123 * C447) * C31171) *
                        C4582 +
                    (C5243 * C116 + C5244 * C31171) * C4583 +
                    (C5245 * C116 + C5246 * C31171) * C4584) *
                       C31369 * C31512 -
                   ((C5242 * C31171 + C5241 * C116) * C4584 +
                    (C5240 * C31171 + C5239 * C116) * C4583 +
                    ((C4585 * C433 + C31123 * C450) * C31171 +
                     (C4585 * C420 + C31123 * C434) * C116) *
                        C4582) *
                       C31369 * C31519 -
                   ((C5250 * C31171 + C5249 * C116) * C4584 +
                    (C5248 * C31171 + C5247 * C116) * C4583 +
                    ((C4585 * C431 + C31123 * C448) * C31171 +
                     (C4585 * C418 + C31123 * C428) * C116) *
                        C4582) *
                       C31369 * C31499 +
                   (((C4585 * C419 + C31123 * C429) * C116 +
                     (C4585 * C432 + C31123 * C449) * C31171) *
                        C4582 +
                    ((C4585 * C820 + C31123 * C828) * C116 +
                     (C4585 * C829 + C31123 * C835) * C31171) *
                        C4583 +
                    ((C4585 * C1457 + C31123 * C1458) * C116 +
                     (C4585 * C1459 + C31123 * C1460) * C31171) *
                        C4584) *
                       C31369 * C31480) *
                      C31276)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C117 + C31123 * C124) * C261 +
                     (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
                     C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                        C4582 +
                    (C4733 * C261 + C4734 * C31513 - C4735 * C262 -
                     C4736 * C31501 + C4737 * C263 + C4738 * C31476) *
                        C4583 +
                    (C4735 * C261 + C4736 * C31513 - C4737 * C262 -
                     C4738 * C31501 + C5439 * C263 + C5440 * C31476) *
                        C4584) *
                       C31369 * C2459 +
                   ((C4739 * C262 -
                     ((C4585 * C128 + C31123 * C139) * C31513 +
                      (C4585 * C118 + C31123 * C125) * C261) +
                     C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                        C4582 +
                    (C4741 * C262 - (C4740 * C31513 + C4739 * C261) +
                     C4742 * C31501 - C4743 * C263 - C4744 * C31476) *
                        C4583 +
                    (C4743 * C262 - (C4742 * C31513 + C4741 * C261) +
                     C4744 * C31501 - C5695 * C263 - C5696 * C31476) *
                        C4584) *
                       C31369 * C31153) *
                      C3120 +
                  (((C5239 * C262 -
                     ((C4585 * C433 + C31123 * C450) * C31513 +
                      (C4585 * C420 + C31123 * C434) * C261) +
                     C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
                        C4582 +
                    (C5241 * C262 - (C5240 * C31513 + C5239 * C261) +
                     C5242 * C31501 - C5581 * C263 - C5582 * C31476) *
                        C4583 +
                    (C5581 * C262 - (C5242 * C31513 + C5241 * C261) +
                     C5582 * C31501 - C5959 * C263 - C5960 * C31476) *
                        C4584) *
                       C31369 * C2459 +
                   (((C4585 * C417 + C31123 * C427) * C261 +
                     (C4585 * C430 + C31123 * C447) * C31513 - C5243 * C262 -
                     C5244 * C31501 + C5245 * C263 + C5246 * C31476) *
                        C4582 +
                    (C5243 * C261 + C5244 * C31513 - C5245 * C262 -
                     C5246 * C31501 + C5851 * C263 + C5852 * C31476) *
                        C4583 +
                    (C5245 * C261 + C5246 * C31513 - C5851 * C262 -
                     C5852 * C31501 + (C4585 * C5842 + C31123 * C5843) * C263 +
                     (C4585 * C5844 + C31123 * C5845) * C31476) *
                        C4584) *
                       C31369 * C31153) *
                      C31276)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C117 + C31123 * C124) * C116 +
                     (C4585 * C127 + C31123 * C138) * C31171) *
                        C31357 * C8926 +
                    (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
                       C31519 -
                   (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
                    ((C4585 * C128 + C31123 * C139) * C31171 +
                     (C4585 * C118 + C31123 * C125) * C116) *
                        C31357 * C8926) *
                       C31512 +
                   (((C4585 * C119 + C31123 * C126) * C116 +
                     (C4585 * C129 + C31123 * C140) * C31171) *
                        C31357 * C8926 +
                    (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
                       C31499 -
                   ((C9436 + C9437) * C31357 * C8928 +
                    (C9438 + C9439) * C31357 * C8927 +
                    ((C4585 * C130 + C31123 * C141) * C31171 +
                     (C4585 * C120 + C31123 * C131) * C116) *
                        C31357 * C8926) *
                       C31480) *
                      C3120 +
                  (((C9211 + C9210) * C31357 * C8926 +
                    (C9209 + C9208) * C31357 * C8927 + C10905 * C8928) *
                       C31512 -
                   (C10615 * C8928 + (C9207 + C9206) * C31357 * C8927 +
                    (C9205 + C9204) * C31357 * C8926) *
                       C31519 -
                   ((C9220 + C9221) * C31357 * C8928 +
                    (C9215 + C9214) * C31357 * C8927 +
                    (C9213 + C9212) * C31357 * C8926) *
                       C31499 +
                   ((C9439 + C9438) * C31357 * C8926 +
                    (C9437 + C9436) * C31357 * C8927 +
                    ((C4585 * C2137 + C31123 * C2138) * C116 +
                     (C4585 * C2139 + C31123 * C2140) * C31171) *
                        C31357 * C8928) *
                       C31480) *
                      C31276)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4585 * C117 + C31123 * C124) * C261 +
                     (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
                     C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                        C31357 * C8926 +
                    (C10512 + C10513 - C10514 - C10515 + C10516 + C10517) *
                        C31357 * C8927 +
                    C10535 * C8928) *
                       C2459 +
                   ((C4739 * C262 -
                     ((C4585 * C128 + C31123 * C139) * C31513 +
                      (C4585 * C118 + C31123 * C125) * C261) +
                     C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                        C31357 * C8926 +
                    (C12078 - (C12079 + C12080) + C12081 - C12082 - C12083) *
                        C31357 * C8927 +
                    (C12084 - (C12085 + C12086) + C12087 - C12088 - C12089) *
                        C31357 * C8928) *
                       C31153) *
                      C3120 +
                  (((C10514 - (C10513 + C10512) + C10515 - C10516 - C10517) *
                        C31357 * C8926 +
                    (C10520 - (C10519 + C10518) + C10521 - C10522 - C10523) *
                        C31357 * C8927 +
                    (C10524 - (C10525 + C10526) + C10527 - C10528 - C10529) *
                        C31357 * C8928) *
                       C2459 +
                   ((C12080 + C12079 - C12078 - C12081 + C12082 + C12083) *
                        C31357 * C8926 +
                    (C12086 + C12085 - C12084 - C12087 + C12088 + C12089) *
                        C31357 * C8927 +
                    (C9198 * C261 + C9199 * C31513 - C10790 * C262 -
                     C10791 * C31501 + (C4585 * C6514 + C31123 * C6515) * C263 +
                     (C4585 * C6516 + C31123 * C6517) * C31476) *
                        C31357 * C8928) *
                       C31153) *
                      C31276)) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1303 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1297 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C1304 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C1298 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C1305 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C1299 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C1306 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31433 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C1304 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C1297 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C1303) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C1298 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C1305 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C1299 +
           (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
            C115 * C1307 + C103 * C1308) *
               C1306 +
           (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
            C115 * C1309 + C103 * C1310) *
               C31486) *
              C31357 * C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C561 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31447 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C562 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C557 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C562 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31447 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C561) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31234) *
              C31357 * C31369 * C558 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C561 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31447 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C562 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31234) *
              C31357 * C31369 * C559 +
          ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
            C115 * C563 + C103 * C564) *
               C562 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31447 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C561) +
           (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
            C115 * C565 + C103 * C566) *
               C31234) *
              C31357 * C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
               C4583 +
           (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
               C4584) *
              C31369 * C557 +
          ((C4739 * C562 -
            ((C4585 * C128 + C31123 * C139) * C31447 +
             (C4585 * C118 + C31123 * C125) * C561) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
               C4583 +
           (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
               C4584) *
              C31369 * C558 +
          (((C4585 * C119 + C31123 * C126) * C561 +
            (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
               C4583 +
           (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
               C4584) *
              C31369 * C559 +
          ((C4967 * C562 -
            ((C4585 * C130 + C31123 * C141) * C31447 +
             (C4585 * C120 + C31123 * C131) * C561) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C562 - (C4968 * C31447 + C4967 * C561) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C562 -
            (C4970 * C31447 + C4969 * C561) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31433 +
          ((C4739 * C1304 -
            ((C4585 * C128 + C31123 * C139) * C1297 +
             (C4585 * C118 + C31123 * C125) * C1303) +
            C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C1304 - (C4740 * C1297 + C4739 * C1303) + C4742 * C1298 -
            C4743 * C1305 - C4744 * C1299 + C5695 * C1306 + C5696 * C31486) *
               C4583 +
           (C4743 * C1304 - (C4742 * C1297 + C4741 * C1303) + C4744 * C1298 -
            C5695 * C1305 - C5696 * C1299 +
            (C4585 * C5686 + C31123 * C5687) * C1306 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C31357 * C8926 +
           (C9186 * C561 + C9187 * C31447 - C5239 * C562 - C5240 * C31234) *
               C31357 * C8927 +
           (C9188 * C561 + C9189 * C31447 - C5583 * C562 - C5584 * C31234) *
               C31357 * C8928) *
              C557 +
          ((C4739 * C562 -
            ((C4585 * C128 + C31123 * C139) * C31447 +
             (C4585 * C118 + C31123 * C125) * C561) +
            C4740 * C31234) *
               C31357 * C8926 +
           (C5243 * C562 - (C9192 * C31447 + C9193 * C561) + C5244 * C31234) *
               C31357 * C8927 +
           (C6413 * C562 - (C9190 * C31447 + C9191 * C561) + C6414 * C31234) *
               C31357 * C8928) *
              C558 +
          (((C4585 * C119 + C31123 * C126) * C561 +
            (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
            C4746 * C31234) *
               C31357 * C8926 +
           (C9194 * C561 + C9195 * C31447 - C5247 * C562 - C5248 * C31234) *
               C31357 * C8927 +
           (C9196 * C561 + C9197 * C31447 -
            (C4585 * C1166 + C31123 * C1178) * C562 -
            (C4585 * C1181 + C31123 * C1193) * C31234) *
               C31357 * C8928) *
              C559 +
          ((C4967 * C562 -
            ((C4585 * C130 + C31123 * C141) * C31447 +
             (C4585 * C120 + C31123 * C131) * C561) +
            C4968 * C31234) *
               C31357 * C8926 +
           ((C4585 * C820 + C31123 * C828) * C562 -
            ((C4585 * C432 + C31123 * C449) * C31447 +
             (C4585 * C419 + C31123 * C429) * C561) +
            (C4585 * C829 + C31123 * C835) * C31234) *
               C31357 * C8927 +
           ((C4585 * C2031 + C31123 * C2032) * C562 -
            ((C4585 * C443 + C31123 * C455) * C31447 +
             (C4585 * C425 + C31123 * C444) * C561) +
            (C4585 * C2033 + C31123 * C2034) * C31234) *
               C31357 * C8928) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C9186 * C1303 + C9187 * C1297 - C5239 * C1304 - C5240 * C1298 +
            C5241 * C1305 + C5242 * C1299 - C5581 * C1306 - C5582 * C31486) *
               C31357 * C8927 +
           (C9188 * C1303 + C9189 * C1297 - C5583 * C1304 - C5584 * C1298 +
            C5585 * C1305 + C5586 * C1299 - C5587 * C1306 - C5588 * C31486) *
               C31357 * C8928) *
              C31433 +
          ((C4739 * C1304 -
            ((C4585 * C128 + C31123 * C139) * C1297 +
             (C4585 * C118 + C31123 * C125) * C1303) +
            C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
            C4744 * C31486) *
               C31357 * C8926 +
           (C5243 * C1304 - (C9192 * C1297 + C9193 * C1303) + C5244 * C1298 -
            C5245 * C1305 - C5246 * C1299 + C5851 * C1306 + C5852 * C31486) *
               C31357 * C8927 +
           (C6413 * C1304 - (C9190 * C1297 + C9191 * C1303) + C6414 * C1298 -
            C6415 * C1305 - C6416 * C1299 +
            (C4585 * C6400 + C31123 * C6401) * C1306 +
            (C4585 * C6402 + C31123 * C6403) * C31486) *
               C31357 * C8928) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1303 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1297 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C1304 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C1298 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C1305 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C1299 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C1306 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31143 * C31448 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C1304 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C1297 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C1303) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C1298 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C1305 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C1299 +
           (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
            C115 * C1561 + C103 * C1564) *
               C1306 +
           (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
            C115 * C1567 + C103 * C1570) *
               C31486) *
              C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C258 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C259 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C561 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31447 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C562 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C258 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C259 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C562 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C31447 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C561) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C258 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C4583 +
            (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C31448 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            ((C4585 * C1559 + C31123 * C1562) * C562 -
             (C5242 * C31447 + C5241 * C561) +
             (C4585 * C1565 + C31123 * C1568) * C31234) *
                C4584) *
               C31369 * C258 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 -
             (C4585 * C1560 + C31123 * C1563) * C562 -
             (C4585 * C1566 + C31123 * C1569) * C31234) *
                C4584) *
               C31369 * C259 +
           ((C5247 * C562 -
             ((C4585 * C431 + C31123 * C448) * C31447 +
              (C4585 * C418 + C31123 * C428) * C561) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C562 - (C5248 * C31447 + C5247 * C561) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C562 -
             (C5250 * C31447 + C5249 * C561) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C31448 +
          ((C5239 * C1304 -
            ((C4585 * C433 + C31123 * C450) * C1297 +
             (C4585 * C420 + C31123 * C434) * C1303) +
            C5240 * C1298 - C5241 * C1305 - C5242 * C1299 + C5581 * C1306 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C1304 - (C5240 * C1297 + C5239 * C1303) + C5242 * C1298 -
            C5581 * C1305 - C5582 * C1299 + C5959 * C1306 + C5960 * C31486) *
               C4583 +
           (C5581 * C1304 - (C5242 * C1297 + C5241 * C1303) + C5582 * C1298 -
            C5959 * C1305 - C5960 * C1299 +
            (C4585 * C5950 + C31123 * C5951) * C1306 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C31357 * C8926 +
            (C9586 + C9587 - C9588 - C9589) * C31357 * C8927 +
            (C9590 + C9591 - C9592 - C9593) * C31357 * C8928) *
               C258 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C31357 * C8926 +
            (C9594 - (C9595 + C9596) + C9597) * C31357 * C8927 +
            (C9598 - (C9599 + C9600) + C9601) * C31357 * C8928) *
               C259 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C31357 * C8926 +
            (C9602 + C9603 - C9604 - C9605) * C31357 * C8927 +
            (C9606 + C9607 - C9614 - C9615) * C31357 * C8928) *
               C31470) *
              C31448 +
          (((C9588 - (C9587 + C9586) + C9589) * C31357 * C8926 +
            (C9592 - (C9591 + C9590) + C9593) * C31357 * C8927 +
            (C6629 * C562 - (C9200 * C31447 + C9201 * C561) + C6630 * C31234) *
                C31357 * C8928) *
               C258 +
           ((C9596 + C9595 - C9594 - C9597) * C31357 * C8926 +
            (C9600 + C9599 - C9598 - C9601) * C31357 * C8927 +
            (C9198 * C561 + C9199 * C31447 -
             (C4585 * C2240 + C31123 * C2243) * C562 -
             (C4585 * C2246 + C31123 * C2249) * C31234) *
                C31357 * C8928) *
               C259 +
           ((C9604 - (C9603 + C9602) + C9605) * C31357 * C8926 +
            (C9614 - (C9607 + C9606) + C9615) * C31357 * C8927 +
            ((C4585 * C2241 + C31123 * C2244) * C562 -
             (C9202 * C31447 + C9203 * C561) +
             (C4585 * C2247 + C31123 * C2250) * C31234) *
                C31357 * C8928) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C31357 * C8926 +
           (C10276 + C10277 - C10278 - C10279 + C10280 + C10281 - C10282 -
            C10283) *
               C31357 * C8927 +
           (C10284 + C10285 - C10286 - C10287 + C10288 + C10289 - C10290 -
            C10291) *
               C31357 * C8928) *
              C31143 * C31448 +
          ((C10278 - (C10277 + C10276) + C10279 - C10280 - C10281 + C10282 +
            C10283) *
               C31357 * C8926 +
           (C10286 - (C10285 + C10284) + C10287 - C10288 - C10289 + C10290 +
            C10291) *
               C31357 * C8927 +
           (C6629 * C1304 - (C9200 * C1297 + C9201 * C1303) + C6630 * C1298 -
            C6631 * C1305 - C6632 * C1299 +
            (C4585 * C6616 + C31123 * C6617) * C1306 +
            (C4585 * C6618 + C31123 * C6619) * C31486) *
               C31357 * C8928) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31171) *
                  C31357 * C31369 * C107 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31171 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31357 * C31369 * C108 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31171) *
                  C31357 * C31369 * C109 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31171 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31357 * C31369 * C110 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31171) *
                  C31357 * C31369 * C111) *
             C31189 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C261 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31513 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C262 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31501 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C263 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31476) *
                  C31357 * C31369 * C258 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C262 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31513 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C261) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C31501 -
               (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                C113 * C268 + C101 * C281) *
                   C263 -
               (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                C113 * C284 + C101 * C298) *
                   C31476) *
                  C31357 * C31369 * C259 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C261 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31513 -
               (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                C113 * C264 + C101 * C274) *
                   C262 -
               (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                C113 * C277 + C101 * C294) *
                   C31501 +
               (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
                C115 * C273 + C103 * C292) *
                   C263 +
               (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
                C115 * C293 + C103 * C303) *
                   C31476) *
                  C31357 * C31369 * C31470) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C258 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C259 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31514 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C259 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C258 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C31470) *
              C31503 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C258 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C259 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31143 * C31514 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C954 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C947 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C953) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C948 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C955 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31476) *
              C31357 * C31369 * C31143 * C31503 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C953 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C947 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C954 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C948 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C955 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C31476) *
              C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C258 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C31514 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            ((C4585 * C818 + C31123 * C823) * C116 +
             (C4585 * C826 + C31123 * C833) * C31171) *
                C4583 +
            ((C4585 * C1164 + C31123 * C1173) * C116 +
             (C4585 * C1176 + C31123 * C1191) * C31171) *
                C4584) *
               C31369 * C259 -
           (((C4585 * C1177 + C31123 * C1192) * C31171 +
             (C4585 * C1165 + C31123 * C1174) * C116) *
                C4584 +
            ((C4585 * C825 + C31123 * C832) * C31171 +
             (C4585 * C817 + C31123 * C822) * C116) *
                C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C258 -
           (((C4585 * C1175 + C31123 * C1190) * C31171 +
             (C4585 * C1163 + C31123 * C1172) * C116) *
                C4584 +
            ((C4585 * C827 + C31123 * C834) * C31171 +
             (C4585 * C819 + C31123 * C824) * C116) *
                C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C31503 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            ((C4585 * C1168 + C31123 * C1180) * C116 +
             (C4585 * C1183 + C31123 * C1195) * C31171) *
                C4583 +
            ((C4585 * C1169 + C31123 * C1184) * C116 +
             (C4585 * C1187 + C31123 * C1196) * C31171) *
                C4584) *
               C31369 * C258 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            C5439 * C955 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C31514 +
          ((C5239 * C954 -
            ((C4585 * C433 + C31123 * C450) * C947 +
             (C4585 * C420 + C31123 * C434) * C953) +
            C5240 * C948 - C5241 * C955 - C5242 * C31476) *
               C4582 +
           (C5241 * C954 - (C5240 * C947 + C5239 * C953) + C5242 * C948 -
            C5581 * C955 - C5582 * C31476) *
               C4583 +
           (C5581 * C954 - (C5242 * C947 + C5241 * C953) + C5582 * C948 -
            (C4585 * C5552 + C31123 * C5555) * C955 -
            (C4585 * C5556 + C31123 * C5561) * C31476) *
               C4584) *
              C31369 * C31143 * C31503 +
          (((C4585 * C422 + C31123 * C437) * C953 +
            (C4585 * C440 + C31123 * C452) * C947 - C5583 * C954 -
            C5584 * C948 + C5585 * C955 + C5586 * C31476) *
               C4582 +
           (C5583 * C953 + C5584 * C947 - C5585 * C954 - C5586 * C948 +
            C5587 * C955 + C5588 * C31476) *
               C4583 +
           (C5585 * C953 + C5586 * C947 - C5587 * C954 - C5588 * C948 +
            (C4585 * C5554 + C31123 * C5559) * C955 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C116 +
            (C4585 * C433 + C31123 * C450) * C31171) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C116 +
            (C4585 * C440 + C31123 * C452) * C31171) *
               C31357 * C8928) *
              C107 -
          (((C4585 * C441 + C31123 * C453) * C31171 +
            (C4585 * C423 + C31123 * C438) * C116) *
               C31357 * C8928 +
           ((C4585 * C430 + C31123 * C447) * C31171 +
            (C4585 * C417 + C31123 * C427) * C116) *
               C31357 * C8927 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C31357 * C8926) *
              C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C116 +
            (C4585 * C431 + C31123 * C448) * C31171) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C116 +
            (C4585 * C442 + C31123 * C454) * C31171) *
               C31357 * C8928) *
              C109 -
          (((C4585 * C443 + C31123 * C455) * C31171 +
            (C4585 * C425 + C31123 * C444) * C116) *
               C31357 * C8928 +
           ((C4585 * C432 + C31123 * C449) * C31171 +
            (C4585 * C419 + C31123 * C429) * C116) *
               C31357 * C8927 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C31357 * C8926) *
              C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C31357 * C8926 +
           ((C4585 * C421 + C31123 * C436) * C116 +
            (C4585 * C435 + C31123 * C451) * C31171) *
               C31357 * C8927 +
           ((C4585 * C426 + C31123 * C445) * C116 +
            (C4585 * C446 + C31123 * C456) * C31171) *
               C31357 * C8928) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C261 +
            (C4585 * C433 + C31123 * C450) * C31513 - C5239 * C262 -
            C5240 * C31501 + C5241 * C263 + C5242 * C31476) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C31357 * C8928) *
              C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C262 -
            ((C4585 * C430 + C31123 * C447) * C31513 +
             (C4585 * C417 + C31123 * C427) * C261) +
            C5244 * C31501 - C5245 * C263 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C262 -
            ((C4585 * C441 + C31123 * C453) * C31513 +
             (C4585 * C423 + C31123 * C438) * C261) +
            C6414 * C31501 - C6415 * C263 - C6416 * C31476) *
               C31357 * C8928) *
              C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C261 +
            (C4585 * C431 + C31123 * C448) * C31513 - C5247 * C262 -
            C5248 * C31501 + C5249 * C263 + C5250 * C31476) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C261 +
            (C4585 * C442 + C31123 * C454) * C31513 -
            (C4585 * C1166 + C31123 * C1178) * C262 -
            (C4585 * C1181 + C31123 * C1193) * C31501 +
            (C4585 * C1171 + C31123 * C1186) * C263 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C258 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C259 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C31470) *
              C31514 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 +
            (C9216 + C9217) * C31357 * C8928) *
               C259 -
           ((C9218 + C9219) * C31357 * C8928 +
            (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C258 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C31470) *
              C31503 +
          ((C9225 * C8926 + (C9219 + C9218) * C31357 * C8927 +
            ((C4585 * C1864 + C31123 * C1873) * C116 +
             (C4585 * C1876 + C31123 * C1882) * C31171) *
                C31357 * C8928) *
               C258 -
           (((C4585 * C1877 + C31123 * C1883) * C31171 +
             (C4585 * C1865 + C31123 * C1874) * C116) *
                C31357 * C8928 +
            (C9217 + C9216) * C31357 * C8927 + C9226 * C8926) *
               C259 +
           (C9227 * C8926 + (C9221 + C9220) * C31357 * C8927 +
            ((C4585 * C1866 + C31123 * C1875) * C116 +
             (C4585 * C1878 + C31123 * C1884) * C31171) *
                C31357 * C8928) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C31357 * C8926 +
           (C9186 * C953 + C9187 * C947 - C5239 * C954 - C5240 * C948 +
            C5241 * C955 + C5242 * C31476) *
               C31357 * C8927 +
           (C9188 * C953 + C9189 * C947 - C5583 * C954 - C5584 * C948 +
            C5585 * C955 + C5586 * C31476) *
               C31357 * C8928) *
              C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C954 - (C9192 * C947 + C9193 * C953) + C5244 * C948 -
            C5245 * C955 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C954 - (C9190 * C947 + C9191 * C953) + C6414 * C948 -
            C6415 * C955 - C6416 * C31476) *
               C31357 * C8928) *
              C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C31357 * C8926 +
           (C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
            C5249 * C955 + C5250 * C31476) *
               C31357 * C8927 +
           (C9196 * C953 + C9197 * C947 - C9612 * C954 - C9613 * C948 +
            (C4585 * C1171 + C31123 * C1186) * C955 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C31357 * C8926 +
          (C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
           C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
           C5959 * C1028 + C5960 * C1022) *
              C31357 * C8927 +
          (C9188 * C1024 + C9189 * C1018 - C5583 * C1025 - C5584 * C1019 +
           C5585 * C1026 + C5586 * C1020 - C5587 * C1027 - C5588 * C1021 +
           (C4585 * C5554 + C31123 * C5559) * C1028 +
           (C4585 * C5560 + C31123 * C5563) * C1022) *
              C31357 * C8928) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C31357 * C8926 +
           (C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C31357 * C8927 +
           C9921 * C8928) *
              C31143 * C31514 +
          ((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C31357 * C8926 +
           (C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C31357 * C8927 +
           (C9910 - (C9911 + C9912) + C9913 - C9914 - C9915) * C31357 * C8928) *
              C31143 * C31503 +
          (C9921 * C8926 +
           (C9912 + C9911 - C9910 - C9913 + C9914 + C9915) * C31357 * C8927 +
           ((C4585 * C1864 + C31123 * C1873) * C953 +
            (C4585 * C1876 + C31123 * C1882) * C947 -
            (C4585 * C6243 + C31123 * C6247) * C954 -
            (C4585 * C6248 + C31123 * C6252) * C948 +
            (C4585 * C6244 + C31123 * C6249) * C955 +
            (C4585 * C6250 + C31123 * C6253) * C31476) *
               C31357 * C8928) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C953 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C947 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C954 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C948 +
            (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
             C115 * C269 + C103 * C282) *
                C955 +
            (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
             C115 * C285 + C103 * C299) *
                C31476) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C954 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C947 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C953) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C948 -
            (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
             C113 * C268 + C101 * C281) *
                C955 -
            (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
             C113 * C284 + C101 * C298) *
                C31476) *
               C31357 * C31369 * C31153) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C954 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C947 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C953) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C948 -
            (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
             C113 * C1165 + C101 * C1174) *
                C955 -
            (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
             C113 * C1177 + C101 * C1192) *
                C31476) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C953 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C947 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C954 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C948 +
            (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
             C115 * C1457 + C103 * C1458) *
                C955 +
            (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
             C115 * C1459 + C103 * C1460) *
                C31476) *
               C31357 * C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C557 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C558 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C559 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31171 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31357 * C31369 * C31480) *
              C31448 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C558 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C557 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C559 +
           ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
             C115 * C667 + C103 * C668) *
                C116 +
            (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
             C115 * C669 + C103 * C670) *
                C31171) *
               C31357 * C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C557 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C558 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C559 -
           ((C4970 * C31171 + C4969 * C116) * C4584 +
            (C4968 * C31171 + C4967 * C116) * C4583 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C4582) *
               C31369 * C31480) *
              C31448 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            ((C4585 * C818 + C31123 * C823) * C116 +
             (C4585 * C826 + C31123 * C833) * C31171) *
                C4583 +
            ((C4585 * C1164 + C31123 * C1173) * C116 +
             (C4585 * C1176 + C31123 * C1191) * C31171) *
                C4584) *
               C31369 * C558 -
           (((C4585 * C1177 + C31123 * C1192) * C31171 +
             (C4585 * C1165 + C31123 * C1174) * C116) *
                C4584 +
            ((C4585 * C825 + C31123 * C832) * C31171 +
             (C4585 * C817 + C31123 * C822) * C116) *
                C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C557 -
           (((C4585 * C1175 + C31123 * C1190) * C31171 +
             (C4585 * C1163 + C31123 * C1172) * C116) *
                C4584 +
            ((C4585 * C827 + C31123 * C834) * C31171 +
             (C4585 * C819 + C31123 * C824) * C116) *
                C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C559 +
           (((C4585 * C419 + C31123 * C429) * C116 +
             (C4585 * C432 + C31123 * C449) * C31171) *
                C4582 +
            ((C4585 * C820 + C31123 * C828) * C116 +
             (C4585 * C829 + C31123 * C835) * C31171) *
                C4583 +
            ((C4585 * C1457 + C31123 * C1458) * C116 +
             (C4585 * C1459 + C31123 * C1460) * C31171) *
                C4584) *
               C31369 * C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C4582 +
            (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
             C4737 * C955 + C4738 * C31476) *
                C4583 +
            (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
             C5439 * C955 + C5440 * C31476) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C4582 +
            (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
             C4743 * C955 - C4744 * C31476) *
                C4583 +
            (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
             C5695 * C955 - C5696 * C31476) *
                C4584) *
               C31369 * C31153) *
              C31448 +
          (((C5239 * C954 -
             ((C4585 * C433 + C31123 * C450) * C947 +
              (C4585 * C420 + C31123 * C434) * C953) +
             C5240 * C948 - C5241 * C955 - C5242 * C31476) *
                C4582 +
            (C5241 * C954 - (C5240 * C947 + C5239 * C953) + C5242 * C948 -
             C5581 * C955 - C5582 * C31476) *
                C4583 +
            (C5581 * C954 - (C5242 * C947 + C5241 * C953) + C5582 * C948 -
             (C4585 * C5552 + C31123 * C5555) * C955 -
             (C4585 * C5556 + C31123 * C5561) * C31476) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C953 +
             (C4585 * C430 + C31123 * C447) * C947 - C5243 * C954 -
             C5244 * C948 + C5245 * C955 + C5246 * C31476) *
                C4582 +
            (C5243 * C953 + C5244 * C947 - C5245 * C954 - C5246 * C948 +
             C5851 * C955 + C5852 * C31476) *
                C4583 +
            (C5245 * C953 + C5246 * C947 - C5851 * C954 - C5852 * C948 +
             (C4585 * C5842 + C31123 * C5843) * C955 +
             (C4585 * C5844 + C31123 * C5845) * C31476) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C31357 * C8926 +
            (C9204 + C9205) * C31357 * C8927 + C9225 * C8928) *
               C557 -
           (C9226 * C8928 + (C9210 + C9211) * C31357 * C8927 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C31357 * C8926) *
               C558 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C31357 * C8926 +
            (C9212 + C9213) * C31357 * C8927 + C9227 * C8928) *
               C559 -
           ((C9436 + C9437) * C31357 * C8928 +
            (C9438 + C9439) * C31357 * C8927 +
            ((C4585 * C130 + C31123 * C141) * C31171 +
             (C4585 * C120 + C31123 * C131) * C116) *
                C31357 * C8926) *
               C31480) *
              C31448 +
          (((C9211 + C9210) * C31357 * C8926 +
            (C9209 + C9208) * C31357 * C8927 +
            (C9216 + C9217) * C31357 * C8928) *
               C558 -
           ((C9218 + C9219) * C31357 * C8928 +
            (C9207 + C9206) * C31357 * C8927 +
            (C9205 + C9204) * C31357 * C8926) *
               C557 -
           ((C9220 + C9221) * C31357 * C8928 +
            (C9215 + C9214) * C31357 * C8927 +
            (C9213 + C9212) * C31357 * C8926) *
               C559 +
           ((C9439 + C9438) * C31357 * C8926 +
            (C9437 + C9436) * C31357 * C8927 +
            ((C4585 * C2137 + C31123 * C2138) * C116 +
             (C4585 * C2139 + C31123 * C2140) * C31171) *
                C31357 * C8928) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C953 +
             (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
             C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                C31357 * C8926 +
            (C9898 + C9899 - C9900 - C9901 + C9902 + C9903) * C31357 * C8927 +
            C9921 * C8928) *
               C31433 +
           ((C4739 * C954 -
             ((C4585 * C128 + C31123 * C139) * C947 +
              (C4585 * C118 + C31123 * C125) * C953) +
             C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                C31357 * C8926 +
            (C10166 - (C10167 + C10168) + C10169 - C10170 - C10171) * C31357 *
                C8927 +
            (C10172 - (C10173 + C10174) + C10175 - C10176 - C10177) * C31357 *
                C8928) *
               C31153) *
              C31448 +
          (((C9900 - (C9899 + C9898) + C9901 - C9902 - C9903) * C31357 * C8926 +
            (C9906 - (C9905 + C9904) + C9907 - C9908 - C9909) * C31357 * C8927 +
            (C9910 - (C9911 + C9912) + C9913 - C9914 - C9915) * C31357 *
                C8928) *
               C31433 +
           ((C10168 + C10167 - C10166 - C10169 + C10170 + C10171) * C31357 *
                C8926 +
            (C10174 + C10173 - C10172 - C10175 + C10176 + C10177) * C31357 *
                C8927 +
            (C9198 * C953 + C9199 * C947 -
             (C4585 * C2240 + C31123 * C2243) * C954 -
             (C4585 * C2246 + C31123 * C2249) * C948 +
             (C4585 * C6514 + C31123 * C6515) * C955 +
             (C4585 * C6516 + C31123 * C6517) * C31476) *
                C31357 * C8928) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C258 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C262 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31513 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C261) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31501 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C263 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C261 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31513 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C262 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31501 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C263 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31171) *
              C31357 * C31369 * C107 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31171 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31357 * C31369 * C108 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31171) *
              C31357 * C31369 * C109 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31171 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31357 * C31369 * C110 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31171) *
              C31357 * C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C116 +
            (C4585 * C433 + C31123 * C450) * C31171) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C116 +
            (C4585 * C440 + C31123 * C452) * C31171) *
               C31357 * C8928) *
              C107 -
          (((C4585 * C441 + C31123 * C453) * C31171 +
            (C4585 * C423 + C31123 * C438) * C116) *
               C31357 * C8928 +
           ((C4585 * C430 + C31123 * C447) * C31171 +
            (C4585 * C417 + C31123 * C427) * C116) *
               C31357 * C8927 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C31357 * C8926) *
              C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C116 +
            (C4585 * C431 + C31123 * C448) * C31171) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C116 +
            (C4585 * C442 + C31123 * C454) * C31171) *
               C31357 * C8928) *
              C109 -
          (((C4585 * C443 + C31123 * C455) * C31171 +
            (C4585 * C425 + C31123 * C444) * C116) *
               C31357 * C8928 +
           ((C4585 * C432 + C31123 * C449) * C31171 +
            (C4585 * C419 + C31123 * C429) * C116) *
               C31357 * C8927 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C31357 * C8926) *
              C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C31357 * C8926 +
           ((C4585 * C421 + C31123 * C436) * C116 +
            (C4585 * C435 + C31123 * C451) * C31171) *
               C31357 * C8927 +
           ((C4585 * C426 + C31123 * C445) * C116 +
            (C4585 * C446 + C31123 * C456) * C31171) *
               C31357 * C8928) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C31357 * C8926 +
           ((C4585 * C420 + C31123 * C434) * C261 +
            (C4585 * C433 + C31123 * C450) * C31513 - C5239 * C262 -
            C5240 * C31501 + C5241 * C263 + C5242 * C31476) *
               C31357 * C8927 +
           ((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C31357 * C8928) *
              C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C262 -
            ((C4585 * C430 + C31123 * C447) * C31513 +
             (C4585 * C417 + C31123 * C427) * C261) +
            C5244 * C31501 - C5245 * C263 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C262 -
            ((C4585 * C441 + C31123 * C453) * C31513 +
             (C4585 * C423 + C31123 * C438) * C261) +
            C6414 * C31501 - C6415 * C263 - C6416 * C31476) *
               C31357 * C8928) *
              C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C31357 * C8926 +
           ((C4585 * C418 + C31123 * C428) * C261 +
            (C4585 * C431 + C31123 * C448) * C31513 - C5247 * C262 -
            C5248 * C31501 + C5249 * C263 + C5250 * C31476) *
               C31357 * C8927 +
           ((C4585 * C424 + C31123 * C439) * C261 +
            (C4585 * C442 + C31123 * C454) * C31513 -
            (C4585 * C1166 + C31123 * C1178) * C262 -
            (C4585 * C1181 + C31123 * C1193) * C31501 +
            (C4585 * C1171 + C31123 * C1186) * C263 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C31357 * C8926 +
           (C9186 * C953 + C9187 * C947 - C5239 * C954 - C5240 * C948 +
            C5241 * C955 + C5242 * C31476) *
               C31357 * C8927 +
           (C9188 * C953 + C9189 * C947 - C5583 * C954 - C5584 * C948 +
            C5585 * C955 + C5586 * C31476) *
               C31357 * C8928) *
              C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C31357 * C8926 +
           (C5243 * C954 - (C9192 * C947 + C9193 * C953) + C5244 * C948 -
            C5245 * C955 - C5246 * C31476) *
               C31357 * C8927 +
           (C6413 * C954 - (C9190 * C947 + C9191 * C953) + C6414 * C948 -
            C6415 * C955 - C6416 * C31476) *
               C31357 * C8928) *
              C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C31357 * C8926 +
           (C9194 * C953 + C9195 * C947 - C5247 * C954 - C5248 * C948 +
            C5249 * C955 + C5250 * C31476) *
               C31357 * C8927 +
           (C9196 * C953 + C9197 * C947 - C9612 * C954 - C9613 * C948 +
            (C4585 * C1171 + C31123 * C1186) * C955 +
            (C4585 * C1189 + C31123 * C1198) * C31476) *
               C31357 * C8928) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C31357 * C8926 +
          (C9186 * C1024 + C9187 * C1018 - C5239 * C1025 - C5240 * C1019 +
           C5241 * C1026 + C5242 * C1020 - C5581 * C1027 - C5582 * C1021 +
           C5959 * C1028 + C5960 * C1022) *
              C31357 * C8927 +
          (C9188 * C1024 + C9189 * C1018 - C5583 * C1025 - C5584 * C1019 +
           C5585 * C1026 + C5586 * C1020 - C5587 * C1027 - C5588 * C1021 +
           (C4585 * C5554 + C31123 * C5559) * C1028 +
           (C4585 * C5560 + C31123 * C5563) * C1022) *
              C31357 * C8928) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C30335 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31230 -
            (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
            (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
               C31357 * C19145 +
           ((C19488 + C19489) * C30335 + (C19490 + C19491) * C31230 -
            (C14313 + C14312) * C30327 - (C14315 + C14314) * C31237 +
            (C14747 + C14746) * C30341 + (C14749 + C14748) * C2723) *
               C31357 * C19146) *
              C31148 +
          (((C13660 + C13661) * C30327 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31230 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C30335) +
            (C13662 + C13663) * C31237 - (C13664 + C13665) * C30341 -
            (C13666 + C13667) * C2723) *
               C31357 * C19145 +
           ((C14317 + C14316) * C30327 -
            ((C19492 + C19493) * C31230 + (C19494 + C19495) * C30335) +
            (C14319 + C14318) * C31237 - (C15103 + C15102) * C30341 -
            (C15105 + C15104) * C2723) *
               C31357 * C19146) *
              C31156 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C30335 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31230 -
            (C13668 + C13669) * C30327 - (C13670 + C13671) * C31237 +
            (C13672 + C13673) * C30341 + (C13674 + C13675) * C2723) *
               C31357 * C19145 +
           ((C19496 + C19497) * C30335 + (C19498 + C19499) * C31230 -
            (C14321 + C14320) * C30327 - (C14323 + C14322) * C31237 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C30341 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C2723) *
               C31357 * C19146) *
              C2726) *
         C31189) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C30335 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31230 -
             (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
             (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
                C31357 * C19145 +
            ((C19488 + C19489) * C30335 + (C19490 + C19491) * C31230 -
             (C14313 + C14312) * C30327 - (C14315 + C14314) * C31237 +
             (C14747 + C14746) * C30341 + (C14749 + C14748) * C2723) *
                C31357 * C19146) *
               C2459 +
           (((C13660 + C13661) * C30327 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31230 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C30335) +
             (C13662 + C13663) * C31237 - (C13664 + C13665) * C30341 -
             (C13666 + C13667) * C2723) *
                C31357 * C19145 +
            ((C14317 + C14316) * C30327 -
             ((C19492 + C19493) * C31230 + (C19494 + C19495) * C30335) +
             (C14319 + C14318) * C31237 - (C15103 + C15102) * C30341 -
             (C15105 + C15104) * C2723) *
                C31357 * C19146) *
               C31153) *
              C31448 +
          ((((C14312 + C14313) * C30327 -
             ((C19491 + C19490) * C31230 + (C19489 + C19488) * C30335) +
             (C14314 + C14315) * C31237 - (C14746 + C14747) * C30341 -
             (C14748 + C14749) * C2723) *
                C31357 * C19145 +
            ((C14751 + C14750) * C30327 -
             ((C19504 + C19505) * C31230 + (C19506 + C19507) * C30335) +
             (C14753 + C14752) * C31237 - (C14755 + C14754) * C30341 -
             (C14757 + C14756) * C2723) *
                C31357 * C19146) *
               C2459 +
           (((C19495 + C19494) * C30335 + (C19493 + C19492) * C31230 -
             (C14316 + C14317) * C30327 - (C14318 + C14319) * C31237 +
             (C15102 + C15103) * C30341 + (C15104 + C15105) * C2723) *
                C31357 * C19145 +
            ((C19500 + C19501) * C30335 + (C19502 + C19503) * C31230 -
             (C15825 + C15824) * C30327 - (C15827 + C15826) * C31237 +
             (C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C30341 +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C2723) *
                C31357 * C19146) *
               C31153) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2461 + (C19490 + C19491) * C31520 -
            (C14313 + C14312) * C2462 - (C14315 + C14314) * C31516 +
            (C14747 + C14746) * C2463 + (C14749 + C14748) * C31506 -
            (C15245 + C15244) * C2464 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C2459 +
          (((C13660 + C13661) * C2462 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31520 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2461) +
            (C13662 + C13663) * C31516 - (C13664 + C13665) * C2463 -
            (C13666 + C13667) * C31506 + (C14896 + C14897) * C2464 +
            (C14898 + C14899) * C31486) *
               C31357 * C19145 +
           ((C14317 + C14316) * C2462 -
            ((C19492 + C19493) * C31520 + (C19494 + C19495) * C2461) +
            (C14319 + C14318) * C31516 - (C15103 + C15102) * C2463 -
            (C15105 + C15104) * C31506 +
            (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
             C13452 * C1564) *
                C2464 +
            (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
             C13452 * C1570) *
                C31486) *
               C31357 * C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2355 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C2349 -
            (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
            (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
               C31357 * C19146) *
              C31519 +
          (((C13660 + C13661) * C2356 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C2349 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2355) +
            (C13662 + C13663) * C31234) *
               C31357 * C19145 +
           ((C14317 + C14316) * C2356 -
            ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
            (C14319 + C14318) * C31234) *
               C31357 * C19146) *
              C31512 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C2355 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C2349 -
            (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
               C31357 * C19145 +
           ((C19496 + C19497) * C2355 + (C19498 + C19499) * C2349 -
            (C14321 + C14320) * C2356 - (C14323 + C14322) * C31234) *
               C31357 * C19146) *
              C31499 +
          (((C13960 + C13961) * C2356 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C2349 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C2355) +
            (C13962 + C13963) * C31234) *
               C31357 * C19145 +
           ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                C2356 -
            ((C19780 + C19781) * C2349 + (C19782 + C19783) * C2355) +
            (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                C31234) *
               C31357 * C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
             (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C2459 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C2356 -
             ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31153) *
              C31514 +
          ((((C14312 + C14313) * C2356 -
             ((C19491 + C19490) * C2349 + (C19489 + C19488) * C2355) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C2356 -
             ((C19504 + C19505) * C2349 + (C19506 + C19507) * C2355) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C2459 +
           (((C19495 + C19494) * C2355 + (C19493 + C19492) * C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C2355 + (C19502 + C19503) * C2349 -
             (C15825 + C15824) * C2356 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31153) *
              C31503 +
          ((((C19507 + C19506) * C2355 + (C19505 + C19504) * C2349 -
             (C14750 + C14751) * C2356 - (C14752 + C14753) * C31234) *
                C31357 * C19145 +
            ((C21196 + C21197) * C2355 + (C21198 + C21199) * C2349 -
             (C16097 + C16096) * C2356 - (C16099 + C16098) * C31234) *
                C31357 * C19146) *
               C2459 +
           (((C15824 + C15825) * C2356 -
             ((C19503 + C19502) * C2349 + (C19501 + C19500) * C2355) +
             (C15826 + C15827) * C31234) *
                C31357 * C19145 +
            ((C13455 * C2240 + C13451 * C2243 + C13456 * C2241 +
              C13452 * C2244) *
                 C2356 -
             ((C21536 + C21537) * C2349 + (C21538 + C21539) * C2355) +
             (C13455 * C2246 + C13451 * C2249 + C13456 * C2247 +
              C13452 * C2250) *
                 C31234) *
                C31357 * C19146) *
               C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
             (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C31148 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C2356 -
             ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31156 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C2355 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C2349 -
             (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
                C31357 * C19145 +
            ((C19496 + C19497) * C2355 + (C19498 + C19499) * C2349 -
             (C14321 + C14320) * C2356 - (C14323 + C14322) * C31234) *
                C31357 * C19146) *
               C2726) *
              C31448 +
          ((((C14312 + C14313) * C2356 -
             ((C19491 + C19490) * C2349 + (C19489 + C19488) * C2355) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C2356 -
             ((C19504 + C19505) * C2349 + (C19506 + C19507) * C2355) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C31148 +
           (((C19495 + C19494) * C2355 + (C19493 + C19492) * C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C2355 + (C19502 + C19503) * C2349 -
             (C15825 + C15824) * C2356 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31156 +
           (((C14320 + C14321) * C2356 -
             ((C19499 + C19498) * C2349 + (C19497 + C19496) * C2355) +
             (C14322 + C14323) * C31234) *
                C31357 * C19145 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C2356 -
             ((C19508 + C19509) * C2349 + (C19510 + C19511) * C2355) +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31234) *
                C31357 * C19146) *
               C2726) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2355 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C2349 -
            (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
            (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
               C31357 * C19146) *
              C31519 +
          (((C13660 + C13661) * C2356 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C2349 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2355) +
            (C13662 + C13663) * C31234) *
               C31357 * C19145 +
           ((C14317 + C14316) * C2356 -
            ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
            (C14319 + C14318) * C31234) *
               C31357 * C19146) *
              C31512 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C2355 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C2349 -
            (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
               C31357 * C19145 +
           ((C19496 + C19497) * C2355 + (C19498 + C19499) * C2349 -
            (C14321 + C14320) * C2356 - (C14323 + C14322) * C31234) *
               C31357 * C19146) *
              C31499 +
          (((C13960 + C13961) * C2356 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C2349 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C2355) +
            (C13962 + C13963) * C31234) *
               C31357 * C19145 +
           ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                C2356 -
            ((C19780 + C19781) * C2349 + (C19782 + C19783) * C2355) +
            (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                C31234) *
               C31357 * C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2461 + (C19490 + C19491) * C31520 -
            (C14313 + C14312) * C2462 - (C14315 + C14314) * C31516 +
            (C14747 + C14746) * C2463 + (C14749 + C14748) * C31506 -
            (C15245 + C15244) * C2464 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C2459 +
          (((C13660 + C13661) * C2462 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31520 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C2461) +
            (C13662 + C13663) * C31516 - (C13664 + C13665) * C2463 -
            (C13666 + C13667) * C31506 + (C14896 + C14897) * C2464 +
            (C14898 + C14899) * C31486) *
               C31357 * C19145 +
           ((C14317 + C14316) * C2462 -
            ((C19492 + C19493) * C31520 + (C19494 + C19495) * C2461) +
            (C14319 + C14318) * C31516 - (C15103 + C15102) * C2463 -
            (C15105 + C15104) * C31506 +
            (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
             C13452 * C1564) *
                C2464 +
            (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
             C13452 * C1570) *
                C31486) *
               C31357 * C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C30335 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31230 -
             (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
             (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
                C31357 * C19145 +
            ((C19488 + C19489) * C30335 + (C19490 + C19491) * C31230 -
             (C14313 + C14312) * C30327 - (C14315 + C14314) * C31237 +
             (C14747 + C14746) * C30341 + (C14749 + C14748) * C2723) *
                C31357 * C19146) *
               C31433 +
           (((C13660 + C13661) * C30327 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31230 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C30335) +
             (C13662 + C13663) * C31237 - (C13664 + C13665) * C30341 -
             (C13666 + C13667) * C2723) *
                C31357 * C19145 +
            ((C14317 + C14316) * C30327 -
             ((C19492 + C19493) * C31230 + (C19494 + C19495) * C30335) +
             (C14319 + C14318) * C31237 - (C15103 + C15102) * C30341 -
             (C15105 + C15104) * C2723) *
                C31357 * C19146) *
               C31153) *
              C3120 +
          ((((C14312 + C14313) * C30327 -
             ((C19491 + C19490) * C31230 + (C19489 + C19488) * C30335) +
             (C14314 + C14315) * C31237 - (C14746 + C14747) * C30341 -
             (C14748 + C14749) * C2723) *
                C31357 * C19145 +
            ((C14751 + C14750) * C30327 -
             ((C19504 + C19505) * C31230 + (C19506 + C19507) * C30335) +
             (C14753 + C14752) * C31237 - (C14755 + C14754) * C30341 -
             (C14757 + C14756) * C2723) *
                C31357 * C19146) *
               C31433 +
           (((C19495 + C19494) * C30335 + (C19493 + C19492) * C31230 -
             (C14316 + C14317) * C30327 - (C14318 + C14319) * C31237 +
             (C15102 + C15103) * C30341 + (C15104 + C15105) * C2723) *
                C31357 * C19145 +
            ((C19500 + C19501) * C30335 + (C19502 + C19503) * C31230 -
             (C15825 + C15824) * C30327 - (C15827 + C15826) * C31237 +
             (C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C30341 +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C2723) *
                C31357 * C19146) *
               C31153) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C30335 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31230 -
            (C13652 + C13653) * C30327 - (C13654 + C13655) * C31237 +
            (C13656 + C13657) * C30341 + (C13658 + C13659) * C2723) *
               C31357 * C19145 +
           ((C19488 + C19489) * C30335 + (C19490 + C19491) * C31230 -
            (C14313 + C14312) * C30327 - (C14315 + C14314) * C31237 +
            (C14747 + C14746) * C30341 + (C14749 + C14748) * C2723) *
               C31357 * C19146) *
              C31143 * C31272 +
          (((C14312 + C14313) * C30327 -
            ((C19491 + C19490) * C31230 + (C19489 + C19488) * C30335) +
            (C14314 + C14315) * C31237 - (C14746 + C14747) * C30341 -
            (C14748 + C14749) * C2723) *
               C31357 * C19145 +
           ((C14751 + C14750) * C30327 -
            ((C19504 + C19505) * C31230 + (C19506 + C19507) * C30335) +
            (C14753 + C14752) * C31237 - (C14755 + C14754) * C30341 -
            (C14757 + C14756) * C2723) *
               C31357 * C19146) *
              C31143 * C31279 +
          (((C19507 + C19506) * C30335 + (C19505 + C19504) * C31230 -
            (C14750 + C14751) * C30327 - (C14752 + C14753) * C31237 +
            (C14754 + C14755) * C30341 + (C14756 + C14757) * C2723) *
               C31357 * C19145 +
           ((C21196 + C21197) * C30335 + (C21198 + C21199) * C31230 -
            (C16097 + C16096) * C30327 - (C16099 + C16098) * C31237 +
            (C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C30341 +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C2723) *
               C31357 * C19146) *
              C31143 * C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2461 + (C19490 + C19491) * C31520 -
            (C14313 + C14312) * C2462 - (C14315 + C14314) * C31516 +
            (C14747 + C14746) * C2463 + (C14749 + C14748) * C31506 -
            (C15245 + C15244) * C2464 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C31143 * C3120 +
          (((C14312 + C14313) * C2462 -
            ((C19491 + C19490) * C31520 + (C19489 + C19488) * C2461) +
            (C14314 + C14315) * C31516 - (C14746 + C14747) * C2463 -
            (C14748 + C14749) * C31506 + (C15244 + C15245) * C2464 +
            (C15246 + C15247) * C31486) *
               C31357 * C19145 +
           ((C14751 + C14750) * C2462 -
            ((C19504 + C19505) * C31520 + (C19506 + C19507) * C2461) +
            (C14753 + C14752) * C31516 - (C14755 + C14754) * C2463 -
            (C14757 + C14756) * C31506 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C2464 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31486) *
               C31357 * C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
             (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C31510 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C2356 -
             ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C2355 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C2349 -
             (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
                C31357 * C19145 +
            ((C19496 + C19497) * C2355 + (C19498 + C19499) * C2349 -
             (C14321 + C14320) * C2356 - (C14323 + C14322) * C31234) *
                C31357 * C19146) *
               C31470) *
              C3120 +
          ((((C14312 + C14313) * C2356 -
             ((C19491 + C19490) * C2349 + (C19489 + C19488) * C2355) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C2356 -
             ((C19504 + C19505) * C2349 + (C19506 + C19507) * C2355) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C31510 +
           (((C19495 + C19494) * C2355 + (C19493 + C19492) * C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C2355 + (C19502 + C19503) * C2349 -
             (C15825 + C15824) * C2356 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31497 +
           (((C14320 + C14321) * C2356 -
             ((C19499 + C19498) * C2349 + (C19497 + C19496) * C2355) +
             (C14322 + C14323) * C31234) *
                C31357 * C19145 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C2356 -
             ((C19508 + C19509) * C2349 + (C19510 + C19511) * C2355) +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31234) *
                C31357 * C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2355 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C2349 -
            (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
            (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
               C31357 * C19146) *
              C31143 * C31521 +
          (((C14312 + C14313) * C2356 -
            ((C19491 + C19490) * C2349 + (C19489 + C19488) * C2355) +
            (C14314 + C14315) * C31234) *
               C31357 * C19145 +
           ((C14751 + C14750) * C2356 -
            ((C19504 + C19505) * C2349 + (C19506 + C19507) * C2355) +
            (C14753 + C14752) * C31234) *
               C31357 * C19146) *
              C31143 * C31518 +
          (((C19507 + C19506) * C2355 + (C19505 + C19504) * C2349 -
            (C14750 + C14751) * C2356 - (C14752 + C14753) * C31234) *
               C31357 * C19145 +
           ((C21196 + C21197) * C2355 + (C21198 + C21199) * C2349 -
            (C16097 + C16096) * C2356 - (C16099 + C16098) * C31234) *
               C31357 * C19146) *
              C31143 * C31509 +
          (((C16096 + C16097) * C2356 -
            ((C21199 + C21198) * C2349 + (C21197 + C21196) * C2355) +
            (C16098 + C16099) * C31234) *
               C31357 * C19145 +
           ((C13455 * C6243 + C13451 * C6247 + C13456 * C10771 +
             C13452 * C10772) *
                C2356 -
            ((C21200 + C21201) * C2349 + (C21202 + C21203) * C2355) +
            (C13455 * C6248 + C13451 * C6252 + C13456 * C10773 +
             C13452 * C10774) *
                C31234) *
               C31357 * C19146) *
              C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
             (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C31433 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C2356 -
             ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31153) *
              C31272 +
          ((((C14312 + C14313) * C2356 -
             ((C19491 + C19490) * C2349 + (C19489 + C19488) * C2355) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C2356 -
             ((C19504 + C19505) * C2349 + (C19506 + C19507) * C2355) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C31433 +
           (((C19495 + C19494) * C2355 + (C19493 + C19492) * C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C2355 + (C19502 + C19503) * C2349 -
             (C15825 + C15824) * C2356 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31153) *
              C31279 +
          ((((C19507 + C19506) * C2355 + (C19505 + C19504) * C2349 -
             (C14750 + C14751) * C2356 - (C14752 + C14753) * C31234) *
                C31357 * C19145 +
            ((C21196 + C21197) * C2355 + (C21198 + C21199) * C2349 -
             (C16097 + C16096) * C2356 - (C16099 + C16098) * C31234) *
                C31357 * C19146) *
               C31433 +
           (((C15824 + C15825) * C2356 -
             ((C19503 + C19502) * C2349 + (C19501 + C19500) * C2355) +
             (C15826 + C15827) * C31234) *
                C31357 * C19145 +
            ((C13455 * C2240 + C13451 * C2243 + C13456 * C2241 +
              C13452 * C2244) *
                 C2356 -
             ((C21536 + C21537) * C2349 + (C21538 + C21539) * C2355) +
             (C13455 * C2246 + C13451 * C2249 + C13456 * C2247 +
              C13452 * C2250) *
                 C31234) *
                C31357 * C19146) *
               C31153) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C2355 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C2349 -
             (C13652 + C13653) * C2356 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C2355 + (C19490 + C19491) * C2349 -
             (C14313 + C14312) * C2356 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C31510 +
           (((C13660 + C13661) * C2356 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C2349 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C2355) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C2356 -
             ((C19492 + C19493) * C2349 + (C19494 + C19495) * C2355) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C2355 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C2349 -
             (C13668 + C13669) * C2356 - (C13670 + C13671) * C31234) *
                C31357 * C19145 +
            ((C19496 + C19497) * C2355 + (C19498 + C19499) * C2349 -
             (C14321 + C14320) * C2356 - (C14323 + C14322) * C31234) *
                C31357 * C19146) *
               C31470) *
              C3120 +
          ((((C14312 + C14313) * C2356 -
             ((C19491 + C19490) * C2349 + (C19489 + C19488) * C2355) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C2356 -
             ((C19504 + C19505) * C2349 + (C19506 + C19507) * C2355) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C31510 +
           (((C19495 + C19494) * C2355 + (C19493 + C19492) * C2349 -
             (C14316 + C14317) * C2356 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C2355 + (C19502 + C19503) * C2349 -
             (C15825 + C15824) * C2356 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31497 +
           (((C14320 + C14321) * C2356 -
             ((C19499 + C19498) * C2349 + (C19497 + C19496) * C2355) +
             (C14322 + C14323) * C31234) *
                C31357 * C19145 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C2356 -
             ((C19508 + C19509) * C2349 + (C19510 + C19511) * C2355) +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31234) *
                C31357 * C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C2461 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31520 -
            (C13652 + C13653) * C2462 - (C13654 + C13655) * C31516 +
            (C13656 + C13657) * C2463 + (C13658 + C13659) * C31506 -
            (C14568 + C14569) * C2464 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C2461 + (C19490 + C19491) * C31520 -
            (C14313 + C14312) * C2462 - (C14315 + C14314) * C31516 +
            (C14747 + C14746) * C2463 + (C14749 + C14748) * C31506 -
            (C15245 + C15244) * C2464 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C31143 * C3120 +
          (((C14312 + C14313) * C2462 -
            ((C19491 + C19490) * C31520 + (C19489 + C19488) * C2461) +
            (C14314 + C14315) * C31516 - (C14746 + C14747) * C2463 -
            (C14748 + C14749) * C31506 + (C15244 + C15245) * C2464 +
            (C15246 + C15247) * C31486) *
               C31357 * C19145 +
           ((C14751 + C14750) * C2462 -
            ((C19504 + C19505) * C31520 + (C19506 + C19507) * C2461) +
            (C14753 + C14752) * C31516 - (C14755 + C14754) * C2463 -
            (C14757 + C14756) * C31506 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C2464 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31486) *
               C31357 * C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C1303 + (C19490 + C19491) * C1297 -
            (C14313 + C14312) * C1304 - (C14315 + C14314) * C1298 +
            (C14747 + C14746) * C1305 + (C14749 + C14748) * C1299 -
            (C15245 + C15244) * C1306 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C31433 +
          (((C13660 + C13661) * C1304 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C1297 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C1303) +
            (C13662 + C13663) * C1298 - (C13664 + C13665) * C1305 -
            (C13666 + C13667) * C1299 + (C14896 + C14897) * C1306 +
            (C14898 + C14899) * C31486) *
               C31357 * C19145 +
           ((C14317 + C14316) * C1304 -
            ((C19492 + C19493) * C1297 + (C19494 + C19495) * C1303) +
            (C14319 + C14318) * C1298 - (C15103 + C15102) * C1305 -
            (C15105 + C15104) * C1299 +
            (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
             C13452 * C1564) *
                C1306 +
            (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
             C13452 * C1570) *
                C31486) *
               C31357 * C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C561 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31447 -
            (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
               C31357 * C19145 +
           ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
            (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
               C31357 * C19146) *
              C557 +
          (((C13660 + C13661) * C562 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31447 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C561) +
            (C13662 + C13663) * C31234) *
               C31357 * C19145 +
           ((C14317 + C14316) * C562 -
            ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
            (C14319 + C14318) * C31234) *
               C31357 * C19146) *
              C558 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C561 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31447 -
            (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
               C31357 * C19145 +
           ((C19496 + C19497) * C561 + (C19498 + C19499) * C31447 -
            (C14321 + C14320) * C562 - (C14323 + C14322) * C31234) *
               C31357 * C19146) *
              C559 +
          (((C13960 + C13961) * C562 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31447 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C561) +
            (C13962 + C13963) * C31234) *
               C31357 * C19145 +
           ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                C562 -
            ((C13456 * C435 + C13452 * C451 + C13455 * C432 + C13451 * C449) *
                 C31447 +
             (C13456 * C421 + C13452 * C436 + C13455 * C419 + C13451 * C429) *
                 C561) +
            (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                C31234) *
               C31357 * C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
             (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C31433 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C562 -
             ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31153) *
              C1681 +
          ((((C14312 + C14313) * C562 -
             ((C19491 + C19490) * C31447 + (C19489 + C19488) * C561) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C562 -
             ((C19504 + C19505) * C31447 + (C19506 + C19507) * C561) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C31433 +
           (((C19495 + C19494) * C561 + (C19493 + C19492) * C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C561 + (C19502 + C19503) * C31447 -
             (C15825 + C15824) * C562 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31153) *
              C1682 +
          ((((C19507 + C19506) * C561 + (C19505 + C19504) * C31447 -
             (C14750 + C14751) * C562 - (C14752 + C14753) * C31234) *
                C31357 * C19145 +
            ((C21196 + C21197) * C561 + (C21198 + C21199) * C31447 -
             (C16097 + C16096) * C562 - (C16099 + C16098) * C31234) *
                C31357 * C19146) *
               C31433 +
           (((C15824 + C15825) * C562 -
             ((C19503 + C19502) * C31447 + (C19501 + C19500) * C561) +
             (C15826 + C15827) * C31234) *
                C31357 * C19145 +
            ((C13455 * C2240 + C13451 * C2243 + C13456 * C2241 +
              C13452 * C2244) *
                 C562 -
             ((C13456 * C1867 + C13452 * C1879 + C13455 * C1868 +
               C13451 * C1880) *
                  C31447 +
              (C13456 * C1861 + C13452 * C1870 + C13455 * C1862 +
               C13451 * C1871) *
                  C561) +
             (C13455 * C2246 + C13451 * C2249 + C13456 * C2247 +
              C13452 * C2250) *
                 C31234) *
                C31357 * C19146) *
               C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C1303 + (C19490 + C19491) * C1297 -
            (C14313 + C14312) * C1304 - (C14315 + C14314) * C1298 +
            (C14747 + C14746) * C1305 + (C14749 + C14748) * C1299 -
            (C15245 + C15244) * C1306 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C31143 * C31448 +
          (((C14312 + C14313) * C1304 -
            ((C19491 + C19490) * C1297 + (C19489 + C19488) * C1303) +
            (C14314 + C14315) * C1298 - (C14746 + C14747) * C1305 -
            (C14748 + C14749) * C1299 + (C15244 + C15245) * C1306 +
            (C15246 + C15247) * C31486) *
               C31357 * C19145 +
           ((C14751 + C14750) * C1304 -
            ((C19504 + C19505) * C1297 + (C19506 + C19507) * C1303) +
            (C14753 + C14752) * C1298 - (C14755 + C14754) * C1305 -
            (C14757 + C14756) * C1299 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C1306 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31486) *
               C31357 * C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
             (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C258 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C562 -
             ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C561 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31447 -
             (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
                C31357 * C19145 +
            ((C19496 + C19497) * C561 + (C19498 + C19499) * C31447 -
             (C14321 + C14320) * C562 - (C14323 + C14322) * C31234) *
                C31357 * C19146) *
               C31470) *
              C31448 +
          ((((C14312 + C14313) * C562 -
             ((C19491 + C19490) * C31447 + (C19489 + C19488) * C561) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C562 -
             ((C19504 + C19505) * C31447 + (C19506 + C19507) * C561) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C258 +
           (((C19495 + C19494) * C561 + (C19493 + C19492) * C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C561 + (C19502 + C19503) * C31447 -
             (C15825 + C15824) * C562 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C259 +
           (((C14320 + C14321) * C562 -
             ((C19499 + C19498) * C31447 + (C19497 + C19496) * C561) +
             (C14322 + C14323) * C31234) *
                C31357 * C19145 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C562 -
             ((C19508 + C19509) * C31447 + (C19510 + C19511) * C561) +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31234) *
                C31357 * C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C561 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31447 -
            (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
               C31357 * C19145 +
           ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
            (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
               C31357 * C19146) *
              C31143 * C2133 +
          (((C14312 + C14313) * C562 -
            ((C19491 + C19490) * C31447 + (C19489 + C19488) * C561) +
            (C14314 + C14315) * C31234) *
               C31357 * C19145 +
           ((C14751 + C14750) * C562 -
            ((C19504 + C19505) * C31447 + (C19506 + C19507) * C561) +
            (C14753 + C14752) * C31234) *
               C31357 * C19146) *
              C31143 * C2134 +
          (((C19507 + C19506) * C561 + (C19505 + C19504) * C31447 -
            (C14750 + C14751) * C562 - (C14752 + C14753) * C31234) *
               C31357 * C19145 +
           ((C21196 + C21197) * C561 + (C21198 + C21199) * C31447 -
            (C16097 + C16096) * C562 - (C16099 + C16098) * C31234) *
               C31357 * C19146) *
              C31143 * C2135 +
          (((C16096 + C16097) * C562 -
            ((C21199 + C21198) * C31447 + (C21197 + C21196) * C561) +
            (C16098 + C16099) * C31234) *
               C31357 * C19145 +
           ((C13455 * C6243 + C13451 * C6247 + C13456 * C10771 +
             C13452 * C10772) *
                C562 -
            ((C21200 + C21201) * C31447 + (C21202 + C21203) * C561) +
            (C13455 * C6248 + C13451 * C6252 + C13456 * C10773 +
             C13452 * C10774) *
                C31234) *
               C31357 * C19146) *
              C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13455 * C117 + C13451 * C124 + C13456 * C118 +
                 C13452 * C125) *
                    C116 +
                (C13455 * C127 + C13451 * C138 + C13456 * C128 +
                 C13452 * C139) *
                    C31171) *
                   C31357 * C19145 +
               ((C13455 * C420 + C13451 * C434 + C13456 * C417 +
                 C13452 * C427) *
                    C116 +
                (C13455 * C433 + C13451 * C450 + C13456 * C430 +
                 C13452 * C447) *
                    C31171) *
                   C31357 * C19146) *
                  C107 -
              (((C13456 * C431 + C13452 * C448 + C13455 * C430 +
                 C13451 * C447) *
                    C31171 +
                (C13456 * C418 + C13452 * C428 + C13455 * C417 +
                 C13451 * C427) *
                    C116) *
                   C31357 * C19146 +
               ((C13456 * C129 + C13452 * C140 + C13455 * C128 +
                 C13451 * C139) *
                    C31171 +
                (C13456 * C119 + C13452 * C126 + C13455 * C118 +
                 C13451 * C125) *
                    C116) *
                   C31357 * C19145) *
                  C108 +
              (((C13455 * C119 + C13451 * C126 + C13456 * C120 +
                 C13452 * C131) *
                    C116 +
                (C13455 * C129 + C13451 * C140 + C13456 * C130 +
                 C13452 * C141) *
                    C31171) *
                   C31357 * C19145 +
               ((C13455 * C418 + C13451 * C428 + C13456 * C419 +
                 C13452 * C429) *
                    C116 +
                (C13455 * C431 + C13451 * C448 + C13456 * C432 +
                 C13452 * C449) *
                    C31171) *
                   C31357 * C19146) *
                  C109 -
              (((C13456 * C435 + C13452 * C451 + C13455 * C432 +
                 C13451 * C449) *
                    C31171 +
                (C13456 * C421 + C13452 * C436 + C13455 * C419 +
                 C13451 * C429) *
                    C116) *
                   C31357 * C19146 +
               ((C13456 * C133 + C13452 * C142 + C13455 * C130 +
                 C13451 * C141) *
                    C31171 +
                (C13456 * C121 + C13452 * C132 + C13455 * C120 +
                 C13451 * C131) *
                    C116) *
                   C31357 * C19145) *
                  C110 +
              (((C13455 * C121 + C13451 * C132 + C13456 * C122 +
                 C13452 * C135) *
                    C116 +
                (C13455 * C133 + C13451 * C142 + C13456 * C134 +
                 C13452 * C143) *
                    C31171) *
                   C31357 * C19145 +
               ((C13455 * C421 + C13451 * C436 + C13456 * C667 +
                 C13452 * C668) *
                    C116 +
                (C13455 * C435 + C13451 * C451 + C13456 * C669 +
                 C13452 * C670) *
                    C31171) *
                   C31357 * C19146) *
                  C111) *
             C31189 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13455 * C117 + C13451 * C124 + C13456 * C118 +
                 C13452 * C125) *
                    C261 +
                (C13455 * C127 + C13451 * C138 + C13456 * C128 +
                 C13452 * C139) *
                    C31513 -
                (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
                (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
                   C31357 * C19145 +
               ((C13455 * C420 + C13451 * C434 + C13456 * C417 +
                 C13452 * C427) *
                    C261 +
                (C13455 * C433 + C13451 * C450 + C13456 * C430 +
                 C13452 * C447) *
                    C31513 -
                (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
                (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
                   C31357 * C19146) *
                  C258 +
              (((C13660 + C13661) * C262 -
                ((C13456 * C129 + C13452 * C140 + C13455 * C128 +
                  C13451 * C139) *
                     C31513 +
                 (C13456 * C119 + C13452 * C126 + C13455 * C118 +
                  C13451 * C125) *
                     C261) +
                (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
                (C13666 + C13667) * C31476) *
                   C31357 * C19145 +
               ((C14317 + C14316) * C262 -
                ((C13456 * C431 + C13452 * C448 + C13455 * C430 +
                  C13451 * C447) *
                     C31513 +
                 (C13456 * C418 + C13452 * C428 + C13455 * C417 +
                  C13451 * C427) *
                     C261) +
                (C14319 + C14318) * C31501 - (C15103 + C15102) * C263 -
                (C15105 + C15104) * C31476) *
                   C31357 * C19146) *
                  C259 +
              (((C13455 * C119 + C13451 * C126 + C13456 * C120 +
                 C13452 * C131) *
                    C261 +
                (C13455 * C129 + C13451 * C140 + C13456 * C130 +
                 C13452 * C141) *
                    C31513 -
                (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
                (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
                   C31357 * C19145 +
               ((C13455 * C418 + C13451 * C428 + C13456 * C419 +
                 C13452 * C429) *
                    C261 +
                (C13455 * C431 + C13451 * C448 + C13456 * C432 +
                 C13452 * C449) *
                    C31513 -
                (C14321 + C14320) * C262 - (C14323 + C14322) * C31501 +
                (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
                 C13452 * C1458) *
                    C263 +
                (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
                 C13452 * C1460) *
                    C31476) *
                   C31357 * C19146) *
                  C31470) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C258 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C31470) *
              C31514 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C259 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C258 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C31470) *
              C31503 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
              C13452 * C1871) *
                 C116 +
             (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
              C13452 * C1880) *
                 C31171) *
                C31357 * C19146) *
               C258 -
           (((C13456 * C1867 + C13452 * C1879 + C13455 * C1868 +
              C13451 * C1880) *
                 C31171 +
             (C13456 * C1861 + C13452 * C1870 + C13455 * C1862 +
              C13451 * C1871) *
                 C116) *
                C31357 * C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C259 +
           (((C19511 + C19510) * C116 + (C19509 + C19508) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1861 + C13451 * C1870 + C13456 * C2137 +
              C13452 * C2138) *
                 C116 +
             (C13455 * C1867 + C13451 * C1879 + C13456 * C2139 +
              C13452 * C2140) *
                 C31171) *
                C31357 * C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
            (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
            (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C954 -
            ((C19492 + C19493) * C947 + (C19494 + C19495) * C953) +
            (C14319 + C14318) * C948 - (C15103 + C15102) * C955 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C19496 + C19497) * C953 + (C19498 + C19499) * C947 -
            (C14321 + C14320) * C954 - (C14323 + C14322) * C948 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C955 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C31357 * C19145 +
          ((C19488 + C19489) * C1024 + (C19490 + C19491) * C1018 -
           (C14313 + C14312) * C1025 - (C14315 + C14314) * C1019 +
           (C14747 + C14746) * C1026 + (C14749 + C14748) * C1020 -
           (C15245 + C15244) * C1027 - (C15247 + C15246) * C1021 +
           (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 + C13452 * C5843) *
               C1028 +
           (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 + C13452 * C5845) *
               C1022) *
              C31357 * C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
            (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
            (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31143 * C31514 +
          (((C14312 + C14313) * C954 -
            ((C19491 + C19490) * C947 + (C19489 + C19488) * C953) +
            (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
            (C14748 + C14749) * C31476) *
               C31357 * C19145 +
           ((C14751 + C14750) * C954 -
            ((C19504 + C19505) * C947 + (C19506 + C19507) * C953) +
            (C14753 + C14752) * C948 - (C14755 + C14754) * C955 -
            (C14757 + C14756) * C31476) *
               C31357 * C19146) *
              C31143 * C31503 +
          (((C19507 + C19506) * C953 + (C19505 + C19504) * C947 -
            (C14750 + C14751) * C954 - (C14752 + C14753) * C948 +
            (C14754 + C14755) * C955 + (C14756 + C14757) * C31476) *
               C31357 * C19145 +
           ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
             C13452 * C1871) *
                C953 +
            (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
             C13452 * C1880) *
                C947 -
            (C16097 + C16096) * C954 - (C16099 + C16098) * C948 +
            (C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C955 +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C31476) *
               C31357 * C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C31510 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C31470) *
              C1681 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31497 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C31510 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C31470) *
              C1682 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
              C13452 * C1871) *
                 C116 +
             (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
              C13452 * C1880) *
                 C31171) *
                C31357 * C19146) *
               C31510 -
           (((C13456 * C1867 + C13452 * C1879 + C13455 * C1868 +
              C13451 * C1880) *
                 C31171 +
             (C13456 * C1861 + C13452 * C1870 + C13455 * C1862 +
              C13451 * C1871) *
                 C116) *
                C31357 * C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C31497 +
           (((C19511 + C19510) * C116 + (C19509 + C19508) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1861 + C13451 * C1870 + C13456 * C2137 +
              C13452 * C2138) *
                 C116 +
             (C13455 * C1867 + C13451 * C1879 + C13456 * C2139 +
              C13452 * C2140) *
                 C31171) *
                C31357 * C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C261 + (C19490 + C19491) * C31513 -
            (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
            (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31143 * C1681 +
          (((C14312 + C14313) * C262 -
            ((C19491 + C19490) * C31513 + (C19489 + C19488) * C261) +
            (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
            (C14748 + C14749) * C31476) *
               C31357 * C19145 +
           ((C14751 + C14750) * C262 -
            ((C19504 + C19505) * C31513 + (C19506 + C19507) * C261) +
            (C14753 + C14752) * C31501 - (C14755 + C14754) * C263 -
            (C14757 + C14756) * C31476) *
               C31357 * C19146) *
              C31143 * C1682 +
          (((C19507 + C19506) * C261 + (C19505 + C19504) * C31513 -
            (C14750 + C14751) * C262 - (C14752 + C14753) * C31501 +
            (C14754 + C14755) * C263 + (C14756 + C14757) * C31476) *
               C31357 * C19145 +
           ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
             C13452 * C1871) *
                C261 +
            (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
             C13452 * C1880) *
                C31513 -
            (C16097 + C16096) * C262 - (C16099 + C16098) * C31501 +
            (C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C263 +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C31476) *
               C31357 * C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C31357 * C19145 +
           ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
               C19146) *
              C31143 * C1856 -
          (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
               C19146 +
           ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
               C19145) *
              C31143 * C1857 +
          (((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
               C19145 +
           ((C21196 + C21197) * C116 + (C21198 + C21199) * C31171) * C31357 *
               C19146) *
              C31143 * C1858 -
          (((C21200 + C21201) * C31171 + (C21202 + C21203) * C116) * C31357 *
               C19146 +
           ((C21199 + C21198) * C31171 + (C21197 + C21196) * C116) * C31357 *
               C19145) *
              C31143 * C1859 +
          (((C21203 + C21202) * C116 + (C21201 + C21200) * C31171) * C31357 *
               C19145 +
           ((C13455 * C10597 + C13451 * C10600 + C13456 * C10895 +
             C13452 * C10896) *
                C116 +
            (C13455 * C10599 + C13451 * C10603 + C13456 * C10897 +
             C13452 * C10898) *
                C31171) *
               C31357 * C19146) *
              C31143 * C1860)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C953 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C947 -
             (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
             (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
                C31357 * C19145 +
            ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
             (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
             (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
                C31357 * C19146) *
               C31433 +
           (((C13660 + C13661) * C954 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C947 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C953) +
             (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
             (C13666 + C13667) * C31476) *
                C31357 * C19145 +
            ((C14317 + C14316) * C954 -
             ((C19492 + C19493) * C947 + (C19494 + C19495) * C953) +
             (C14319 + C14318) * C948 - (C15103 + C15102) * C955 -
             (C15105 + C15104) * C31476) *
                C31357 * C19146) *
               C31153) *
              C31448 +
          ((((C14312 + C14313) * C954 -
             ((C19491 + C19490) * C947 + (C19489 + C19488) * C953) +
             (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
             (C14748 + C14749) * C31476) *
                C31357 * C19145 +
            ((C14751 + C14750) * C954 -
             ((C19504 + C19505) * C947 + (C19506 + C19507) * C953) +
             (C14753 + C14752) * C948 - (C14755 + C14754) * C955 -
             (C14757 + C14756) * C31476) *
                C31357 * C19146) *
               C31433 +
           (((C19495 + C19494) * C953 + (C19493 + C19492) * C947 -
             (C14316 + C14317) * C954 - (C14318 + C14319) * C948 +
             (C15102 + C15103) * C955 + (C15104 + C15105) * C31476) *
                C31357 * C19145 +
            ((C19500 + C19501) * C953 + (C19502 + C19503) * C947 -
             (C15825 + C15824) * C954 - (C15827 + C15826) * C948 +
             (C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C955 +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31476) *
                C31357 * C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C557 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C558 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C559 -
           (((C19780 + C19781) * C31171 + (C19782 + C19783) * C116) * C31357 *
                C19146 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C31357 * C19145) *
               C31480) *
              C31448 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C558 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C557 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C559 +
           (((C19783 + C19782) * C116 + (C19781 + C19780) * C31171) * C31357 *
                C19145 +
            ((C13455 * C425 + C13451 * C444 + C13456 * C426 + C13452 * C445) *
                 C116 +
             (C13455 * C443 + C13451 * C455 + C13456 * C446 + C13452 * C456) *
                 C31171) *
                C31357 * C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C31433 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31153) *
              C2133 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31153 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C31433) *
              C2134 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C21196 + C21197) * C116 + (C21198 + C21199) * C31171) * C31357 *
                C19146) *
               C31433 -
           (((C21536 + C21537) * C31171 + (C21538 + C21539) * C116) * C31357 *
                C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C31153) *
              C2135 +
          ((((C21539 + C21538) * C116 + (C21537 + C21536) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1865 + C13451 * C1874 + C13456 * C1866 +
              C13452 * C1875) *
                 C116 +
             (C13455 * C1877 + C13451 * C1883 + C13456 * C1878 +
              C13452 * C1884) *
                 C31171) *
                C31357 * C19146) *
               C31153 -
           (((C21200 + C21201) * C31171 + (C21202 + C21203) * C116) * C31357 *
                C19146 +
            ((C21199 + C21198) * C31171 + (C21197 + C21196) * C116) * C31357 *
                C19145) *
               C31433) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C13455 * C420 + C13451 * C434 + C13456 * C417 + C13452 * C427) *
                C261 +
            (C13455 * C433 + C13451 * C450 + C13456 * C430 + C13452 * C447) *
                C31513 -
            (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
            (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C258 +
          (((C13660 + C13661) * C262 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31513 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C261) +
            (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C262 -
            ((C13456 * C431 + C13452 * C448 + C13455 * C430 + C13451 * C447) *
                 C31513 +
             (C13456 * C418 + C13452 * C428 + C13455 * C417 + C13451 * C427) *
                 C261) +
            (C14319 + C14318) * C31501 - (C15103 + C15102) * C263 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C259 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C261 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31513 -
            (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
            (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C13455 * C418 + C13451 * C428 + C13456 * C419 + C13452 * C429) *
                C261 +
            (C13455 * C431 + C13451 * C448 + C13456 * C432 + C13452 * C449) *
                C31513 -
            (C14321 + C14320) * C262 - (C14323 + C14322) * C31501 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C263 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C420 + C13451 * C434 + C13456 * C417 + C13452 * C427) *
                C116 +
            (C13455 * C433 + C13451 * C450 + C13456 * C430 + C13452 * C447) *
                C31171) *
               C31357 * C19146) *
              C107 -
          (((C13456 * C431 + C13452 * C448 + C13455 * C430 + C13451 * C447) *
                C31171 +
            (C13456 * C418 + C13452 * C428 + C13455 * C417 + C13451 * C427) *
                C116) *
               C31357 * C19146 +
           ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                C31171 +
            (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                C116) *
               C31357 * C19145) *
              C108 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C116 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C418 + C13451 * C428 + C13456 * C419 + C13452 * C429) *
                C116 +
            (C13455 * C431 + C13451 * C448 + C13456 * C432 + C13452 * C449) *
                C31171) *
               C31357 * C19146) *
              C109 -
          (((C13456 * C435 + C13452 * C451 + C13455 * C432 + C13451 * C449) *
                C31171 +
            (C13456 * C421 + C13452 * C436 + C13455 * C419 + C13451 * C429) *
                C116) *
               C31357 * C19146 +
           ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                C31171 +
            (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                C116) *
               C31357 * C19145) *
              C110 +
          (((C13455 * C121 + C13451 * C132 + C13456 * C122 + C13452 * C135) *
                C116 +
            (C13455 * C133 + C13451 * C142 + C13456 * C134 + C13452 * C143) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C421 + C13451 * C436 + C13456 * C667 + C13452 * C668) *
                C116 +
            (C13455 * C435 + C13451 * C451 + C13456 * C669 + C13452 * C670) *
                C31171) *
               C31357 * C19146) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
            (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
            (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C954 -
            ((C19492 + C19493) * C947 + (C19494 + C19495) * C953) +
            (C14319 + C14318) * C948 - (C15103 + C15102) * C955 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C19496 + C19497) * C953 + (C19498 + C19499) * C947 -
            (C14321 + C14320) * C954 - (C14323 + C14322) * C948 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C955 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C31357 * C19145 +
          ((C19488 + C19489) * C1024 + (C19490 + C19491) * C1018 -
           (C14313 + C14312) * C1025 - (C14315 + C14314) * C1019 +
           (C14747 + C14746) * C1026 + (C14749 + C14748) * C1020 -
           (C15245 + C15244) * C1027 - (C15247 + C15246) * C1021 +
           (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 + C13452 * C5843) *
               C1028 +
           (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 + C13452 * C5845) *
               C1022) *
              C31357 * C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C31510 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31497 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C31470) *
              C1681 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31497 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C31510 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C31470) *
              C1682 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
              C13452 * C1871) *
                 C116 +
             (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
              C13452 * C1880) *
                 C31171) *
                C31357 * C19146) *
               C31510 -
           (((C13456 * C1867 + C13452 * C1879 + C13455 * C1868 +
              C13451 * C1880) *
                 C31171 +
             (C13456 * C1861 + C13452 * C1870 + C13455 * C1862 +
              C13451 * C1871) *
                 C116) *
                C31357 * C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C31497 +
           (((C19511 + C19510) * C116 + (C19509 + C19508) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1861 + C13451 * C1870 + C13456 * C2137 +
              C13452 * C2138) *
                 C116 +
             (C13455 * C1867 + C13451 * C1879 + C13456 * C2139 +
              C13452 * C2140) *
                 C31171) *
                C31357 * C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C261 + (C19490 + C19491) * C31513 -
            (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
            (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31143 * C1681 +
          (((C14312 + C14313) * C262 -
            ((C19491 + C19490) * C31513 + (C19489 + C19488) * C261) +
            (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
            (C14748 + C14749) * C31476) *
               C31357 * C19145 +
           ((C14751 + C14750) * C262 -
            ((C19504 + C19505) * C31513 + (C19506 + C19507) * C261) +
            (C14753 + C14752) * C31501 - (C14755 + C14754) * C263 -
            (C14757 + C14756) * C31476) *
               C31357 * C19146) *
              C31143 * C1682 +
          (((C19507 + C19506) * C261 + (C19505 + C19504) * C31513 -
            (C14750 + C14751) * C262 - (C14752 + C14753) * C31501 +
            (C14754 + C14755) * C263 + (C14756 + C14757) * C31476) *
               C31357 * C19145 +
           ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
             C13452 * C1871) *
                C261 +
            (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
             C13452 * C1880) *
                C31513 -
            (C16097 + C16096) * C262 - (C16099 + C16098) * C31501 +
            (C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C263 +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C31476) *
               C31357 * C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
             (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C31148 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C562 -
             ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31156 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C561 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31447 -
             (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
                C31357 * C19145 +
            ((C19496 + C19497) * C561 + (C19498 + C19499) * C31447 -
             (C14321 + C14320) * C562 - (C14323 + C14322) * C31234) *
                C31357 * C19146) *
               C2726) *
              C3120 +
          ((((C14312 + C14313) * C562 -
             ((C19491 + C19490) * C31447 + (C19489 + C19488) * C561) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C562 -
             ((C19504 + C19505) * C31447 + (C19506 + C19507) * C561) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C31148 +
           (((C19495 + C19494) * C561 + (C19493 + C19492) * C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C561 + (C19502 + C19503) * C31447 -
             (C15825 + C15824) * C562 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31156 +
           (((C14320 + C14321) * C562 -
             ((C19499 + C19498) * C31447 + (C19497 + C19496) * C561) +
             (C14322 + C14323) * C31234) *
                C31357 * C19145 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C562 -
             ((C19508 + C19509) * C31447 + (C19510 + C19511) * C561) +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31234) *
                C31357 * C19146) *
               C2726) *
              C31276)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
             (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C2459 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C562 -
             ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C31153) *
              C31272 +
          ((((C14312 + C14313) * C562 -
             ((C19491 + C19490) * C31447 + (C19489 + C19488) * C561) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C562 -
             ((C19504 + C19505) * C31447 + (C19506 + C19507) * C561) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C2459 +
           (((C19495 + C19494) * C561 + (C19493 + C19492) * C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C561 + (C19502 + C19503) * C31447 -
             (C15825 + C15824) * C562 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C31153) *
              C31279 +
          ((((C19507 + C19506) * C561 + (C19505 + C19504) * C31447 -
             (C14750 + C14751) * C562 - (C14752 + C14753) * C31234) *
                C31357 * C19145 +
            ((C21196 + C21197) * C561 + (C21198 + C21199) * C31447 -
             (C16097 + C16096) * C562 - (C16099 + C16098) * C31234) *
                C31357 * C19146) *
               C2459 +
           (((C15824 + C15825) * C562 -
             ((C19503 + C19502) * C31447 + (C19501 + C19500) * C561) +
             (C15826 + C15827) * C31234) *
                C31357 * C19145 +
            ((C13455 * C2240 + C13451 * C2243 + C13456 * C2241 +
              C13452 * C2244) *
                 C562 -
             ((C21536 + C21537) * C31447 + (C21538 + C21539) * C561) +
             (C13455 * C2246 + C13451 * C2249 + C13456 * C2247 +
              C13452 * C2250) *
                 C31234) *
                C31357 * C19146) *
               C31153) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C261 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31513 -
             (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
             (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
                C31357 * C19145 +
            ((C19488 + C19489) * C261 + (C19490 + C19491) * C31513 -
             (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
             (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
                C31357 * C19146) *
               C2459 +
           (((C13660 + C13661) * C262 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31513 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C261) +
             (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
             (C13666 + C13667) * C31476) *
                C31357 * C19145 +
            ((C14317 + C14316) * C262 -
             ((C19492 + C19493) * C31513 + (C19494 + C19495) * C261) +
             (C14319 + C14318) * C31501 - (C15103 + C15102) * C263 -
             (C15105 + C15104) * C31476) *
                C31357 * C19146) *
               C31153) *
              C3120 +
          ((((C14312 + C14313) * C262 -
             ((C19491 + C19490) * C31513 + (C19489 + C19488) * C261) +
             (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
             (C14748 + C14749) * C31476) *
                C31357 * C19145 +
            ((C14751 + C14750) * C262 -
             ((C19504 + C19505) * C31513 + (C19506 + C19507) * C261) +
             (C14753 + C14752) * C31501 - (C14755 + C14754) * C263 -
             (C14757 + C14756) * C31476) *
                C31357 * C19146) *
               C2459 +
           (((C19495 + C19494) * C261 + (C19493 + C19492) * C31513 -
             (C14316 + C14317) * C262 - (C14318 + C14319) * C31501 +
             (C15102 + C15103) * C263 + (C15104 + C15105) * C31476) *
                C31357 * C19145 +
            ((C19500 + C19501) * C261 + (C19502 + C19503) * C31513 -
             (C15825 + C15824) * C262 - (C15827 + C15826) * C31501 +
             (C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C263 +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31476) *
                C31357 * C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C31519 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31512 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C31499 -
           (((C19780 + C19781) * C31171 + (C19782 + C19783) * C116) * C31357 *
                C19146 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C31357 * C19145) *
               C31480) *
              C3120 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31512 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C31519 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C31499 +
           (((C19783 + C19782) * C116 + (C19781 + C19780) * C31171) * C31357 *
                C19145 +
            ((C13455 * C425 + C13451 * C444 + C13456 * C426 + C13452 * C445) *
                 C116 +
             (C13455 * C443 + C13451 * C455 + C13456 * C446 + C13452 * C456) *
                 C31171) *
                C31357 * C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C2459 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31153) *
              C31521 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31153 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C2459) *
              C31518 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C21196 + C21197) * C116 + (C21198 + C21199) * C31171) * C31357 *
                C19146) *
               C2459 -
           (((C21536 + C21537) * C31171 + (C21538 + C21539) * C116) * C31357 *
                C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C31153) *
              C31509 +
          ((((C21539 + C21538) * C116 + (C21537 + C21536) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1865 + C13451 * C1874 + C13456 * C1866 +
              C13452 * C1875) *
                 C116 +
             (C13455 * C1877 + C13451 * C1883 + C13456 * C1878 +
              C13452 * C1884) *
                 C31171) *
                C31357 * C19146) *
               C31153 -
           (((C21200 + C21201) * C31171 + (C21202 + C21203) * C116) * C31357 *
                C19146 +
            ((C21199 + C21198) * C31171 + (C21197 + C21196) * C116) * C31357 *
                C19145) *
               C2459) *
              C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C31148 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31156 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C2726) *
              C31272 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31156 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C31148 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C2726) *
              C31279 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C21196 + C21197) * C116 + (C21198 + C21199) * C31171) * C31357 *
                C19146) *
               C31148 -
           (((C21536 + C21537) * C31171 + (C21538 + C21539) * C116) * C31357 *
                C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C31156 +
           (((C19511 + C19510) * C116 + (C19509 + C19508) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1861 + C13451 * C1870 + C13456 * C2137 +
              C13452 * C2138) *
                 C116 +
             (C13455 * C1867 + C13451 * C1879 + C13456 * C2139 +
              C13452 * C2140) *
                 C31171) *
                C31357 * C19146) *
               C2726) *
              C3628)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C31519 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C31512 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C31499 -
           (((C19780 + C19781) * C31171 + (C19782 + C19783) * C116) * C31357 *
                C19146 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C31357 * C19145) *
               C31480) *
              C3120 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C31512 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C31519 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C31499 +
           (((C19783 + C19782) * C116 + (C19781 + C19780) * C31171) * C31357 *
                C19145 +
            ((C13455 * C425 + C13451 * C444 + C13456 * C426 + C13452 * C445) *
                 C116 +
             (C13455 * C443 + C13451 * C455 + C13456 * C446 + C13452 * C456) *
                 C31171) *
                C31357 * C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C261 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31513 -
             (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
             (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
                C31357 * C19145 +
            ((C19488 + C19489) * C261 + (C19490 + C19491) * C31513 -
             (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
             (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
                C31357 * C19146) *
               C2459 +
           (((C13660 + C13661) * C262 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31513 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C261) +
             (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
             (C13666 + C13667) * C31476) *
                C31357 * C19145 +
            ((C14317 + C14316) * C262 -
             ((C19492 + C19493) * C31513 + (C19494 + C19495) * C261) +
             (C14319 + C14318) * C31501 - (C15103 + C15102) * C263 -
             (C15105 + C15104) * C31476) *
                C31357 * C19146) *
               C31153) *
              C3120 +
          ((((C14312 + C14313) * C262 -
             ((C19491 + C19490) * C31513 + (C19489 + C19488) * C261) +
             (C14314 + C14315) * C31501 - (C14746 + C14747) * C263 -
             (C14748 + C14749) * C31476) *
                C31357 * C19145 +
            ((C14751 + C14750) * C262 -
             ((C19504 + C19505) * C31513 + (C19506 + C19507) * C261) +
             (C14753 + C14752) * C31501 - (C14755 + C14754) * C263 -
             (C14757 + C14756) * C31476) *
                C31357 * C19146) *
               C2459 +
           (((C19495 + C19494) * C261 + (C19493 + C19492) * C31513 -
             (C14316 + C14317) * C262 - (C14318 + C14319) * C31501 +
             (C15102 + C15103) * C263 + (C15104 + C15105) * C31476) *
                C31357 * C19145 +
            ((C19500 + C19501) * C261 + (C19502 + C19503) * C31513 -
             (C15825 + C15824) * C262 - (C15827 + C15826) * C31501 +
             (C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C263 +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31476) *
                C31357 * C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C561 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31447 -
            (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
               C31357 * C19145 +
           ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
            (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
               C31357 * C19146) *
              C557 +
          (((C13660 + C13661) * C562 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31447 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C561) +
            (C13662 + C13663) * C31234) *
               C31357 * C19145 +
           ((C14317 + C14316) * C562 -
            ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
            (C14319 + C14318) * C31234) *
               C31357 * C19146) *
              C558 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C561 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31447 -
            (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
               C31357 * C19145 +
           ((C19496 + C19497) * C561 + (C19498 + C19499) * C31447 -
            (C14321 + C14320) * C562 - (C14323 + C14322) * C31234) *
               C31357 * C19146) *
              C559 +
          (((C13960 + C13961) * C562 -
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31447 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C561) +
            (C13962 + C13963) * C31234) *
               C31357 * C19145 +
           ((C13455 * C820 + C13451 * C828 + C13456 * C821 + C13452 * C830) *
                C562 -
            ((C13456 * C435 + C13452 * C451 + C13455 * C432 + C13451 * C449) *
                 C31447 +
             (C13456 * C421 + C13452 * C436 + C13455 * C419 + C13451 * C429) *
                 C561) +
            (C13455 * C829 + C13451 * C835 + C13456 * C831 + C13452 * C836) *
                C31234) *
               C31357 * C19146) *
              C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C1303 + (C19490 + C19491) * C1297 -
            (C14313 + C14312) * C1304 - (C14315 + C14314) * C1298 +
            (C14747 + C14746) * C1305 + (C14749 + C14748) * C1299 -
            (C15245 + C15244) * C1306 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C31433 +
          (((C13660 + C13661) * C1304 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C1297 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C1303) +
            (C13662 + C13663) * C1298 - (C13664 + C13665) * C1305 -
            (C13666 + C13667) * C1299 + (C14896 + C14897) * C1306 +
            (C14898 + C14899) * C31486) *
               C31357 * C19145 +
           ((C14317 + C14316) * C1304 -
            ((C19492 + C19493) * C1297 + (C19494 + C19495) * C1303) +
            (C14319 + C14318) * C1298 - (C15103 + C15102) * C1305 -
            (C15105 + C15104) * C1299 +
            (C13455 * C1560 + C13451 * C1563 + C13456 * C1561 +
             C13452 * C1564) *
                C1306 +
            (C13455 * C1566 + C13451 * C1569 + C13456 * C1567 +
             C13452 * C1570) *
                C31486) *
               C31357 * C19146) *
              C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C561 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31447 -
             (C13652 + C13653) * C562 - (C13654 + C13655) * C31234) *
                C31357 * C19145 +
            ((C19488 + C19489) * C561 + (C19490 + C19491) * C31447 -
             (C14313 + C14312) * C562 - (C14315 + C14314) * C31234) *
                C31357 * C19146) *
               C258 +
           (((C13660 + C13661) * C562 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C31447 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C561) +
             (C13662 + C13663) * C31234) *
                C31357 * C19145 +
            ((C14317 + C14316) * C562 -
             ((C19492 + C19493) * C31447 + (C19494 + C19495) * C561) +
             (C14319 + C14318) * C31234) *
                C31357 * C19146) *
               C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C561 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31447 -
             (C13668 + C13669) * C562 - (C13670 + C13671) * C31234) *
                C31357 * C19145 +
            ((C19496 + C19497) * C561 + (C19498 + C19499) * C31447 -
             (C14321 + C14320) * C562 - (C14323 + C14322) * C31234) *
                C31357 * C19146) *
               C31470) *
              C31448 +
          ((((C14312 + C14313) * C562 -
             ((C19491 + C19490) * C31447 + (C19489 + C19488) * C561) +
             (C14314 + C14315) * C31234) *
                C31357 * C19145 +
            ((C14751 + C14750) * C562 -
             ((C19504 + C19505) * C31447 + (C19506 + C19507) * C561) +
             (C14753 + C14752) * C31234) *
                C31357 * C19146) *
               C258 +
           (((C19495 + C19494) * C561 + (C19493 + C19492) * C31447 -
             (C14316 + C14317) * C562 - (C14318 + C14319) * C31234) *
                C31357 * C19145 +
            ((C19500 + C19501) * C561 + (C19502 + C19503) * C31447 -
             (C15825 + C15824) * C562 - (C15827 + C15826) * C31234) *
                C31357 * C19146) *
               C259 +
           (((C14320 + C14321) * C562 -
             ((C19499 + C19498) * C31447 + (C19497 + C19496) * C561) +
             (C14322 + C14323) * C31234) *
                C31357 * C19145 +
            ((C13455 * C1166 + C13451 * C1178 + C13456 * C2031 +
              C13452 * C2032) *
                 C562 -
             ((C19508 + C19509) * C31447 + (C19510 + C19511) * C561) +
             (C13455 * C1181 + C13451 * C1193 + C13456 * C2033 +
              C13452 * C2034) *
                 C31234) *
                C31357 * C19146) *
               C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C1303 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C1297 -
            (C13652 + C13653) * C1304 - (C13654 + C13655) * C1298 +
            (C13656 + C13657) * C1305 + (C13658 + C13659) * C1299 -
            (C14568 + C14569) * C1306 - (C14570 + C14571) * C31486) *
               C31357 * C19145 +
           ((C19488 + C19489) * C1303 + (C19490 + C19491) * C1297 -
            (C14313 + C14312) * C1304 - (C14315 + C14314) * C1298 +
            (C14747 + C14746) * C1305 + (C14749 + C14748) * C1299 -
            (C15245 + C15244) * C1306 - (C15247 + C15246) * C31486) *
               C31357 * C19146) *
              C31143 * C31448 +
          (((C14312 + C14313) * C1304 -
            ((C19491 + C19490) * C1297 + (C19489 + C19488) * C1303) +
            (C14314 + C14315) * C1298 - (C14746 + C14747) * C1305 -
            (C14748 + C14749) * C1299 + (C15244 + C15245) * C1306 +
            (C15246 + C15247) * C31486) *
               C31357 * C19145 +
           ((C14751 + C14750) * C1304 -
            ((C19504 + C19505) * C1297 + (C19506 + C19507) * C1303) +
            (C14753 + C14752) * C1298 - (C14755 + C14754) * C1305 -
            (C14757 + C14756) * C1299 +
            (C13455 * C5553 + C13451 * C5557 + C13456 * C6400 +
             C13452 * C6401) *
                C1306 +
            (C13455 * C5558 + C13451 * C5562 + C13456 * C6402 +
             C13452 * C6403) *
                C31486) *
               C31357 * C19146) *
              C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C13455 * C420 + C13451 * C434 + C13456 * C417 + C13452 * C427) *
                C261 +
            (C13455 * C433 + C13451 * C450 + C13456 * C430 + C13452 * C447) *
                C31513 -
            (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
            (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C258 +
          (((C13660 + C13661) * C262 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31513 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C261) +
            (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C262 -
            ((C13456 * C431 + C13452 * C448 + C13455 * C430 + C13451 * C447) *
                 C31513 +
             (C13456 * C418 + C13452 * C428 + C13455 * C417 + C13451 * C427) *
                 C261) +
            (C14319 + C14318) * C31501 - (C15103 + C15102) * C263 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C259 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C261 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31513 -
            (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
            (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C13455 * C418 + C13451 * C428 + C13456 * C419 + C13452 * C429) *
                C261 +
            (C13455 * C431 + C13451 * C448 + C13456 * C432 + C13452 * C449) *
                C31513 -
            (C14321 + C14320) * C262 - (C14323 + C14322) * C31501 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C263 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C420 + C13451 * C434 + C13456 * C417 + C13452 * C427) *
                C116 +
            (C13455 * C433 + C13451 * C450 + C13456 * C430 + C13452 * C447) *
                C31171) *
               C31357 * C19146) *
              C107 -
          (((C13456 * C431 + C13452 * C448 + C13455 * C430 + C13451 * C447) *
                C31171 +
            (C13456 * C418 + C13452 * C428 + C13455 * C417 + C13451 * C427) *
                C116) *
               C31357 * C19146 +
           ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                C31171 +
            (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                C116) *
               C31357 * C19145) *
              C108 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C116 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C418 + C13451 * C428 + C13456 * C419 + C13452 * C429) *
                C116 +
            (C13455 * C431 + C13451 * C448 + C13456 * C432 + C13452 * C449) *
                C31171) *
               C31357 * C19146) *
              C109 -
          (((C13456 * C435 + C13452 * C451 + C13455 * C432 + C13451 * C449) *
                C31171 +
            (C13456 * C421 + C13452 * C436 + C13455 * C419 + C13451 * C429) *
                C116) *
               C31357 * C19146 +
           ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                C31171 +
            (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                C116) *
               C31357 * C19145) *
              C110 +
          (((C13455 * C121 + C13451 * C132 + C13456 * C122 + C13452 * C135) *
                C116 +
            (C13455 * C133 + C13451 * C142 + C13456 * C134 + C13452 * C143) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C421 + C13451 * C436 + C13456 * C667 + C13452 * C668) *
                C116 +
            (C13455 * C435 + C13451 * C451 + C13456 * C669 + C13452 * C670) *
                C31171) *
               C31357 * C19146) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C258 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C259 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C31470) *
              C31514 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C259 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C258 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C31470) *
              C31503 +
          ((((C19507 + C19506) * C116 + (C19505 + C19504) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
              C13452 * C1871) *
                 C116 +
             (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
              C13452 * C1880) *
                 C31171) *
                C31357 * C19146) *
               C258 -
           (((C13456 * C1867 + C13452 * C1879 + C13455 * C1868 +
              C13451 * C1880) *
                 C31171 +
             (C13456 * C1861 + C13452 * C1870 + C13455 * C1862 +
              C13451 * C1871) *
                 C116) *
                C31357 * C19146 +
            ((C19503 + C19502) * C31171 + (C19501 + C19500) * C116) * C31357 *
                C19145) *
               C259 +
           (((C19511 + C19510) * C116 + (C19509 + C19508) * C31171) * C31357 *
                C19145 +
            ((C13455 * C1861 + C13451 * C1870 + C13456 * C2137 +
              C13452 * C2138) *
                 C116 +
             (C13455 * C1867 + C13451 * C1879 + C13456 * C2139 +
              C13452 * C2140) *
                 C31171) *
                C31357 * C19146) *
               C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
            (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
            (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C954 -
            ((C19492 + C19493) * C947 + (C19494 + C19495) * C953) +
            (C14319 + C14318) * C948 - (C15103 + C15102) * C955 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C19496 + C19497) * C953 + (C19498 + C19499) * C947 -
            (C14321 + C14320) * C954 - (C14323 + C14322) * C948 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C955 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C31357 * C19145 +
          ((C19488 + C19489) * C1024 + (C19490 + C19491) * C1018 -
           (C14313 + C14312) * C1025 - (C14315 + C14314) * C1019 +
           (C14747 + C14746) * C1026 + (C14749 + C14748) * C1020 -
           (C15245 + C15244) * C1027 - (C15247 + C15246) * C1021 +
           (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 + C13452 * C5843) *
               C1028 +
           (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 + C13452 * C5845) *
               C1022) *
              C31357 * C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
            (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
            (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31143 * C31514 +
          (((C14312 + C14313) * C954 -
            ((C19491 + C19490) * C947 + (C19489 + C19488) * C953) +
            (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
            (C14748 + C14749) * C31476) *
               C31357 * C19145 +
           ((C14751 + C14750) * C954 -
            ((C19504 + C19505) * C947 + (C19506 + C19507) * C953) +
            (C14753 + C14752) * C948 - (C14755 + C14754) * C955 -
            (C14757 + C14756) * C31476) *
               C31357 * C19146) *
              C31143 * C31503 +
          (((C19507 + C19506) * C953 + (C19505 + C19504) * C947 -
            (C14750 + C14751) * C954 - (C14752 + C14753) * C948 +
            (C14754 + C14755) * C955 + (C14756 + C14757) * C31476) *
               C31357 * C19145 +
           ((C13455 * C1863 + C13451 * C1872 + C13456 * C1862 +
             C13452 * C1871) *
                C953 +
            (C13455 * C1869 + C13451 * C1881 + C13456 * C1868 +
             C13452 * C1880) *
                C947 -
            (C16097 + C16096) * C954 - (C16099 + C16098) * C948 +
            (C13455 * C6242 + C13451 * C6246 + C13456 * C6514 +
             C13452 * C6515) *
                C955 +
            (C13455 * C6245 + C13451 * C6251 + C13456 * C6516 +
             C13452 * C6517) *
                C31476) *
               C31357 * C19146) *
              C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C116 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C31171) *
                C31357 * C19145 +
            ((C19488 + C19489) * C116 + (C19490 + C19491) * C31171) * C31357 *
                C19146) *
               C557 -
           (((C19492 + C19493) * C31171 + (C19494 + C19495) * C116) * C31357 *
                C19146 +
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31171 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C116) *
                C31357 * C19145) *
               C558 +
           (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                 C116 +
             (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                 C31171) *
                C31357 * C19145 +
            ((C19496 + C19497) * C116 + (C19498 + C19499) * C31171) * C31357 *
                C19146) *
               C559 -
           (((C19780 + C19781) * C31171 + (C19782 + C19783) * C116) * C31357 *
                C19146 +
            ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                 C31171 +
             (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                 C116) *
                C31357 * C19145) *
               C31480) *
              C31448 +
          ((((C19495 + C19494) * C116 + (C19493 + C19492) * C31171) * C31357 *
                C19145 +
            ((C19500 + C19501) * C116 + (C19502 + C19503) * C31171) * C31357 *
                C19146) *
               C558 -
           (((C19504 + C19505) * C31171 + (C19506 + C19507) * C116) * C31357 *
                C19146 +
            ((C19491 + C19490) * C31171 + (C19489 + C19488) * C116) * C31357 *
                C19145) *
               C557 -
           (((C19508 + C19509) * C31171 + (C19510 + C19511) * C116) * C31357 *
                C19146 +
            ((C19499 + C19498) * C31171 + (C19497 + C19496) * C116) * C31357 *
                C19145) *
               C559 +
           (((C19783 + C19782) * C116 + (C19781 + C19780) * C31171) * C31357 *
                C19145 +
            ((C13455 * C425 + C13451 * C444 + C13456 * C426 + C13452 * C445) *
                 C116 +
             (C13455 * C443 + C13451 * C455 + C13456 * C446 + C13452 * C456) *
                 C31171) *
                C31357 * C19146) *
               C31480) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                 C953 +
             (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                 C947 -
             (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
             (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
                C31357 * C19145 +
            ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
             (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
             (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
                C31357 * C19146) *
               C31433 +
           (((C13660 + C13661) * C954 -
             ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                  C947 +
              (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                  C953) +
             (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
             (C13666 + C13667) * C31476) *
                C31357 * C19145 +
            ((C14317 + C14316) * C954 -
             ((C19492 + C19493) * C947 + (C19494 + C19495) * C953) +
             (C14319 + C14318) * C948 - (C15103 + C15102) * C955 -
             (C15105 + C15104) * C31476) *
                C31357 * C19146) *
               C31153) *
              C31448 +
          ((((C14312 + C14313) * C954 -
             ((C19491 + C19490) * C947 + (C19489 + C19488) * C953) +
             (C14314 + C14315) * C948 - (C14746 + C14747) * C955 -
             (C14748 + C14749) * C31476) *
                C31357 * C19145 +
            ((C14751 + C14750) * C954 -
             ((C19504 + C19505) * C947 + (C19506 + C19507) * C953) +
             (C14753 + C14752) * C948 - (C14755 + C14754) * C955 -
             (C14757 + C14756) * C31476) *
                C31357 * C19146) *
               C31433 +
           (((C19495 + C19494) * C953 + (C19493 + C19492) * C947 -
             (C14316 + C14317) * C954 - (C14318 + C14319) * C948 +
             (C15102 + C15103) * C955 + (C15104 + C15105) * C31476) *
                C31357 * C19145 +
            ((C19500 + C19501) * C953 + (C19502 + C19503) * C947 -
             (C15825 + C15824) * C954 - (C15827 + C15826) * C948 +
             (C13455 * C1170 + C13451 * C1185 + C13456 * C1171 +
              C13452 * C1186) *
                 C955 +
             (C13455 * C1188 + C13451 * C1197 + C13456 * C1189 +
              C13452 * C1198) *
                 C31476) *
                C31357 * C19146) *
               C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C116 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C420 + C13451 * C434 + C13456 * C417 + C13452 * C427) *
                C116 +
            (C13455 * C433 + C13451 * C450 + C13456 * C430 + C13452 * C447) *
                C31171) *
               C31357 * C19146) *
              C107 -
          (((C13456 * C431 + C13452 * C448 + C13455 * C430 + C13451 * C447) *
                C31171 +
            (C13456 * C418 + C13452 * C428 + C13455 * C417 + C13451 * C427) *
                C116) *
               C31357 * C19146 +
           ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                C31171 +
            (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                C116) *
               C31357 * C19145) *
              C108 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C116 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C418 + C13451 * C428 + C13456 * C419 + C13452 * C429) *
                C116 +
            (C13455 * C431 + C13451 * C448 + C13456 * C432 + C13452 * C449) *
                C31171) *
               C31357 * C19146) *
              C109 -
          (((C13456 * C435 + C13452 * C451 + C13455 * C432 + C13451 * C449) *
                C31171 +
            (C13456 * C421 + C13452 * C436 + C13455 * C419 + C13451 * C429) *
                C116) *
               C31357 * C19146 +
           ((C13456 * C133 + C13452 * C142 + C13455 * C130 + C13451 * C141) *
                C31171 +
            (C13456 * C121 + C13452 * C132 + C13455 * C120 + C13451 * C131) *
                C116) *
               C31357 * C19145) *
              C110 +
          (((C13455 * C121 + C13451 * C132 + C13456 * C122 + C13452 * C135) *
                C116 +
            (C13455 * C133 + C13451 * C142 + C13456 * C134 + C13452 * C143) *
                C31171) *
               C31357 * C19145 +
           ((C13455 * C421 + C13451 * C436 + C13456 * C667 + C13452 * C668) *
                C116 +
            (C13455 * C435 + C13451 * C451 + C13456 * C669 + C13452 * C670) *
                C31171) *
               C31357 * C19146) *
              C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C261 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C31513 -
            (C13652 + C13653) * C262 - (C13654 + C13655) * C31501 +
            (C13656 + C13657) * C263 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C13455 * C420 + C13451 * C434 + C13456 * C417 + C13452 * C427) *
                C261 +
            (C13455 * C433 + C13451 * C450 + C13456 * C430 + C13452 * C447) *
                C31513 -
            (C14313 + C14312) * C262 - (C14315 + C14314) * C31501 +
            (C14747 + C14746) * C263 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C258 +
          (((C13660 + C13661) * C262 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C31513 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C261) +
            (C13662 + C13663) * C31501 - (C13664 + C13665) * C263 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C262 -
            ((C13456 * C431 + C13452 * C448 + C13455 * C430 + C13451 * C447) *
                 C31513 +
             (C13456 * C418 + C13452 * C428 + C13455 * C417 + C13451 * C427) *
                 C261) +
            (C14319 + C14318) * C31501 - (C15103 + C15102) * C263 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C259 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C261 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C31513 -
            (C13668 + C13669) * C262 - (C13670 + C13671) * C31501 +
            (C13672 + C13673) * C263 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C13455 * C418 + C13451 * C428 + C13456 * C419 + C13452 * C429) *
                C261 +
            (C13455 * C431 + C13451 * C448 + C13456 * C432 + C13452 * C449) *
                C31513 -
            (C14321 + C14320) * C262 - (C14323 + C14322) * C31501 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C263 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
                C953 +
            (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
                C947 -
            (C13652 + C13653) * C954 - (C13654 + C13655) * C948 +
            (C13656 + C13657) * C955 + (C13658 + C13659) * C31476) *
               C31357 * C19145 +
           ((C19488 + C19489) * C953 + (C19490 + C19491) * C947 -
            (C14313 + C14312) * C954 - (C14315 + C14314) * C948 +
            (C14747 + C14746) * C955 + (C14749 + C14748) * C31476) *
               C31357 * C19146) *
              C31510 +
          (((C13660 + C13661) * C954 -
            ((C13456 * C129 + C13452 * C140 + C13455 * C128 + C13451 * C139) *
                 C947 +
             (C13456 * C119 + C13452 * C126 + C13455 * C118 + C13451 * C125) *
                 C953) +
            (C13662 + C13663) * C948 - (C13664 + C13665) * C955 -
            (C13666 + C13667) * C31476) *
               C31357 * C19145 +
           ((C14317 + C14316) * C954 -
            ((C19492 + C19493) * C947 + (C19494 + C19495) * C953) +
            (C14319 + C14318) * C948 - (C15103 + C15102) * C955 -
            (C15105 + C15104) * C31476) *
               C31357 * C19146) *
              C31497 +
          (((C13455 * C119 + C13451 * C126 + C13456 * C120 + C13452 * C131) *
                C953 +
            (C13455 * C129 + C13451 * C140 + C13456 * C130 + C13452 * C141) *
                C947 -
            (C13668 + C13669) * C954 - (C13670 + C13671) * C948 +
            (C13672 + C13673) * C955 + (C13674 + C13675) * C31476) *
               C31357 * C19145 +
           ((C19496 + C19497) * C953 + (C19498 + C19499) * C947 -
            (C14321 + C14320) * C954 - (C14323 + C14322) * C948 +
            (C13455 * C1163 + C13451 * C1172 + C13456 * C1457 +
             C13452 * C1458) *
                C955 +
            (C13455 * C1175 + C13451 * C1190 + C13456 * C1459 +
             C13452 * C1460) *
                C31476) *
               C31357 * C19146) *
              C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C117 + C13451 * C124 + C13456 * C118 + C13452 * C125) *
               C1024 +
           (C13455 * C127 + C13451 * C138 + C13456 * C128 + C13452 * C139) *
               C1018 -
           (C13652 + C13653) * C1025 - (C13654 + C13655) * C1019 +
           (C13656 + C13657) * C1026 + (C13658 + C13659) * C1020 -
           (C14568 + C14569) * C1027 - (C14570 + C14571) * C1021 +
           (C14572 + C14573) * C1028 + (C14574 + C14575) * C1022) *
              C31357 * C19145 +
          ((C19488 + C19489) * C1024 + (C19490 + C19491) * C1018 -
           (C14313 + C14312) * C1025 - (C14315 + C14314) * C1019 +
           (C14747 + C14746) * C1026 + (C14749 + C14748) * C1020 -
           (C15245 + C15244) * C1027 - (C15247 + C15246) * C1021 +
           (C13455 * C5552 + C13451 * C5555 + C13456 * C5842 + C13452 * C5843) *
               C1028 +
           (C13455 * C5556 + C13451 * C5561 + C13456 * C5844 + C13452 * C5845) *
               C1022) *
              C31357 * C19146) *
         C31143 * C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C30335 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31230 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C30327 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31237 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C30341 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C2723) *
              C31357 * C31369 * C31148 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C30327 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31230 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C30335) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31237 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C30341 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C2723) *
              C31357 * C31369 * C31156 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C30335 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31230 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C30327 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31237 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C30341 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C2723) *
              C31357 * C31369 * C2726) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C30335 +
            (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
            C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
               C4582 +
           (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
            C4737 * C30341 + C4738 * C2723) *
               C4583 +
           (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
            C5439 * C30341 + C5440 * C2723) *
               C4584) *
              C31369 * C31148 +
          ((C4739 * C30327 -
            ((C4585 * C128 + C31123 * C139) * C31230 +
             (C4585 * C118 + C31123 * C125) * C30335) +
            C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
               C4582 +
           (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
            C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
               C4583 +
           (C4743 * C30327 - (C4742 * C31230 + C4741 * C30335) +
            C4744 * C31237 - C5695 * C30341 - C5696 * C2723) *
               C4584) *
              C31369 * C31156 +
          (((C4585 * C119 + C31123 * C126) * C30335 +
            (C4585 * C129 + C31123 * C140) * C31230 - C4745 * C30327 -
            C4746 * C31237 + C4747 * C30341 + C4748 * C2723) *
               C4582 +
           (C4745 * C30335 + C4746 * C31230 - C4747 * C30327 - C4748 * C31237 +
            C4749 * C30341 + C4750 * C2723) *
               C4583 +
           (C4747 * C30335 + C4748 * C31230 - C4749 * C30327 - C4750 * C31237 +
            (C4585 * C1034 + C31123 * C1043) * C30341 +
            (C4585 * C1046 + C31123 * C1052) * C2723) *
               C4584) *
              C31369 * C2726) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30335 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31230 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C30327 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31237 +
            (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
             C115 * C269 + C103 * C282) *
                C30341 +
            (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
             C115 * C285 + C103 * C299) *
                C2723) *
               C31357 * C31369 * C2459 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C30327 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31230 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30335) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31237 -
            (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
             C113 * C268 + C101 * C281) *
                C30341 -
            (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
             C113 * C284 + C101 * C298) *
                C2723) *
               C31357 * C31369 * C31153) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30327 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31230 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C30335) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31237 -
            (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
             C113 * C1165 + C101 * C1174) *
                C30341 -
            (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
             C113 * C1177 + C101 * C1192) *
                C2723) *
               C31357 * C31369 * C2459 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C30335 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31230 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30327 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31237 +
            (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
             C115 * C1457 + C103 * C1458) *
                C30341 +
            (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
             C115 * C1459 + C103 * C1460) *
                C2723) *
               C31357 * C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C4582 +
            (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
             C4737 * C30341 + C4738 * C2723) *
                C4583 +
            (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
             C5439 * C30341 + C5440 * C2723) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C4582 +
            (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
             C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                C4583 +
            (C4743 * C30327 - (C4742 * C31230 + C4741 * C30335) +
             C4744 * C31237 - C5695 * C30341 - C5696 * C2723) *
                C4584) *
               C31369 * C31153) *
              C31448 +
          (((C5239 * C30327 -
             ((C4585 * C433 + C31123 * C450) * C31230 +
              (C4585 * C420 + C31123 * C434) * C30335) +
             C5240 * C31237 - C5241 * C30341 - C5242 * C2723) *
                C4582 +
            (C5241 * C30327 - (C5240 * C31230 + C5239 * C30335) +
             C5242 * C31237 - C5581 * C30341 - C5582 * C2723) *
                C4583 +
            (C5581 * C30327 - (C5242 * C31230 + C5241 * C30335) +
             C5582 * C31237 - C5959 * C30341 - C5960 * C2723) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C30335 +
             (C4585 * C430 + C31123 * C447) * C31230 - C5243 * C30327 -
             C5244 * C31237 + C5245 * C30341 + C5246 * C2723) *
                C4582 +
            (C5243 * C30335 + C5244 * C31230 - C5245 * C30327 - C5246 * C31237 +
             C5851 * C30341 + C5852 * C2723) *
                C4583 +
            (C5245 * C30335 + C5246 * C31230 - C5851 * C30327 - C5852 * C31237 +
             (C4585 * C5842 + C31123 * C5843) * C30341 +
             (C4585 * C5844 + C31123 * C5845) * C2723) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2461 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31520 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2462 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31516 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C2463 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31506 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C2464 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C2459 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C2462 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31520 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2461) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31516 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C2463 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31506 +
           (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
            C115 * C1307 + C103 * C1308) *
               C2464 +
           (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
            C115 * C1309 + C103 * C1310) *
               C31486) *
              C31357 * C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2355 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2349 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2356 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31519 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C2356 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C2349 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2355) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31234) *
              C31357 * C31369 * C31512 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C2355 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C2349 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C2356 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31234) *
              C31357 * C31369 * C31499 +
          ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
            C115 * C563 + C103 * C564) *
               C2356 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C2349 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C2355) +
           (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
            C115 * C565 + C103 * C566) *
               C31234) *
              C31357 * C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31514 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31503 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C2355 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C2349 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C2356 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C2356 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C2349 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C2355) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
               C4583 +
           (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
               C4584) *
              C31369 * C31519 +
          ((C4739 * C2356 -
            ((C4585 * C128 + C31123 * C139) * C2349 +
             (C4585 * C118 + C31123 * C125) * C2355) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
               C4583 +
           (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
               C4584) *
              C31369 * C31512 +
          (((C4585 * C119 + C31123 * C126) * C2355 +
            (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
               C4583 +
           (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
               C4584) *
              C31369 * C31499 +
          ((C4967 * C2356 -
            ((C4585 * C130 + C31123 * C141) * C2349 +
             (C4585 * C120 + C31123 * C131) * C2355) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C2356 - (C4968 * C2349 + C4967 * C2355) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C2356 -
            (C4970 * C2349 + C4969 * C2355) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C2459 +
          ((C4739 * C2462 -
            ((C4585 * C128 + C31123 * C139) * C31520 +
             (C4585 * C118 + C31123 * C125) * C2461) +
            C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C2462 - (C4740 * C31520 + C4739 * C2461) + C4742 * C31516 -
            C4743 * C2463 - C4744 * C31506 + C5695 * C2464 + C5696 * C31486) *
               C4583 +
           (C4743 * C2462 - (C4742 * C31520 + C4741 * C2461) + C4744 * C31516 -
            C5695 * C2463 - C5696 * C31506 +
            (C4585 * C5686 + C31123 * C5687) * C2464 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31514 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31503 +
          ((((C4585 * C422 + C31123 * C437) * C2355 +
             (C4585 * C440 + C31123 * C452) * C2349 - C5583 * C2356 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C2355 + C5584 * C2349 - C5585 * C2356 - C5586 * C31234) *
                C4583 +
            (C5585 * C2355 + C5586 * C2349 - C5587 * C2356 - C5588 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C6413 * C2356 -
             ((C4585 * C441 + C31123 * C453) * C2349 +
              (C4585 * C423 + C31123 * C438) * C2355) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C2356 - (C6414 * C2349 + C6413 * C2355) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C2356 -
             (C6416 * C2349 + C6415 * C2355) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C2355 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C2349 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C2356 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C2726) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C2356 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C2349 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C2355) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31148 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31156 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C4583 +
            (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
                C4584) *
               C31369 * C2726) *
              C31448 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31148 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31156 +
           ((C5247 * C2356 -
             ((C4585 * C431 + C31123 * C448) * C2349 +
              (C4585 * C418 + C31123 * C428) * C2355) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C2356 - (C5248 * C2349 + C5247 * C2355) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C2356 -
             (C5250 * C2349 + C5249 * C2355) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2355 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2349 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2356 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31519 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C2356 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C2349 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2355) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31234) *
              C31357 * C31369 * C31512 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C2355 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C2349 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C2356 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31234) *
              C31357 * C31369 * C31499 +
          ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
            C115 * C563 + C103 * C564) *
               C2356 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C2349 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C2355) +
           (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
            C115 * C565 + C103 * C566) *
               C31234) *
              C31357 * C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2461 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31520 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2462 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31516 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C2463 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31506 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C2464 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C2459 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C2462 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31520 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2461) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31516 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C2463 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31506 +
           (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
            C115 * C1307 + C103 * C1308) *
               C2464 +
           (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
            C115 * C1309 + C103 * C1310) *
               C31486) *
              C31357 * C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
               C4583 +
           (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
               C4584) *
              C31369 * C31519 +
          ((C4739 * C2356 -
            ((C4585 * C128 + C31123 * C139) * C2349 +
             (C4585 * C118 + C31123 * C125) * C2355) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
               C4583 +
           (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
               C4584) *
              C31369 * C31512 +
          (((C4585 * C119 + C31123 * C126) * C2355 +
            (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
               C4583 +
           (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
               C4584) *
              C31369 * C31499 +
          ((C4967 * C2356 -
            ((C4585 * C130 + C31123 * C141) * C2349 +
             (C4585 * C120 + C31123 * C131) * C2355) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C2356 - (C4968 * C2349 + C4967 * C2355) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C2356 -
            (C4970 * C2349 + C4969 * C2355) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C2459 +
          ((C4739 * C2462 -
            ((C4585 * C128 + C31123 * C139) * C31520 +
             (C4585 * C118 + C31123 * C125) * C2461) +
            C4740 * C31516 - C4741 * C2463 - C4742 * C31506 + C4743 * C2464 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C2462 - (C4740 * C31520 + C4739 * C2461) + C4742 * C31516 -
            C4743 * C2463 - C4744 * C31506 + C5695 * C2464 + C5696 * C31486) *
               C4583 +
           (C4743 * C2462 - (C4742 * C31520 + C4741 * C2461) + C4744 * C31516 -
            C5695 * C2463 - C5696 * C31506 +
            (C4585 * C5686 + C31123 * C5687) * C2464 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30335 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31230 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C30327 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31237 +
            (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
             C115 * C269 + C103 * C282) *
                C30341 +
            (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
             C115 * C285 + C103 * C299) *
                C2723) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C30327 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31230 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30335) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31237 -
            (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
             C113 * C268 + C101 * C281) *
                C30341 -
            (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
             C113 * C284 + C101 * C298) *
                C2723) *
               C31357 * C31369 * C31153) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30327 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31230 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C30335) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31237 -
            (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
             C113 * C1165 + C101 * C1174) *
                C30341 -
            (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
             C113 * C1177 + C101 * C1192) *
                C2723) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C30335 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31230 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30327 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31237 +
            (C113 * C1164 + C101 * C1173 + C114 * C1163 + C102 * C1172 +
             C115 * C1457 + C103 * C1458) *
                C30341 +
            (C113 * C1176 + C101 * C1191 + C114 * C1175 + C102 * C1190 +
             C115 * C1459 + C103 * C1460) *
                C2723) *
               C31357 * C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C30335 +
             (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
             C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
                C4582 +
            (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
             C4737 * C30341 + C4738 * C2723) *
                C4583 +
            (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
             C5439 * C30341 + C5440 * C2723) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C30327 -
             ((C4585 * C128 + C31123 * C139) * C31230 +
              (C4585 * C118 + C31123 * C125) * C30335) +
             C4740 * C31237 - C4741 * C30341 - C4742 * C2723) *
                C4582 +
            (C4741 * C30327 - (C4740 * C31230 + C4739 * C30335) +
             C4742 * C31237 - C4743 * C30341 - C4744 * C2723) *
                C4583 +
            (C4743 * C30327 - (C4742 * C31230 + C4741 * C30335) +
             C4744 * C31237 - C5695 * C30341 - C5696 * C2723) *
                C4584) *
               C31369 * C31153) *
              C3120 +
          (((C5239 * C30327 -
             ((C4585 * C433 + C31123 * C450) * C31230 +
              (C4585 * C420 + C31123 * C434) * C30335) +
             C5240 * C31237 - C5241 * C30341 - C5242 * C2723) *
                C4582 +
            (C5241 * C30327 - (C5240 * C31230 + C5239 * C30335) +
             C5242 * C31237 - C5581 * C30341 - C5582 * C2723) *
                C4583 +
            (C5581 * C30327 - (C5242 * C31230 + C5241 * C30335) +
             C5582 * C31237 - C5959 * C30341 - C5960 * C2723) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C30335 +
             (C4585 * C430 + C31123 * C447) * C31230 - C5243 * C30327 -
             C5244 * C31237 + C5245 * C30341 + C5246 * C2723) *
                C4582 +
            (C5243 * C30335 + C5244 * C31230 - C5245 * C30327 - C5246 * C31237 +
             C5851 * C30341 + C5852 * C2723) *
                C4583 +
            (C5245 * C30335 + C5246 * C31230 - C5851 * C30327 - C5852 * C31237 +
             (C4585 * C5842 + C31123 * C5843) * C30341 +
             (C4585 * C5844 + C31123 * C5845) * C2723) *
                C4584) *
               C31369 * C31153) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C30335 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31230 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C30327 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31237 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C30341 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C2723) *
              C31357 * C31369 * C31143 * C31272 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C30327 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31230 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C30335) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31237 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C30341 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C2723) *
              C31357 * C31369 * C31143 * C31279 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C30335 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31230 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C30327 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31237 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C30341 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C2723) *
              C31357 * C31369 * C31143 * C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C30335 +
            (C4585 * C127 + C31123 * C138) * C31230 - C4733 * C30327 -
            C4734 * C31237 + C4735 * C30341 + C4736 * C2723) *
               C4582 +
           (C4733 * C30335 + C4734 * C31230 - C4735 * C30327 - C4736 * C31237 +
            C4737 * C30341 + C4738 * C2723) *
               C4583 +
           (C4735 * C30335 + C4736 * C31230 - C4737 * C30327 - C4738 * C31237 +
            C5439 * C30341 + C5440 * C2723) *
               C4584) *
              C31369 * C31143 * C31272 +
          ((C5239 * C30327 -
            ((C4585 * C433 + C31123 * C450) * C31230 +
             (C4585 * C420 + C31123 * C434) * C30335) +
            C5240 * C31237 - C5241 * C30341 - C5242 * C2723) *
               C4582 +
           (C5241 * C30327 - (C5240 * C31230 + C5239 * C30335) +
            C5242 * C31237 - C5581 * C30341 - C5582 * C2723) *
               C4583 +
           (C5581 * C30327 - (C5242 * C31230 + C5241 * C30335) +
            C5582 * C31237 - C5959 * C30341 - C5960 * C2723) *
               C4584) *
              C31369 * C31143 * C31279 +
          (((C4585 * C422 + C31123 * C437) * C30335 +
            (C4585 * C440 + C31123 * C452) * C31230 - C5583 * C30327 -
            C5584 * C31237 + C5585 * C30341 + C5586 * C2723) *
               C4582 +
           (C5583 * C30335 + C5584 * C31230 - C5585 * C30327 - C5586 * C31237 +
            C5587 * C30341 + C5588 * C2723) *
               C4583 +
           (C5585 * C30335 + C5586 * C31230 - C5587 * C30327 - C5588 * C31237 +
            (C4585 * C5554 + C31123 * C5559) * C30341 +
            (C4585 * C5560 + C31123 * C5563) * C2723) *
               C4584) *
              C31369 * C31143 * C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2461 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31520 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2462 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31516 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C2463 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31506 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C2464 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31143 * C3120 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2462 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31520 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C2461) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31516 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C2463 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31506 +
           (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
            C115 * C1561 + C103 * C1564) *
               C2464 +
           (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
            C115 * C1567 + C103 * C1570) *
               C31486) *
              C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31510 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31497 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C2355 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C2349 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C2356 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C31470) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31510 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31497 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C2356 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C2349 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C2355) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2355 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2349 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2356 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31143 * C31521 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2356 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C2349 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C2355) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31234) *
              C31357 * C31369 * C31143 * C31518 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C2355 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C2349 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C2356 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31234) *
              C31357 * C31369 * C31143 * C31509 +
          ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C2356 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C2349 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C2355) +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31234) *
              C31357 * C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31510 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C4583 +
            (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C3120 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31510 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31497 +
           ((C5247 * C2356 -
             ((C4585 * C431 + C31123 * C448) * C2349 +
              (C4585 * C418 + C31123 * C428) * C2355) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C2356 - (C5248 * C2349 + C5247 * C2355) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C2356 -
             (C5250 * C2349 + C5249 * C2355) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C3120 +
          ((C5239 * C2462 -
            ((C4585 * C433 + C31123 * C450) * C31520 +
             (C4585 * C420 + C31123 * C434) * C2461) +
            C5240 * C31516 - C5241 * C2463 - C5242 * C31506 + C5581 * C2464 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C2462 - (C5240 * C31520 + C5239 * C2461) + C5242 * C31516 -
            C5581 * C2463 - C5582 * C31506 + C5959 * C2464 + C5960 * C31486) *
               C4583 +
           (C5581 * C2462 - (C5242 * C31520 + C5241 * C2461) + C5582 * C31516 -
            C5959 * C2463 - C5960 * C31506 +
            (C4585 * C5950 + C31123 * C5951) * C2464 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2355 +
            (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
               C4583 +
           (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
               C4584) *
              C31369 * C31143 * C31521 +
          ((C5239 * C2356 -
            ((C4585 * C433 + C31123 * C450) * C2349 +
             (C4585 * C420 + C31123 * C434) * C2355) +
            C5240 * C31234) *
               C4582 +
           (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
               C4583 +
           (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
               C4584) *
              C31369 * C31143 * C31518 +
          (((C4585 * C422 + C31123 * C437) * C2355 +
            (C4585 * C440 + C31123 * C452) * C2349 - C5583 * C2356 -
            C5584 * C31234) *
               C4582 +
           (C5583 * C2355 + C5584 * C2349 - C5585 * C2356 - C5586 * C31234) *
               C4583 +
           (C5585 * C2355 + C5586 * C2349 - C5587 * C2356 - C5588 * C31234) *
               C4584) *
              C31369 * C31143 * C31509 +
          ((C6629 * C2356 -
            ((C4585 * C1869 + C31123 * C1881) * C2349 +
             (C4585 * C1863 + C31123 * C1872) * C2355) +
            C6630 * C31234) *
               C4582 +
           (C6631 * C2356 - (C6630 * C2349 + C6629 * C2355) + C6632 * C31234) *
               C4583 +
           ((C4585 * C6616 + C31123 * C6617) * C2356 -
            (C6632 * C2349 + C6631 * C2355) +
            (C4585 * C6618 + C31123 * C6619) * C31234) *
               C4584) *
              C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31272 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31279 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C2355 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C2349 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C2356 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C2356 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C2349 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C2355) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31272 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31279 +
          ((((C4585 * C422 + C31123 * C437) * C2355 +
             (C4585 * C440 + C31123 * C452) * C2349 - C5583 * C2356 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C2355 + C5584 * C2349 - C5585 * C2356 - C5586 * C31234) *
                C4583 +
            (C5585 * C2355 + C5586 * C2349 - C5587 * C2356 - C5588 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C6413 * C2356 -
             ((C4585 * C441 + C31123 * C453) * C2349 +
              (C4585 * C423 + C31123 * C438) * C2355) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C2356 - (C6414 * C2349 + C6413 * C2355) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C2356 -
             (C6416 * C2349 + C6415 * C2355) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C2355 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C2349 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C2356 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31510 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C2356 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C2349 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C2355) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31497 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C2355 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C2349 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C2356 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C31470) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C2356 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C2349 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C2355) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31510 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C2355 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C2349 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C2356 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31497 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C2356 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C2349 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C2355) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2461 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31520 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C2462 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31516 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C2463 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31506 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C2464 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31143 * C3120 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2462 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31520 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C2461) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31516 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C2463 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31506 +
           (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
            C115 * C1561 + C103 * C1564) *
               C2464 +
           (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
            C115 * C1567 + C103 * C1570) *
               C31486) *
              C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C2355 +
             (C4585 * C127 + C31123 * C138) * C2349 - C4733 * C2356 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C2355 + C4734 * C2349 - C4735 * C2356 - C4736 * C31234) *
                C4583 +
            (C4735 * C2355 + C4736 * C2349 - C4737 * C2356 - C4738 * C31234) *
                C4584) *
               C31369 * C31510 +
           ((C4739 * C2356 -
             ((C4585 * C128 + C31123 * C139) * C2349 +
              (C4585 * C118 + C31123 * C125) * C2355) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C2356 - (C4740 * C2349 + C4739 * C2355) + C4742 * C31234) *
                C4583 +
            (C4743 * C2356 - (C4742 * C2349 + C4741 * C2355) + C4744 * C31234) *
                C4584) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C2355 +
             (C4585 * C129 + C31123 * C140) * C2349 - C4745 * C2356 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C2355 + C4746 * C2349 - C4747 * C2356 - C4748 * C31234) *
                C4583 +
            (C4747 * C2355 + C4748 * C2349 - C4749 * C2356 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C3120 +
          (((C5239 * C2356 -
             ((C4585 * C433 + C31123 * C450) * C2349 +
              (C4585 * C420 + C31123 * C434) * C2355) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C2356 - (C5240 * C2349 + C5239 * C2355) + C5242 * C31234) *
                C4583 +
            (C5581 * C2356 - (C5242 * C2349 + C5241 * C2355) + C5582 * C31234) *
                C4584) *
               C31369 * C31510 +
           (((C4585 * C417 + C31123 * C427) * C2355 +
             (C4585 * C430 + C31123 * C447) * C2349 - C5243 * C2356 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C2355 + C5244 * C2349 - C5245 * C2356 - C5246 * C31234) *
                C4583 +
            (C5245 * C2355 + C5246 * C2349 - C5851 * C2356 - C5852 * C31234) *
                C4584) *
               C31369 * C31497 +
           ((C5247 * C2356 -
             ((C4585 * C431 + C31123 * C448) * C2349 +
              (C4585 * C418 + C31123 * C428) * C2355) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C2356 - (C5248 * C2349 + C5247 * C2355) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C2356 -
             (C5250 * C2349 + C5249 * C2355) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C2461 +
            (C4585 * C127 + C31123 * C138) * C31520 - C4733 * C2462 -
            C4734 * C31516 + C4735 * C2463 + C4736 * C31506 - C4737 * C2464 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C2461 + C4734 * C31520 - C4735 * C2462 - C4736 * C31516 +
            C4737 * C2463 + C4738 * C31506 - C5439 * C2464 - C5440 * C31486) *
               C4583 +
           (C4735 * C2461 + C4736 * C31520 - C4737 * C2462 - C4738 * C31516 +
            C5439 * C2463 + C5440 * C31506 - C5441 * C2464 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C3120 +
          ((C5239 * C2462 -
            ((C4585 * C433 + C31123 * C450) * C31520 +
             (C4585 * C420 + C31123 * C434) * C2461) +
            C5240 * C31516 - C5241 * C2463 - C5242 * C31506 + C5581 * C2464 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C2462 - (C5240 * C31520 + C5239 * C2461) + C5242 * C31516 -
            C5581 * C2463 - C5582 * C31506 + C5959 * C2464 + C5960 * C31486) *
               C4583 +
           (C5581 * C2462 - (C5242 * C31520 + C5241 * C2461) + C5582 * C31516 -
            C5959 * C2463 - C5960 * C31506 +
            (C4585 * C5950 + C31123 * C5951) * C2464 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1303 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1297 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C1304 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C1298 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C1305 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C1299 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C1306 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31433 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C1304 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C1297 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C1303) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C1298 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C1305 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C1299 +
           (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
            C115 * C1307 + C103 * C1308) *
               C1306 +
           (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
            C115 * C1309 + C103 * C1310) *
               C31486) *
              C31357 * C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C561 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31447 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C562 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C557 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C562 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31447 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C561) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31234) *
              C31357 * C31369 * C558 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C561 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31447 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C562 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31234) *
              C31357 * C31369 * C559 +
          ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
            C115 * C563 + C103 * C564) *
               C562 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31447 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C561) +
           (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
            C115 * C565 + C103 * C566) *
               C31234) *
              C31357 * C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C1681 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C1682 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C561 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31447 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C562 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C31433 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C562 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C31447 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C561) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
               C4583 +
           (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
               C4584) *
              C31369 * C557 +
          ((C4739 * C562 -
            ((C4585 * C128 + C31123 * C139) * C31447 +
             (C4585 * C118 + C31123 * C125) * C561) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
               C4583 +
           (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
               C4584) *
              C31369 * C558 +
          (((C4585 * C119 + C31123 * C126) * C561 +
            (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
               C4583 +
           (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
               C4584) *
              C31369 * C559 +
          ((C4967 * C562 -
            ((C4585 * C130 + C31123 * C141) * C31447 +
             (C4585 * C120 + C31123 * C131) * C561) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C562 - (C4968 * C31447 + C4967 * C561) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C562 -
            (C4970 * C31447 + C4969 * C561) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31433 +
          ((C4739 * C1304 -
            ((C4585 * C128 + C31123 * C139) * C1297 +
             (C4585 * C118 + C31123 * C125) * C1303) +
            C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C1304 - (C4740 * C1297 + C4739 * C1303) + C4742 * C1298 -
            C4743 * C1305 - C4744 * C1299 + C5695 * C1306 + C5696 * C31486) *
               C4583 +
           (C4743 * C1304 - (C4742 * C1297 + C4741 * C1303) + C4744 * C1298 -
            C5695 * C1305 - C5696 * C1299 +
            (C4585 * C5686 + C31123 * C5687) * C1306 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C1681 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
                C4584) *
               C31369 * C31433 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 - C5851 * C562 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C1682 +
          ((((C4585 * C422 + C31123 * C437) * C561 +
             (C4585 * C440 + C31123 * C452) * C31447 - C5583 * C562 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C561 + C5584 * C31447 - C5585 * C562 - C5586 * C31234) *
                C4583 +
            (C5585 * C561 + C5586 * C31447 - C5587 * C562 - C5588 * C31234) *
                C4584) *
               C31369 * C31433 +
           ((C6413 * C562 -
             ((C4585 * C441 + C31123 * C453) * C31447 +
              (C4585 * C423 + C31123 * C438) * C561) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C562 - (C6414 * C31447 + C6413 * C561) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C562 -
             (C6416 * C31447 + C6415 * C561) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1303 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1297 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C1304 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C1298 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C1305 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C1299 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C1306 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31143 * C31448 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C1304 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C1297 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C1303) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C1298 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C1305 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C1299 +
           (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
            C115 * C1561 + C103 * C1564) *
               C1306 +
           (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
            C115 * C1567 + C103 * C1570) *
               C31486) *
              C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C258 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C259 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C561 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31447 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C562 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C258 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C259 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C562 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C31447 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C561) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C561 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31447 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C562 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C31143 * C2133 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C562 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31447 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C561) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31234) *
              C31357 * C31369 * C31143 * C2134 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C561 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31447 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C562 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31234) *
              C31357 * C31369 * C31143 * C2135 +
          ((C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C562 -
           ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
             C113 * C1869 + C101 * C1881) *
                C31447 +
            (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
             C113 * C1863 + C101 * C1872) *
                C561) +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31234) *
              C31357 * C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C258 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C4583 +
            (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C31448 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            ((C4585 * C1559 + C31123 * C1562) * C562 -
             (C5242 * C31447 + C5241 * C561) +
             (C4585 * C1565 + C31123 * C1568) * C31234) *
                C4584) *
               C31369 * C258 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 -
             (C4585 * C1560 + C31123 * C1563) * C562 -
             (C4585 * C1566 + C31123 * C1569) * C31234) *
                C4584) *
               C31369 * C259 +
           ((C5247 * C562 -
             ((C4585 * C431 + C31123 * C448) * C31447 +
              (C4585 * C418 + C31123 * C428) * C561) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C562 - (C5248 * C31447 + C5247 * C561) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C562 -
             (C5250 * C31447 + C5249 * C561) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C31448 +
          ((C5239 * C1304 -
            ((C4585 * C433 + C31123 * C450) * C1297 +
             (C4585 * C420 + C31123 * C434) * C1303) +
            C5240 * C1298 - C5241 * C1305 - C5242 * C1299 + C5581 * C1306 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C1304 - (C5240 * C1297 + C5239 * C1303) + C5242 * C1298 -
            C5581 * C1305 - C5582 * C1299 + C5959 * C1306 + C5960 * C31486) *
               C4583 +
           (C5581 * C1304 - (C5242 * C1297 + C5241 * C1303) + C5582 * C1298 -
            C5959 * C1305 - C5960 * C1299 +
            (C4585 * C5950 + C31123 * C5951) * C1306 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
               C4583 +
           (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
               C4584) *
              C31369 * C31143 * C2133 +
          ((C5239 * C562 -
            ((C4585 * C433 + C31123 * C450) * C31447 +
             (C4585 * C420 + C31123 * C434) * C561) +
            C5240 * C31234) *
               C4582 +
           (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
               C4583 +
           (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
               C4584) *
              C31369 * C31143 * C2134 +
          (((C4585 * C422 + C31123 * C437) * C561 +
            (C4585 * C440 + C31123 * C452) * C31447 - C5583 * C562 -
            C5584 * C31234) *
               C4582 +
           (C5583 * C561 + C5584 * C31447 - C5585 * C562 - C5586 * C31234) *
               C4583 +
           (C5585 * C561 + C5586 * C31447 - C5587 * C562 - C5588 * C31234) *
               C4584) *
              C31369 * C31143 * C2135 +
          ((C6629 * C562 -
            ((C4585 * C1869 + C31123 * C1881) * C31447 +
             (C4585 * C1863 + C31123 * C1872) * C561) +
            C6630 * C31234) *
               C4582 +
           (C6631 * C562 - (C6630 * C31447 + C6629 * C561) + C6632 * C31234) *
               C4583 +
           ((C4585 * C6616 + C31123 * C6617) * C562 -
            (C6632 * C31447 + C6631 * C561) +
            (C4585 * C6618 + C31123 * C6619) * C31234) *
               C4584) *
              C31369 * C31143 * C31492)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31171) *
                  C31357 * C31369 * C107 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31171 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31357 * C31369 * C108 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31171) *
                  C31357 * C31369 * C109 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31171 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31357 * C31369 * C110 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31171) *
                  C31357 * C31369 * C111) *
             C31189 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C261 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31513 -
               (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                C113 * C266 + C101 * C276) *
                   C262 -
               (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                C113 * C279 + C101 * C296) *
                   C31501 +
               (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                C115 * C269 + C103 * C282) *
                   C263 +
               (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                C115 * C285 + C103 * C299) *
                   C31476) *
                  C31357 * C31369 * C258 +
              ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                C115 * C270 + C103 * C286) *
                   C262 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31513 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C261) +
               (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                C115 * C287 + C103 * C300) *
                   C31501 -
               (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                C113 * C268 + C101 * C281) *
                   C263 -
               (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                C113 * C284 + C101 * C298) *
                   C31476) *
                  C31357 * C31369 * C259 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C261 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31513 -
               (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
                C113 * C264 + C101 * C274) *
                   C262 -
               (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
                C113 * C277 + C101 * C294) *
                   C31501 +
               (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
                C115 * C273 + C103 * C292) *
                   C263 +
               (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
                C115 * C293 + C103 * C303) *
                   C31476) *
                  C31357 * C31369 * C31470) *
             C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C258 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C259 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31514 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C259 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C258 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C31470) *
              C31503 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C258 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C259 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31143 * C31514 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C954 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C947 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C953) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C948 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C955 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31476) *
              C31357 * C31369 * C31143 * C31503 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C953 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C947 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C954 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C948 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C955 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C31476) *
              C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C31510 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C31497 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C31470) *
              C1681 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C31497 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C31510 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C31470) *
              C1682 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C31510 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C31497 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31143 * C1681 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C262 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31513 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C261) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31501 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C263 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31476) *
              C31357 * C31369 * C31143 * C1682 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C261 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31513 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C262 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31501 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C263 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C31476) *
              C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31171) *
              C31357 * C31369 * C31143 * C1856 -
          ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
            C113 * C433 + C101 * C450) *
               C31171 +
           (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
            C113 * C420 + C101 * C434) *
               C116) *
              C31357 * C31369 * C31143 * C1857 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C116 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31171) *
              C31357 * C31369 * C31143 * C1858 -
          ((C115 * C1867 + C103 * C1879 + C114 * C1868 + C102 * C1880 +
            C113 * C1869 + C101 * C1881) *
               C31171 +
           (C115 * C1861 + C103 * C1870 + C114 * C1862 + C102 * C1871 +
            C113 * C1863 + C101 * C1872) *
               C116) *
              C31357 * C31369 * C31143 * C1859 +
          ((C113 * C1864 + C101 * C1873 + C114 * C1865 + C102 * C1874 +
            C115 * C1866 + C103 * C1875) *
               C116 +
           (C113 * C1876 + C101 * C1882 + C114 * C1877 + C102 * C1883 +
            C115 * C1878 + C103 * C1884) *
               C31171) *
              C31357 * C31369 * C31143 * C1860)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C258 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C31514 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            ((C4585 * C818 + C31123 * C823) * C116 +
             (C4585 * C826 + C31123 * C833) * C31171) *
                C4583 +
            ((C4585 * C1164 + C31123 * C1173) * C116 +
             (C4585 * C1176 + C31123 * C1191) * C31171) *
                C4584) *
               C31369 * C259 -
           (((C4585 * C1177 + C31123 * C1192) * C31171 +
             (C4585 * C1165 + C31123 * C1174) * C116) *
                C4584 +
            ((C4585 * C825 + C31123 * C832) * C31171 +
             (C4585 * C817 + C31123 * C822) * C116) *
                C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C258 -
           (((C4585 * C1175 + C31123 * C1190) * C31171 +
             (C4585 * C1163 + C31123 * C1172) * C116) *
                C4584 +
            ((C4585 * C827 + C31123 * C834) * C31171 +
             (C4585 * C819 + C31123 * C824) * C116) *
                C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C31503 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            ((C4585 * C1168 + C31123 * C1180) * C116 +
             (C4585 * C1183 + C31123 * C1195) * C31171) *
                C4583 +
            ((C4585 * C1169 + C31123 * C1184) * C116 +
             (C4585 * C1187 + C31123 * C1196) * C31171) *
                C4584) *
               C31369 * C258 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            C5439 * C955 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C31514 +
          ((C5239 * C954 -
            ((C4585 * C433 + C31123 * C450) * C947 +
             (C4585 * C420 + C31123 * C434) * C953) +
            C5240 * C948 - C5241 * C955 - C5242 * C31476) *
               C4582 +
           (C5241 * C954 - (C5240 * C947 + C5239 * C953) + C5242 * C948 -
            C5581 * C955 - C5582 * C31476) *
               C4583 +
           (C5581 * C954 - (C5242 * C947 + C5241 * C953) + C5582 * C948 -
            (C4585 * C5552 + C31123 * C5555) * C955 -
            (C4585 * C5556 + C31123 * C5561) * C31476) *
               C4584) *
              C31369 * C31143 * C31503 +
          (((C4585 * C422 + C31123 * C437) * C953 +
            (C4585 * C440 + C31123 * C452) * C947 - C5583 * C954 -
            C5584 * C948 + C5585 * C955 + C5586 * C31476) *
               C4582 +
           (C5583 * C953 + C5584 * C947 - C5585 * C954 - C5586 * C948 +
            C5587 * C955 + C5588 * C31476) *
               C4583 +
           (C5585 * C953 + C5586 * C947 - C5587 * C954 - C5588 * C948 +
            (C4585 * C5554 + C31123 * C5559) * C955 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31510 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C1681 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31497 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31510 -
           ((C5250 * C31171 + C5249 * C116) * C4584 +
            (C5248 * C31171 + C5247 * C116) * C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C1682 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C31510 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            C5439 * C263 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C1681 +
          ((C5239 * C262 -
            ((C4585 * C433 + C31123 * C450) * C31513 +
             (C4585 * C420 + C31123 * C434) * C261) +
            C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
               C4582 +
           (C5241 * C262 - (C5240 * C31513 + C5239 * C261) + C5242 * C31501 -
            C5581 * C263 - C5582 * C31476) *
               C4583 +
           (C5581 * C262 - (C5242 * C31513 + C5241 * C261) + C5582 * C31501 -
            C5959 * C263 - C5960 * C31476) *
               C4584) *
              C31369 * C31143 * C1682 +
          (((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C4582 +
           (C5583 * C261 + C5584 * C31513 - C5585 * C262 - C5586 * C31501 +
            C5587 * C263 + C5588 * C31476) *
               C4583 +
           (C5585 * C261 + C5586 * C31513 - C5587 * C262 - C5588 * C31501 +
            (C4585 * C5554 + C31123 * C5559) * C263 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           (C4733 * C116 + C4734 * C31171) * C4583 +
           (C4735 * C116 + C4736 * C31171) * C4584) *
              C31369 * C31143 * C1856 -
          ((C5242 * C31171 + C5241 * C116) * C4584 +
           (C5240 * C31171 + C5239 * C116) * C4583 +
           ((C4585 * C433 + C31123 * C450) * C31171 +
            (C4585 * C420 + C31123 * C434) * C116) *
               C4582) *
              C31369 * C31143 * C1857 +
          (((C4585 * C422 + C31123 * C437) * C116 +
            (C4585 * C440 + C31123 * C452) * C31171) *
               C4582 +
           (C5583 * C116 + C5584 * C31171) * C4583 +
           (C5585 * C116 + C5586 * C31171) * C4584) *
              C31369 * C31143 * C1858 -
          (((C4585 * C6245 + C31123 * C6251) * C31171 +
            (C4585 * C6242 + C31123 * C6246) * C116) *
               C4584 +
           ((C4585 * C2245 + C31123 * C2248) * C31171 +
            (C4585 * C2239 + C31123 * C2242) * C116) *
               C4583 +
           ((C4585 * C1869 + C31123 * C1881) * C31171 +
            (C4585 * C1863 + C31123 * C1872) * C116) *
               C4582) *
              C31369 * C31143 * C1859 +
          (((C4585 * C1864 + C31123 * C1873) * C116 +
            (C4585 * C1876 + C31123 * C1882) * C31171) *
               C4582 +
           ((C4585 * C6243 + C31123 * C6247) * C116 +
            (C4585 * C6248 + C31123 * C6252) * C31171) *
               C4583 +
           ((C4585 * C6244 + C31123 * C6249) * C116 +
            (C4585 * C6250 + C31123 * C6253) * C31171) *
               C4584) *
              C31369 * C31143 * C1860)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C953 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C947 -
                     (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                      C113 * C266 + C101 * C276) *
                         C954 -
                     (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                      C113 * C279 + C101 * C296) *
                         C948 +
                     (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                      C115 * C269 + C103 * C282) *
                         C955 +
                     (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                      C115 * C285 + C103 * C299) *
                         C31476) *
                        C31357 * C31369 * C31433 +
                    ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                      C115 * C270 + C103 * C286) *
                         C954 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C947 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C953) +
                     (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                      C115 * C287 + C103 * C300) *
                         C948 -
                     (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                      C113 * C268 + C101 * C281) *
                         C955 -
                     (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                      C113 * C284 + C101 * C298) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C31448 +
                   (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                      C115 * C819 + C103 * C824) *
                         C954 -
                     ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                       C113 * C433 + C101 * C450) *
                          C947 +
                      (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                       C113 * C420 + C101 * C434) *
                          C953) +
                     (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                      C115 * C827 + C103 * C834) *
                         C948 -
                     (C115 * C1163 + C103 * C1172 + C114 * C1164 +
                      C102 * C1173 + C113 * C1165 + C101 * C1174) *
                         C955 -
                     (C115 * C1175 + C103 * C1190 + C114 * C1176 +
                      C102 * C1191 + C113 * C1177 + C101 * C1192) *
                         C31476) *
                        C31357 * C31369 * C31433 +
                    ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C953 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C947 -
                     (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                      C113 * C818 + C101 * C823) *
                         C954 -
                     (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                      C113 * C826 + C101 * C833) *
                         C948 +
                     (C113 * C1164 + C101 * C1173 + C114 * C1163 +
                      C102 * C1172 + C115 * C1457 + C103 * C1458) *
                         C955 +
                     (C113 * C1176 + C101 * C1191 + C114 * C1175 +
                      C102 * C1190 + C115 * C1459 + C103 * C1460) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C557 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C558 +
                    ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31171) *
                        C31357 * C31369 * C559 -
                    ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                      C113 * C130 + C101 * C141) *
                         C31171 +
                     (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                      C113 * C120 + C101 * C131) *
                         C116) *
                        C31357 * C31369 * C31480) *
                       C31448 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C558 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C557 -
                    ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                      C113 * C431 + C101 * C448) *
                         C31171 +
                     (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                      C113 * C418 + C101 * C428) *
                         C116) *
                        C31357 * C31369 * C559 +
                    ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                      C115 * C667 + C103 * C668) *
                         C116 +
                     (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                      C115 * C669 + C103 * C670) *
                         C31171) *
                        C31357 * C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C31433 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C31153) *
                       C2133 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C31153 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C31433) *
                       C2134 +
                   (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                      C115 * C424 + C103 * C439) *
                         C116 +
                     (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                      C115 * C442 + C103 * C454) *
                         C31171) *
                        C31357 * C31369 * C31433 -
                    ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
                      C113 * C441 + C101 * C453) *
                         C31171 +
                     (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
                      C113 * C423 + C101 * C438) *
                         C116) *
                        C31357 * C31369 * C31153) *
                       C2135 +
                   (((C113 * C1862 + C101 * C1871 + C114 * C1861 +
                      C102 * C1870 + C115 * C2137 + C103 * C2138) *
                         C116 +
                     (C113 * C1868 + C101 * C1880 + C114 * C1867 +
                      C102 * C1879 + C115 * C2139 + C103 * C2140) *
                         C31171) *
                        C31357 * C31369 * C31153 -
                    ((C115 * C1867 + C103 * C1879 + C114 * C1868 +
                      C102 * C1880 + C113 * C1869 + C101 * C1881) *
                         C31171 +
                     (C115 * C1861 + C103 * C1870 + C114 * C1862 +
                      C102 * C1871 + C113 * C1863 + C101 * C1872) *
                         C116) *
                        C31357 * C31369 * C31433) *
                       C31492)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C557 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C558 +
                    (((C4585 * C119 + C31123 * C126) * C116 +
                      (C4585 * C129 + C31123 * C140) * C31171) *
                         C4582 +
                     (C4745 * C116 + C4746 * C31171) * C4583 +
                     (C4747 * C116 + C4748 * C31171) * C4584) *
                        C31369 * C559 -
                    ((C4970 * C31171 + C4969 * C116) * C4584 +
                     (C4968 * C31171 + C4967 * C116) * C4583 +
                     ((C4585 * C130 + C31123 * C141) * C31171 +
                      (C4585 * C120 + C31123 * C131) * C116) *
                         C4582) *
                        C31369 * C31480) *
                       C31448 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     ((C4585 * C818 + C31123 * C823) * C116 +
                      (C4585 * C826 + C31123 * C833) * C31171) *
                         C4583 +
                     ((C4585 * C1164 + C31123 * C1173) * C116 +
                      (C4585 * C1176 + C31123 * C1191) * C31171) *
                         C4584) *
                        C31369 * C558 -
                    (((C4585 * C1177 + C31123 * C1192) * C31171 +
                      (C4585 * C1165 + C31123 * C1174) * C116) *
                         C4584 +
                     ((C4585 * C825 + C31123 * C832) * C31171 +
                      (C4585 * C817 + C31123 * C822) * C116) *
                         C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C557 -
                    (((C4585 * C1175 + C31123 * C1190) * C31171 +
                      (C4585 * C1163 + C31123 * C1172) * C116) *
                         C4584 +
                     ((C4585 * C827 + C31123 * C834) * C31171 +
                      (C4585 * C819 + C31123 * C824) * C116) *
                         C4583 +
                     ((C4585 * C431 + C31123 * C448) * C31171 +
                      (C4585 * C418 + C31123 * C428) * C116) *
                         C4582) *
                        C31369 * C559 +
                    (((C4585 * C419 + C31123 * C429) * C116 +
                      (C4585 * C432 + C31123 * C449) * C31171) *
                         C4582 +
                     ((C4585 * C820 + C31123 * C828) * C116 +
                      (C4585 * C829 + C31123 * C835) * C31171) *
                         C4583 +
                     ((C4585 * C1457 + C31123 * C1458) * C116 +
                      (C4585 * C1459 + C31123 * C1460) * C31171) *
                         C4584) *
                        C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C953 +
                      (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
                      C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                         C4582 +
                     (C4733 * C953 + C4734 * C947 - C4735 * C954 -
                      C4736 * C948 + C4737 * C955 + C4738 * C31476) *
                         C4583 +
                     (C4735 * C953 + C4736 * C947 - C4737 * C954 -
                      C4738 * C948 + C5439 * C955 + C5440 * C31476) *
                         C4584) *
                        C31369 * C31433 +
                    ((C4739 * C954 -
                      ((C4585 * C128 + C31123 * C139) * C947 +
                       (C4585 * C118 + C31123 * C125) * C953) +
                      C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                         C4582 +
                     (C4741 * C954 - (C4740 * C947 + C4739 * C953) +
                      C4742 * C948 - C4743 * C955 - C4744 * C31476) *
                         C4583 +
                     (C4743 * C954 - (C4742 * C947 + C4741 * C953) +
                      C4744 * C948 - C5695 * C955 - C5696 * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C31448 +
                   (((C5239 * C954 -
                      ((C4585 * C433 + C31123 * C450) * C947 +
                       (C4585 * C420 + C31123 * C434) * C953) +
                      C5240 * C948 - C5241 * C955 - C5242 * C31476) *
                         C4582 +
                     (C5241 * C954 - (C5240 * C947 + C5239 * C953) +
                      C5242 * C948 - C5581 * C955 - C5582 * C31476) *
                         C4583 +
                     (C5581 * C954 - (C5242 * C947 + C5241 * C953) +
                      C5582 * C948 - (C4585 * C5552 + C31123 * C5555) * C955 -
                      (C4585 * C5556 + C31123 * C5561) * C31476) *
                         C4584) *
                        C31369 * C31433 +
                    (((C4585 * C417 + C31123 * C427) * C953 +
                      (C4585 * C430 + C31123 * C447) * C947 - C5243 * C954 -
                      C5244 * C948 + C5245 * C955 + C5246 * C31476) *
                         C4582 +
                     (C5243 * C953 + C5244 * C947 - C5245 * C954 -
                      C5246 * C948 + C5851 * C955 + C5852 * C31476) *
                         C4583 +
                     (C5245 * C953 + C5246 * C947 - C5851 * C954 -
                      C5852 * C948 + (C4585 * C5842 + C31123 * C5843) * C955 +
                      (C4585 * C5844 + C31123 * C5845) * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C31433 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C31153) *
                       C2133 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     (C5243 * C116 + C5244 * C31171) * C4583 +
                     (C5245 * C116 + C5246 * C31171) * C4584) *
                        C31369 * C31153 -
                    ((C5242 * C31171 + C5241 * C116) * C4584 +
                     (C5240 * C31171 + C5239 * C116) * C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C31433) *
                       C2134 +
                   ((((C4585 * C422 + C31123 * C437) * C116 +
                      (C4585 * C440 + C31123 * C452) * C31171) *
                         C4582 +
                     (C5583 * C116 + C5584 * C31171) * C4583 +
                     (C5585 * C116 + C5586 * C31171) * C4584) *
                        C31369 * C31433 -
                    ((C6416 * C31171 + C6415 * C116) * C4584 +
                     (C6414 * C31171 + C6413 * C116) * C4583 +
                     ((C4585 * C441 + C31123 * C453) * C31171 +
                      (C4585 * C423 + C31123 * C438) * C116) *
                         C4582) *
                        C31369 * C31153) *
                       C2135 +
                   ((((C4585 * C1862 + C31123 * C1871) * C116 +
                      (C4585 * C1868 + C31123 * C1880) * C31171) *
                         C4582 +
                     ((C4585 * C2240 + C31123 * C2243) * C116 +
                      (C4585 * C2246 + C31123 * C2249) * C31171) *
                         C4583 +
                     ((C4585 * C6514 + C31123 * C6515) * C116 +
                      (C4585 * C6516 + C31123 * C6517) * C31171) *
                         C4584) *
                        C31369 * C31153 -
                    (((C4585 * C6245 + C31123 * C6251) * C31171 +
                      (C4585 * C6242 + C31123 * C6246) * C116) *
                         C4584 +
                     ((C4585 * C2245 + C31123 * C2248) * C31171 +
                      (C4585 * C2239 + C31123 * C2242) * C116) *
                         C4583 +
                     ((C4585 * C1869 + C31123 * C1881) * C31171 +
                      (C4585 * C1863 + C31123 * C1872) * C116) *
                         C4582) *
                        C31369 * C31433) *
                       C31492)) /
                     (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C258 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C262 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31513 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C261) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31501 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C263 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C261 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31513 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C262 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31501 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C263 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31171) *
              C31357 * C31369 * C107 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31171 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31357 * C31369 * C108 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31171) *
              C31357 * C31369 * C109 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31171 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31357 * C31369 * C110 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31171) *
              C31357 * C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C31510 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C31497 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C31470) *
              C1681 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C31497 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C31510 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C31470) *
              C1682 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C31510 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C31497 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31143 * C1681 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C262 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31513 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C261) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31501 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C263 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31476) *
              C31357 * C31369 * C31143 * C1682 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C261 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C31513 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C262 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C31501 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C263 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C31476) *
              C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C31510 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C1681 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            (C5243 * C116 + C5244 * C31171) * C4583 +
            (C5245 * C116 + C5246 * C31171) * C4584) *
               C31369 * C31497 -
           ((C5242 * C31171 + C5241 * C116) * C4584 +
            (C5240 * C31171 + C5239 * C116) * C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C31510 -
           ((C5250 * C31171 + C5249 * C116) * C4584 +
            (C5248 * C31171 + C5247 * C116) * C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C1682 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            (C5583 * C116 + C5584 * C31171) * C4583 +
            (C5585 * C116 + C5586 * C31171) * C4584) *
               C31369 * C31510 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C31497 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            C5439 * C263 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C1681 +
          ((C5239 * C262 -
            ((C4585 * C433 + C31123 * C450) * C31513 +
             (C4585 * C420 + C31123 * C434) * C261) +
            C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
               C4582 +
           (C5241 * C262 - (C5240 * C31513 + C5239 * C261) + C5242 * C31501 -
            C5581 * C263 - C5582 * C31476) *
               C4583 +
           (C5581 * C262 - (C5242 * C31513 + C5241 * C261) + C5582 * C31501 -
            C5959 * C263 - C5960 * C31476) *
               C4584) *
              C31369 * C31143 * C1682 +
          (((C4585 * C422 + C31123 * C437) * C261 +
            (C4585 * C440 + C31123 * C452) * C31513 - C5583 * C262 -
            C5584 * C31501 + C5585 * C263 + C5586 * C31476) *
               C4582 +
           (C5583 * C261 + C5584 * C31513 - C5585 * C262 - C5586 * C31501 +
            C5587 * C263 + C5588 * C31476) *
               C4583 +
           (C5585 * C261 + C5586 * C31513 - C5587 * C262 - C5588 * C31501 +
            (C4585 * C5554 + C31123 * C5559) * C263 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C561 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31447 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C562 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C2726) *
              C3120 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C31148 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31156 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C562 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C31447 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C561) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C31148 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C31156 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C4583 +
            (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
                C4584) *
               C31369 * C2726) *
              C3120 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
                C4584) *
               C31369 * C31148 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 - C5851 * C562 - C5852 * C31234) *
                C4584) *
               C31369 * C31156 +
           ((C5247 * C562 -
             ((C4585 * C431 + C31123 * C448) * C31447 +
              (C4585 * C418 + C31123 * C428) * C561) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C562 - (C5248 * C31447 + C5247 * C561) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C562 -
             (C5250 * C31447 + C5249 * C561) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C2726) *
              C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31272 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C31153) *
              C31279 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C561 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31447 -
            (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
             C113 * C1168 + C101 * C1180) *
                C562 -
            (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
             C113 * C1183 + C101 * C1195) *
                C31234) *
               C31357 * C31369 * C2459 +
           ((C113 * C1167 + C101 * C1179 + C114 * C1166 + C102 * C1178 +
             C115 * C2031 + C103 * C2032) *
                C562 -
            ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
              C113 * C441 + C101 * C453) *
                 C31447 +
             (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
              C113 * C423 + C101 * C438) *
                 C561) +
            (C113 * C1182 + C101 * C1194 + C114 * C1181 + C102 * C1193 +
             C115 * C2033 + C103 * C2034) *
                C31234) *
               C31357 * C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31272 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            (C5581 * C562 - (C5242 * C31447 + C5241 * C561) + C5582 * C31234) *
                C4584) *
               C31369 * C2459 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 - C5851 * C562 - C5852 * C31234) *
                C4584) *
               C31369 * C31153) *
              C31279 +
          ((((C4585 * C422 + C31123 * C437) * C561 +
             (C4585 * C440 + C31123 * C452) * C31447 - C5583 * C562 -
             C5584 * C31234) *
                C4582 +
            (C5583 * C561 + C5584 * C31447 - C5585 * C562 - C5586 * C31234) *
                C4583 +
            (C5585 * C561 + C5586 * C31447 - C5587 * C562 - C5588 * C31234) *
                C4584) *
               C31369 * C2459 +
           ((C6413 * C562 -
             ((C4585 * C441 + C31123 * C453) * C31447 +
              (C4585 * C423 + C31123 * C438) * C561) +
             C6414 * C31234) *
                C4582 +
            (C6415 * C562 - (C6414 * C31447 + C6413 * C561) + C6416 * C31234) *
                C4583 +
            ((C4585 * C6400 + C31123 * C6401) * C562 -
             (C6416 * C31447 + C6415 * C561) +
             (C4585 * C6402 + C31123 * C6403) * C31234) *
                C4584) *
               C31369 * C31153) *
              C3628)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C261 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31513 -
                     (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                      C113 * C266 + C101 * C276) *
                         C262 -
                     (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                      C113 * C279 + C101 * C296) *
                         C31501 +
                     (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                      C115 * C269 + C103 * C282) *
                         C263 +
                     (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                      C115 * C285 + C103 * C299) *
                         C31476) *
                        C31357 * C31369 * C2459 +
                    ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                      C115 * C270 + C103 * C286) *
                         C262 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31513 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C261) +
                     (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                      C115 * C287 + C103 * C300) *
                         C31501 -
                     (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                      C113 * C268 + C101 * C281) *
                         C263 -
                     (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                      C113 * C284 + C101 * C298) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C3120 +
                   (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                      C115 * C819 + C103 * C824) *
                         C262 -
                     ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                       C113 * C433 + C101 * C450) *
                          C31513 +
                      (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                       C113 * C420 + C101 * C434) *
                          C261) +
                     (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                      C115 * C827 + C103 * C834) *
                         C31501 -
                     (C115 * C1163 + C103 * C1172 + C114 * C1164 +
                      C102 * C1173 + C113 * C1165 + C101 * C1174) *
                         C263 -
                     (C115 * C1175 + C103 * C1190 + C114 * C1176 +
                      C102 * C1191 + C113 * C1177 + C101 * C1192) *
                         C31476) *
                        C31357 * C31369 * C2459 +
                    ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C261 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31513 -
                     (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                      C113 * C818 + C101 * C823) *
                         C262 -
                     (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                      C113 * C826 + C101 * C833) *
                         C31501 +
                     (C113 * C1164 + C101 * C1173 + C114 * C1163 +
                      C102 * C1172 + C115 * C1457 + C103 * C1458) *
                         C263 +
                     (C113 * C1176 + C101 * C1191 + C114 * C1175 +
                      C102 * C1190 + C115 * C1459 + C103 * C1460) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C31519 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C31512 +
                    ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31171) *
                        C31357 * C31369 * C31499 -
                    ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                      C113 * C130 + C101 * C141) *
                         C31171 +
                     (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                      C113 * C120 + C101 * C131) *
                         C116) *
                        C31357 * C31369 * C31480) *
                       C3120 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C31512 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C31519 -
                    ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                      C113 * C431 + C101 * C448) *
                         C31171 +
                     (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                      C113 * C418 + C101 * C428) *
                         C116) *
                        C31357 * C31369 * C31499 +
                    ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                      C115 * C667 + C103 * C668) *
                         C116 +
                     (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                      C115 * C669 + C103 * C670) *
                         C31171) *
                        C31357 * C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C2459 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C31153) *
                       C31521 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C31153 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C2459) *
                       C31518 +
                   (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                      C115 * C424 + C103 * C439) *
                         C116 +
                     (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                      C115 * C442 + C103 * C454) *
                         C31171) *
                        C31357 * C31369 * C2459 -
                    ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
                      C113 * C441 + C101 * C453) *
                         C31171 +
                     (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
                      C113 * C423 + C101 * C438) *
                         C116) *
                        C31357 * C31369 * C31153) *
                       C31509 +
                   (((C113 * C1862 + C101 * C1871 + C114 * C1861 +
                      C102 * C1870 + C115 * C2137 + C103 * C2138) *
                         C116 +
                     (C113 * C1868 + C101 * C1880 + C114 * C1867 +
                      C102 * C1879 + C115 * C2139 + C103 * C2140) *
                         C31171) *
                        C31357 * C31369 * C31153 -
                    ((C115 * C1867 + C103 * C1879 + C114 * C1868 +
                      C102 * C1880 + C113 * C1869 + C101 * C1881) *
                         C31171 +
                     (C115 * C1861 + C103 * C1870 + C114 * C1862 +
                      C102 * C1871 + C113 * C1863 + C101 * C1872) *
                         C116) *
                        C31357 * C31369 * C2459) *
                       C31492)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C31519 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C31512 +
                    (((C4585 * C119 + C31123 * C126) * C116 +
                      (C4585 * C129 + C31123 * C140) * C31171) *
                         C4582 +
                     (C4745 * C116 + C4746 * C31171) * C4583 +
                     (C4747 * C116 + C4748 * C31171) * C4584) *
                        C31369 * C31499 -
                    ((C4970 * C31171 + C4969 * C116) * C4584 +
                     (C4968 * C31171 + C4967 * C116) * C4583 +
                     ((C4585 * C130 + C31123 * C141) * C31171 +
                      (C4585 * C120 + C31123 * C131) * C116) *
                         C4582) *
                        C31369 * C31480) *
                       C3120 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     (C5243 * C116 + C5244 * C31171) * C4583 +
                     (C5245 * C116 + C5246 * C31171) * C4584) *
                        C31369 * C31512 -
                    ((C5242 * C31171 + C5241 * C116) * C4584 +
                     (C5240 * C31171 + C5239 * C116) * C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C31519 -
                    ((C5250 * C31171 + C5249 * C116) * C4584 +
                     (C5248 * C31171 + C5247 * C116) * C4583 +
                     ((C4585 * C431 + C31123 * C448) * C31171 +
                      (C4585 * C418 + C31123 * C428) * C116) *
                         C4582) *
                        C31369 * C31499 +
                    (((C4585 * C419 + C31123 * C429) * C116 +
                      (C4585 * C432 + C31123 * C449) * C31171) *
                         C4582 +
                     ((C4585 * C820 + C31123 * C828) * C116 +
                      (C4585 * C829 + C31123 * C835) * C31171) *
                         C4583 +
                     ((C4585 * C1457 + C31123 * C1458) * C116 +
                      (C4585 * C1459 + C31123 * C1460) * C31171) *
                         C4584) *
                        C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C261 +
                      (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
                      C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                         C4582 +
                     (C4733 * C261 + C4734 * C31513 - C4735 * C262 -
                      C4736 * C31501 + C4737 * C263 + C4738 * C31476) *
                         C4583 +
                     (C4735 * C261 + C4736 * C31513 - C4737 * C262 -
                      C4738 * C31501 + C5439 * C263 + C5440 * C31476) *
                         C4584) *
                        C31369 * C2459 +
                    ((C4739 * C262 -
                      ((C4585 * C128 + C31123 * C139) * C31513 +
                       (C4585 * C118 + C31123 * C125) * C261) +
                      C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                         C4582 +
                     (C4741 * C262 - (C4740 * C31513 + C4739 * C261) +
                      C4742 * C31501 - C4743 * C263 - C4744 * C31476) *
                         C4583 +
                     (C4743 * C262 - (C4742 * C31513 + C4741 * C261) +
                      C4744 * C31501 - C5695 * C263 - C5696 * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C3120 +
                   (((C5239 * C262 -
                      ((C4585 * C433 + C31123 * C450) * C31513 +
                       (C4585 * C420 + C31123 * C434) * C261) +
                      C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
                         C4582 +
                     (C5241 * C262 - (C5240 * C31513 + C5239 * C261) +
                      C5242 * C31501 - C5581 * C263 - C5582 * C31476) *
                         C4583 +
                     (C5581 * C262 - (C5242 * C31513 + C5241 * C261) +
                      C5582 * C31501 - C5959 * C263 - C5960 * C31476) *
                         C4584) *
                        C31369 * C2459 +
                    (((C4585 * C417 + C31123 * C427) * C261 +
                      (C4585 * C430 + C31123 * C447) * C31513 - C5243 * C262 -
                      C5244 * C31501 + C5245 * C263 + C5246 * C31476) *
                         C4582 +
                     (C5243 * C261 + C5244 * C31513 - C5245 * C262 -
                      C5246 * C31501 + C5851 * C263 + C5852 * C31476) *
                         C4583 +
                     (C5245 * C261 + C5246 * C31513 - C5851 * C262 -
                      C5852 * C31501 + (C4585 * C5842 + C31123 * C5843) * C263 +
                      (C4585 * C5844 + C31123 * C5845) * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C2459 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C31153) *
                       C31521 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     (C5243 * C116 + C5244 * C31171) * C4583 +
                     (C5245 * C116 + C5246 * C31171) * C4584) *
                        C31369 * C31153 -
                    ((C5242 * C31171 + C5241 * C116) * C4584 +
                     (C5240 * C31171 + C5239 * C116) * C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C2459) *
                       C31518 +
                   ((((C4585 * C422 + C31123 * C437) * C116 +
                      (C4585 * C440 + C31123 * C452) * C31171) *
                         C4582 +
                     (C5583 * C116 + C5584 * C31171) * C4583 +
                     (C5585 * C116 + C5586 * C31171) * C4584) *
                        C31369 * C2459 -
                    ((C6416 * C31171 + C6415 * C116) * C4584 +
                     (C6414 * C31171 + C6413 * C116) * C4583 +
                     ((C4585 * C441 + C31123 * C453) * C31171 +
                      (C4585 * C423 + C31123 * C438) * C116) *
                         C4582) *
                        C31369 * C31153) *
                       C31509 +
                   ((((C4585 * C1862 + C31123 * C1871) * C116 +
                      (C4585 * C1868 + C31123 * C1880) * C31171) *
                         C4582 +
                     ((C4585 * C2240 + C31123 * C2243) * C116 +
                      (C4585 * C2246 + C31123 * C2249) * C31171) *
                         C4583 +
                     ((C4585 * C6514 + C31123 * C6515) * C116 +
                      (C4585 * C6516 + C31123 * C6517) * C31171) *
                         C4584) *
                        C31369 * C31153 -
                    ((C6632 * C31171 + C6631 * C116) * C4584 +
                     (C6630 * C31171 + C6629 * C116) * C4583 +
                     ((C4585 * C1869 + C31123 * C1881) * C31171 +
                      (C4585 * C1863 + C31123 * C1872) * C116) *
                         C4582) *
                        C31369 * C2459) *
                       C31492)) /
                     (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C31148 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C31156 +
                    ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31171) *
                        C31357 * C31369 * C2726) *
                       C31272 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C31156 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C31148 -
                    ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                      C113 * C431 + C101 * C448) *
                         C31171 +
                     (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                      C113 * C418 + C101 * C428) *
                         C116) *
                        C31357 * C31369 * C2726) *
                       C31279 +
                   (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
                      C115 * C424 + C103 * C439) *
                         C116 +
                     (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
                      C115 * C442 + C103 * C454) *
                         C31171) *
                        C31357 * C31369 * C31148 -
                    ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
                      C113 * C441 + C101 * C453) *
                         C31171 +
                     (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
                      C113 * C423 + C101 * C438) *
                         C116) *
                        C31357 * C31369 * C31156 +
                    ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
                      C115 * C426 + C103 * C445) *
                         C116 +
                     (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
                      C115 * C446 + C103 * C456) *
                         C31171) *
                        C31357 * C31369 * C2726) *
                       C3628)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C31148 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C31156 +
                    (((C4585 * C119 + C31123 * C126) * C116 +
                      (C4585 * C129 + C31123 * C140) * C31171) *
                         C4582 +
                     (C4745 * C116 + C4746 * C31171) * C4583 +
                     (C4747 * C116 + C4748 * C31171) * C4584) *
                        C31369 * C2726) *
                       C31272 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     (C5243 * C116 + C5244 * C31171) * C4583 +
                     (C5245 * C116 + C5246 * C31171) * C4584) *
                        C31369 * C31156 -
                    ((C5242 * C31171 + C5241 * C116) * C4584 +
                     (C5240 * C31171 + C5239 * C116) * C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C31148 -
                    ((C5250 * C31171 + C5249 * C116) * C4584 +
                     (C5248 * C31171 + C5247 * C116) * C4583 +
                     ((C4585 * C431 + C31123 * C448) * C31171 +
                      (C4585 * C418 + C31123 * C428) * C116) *
                         C4582) *
                        C31369 * C2726) *
                       C31279 +
                   ((((C4585 * C422 + C31123 * C437) * C116 +
                      (C4585 * C440 + C31123 * C452) * C31171) *
                         C4582 +
                     (C5583 * C116 + C5584 * C31171) * C4583 +
                     (C5585 * C116 + C5586 * C31171) * C4584) *
                        C31369 * C31148 -
                    ((C6416 * C31171 + C6415 * C116) * C4584 +
                     (C6414 * C31171 + C6413 * C116) * C4583 +
                     ((C4585 * C441 + C31123 * C453) * C31171 +
                      (C4585 * C423 + C31123 * C438) * C116) *
                         C4582) *
                        C31369 * C31156 +
                    (((C4585 * C424 + C31123 * C439) * C116 +
                      (C4585 * C442 + C31123 * C454) * C31171) *
                         C4582 +
                     ((C4585 * C1166 + C31123 * C1178) * C116 +
                      (C4585 * C1181 + C31123 * C1193) * C31171) *
                         C4583 +
                     ((C4585 * C1171 + C31123 * C1186) * C116 +
                      (C4585 * C1189 + C31123 * C1198) * C31171) *
                         C4584) *
                        C31369 * C2726) *
                       C3628)) /
                     (p * q * std::sqrt(p + q));
    d2ee[119] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C31519 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C31512 +
                    ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31171) *
                        C31357 * C31369 * C31499 -
                    ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                      C113 * C130 + C101 * C141) *
                         C31171 +
                     (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                      C113 * C120 + C101 * C131) *
                         C116) *
                        C31357 * C31369 * C31480) *
                       C3120 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C31512 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C31519 -
                    ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                      C113 * C431 + C101 * C448) *
                         C31171 +
                     (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                      C113 * C418 + C101 * C428) *
                         C116) *
                        C31357 * C31369 * C31499 +
                    ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                      C115 * C667 + C103 * C668) *
                         C116 +
                     (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                      C115 * C669 + C103 * C670) *
                         C31171) *
                        C31357 * C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C261 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31513 -
                     (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                      C113 * C266 + C101 * C276) *
                         C262 -
                     (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                      C113 * C279 + C101 * C296) *
                         C31501 +
                     (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                      C115 * C269 + C103 * C282) *
                         C263 +
                     (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                      C115 * C285 + C103 * C299) *
                         C31476) *
                        C31357 * C31369 * C2459 +
                    ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                      C115 * C270 + C103 * C286) *
                         C262 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31513 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C261) +
                     (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                      C115 * C287 + C103 * C300) *
                         C31501 -
                     (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                      C113 * C268 + C101 * C281) *
                         C263 -
                     (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                      C113 * C284 + C101 * C298) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C3120 +
                   (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                      C115 * C819 + C103 * C824) *
                         C262 -
                     ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                       C113 * C433 + C101 * C450) *
                          C31513 +
                      (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                       C113 * C420 + C101 * C434) *
                          C261) +
                     (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                      C115 * C827 + C103 * C834) *
                         C31501 -
                     (C115 * C1163 + C103 * C1172 + C114 * C1164 +
                      C102 * C1173 + C113 * C1165 + C101 * C1174) *
                         C263 -
                     (C115 * C1175 + C103 * C1190 + C114 * C1176 +
                      C102 * C1191 + C113 * C1177 + C101 * C1192) *
                         C31476) *
                        C31357 * C31369 * C2459 +
                    ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C261 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31513 -
                     (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                      C113 * C818 + C101 * C823) *
                         C262 -
                     (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                      C113 * C826 + C101 * C833) *
                         C31501 +
                     (C113 * C1164 + C101 * C1173 + C114 * C1163 +
                      C102 * C1172 + C115 * C1457 + C103 * C1458) *
                         C263 +
                     (C113 * C1176 + C101 * C1191 + C114 * C1175 +
                      C102 * C1190 + C115 * C1459 + C103 * C1460) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C31519 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C31512 +
                    (((C4585 * C119 + C31123 * C126) * C116 +
                      (C4585 * C129 + C31123 * C140) * C31171) *
                         C4582 +
                     (C4745 * C116 + C4746 * C31171) * C4583 +
                     (C4747 * C116 + C4748 * C31171) * C4584) *
                        C31369 * C31499 -
                    ((C4970 * C31171 + C4969 * C116) * C4584 +
                     (C4968 * C31171 + C4967 * C116) * C4583 +
                     ((C4585 * C130 + C31123 * C141) * C31171 +
                      (C4585 * C120 + C31123 * C131) * C116) *
                         C4582) *
                        C31369 * C31480) *
                       C3120 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     (C5243 * C116 + C5244 * C31171) * C4583 +
                     (C5245 * C116 + C5246 * C31171) * C4584) *
                        C31369 * C31512 -
                    ((C5242 * C31171 + C5241 * C116) * C4584 +
                     (C5240 * C31171 + C5239 * C116) * C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C31519 -
                    ((C5250 * C31171 + C5249 * C116) * C4584 +
                     (C5248 * C31171 + C5247 * C116) * C4583 +
                     ((C4585 * C431 + C31123 * C448) * C31171 +
                      (C4585 * C418 + C31123 * C428) * C116) *
                         C4582) *
                        C31369 * C31499 +
                    (((C4585 * C419 + C31123 * C429) * C116 +
                      (C4585 * C432 + C31123 * C449) * C31171) *
                         C4582 +
                     ((C4585 * C820 + C31123 * C828) * C116 +
                      (C4585 * C829 + C31123 * C835) * C31171) *
                         C4583 +
                     ((C4585 * C1457 + C31123 * C1458) * C116 +
                      (C4585 * C1459 + C31123 * C1460) * C31171) *
                         C4584) *
                        C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C261 +
                      (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
                      C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
                         C4582 +
                     (C4733 * C261 + C4734 * C31513 - C4735 * C262 -
                      C4736 * C31501 + C4737 * C263 + C4738 * C31476) *
                         C4583 +
                     (C4735 * C261 + C4736 * C31513 - C4737 * C262 -
                      C4738 * C31501 + C5439 * C263 + C5440 * C31476) *
                         C4584) *
                        C31369 * C2459 +
                    ((C4739 * C262 -
                      ((C4585 * C128 + C31123 * C139) * C31513 +
                       (C4585 * C118 + C31123 * C125) * C261) +
                      C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
                         C4582 +
                     (C4741 * C262 - (C4740 * C31513 + C4739 * C261) +
                      C4742 * C31501 - C4743 * C263 - C4744 * C31476) *
                         C4583 +
                     (C4743 * C262 - (C4742 * C31513 + C4741 * C261) +
                      C4744 * C31501 - C5695 * C263 - C5696 * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C3120 +
                   (((C5239 * C262 -
                      ((C4585 * C433 + C31123 * C450) * C31513 +
                       (C4585 * C420 + C31123 * C434) * C261) +
                      C5240 * C31501 - C5241 * C263 - C5242 * C31476) *
                         C4582 +
                     (C5241 * C262 - (C5240 * C31513 + C5239 * C261) +
                      C5242 * C31501 - C5581 * C263 - C5582 * C31476) *
                         C4583 +
                     (C5581 * C262 - (C5242 * C31513 + C5241 * C261) +
                      C5582 * C31501 - C5959 * C263 - C5960 * C31476) *
                         C4584) *
                        C31369 * C2459 +
                    (((C4585 * C417 + C31123 * C427) * C261 +
                      (C4585 * C430 + C31123 * C447) * C31513 - C5243 * C262 -
                      C5244 * C31501 + C5245 * C263 + C5246 * C31476) *
                         C4582 +
                     (C5243 * C261 + C5244 * C31513 - C5245 * C262 -
                      C5246 * C31501 + C5851 * C263 + C5852 * C31476) *
                         C4583 +
                     (C5245 * C261 + C5246 * C31513 - C5851 * C262 -
                      C5852 * C31501 + (C4585 * C5842 + C31123 * C5843) * C263 +
                      (C4585 * C5844 + C31123 * C5845) * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C561 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31447 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C562 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31234) *
              C31357 * C31369 * C557 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C562 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31447 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C561) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31234) *
              C31357 * C31369 * C558 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C561 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31447 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C562 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31234) *
              C31357 * C31369 * C559 +
          ((C113 * C270 + C101 * C286 + C114 * C272 + C102 * C290 +
            C115 * C563 + C103 * C564) *
               C562 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31447 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C561) +
           (C113 * C287 + C101 * C300 + C114 * C291 + C102 * C302 +
            C115 * C565 + C103 * C566) *
               C31234) *
              C31357 * C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1303 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1297 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C1304 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C1298 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C1305 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C1299 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C1306 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31433 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C1304 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C1297 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C1303) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C1298 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C1305 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C1299 +
           (C113 * C1030 + C101 * C1036 + C114 * C1029 + C102 * C1035 +
            C115 * C1307 + C103 * C1308) *
               C1306 +
           (C113 * C1039 + C101 * C1048 + C114 * C1038 + C102 * C1047 +
            C115 * C1309 + C103 * C1310) *
               C31486) *
              C31357 * C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C561 +
            (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
            C4734 * C31234) *
               C4582 +
           (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
               C4583 +
           (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
               C4584) *
              C31369 * C557 +
          ((C4739 * C562 -
            ((C4585 * C128 + C31123 * C139) * C31447 +
             (C4585 * C118 + C31123 * C125) * C561) +
            C4740 * C31234) *
               C4582 +
           (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
               C4583 +
           (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
               C4584) *
              C31369 * C558 +
          (((C4585 * C119 + C31123 * C126) * C561 +
            (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
            C4746 * C31234) *
               C4582 +
           (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
               C4583 +
           (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
               C4584) *
              C31369 * C559 +
          ((C4967 * C562 -
            ((C4585 * C130 + C31123 * C141) * C31447 +
             (C4585 * C120 + C31123 * C131) * C561) +
            C4968 * C31234) *
               C4582 +
           (C4969 * C562 - (C4968 * C31447 + C4967 * C561) + C4970 * C31234) *
               C4583 +
           ((C4585 * C1307 + C31123 * C1308) * C562 -
            (C4970 * C31447 + C4969 * C561) +
            (C4585 * C1309 + C31123 * C1310) * C31234) *
               C4584) *
              C31369 * C31480) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31433 +
          ((C4739 * C1304 -
            ((C4585 * C128 + C31123 * C139) * C1297 +
             (C4585 * C118 + C31123 * C125) * C1303) +
            C4740 * C1298 - C4741 * C1305 - C4742 * C1299 + C4743 * C1306 +
            C4744 * C31486) *
               C4582 +
           (C4741 * C1304 - (C4740 * C1297 + C4739 * C1303) + C4742 * C1298 -
            C4743 * C1305 - C4744 * C1299 + C5695 * C1306 + C5696 * C31486) *
               C4583 +
           (C4743 * C1304 - (C4742 * C1297 + C4741 * C1303) + C4744 * C1298 -
            C5695 * C1305 - C5696 * C1299 +
            (C4585 * C5686 + C31123 * C5687) * C1306 +
            (C4585 * C5688 + C31123 * C5689) * C31486) *
               C4584) *
              C31369 * C31153) *
         C31189) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C561 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31447 -
            (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
             C113 * C266 + C101 * C276) *
                C562 -
            (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
             C113 * C279 + C101 * C296) *
                C31234) *
               C31357 * C31369 * C258 +
           ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
             C115 * C270 + C103 * C286) *
                C562 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31447 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C561) +
            (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
             C115 * C287 + C103 * C300) *
                C31234) *
               C31357 * C31369 * C259 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C561 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31447 -
            (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
             C113 * C264 + C101 * C274) *
                C562 -
            (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
             C113 * C277 + C101 * C294) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31448 +
          (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C562 -
            ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
              C113 * C433 + C101 * C450) *
                 C31447 +
             (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
              C113 * C420 + C101 * C434) *
                 C561) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31234) *
               C31357 * C31369 * C258 +
           ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C561 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31447 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C562 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31234) *
               C31357 * C31369 * C259 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C562 -
            ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
              C113 * C431 + C101 * C448) *
                 C31447 +
             (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
              C113 * C418 + C101 * C428) *
                 C561) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31234) *
               C31357 * C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1303 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1297 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C1304 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C1298 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C1305 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C1299 -
           (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
            C113 * C1031 + C101 * C1037) *
               C1306 -
           (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
            C113 * C1040 + C101 * C1049) *
               C31486) *
              C31357 * C31369 * C31143 * C31448 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C1304 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C1297 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C1303) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C1298 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C1305 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C1299 +
           (C113 * C1559 + C101 * C1562 + C114 * C1560 + C102 * C1563 +
            C115 * C1561 + C103 * C1564) *
               C1306 +
           (C113 * C1565 + C101 * C1568 + C114 * C1566 + C102 * C1569 +
            C115 * C1567 + C103 * C1570) *
               C31486) *
              C31357 * C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C561 +
             (C4585 * C127 + C31123 * C138) * C31447 - C4733 * C562 -
             C4734 * C31234) *
                C4582 +
            (C4733 * C561 + C4734 * C31447 - C4735 * C562 - C4736 * C31234) *
                C4583 +
            (C4735 * C561 + C4736 * C31447 - C4737 * C562 - C4738 * C31234) *
                C4584) *
               C31369 * C258 +
           ((C4739 * C562 -
             ((C4585 * C128 + C31123 * C139) * C31447 +
              (C4585 * C118 + C31123 * C125) * C561) +
             C4740 * C31234) *
                C4582 +
            (C4741 * C562 - (C4740 * C31447 + C4739 * C561) + C4742 * C31234) *
                C4583 +
            (C4743 * C562 - (C4742 * C31447 + C4741 * C561) + C4744 * C31234) *
                C4584) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C561 +
             (C4585 * C129 + C31123 * C140) * C31447 - C4745 * C562 -
             C4746 * C31234) *
                C4582 +
            (C4745 * C561 + C4746 * C31447 - C4747 * C562 - C4748 * C31234) *
                C4583 +
            (C4747 * C561 + C4748 * C31447 - C4749 * C562 - C4750 * C31234) *
                C4584) *
               C31369 * C31470) *
              C31448 +
          (((C5239 * C562 -
             ((C4585 * C433 + C31123 * C450) * C31447 +
              (C4585 * C420 + C31123 * C434) * C561) +
             C5240 * C31234) *
                C4582 +
            (C5241 * C562 - (C5240 * C31447 + C5239 * C561) + C5242 * C31234) *
                C4583 +
            ((C4585 * C1559 + C31123 * C1562) * C562 -
             (C5242 * C31447 + C5241 * C561) +
             (C4585 * C1565 + C31123 * C1568) * C31234) *
                C4584) *
               C31369 * C258 +
           (((C4585 * C417 + C31123 * C427) * C561 +
             (C4585 * C430 + C31123 * C447) * C31447 - C5243 * C562 -
             C5244 * C31234) *
                C4582 +
            (C5243 * C561 + C5244 * C31447 - C5245 * C562 - C5246 * C31234) *
                C4583 +
            (C5245 * C561 + C5246 * C31447 -
             (C4585 * C1560 + C31123 * C1563) * C562 -
             (C4585 * C1566 + C31123 * C1569) * C31234) *
                C4584) *
               C31369 * C259 +
           ((C5247 * C562 -
             ((C4585 * C431 + C31123 * C448) * C31447 +
              (C4585 * C418 + C31123 * C428) * C561) +
             C5248 * C31234) *
                C4582 +
            (C5249 * C562 - (C5248 * C31447 + C5247 * C561) + C5250 * C31234) *
                C4583 +
            ((C4585 * C1561 + C31123 * C1564) * C562 -
             (C5250 * C31447 + C5249 * C561) +
             (C4585 * C1567 + C31123 * C1570) * C31234) *
                C4584) *
               C31369 * C31470) *
              C31276)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C1303 +
            (C4585 * C127 + C31123 * C138) * C1297 - C4733 * C1304 -
            C4734 * C1298 + C4735 * C1305 + C4736 * C1299 - C4737 * C1306 -
            C4738 * C31486) *
               C4582 +
           (C4733 * C1303 + C4734 * C1297 - C4735 * C1304 - C4736 * C1298 +
            C4737 * C1305 + C4738 * C1299 - C5439 * C1306 - C5440 * C31486) *
               C4583 +
           (C4735 * C1303 + C4736 * C1297 - C4737 * C1304 - C4738 * C1298 +
            C5439 * C1305 + C5440 * C1299 - C5441 * C1306 - C5442 * C31486) *
               C4584) *
              C31369 * C31143 * C31448 +
          ((C5239 * C1304 -
            ((C4585 * C433 + C31123 * C450) * C1297 +
             (C4585 * C420 + C31123 * C434) * C1303) +
            C5240 * C1298 - C5241 * C1305 - C5242 * C1299 + C5581 * C1306 +
            C5582 * C31486) *
               C4582 +
           (C5241 * C1304 - (C5240 * C1297 + C5239 * C1303) + C5242 * C1298 -
            C5581 * C1305 - C5582 * C1299 + C5959 * C1306 + C5960 * C31486) *
               C4583 +
           (C5581 * C1304 - (C5242 * C1297 + C5241 * C1303) + C5582 * C1298 -
            C5959 * C1305 - C5960 * C1299 +
            (C4585 * C5950 + C31123 * C5951) * C1306 +
            (C4585 * C5952 + C31123 * C5953) * C31486) *
               C4584) *
              C31369 * C31143 * C31276)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C258 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C262 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31513 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C261) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31501 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C263 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C261 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31513 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C262 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31501 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C263 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31171) *
              C31357 * C31369 * C107 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31171 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31357 * C31369 * C108 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31171) *
              C31357 * C31369 * C109 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31171 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31357 * C31369 * C110 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31171) *
              C31357 * C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31171) *
               C31357 * C31369 * C258 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31171 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31357 * C31369 * C259 +
           ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31514 +
          (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
             C115 * C419 + C103 * C429) *
                C116 +
            (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
             C115 * C432 + C103 * C449) *
                C31171) *
               C31357 * C31369 * C259 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C31171 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C116) *
               C31357 * C31369 * C258 -
           ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
             C113 * C431 + C101 * C448) *
                C31171 +
            (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
             C113 * C418 + C101 * C428) *
                C116) *
               C31357 * C31369 * C31470) *
              C31503 +
          (((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
             C115 * C424 + C103 * C439) *
                C116 +
            (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
             C115 * C442 + C103 * C454) *
                C31171) *
               C31357 * C31369 * C258 -
           ((C115 * C443 + C103 * C455 + C114 * C442 + C102 * C454 +
             C113 * C441 + C101 * C453) *
                C31171 +
            (C115 * C425 + C103 * C444 + C114 * C424 + C102 * C439 +
             C113 * C423 + C101 * C438) *
                C116) *
               C31357 * C31369 * C259 +
           ((C113 * C424 + C101 * C439 + C114 * C425 + C102 * C444 +
             C115 * C426 + C103 * C445) *
                C116 +
            (C113 * C442 + C101 * C454 + C114 * C443 + C102 * C455 +
             C115 * C446 + C103 * C456) *
                C31171) *
               C31357 * C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31143 * C31514 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C954 -
           ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
             C113 * C433 + C101 * C450) *
                C947 +
            (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
             C113 * C420 + C101 * C434) *
                C953) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C948 -
           (C115 * C1163 + C103 * C1172 + C114 * C1164 + C102 * C1173 +
            C113 * C1165 + C101 * C1174) *
               C955 -
           (C115 * C1175 + C103 * C1190 + C114 * C1176 + C102 * C1191 +
            C113 * C1177 + C101 * C1192) *
               C31476) *
              C31357 * C31369 * C31143 * C31503 +
          ((C113 * C422 + C101 * C437 + C114 * C423 + C102 * C438 +
            C115 * C424 + C103 * C439) *
               C953 +
           (C113 * C440 + C101 * C452 + C114 * C441 + C102 * C453 +
            C115 * C442 + C103 * C454) *
               C947 -
           (C115 * C1166 + C103 * C1178 + C114 * C1167 + C102 * C1179 +
            C113 * C1168 + C101 * C1180) *
               C954 -
           (C115 * C1181 + C103 * C1193 + C114 * C1182 + C102 * C1194 +
            C113 * C1183 + C101 * C1195) *
               C948 +
           (C113 * C1169 + C101 * C1184 + C114 * C1170 + C102 * C1185 +
            C115 * C1171 + C103 * C1186) *
               C955 +
           (C113 * C1187 + C101 * C1196 + C114 * C1188 + C102 * C1197 +
            C115 * C1189 + C103 * C1198) *
               C31476) *
              C31357 * C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31123 * C124) * C116 +
             (C4585 * C127 + C31123 * C138) * C31171) *
                C4582 +
            (C4733 * C116 + C4734 * C31171) * C4583 +
            (C4735 * C116 + C4736 * C31171) * C4584) *
               C31369 * C258 -
           ((C4742 * C31171 + C4741 * C116) * C4584 +
            (C4740 * C31171 + C4739 * C116) * C4583 +
            ((C4585 * C128 + C31123 * C139) * C31171 +
             (C4585 * C118 + C31123 * C125) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C119 + C31123 * C126) * C116 +
             (C4585 * C129 + C31123 * C140) * C31171) *
                C4582 +
            (C4745 * C116 + C4746 * C31171) * C4583 +
            (C4747 * C116 + C4748 * C31171) * C4584) *
               C31369 * C31470) *
              C31514 +
          ((((C4585 * C417 + C31123 * C427) * C116 +
             (C4585 * C430 + C31123 * C447) * C31171) *
                C4582 +
            ((C4585 * C818 + C31123 * C823) * C116 +
             (C4585 * C826 + C31123 * C833) * C31171) *
                C4583 +
            ((C4585 * C1164 + C31123 * C1173) * C116 +
             (C4585 * C1176 + C31123 * C1191) * C31171) *
                C4584) *
               C31369 * C259 -
           (((C4585 * C1177 + C31123 * C1192) * C31171 +
             (C4585 * C1165 + C31123 * C1174) * C116) *
                C4584 +
            ((C4585 * C825 + C31123 * C832) * C31171 +
             (C4585 * C817 + C31123 * C822) * C116) *
                C4583 +
            ((C4585 * C433 + C31123 * C450) * C31171 +
             (C4585 * C420 + C31123 * C434) * C116) *
                C4582) *
               C31369 * C258 -
           (((C4585 * C1175 + C31123 * C1190) * C31171 +
             (C4585 * C1163 + C31123 * C1172) * C116) *
                C4584 +
            ((C4585 * C827 + C31123 * C834) * C31171 +
             (C4585 * C819 + C31123 * C824) * C116) *
                C4583 +
            ((C4585 * C431 + C31123 * C448) * C31171 +
             (C4585 * C418 + C31123 * C428) * C116) *
                C4582) *
               C31369 * C31470) *
              C31503 +
          ((((C4585 * C422 + C31123 * C437) * C116 +
             (C4585 * C440 + C31123 * C452) * C31171) *
                C4582 +
            ((C4585 * C1168 + C31123 * C1180) * C116 +
             (C4585 * C1183 + C31123 * C1195) * C31171) *
                C4583 +
            ((C4585 * C1169 + C31123 * C1184) * C116 +
             (C4585 * C1187 + C31123 * C1196) * C31171) *
                C4584) *
               C31369 * C258 -
           (((C4585 * C1188 + C31123 * C1197) * C31171 +
             (C4585 * C1170 + C31123 * C1185) * C116) *
                C4584 +
            ((C4585 * C1182 + C31123 * C1194) * C31171 +
             (C4585 * C1167 + C31123 * C1179) * C116) *
                C4583 +
            ((C4585 * C441 + C31123 * C453) * C31171 +
             (C4585 * C423 + C31123 * C438) * C116) *
                C4582) *
               C31369 * C259 +
           (((C4585 * C424 + C31123 * C439) * C116 +
             (C4585 * C442 + C31123 * C454) * C31171) *
                C4582 +
            ((C4585 * C1166 + C31123 * C1178) * C116 +
             (C4585 * C1181 + C31123 * C1193) * C31171) *
                C4583 +
            ((C4585 * C1171 + C31123 * C1186) * C116 +
             (C4585 * C1189 + C31123 * C1198) * C31171) *
                C4584) *
               C31369 * C31470) *
              C31479)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            C5439 * C955 + C5440 * C31476) *
               C4584) *
              C31369 * C31143 * C31514 +
          ((C5239 * C954 -
            ((C4585 * C433 + C31123 * C450) * C947 +
             (C4585 * C420 + C31123 * C434) * C953) +
            C5240 * C948 - C5241 * C955 - C5242 * C31476) *
               C4582 +
           (C5241 * C954 - (C5240 * C947 + C5239 * C953) + C5242 * C948 -
            C5581 * C955 - C5582 * C31476) *
               C4583 +
           (C5581 * C954 - (C5242 * C947 + C5241 * C953) + C5582 * C948 -
            (C4585 * C5552 + C31123 * C5555) * C955 -
            (C4585 * C5556 + C31123 * C5561) * C31476) *
               C4584) *
              C31369 * C31143 * C31503 +
          (((C4585 * C422 + C31123 * C437) * C953 +
            (C4585 * C440 + C31123 * C452) * C947 - C5583 * C954 -
            C5584 * C948 + C5585 * C955 + C5586 * C31476) *
               C4582 +
           (C5583 * C953 + C5584 * C947 - C5585 * C954 - C5586 * C948 +
            C5587 * C955 + C5588 * C31476) *
               C4583 +
           (C5585 * C953 + C5586 * C947 - C5587 * C954 - C5588 * C948 +
            (C4585 * C5554 + C31123 * C5559) * C955 +
            (C4585 * C5560 + C31123 * C5563) * C31476) *
               C4584) *
              C31369 * C31143 * C31479)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31171) *
                        C31357 * C31369 * C557 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31171 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31357 * C31369 * C558 +
                    ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31171) *
                        C31357 * C31369 * C559 -
                    ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                      C113 * C130 + C101 * C141) *
                         C31171 +
                     (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                      C113 * C120 + C101 * C131) *
                         C116) *
                        C31357 * C31369 * C31480) *
                       C31448 +
                   (((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C116 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C31171) *
                        C31357 * C31369 * C558 -
                    ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                      C113 * C433 + C101 * C450) *
                         C31171 +
                     (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                      C113 * C420 + C101 * C434) *
                         C116) *
                        C31357 * C31369 * C557 -
                    ((C115 * C435 + C103 * C451 + C114 * C432 + C102 * C449 +
                      C113 * C431 + C101 * C448) *
                         C31171 +
                     (C115 * C421 + C103 * C436 + C114 * C419 + C102 * C429 +
                      C113 * C418 + C101 * C428) *
                         C116) *
                        C31357 * C31369 * C559 +
                    ((C113 * C419 + C101 * C429 + C114 * C421 + C102 * C436 +
                      C115 * C667 + C103 * C668) *
                         C116 +
                     (C113 * C432 + C101 * C449 + C114 * C435 + C102 * C451 +
                      C115 * C669 + C103 * C670) *
                         C31171) *
                        C31357 * C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C953 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C947 -
                     (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
                      C113 * C266 + C101 * C276) *
                         C954 -
                     (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
                      C113 * C279 + C101 * C296) *
                         C948 +
                     (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
                      C115 * C269 + C103 * C282) *
                         C955 +
                     (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
                      C115 * C285 + C103 * C299) *
                         C31476) *
                        C31357 * C31369 * C31433 +
                    ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
                      C115 * C270 + C103 * C286) *
                         C954 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C947 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C953) +
                     (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
                      C115 * C287 + C103 * C300) *
                         C948 -
                     (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
                      C113 * C268 + C101 * C281) *
                         C955 -
                     (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
                      C113 * C284 + C101 * C298) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C31448 +
                   (((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                      C115 * C819 + C103 * C824) *
                         C954 -
                     ((C115 * C431 + C103 * C448 + C114 * C430 + C102 * C447 +
                       C113 * C433 + C101 * C450) *
                          C947 +
                      (C115 * C418 + C103 * C428 + C114 * C417 + C102 * C427 +
                       C113 * C420 + C101 * C434) *
                          C953) +
                     (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                      C115 * C827 + C103 * C834) *
                         C948 -
                     (C115 * C1163 + C103 * C1172 + C114 * C1164 +
                      C102 * C1173 + C113 * C1165 + C101 * C1174) *
                         C955 -
                     (C115 * C1175 + C103 * C1190 + C114 * C1176 +
                      C102 * C1191 + C113 * C1177 + C101 * C1192) *
                         C31476) *
                        C31357 * C31369 * C31433 +
                    ((C113 * C417 + C101 * C427 + C114 * C418 + C102 * C428 +
                      C115 * C419 + C103 * C429) *
                         C953 +
                     (C113 * C430 + C101 * C447 + C114 * C431 + C102 * C448 +
                      C115 * C432 + C103 * C449) *
                         C947 -
                     (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                      C113 * C818 + C101 * C823) *
                         C954 -
                     (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                      C113 * C826 + C101 * C833) *
                         C948 +
                     (C113 * C1164 + C101 * C1173 + C114 * C1163 +
                      C102 * C1172 + C115 * C1457 + C103 * C1458) *
                         C955 +
                     (C113 * C1176 + C101 * C1191 + C114 * C1175 +
                      C102 * C1190 + C115 * C1459 + C103 * C1460) *
                         C31476) *
                        C31357 * C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C116 +
                      (C4585 * C127 + C31123 * C138) * C31171) *
                         C4582 +
                     (C4733 * C116 + C4734 * C31171) * C4583 +
                     (C4735 * C116 + C4736 * C31171) * C4584) *
                        C31369 * C557 -
                    ((C4742 * C31171 + C4741 * C116) * C4584 +
                     (C4740 * C31171 + C4739 * C116) * C4583 +
                     ((C4585 * C128 + C31123 * C139) * C31171 +
                      (C4585 * C118 + C31123 * C125) * C116) *
                         C4582) *
                        C31369 * C558 +
                    (((C4585 * C119 + C31123 * C126) * C116 +
                      (C4585 * C129 + C31123 * C140) * C31171) *
                         C4582 +
                     (C4745 * C116 + C4746 * C31171) * C4583 +
                     (C4747 * C116 + C4748 * C31171) * C4584) *
                        C31369 * C559 -
                    ((C4970 * C31171 + C4969 * C116) * C4584 +
                     (C4968 * C31171 + C4967 * C116) * C4583 +
                     ((C4585 * C130 + C31123 * C141) * C31171 +
                      (C4585 * C120 + C31123 * C131) * C116) *
                         C4582) *
                        C31369 * C31480) *
                       C31448 +
                   ((((C4585 * C417 + C31123 * C427) * C116 +
                      (C4585 * C430 + C31123 * C447) * C31171) *
                         C4582 +
                     ((C4585 * C818 + C31123 * C823) * C116 +
                      (C4585 * C826 + C31123 * C833) * C31171) *
                         C4583 +
                     ((C4585 * C1164 + C31123 * C1173) * C116 +
                      (C4585 * C1176 + C31123 * C1191) * C31171) *
                         C4584) *
                        C31369 * C558 -
                    (((C4585 * C1177 + C31123 * C1192) * C31171 +
                      (C4585 * C1165 + C31123 * C1174) * C116) *
                         C4584 +
                     ((C4585 * C825 + C31123 * C832) * C31171 +
                      (C4585 * C817 + C31123 * C822) * C116) *
                         C4583 +
                     ((C4585 * C433 + C31123 * C450) * C31171 +
                      (C4585 * C420 + C31123 * C434) * C116) *
                         C4582) *
                        C31369 * C557 -
                    (((C4585 * C1175 + C31123 * C1190) * C31171 +
                      (C4585 * C1163 + C31123 * C1172) * C116) *
                         C4584 +
                     ((C4585 * C827 + C31123 * C834) * C31171 +
                      (C4585 * C819 + C31123 * C824) * C116) *
                         C4583 +
                     ((C4585 * C431 + C31123 * C448) * C31171 +
                      (C4585 * C418 + C31123 * C428) * C116) *
                         C4582) *
                        C31369 * C559 +
                    (((C4585 * C419 + C31123 * C429) * C116 +
                      (C4585 * C432 + C31123 * C449) * C31171) *
                         C4582 +
                     ((C4585 * C820 + C31123 * C828) * C116 +
                      (C4585 * C829 + C31123 * C835) * C31171) *
                         C4583 +
                     ((C4585 * C1457 + C31123 * C1458) * C116 +
                      (C4585 * C1459 + C31123 * C1460) * C31171) *
                         C4584) *
                        C31369 * C31480) *
                       C31276)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31123 * C124) * C953 +
                      (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
                      C4734 * C948 + C4735 * C955 + C4736 * C31476) *
                         C4582 +
                     (C4733 * C953 + C4734 * C947 - C4735 * C954 -
                      C4736 * C948 + C4737 * C955 + C4738 * C31476) *
                         C4583 +
                     (C4735 * C953 + C4736 * C947 - C4737 * C954 -
                      C4738 * C948 + C5439 * C955 + C5440 * C31476) *
                         C4584) *
                        C31369 * C31433 +
                    ((C4739 * C954 -
                      ((C4585 * C128 + C31123 * C139) * C947 +
                       (C4585 * C118 + C31123 * C125) * C953) +
                      C4740 * C948 - C4741 * C955 - C4742 * C31476) *
                         C4582 +
                     (C4741 * C954 - (C4740 * C947 + C4739 * C953) +
                      C4742 * C948 - C4743 * C955 - C4744 * C31476) *
                         C4583 +
                     (C4743 * C954 - (C4742 * C947 + C4741 * C953) +
                      C4744 * C948 - C5695 * C955 - C5696 * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C31448 +
                   (((C5239 * C954 -
                      ((C4585 * C433 + C31123 * C450) * C947 +
                       (C4585 * C420 + C31123 * C434) * C953) +
                      C5240 * C948 - C5241 * C955 - C5242 * C31476) *
                         C4582 +
                     (C5241 * C954 - (C5240 * C947 + C5239 * C953) +
                      C5242 * C948 - C5581 * C955 - C5582 * C31476) *
                         C4583 +
                     (C5581 * C954 - (C5242 * C947 + C5241 * C953) +
                      C5582 * C948 - (C4585 * C5552 + C31123 * C5555) * C955 -
                      (C4585 * C5556 + C31123 * C5561) * C31476) *
                         C4584) *
                        C31369 * C31433 +
                    (((C4585 * C417 + C31123 * C427) * C953 +
                      (C4585 * C430 + C31123 * C447) * C947 - C5243 * C954 -
                      C5244 * C948 + C5245 * C955 + C5246 * C31476) *
                         C4582 +
                     (C5243 * C953 + C5244 * C947 - C5245 * C954 -
                      C5246 * C948 + C5851 * C955 + C5852 * C31476) *
                         C4583 +
                     (C5245 * C953 + C5246 * C947 - C5851 * C954 -
                      C5852 * C948 + (C4585 * C5842 + C31123 * C5843) * C955 +
                      (C4585 * C5844 + C31123 * C5845) * C31476) *
                         C4584) *
                        C31369 * C31153) *
                       C31276)) /
                     (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31171) *
              C31357 * C31369 * C107 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31171 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31357 * C31369 * C108 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31171) *
              C31357 * C31369 * C109 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31171 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31357 * C31369 * C110 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31171) *
              C31357 * C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C261 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31513 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C262 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C31501 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C263 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C258 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C262 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31513 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C261) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C31501 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C263 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C261 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31513 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C262 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C31501 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C263 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C953 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C947 -
           (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 +
            C113 * C266 + C101 * C276) *
               C954 -
           (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 +
            C113 * C279 + C101 * C296) *
               C948 +
           (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 +
            C115 * C269 + C103 * C282) *
               C955 +
           (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 +
            C115 * C285 + C103 * C299) *
               C31476) *
              C31357 * C31369 * C31510 +
          ((C113 * C265 + C101 * C275 + C114 * C264 + C102 * C274 +
            C115 * C270 + C103 * C286) *
               C954 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C947 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C953) +
           (C113 * C278 + C101 * C295 + C114 * C277 + C102 * C294 +
            C115 * C287 + C103 * C300) *
               C948 -
           (C115 * C271 + C103 * C288 + C114 * C269 + C102 * C282 +
            C113 * C268 + C101 * C281) *
               C955 -
           (C115 * C289 + C103 * C301 + C114 * C285 + C102 * C299 +
            C113 * C284 + C101 * C298) *
               C31476) *
              C31357 * C31369 * C31497 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C953 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C947 -
           (C115 * C272 + C103 * C290 + C114 * C270 + C102 * C286 +
            C113 * C264 + C101 * C274) *
               C954 -
           (C115 * C291 + C103 * C302 + C114 * C287 + C102 * C300 +
            C113 * C277 + C101 * C294) *
               C948 +
           (C113 * C269 + C101 * C282 + C114 * C271 + C102 * C288 +
            C115 * C273 + C103 * C292) *
               C955 +
           (C113 * C285 + C101 * C299 + C114 * C289 + C102 * C301 +
            C115 * C293 + C103 * C303) *
               C31476) *
              C31357 * C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1024 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1018 -
          (C115 * C264 + C103 * C274 + C114 * C265 + C102 * C275 + C113 * C266 +
           C101 * C276) *
              C1025 -
          (C115 * C277 + C103 * C294 + C114 * C278 + C102 * C295 + C113 * C279 +
           C101 * C296) *
              C1019 +
          (C113 * C267 + C101 * C280 + C114 * C268 + C102 * C281 + C115 * C269 +
           C103 * C282) *
              C1026 +
          (C113 * C283 + C101 * C297 + C114 * C284 + C102 * C298 + C115 * C285 +
           C103 * C299) *
              C1020 -
          (C115 * C1029 + C103 * C1035 + C114 * C1030 + C102 * C1036 +
           C113 * C1031 + C101 * C1037) *
              C1027 -
          (C115 * C1038 + C103 * C1047 + C114 * C1039 + C102 * C1048 +
           C113 * C1040 + C101 * C1049) *
              C1021 +
          (C113 * C1032 + C101 * C1041 + C114 * C1033 + C102 * C1042 +
           C115 * C1034 + C103 * C1043) *
              C1028 +
          (C113 * C1044 + C101 * C1050 + C114 * C1045 + C102 * C1051 +
           C115 * C1046 + C103 * C1052) *
              C1022) *
         C31357 * C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C116 +
            (C4585 * C127 + C31123 * C138) * C31171) *
               C4582 +
           ((C4585 * C266 + C31123 * C276) * C116 +
            (C4585 * C279 + C31123 * C296) * C31171) *
               C4583 +
           ((C4585 * C267 + C31123 * C280) * C116 +
            (C4585 * C283 + C31123 * C297) * C31171) *
               C4584) *
              C31369 * C107 -
          (((C4585 * C284 + C31123 * C298) * C31171 +
            (C4585 * C268 + C31123 * C281) * C116) *
               C4584 +
           ((C4585 * C278 + C31123 * C295) * C31171 +
            (C4585 * C265 + C31123 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31123 * C139) * C31171 +
            (C4585 * C118 + C31123 * C125) * C116) *
               C4582) *
              C31369 * C108 +
          (((C4585 * C119 + C31123 * C126) * C116 +
            (C4585 * C129 + C31123 * C140) * C31171) *
               C4582 +
           ((C4585 * C264 + C31123 * C274) * C116 +
            (C4585 * C277 + C31123 * C294) * C31171) *
               C4583 +
           ((C4585 * C269 + C31123 * C282) * C116 +
            (C4585 * C285 + C31123 * C299) * C31171) *
               C4584) *
              C31369 * C109 -
          (((C4585 * C289 + C31123 * C301) * C31171 +
            (C4585 * C271 + C31123 * C288) * C116) *
               C4584 +
           ((C4585 * C287 + C31123 * C300) * C31171 +
            (C4585 * C270 + C31123 * C286) * C116) *
               C4583 +
           ((C4585 * C130 + C31123 * C141) * C31171 +
            (C4585 * C120 + C31123 * C131) * C116) *
               C4582) *
              C31369 * C110 +
          (((C4585 * C121 + C31123 * C132) * C116 +
            (C4585 * C133 + C31123 * C142) * C31171) *
               C4582 +
           ((C4585 * C272 + C31123 * C290) * C116 +
            (C4585 * C291 + C31123 * C302) * C31171) *
               C4583 +
           ((C4585 * C273 + C31123 * C292) * C116 +
            (C4585 * C293 + C31123 * C303) * C31171) *
               C4584) *
              C31369 * C111) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C261 +
            (C4585 * C127 + C31123 * C138) * C31513 - C4733 * C262 -
            C4734 * C31501 + C4735 * C263 + C4736 * C31476) *
               C4582 +
           (C4733 * C261 + C4734 * C31513 - C4735 * C262 - C4736 * C31501 +
            C4737 * C263 + C4738 * C31476) *
               C4583 +
           (C4735 * C261 + C4736 * C31513 - C4737 * C262 - C4738 * C31501 +
            (C4585 * C1032 + C31123 * C1041) * C263 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C258 +
          ((C4739 * C262 -
            ((C4585 * C128 + C31123 * C139) * C31513 +
             (C4585 * C118 + C31123 * C125) * C261) +
            C4740 * C31501 - C4741 * C263 - C4742 * C31476) *
               C4582 +
           (C4741 * C262 - (C4740 * C31513 + C4739 * C261) + C4742 * C31501 -
            C4743 * C263 - C4744 * C31476) *
               C4583 +
           (C4743 * C262 - (C4742 * C31513 + C4741 * C261) + C4744 * C31501 -
            (C4585 * C1033 + C31123 * C1042) * C263 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C259 +
          (((C4585 * C119 + C31123 * C126) * C261 +
            (C4585 * C129 + C31123 * C140) * C31513 - C4745 * C262 -
            C4746 * C31501 + C4747 * C263 + C4748 * C31476) *
               C4582 +
           (C4745 * C261 + C4746 * C31513 - C4747 * C262 - C4748 * C31501 +
            C4749 * C263 + C4750 * C31476) *
               C4583 +
           (C4747 * C261 + C4748 * C31513 - C4749 * C262 - C4750 * C31501 +
            (C4585 * C1034 + C31123 * C1043) * C263 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31123 * C124) * C953 +
            (C4585 * C127 + C31123 * C138) * C947 - C4733 * C954 -
            C4734 * C948 + C4735 * C955 + C4736 * C31476) *
               C4582 +
           (C4733 * C953 + C4734 * C947 - C4735 * C954 - C4736 * C948 +
            C4737 * C955 + C4738 * C31476) *
               C4583 +
           (C4735 * C953 + C4736 * C947 - C4737 * C954 - C4738 * C948 +
            (C4585 * C1032 + C31123 * C1041) * C955 +
            (C4585 * C1044 + C31123 * C1050) * C31476) *
               C4584) *
              C31369 * C31510 +
          ((C4739 * C954 -
            ((C4585 * C128 + C31123 * C139) * C947 +
             (C4585 * C118 + C31123 * C125) * C953) +
            C4740 * C948 - C4741 * C955 - C4742 * C31476) *
               C4582 +
           (C4741 * C954 - (C4740 * C947 + C4739 * C953) + C4742 * C948 -
            C4743 * C955 - C4744 * C31476) *
               C4583 +
           (C4743 * C954 - (C4742 * C947 + C4741 * C953) + C4744 * C948 -
            (C4585 * C1033 + C31123 * C1042) * C955 -
            (C4585 * C1045 + C31123 * C1051) * C31476) *
               C4584) *
              C31369 * C31497 +
          (((C4585 * C119 + C31123 * C126) * C953 +
            (C4585 * C129 + C31123 * C140) * C947 - C4745 * C954 -
            C4746 * C948 + C4747 * C955 + C4748 * C31476) *
               C4582 +
           (C4745 * C953 + C4746 * C947 - C4747 * C954 - C4748 * C948 +
            C4749 * C955 + C4750 * C31476) *
               C4583 +
           (C4747 * C953 + C4748 * C947 - C4749 * C954 - C4750 * C948 +
            (C4585 * C1034 + C31123 * C1043) * C955 +
            (C4585 * C1046 + C31123 * C1052) * C31476) *
               C4584) *
              C31369 * C31470) *
         C31189) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31123 * C124) * C1024 +
           (C4585 * C127 + C31123 * C138) * C1018 - C4733 * C1025 -
           C4734 * C1019 + C4735 * C1026 + C4736 * C1020 - C4737 * C1027 -
           C4738 * C1021 + C5439 * C1028 + C5440 * C1022) *
              C4582 +
          (C4733 * C1024 + C4734 * C1018 - C4735 * C1025 - C4736 * C1019 +
           C4737 * C1026 + C4738 * C1020 - C5439 * C1027 - C5440 * C1021 +
           C5441 * C1028 + C5442 * C1022) *
              C4583 +
          (C4735 * C1024 + C4736 * C1018 - C4737 * C1025 - C4738 * C1019 +
           C5439 * C1026 + C5440 * C1020 - C5441 * C1027 - C5442 * C1021 +
           (C4585 * C5423 + C31123 * C5426) * C1028 +
           (C4585 * C5427 + C31123 * C5429) * C1022) *
              C4584) *
         C31369 * C31143 * C31189) /
            (p * q * std::sqrt(p + q));
}
