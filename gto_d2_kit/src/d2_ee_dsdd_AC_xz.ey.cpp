/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dsdd_AC_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2022_13_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30220 = ae * be;
    const double C30219 = 0 * be;
    const double C30218 = xA - xB;
    const double C30217 = ae + be;
    const double C30241 = ce * de;
    const double C30240 = ce + de;
    const double C30239 = 0 * de;
    const double C30238 = zC - zD;
    const double C30279 = 0 * ce;
    const double C30274 = 0 * de;
    const double C30273 = 0 * de;
    const double C30324 = 0 * de;
    const double C30372 = zP - zQ;
    const double C30371 = p + q;
    const double C30370 = p * q;
    const double C30369 = xP - xQ;
    const double C30377 = bs[3];
    const double C30388 = bs[4];
    const double C30396 = bs[5];
    const double C30415 = bs[6];
    const double C30447 = bs[7];
    const double C30568 = yP - yQ;
    const double C30818 = bs[2];
    const double C117 = bs[0];
    const double C31249 = xC - xD;
    const double C31278 = yC - yD;
    const double C31463 = yA - yB;
    const double C31475 = zA - zB;
    const double C30222 = C30220 * C30218;
    const double C31230 = std::pow(C30218, 2);
    const double C31538 = C30218 * be;
    const double C30221 = 2 * C30217;
    const double C31539 = std::pow(C30217, 2);
    const double C30242 = std::pow(C30240, 2);
    const double C30257 = 2 * C30240;
    const double C30380 = C30240 * C30217;
    const double C138 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (xP - xQ) * (zP - zQ) * ae * ce) /
                         C30240) /
                        C30217;
    const double C30275 = C30239 / C30240;
    const double C30243 = C30241 * C30238;
    const double C30276 = C30238 * C30239;
    const double C31296 = std::pow(C30238, 2);
    const double C31379 = C30238 * de;
    const double C31377 = C30238 * ce;
    const double C30286 = C30279 / C30240;
    const double C30281 = C30238 * C30274;
    const double C30325 = C30324 / C30240;
    const double C30378 = C30372 * ce;
    const double C30610 = std::pow(C30372, 2);
    const double C30373 = 2 * C30370;
    const double C30379 = C30369 * C30372;
    const double C30398 = std::pow(C30369, 2);
    const double C30492 = C30369 * ae;
    const double C30577 = std::pow(C30568, 2);
    const double C31252 = C31249 * de;
    const double C31251 = C31249 * ce;
    const double C31250 = std::pow(C31249, 2);
    const double C31279 = std::pow(C31278, 2);
    const double C31337 = C31278 * de;
    const double C31335 = C31278 * ce;
    const double C31464 = std::pow(C31463, 2);
    const double C31572 = C31463 * be;
    const double C31476 = std::pow(C31475, 2);
    const double C31573 = C31475 * be;
    const double C31231 = C31230 * C30220;
    const double C31541 = std::pow(C30221, -2);
    const double C31540 = std::pow(C30221, -1);
    const double C30244 = 2 * C30242;
    const double C31552 = 4 * C30242;
    const double C31264 = std::pow(C30257, -1);
    const double C31553 = C30242 * C30257;
    const double C31549 = std::pow(C30257, -2);
    const double C30284 = C30276 / C30240;
    const double C31297 = C31296 * C30241;
    const double C31556 = std::pow(C31377, 2);
    const double C30287 = C30281 / C30240;
    const double C30382 = C30377 * C30378;
    const double C30390 = C30388 * C30378;
    const double C30401 = C30396 * C30378;
    const double C30421 = C30415 * C30378;
    const double C30456 = C30447 * C30378;
    const double C30374 = C30373 / C30371;
    const double C127 = (bs[1] * C30378 * C30373) / (C30371 * C30240);
    const double C118 = -(C30369 * bs[1] * C30373) / C30371;
    const double C263 = -(C30568 * bs[1] * C30373) / C30371;
    const double C419 = -(C30372 * bs[1] * C30373) / C30371;
    const double C30383 = C30379 * ae;
    const double C30497 = C30377 * C30492;
    const double C30500 = C30388 * C30492;
    const double C30506 = C30396 * C30492;
    const double C30520 = C30415 * C30492;
    const double C30541 = C30447 * C30492;
    const double C124 = (-(bs[1] * C30492 * C30373) / C30371) / C30217;
    const double C31542 = std::pow(C31251, 2);
    const double C31253 = C31250 * C30241;
    const double C31280 = C31279 * C30241;
    const double C31554 = std::pow(C31335, 2);
    const double C31465 = C31464 * C30220;
    const double C31477 = C31476 * C30220;
    const double C31232 = C31231 / C30217;
    const double C30278 = C30239 / C30244;
    const double C30283 = C30274 / C30244;
    const double C30282 = C30273 / C30244;
    const double C31583 = C30240 * C31552;
    const double C31584 = 4 * C31553;
    const double C30288 = 0 - C30284;
    const double C31298 = C31297 / C30240;
    const double C30291 = 0 - C30287;
    const double C30376 = -C30374;
    const double C30387 = std::pow(C30374, 4);
    const double C30414 = std::pow(C30374, 6);
    const double C139 =
        (-(C30369 * std::pow(-C30374, 3) * bs[3] * C30369 * C30372 * ae * ce) /
         C30240) /
            C30217 -
        (ae * std::pow(C30374, 2) * bs[2] * C30372 * ce) / (C30240 * C30217);
    const double C30817 = std::pow(C30374, 2);
    const double C125 =
        (C30369 * std::pow(C30374, 2) * bs[2] * C30492) / C30217 -
        (ae * bs[1] * C30373) / (C30371 * C30217);
    const double C30385 = C30383 * ce;
    const double C31254 = C31253 / C30240;
    const double C31281 = C31280 / C30240;
    const double C31466 = C31465 / C30217;
    const double C31478 = C31477 / C30217;
    const double C31233 = -C31232;
    const double C30292 = C30288 * ce;
    const double C31299 = -C31298;
    const double C30295 = C30291 * ce;
    const double C30381 = std::pow(C30376, 3);
    const double C30395 = std::pow(C30376, 5);
    const double C30446 = std::pow(C30376, 7);
    const double C30392 = C30387 * C30390;
    const double C30502 = C30387 * C30500;
    const double C30507 = C30388 * C30387;
    const double C30425 = C30414 * C30421;
    const double C30522 = C30414 * C30520;
    const double C30542 = C30415 * C30414;
    const double C30819 = C30818 * C30817;
    const double C128 = -(C30369 * C30817 * C30818 * C30378) / C30240;
    const double C273 = -(C30568 * C30817 * C30818 * C30378) / C30240;
    const double C276 = (C30568 * C30817 * C30818 * C30492) / C30217;
    const double C429 = (C30372 * C30817 * C30818 * C30492) / C30217;
    const double C432 = (ce * bs[1] * C30373) / (C30371 * C30240) -
                        (C30372 * C30817 * C30818 * C30378) / C30240;
    const double C30389 = C30388 * C30385;
    const double C30399 = C30396 * C30385;
    const double C30418 = C30415 * C30385;
    const double C30452 = C30447 * C30385;
    const double C31255 = -C31254;
    const double C31282 = -C31281;
    const double C31467 = -C31466;
    const double C31479 = -C31478;
    const double C31234 = std::exp(C31233);
    const double C30296 = C30292 / C30240;
    const double C31300 = std::exp(C31299);
    const double C30299 = C30295 / C30240;
    const double C30384 = C30381 * C30382;
    const double C30493 = C30377 * C30381;
    const double C30498 = C30381 * C30497;
    const double C293 =
        (-((yP - yQ) * C30381 * C30377 * C30385) / C30240) / C30217;
    const double C449 =
        (-(C30372 * C30381 * C30377 * C30385) / C30240) / C30217 -
        (std::pow(C30374, 2) * bs[2] * C30492 * ce) / C30380;
    const double C30403 = C30395 * C30401;
    const double C30508 = C30395 * C30506;
    const double C30521 = C30396 * C30395;
    const double C30461 = C30446 * C30456;
    const double C30544 = C30446 * C30541;
    const double C30397 = ae * C30392;
    const double C30394 = C30369 * C30392;
    const double C30953 = C30372 * C30392;
    const double C30982 = C30568 * C30392;
    const double C30503 = C30369 * C30502;
    const double C30585 = C30568 * C30502;
    const double C30609 = C30502 * ce;
    const double C30607 = C30372 * C30502;
    const double C30510 = C30369 * C30507;
    const double C30509 = C30507 * ae;
    const double C30827 = C30507 * C30398;
    const double C30925 = C30507 * C30577;
    const double C30956 = C30507 * C30610;
    const double C30983 = C30568 * C30507;
    const double C31065 = C30372 * C30507;
    const double C31064 = C30507 * ce;
    const double C30428 = C30425 * C30398;
    const double C30448 = ae * C30425;
    const double C30444 = C30369 * C30425;
    const double C30997 = C30425 * C30577;
    const double C31079 = C30372 * C30425;
    const double C31129 = C30568 * C30425;
    const double C30526 = C30369 * C30522;
    const double C30665 = C30522 * C30577;
    const double C30672 = C30568 * C30522;
    const double C30717 = C30522 * C30610;
    const double C30739 = C30522 * ce;
    const double C30737 = C30372 * C30522;
    const double C30547 = C30542 * C30398;
    const double C30546 = C30369 * C30542;
    const double C30545 = C30542 * ae;
    const double C31017 = C30542 * C30577;
    const double C31083 = C30542 * C30610;
    const double C31132 = C30568 * C30542;
    const double C119 = C30819 * C30398 - (bs[1] * C30373) / C30371;
    const double C262 = C30568 * C30369 * C30819;
    const double C264 = C30819 * C30577 - (bs[1] * C30373) / C30371;
    const double C418 = C30372 * C30369 * C30819;
    const double C420 = C30819 * C30610 - (bs[1] * C30373) / C30371;
    const double C817 = C30372 * C30568 * C30819;
    const double C30391 = C30387 * C30389;
    const double C30402 = C30395 * C30399;
    const double C30423 = C30414 * C30418;
    const double C30459 = C30446 * C30452;
    const double C31256 = std::exp(C31255);
    const double C31283 = std::exp(C31282);
    const double C31468 = std::exp(C31467);
    const double C31480 = std::exp(C31479);
    const double C4698 = C31234 * C276;
    const double C9412 = C31234 * C429;
    const double C30223 = C30222 * C31234;
    const double C31574 = C31234 * C31538;
    const double C101 =
        (C31234 * std::pow(C31538, 2)) / C31539 + C31234 / C30221;
    const double C103 = C31541 * C31234;
    const double C13437 = C31540 * C31234;
    const double C30300 = C30296 - C30283;
    const double C30245 = C30243 * C31300;
    const double C116 = -(2 * ce * de * (zC - zD) * C31300) / (ce + de);
    const double C31378 = C31300 / C30257;
    const double C31380 = C31300 * C31377;
    const double C31387 = C31264 * C31300;
    const double C31566 = C31300 * C31379;
    const double C31590 = C31549 * C31300;
    const double C31588 = C31300 * C31556;
    const double C30303 = C30299 - C30282;
    const double C140 =
        (-(ae * C30369 * C30384) / C30240) / C30217 -
        (C30381 * C30377 * C30385) / C30380 +
        C30369 * ((-(C30369 * std::pow(C30374, 4) * bs[4] * C30385) / C30240) /
                      C30217 -
                  (ae * C30384) / C30380);
    const double C129 = -(C30384 * C30398 + C30817 * C30818 * C30378) / C30240;
    const double C130 = (-2 * C30369 * C30384) / C30240 -
                        (C30369 * (C30392 * C30398 + C30384)) / C30240;
    const double C271 = -(C30568 * (C30392 * C30398 + C30384)) / C30240;
    const double C272 = -(C30568 * C30369 * C30384) / C30240;
    const double C280 = -(C30384 * C30577 + C30817 * C30818 * C30378) / C30240;
    const double C431 =
        -(C30372 * C30369 * C30384 + C30369 * C30819 * ce) / C30240;
    const double C436 = -(C30372 * (C30372 * C30384 + C30819 * ce) +
                          C30817 * C30818 * C30378 + C30372 * C30819 * ce) /
                        C30240;
    const double C825 =
        -(C30372 * C30568 * C30384 + C30568 * C30819 * ce) / C30240;
    const double C1029 = (-2 * C30568 * C30384) / C30240 -
                         (C30568 * (C30392 * C30577 + C30384)) / C30240;
    const double C30501 = C30493 * ae;
    const double C30826 = C30369 * C30493;
    const double C30914 = C30568 * C30493;
    const double C30955 = C30372 * C30493;
    const double C30954 = C30493 * ce;
    const double C430 = -(C30372 * (C30392 * C30398 + C30384) +
                          (C30819 + C30493 * C30398) * ce) /
                        C30240;
    const double C1175 = -(C30372 * (C30392 * C30577 + C30384) +
                           (C30819 + C30493 * C30577) * ce) /
                         C30240;
    const double C1868 = (-2 * (C30372 * C30384 + C30819 * ce)) / C30240 -
                         (C30372 * (C30372 * (C30372 * C30392 + C30493 * ce) +
                                    C30384 + C30372 * C30493 * ce)) /
                             C30240 -
                         ((C30819 + C30493 * C30610) * ce) / C30240;
    const double C120 =
        2 * C30369 * C30819 + C30369 * (C30819 + C30493 * C30398);
    const double C261 = C30568 * (C30819 + C30493 * C30398);
    const double C417 = C30372 * (C30819 + C30493 * C30398);
    const double C1023 =
        2 * C30568 * C30819 + C30568 * (C30819 + C30493 * C30577);
    const double C1160 = C30372 * (C30819 + C30493 * C30577);
    const double C1859 =
        2 * C30372 * C30819 + C30372 * (C30819 + C30493 * C30610);
    const double C126 =
        (C30817 * C30818 * C30492 + C30369 * (C30369 * C30498 + C30819 * ae) +
         C30369 * C30819 * ae) /
        C30217;
    const double C275 = (C30568 * (C30369 * C30498 + C30819 * ae)) / C30217;
    const double C277 = (C30817 * C30818 * C30492 + C30498 * C30577) / C30217;
    const double C428 = (C30372 * (C30369 * C30498 + C30819 * ae)) / C30217;
    const double C433 = (C30817 * C30818 * C30492 + C30498 * C30610) / C30217;
    const double C822 = (C30372 * C30568 * C30498) / C30217;
    const double C1032 =
        (2 * C30568 * C30498 + C30568 * (C30498 + C30502 * C30577)) / C30217;
    const double C1172 = (C30372 * (C30498 + C30502 * C30577)) / C30217;
    const double C1865 =
        (2 * C30372 * C30498 + C30372 * (C30498 + C30502 * C30610)) / C30217;
    const double C4700 = C31234 * C293;
    const double C9414 = C31234 * C449;
    const double C30405 = C30403 * C30398;
    const double C30416 = ae * C30403;
    const double C30412 = C30369 * C30403;
    const double C30991 = C30403 * C30577;
    const double C30996 = C30568 * C30403;
    const double C31063 = C30372 * C30403;
    const double C1036 =
        (-3 * (C30392 * C30577 + C30384)) / C30240 +
        C30568 * ((-2 * C30568 * C30392) / C30240 -
                  (C30568 * (C30403 * C30577 + C30392)) / C30240);
    const double C30511 = C30369 * C30508;
    const double C30590 = C30508 * C30577;
    const double C30613 = C30508 * C30610;
    const double C30639 = C30568 * C30508;
    const double C30716 = C30508 * ce;
    const double C30714 = C30372 * C30508;
    const double C30525 = C30521 * C30398;
    const double C30524 = C30369 * C30521;
    const double C30523 = C30521 * ae;
    const double C31007 = C30521 * C30577;
    const double C31016 = C30568 * C30521;
    const double C31066 = C30521 * C30610;
    const double C31081 = C30372 * C30521;
    const double C31080 = C30521 * ce;
    const double C30464 = C30461 * C30398;
    const double C30548 = C30369 * C30544;
    const double C30673 = C30544 * C30577;
    const double C30741 = C30544 * C30610;
    const double C30795 = C30568 * C30544;
    const double C30400 = C30397 / C30380;
    const double C281 = -(C30394 * C30577 + C30369 * C30384) / C30240;
    const double C1166 = (C30568 * C30498 + C30585 * C30610) / C30217;
    const double C30612 = C30609 / C30380;
    const double C30512 = C30510 * ae;
    const double C30832 = 2 * C30510;
    const double C30912 = C30568 * C30510;
    const double C30962 = C30372 * C30510;
    const double C30961 = C30510 * ce;
    const double C30828 = C30493 + C30827;
    const double C30926 = C30493 + C30925;
    const double C30958 = C30493 + C30956;
    const double C31006 = 2 * C30983;
    const double C31036 = C30372 * C30983;
    const double C31035 = C30983 * ce;
    const double C31070 = 2 * C31065;
    const double C31068 = C31065 * ce;
    const double C30431 = C30428 + C30403;
    const double C30453 = C30448 / C30380;
    const double C30455 = -2 * C30444;
    const double C30451 = ae * C30444;
    const double C31026 = C30444 * C30577;
    const double C31104 = C30568 * C30444;
    const double C31114 = C30372 * C30444;
    const double C30999 = C30997 + C30403;
    const double C31133 = C30372 * C31129;
    const double C30666 = C30508 + C30665;
    const double C30674 = 2 * C30672;
    const double C30689 = C30672 * C30610;
    const double C30794 = C30672 * ce;
    const double C30791 = C30372 * C30672;
    const double C30722 = C30508 + C30717;
    const double C30745 = C30739 / C30380;
    const double C30746 = 2 * C30737;
    const double C30743 = C30737 * ce;
    const double C30550 = C30521 + C30547;
    const double C30549 = C30546 * ae;
    const double C31053 = C30546 * C30577;
    const double C31107 = C30568 * C30546;
    const double C31117 = C30546 * C30610;
    const double C31019 = C30521 + C31017;
    const double C31089 = C30521 + C31083;
    const double C31135 = C31132 * C30610;
    const double C141 =
        2 * ((-(C30369 * C30391) / C30240) / C30217 - (ae * C30384) / C30380) -
        (ae * (C30392 * std::pow(C30369, 2) + C30384)) / C30380 +
        C30369 *
            ((-(ae * C30369 * C30392) / C30240) / C30217 - C30391 / C30380 +
             C30369 *
                 ((-(C30369 * std::pow(C30376, 5) * bs[5] * C30385) / C30240) /
                      C30217 -
                  (ae * C30392) / C30380));
    const double C292 = (yP - yQ) * ((-(C30369 * C30391) / C30240) / C30217 -
                                     (ae * C30384) / C30380);
    const double C294 = (-(C30391 * std::pow(yP - yQ, 2)) / C30240) / C30217 -
                        (C30381 * C30377 * C30385) / C30380;
    const double C448 = C30372 * ((-(C30369 * C30391) / C30240) / C30217 -
                                  (ae * C30384) / C30380) -
                        ((C30369 * C30381 * C30377 * C30492 +
                          bs[2] * std::pow(C30374, 2) * ae) *
                         ce) /
                            C30380;
    const double C450 = (-(C30372 * C30498 * ce) / C30240) / C30217 -
                        (C30381 * C30377 * C30385) / C30380 +
                        C30372 * ((-(C30372 * C30391) / C30240) / C30217 -
                                  (C30498 * ce) / C30380);
    const double C832 = (-(C30372 * C30568 * C30391) / C30240) / C30217 -
                        (C30568 * C30498 * ce) / C30380;
    const double C30404 = C30369 * C30402;
    const double C30413 = C30402 / C30380;
    const double C30608 = C30372 * C30402;
    const double C30638 = C30568 * C30402;
    const double C1041 =
        (-2 * C30568 * C30391) / C30380 +
        C30568 * ((-(C30402 * std::pow(C30568, 2)) / C30240) / C30217 -
                  C30391 / C30380);
    const double C1184 =
        (-(C30372 * C30585 * ce) / C30240) / C30217 -
        (C30568 * C30391) / C30380 +
        C30372 * ((-(C30372 * C30568 * C30402) / C30240) / C30217 -
                  (C30585 * ce) / C30380);
    const double C1187 =
        C30372 * ((-(C30402 * C30577) / C30240) / C30217 - C30391 / C30380) -
        ((C30498 + C30502 * C30577) * ce) / C30380;
    const double C1877 =
        2 * ((-(C30372 * C30391) / C30240) / C30217 - (C30498 * ce) / C30380) -
        ((C30498 + C30502 * std::pow(C30372, 2)) * ce) / C30380 +
        C30372 *
            ((-(C30372 * C30502 * ce) / C30240) / C30217 - C30391 / C30380 +
             C30372 * ((-(C30372 * C30402) / C30240) / C30217 -
                       (C30502 * ce) / C30380));
    const double C30427 = C30369 * C30423;
    const double C30445 = C30423 / C30380;
    const double C30647 = C30423 * C30577;
    const double C30653 = C30568 * C30423;
    const double C30715 = C30372 * C30423;
    const double C30463 = C30369 * C30459;
    const double C30654 = C30459 * C30577;
    const double C30738 = C30372 * C30459;
    const double C30793 = C30568 * C30459;
    const double C31258 = C31256 * C31251;
    const double C31257 = C31256 / C30257;
    const double C31266 = C31264 * C31256;
    const double C31545 = C31256 * C31252;
    const double C31581 = C31549 * C31256;
    const double C31575 = C31256 * C31542;
    const double C31336 = C31283 / C30257;
    const double C31338 = C31283 * C31335;
    const double C31345 = C31264 * C31283;
    const double C31560 = C31283 * C31337;
    const double C31587 = C31549 * C31283;
    const double C31585 = C31283 * C31554;
    const double C31604 = C31468 * C31572;
    const double C4582 =
        (C31468 * std::pow(C31572, 2)) / C31539 + C31468 / C30221;
    const double C4584 = C31541 * C31468;
    const double C13439 = C31540 * C31468;
    const double C31605 = C31480 * C31573;
    const double C9187 =
        (C31480 * std::pow(C31573, 2)) / C31539 + C31480 / C30221;
    const double C9189 = C31541 * C31480;
    const double C19131 = C31540 * C31480;
    const double C30224 = 2 * C30223;
    const double C102 = (-2 * C31540 * C31574) / C30217;
    const double C13436 = -C31574 / C30217;
    const double C30305 = C30300 / C30257;
    const double C30304 = C30238 * C30300;
    const double C30258 = 2 * C30245;
    const double C30280 = C30245 / C30242;
    const double C416 = ((0 * ce) / C30240 - C30245 / C30242) / (2 * C30240) +
                        (0 * ce) / C30240;
    const double C665 =
        ((C31300 - (C30238 * 2 * C30245) / C30240) * ce) / C30240 -
        C30239 / C30244;
    const double C666 = (0 * ce) / C30240 - C30245 / C30242;
    const double C1669 = (C31300 * std::pow(C31379, 2)) / C30242 + C31378;
    const double C31381 = C31380 * C31379;
    const double C31386 = C31380 / C30244;
    const double C31559 = C31380 / C30240;
    const double C31557 = C31264 * C31380;
    const double C415 =
        (((C31300 - (C30238 * 2 * C30245) / C30240) * ce) / C30240 -
         C30239 / C30244) /
            (2 * C30240) +
        ((C30238 * ((0 * ce) / C30240 - C30245 / C30242) + C31387) * ce) /
            C30240;
    const double C31388 = C31387 * C31379;
    const double C31570 = C31377 * C31387;
    const double C31569 = 2 * C31387;
    const double C31603 = C31387 / C31552;
    const double C1851 = C31387 / C31584;
    const double C3625 = C31387 / C30257;
    const double C31599 = C31566 / C30240;
    const double C1670 = (-2 * C31264 * C31566) / C30240;
    const double C31613 = C31588 / C30242;
    const double C30309 = C30303 + C30275;
    const double C30504 = C30503 + C30501;
    const double C437 = -(C30372 * (C30372 * C30394 + C30826 * ce) +
                          C30369 * C30384 + C30372 * C30826 * ce) /
                        C30240;
    const double C826 =
        -(C30372 * C30568 * C30394 + C30568 * C30826 * ce) / C30240;
    const double C265 = C30369 * C30819 + C30826 * C30577;
    const double C421 = C30369 * C30819 + C30826 * C30610;
    const double C818 = C30372 * C30568 * C30826;
    const double C1022 =
        2 * C30568 * C30826 + C30568 * (C30826 + C30510 * C30577);
    const double C1159 = C30372 * (C30826 + C30510 * C30577);
    const double C1858 =
        2 * C30372 * C30826 + C30372 * (C30826 + C30510 * C30610);
    const double C1169 = -(C30372 * (C30372 * C30568 * C30392 + C30914 * ce) +
                           C30568 * C30384 + C30372 * C30914 * ce) /
                         C30240;
    const double C2245 =
        (-2 * (C30372 * C30982 + C30914 * ce)) / C30240 -
        (C30372 * (C30372 * (C30372 * C30568 * C30403 + C30983 * ce) + C30982 +
                   C30372 * C30983 * ce)) /
            C30240 -
        ((C30914 + C30983 * C30610) * ce) / C30240;
    const double C1157 = C30568 * C30819 + C30914 * C30610;
    const double C2239 =
        2 * C30372 * C30914 + C30372 * (C30914 + C30983 * C30610);
    const double C30957 = C30953 + C30954;
    const double C4710 = C31234 * C275;
    const double C13592 = C13437 * C275;
    const double C4702 = C31234 * C277;
    const double C9424 = C31234 * C428;
    const double C19426 = C13437 * C428;
    const double C9416 = C31234 * C433;
    const double C5243 = C31234 * C822;
    const double C4708 = C31234 * C1032;
    const double C5249 = C31234 * C1172;
    const double C9420 = C31234 * C1865;
    const double C30407 = C30405 + C30392;
    const double C30419 = C30416 / C30380;
    const double C30420 = -2 * C30412;
    const double C30417 = ae * C30412;
    const double C30960 = C30372 * C30412;
    const double C30985 = C30568 * C30412;
    const double C1028 = (-2 * C30568 * C30394) / C30240 -
                         (C30568 * (C30412 * C30577 + C30394)) / C30240;
    const double C1037 =
        (-3 * (C30412 * C30577 + C30394)) / C30240 +
        C30568 * ((-2 * C30568 * C30412) / C30240 -
                  (C30568 * (C30444 * C30577 + C30412)) / C30240);
    const double C1174 = -(C30372 * (C30412 * C30577 + C30394) +
                           (C30826 + C30510 * C30577) * ce) /
                         C30240;
    const double C1867 = (-2 * (C30372 * C30394 + C30826 * ce)) / C30240 -
                         (C30372 * (C30372 * (C30372 * C30412 + C30510 * ce) +
                                    C30394 + C30372 * C30510 * ce)) /
                             C30240 -
                         ((C30826 + C30510 * C30610) * ce) / C30240;
    const double C30992 = C30991 + C30392;
    const double C30998 = -2 * C30996;
    const double C31034 = C30372 * C30996;
    const double C31067 = C31063 + C31064;
    const double C30513 = C30511 + C30509;
    const double C30591 = C30502 + C30590;
    const double C30615 = C30502 + C30613;
    const double C30664 = 2 * C30639;
    const double C30688 = C30639 * ce;
    const double C30686 = C30372 * C30639;
    const double C2242 =
        (2 * C30372 * C30585 + C30372 * (C30585 + C30639 * C30610)) / C30217;
    const double C30720 = C30716 / C30380;
    const double C30721 = 2 * C30714;
    const double C30718 = C30714 * ce;
    const double C30528 = C30507 + C30525;
    const double C30527 = C30524 * ae;
    const double C30543 = 2 * C30524;
    const double C30928 = C30524 * C30577;
    const double C30963 = C30524 * C30610;
    const double C30986 = C30568 * C30524;
    const double C31116 = C30372 * C30524;
    const double C31115 = C30524 * ce;
    const double C30529 = C30526 + C30523;
    const double C31008 = C30507 + C31007;
    const double C31018 = 2 * C31016;
    const double C31037 = C31016 * C30610;
    const double C31131 = C30372 * C31016;
    const double C31130 = C31016 * ce;
    const double C31069 = C30507 + C31066;
    const double C31090 = 2 * C31081;
    const double C31087 = C31081 * ce;
    const double C31086 = C31079 + C31080;
    const double C30467 = C30464 + C30425;
    const double C30551 = C30548 + C30545;
    const double C30675 = C30522 + C30673;
    const double C30747 = C30522 + C30741;
    const double C30800 = C30795 * C30610;
    const double C5625 = C31234 * C1166;
    const double C1168 = -(C30372 * (C30372 * C30568 * C30412 + C30912 * ce) +
                           C30568 * C30394 + C30372 * C30912 * ce) /
                         C30240;
    const double C1156 = C30568 * C30826 + C30912 * C30610;
    const double C121 = 3 * (C30819 + C30493 * C30398) +
                        C30369 * (2 * C30826 + C30369 * C30828);
    const double C266 = C30819 + C30493 * C30398 + C30828 * C30577;
    const double C267 = C30568 * (2 * C30826 + C30369 * C30828);
    const double C422 = C30819 + C30493 * C30398 + C30828 * C30610;
    const double C423 = C30372 * (2 * C30826 + C30369 * C30828);
    const double C819 = C30372 * C30568 * C30828;
    const double C1179 =
        -(C30372 * (C30372 * (C30403 * C30577 + C30392) + C30926 * ce) +
          C30392 * C30577 + C30384 + C30372 * C30926 * ce) /
        C30240;
    const double C1553 =
        C30372 * ((-2 * C30568 * C30392) / C30240 -
                  (C30568 * (C30403 * C30577 + C30392)) / C30240) -
        ((2 * C30914 + C30568 * C30926) * ce) / C30240;
    const double C1024 = 3 * (C30819 + C30493 * C30577) +
                         C30568 * (2 * C30914 + C30568 * C30926);
    const double C1161 = C30819 + C30493 * C30577 + C30926 * C30610;
    const double C1547 = C30372 * (2 * C30914 + C30568 * C30926);
    const double C1860 = 3 * (C30819 + C30493 * C30610) +
                         C30372 * (2 * C30955 + C30372 * C30958);
    const double C30434 = C30369 * C30431;
    const double C30449 = -3 * C30431;
    const double C30443 = ae * C30431;
    const double C30967 = C30372 * C30431;
    const double C30988 = C30568 * C30431;
    const double C30460 = C30455 / C30240;
    const double C30458 = C30451 / C30240;
    const double C31027 = C31026 + C30412;
    const double C31108 = C30372 * C31104;
    const double C31001 = C30568 * C30999;
    const double C31044 = C30372 * C30999;
    const double C30667 = C30568 * C30666;
    const double C30671 = 3 * C30666;
    const double C30700 = C30666 * ce;
    const double C30698 = C30372 * C30666;
    const double C30692 = C30639 + C30689;
    const double C30798 = C30794 / C30380;
    const double C30799 = 2 * C30791;
    const double C30796 = C30791 * ce;
    const double C30725 = C30372 * C30722;
    const double C30740 = 3 * C30722;
    const double C30736 = C30722 * ce;
    const double C30749 = C30743 / C30240;
    const double C30553 = C30369 * C30550;
    const double C30552 = C30550 * ae;
    const double C30931 = C30550 * C30577;
    const double C30970 = C30550 * C30610;
    const double C30989 = C30568 * C30550;
    const double C31054 = C30524 + C31053;
    const double C31109 = C31107 * C30610;
    const double C31120 = C30524 + C31117;
    const double C31020 = C30568 * C31019;
    const double C31047 = C31019 * C30610;
    const double C31092 = C30372 * C31089;
    const double C31138 = C31016 + C31135;
    const double C4712 = C31234 * C292;
    const double C13596 = C13437 * C292;
    const double C4704 = C31234 * C294;
    const double C9426 = C31234 * C448;
    const double C19430 = C13437 * C448;
    const double C9418 = C31234 * C450;
    const double C5245 = C31234 * C832;
    const double C30406 = C30404 / C30240;
    const double C1042 =
        3 * ((-(C30402 * C30577) / C30240) / C30217 - C30391 / C30380) +
        C30568 * ((-2 * C30568 * C30402) / C30380 +
                  C30568 * ((-(C30423 * C30577) / C30240) / C30217 - C30413));
    const double C30611 = C30608 / C30240;
    const double C2248 =
        2 * ((-(C30372 * C30638) / C30240) / C30217 - (C30585 * ce) / C30380) -
        ((C30585 + C30639 * C30610) * ce) / C30380 +
        C30372 *
            ((-(C30372 * C30639 * ce) / C30240) / C30217 - C30638 / C30380 +
             C30372 * ((-(C30372 * C30568 * C30423) / C30240) / C30217 -
                       (C30639 * ce) / C30380));
    const double C4706 = C31234 * C1041;
    const double C5627 = C31234 * C1184;
    const double C5251 = C31234 * C1187;
    const double C9422 = C31234 * C1877;
    const double C30430 = C30427 / C30240;
    const double C30648 = C30647 / C30240;
    const double C30655 = -2 * C30653;
    const double C30687 = C30372 * C30653;
    const double C30792 = C30653 / C30380;
    const double C30719 = C30715 / C30240;
    const double C30466 = C30463 / C30240;
    const double C30656 = C30654 / C30240;
    const double C30744 = C30738 / C30240;
    const double C30797 = C30372 * C30793;
    const double C31259 = C31258 * C31252;
    const double C31265 = C31258 / C30244;
    const double C31546 = C31264 * C31258;
    const double C31544 = C31258 / C30240;
    const double C258 = (C31256 * std::pow(C31252, 2)) / C30242 + C31257;
    const double C31267 = C31266 * C31252;
    const double C31550 = C31251 * C31266;
    const double C31548 = 2 * C31266;
    const double C31591 = C31266 / C31552;
    const double C112 = C31266 / C31584;
    const double C2720 = C31266 / C30257;
    const double C31577 = C31545 / C30240;
    const double C259 = (-2 * C31264 * C31545) / C30240;
    const double C31606 = C31575 / C30242;
    const double C947 = (C31283 * std::pow(C31337, 2)) / C30242 + C31336;
    const double C31339 = C31338 * C31337;
    const double C31344 = C31338 / C30244;
    const double C31558 = C31338 / C30240;
    const double C31555 = C31264 * C31338;
    const double C31346 = C31345 * C31337;
    const double C31564 = C31335 * C31345;
    const double C31563 = 2 * C31345;
    const double C31597 = C31345 / C31552;
    const double C1019 = C31345 / C31584;
    const double C2717 = C31345 / C30257;
    const double C31593 = C31560 / C30240;
    const double C948 = (-2 * C31264 * C31560) / C30240;
    const double C31611 = C31585 / C30242;
    const double C4583 = (-2 * C31540 * C31604) / C30217;
    const double C13438 = -C31604 / C30217;
    const double C9188 = (-2 * C31540 * C31605) / C30217;
    const double C19130 = -C31605 / C30217;
    const double C114 =
        ((-C30219 / C30217) / C30221 -
         ((C31234 - (C30218 * C30224) / C30217) * be) / C30217) /
            C30221 -
        ((C30218 * ((-C30224 / C30217) / C30221 - (0 * be) / C30217) + C13437) *
         be) /
            C30217;
    const double C115 =
        ((-C30224 / C30217) / C30221 - (0 * be) / C30217) / C30221 -
        (0 * be) / C30217;
    const double C4585 = -C30224 / C30217;
    const double C13440 = (-C30219 / C30217) / C30221 -
                          ((C31234 - (C30218 * C30224) / C30217) * be) / C30217;
    const double C13441 = (-C30224 / C30217) / C30221 - (0 * be) / C30217;
    const double C13610 = C13436 * C292;
    const double C13606 = C13436 * C275;
    const double C13604 = C13436 * C277;
    const double C13600 = C13436 * C294;
    const double C13594 = C13436 * C293;
    const double C13590 = C13436 * C276;
    const double C14280 = C13436 * C832;
    const double C14276 = C13436 * C822;
    const double C14542 = C13436 * C1041;
    const double C14538 = C13436 * C1032;
    const double C14720 = C13436 * C1187;
    const double C14716 = C13436 * C1172;
    const double C14712 = C13436 * C1184;
    const double C14708 = C13436 * C1166;
    const double C19446 = C13436 * C448;
    const double C19442 = C13436 * C428;
    const double C19438 = C13436 * C450;
    const double C19434 = C13436 * C433;
    const double C19432 = C13436 * C449;
    const double C19428 = C13436 * C429;
    const double C21172 = C13436 * C1877;
    const double C21168 = C13436 * C1865;
    const double C113 =
        ((-(0 * be) / C30217) / C30221 -
         ((0 - (C30218 * C30219) / C30217) * be) / C30217) /
            C30221 -
        ((C30218 * ((-C30219 / C30217) / C30221 -
                    ((C31234 - (C30218 * C30224) / C30217) * be) / C30217) +
          C13436) *
         be) /
            C30217 +
        (-C30224 / C30217) / C30221 - (0 * be) / C30217;
    const double C30310 = C30304 + 0;
    const double C30277 = C30238 * C30258;
    const double C1673 =
        ((-C30239 / C30240) / C30257 -
         ((C31300 - (C30238 * C30258) / C30240) * de) / C30240) /
            C30257 -
        ((C30238 * ((-C30258 / C30240) / C30257 - (0 * de) / C30240) + C31387) *
         de) /
            C30240;
    const double C1674 =
        ((-C30258 / C30240) / C30257 - (0 * de) / C30240) / C30257 -
        (0 * de) / C30240;
    const double C3114 = (-C30258 / C30240) / C30257 - (0 * de) / C30240;
    const double C30290 = C30286 - C30280;
    const double C31382 = C31381 / C30242;
    const double C414 =
        (((0 - (C30238 * C30239) / C30240) * ce) / C30240 - (0 * de) / C30244) /
            (2 * C30240) +
        ((C30238 * (((C31300 - (C30238 * 2 * C30245) / C30240) * ce) / C30240 -
                    C30239 / C30244) +
          C31559) *
         ce) /
            C30240 +
        (0 * ce) / C30240 - C30245 / C30242;
    const double C31589 = 2 * C31557;
    const double C31389 = C31388 / C30240;
    const double C31602 = C31570 / C30244;
    const double C31618 = C31559 - C31599;
    const double C3111 = -C31599;
    const double C31625 = C31613 + C31378;
    const double C30313 = C30309 / C30257;
    const double C131 =
        (2 * (C30369 * C30498 + C30819 * ae) +
         C30369 * (C30498 + C30369 * C30504 + C30369 * C30493 * ae) +
         (C30819 + C30493 * C30398) * ae) /
        C30217;
    const double C274 =
        (C30568 * (C30498 + C30369 * C30504 + C30826 * ae)) / C30217;
    const double C278 =
        (C30369 * C30498 + C30819 * ae + C30504 * C30577) / C30217;
    const double C427 =
        (C30372 * (C30498 + C30369 * C30504 + C30826 * ae)) / C30217;
    const double C434 =
        (C30369 * C30498 + C30819 * ae + C30504 * C30610) / C30217;
    const double C823 = (C30372 * C30568 * C30504) / C30217;
    const double C1872 =
        (-3 * (C30372 * C30957 + C30384 + C30955 * ce)) / C30240 +
        C30372 * ((-2 * C30957) / C30240 -
                  (C30372 * (C30372 * (C30372 * C30403 + C30507 * ce) + C30392 +
                             C30372 * C30507 * ce)) /
                      C30240 -
                  (C30958 * ce) / C30240) -
        ((2 * C30955 + C30372 * C30958) * ce) / C30240;
    const double C133 =
        (-3 * (C30392 * C30398 + C30384)) / C30240 +
        C30369 * ((-2 * C30394) / C30240 - (C30369 * C30407) / C30240);
    const double C282 = -(C30407 * C30577 + C30392 * C30398 + C30384) / C30240;
    const double C284 =
        C30568 * ((-2 * C30394) / C30240 - (C30369 * C30407) / C30240);
    const double C438 = -(C30372 * (C30372 * C30407 + C30828 * ce) +
                          C30392 * C30398 + C30384 + C30372 * C30828 * ce) /
                        C30240;
    const double C440 =
        C30372 * ((-2 * C30394) / C30240 - (C30369 * C30407) / C30240) -
        ((2 * C30826 + C30369 * C30828) * ce) / C30240;
    const double C827 =
        -(C30372 * C30568 * C30407 + C30568 * C30828 * ce) / C30240;
    const double C1027 = (-2 * C30568 * C30407) / C30240 -
                         (C30568 * (C30431 * C30577 + C30407)) / C30240;
    const double C30424 = C30420 / C30240;
    const double C30422 = C30417 / C30240;
    const double C30964 = C30960 + C30961;
    const double C5473 =
        4 * ((-2 * C30982) / C30240 - (C30568 * C30992) / C30240) +
        C30568 * ((-3 * C30992) / C30240 +
                  C30568 * ((-2 * C30568 * C30403) / C30240 -
                            (C30568 * (C30425 * C30577 + C30403)) / C30240));
    const double C31000 = C30998 / C30240;
    const double C31038 = C31034 + C31035;
    const double C31071 = C30372 * C31067;
    const double C31078 = -2 * C31067;
    const double C30514 = C30369 * C30513;
    const double C30519 = 2 * C30513;
    const double C30583 = C30568 * C30513;
    const double C30621 = C30513 * ce;
    const double C30619 = C30372 * C30513;
    const double C1031 =
        (2 * C30568 * C30504 + C30568 * (C30504 + C30513 * C30577)) / C30217;
    const double C1171 = (C30372 * (C30504 + C30513 * C30577)) / C30217;
    const double C1864 =
        (2 * C30372 * C30504 + C30372 * (C30504 + C30513 * C30610)) / C30217;
    const double C1188 =
        (-(C30402 * C30577) / C30240) / C30217 - C30391 / C30380 -
        (C30372 * C30591 * ce) / C30380 +
        C30372 * (C30372 * ((-(C30423 * C30577) / C30240) / C30217 - C30413) -
                  (C30591 * ce) / C30380);
    const double C1556 =
        C30372 * ((-2 * C30568 * C30402) / C30380 +
                  C30568 * ((-(C30423 * C30577) / C30240) / C30217 - C30413)) -
        ((2 * C30585 + C30568 * C30591) * ce) / C30380;
    const double C1033 = (3 * (C30498 + C30502 * C30577) +
                          C30568 * (2 * C30585 + C30568 * C30591)) /
                         C30217;
    const double C1176 = (C30498 + C30502 * C30577 + C30591 * C30610) / C30217;
    const double C1550 = (C30372 * (2 * C30585 + C30568 * C30591)) / C30217;
    const double C6372 =
        (2 * C30372 * C30591 + C30372 * (C30591 + C30666 * C30610)) / C30217;
    const double C1869 = (3 * (C30498 + C30502 * C30610) +
                          C30372 * (2 * C30607 + C30372 * C30615)) /
                         C30217;
    const double C30691 = C30688 / C30380;
    const double C6765 = C31234 * C2242;
    const double C16076 = C13436 * C2242;
    const double C30723 = C30718 / C30240;
    const double C30530 = C30528 * ae;
    const double C30833 = C30369 * C30528;
    const double C30836 = 3 * C30528;
    const double C30910 = C30568 * C30528;
    const double C30969 = C30372 * C30528;
    const double C30968 = C30528 * ce;
    const double C1173 = -(C30372 * (C30431 * C30577 + C30407) +
                           (C30828 + C30528 * C30577) * ce) /
                         C30240;
    const double C1866 = (-2 * (C30372 * C30407 + C30828 * ce)) / C30240 -
                         (C30372 * (C30372 * (C30372 * C30431 + C30528 * ce) +
                                    C30407 + C30372 * C30528 * ce)) /
                             C30240 -
                         ((C30828 + C30528 * C30610) * ce) / C30240;
    const double C1021 =
        2 * C30568 * C30828 + C30568 * (C30828 + C30528 * C30577);
    const double C1158 = C30372 * (C30828 + C30528 * C30577);
    const double C1857 =
        2 * C30372 * C30828 + C30372 * (C30828 + C30528 * C30610);
    const double C30929 = C30510 + C30928;
    const double C30965 = C30510 + C30963;
    const double C31052 = 2 * C30986;
    const double C31106 = C30372 * C30986;
    const double C31105 = C30986 * ce;
    const double C2246 =
        (-2 * (C30372 * C30985 + C30912 * ce)) / C30240 -
        (C30372 * (C30372 * (C30372 * C30568 * C30444 + C30986 * ce) + C30985 +
                   C30372 * C30986 * ce)) /
            C30240 -
        ((C30912 + C30986 * C30610) * ce) / C30240;
    const double C2240 =
        2 * C30372 * C30912 + C30372 * (C30912 + C30986 * C30610);
    const double C31121 = 2 * C31116;
    const double C31119 = C31116 * ce;
    const double C31118 = C31114 + C31115;
    const double C30531 = C30369 * C30529;
    const double C30540 = 2 * C30529;
    const double C30593 = C30529 * C30577;
    const double C30622 = C30529 * C30610;
    const double C30642 = C30568 * C30529;
    const double C30777 = C30529 * ce;
    const double C30775 = C30372 * C30529;
    const double C31009 = C30568 * C31008;
    const double C31015 = 3 * C31008;
    const double C31046 = C30372 * C31008;
    const double C31045 = C31008 * ce;
    const double C6373 = (-2 * (C30372 * C30992 + C30926 * ce)) / C30240 -
                         (C30372 * (C30372 * (C30372 * C30999 + C31008 * ce) +
                                    C30992 + C30372 * C31008 * ce)) /
                             C30240 -
                         ((C30926 + C31008 * C30610) * ce) / C30240;
    const double C6368 =
        2 * C30372 * C30926 + C30372 * (C30926 + C31008 * C30610);
    const double C31039 = C30983 + C31037;
    const double C31136 = 2 * C31131;
    const double C31134 = C31131 * ce;
    const double C31137 = C31133 + C31130;
    const double C31072 = C30372 * C31069;
    const double C31084 = 3 * C31069;
    const double C31082 = C31069 * ce;
    const double C31091 = C30372 * C31086;
    const double C30470 = C30369 * C30467;
    const double C1038 =
        (-3 * (C30431 * C30577 + C30407)) / C30240 +
        C30568 * ((-2 * C30568 * C30431) / C30240 -
                  (C30568 * (C30467 * C30577 + C30431)) / C30240);
    const double C30554 = C30369 * C30551;
    const double C30707 = C30551 * C30577;
    const double C30768 = C30568 * C30551;
    const double C30778 = C30551 * C30610;
    const double C30676 = C30568 * C30675;
    const double C30701 = C30675 * C30610;
    const double C30751 = C30372 * C30747;
    const double C30803 = C30672 + C30800;
    const double C30436 = C30434 / C30240;
    const double C30454 = C30449 / C30240;
    const double C30450 = C30443 / C30380;
    const double C30462 = -C30458;
    const double C5766 =
        4 * ((-2 * C30985) / C30240 - (C30568 * C31027) / C30240) +
        C30568 * ((-3 * C31027) / C30240 +
                  C30568 * ((-2 * C30568 * C30444) / C30240 -
                            (C30568 * (C30369 * C30461 * C30577 + C30444)) /
                                C30240));
    const double C31002 = C31001 / C30240;
    const double C30668 = C30664 + C30667;
    const double C30702 = C30700 / C30380;
    const double C6370 = (3 * (C30585 + C30639 * C30610) +
                          C30372 * (2 * C30686 + C30372 * C30692)) /
                         C30217;
    const double C30801 = C30796 / C30240;
    const double C30728 = C30721 + C30725;
    const double C30742 = C30736 / C30380;
    const double C30752 = -C30749;
    const double C30555 = C30543 + C30553;
    const double C30932 = C30528 + C30931;
    const double C30972 = C30528 + C30970;
    const double C31055 = C30568 * C31054;
    const double C31111 = C30986 + C31109;
    const double C31123 = C30372 * C31120;
    const double C31021 = C31018 + C31020;
    const double C31049 = C31008 + C31047;
    const double C31094 = C31090 + C31092;
    const double C31140 = C30372 * C31138;
    const double C30408 = -C30406;
    const double C5484 = C31234 * C1042;
    const double C14548 = C13436 * C1042;
    const double C30614 = -C30611;
    const double C6767 = C31234 * C2248;
    const double C16080 = C13436 * C2248;
    const double C30433 = -C30430;
    const double C30649 = -C30648;
    const double C30657 = C30655 / C30380;
    const double C30690 = C30687 / C30240;
    const double C30724 = -C30719;
    const double C30469 = -C30466;
    const double C30658 = -C30656;
    const double C30750 = -C30744;
    const double C30802 = C30797 / C30240;
    const double C31260 = C31259 / C30242;
    const double C31578 = 2 * C31546;
    const double C31268 = C31267 / C30240;
    const double C31582 = C31550 / C30244;
    const double C31607 = C31544 - C31577;
    const double C2457 = -C31577;
    const double C31621 = C31606 + C31257;
    const double C31340 = C31339 / C30242;
    const double C31586 = 2 * C31555;
    const double C31347 = C31346 / C30240;
    const double C31596 = C31564 / C30244;
    const double C31615 = C31558 - C31593;
    const double C2349 = -C31593;
    const double C31624 = C31611 + C31336;
    const double C4725 = C4585 * C266;
    const double C4723 = C4585 * C271;
    const double C4721 = C4585 * C261;
    const double C4719 = C4585 * C1028;
    const double C4717 = C4585 * C1022;
    const double C4715 = C4585 * C281;
    const double C4713 = C4585 * C265;
    const double C4711 = C4585 * C272;
    const double C4709 = C4585 * C262;
    const double C4707 = C4585 * C1023;
    const double C4705 = C4585 * C1029;
    const double C4703 = C4585 * C280;
    const double C4701 = C4585 * C264;
    const double C4699 = C4585 * C273;
    const double C4697 = C4585 * C263;
    const double C4980 = C4585 * C267;
    const double C5266 = C4585 * C819;
    const double C5262 = C4585 * C1174;
    const double C5258 = C4585 * C1159;
    const double C5256 = C4585 * C826;
    const double C5252 = C4585 * C818;
    const double C5250 = C4585 * C1175;
    const double C5248 = C4585 * C1160;
    const double C5244 = C4585 * C825;
    const double C5242 = C4585 * C817;
    const double C5483 = C4585 * C1036;
    const double C5481 = C4585 * C1024;
    const double C5640 = C4585 * C1553;
    const double C5636 = C4585 * C1547;
    const double C5634 = C4585 * C1179;
    const double C5632 = C4585 * C1161;
    const double C5626 = C4585 * C1169;
    const double C5624 = C4585 * C1157;
    const double C5770 = C4585 * C1037;
    const double C6536 = C4585 * C1168;
    const double C6534 = C4585 * C1156;
    const double C6766 = C4585 * C2245;
    const double C6764 = C4585 * C2239;
    const double C9439 = C4585 * C422;
    const double C9437 = C4585 * C430;
    const double C9435 = C4585 * C417;
    const double C9433 = C4585 * C1867;
    const double C9431 = C4585 * C1858;
    const double C9429 = C4585 * C437;
    const double C9427 = C4585 * C421;
    const double C9425 = C4585 * C431;
    const double C9423 = C4585 * C418;
    const double C9421 = C4585 * C1868;
    const double C9419 = C4585 * C1859;
    const double C9417 = C4585 * C436;
    const double C9415 = C4585 * C420;
    const double C9413 = C4585 * C432;
    const double C9411 = C4585 * C419;
    const double C9661 = C4585 * C423;
    const double C10739 = C4585 * C1860;
    const double C13635 = C13440 * C266;
    const double C13625 = C13440 * C271;
    const double C13621 = C13440 * C261;
    const double C13617 = C13440 * C281;
    const double C13613 = C13440 * C265;
    const double C13609 = C13440 * C272;
    const double C13605 = C13440 * C262;
    const double C13603 = C13440 * C264;
    const double C13599 = C13440 * C280;
    const double C13593 = C13440 * C273;
    const double C13589 = C13440 * C263;
    const double C13937 = C13440 * C267;
    const double C14291 = C13440 * C819;
    const double C14285 = C13440 * C826;
    const double C14281 = C13440 * C818;
    const double C14279 = C13440 * C825;
    const double C14275 = C13440 * C817;
    const double C14551 = C13440 * C1024;
    const double C14547 = C13440 * C1036;
    const double C14541 = C13440 * C1029;
    const double C14537 = C13440 * C1023;
    const double C14729 = C13440 * C1179;
    const double C14725 = C13440 * C1161;
    const double C14719 = C13440 * C1175;
    const double C14715 = C13440 * C1160;
    const double C14711 = C13440 * C1169;
    const double C14707 = C13440 * C1157;
    const double C14879 = C13440 * C1022;
    const double C14875 = C13440 * C1028;
    const double C15085 = C13440 * C1174;
    const double C15081 = C13440 * C1159;
    const double C15227 = C13440 * C1553;
    const double C15223 = C13440 * C1547;
    const double C15807 = C13440 * C1168;
    const double C15803 = C13440 * C1156;
    const double C16079 = C13440 * C2245;
    const double C16075 = C13440 * C2239;
    const double C19465 = C13440 * C422;
    const double C19463 = C13440 * C430;
    const double C19459 = C13440 * C417;
    const double C19455 = C13440 * C437;
    const double C19451 = C13440 * C421;
    const double C19445 = C13440 * C431;
    const double C19441 = C13440 * C418;
    const double C19437 = C13440 * C436;
    const double C19433 = C13440 * C420;
    const double C19431 = C13440 * C432;
    const double C19427 = C13440 * C419;
    const double C19757 = C13440 * C423;
    const double C21173 = C13440 * C1860;
    const double C21171 = C13440 * C1868;
    const double C21167 = C13440 * C1859;
    const double C21517 = C13440 * C1867;
    const double C21513 = C13440 * C1858;
    const double C13623 = C13441 * C267;
    const double C13615 = C13441 * C266;
    const double C13611 = C13441 * C271;
    const double C13607 = C13441 * C261;
    const double C13601 = C13441 * C265;
    const double C13597 = C13441 * C281;
    const double C13595 = C13441 * C272;
    const double C13591 = C13441 * C262;
    const double C14283 = C13441 * C819;
    const double C14277 = C13441 * C826;
    const double C14273 = C13441 * C818;
    const double C14545 = C13441 * C1037;
    const double C14543 = C13441 * C1028;
    const double C14539 = C13441 * C1022;
    const double C14721 = C13441 * C1174;
    const double C14717 = C13441 * C1159;
    const double C14713 = C13441 * C1168;
    const double C14709 = C13441 * C1156;
    const double C19457 = C13441 * C423;
    const double C19449 = C13441 * C422;
    const double C19447 = C13441 * C430;
    const double C19443 = C13441 * C417;
    const double C19439 = C13441 * C437;
    const double C19435 = C13441 * C421;
    const double C19429 = C13441 * C431;
    const double C19425 = C13441 * C418;
    const double C21169 = C13441 * C1867;
    const double C21165 = C13441 * C1858;
    const double C30314 = C30310 * de;
    const double C30285 = C30277 / C30240;
    const double C30294 = C30238 * C30290;
    const double C30323 = C30290 / C30257;
    const double C31383 = C31378 - C31382;
    const double C31614 = C31589 / C30240;
    const double C31390 = C31386 - C31389;
    const double C31628 = C31618 / C30257;
    const double C1672 =
        ((-(0 * de) / C30240) / C30257 -
         ((0 - (C30238 * C30239) / C30240) * de) / C30240) /
            C30257 -
        ((C30238 * ((-C30239 / C30240) / C30257 -
                    ((C31300 - (C30238 * C30258) / C30240) * de) / C30240) +
          C3111) *
         de) /
            C30240 +
        (-C30258 / C30240) / C30257 - (0 * de) / C30240;
    const double C4722 = C31234 * C274;
    const double C13622 = C13436 * C274;
    const double C13608 = C13437 * C274;
    const double C4714 = C31234 * C278;
    const double C13614 = C13436 * C278;
    const double C13602 = C13437 * C278;
    const double C9436 = C31234 * C427;
    const double C19460 = C13436 * C427;
    const double C19444 = C13437 * C427;
    const double C9428 = C31234 * C434;
    const double C19452 = C13436 * C434;
    const double C19436 = C13437 * C434;
    const double C5253 = C31234 * C823;
    const double C14282 = C13436 * C823;
    const double C14274 = C13437 * C823;
    const double C10741 = C4585 * C1872;
    const double C21177 = C13440 * C1872;
    const double C4727 = C4585 * C282;
    const double C13631 = C13440 * C282;
    const double C13619 = C13441 * C282;
    const double C4982 = C4585 * C284;
    const double C13627 = C13441 * C284;
    const double C13941 = C13440 * C284;
    const double C9441 = C4585 * C438;
    const double C19469 = C13440 * C438;
    const double C19453 = C13441 * C438;
    const double C9663 = C4585 * C440;
    const double C19461 = C13441 * C440;
    const double C19761 = C13440 * C440;
    const double C5268 = C4585 * C827;
    const double C14295 = C13440 * C827;
    const double C14287 = C13441 * C827;
    const double C4729 = C4585 * C1027;
    const double C14873 = C13441 * C1027;
    const double C30426 = -C30422;
    const double C5485 = C4585 * C5473;
    const double C31073 = C31071 + C30392;
    const double C31085 = C31078 / C30240;
    const double C30515 = C30502 + C30514;
    const double C1165 = (C30568 * C30504 + C30583 * C30610) / C30217;
    const double C30623 = C30621 / C30380;
    const double C4718 = C31234 * C1031;
    const double C14540 = C13437 * C1031;
    const double C14880 = C13436 * C1031;
    const double C5259 = C31234 * C1171;
    const double C14718 = C13437 * C1171;
    const double C15082 = C13436 * C1171;
    const double C9432 = C31234 * C1864;
    const double C21166 = C13437 * C1864;
    const double C21514 = C13436 * C1864;
    const double C5635 = C31234 * C1188;
    const double C14730 = C13436 * C1188;
    const double C5641 = C31234 * C1556;
    const double C15228 = C13436 * C1556;
    const double C5482 = C31234 * C1033;
    const double C14552 = C13436 * C1033;
    const double C5633 = C31234 * C1176;
    const double C14726 = C13436 * C1176;
    const double C5637 = C31234 * C1550;
    const double C15224 = C13436 * C1550;
    const double C6775 = C31234 * C6372;
    const double C10740 = C31234 * C1869;
    const double C21174 = C13436 * C1869;
    const double C30726 = -C30723;
    const double C30834 = C30832 + C30833;
    const double C1167 = -(C30372 * (C30372 * C30568 * C30431 + C30910 * ce) +
                           C30568 * C30407 + C30372 * C30910 * ce) /
                         C30240;
    const double C2247 =
        (-2 * (C30372 * C30988 + C30910 * ce)) / C30240 -
        (C30372 * (C30372 * (C30372 * C30568 * C30467 + C30989 * ce) + C30988 +
                   C30372 * C30989 * ce)) /
            C30240 -
        ((C30910 + C30989 * C30610) * ce) / C30240;
    const double C1155 = C30568 * C30828 + C30910 * C30610;
    const double C2241 =
        2 * C30372 * C30910 + C30372 * (C30910 + C30989 * C30610);
    const double C30971 = C30967 + C30968;
    const double C5274 = C4585 * C1173;
    const double C15083 = C13441 * C1173;
    const double C9445 = C4585 * C1866;
    const double C21519 = C13441 * C1866;
    const double C4731 = C4585 * C1021;
    const double C14877 = C13441 * C1021;
    const double C5272 = C4585 * C1158;
    const double C15079 = C13441 * C1158;
    const double C9443 = C4585 * C1857;
    const double C21515 = C13441 * C1857;
    const double C1180 =
        -(C30372 * (C30372 * (C30444 * C30577 + C30412) + C30929 * ce) +
          C30412 * C30577 + C30394 + C30372 * C30929 * ce) /
        C30240;
    const double C1554 =
        C30372 * ((-2 * C30568 * C30412) / C30240 -
                  (C30568 * (C30444 * C30577 + C30412)) / C30240) -
        ((2 * C30912 + C30568 * C30929) * ce) / C30240;
    const double C5925 =
        C30372 * ((-3 * C31027) / C30240 +
                  C30568 * ((-2 * C30568 * C30444) / C30240 -
                            (C30568 * (C30369 * C30461 * C30577 + C30444)) /
                                C30240)) -
        ((3 * C30929 +
          C30568 * (2 * C30986 + C30568 * (C30524 + C30546 * C30577))) *
         ce) /
            C30240;
    const double C6653 =
        (-2 * (C30372 * C31027 + C30929 * ce)) / C30240 -
        (C30372 * (C30372 * (C30372 * (C30369 * C30461 * C30577 + C30444) +
                             C31054 * ce) +
                   C31027 + C30372 * C31054 * ce)) /
            C30240 -
        ((C30929 + C31054 * C30610) * ce) / C30240;
    const double C1025 = 3 * (C30826 + C30510 * C30577) +
                         C30568 * (2 * C30912 + C30568 * C30929);
    const double C1162 = C30826 + C30510 * C30577 + C30929 * C30610;
    const double C1548 = C30372 * (2 * C30912 + C30568 * C30929);
    const double C6651 =
        2 * C30372 * C30929 + C30372 * (C30929 + C31054 * C30610);
    const double C1873 =
        (-3 * (C30372 * C30964 + C30394 + C30962 * ce)) / C30240 +
        C30372 * ((-2 * C30964) / C30240 -
                  (C30372 * (C30372 * (C30372 * C30444 + C30524 * ce) + C30412 +
                             C30372 * C30524 * ce)) /
                      C30240 -
                  (C30965 * ce) / C30240) -
        ((2 * C30962 + C30372 * C30965) * ce) / C30240;
    const double C1861 = 3 * (C30826 + C30510 * C30610) +
                         C30372 * (2 * C30962 + C30372 * C30965);
    const double C31110 = C31108 + C31105;
    const double C10903 = C4585 * C2246;
    const double C16077 = C13441 * C2246;
    const double C10901 = C4585 * C2240;
    const double C16073 = C13441 * C2240;
    const double C31122 = C30372 * C31118;
    const double C30532 = C30508 + C30531;
    const double C30594 = C30513 + C30593;
    const double C30624 = C30513 + C30622;
    const double C30706 = 2 * C30642;
    const double C30767 = C30642 * ce;
    const double C30765 = C30372 * C30642;
    const double C2243 =
        (2 * C30372 * C30583 + C30372 * (C30583 + C30642 * C30610)) / C30217;
    const double C30780 = C30777 / C30380;
    const double C30781 = 2 * C30775;
    const double C30779 = C30775 * ce;
    const double C31010 = C31006 + C31009;
    const double C31048 = C31044 + C31045;
    const double C6776 = C4585 * C6373;
    const double C6774 = C4585 * C6368;
    const double C6371 =
        (-3 * (C30372 * C31038 + C30982 + C31036 * ce)) / C30240 +
        C30372 * ((-2 * C31038) / C30240 -
                  (C30372 * (C30372 * (C30372 * C30568 * C30425 + C31016 * ce) +
                             C30996 + C30372 * C31016 * ce)) /
                      C30240 -
                  (C31039 * ce) / C30240) -
        ((2 * C31036 + C30372 * C31039) * ce) / C30240;
    const double C6367 = 3 * (C30914 + C30983 * C30610) +
                         C30372 * (2 * C31036 + C30372 * C31039);
    const double C31139 = C30372 * C31137;
    const double C31074 = C31070 + C31072;
    const double C31088 = C31082 / C30240;
    const double C31093 = C31091 + C30403;
    const double C30472 = C30470 / C30240;
    const double C30556 = C30522 + C30554;
    const double C30708 = C30529 + C30707;
    const double C30771 = C30768 * C30610;
    const double C30782 = C30529 + C30778;
    const double C30677 = C30674 + C30676;
    const double C30703 = C30666 + C30701;
    const double C30754 = C30746 + C30751;
    const double C30806 = C30372 * C30803;
    const double C30438 = C30424 - C30436;
    const double C30465 = C30462 / C30217;
    const double C31003 = C31000 - C31002;
    const double C5474 = (4 * (2 * C30585 + C30568 * C30591) +
                          C30568 * (3 * C30591 + C30568 * C30668)) /
                         C30217;
    const double C5610 =
        (2 * C30585 + C30568 * C30591 + C30668 * C30610) / C30217;
    const double C5612 = (C30372 * (3 * C30591 + C30568 * C30668)) / C30217;
    const double C11118 = C31234 * C6370;
    const double C30804 = -C30801;
    const double C10732 = (4 * (2 * C30607 + C30372 * C30615) +
                           C30372 * (3 * C30615 + C30372 * C30728)) /
                          C30217;
    const double C30755 = C30752 / C30217;
    const double C30557 = C30555 * ae;
    const double C30837 = C30369 * C30555;
    const double C30975 = C30568 * C30555;
    const double C1181 =
        -(C30372 * (C30372 * (C30467 * C30577 + C30431) + C30932 * ce) +
          C30431 * C30577 + C30407 + C30372 * C30932 * ce) /
        C30240;
    const double C1555 =
        C30372 * ((-2 * C30568 * C30431) / C30240 -
                  (C30568 * (C30467 * C30577 + C30431)) / C30240) -
        ((2 * C30910 + C30568 * C30932) * ce) / C30240;
    const double C1026 = 3 * (C30828 + C30528 * C30577) +
                         C30568 * (2 * C30910 + C30568 * C30932);
    const double C1163 = C30828 + C30528 * C30577 + C30932 * C30610;
    const double C1549 = C30372 * (2 * C30910 + C30568 * C30932);
    const double C1862 = 3 * (C30828 + C30528 * C30610) +
                         C30372 * (2 * C30969 + C30372 * C30972);
    const double C31056 = C31052 + C31055;
    const double C10896 = 3 * (C30912 + C30986 * C30610) +
                          C30372 * (2 * C31106 + C30372 * C31111);
    const double C31125 = C31121 + C31123;
    const double C31022 = C30568 * C31021;
    const double C6369 = 3 * (C30926 + C31008 * C30610) +
                         C30372 * (2 * C31046 + C30372 * C31049);
    const double C31096 = C30372 * C31094;
    const double C31142 = C31136 + C31140;
    const double C30409 = C30408 / C30217;
    const double C30616 = C30614 / C30217;
    const double C30435 = C30433 / C30217;
    const double C30650 = C30649 / C30217;
    const double C30693 = -C30690;
    const double C30727 = C30724 / C30217;
    const double C30471 = C30469 / C30217;
    const double C30659 = C30658 / C30217;
    const double C30753 = C30750 / C30217;
    const double C30805 = -C30802;
    const double C31261 = C31257 - C31260;
    const double C31608 = C31578 / C30240;
    const double C31269 = C31265 - C31268;
    const double C31622 = C31607 / C30257;
    const double C31341 = C31336 - C31340;
    const double C31612 = C31586 / C30240;
    const double C31348 = C31344 - C31347;
    const double C31626 = C31615 / C30257;
    const double C4740 = C4711 + C4712;
    const double C4739 = C4709 + C4710;
    const double C4738 = C4707 + C4708;
    const double C4737 = C4705 + C4706;
    const double C4736 = C4703 + C4704;
    const double C4735 = C4701 + C4702;
    const double C4734 = C4699 + C4700;
    const double C4733 = C4697 + C4698;
    const double C5279 = C5250 + C5251;
    const double C5278 = C5248 + C5249;
    const double C5277 = C5244 + C5245;
    const double C5276 = C5242 + C5243;
    const double C5490 = C5483 + C5484;
    const double C5647 = C5626 + C5627;
    const double C5646 = C5624 + C5625;
    const double C6779 = C6766 + C6767;
    const double C6778 = C6764 + C6765;
    const double C9454 = C9425 + C9426;
    const double C9453 = C9423 + C9424;
    const double C9452 = C9421 + C9422;
    const double C9451 = C9419 + C9420;
    const double C9450 = C9417 + C9418;
    const double C9449 = C9415 + C9416;
    const double C9448 = C9413 + C9414;
    const double C9447 = C9411 + C9412;
    const double C13647 = C13609 + C13610;
    const double C13645 = C13605 + C13606;
    const double C13644 = C13603 + C13604;
    const double C13642 = C13599 + C13600;
    const double C13639 = C13593 + C13594;
    const double C13637 = C13589 + C13590;
    const double C14300 = C14279 + C14280;
    const double C14298 = C14275 + C14276;
    const double C14558 = C14547 + C14548;
    const double C14555 = C14541 + C14542;
    const double C14553 = C14537 + C14538;
    const double C14737 = C14719 + C14720;
    const double C14735 = C14715 + C14716;
    const double C14733 = C14711 + C14712;
    const double C14731 = C14707 + C14708;
    const double C16084 = C16079 + C16080;
    const double C16082 = C16075 + C16076;
    const double C19483 = C19445 + C19446;
    const double C19481 = C19441 + C19442;
    const double C19479 = C19437 + C19438;
    const double C19477 = C19433 + C19434;
    const double C19476 = C19431 + C19432;
    const double C19474 = C19427 + C19428;
    const double C21184 = C21171 + C21172;
    const double C21182 = C21167 + C21168;
    const double C13640 = C13595 + C13596;
    const double C13638 = C13591 + C13592;
    const double C19475 = C19429 + C19430;
    const double C19473 = C19425 + C19426;
    const double C30316 = C30314 / C30240;
    const double C30289 = C31300 - C30285;
    const double C30298 = C30294 + C31387;
    const double C30326 = C30323 - C30325;
    const double C31567 = C31383 * C31377;
    const double C31601 = C31569 + C31383;
    const double C31571 = C31390 / C30257;
    const double C31568 = C31390 * C31377;
    const double C2129 = C31628 - (C31383 * C31379) / C30240;
    const double C4745 = C4721 + C4722;
    const double C13653 = C13621 + C13622;
    const double C13646 = C13607 + C13608;
    const double C4741 = C4713 + C4714;
    const double C13649 = C13613 + C13614;
    const double C13643 = C13601 + C13602;
    const double C9459 = C9435 + C9436;
    const double C19490 = C19459 + C19460;
    const double C19482 = C19443 + C19444;
    const double C9455 = C9427 + C9428;
    const double C19486 = C19451 + C19452;
    const double C19478 = C19435 + C19436;
    const double C5280 = C5252 + C5253;
    const double C14301 = C14281 + C14282;
    const double C14297 = C14273 + C14274;
    const double C30429 = C30426 / C30217;
    const double C31075 = C31073 + C31068;
    const double C30516 = C30515 + C30512;
    const double C6535 = C31234 * C1165;
    const double C14710 = C13437 * C1165;
    const double C15804 = C13436 * C1165;
    const double C4743 = C4717 + C4718;
    const double C14554 = C14539 + C14540;
    const double C14884 = C14879 + C14880;
    const double C5282 = C5258 + C5259;
    const double C14736 = C14717 + C14718;
    const double C15088 = C15081 + C15082;
    const double C9457 = C9431 + C9432;
    const double C21181 = C21165 + C21166;
    const double C21521 = C21513 + C21514;
    const double C5650 = C5634 + C5635;
    const double C14742 = C14729 + C14730;
    const double C5652 = C5640 + C5641;
    const double C15232 = C15227 + C15228;
    const double C5489 = C5481 + C5482;
    const double C14560 = C14551 + C14552;
    const double C5649 = C5632 + C5633;
    const double C14740 = C14725 + C14726;
    const double C5651 = C5636 + C5637;
    const double C15230 = C15223 + C15224;
    const double C10747 = C10739 + C10740;
    const double C21185 = C21173 + C21174;
    const double C30729 = C30726 / C30217;
    const double C122 = 4 * (2 * C30826 + C30369 * C30828) +
                        C30369 * (3 * C30828 + C30369 * C30834);
    const double C268 = 2 * C30826 + C30369 * C30828 + C30834 * C30577;
    const double C269 = C30568 * (3 * C30828 + C30369 * C30834);
    const double C424 = 2 * C30826 + C30369 * C30828 + C30834 * C30610;
    const double C425 = C30372 * (3 * C30828 + C30369 * C30834);
    const double C820 = C30372 * C30568 * C30834;
    const double C1295 =
        2 * C30568 * C30834 + C30568 * (C30834 + C30555 * C30577);
    const double C1445 = C30372 * (C30834 + C30555 * C30577);
    const double C2137 =
        2 * C30372 * C30834 + C30372 * (C30834 + C30555 * C30610);
    const double C9821 = C4585 * C1167;
    const double C15805 = C13441 * C1167;
    const double C9819 = C4585 * C1155;
    const double C15801 = C13441 * C1155;
    const double C1874 =
        (-3 * (C30372 * C30971 + C30407 + C30969 * ce)) / C30240 +
        C30372 * ((-2 * C30971) / C30240 -
                  (C30372 * (C30372 * (C30372 * C30467 + C30550 * ce) + C30431 +
                             C30372 * C30550 * ce)) /
                      C30240 -
                  (C30972 * ce) / C30240) -
        ((2 * C30969 + C30372 * C30972) * ce) / C30240;
    const double C6544 = C4585 * C1180;
    const double C14727 = C13441 * C1180;
    const double C5938 = C4585 * C1554;
    const double C15225 = C13441 * C1554;
    const double C5772 = C4585 * C1025;
    const double C14549 = C13441 * C1025;
    const double C6542 = C4585 * C1162;
    const double C14723 = C13441 * C1162;
    const double C5936 = C4585 * C1548;
    const double C15221 = C13441 * C1548;
    const double C11011 = C4585 * C1873;
    const double C21179 = C13441 * C1873;
    const double C11009 = C4585 * C1861;
    const double C21175 = C13441 * C1861;
    const double C10898 =
        (-3 * (C30372 * C31110 + C30985 + C31106 * ce)) / C30240 +
        C30372 * ((-2 * C31110) / C30240 -
                  (C30372 *
                   (C30372 * (C30372 * C30568 * C30369 * C30461 + C31107 * ce) +
                    C31104 + C30372 * C31107 * ce)) /
                      C30240 -
                  (C31111 * ce) / C30240) -
        ((2 * C31106 + C30372 * C31111) * ce) / C30240;
    const double C31124 = C31122 + C30412;
    const double C30533 = C30532 + C30527;
    const double C1034 = (3 * (C30504 + C30513 * C30577) +
                          C30568 * (2 * C30583 + C30568 * C30594)) /
                         C30217;
    const double C1177 = (C30504 + C30513 * C30577 + C30594 * C30610) / C30217;
    const double C1551 = (C30372 * (2 * C30583 + C30568 * C30594)) / C30217;
    const double C1870 = (3 * (C30504 + C30513 * C30610) +
                          C30372 * (2 * C30619 + C30372 * C30624)) /
                         C30217;
    const double C30770 = C30767 / C30380;
    const double C10902 = C31234 * C2243;
    const double C16074 = C13437 * C2243;
    const double C30783 = C30779 / C30380;
    const double C5471 = 4 * (2 * C30914 + C30568 * C30926) +
                         C30568 * (3 * C30926 + C30568 * C31010);
    const double C5607 = 2 * C30914 + C30568 * C30926 + C31010 * C30610;
    const double C5608 = C30372 * (3 * C30926 + C30568 * C31010);
    const double C6753 =
        2 * C30372 * C31010 + C30372 * (C31010 + C31021 * C30610);
    const double C6375 =
        (-3 * (C30372 * C31048 + C30992 + C31046 * ce)) / C30240 +
        C30372 * ((-2 * C31048) / C30240 -
                  (C30372 * (C30372 * (C30372 * (C30461 * C30577 + C30425) +
                                       C31019 * ce) +
                             C30999 + C30372 * C31019 * ce)) /
                      C30240 -
                  (C31049 * ce) / C30240) -
        ((2 * C31046 + C30372 * C31049) * ce) / C30240;
    const double C6780 = C6774 + C6775;
    const double C11119 = C4585 * C6371;
    const double C11117 = C4585 * C6367;
    const double C31141 = C31139 + C30996;
    const double C10730 = 4 * (2 * C30955 + C30372 * C30958) +
                          C30372 * (3 * C30958 + C30372 * C31074);
    const double C31095 = C31093 + C31087;
    const double C30474 = C30460 - C30472;
    const double C30558 = C30556 + C30549;
    const double C30709 = C30568 * C30708;
    const double C6652 =
        (2 * C30372 * C30594 + C30372 * (C30594 + C30708 * C30610)) / C30217;
    const double C30773 = C30642 + C30771;
    const double C30785 = C30372 * C30782;
    const double C30678 = C30568 * C30677;
    const double C6754 =
        (2 * C30372 * C30668 + C30372 * (C30668 + C30677 * C30610)) / C30217;
    const double C6374 = (3 * (C30591 + C30666 * C30610) +
                          C30372 * (2 * C30698 + C30372 * C30703)) /
                         C30217;
    const double C30757 = C30372 * C30754;
    const double C30809 = C30799 + C30806;
    const double C134 =
        4 * ((-2 * C30394) / C30240 - (C30369 * C30407) / C30240) +
        C30369 * ((-3 * C30407) / C30240 + C30369 * C30438);
    const double C285 =
        (-2 * C30394) / C30240 - (C30369 * C30407) / C30240 + C30438 * C30577;
    const double C287 = C30568 * ((-3 * C30407) / C30240 + C30369 * C30438);
    const double C442 = (-2 * C30394) / C30240 - (C30369 * C30407) / C30240 +
                        C30372 * (C30372 * C30438 - (C30834 * ce) / C30240) -
                        (C30372 * C30834 * ce) / C30240;
    const double C444 = C30372 * ((-3 * C30407) / C30240 + C30369 * C30438) -
                        ((3 * C30828 + C30369 * C30834) * ce) / C30240;
    const double C829 =
        C30372 * C30568 * C30438 - (C30568 * C30834 * ce) / C30240;
    const double C30468 = C30465 - C30445;
    const double C5476 =
        5 * ((-3 * C30992) / C30240 + C30568 * C31003) +
        C30568 * (4 * C31003 +
                  C30568 * ((-3 * C30999) / C30240 +
                            C30568 * ((-2 * C30568 * C30425) / C30240 -
                                      (C30568 * (C30461 * C30577 + C30425)) /
                                          C30240)));
    const double C5611 = (-2 * C30982) / C30240 - (C30568 * C30992) / C30240 +
                         C30372 * (C30372 * C31003 - (C31010 * ce) / C30240) -
                         (C30372 * C31010 * ce) / C30240;
    const double C5613 = C30372 * ((-3 * C30992) / C30240 + C30568 * C31003) -
                         ((3 * C30926 + C30568 * C31010) * ce) / C30240;
    const double C6755 =
        2 * (C30372 * C31003 - (C31010 * ce) / C30240) +
        C30372 * (C31003 +
                  C30372 * (C30372 * ((-2 * C30568 * C30425) / C30240 -
                                      (C30568 * (C30461 * C30577 + C30425)) /
                                          C30240) -
                            (C31021 * ce) / C30240) -
                  (C30372 * C31021 * ce) / C30240) -
        ((C31010 + C31021 * C30610) * ce) / C30240;
    const double C5488 = C31234 * C5474;
    const double C5643 = C31234 * C5610;
    const double C6054 = C31234 * C5612;
    const double C30807 = C30804 / C30217;
    const double C10744 = C31234 * C10732;
    const double C30758 = C30755 - C30445;
    const double C30838 = C30836 + C30837;
    const double C2027 = C30568 * C30834 + C30975 * C30610;
    const double C6527 =
        (-2 * C30985) / C30240 - (C30568 * C31027) / C30240 +
        C30372 * (C30372 * ((-2 * C30568 * C30444) / C30240 -
                            (C30568 * (C30369 * C30461 * C30577 + C30444)) /
                                C30240) -
                  (C31056 * ce) / C30240) -
        (C30372 * C31056 * ce) / C30240;
    const double C5764 = 4 * (2 * C30912 + C30568 * C30929) +
                         C30568 * (3 * C30929 + C30568 * C31056);
    const double C5923 = C30372 * (3 * C30929 + C30568 * C31056);
    const double C6525 = 2 * C30912 + C30568 * C30929 + C31056 * C30610;
    const double C11004 = 4 * (2 * C30962 + C30372 * C30965) +
                          C30372 * (3 * C30965 + C30372 * C31125);
    const double C31023 = C31015 + C31022;
    const double C31098 = C31084 + C31096;
    const double C11112 = 4 * (2 * C31036 + C30372 * C31039) +
                          C30372 * (3 * C31039 + C30372 * C31142);
    const double C30410 = C30409 - C30400;
    const double C30617 = C30616 - C30612;
    const double C30437 = C30435 - C30419;
    const double C30651 = C30650 - C30413;
    const double C30694 = C30693 / C30217;
    const double C30730 = C30727 - C30720;
    const double C30473 = C30471 - C30453;
    const double C30660 = C30659 - C30445;
    const double C30756 = C30753 - C30745;
    const double C30808 = C30805 / C30217;
    const double C31543 = C31261 * C31251;
    const double C31580 = C31548 + C31261;
    const double C31551 = C31269 / C30257;
    const double C31547 = C31269 * C31251;
    const double C557 = C31622 - (C31261 * C31252) / C30240;
    const double C31561 = C31341 * C31335;
    const double C31595 = C31563 + C31341;
    const double C31565 = C31348 / C30257;
    const double C31562 = C31348 * C31335;
    const double C1289 = C31626 - (C31341 * C31337) / C30240;
    const double C4758 = C4740 * C31300;
    const double C5254 = C4740 * C31559;
    const double C6531 = C4740 * C1669;
    const double C7129 = C4740 * C31625;
    const double C7799 = C4740 * C3111;
    const double C8337 = C4740 * C31383;
    const double C4757 = C4739 * C116;
    const double C5255 = C4739 * C665;
    const double C6532 = C4739 * C1672;
    const double C7130 = C4739 * C414;
    const double C4756 = C4738 * C116;
    const double C5639 = C4738 * C414;
    const double C5931 = C4738 * C665;
    const double C6297 = C4738 * C1672;
    const double C4755 = C4737 * C31300;
    const double C5638 = C4737 * C31625;
    const double C5930 = C4737 * C31559;
    const double C6296 = C4737 * C1669;
    const double C7795 = C4737 * C3111;
    const double C9117 = C4737 * C31383;
    const double C4754 = C4736 * C31300;
    const double C5247 = C4736 * C31559;
    const double C5629 = C4736 * C31625;
    const double C6290 = C4736 * C1669;
    const double C7791 = C4736 * C3111;
    const double C8331 = C4736 * C31383;
    const double C4753 = C4735 * C116;
    const double C5246 = C4735 * C665;
    const double C5628 = C4735 * C414;
    const double C6289 = C4735 * C1672;
    const double C4752 = C4734 * C31300;
    const double C5241 = C4734 * C31559;
    const double C5621 = C4734 * C31625;
    const double C6284 = C4734 * C1669;
    const double C7787 = C4734 * C3111;
    const double C8325 = C4734 * C31383;
    const double C4751 = C4733 * C116;
    const double C5240 = C4733 * C665;
    const double C5620 = C4733 * C414;
    const double C6283 = C4733 * C1672;
    const double C5291 = C5279 * C31387;
    const double C5631 = C5279 * C31614;
    const double C6292 = C5279 * C1670;
    const double C7793 = C5279 * C31387;
    const double C8333 = C5279 * C31390;
    const double C24849 = C5279 * C31300;
    const double C25864 = C5279 * C31625;
    const double C26196 = C5279 * C31559;
    const double C26636 = C5279 * C1669;
    const double C28514 = C5279 * C3111;
    const double C30206 = C5279 * C31383;
    const double C5290 = C5278 * C666;
    const double C5630 = C5278 * C415;
    const double C6291 = C5278 * C1673;
    const double C7792 = C5278 * C3114;
    const double C24850 = C5278 * C116;
    const double C25865 = C5278 * C414;
    const double C26197 = C5278 * C665;
    const double C26637 = C5278 * C1672;
    const double C5289 = C5277 * C31387;
    const double C5623 = C5277 * C31614;
    const double C6286 = C5277 * C1670;
    const double C7789 = C5277 * C31387;
    const double C8327 = C5277 * C31390;
    const double C24848 = C5277 * C31300;
    const double C25468 = C5277 * C31559;
    const double C25858 = C5277 * C31625;
    const double C26630 = C5277 * C1669;
    const double C28510 = C5277 * C3111;
    const double C29194 = C5277 * C31383;
    const double C5288 = C5276 * C666;
    const double C5622 = C5276 * C415;
    const double C6285 = C5276 * C1673;
    const double C7788 = C5276 * C3114;
    const double C24847 = C5276 * C116;
    const double C25467 = C5276 * C665;
    const double C25857 = C5276 * C414;
    const double C26629 = C5276 * C1672;
    const double C5494 = C5490 * C31300;
    const double C6052 = C5490 * C31559;
    const double C8594 = C5490 * C3111;
    const double C5656 = C5647 * C31590;
    const double C6288 = C5647 * C31590;
    const double C8329 = C5647 * C3625;
    const double C25470 = C5647 * C31387;
    const double C25860 = C5647 * C31614;
    const double C26632 = C5647 * C1670;
    const double C28512 = C5647 * C31387;
    const double C29196 = C5647 * C31390;
    const double C5655 = C5646 * C416;
    const double C6287 = C5646 * C1674;
    const double C25469 = C5646 * C666;
    const double C25859 = C5646 * C415;
    const double C26631 = C5646 * C1673;
    const double C28511 = C5646 * C3114;
    const double C6783 = C6779 * C31603;
    const double C8704 = C6779 * C31603;
    const double C25862 = C6779 * C31590;
    const double C26634 = C6779 * C31590;
    const double C29198 = C6779 * C3625;
    const double C25861 = C6778 * C416;
    const double C26633 = C6778 * C1674;
    const double C30318 = C30313 - C30316;
    const double C30293 = C30289 * ce;
    const double C3113 = (-C30275) / C30257 - (C30289 * de) / C30240;
    const double C30302 = C30298 * de;
    const double C8328 = C5646 * C30326;
    const double C29197 = C6778 * C30326;
    const double C1856 =
        (C30326 / C30257 + (0 * ce) / C30240) / C30257 - (0 * de) / C30240;
    const double C2136 = C30326 / C30257 - (0 * de) / C30240;
    const double C3366 = C30326 / C30257 + (0 * ce) / C30240;
    const double C31598 = C31567 / C30240;
    const double C31619 = C31601 / C30257;
    const double C31620 = C31602 + C31571;
    const double C2131 = C31571 - C31388 / C30244;
    const double C31600 = C31568 / C30240;
    const double C6769 = C4736 * C2129;
    const double C6759 = C4734 * C2129;
    const double C27184 = C5277 * C2129;
    const double C4763 = C4745 * C116;
    const double C5264 = C4745 * C665;
    const double C4759 = C4741 * C116;
    const double C5261 = C4741 * C665;
    const double C6540 = C4741 * C1672;
    const double C7136 = C4741 * C414;
    const double C5292 = C5280 * C666;
    const double C6530 = C5280 * C1673;
    const double C7128 = C5280 * C415;
    const double C7798 = C5280 * C3114;
    const double C24851 = C5280 * C116;
    const double C25473 = C5280 * C665;
    const double C26919 = C5280 * C1672;
    const double C27647 = C5280 * C414;
    const double C30432 = C30429 - C30413;
    const double C10733 =
        4 * ((-2 * C30957) / C30240 - (C30372 * C31075) / C30240 -
             (C30958 * ce) / C30240) +
        C30372 *
            ((-3 * C31075) / C30240 +
             C30372 * ((-2 * C31067) / C30240 -
                       (C30372 * (C30372 * (C30372 * C30425 + C30521 * ce) +
                                  C30403 + C30372 * C30521 * ce)) /
                           C30240 -
                       (C31069 * ce) / C30240) -
             (C31074 * ce) / C30240) -
        ((3 * C30958 + C30372 * C31074) * ce) / C30240;
    const double C132 = (3 * (C30498 + C30369 * C30504 + C30826 * ae) +
                         C30369 * (2 * C30504 + C30369 * C30516 + C30828 * ae) +
                         (2 * C30826 + C30369 * C30828) * ae) /
                        C30217;
    const double C279 =
        (C30498 + C30369 * C30504 + C30826 * ae + C30516 * C30577) / C30217;
    const double C283 =
        (C30568 * (2 * C30504 + C30369 * C30516 + C30828 * ae)) / C30217;
    const double C435 =
        (C30498 + C30369 * C30504 + C30826 * ae + C30516 * C30610) / C30217;
    const double C439 =
        (C30372 * (2 * C30504 + C30369 * C30516 + C30828 * ae)) / C30217;
    const double C824 = (C30372 * C30568 * C30516) / C30217;
    const double C6546 = C6534 + C6535;
    const double C14732 = C14709 + C14710;
    const double C15810 = C15803 + C15804;
    const double C4761 = C4743 * C116;
    const double C5934 = C4743 * C665;
    const double C5294 = C5282 * C666;
    const double C6538 = C5282 * C1673;
    const double C7134 = C5282 * C415;
    const double C7802 = C5282 * C3114;
    const double C24853 = C5282 * C116;
    const double C26199 = C5282 * C665;
    const double C5659 = C5650 * C31590;
    const double C6294 = C5650 * C31590;
    const double C8335 = C5650 * C3625;
    const double C25866 = C5650 * C31614;
    const double C26198 = C5650 * C31387;
    const double C26638 = C5650 * C1670;
    const double C28516 = C5650 * C31387;
    const double C30208 = C5650 * C31390;
    const double C5661 = C5652 * C31614;
    const double C5932 = C5652 * C31387;
    const double C6298 = C5652 * C1670;
    const double C7797 = C5652 * C31387;
    const double C9119 = C5652 * C31390;
    const double C25708 = C5652 * C31300;
    const double C26334 = C5652 * C31559;
    const double C29530 = C5652 * C3111;
    const double C5493 = C5489 * C116;
    const double C6051 = C5489 * C665;
    const double C5658 = C5649 * C416;
    const double C6293 = C5649 * C1674;
    const double C8334 = C5649 * C30326;
    const double C25863 = C5649 * C415;
    const double C26195 = C5649 * C666;
    const double C26635 = C5649 * C1673;
    const double C28513 = C5649 * C3114;
    const double C5660 = C5651 * C415;
    const double C5929 = C5651 * C666;
    const double C6295 = C5651 * C1673;
    const double C7794 = C5651 * C3114;
    const double C25707 = C5651 * C116;
    const double C26333 = C5651 * C665;
    const double C30731 = C30729 - C30413;
    const double C4984 = C4585 * C268;
    const double C13633 = C13441 * C268;
    const double C13939 = C13441 * C269;
    const double C9665 = C4585 * C424;
    const double C19467 = C13441 * C424;
    const double C19759 = C13441 * C425;
    const double C14289 = C13441 * C820;
    const double C25135 = C4585 * C820;
    const double C31126 = C31124 + C31119;
    const double C30534 = C30369 * C30533;
    const double C30539 = 3 * C30533;
    const double C30581 = C30568 * C30533;
    const double C30629 = C30533 * ce;
    const double C30627 = C30372 * C30533;
    const double C1030 =
        (2 * C30568 * C30516 + C30568 * (C30516 + C30533 * C30577)) / C30217;
    const double C1170 = (C30372 * (C30516 + C30533 * C30577)) / C30217;
    const double C1863 =
        (2 * C30372 * C30516 + C30372 * (C30516 + C30533 * C30610)) / C30217;
    const double C5773 = C31234 * C1034;
    const double C14550 = C13437 * C1034;
    const double C6543 = C31234 * C1177;
    const double C14724 = C13437 * C1177;
    const double C5937 = C31234 * C1551;
    const double C15222 = C13437 * C1551;
    const double C11010 = C31234 * C1870;
    const double C21176 = C13437 * C1870;
    const double C10905 = C10901 + C10902;
    const double C16081 = C16073 + C16074;
    const double C5487 = C4585 * C5471;
    const double C5642 = C4585 * C5607;
    const double C6053 = C4585 * C5608;
    const double C25867 = C6780 * C416;
    const double C26639 = C6780 * C1674;
    const double C30209 = C6780 * C30326;
    const double C11121 = C11117 + C11118;
    const double C31143 = C31141 + C31134;
    const double C10743 = C4585 * C10730;
    const double C31097 = C30372 * C31095;
    const double C30476 = C30369 * C30474;
    const double C1297 =
        2 * C30568 * C30438 + C30568 * (C30438 + C30474 * C30577);
    const double C1447 = C30372 * (C30438 + C30474 * C30577) -
                         ((C30834 + C30555 * C30577) * ce) / C30240;
    const double C2029 =
        C30568 * C30438 +
        C30372 * (C30372 * C30568 * C30474 - (C30975 * ce) / C30240) -
        (C30372 * C30975 * ce) / C30240;
    const double C2139 =
        2 * (C30372 * C30438 - (C30834 * ce) / C30240) +
        C30372 * (C30438 + C30372 * (C30372 * C30474 - (C30555 * ce) / C30240) -
                  (C30372 * C30555 * ce) / C30240) -
        ((C30834 + C30555 * C30610) * ce) / C30240;
    const double C30559 = C30369 * C30558;
    const double C30596 = C30558 * C30577;
    const double C30630 = C30558 * C30610;
    const double C30645 = C30568 * C30558;
    const double C30710 = C30706 + C30709;
    const double C10897 = (3 * (C30583 + C30642 * C30610) +
                           C30372 * (2 * C30765 + C30372 * C30773)) /
                          C30217;
    const double C30788 = C30781 + C30785;
    const double C30679 = C30671 + C30678;
    const double C30760 = C30740 + C30757;
    const double C11113 = (4 * (2 * C30686 + C30372 * C30692) +
                           C30372 * (3 * C30692 + C30372 * C30809)) /
                          C30217;
    const double C4986 = C4585 * C285;
    const double C13629 = C13441 * C285;
    const double C13943 = C13441 * C287;
    const double C9667 = C4585 * C442;
    const double C19471 = C13441 * C442;
    const double C19763 = C13441 * C444;
    const double C14293 = C13441 * C829;
    const double C25137 = C4585 * C829;
    const double C5644 = C4585 * C5611;
    const double C6055 = C4585 * C5613;
    const double C30810 = C30807 - C30792;
    const double C123 = 5 * (3 * C30828 + C30369 * C30834) +
                        C30369 * (4 * C30834 + C30369 * C30838);
    const double C270 = 3 * C30828 + C30369 * C30834 + C30838 * C30577;
    const double C426 = 3 * C30828 + C30369 * C30834 + C30838 * C30610;
    const double C561 = C30568 * (4 * C30834 + C30369 * C30838);
    const double C667 = C30372 * (4 * C30834 + C30369 * C30838);
    const double C821 = C30372 * C30568 * C30838;
    const double C5615 =
        (-3 * C30992) / C30240 + C30568 * C31003 +
        C30372 * (C30372 * ((-3 * C30999) / C30240 +
                            C30568 * ((-2 * C30568 * C30425) / C30240 -
                                      (C30568 * (C30461 * C30577 + C30425)) /
                                          C30240)) -
                  (C31023 * ce) / C30240) -
        (C30372 * C31023 * ce) / C30240;
    const double C6047 =
        C30372 * (4 * C31003 +
                  C30568 * ((-3 * C30999) / C30240 +
                            C30568 * ((-2 * C30568 * C30425) / C30240 -
                                      (C30568 * (C30461 * C30577 + C30425)) /
                                          C30240))) -
        ((4 * C31010 + C30568 * C31023) * ce) / C30240;
    const double C5472 = 5 * (3 * C30926 + C30568 * C31010) +
                         C30568 * (4 * C31010 + C30568 * C31023);
    const double C5609 = 3 * C30926 + C30568 * C31010 + C31023 * C30610;
    const double C6045 = C30372 * (4 * C31010 + C30568 * C31023);
    const double C10731 = 5 * (3 * C30958 + C30372 * C31074) +
                          C30372 * (4 * C31074 + C30372 * C31098);
    const double C142 =
        3 * ((-(ae * C30394) / C30240) / C30217 - C30391 / C30380 +
             C30369 * C30410) +
        (((-2 * C30394) / C30240 - (C30369 * C30407) / C30240) * ae) / C30217 +
        C30369 *
            (2 * C30410 - (ae * C30407) / C30380 +
             C30369 *
                 ((-(ae * C30369 * C30403) / C30240) / C30217 -
                  C30402 / C30380 +
                  C30369 * ((-(C30369 * std::pow(C30374, 6) * bs[6] * C30385) /
                             C30240) /
                                C30217 -
                            (ae * C30403) / C30380)));
    const double C291 = (yP - yQ) * ((-(ae * C30394) / C30240) / C30217 -
                                     C30391 / C30380 + C30369 * C30410);
    const double C295 = (-(C30369 * C30391) / C30240) / C30217 -
                        (ae * C30384) / C30380 + C30410 * std::pow(yP - yQ, 2);
    const double C447 =
        C30372 * ((-(ae * C30394) / C30240) / C30217 - C30391 / C30380 +
                  C30369 * C30410) -
        ((C30381 * C30377 * C30492 +
          C30369 * (C30369 * C30387 * C30388 * C30492 + C30493 * ae) +
          C30369 * C30493 * ae) *
         ce) /
            C30380;
    const double C451 = (-(C30369 * C30391) / C30240) / C30217 -
                        (ae * C30384) / C30380 -
                        (C30372 * C30504 * ce) / C30380 +
                        C30372 * (C30372 * C30410 - (C30504 * ce) / C30380);
    const double C833 =
        C30372 * C30568 * C30410 - (C30568 * C30504 * ce) / C30380;
    const double C1878 =
        3 * ((-(C30607 * ce) / C30240) / C30217 - C30391 / C30380 +
             C30372 * C30617) -
        ((2 * C30607 + C30372 * C30615) * ce) / C30380 +
        C30372 *
            (2 * C30617 - (C30615 * ce) / C30380 +
             C30372 * ((-(C30372 * C30508 * ce) / C30240) / C30217 - C30413 +
                       C30372 * ((-(C30372 * C30423) / C30240) / C30217 -
                                 (C30508 * ce) / C30380)));
    const double C30439 = C30369 * C30437;
    const double C30442 = 2 * C30437;
    const double C30620 = C30372 * C30437;
    const double C30641 = C30568 * C30437;
    const double C30786 = C30437 - C30783;
    const double C1040 =
        2 * C30568 * C30410 + C30568 * (C30410 + C30437 * std::pow(C30568, 2));
    const double C1183 =
        C30568 * C30410 - (C30372 * C30583 * ce) / C30380 +
        C30372 * (C30372 * C30568 * C30437 - (C30583 * ce) / C30380);
    const double C1186 = C30372 * (C30410 + C30437 * C30577) -
                         ((C30504 + C30513 * C30577) * ce) / C30380;
    const double C1876 =
        2 * (C30372 * C30410 - (C30504 * ce) / C30380) -
        ((C30504 + C30513 * std::pow(C30372, 2)) * ce) / C30380 +
        C30372 * (C30410 - (C30372 * C30513 * ce) / C30380 +
                  C30372 * (C30372 * C30437 - (C30513 * ce) / C30380));
    const double C5477 =
        4 * ((-2 * C30638) / C30380 + C30568 * C30651) +
        C30568 * (3 * C30651 +
                  C30568 * ((-2 * C30568 * C30423) / C30380 +
                            C30568 * ((-(C30459 * C30577) / C30240) / C30217 -
                                      C30445)));
    const double C30695 = C30694 - C30691;
    const double C30732 = C30372 * C30730;
    const double C30735 = 2 * C30730;
    const double C30475 = C30369 * C30473;
    const double C30681 = C30473 * C30577;
    const double C30766 = C30568 * C30473;
    const double C30776 = C30372 * C30473;
    const double C1043 =
        3 * (C30410 + C30437 * C30577) +
        C30568 * (2 * C30568 * C30437 + C30568 * (C30437 + C30473 * C30577));
    const double C1189 =
        C30410 + C30437 * C30577 - (C30372 * C30594 * ce) / C30380 +
        C30372 * (C30372 * (C30437 + C30473 * C30577) - (C30594 * ce) / C30380);
    const double C1557 =
        C30372 * (2 * C30568 * C30437 + C30568 * (C30437 + C30473 * C30577)) -
        ((2 * C30583 + C30568 * C30594) * ce) / C30380;
    const double C30661 = C30568 * C30660;
    const double C30699 = C30372 * C30660;
    const double C6377 =
        2 * (C30372 * C30651 - (C30591 * ce) / C30380) -
        ((C30591 + C30666 * C30610) * ce) / C30380 +
        C30372 * (C30651 - (C30372 * C30666 * ce) / C30380 +
                  C30372 * (C30372 * C30660 - (C30666 * ce) / C30380));
    const double C30759 = C30372 * C30756;
    const double C30811 = C30808 - C30798;
    const double C31576 = C31543 / C30240;
    const double C31609 = C31580 / C30257;
    const double C31610 = C31582 + C31551;
    const double C559 = C31551 - C31267 / C30244;
    const double C31579 = C31547 / C30240;
    const double C31592 = C31561 / C30240;
    const double C31616 = C31595 / C30257;
    const double C31617 = C31596 + C31565;
    const double C1291 = C31565 - C31346 / C30244;
    const double C31594 = C31562 / C30240;
    const double C5480 = C4755 + C4756;
    const double C6050 = C5930 + C5931;
    const double C4769 = C4753 + C4754;
    const double C5928 = C5246 + C5247;
    const double C5648 = C5628 + C5629;
    const double C6301 = C6289 + C6290;
    const double C30297 = C30293 / C30240;
    const double C7806 = C4743 * C3113;
    const double C7804 = C4741 * C3113;
    const double C7800 = C4739 * C3113;
    const double C7796 = C4738 * C3113;
    const double C7790 = C4735 * C3113;
    const double C7786 = C4733 * C3113;
    const double C8060 = C4745 * C3113;
    const double C8593 = C5489 * C3113;
    const double C28521 = C5282 * C3113;
    const double C28519 = C5280 * C3113;
    const double C28515 = C5278 * C3113;
    const double C28509 = C5276 * C3113;
    const double C29529 = C5651 * C3113;
    const double C30308 = C30302 / C30240;
    const double C6784 = C6780 * C2136;
    const double C6782 = C6778 * C2136;
    const double C8711 = C6780 * C3366;
    const double C8703 = C6778 * C3366;
    const double C31632 = C31598 + C31628;
    const double C2130 = C31619 - (C31390 * C31379) / C30240;
    const double C8710 = C5650 * C31620;
    const double C8702 = C5647 * C31620;
    const double C29668 = C6779 * C31620;
    const double C1850 = C31620 / C30257 - C31388 / C31583;
    const double C6773 = C5650 * C2131;
    const double C6763 = C5647 * C2131;
    const double C27188 = C6779 * C2131;
    const double C31629 = C31600 + C31619;
    const double C10745 = C4585 * C10733;
    const double C4726 = C31234 * C279;
    const double C13636 = C13436 * C279;
    const double C13616 = C13437 * C279;
    const double C4981 = C31234 * C283;
    const double C13624 = C13437 * C283;
    const double C13938 = C13436 * C283;
    const double C9440 = C31234 * C435;
    const double C19466 = C13436 * C435;
    const double C19450 = C13437 * C435;
    const double C9662 = C31234 * C439;
    const double C19458 = C13437 * C439;
    const double C19758 = C13436 * C439;
    const double C5267 = C31234 * C824;
    const double C14292 = C13436 * C824;
    const double C14284 = C13437 * C824;
    const double C6550 = C6546 * C1674;
    const double C7132 = C6546 * C416;
    const double C8340 = C6546 * C30326;
    const double C25471 = C6546 * C666;
    const double C26917 = C6546 * C1673;
    const double C27645 = C6546 * C415;
    const double C28517 = C6546 * C3114;
    const double C5497 = C5493 + C5494;
    const double C11006 =
        4 * ((-2 * C30964) / C30240 - (C30372 * C31126) / C30240 -
             (C30965 * ce) / C30240) +
        C30372 *
            ((-3 * C31126) / C30240 +
             C30372 *
                 ((-2 * C31118) / C30240 -
                  (C30372 * (C30372 * (C30372 * C30369 * C30461 + C30546 * ce) +
                             C30444 + C30372 * C30546 * ce)) /
                      C30240 -
                  (C31120 * ce) / C30240) -
             (C31125 * ce) / C30240) -
        ((3 * C30965 + C30372 * C31125) * ce) / C30240;
    const double C30535 = C30519 + C30534;
    const double C1164 = (C30568 * C30516 + C30581 * C30610) / C30217;
    const double C30631 = C30629 / C30380;
    const double C4732 = C31234 * C1030;
    const double C14878 = C13437 * C1030;
    const double C5273 = C31234 * C1170;
    const double C15080 = C13437 * C1170;
    const double C9444 = C31234 * C1863;
    const double C21516 = C13437 * C1863;
    const double C5775 = C5772 + C5773;
    const double C14559 = C14549 + C14550;
    const double C6548 = C6542 + C6543;
    const double C14739 = C14723 + C14724;
    const double C5942 = C5936 + C5937;
    const double C15229 = C15221 + C15222;
    const double C11013 = C11009 + C11010;
    const double C21186 = C21175 + C21176;
    const double C26921 = C10905 * C1674;
    const double C27649 = C10905 * C416;
    const double C29203 = C10905 * C30326;
    const double C5492 = C5487 + C5488;
    const double C5653 = C5642 + C5643;
    const double C6058 = C6053 + C6054;
    const double C27189 = C11121 * C2136;
    const double C29669 = C11121 * C3366;
    const double C11114 =
        4 * ((-2 * C31038) / C30240 - (C30372 * C31143) / C30240 -
             (C31039 * ce) / C30240) +
        C30372 *
            ((-3 * C31143) / C30240 +
             C30372 *
                 ((-2 * C31137) / C30240 -
                  (C30372 * (C30372 * (C30372 * C30568 * C30461 + C31132 * ce) +
                             C31129 + C30372 * C31132 * ce)) /
                      C30240 -
                  (C31138 * ce) / C30240) -
             (C31142 * ce) / C30240) -
        ((3 * C31039 + C30372 * C31142) * ce) / C30240;
    const double C10749 = C10743 + C10744;
    const double C31099 = C31097 / C30240;
    const double C30478 = C30454 + C30476;
    const double C30560 = C30540 + C30559;
    const double C30597 = C30533 + C30596;
    const double C30632 = C30533 + C30630;
    const double C2244 =
        (2 * C30372 * C30581 + C30372 * (C30581 + C30645 * C30610)) / C30217;
    const double C5765 = (4 * (2 * C30583 + C30568 * C30594) +
                          C30568 * (3 * C30594 + C30568 * C30710)) /
                         C30217;
    const double C5924 = (C30372 * (3 * C30594 + C30568 * C30710)) / C30217;
    const double C6526 =
        (2 * C30583 + C30568 * C30594 + C30710 * C30610) / C30217;
    const double C11005 = (4 * (2 * C30619 + C30372 * C30624) +
                           C30372 * (3 * C30624 + C30372 * C30788)) /
                          C30217;
    const double C5475 = (5 * (3 * C30591 + C30568 * C30668) +
                          C30568 * (4 * C30668 + C30568 * C30679)) /
                         C30217;
    const double C5614 =
        (3 * C30591 + C30568 * C30668 + C30679 * C30610) / C30217;
    const double C6046 = (C30372 * (4 * C30668 + C30568 * C30679)) / C30217;
    const double C10734 = (5 * (3 * C30615 + C30372 * C30728) +
                           C30372 * (4 * C30728 + C30372 * C30760)) /
                          C30217;
    const double C4724 = C31234 * C291;
    const double C13626 = C13436 * C291;
    const double C13612 = C13437 * C291;
    const double C4716 = C31234 * C295;
    const double C13618 = C13436 * C295;
    const double C13598 = C13437 * C295;
    const double C9438 = C31234 * C447;
    const double C19464 = C13436 * C447;
    const double C19448 = C13437 * C447;
    const double C9430 = C31234 * C451;
    const double C19456 = C13436 * C451;
    const double C19440 = C13437 * C451;
    const double C5257 = C31234 * C833;
    const double C14286 = C13436 * C833;
    const double C14278 = C13437 * C833;
    const double C10742 = C31234 * C1878;
    const double C21178 = C13436 * C1878;
    const double C30440 = C30432 + C30439;
    const double C30457 = C30442 - C30450;
    const double C30625 = C30620 - C30623;
    const double C2249 =
        2 * (C30372 * C30641 - (C30583 * ce) / C30380) -
        ((C30583 + C30642 * C30610) * ce) / C30380 +
        C30372 * (C30641 - (C30372 * C30642 * ce) / C30380 +
                  C30372 * (C30372 * C30568 * C30473 - (C30642 * ce) / C30380));
    const double C4720 = C31234 * C1040;
    const double C14544 = C13437 * C1040;
    const double C14876 = C13436 * C1040;
    const double C6537 = C31234 * C1183;
    const double C14714 = C13437 * C1183;
    const double C15808 = C13436 * C1183;
    const double C5263 = C31234 * C1186;
    const double C14722 = C13437 * C1186;
    const double C15086 = C13436 * C1186;
    const double C9434 = C31234 * C1876;
    const double C21170 = C13437 * C1876;
    const double C21518 = C13436 * C1876;
    const double C5486 = C31234 * C5477;
    const double C6376 =
        3 * ((-(C30686 * ce) / C30240) / C30217 - C30638 / C30380 +
             C30372 * C30695) -
        ((2 * C30686 + C30372 * C30692) * ce) / C30380 +
        C30372 * (2 * C30695 - (C30692 * ce) / C30380 +
                  C30372 * ((-(C30372 * C30672 * ce) / C30240) / C30217 -
                            C30653 / C30380 +
                            C30372 * ((-(C30372 * C30568 * C30459) / C30240) /
                                          C30217 -
                                      (C30672 * ce) / C30380)));
    const double C30733 = C30731 + C30732;
    const double C30748 = C30735 - C30742;
    const double C30477 = C30468 + C30475;
    const double C30682 = C30437 + C30681;
    const double C30769 = C30372 * C30766;
    const double C30784 = C30776 - C30780;
    const double C5771 = C31234 * C1043;
    const double C14546 = C13437 * C1043;
    const double C6545 = C31234 * C1189;
    const double C14728 = C13437 * C1189;
    const double C5939 = C31234 * C1557;
    const double C15226 = C13437 * C1557;
    const double C30662 = C30657 + C30661;
    const double C30704 = C30699 - C30702;
    const double C6777 = C31234 * C6377;
    const double C30761 = C30758 + C30759;
    const double C30812 = C30372 * C30811;
    const double C31630 = C31576 + C31622;
    const double C558 = C31609 - (C31269 * C31252) / C30240;
    const double C111 = C31610 / C30257 - C31267 / C31583;
    const double C31623 = C31579 + C31609;
    const double C31631 = C31592 + C31626;
    const double C1290 = C31616 - (C31348 * C31337) / C30240;
    const double C1018 = C31617 / C30257 - C31346 / C31583;
    const double C31627 = C31594 + C31616;
    const double C6057 = C5929 - C6050;
    const double C5940 = C5928 - C5290;
    const double C5657 = C5648 - C5630;
    const double C6302 = C6301 - C6291;
    const double C30301 = C30297 - C30278;
    const double C8592 = C7795 + C7796;
    const double C7810 = C7790 + C7791;
    const double C8706 = C4736 * C31632;
    const double C8698 = C4734 * C31632;
    const double C29664 = C5277 * C31632;
    const double C1847 =
        (C31625 + 2 * C31383) / C30257 - (C31632 * C31379) / C30240;
    const double C6771 = C5279 * C2130;
    const double C6761 = C5277 * C2130;
    const double C27186 = C5647 * C2130;
    const double C8708 = C5279 * C31629;
    const double C8700 = C5277 * C31629;
    const double C29666 = C5647 * C31629;
    const double C1848 =
        (C31614 + 2 * C31390 + C31632) / C30257 - (C31629 * C31379) / C30240;
    const double C1849 = (C31590 + C31387 / C30240 + C31629) / C30257 -
                         (C31620 * C31379) / C30240;
    const double C4747 = C4725 + C4726;
    const double C13660 = C13635 + C13636;
    const double C13650 = C13615 + C13616;
    const double C4988 = C4980 + C4981;
    const double C13654 = C13623 + C13624;
    const double C13945 = C13937 + C13938;
    const double C9461 = C9439 + C9440;
    const double C19493 = C19465 + C19466;
    const double C19485 = C19449 + C19450;
    const double C9669 = C9661 + C9662;
    const double C19489 = C19457 + C19458;
    const double C19765 = C19757 + C19758;
    const double C5284 = C5266 + C5267;
    const double C14306 = C14291 + C14292;
    const double C14302 = C14283 + C14284;
    const double C30536 = C30535 + C30530;
    const double C9820 = C31234 * C1164;
    const double C15802 = C13437 * C1164;
    const double C4750 = C4731 + C4732;
    const double C14883 = C14877 + C14878;
    const double C5286 = C5272 + C5273;
    const double C15087 = C15079 + C15080;
    const double C9463 = C9443 + C9444;
    const double C21522 = C21515 + C21516;
    const double C5777 = C5775 * C116;
    const double C6552 = C6548 * C1674;
    const double C7138 = C6548 * C416;
    const double C8346 = C6548 * C30326;
    const double C26201 = C6548 * C666;
    const double C28523 = C6548 * C3114;
    const double C5946 = C5942 * C666;
    const double C7808 = C5942 * C3114;
    const double C26000 = C5942 * C116;
    const double C5496 = C5492 * C116;
    const double C5662 = C5653 * C416;
    const double C6299 = C5653 * C1674;
    const double C9120 = C5653 * C30326;
    const double C26335 = C5653 * C666;
    const double C29531 = C5653 * C3114;
    const double C6061 = C6058 * C666;
    const double C8595 = C6058 * C3114;
    const double C25710 = C6058 * C116;
    const double C31100 = C31085 - C31099;
    const double C137 = 5 * ((-3 * C30407) / C30240 + C30369 * C30438) +
                        C30369 * (4 * C30438 + C30369 * C30478);
    const double C290 =
        (-3 * C30407) / C30240 + C30369 * C30438 + C30478 * C30577;
    const double C446 = (-3 * C30407) / C30240 + C30369 * C30438 +
                        C30372 * (C30372 * C30478 - (C30838 * ce) / C30240) -
                        (C30372 * C30838 * ce) / C30240;
    const double C563 = C30568 * (4 * C30438 + C30369 * C30478);
    const double C669 = C30372 * (4 * C30438 + C30369 * C30478) -
                        ((4 * C30834 + C30369 * C30838) * ce) / C30240;
    const double C831 =
        C30372 * C30568 * C30478 - (C30568 * C30838 * ce) / C30240;
    const double C30561 = C30560 + C30552;
    const double C1035 = (3 * (C30516 + C30533 * C30577) +
                          C30568 * (2 * C30581 + C30568 * C30597)) /
                         C30217;
    const double C1178 = (C30516 + C30533 * C30577 + C30597 * C30610) / C30217;
    const double C1552 = (C30372 * (2 * C30581 + C30568 * C30597)) / C30217;
    const double C1871 = (3 * (C30516 + C30533 * C30610) +
                          C30372 * (2 * C30627 + C30372 * C30632)) /
                         C30217;
    const double C4746 = C4723 + C4724;
    const double C13655 = C13625 + C13626;
    const double C13648 = C13611 + C13612;
    const double C4742 = C4715 + C4716;
    const double C13651 = C13617 + C13618;
    const double C13641 = C13597 + C13598;
    const double C9460 = C9437 + C9438;
    const double C19492 = C19463 + C19464;
    const double C19484 = C19447 + C19448;
    const double C9456 = C9429 + C9430;
    const double C19488 = C19455 + C19456;
    const double C19480 = C19439 + C19440;
    const double C5281 = C5256 + C5257;
    const double C14303 = C14285 + C14286;
    const double C14299 = C14277 + C14278;
    const double C10748 = C10741 + C10742;
    const double C21187 = C21177 + C21178;
    const double C143 =
        4 * (2 * C30410 - (ae * C30407) / C30380 + C30369 * C30440) +
        (((-3 * C30407) / C30240 + C30369 * C30438) * ae) / C30217 +
        C30369 *
            (3 * C30440 + (C30438 * ae) / C30217 +
             C30369 * (2 * C30437 - (ae * C30431) / C30380 +
                       C30369 * ((-(ae * C30369 * C30425) / C30240) / C30217 -
                                 C30423 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30376, 7) *
                                              bs[7] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30425) / C30380))));
    const double C296 = (-(ae * C30394) / C30240) / C30217 - C30391 / C30380 +
                        C30369 * C30410 + C30440 * std::pow(yP - yQ, 2);
    const double C297 =
        (yP - yQ) * (2 * C30410 - (ae * C30407) / C30380 + C30369 * C30440);
    const double C452 = (-(ae * C30394) / C30240) / C30217 - C30391 / C30380 +
                        C30369 * C30410 - (C30372 * C30516 * ce) / C30380 +
                        C30372 * (C30372 * C30440 - (C30516 * ce) / C30380);
    const double C453 =
        C30372 * (2 * C30410 - (ae * C30407) / C30380 + C30369 * C30440) -
        ((2 * C30504 + C30369 * C30516 + (C30493 + C30507 * C30398) * ae) *
         ce) /
            C30380;
    const double C834 =
        C30372 * C30568 * C30440 - (C30568 * C30516 * ce) / C30380;
    const double C1879 =
        3 * (C30410 - (C30619 * ce) / C30380 + C30372 * C30625) -
        ((2 * C30619 + C30372 * C30624) * ce) / C30380 +
        C30372 *
            (2 * C30625 - (C30624 * ce) / C30380 +
             C30372 * (C30437 - (C30372 * C30529 * ce) / C30380 +
                       C30372 * (C30372 * C30473 - (C30529 * ce) / C30380)));
    const double C10904 = C31234 * C2249;
    const double C16078 = C13437 * C2249;
    const double C4744 = C4719 + C4720;
    const double C14556 = C14543 + C14544;
    const double C14882 = C14875 + C14876;
    const double C6547 = C6536 + C6537;
    const double C14734 = C14713 + C14714;
    const double C15812 = C15807 + C15808;
    const double C5283 = C5262 + C5263;
    const double C14738 = C14721 + C14722;
    const double C15090 = C15085 + C15086;
    const double C9458 = C9433 + C9434;
    const double C21183 = C21169 + C21170;
    const double C21523 = C21517 + C21518;
    const double C5491 = C5485 + C5486;
    const double C11120 = C31234 * C6376;
    const double C10736 =
        4 * (2 * C30617 - (C30615 * ce) / C30380 + C30372 * C30733) -
        ((3 * C30615 + C30372 * C30728) * ce) / C30380 +
        C30372 *
            (3 * C30733 - (C30728 * ce) / C30380 +
             C30372 *
                 (2 * C30730 - (C30722 * ce) / C30380 +
                  C30372 *
                      ((-(C30372 * C30522 * ce) / C30240) / C30217 - C30445 +
                       C30372 * ((-(C30372 * C30459) / C30240) / C30217 -
                                 (C30522 * ce) / C30380))));
    const double C30479 = C30369 * C30477;
    const double C30628 = C30372 * C30477;
    const double C30644 = C30568 * C30477;
    const double C1039 =
        2 * C30568 * C30440 + C30568 * (C30440 + C30477 * std::pow(C30568, 2));
    const double C1044 =
        3 * (C30440 + C30477 * C30577) +
        C30568 *
            (2 * C30568 * C30477 +
             C30568 *
                 (C30477 +
                  ((-(ae * C30369 * C30461) / C30240) / C30217 -
                   C30459 / C30380 +
                   C30369 * ((-(C30369 * std::pow(C30374, 8) * bs[8] * C30385) /
                              C30240) /
                                 C30217 -
                             (ae * C30461) / C30380)) *
                      C30577));
    const double C1182 =
        C30568 * C30440 - (C30372 * C30581 * ce) / C30380 +
        C30372 * (C30372 * C30568 * C30477 - (C30581 * ce) / C30380);
    const double C1185 = C30372 * (C30440 + C30477 * C30577) -
                         ((C30516 + C30533 * C30577) * ce) / C30380;
    const double C1190 =
        C30440 + C30477 * C30577 - (C30372 * C30597 * ce) / C30380 +
        C30372 *
            (C30372 *
                 (C30477 +
                  ((-(ae * C30369 * C30461) / C30240) / C30217 -
                   C30459 / C30380 +
                   C30369 * ((-(C30369 * std::pow(C30374, 8) * bs[8] * C30385) /
                              C30240) /
                                 C30217 -
                             (ae * C30461) / C30380)) *
                      C30577) -
             (C30597 * ce) / C30380);
    const double C1558 =
        C30372 *
            (2 * C30568 * C30477 +
             C30568 *
                 (C30477 +
                  ((-(ae * C30369 * C30461) / C30240) / C30217 -
                   C30459 / C30380 +
                   C30369 * ((-(C30369 * std::pow(C30374, 8) * bs[8] * C30385) /
                              C30240) /
                                 C30217 -
                             (ae * C30461) / C30380)) *
                      C30577)) -
        ((2 * C30581 + C30568 * C30597) * ce) / C30380;
    const double C1875 =
        2 * (C30372 * C30440 - (C30516 * ce) / C30380) -
        ((C30516 + C30533 * std::pow(C30372, 2)) * ce) / C30380 +
        C30372 * (C30440 - (C30372 * C30533 * ce) / C30380 +
                  C30372 * (C30372 * C30477 - (C30533 * ce) / C30380));
    const double C5767 =
        4 * (2 * C30641 + C30568 * C30682) +
        C30568 *
            (3 * C30682 +
             C30568 * (2 * C30568 * C30473 +
                       C30568 * (C30473 + ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380) *
                                              C30577)));
    const double C5926 =
        C30372 *
            (3 * C30682 +
             C30568 * (2 * C30568 * C30473 +
                       C30568 * (C30473 + ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380) *
                                              C30577))) -
        ((3 * C30594 +
          C30568 * (2 * C30642 + C30568 * (C30529 + C30551 * C30577))) *
         ce) /
            C30380;
    const double C6528 =
        2 * C30641 + C30568 * C30682 - (C30372 * C30710 * ce) / C30380 +
        C30372 *
            (C30372 * (2 * C30568 * C30473 +
                       C30568 * (C30473 + ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380) *
                                              C30577)) -
             (C30710 * ce) / C30380);
    const double C6654 =
        2 * (C30372 * C30682 - (C30594 * ce) / C30380) -
        ((C30594 + C30708 * C30610) * ce) / C30380 +
        C30372 *
            (C30682 - (C30372 * C30708 * ce) / C30380 +
             C30372 * (C30372 * (C30473 + ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380) *
                                              C30577) -
                       (C30708 * ce) / C30380));
    const double C30772 = C30769 - C30770;
    const double C30787 = C30372 * C30784;
    const double C5774 = C5770 + C5771;
    const double C14557 = C14545 + C14546;
    const double C6549 = C6544 + C6545;
    const double C14741 = C14727 + C14728;
    const double C5943 = C5938 + C5939;
    const double C15231 = C15225 + C15226;
    const double C5478 =
        5 * (3 * C30651 + C30568 * C30662) +
        C30568 * (4 * C30662 +
                  C30568 * (3 * C30660 +
                            C30568 * ((-2 * C30568 * C30459) / C30380 +
                                      C30568 * ((-(std::pow(C30374, 8) * bs[8] *
                                                   C30385 * C30577) /
                                                 C30240) /
                                                    C30217 -
                                                C30459 / C30380))));
    const double C5616 = (-2 * C30638) / C30380 + C30568 * C30651 -
                         (C30372 * C30668 * ce) / C30380 +
                         C30372 * (C30372 * C30662 - (C30668 * ce) / C30380);
    const double C5617 = C30372 * (3 * C30651 + C30568 * C30662) -
                         ((3 * C30591 + C30568 * C30668) * ce) / C30380;
    const double C5618 =
        3 * C30651 + C30568 * C30662 - (C30372 * C30679 * ce) / C30380 +
        C30372 * (C30372 * (3 * C30660 +
                            C30568 * ((-2 * C30568 * C30459) / C30380 +
                                      C30568 * ((-(std::pow(C30374, 8) * bs[8] *
                                                   C30385 * C30577) /
                                                 C30240) /
                                                    C30217 -
                                                C30459 / C30380))) -
                  (C30679 * ce) / C30380);
    const double C6048 =
        C30372 * (4 * C30662 +
                  C30568 * (3 * C30660 +
                            C30568 * ((-2 * C30568 * C30459) / C30380 +
                                      C30568 * ((-(std::pow(C30374, 8) * bs[8] *
                                                   C30385 * C30577) /
                                                 C30240) /
                                                    C30217 -
                                                C30459 / C30380)))) -
        ((4 * C30668 + C30568 * C30679) * ce) / C30380;
    const double C6756 =
        2 * (C30372 * C30662 - (C30668 * ce) / C30380) -
        ((C30668 + C30677 * C30610) * ce) / C30380 +
        C30372 * (C30662 - (C30372 * C30677 * ce) / C30380 +
                  C30372 * (C30372 * ((-2 * C30568 * C30459) / C30380 +
                                      C30568 * ((-(std::pow(C30374, 8) * bs[8] *
                                                   C30385 * C30577) /
                                                 C30240) /
                                                    C30217 -
                                                C30459 / C30380)) -
                            (C30677 * ce) / C30380));
    const double C6378 =
        3 * (C30651 - (C30698 * ce) / C30380 + C30372 * C30704) -
        ((2 * C30698 + C30372 * C30703) * ce) / C30380 +
        C30372 * (2 * C30704 - (C30703 * ce) / C30380 +
                  C30372 * (C30660 - (C30372 * C30675 * ce) / C30380 +
                            C30372 * (C30372 * ((-(std::pow(C30374, 8) * bs[8] *
                                                   C30385 * C30577) /
                                                 C30240) /
                                                    C30217 -
                                                C30459 / C30380) -
                                      (C30675 * ce) / C30380)));
    const double C6781 = C6776 + C6777;
    const double C30762 = C30372 * C30761;
    const double C30813 = C30810 + C30812;
    const double C108 =
        (C31621 + 2 * C31261) / C30257 - (C31630 * C31252) / C30240;
    const double C109 =
        (C31608 + 2 * C31269 + C31630) / C30257 - (C31623 * C31252) / C30240;
    const double C110 = (C31581 + C31266 / C30240 + C31623) / C30257 -
                        (C31610 * C31252) / C30240;
    const double C1015 =
        (C31624 + 2 * C31341) / C30257 - (C31631 * C31337) / C30240;
    const double C1016 =
        (C31612 + 2 * C31348 + C31631) / C30257 - (C31627 * C31337) / C30240;
    const double C1017 = (C31587 + C31345 / C30240 + C31627) / C30257 -
                         (C31617 * C31337) / C30240;
    const double C6060 = C6057 + C5932;
    const double C5944 = C5940 - C5291;
    const double C5664 = C5657 - C5631;
    const double C6303 = C6302 - C6292;
    const double C30307 = C30301 / C30257;
    const double C30306 = C30238 * C30301;
    const double C8597 = C7794 - C8592;
    const double C7812 = C7810 - C7792;
    const double C4765 = C4747 * C116;
    const double C5270 = C4747 * C665;
    const double C8064 = C4747 * C3113;
    const double C4992 = C4988 * C116;
    const double C5296 = C5284 * C666;
    const double C8062 = C5284 * C3114;
    const double C24855 = C5284 * C116;
    const double C25475 = C5284 * C665;
    const double C28849 = C5284 * C3113;
    const double C135 = (4 * (2 * C30504 + C30369 * C30516 + C30828 * ae) +
                         C30369 * (3 * C30516 + C30369 * C30536 + C30834 * ae) +
                         (3 * C30828 + C30369 * C30834) * ae) /
                        C30217;
    const double C286 =
        (2 * C30504 + C30369 * C30516 + C30828 * ae + C30536 * C30577) / C30217;
    const double C288 =
        (C30568 * (3 * C30516 + C30369 * C30536 + C30834 * ae)) / C30217;
    const double C441 =
        (2 * C30504 + C30369 * C30516 + C30828 * ae + C30536 * C30610) / C30217;
    const double C443 =
        (C30372 * (3 * C30516 + C30369 * C30536 + C30834 * ae)) / C30217;
    const double C828 = (C30372 * C30568 * C30536) / C30217;
    const double C9823 = C9819 + C9820;
    const double C15809 = C15801 + C15802;
    const double C4768 = C4750 * C116;
    const double C5298 = C5286 * C666;
    const double C8066 = C5286 * C3114;
    const double C24858 = C5286 * C116;
    const double C31101 = C31100 - C31088;
    const double C30562 = C30369 * C30561;
    const double C30635 = C30568 * C30561;
    const double C1296 =
        (2 * C30568 * C30536 + C30568 * (C30536 + C30561 * C30577)) / C30217;
    const double C1446 = (C30372 * (C30536 + C30561 * C30577)) / C30217;
    const double C2138 =
        (2 * C30372 * C30536 + C30372 * (C30536 + C30561 * C30610)) / C30217;
    const double C4764 = C4746 * C31300;
    const double C5265 = C4746 * C31559;
    const double C8061 = C4746 * C3111;
    const double C4760 = C4742 * C31300;
    const double C5260 = C4742 * C31559;
    const double C6539 = C4742 * C1669;
    const double C7135 = C4742 * C31625;
    const double C7803 = C4742 * C3111;
    const double C8343 = C4742 * C31383;
    const double C5293 = C5281 * C31387;
    const double C6533 = C5281 * C1670;
    const double C7131 = C5281 * C31614;
    const double C7801 = C5281 * C31387;
    const double C8339 = C5281 * C31390;
    const double C24852 = C5281 * C31300;
    const double C25472 = C5281 * C31559;
    const double C26918 = C5281 * C1669;
    const double C27646 = C5281 * C31625;
    const double C28518 = C5281 * C3111;
    const double C29200 = C5281 * C31383;
    const double C4728 = C31234 * C296;
    const double C13632 = C13436 * C296;
    const double C13620 = C13437 * C296;
    const double C4983 = C31234 * C297;
    const double C13628 = C13437 * C297;
    const double C13942 = C13436 * C297;
    const double C9442 = C31234 * C452;
    const double C19470 = C13436 * C452;
    const double C19454 = C13437 * C452;
    const double C9664 = C31234 * C453;
    const double C19462 = C13437 * C453;
    const double C19762 = C13436 * C453;
    const double C5269 = C31234 * C834;
    const double C14296 = C13436 * C834;
    const double C14288 = C13437 * C834;
    const double C11012 = C31234 * C1879;
    const double C21180 = C13437 * C1879;
    const double C10906 = C10903 + C10904;
    const double C16083 = C16077 + C16078;
    const double C4762 = C4744 * C31300;
    const double C5935 = C4744 * C31559;
    const double C7807 = C4744 * C3111;
    const double C6551 = C6547 * C31590;
    const double C7133 = C6547 * C31590;
    const double C8341 = C6547 * C3625;
    const double C25474 = C6547 * C31387;
    const double C26920 = C6547 * C1670;
    const double C27648 = C6547 * C31614;
    const double C28520 = C6547 * C31387;
    const double C29202 = C6547 * C31390;
    const double C5295 = C5283 * C31387;
    const double C6541 = C5283 * C1670;
    const double C7137 = C5283 * C31614;
    const double C7805 = C5283 * C31387;
    const double C8345 = C5283 * C31390;
    const double C24854 = C5283 * C31300;
    const double C26200 = C5283 * C31559;
    const double C28522 = C5283 * C3111;
    const double C5495 = C5491 * C31300;
    const double C11122 = C11119 + C11120;
    const double C10746 = C31234 * C10736;
    const double C30480 = C30457 + C30479;
    const double C30633 = C30628 - C30631;
    const double C2250 =
        2 * (C30372 * C30644 - (C30581 * ce) / C30380) -
        ((C30581 + C30645 * C30610) * ce) / C30380 +
        C30372 * (C30644 - (C30372 * C30645 * ce) / C30380 +
                  C30372 * (C30372 * C30568 *
                                ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380)) -
                            (C30645 * ce) / C30380));
    const double C4730 = C31234 * C1039;
    const double C14874 = C13437 * C1039;
    const double C9822 = C31234 * C1182;
    const double C15806 = C13437 * C1182;
    const double C5275 = C31234 * C1185;
    const double C15084 = C13437 * C1185;
    const double C9446 = C31234 * C1875;
    const double C21520 = C13437 * C1875;
    const double C10899 =
        3 * (C30641 - (C30765 * ce) / C30380 + C30372 * C30772) -
        ((2 * C30765 + C30372 * C30773) * ce) / C30380 +
        C30372 * (2 * C30772 - (C30773 * ce) / C30380 +
                  C30372 * (C30766 - (C30372 * C30768 * ce) / C30380 +
                            C30372 * (C30372 * C30568 *
                                          ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380) -
                                      (C30768 * ce) / C30380)));
    const double C30789 = C30786 + C30787;
    const double C5776 = C5774 * C31300;
    const double C6553 = C6549 * C31590;
    const double C7139 = C6549 * C31590;
    const double C8347 = C6549 * C3625;
    const double C26202 = C6549 * C31387;
    const double C28524 = C6549 * C31387;
    const double C5947 = C5943 * C31387;
    const double C7809 = C5943 * C31387;
    const double C25999 = C5943 * C31300;
    const double C5645 = C31234 * C5616;
    const double C6056 = C31234 * C5617;
    const double C6785 = C6781 * C31603;
    const double C8712 = C6781 * C31603;
    const double C25868 = C6781 * C31590;
    const double C26640 = C6781 * C31590;
    const double C30210 = C6781 * C3625;
    const double C30763 = C30748 + C30762;
    const double C11115 =
        4 * (2 * C30695 - (C30692 * ce) / C30380 + C30372 * C30813) -
        ((3 * C30692 + C30372 * C30809) * ce) / C30380 +
        C30372 *
            (3 * C30813 - (C30809 * ce) / C30380 +
             C30372 *
                 (2 * C30811 - (C30803 * ce) / C30380 +
                  C30372 * ((-(C30372 * C30795 * ce) / C30240) / C30217 -
                            C30793 / C30380 +
                            C30372 * ((-(C30372 * C30568 * std::pow(C30374, 8) *
                                         bs[8] * C30385) /
                                       C30240) /
                                          C30217 -
                                      (C30795 * ce) / C30380))));
    const double C5665 = C5664 + C5658;
    const double C6304 = C6303 + C6293;
    const double C30312 = C30307 - C30308;
    const double C30311 = C30306 + C31559;
    const double C8598 = C8597 + C7797;
    const double C7814 = C7812 - C7793;
    const double C4985 = C31234 * C286;
    const double C13634 = C13437 * C286;
    const double C13940 = C13437 * C288;
    const double C9666 = C31234 * C441;
    const double C19468 = C13437 * C441;
    const double C19760 = C13437 * C443;
    const double C14290 = C13437 * C828;
    const double C25136 = C31234 * C828;
    const double C25477 = C9823 * C666;
    const double C28851 = C9823 * C3114;
    const double C10735 =
        5 * ((-3 * C31075) / C30240 + C30372 * C31101 -
             (C31074 * ce) / C30240) +
        C30372 *
            (4 * C31101 +
             C30372 * ((-3 * C31095) / C30240 +
                       C30372 * ((-2 * C31086) / C30240 -
                                 (C30372 *
                                  (C30372 * (C30372 * C30461 + C30542 * ce) +
                                   C30425 + C30372 * C30542 * ce)) /
                                     C30240 -
                                 (C31089 * ce) / C30240) -
                       (C31094 * ce) / C30240) -
             (C31098 * ce) / C30240) -
        ((4 * C31074 + C30372 * C31098) * ce) / C30240;
    const double C30563 = C30539 + C30562;
    const double C2028 = (C30568 * C30536 + C30635 * C30610) / C30217;
    const double C4770 = C4760 + C4759;
    const double C5933 = C5260 + C5261;
    const double C7811 = C7803 + C7804;
    const double C4748 = C4727 + C4728;
    const double C13658 = C13631 + C13632;
    const double C13652 = C13619 + C13620;
    const double C4989 = C4982 + C4983;
    const double C13656 = C13627 + C13628;
    const double C13947 = C13941 + C13942;
    const double C9462 = C9441 + C9442;
    const double C19495 = C19469 + C19470;
    const double C19487 = C19453 + C19454;
    const double C9670 = C9663 + C9664;
    const double C19491 = C19461 + C19462;
    const double C19767 = C19761 + C19762;
    const double C5285 = C5268 + C5269;
    const double C14308 = C14295 + C14296;
    const double C14304 = C14287 + C14288;
    const double C11014 = C11011 + C11012;
    const double C21188 = C21179 + C21180;
    const double C26922 = C10906 * C31590;
    const double C27650 = C10906 * C31590;
    const double C29204 = C10906 * C3625;
    const double C5769 = C4761 + C4762;
    const double C27190 = C11122 * C31603;
    const double C29670 = C11122 * C31603;
    const double C10750 = C10745 + C10746;
    const double C144 =
        5 * (3 * C30440 + (C30438 * ae) / C30217 + C30369 * C30480) +
        ((4 * C30438 + C30369 * C30478) * ae) / C30217 +
        C30369 *
            (4 * C30480 + (C30478 * ae) / C30217 +
             C30369 *
                 (3 * C30477 + (C30474 * ae) / C30217 +
                  C30369 *
                      (2 * C30473 - (ae * C30467) / C30380 +
                       C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380)))));
    const double C298 = 2 * C30410 - (ae * C30407) / C30380 + C30369 * C30440 +
                        C30480 * std::pow(yP - yQ, 2);
    const double C299 =
        (yP - yQ) * (3 * C30440 + (C30438 * ae) / C30217 + C30369 * C30480);
    const double C300 =
        3 * C30440 + (C30438 * ae) / C30217 + C30369 * C30480 +
        (3 * C30477 + (C30474 * ae) / C30217 +
         C30369 *
             (2 * C30473 - (ae * C30467) / C30380 +
              C30369 *
                  ((-(ae * C30369 * C30461) / C30240) / C30217 -
                   C30459 / C30380 +
                   C30369 * ((-(C30369 * std::pow(C30374, 8) * bs[8] * C30385) /
                              C30240) /
                                 C30217 -
                             (ae * C30461) / C30380)))) *
            std::pow(yP - yQ, 2);
    const double C454 = 2 * C30410 - (ae * C30407) / C30380 + C30369 * C30440 -
                        (C30372 * C30536 * ce) / C30380 +
                        C30372 * (C30372 * C30480 - (C30536 * ce) / C30380);
    const double C455 =
        C30372 * (3 * C30440 + (C30438 * ae) / C30217 + C30369 * C30480) -
        ((3 * C30516 + C30369 * C30536 + (2 * C30510 + C30369 * C30528) * ae) *
         ce) /
            C30380;
    const double C564 =
        (yP - yQ) *
        (4 * C30480 + (C30478 * ae) / C30217 +
         C30369 *
             (3 * C30477 + (C30474 * ae) / C30217 +
              C30369 * (2 * C30473 - (ae * C30467) / C30380 +
                        C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                  C30459 / C30380 +
                                  C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                               bs[8] * C30385) /
                                             C30240) /
                                                C30217 -
                                            (ae * C30461) / C30380)))));
    const double C835 =
        C30372 * C30568 * C30480 - (C30568 * C30536 * ce) / C30380;
    const double C1298 =
        2 * C30568 * C30480 +
        C30568 *
            (C30480 +
             (2 * C30473 - (ae * C30467) / C30380 +
              C30369 *
                  ((-(ae * C30369 * C30461) / C30240) / C30217 -
                   C30459 / C30380 +
                   C30369 * ((-(C30369 * std::pow(C30374, 8) * bs[8] * C30385) /
                              C30240) /
                                 C30217 -
                             (ae * C30461) / C30380))) *
                 C30577);
    const double C1448 =
        C30372 *
            (C30480 +
             (2 * C30473 - (ae * C30467) / C30380 +
              C30369 *
                  ((-(ae * C30369 * C30461) / C30240) / C30217 -
                   C30459 / C30380 +
                   C30369 * ((-(C30369 * std::pow(C30374, 8) * bs[8] * C30385) /
                              C30240) /
                                 C30217 -
                             (ae * C30461) / C30380))) *
                 C30577) -
        ((C30536 + C30561 * C30577) * ce) / C30380;
    const double C2030 =
        C30568 * C30480 - (C30372 * C30635 * ce) / C30380 +
        C30372 * (C30372 * C30568 *
                      (2 * C30473 - (ae * C30467) / C30380 +
                       C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380))) -
                  (C30635 * ce) / C30380);
    const double C2140 =
        2 * (C30372 * C30480 - (C30536 * ce) / C30380) -
        ((C30536 + C30561 * C30610) * ce) / C30380 +
        C30372 *
            (C30480 - (C30372 * C30561 * ce) / C30380 +
             C30372 *
                 (C30372 *
                      (2 * C30473 - (ae * C30467) / C30380 +
                       C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380))) -
                  (C30561 * ce) / C30380));
    const double C1880 =
        3 * (C30440 - (C30627 * ce) / C30380 + C30372 * C30633) -
        ((2 * C30627 + C30372 * C30632) * ce) / C30380 +
        C30372 *
            (2 * C30633 - (C30632 * ce) / C30380 +
             C30372 *
                 (C30477 - (C30372 * C30558 * ce) / C30380 +
                  C30372 *
                      (C30372 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380)) -
                       (C30558 * ce) / C30380)));
    const double C4749 = C4729 + C4730;
    const double C14881 = C14873 + C14874;
    const double C9824 = C9821 + C9822;
    const double C15811 = C15805 + C15806;
    const double C5287 = C5274 + C5275;
    const double C15089 = C15083 + C15084;
    const double C9464 = C9445 + C9446;
    const double C21524 = C21519 + C21520;
    const double C11007 =
        4 * (2 * C30625 - (C30624 * ce) / C30380 + C30372 * C30789) -
        ((3 * C30624 + C30372 * C30788) * ce) / C30380 +
        C30372 *
            (3 * C30789 - (C30788 * ce) / C30380 +
             C30372 *
                 (2 * C30784 - (C30782 * ce) / C30380 +
                  C30372 *
                      (C30473 - (C30372 * C30551 * ce) / C30380 +
                       C30372 * (C30372 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380) -
                                 (C30551 * ce) / C30380))));
    const double C5654 = C5644 + C5645;
    const double C6059 = C6055 + C6056;
    const double C10737 =
        5 * (3 * C30733 - (C30728 * ce) / C30380 + C30372 * C30763) -
        ((4 * C30728 + C30372 * C30760) * ce) / C30380 +
        C30372 *
            (4 * C30763 - (C30760 * ce) / C30380 +
             C30372 *
                 (3 * C30761 - (C30754 * ce) / C30380 +
                  C30372 *
                      (2 * C30756 - (C30747 * ce) / C30380 +
                       C30372 * ((-(C30372 * C30544 * ce) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30372 * ((-(C30372 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (C30544 * ce) / C30380)))));
    const double C5666 = C5665 + C5659;
    const double C6305 = C6304 + C6294;
    const double C8342 = C5282 * C30312;
    const double C8336 = C5280 * C30312;
    const double C8332 = C5278 * C30312;
    const double C8326 = C5276 * C30312;
    const double C9116 = C5651 * C30312;
    const double C29199 = C6546 * C30312;
    const double C29195 = C5646 * C30312;
    const double C30205 = C5649 * C30312;
    const double C1855 =
        (C30312 / C30257 + ((C30238 * C30326 + C3625) * ce) / C30240) / C30257 -
        ((C30238 * (C30326 / C30257 + (0 * ce) / C30240) + C31603) * de) /
            C30240;
    const double C2135 =
        C30312 / C30257 - ((C30238 * C30326 + C3625) * de) / C30240;
    const double C3365 =
        C30312 / C30257 + ((C30238 * C30326 + C3625) * ce) / C30240;
    const double C30315 = C30311 * de;
    const double C4990 = C4984 + C4985;
    const double C13659 = C13633 + C13634;
    const double C13946 = C13939 + C13940;
    const double C9671 = C9665 + C9666;
    const double C19494 = C19467 + C19468;
    const double C19766 = C19759 + C19760;
    const double C14305 = C14289 + C14290;
    const double C25139 = C25135 + C25136;
    const double C30564 = C30563 + C30557;
    const double C5941 = C5294 - C5933;
    const double C7813 = C7802 - C7811;
    const double C4766 = C4748 * C31300;
    const double C5271 = C4748 * C31559;
    const double C8065 = C4748 * C3111;
    const double C4993 = C4989 * C31300;
    const double C5297 = C5285 * C31387;
    const double C8063 = C5285 * C31387;
    const double C24856 = C5285 * C31300;
    const double C25476 = C5285 * C31559;
    const double C28850 = C5285 * C3111;
    const double C4987 = C31234 * C298;
    const double C13630 = C13437 * C298;
    const double C13944 = C13437 * C299;
    const double C9668 = C31234 * C454;
    const double C19472 = C13437 * C454;
    const double C19764 = C13437 * C455;
    const double C14294 = C13437 * C835;
    const double C25138 = C31234 * C835;
    const double C4767 = C4749 * C31300;
    const double C25478 = C9824 * C31387;
    const double C28852 = C9824 * C31387;
    const double C5299 = C5287 * C31387;
    const double C8067 = C5287 * C31387;
    const double C24857 = C5287 * C31300;
    const double C5663 = C5654 * C31590;
    const double C6300 = C5654 * C31590;
    const double C9121 = C5654 * C3625;
    const double C26336 = C5654 * C31387;
    const double C29532 = C5654 * C31387;
    const double C6062 = C6059 * C31387;
    const double C8596 = C6059 * C31387;
    const double C25709 = C6059 * C31300;
    const double C6772 = C5649 * C2135;
    const double C6762 = C5646 * C2135;
    const double C27187 = C6778 * C2135;
    const double C8709 = C5649 * C3365;
    const double C8701 = C5646 * C3365;
    const double C29667 = C6778 * C3365;
    const double C30317 = C30315 / C30240;
    const double C4994 = C4990 * C116;
    const double C25141 = C25139 * C116;
    const double C456 =
        3 * C30440 + (C30438 * ae) / C30217 + C30369 * C30480 -
        (C30372 * C30564 * ce) / C30380 +
        C30372 *
            (C30372 *
                 (3 * C30477 + (C30474 * ae) / C30217 +
                  C30369 *
                      (2 * C30473 - (ae * C30467) / C30380 +
                       C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380)))) -
             (C30564 * ce) / C30380);
    const double C670 =
        C30372 *
            (4 * C30480 + (C30478 * ae) / C30217 +
             C30369 *
                 (3 * C30477 + (C30474 * ae) / C30217 +
                  C30369 *
                      (2 * C30473 - (ae * C30467) / C30380 +
                       C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380))))) -
        ((4 * C30536 + C30369 * C30564 + (3 * C30528 + C30369 * C30555) * ae) *
         ce) /
            C30380;
    const double C836 =
        C30372 * C30568 *
            (3 * C30477 + (C30474 * ae) / C30217 +
             C30369 * (2 * C30473 - (ae * C30467) / C30380 +
                       C30369 * ((-(ae * C30369 * C30461) / C30240) / C30217 -
                                 C30459 / C30380 +
                                 C30369 * ((-(C30369 * std::pow(C30374, 8) *
                                              bs[8] * C30385) /
                                            C30240) /
                                               C30217 -
                                           (ae * C30461) / C30380)))) -
        (C30568 * C30564 * ce) / C30380;
    const double C136 = (5 * (3 * C30516 + C30369 * C30536 + C30834 * ae) +
                         C30369 * (4 * C30536 + C30369 * C30564 + C30838 * ae) +
                         (4 * C30834 + C30369 * C30838) * ae) /
                        C30217;
    const double C289 =
        (3 * C30516 + C30369 * C30536 + C30834 * ae + C30564 * C30577) / C30217;
    const double C445 =
        (3 * C30516 + C30369 * C30536 + C30834 * ae + C30564 * C30610) / C30217;
    const double C562 =
        (C30568 * (4 * C30536 + C30369 * C30564 + C30838 * ae)) / C30217;
    const double C668 =
        (C30372 * (4 * C30536 + C30369 * C30564 + C30838 * ae)) / C30217;
    const double C830 = (C30372 * C30568 * C30564) / C30217;
    const double C5945 = C5941 + C5295;
    const double C7815 = C7813 + C7805;
    const double C4771 = C4765 + C4766;
    const double C4991 = C4986 + C4987;
    const double C13657 = C13629 + C13630;
    const double C13948 = C13943 + C13944;
    const double C9672 = C9667 + C9668;
    const double C19496 = C19471 + C19472;
    const double C19768 = C19763 + C19764;
    const double C14307 = C14293 + C14294;
    const double C25140 = C25137 + C25138;
    const double C30319 = C30305 - C30317;
    const double C4995 = C4991 * C31300;
    const double C25142 = C25140 * C31300;
    const double C30320 = C30319 + C30290;
    const double C8344 = C4741 * C30320;
    const double C8338 = C4739 * C30320;
    const double C8330 = C4735 * C30320;
    const double C8324 = C4733 * C30320;
    const double C9118 = C4738 * C30320;
    const double C29201 = C5280 * C30320;
    const double C29193 = C5276 * C30320;
    const double C30207 = C5278 * C30320;
    const double C1852 =
        (((((0 - (C30238 * C30273) / C30240) * ce) / C30240 -
           (0 * de) / C30244 + (2 * C30274) / C30240) /
              C30257 -
          ((C30238 * C30309 + 0) * de) / C30240 + C30283 - C30296) /
             C30257 +
         ((C30238 * C30318 + 0) * ce) / C30240) /
            C30257 -
        ((C30238 * (C30318 / C30257 +
                    ((C30238 * C30320 + C31383) * ce) / C30240 + C30312) +
          C31632) *
         de) /
            C30240 +
        C30320 / C30257 + ((C30238 * C30312 + C31390) * ce) / C30240 +
        2 * (C30290 / C30257 - (0 * de) / C30240);
    const double C1853 =
        (C30318 / C30257 + ((C30238 * C30320 + C31383) * ce) / C30240 +
         C30312) /
            C30257 -
        ((C30238 * (C30320 / C30257 +
                    ((C30238 * C30312 + C31390) * ce) / C30240 + 2 * C30326) +
          C31629) *
         de) /
            C30240 +
        2 * (C30312 / C30257 + ((C30238 * C30326 + C3625) * ce) / C30240);
    const double C1854 =
        (C30320 / C30257 + ((C30238 * C30312 + C31390) * ce) / C30240 +
         2 * C30326) /
            C30257 -
        ((C30238 *
              (C30312 / C30257 + ((C30238 * C30326 + C3625) * ce) / C30240) +
          C31620) *
         de) /
            C30240 +
        3 * (C30326 / C30257 + (0 * ce) / C30240);
    const double C2133 =
        C30318 / C30257 - ((C30238 * C30320 + C31383) * de) / C30240 + C30312;
    const double C2134 = C30320 / C30257 -
                         ((C30238 * C30312 + C31390) * de) / C30240 +
                         2 * C30326;
    const double C3363 =
        C30318 / C30257 + ((C30238 * C30320 + C31383) * ce) / C30240 + C30312;
    const double C3364 = C30320 / C30257 +
                         ((C30238 * C30312 + C31390) * ce) / C30240 +
                         2 * C30326;
    const double C9115 = C8330 + C8331;
    const double C6768 = C4735 * C2133;
    const double C6758 = C4733 * C2133;
    const double C27183 = C5276 * C2133;
    const double C6770 = C5278 * C2134;
    const double C6760 = C5276 * C2134;
    const double C27185 = C5646 * C2134;
    const double C8705 = C4735 * C3363;
    const double C8697 = C4733 * C3363;
    const double C29663 = C5276 * C3363;
    const double C8707 = C5278 * C3364;
    const double C8699 = C5276 * C3364;
    const double C29665 = C5646 * C3364;
    const double C9122 = C9115 - C8332;
    const double C9123 = C9122 - C8333;
    const double C9124 = C9123 + C8334;
    const double C9125 = C9124 + C8335;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31341 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31348 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
               C31480 * C2717) *
              C31261 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31348 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31341 -
           (((C14881 + C14882) * C31300 + (C14883 + C14884) * C116) * C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C2717) *
              C31269 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C31341 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31348 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C2717) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C666 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
             (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31341 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C666 -
             ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31348 +
           (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
             (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
                C13438 +
            ((C14553 + C14554) * C665 + (C14555 + C14556) * C31559 -
             (C15229 + C15230) * C666 - (C15231 + C15232) * C31387) *
                C13439) *
               C31480 * C2717) *
              C2457 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C666 -
             ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31341 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C665 + (C13651 + C13652) * C31559 -
             (C15087 + C15088) * C666 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31348 +
           (((C15088 + C15087) * C666 -
             ((C13652 + C13651) * C31559 + (C13650 + C13649) * C665) +
             (C15090 + C15089) * C31387) *
                C13438 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C666 -
             ((C14881 + C14882) * C31559 + (C14883 + C14884) * C665) +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31387) *
                C13439) *
               C31480 * C2717) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31631 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31627 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
               C31480 * C31617 -
           (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
               C31480 * C31597) *
              C2457 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31627 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31631 -
           (((C14881 + C14882) * C31300 + (C14883 + C14884) * C116) * C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31617 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C13438 +
            ((C13440 * C1025 + C13436 * C1034 + C13441 * C1026 +
              C13437 * C1035) *
                 C116 +
             (C13440 * C1037 + C13436 * C1043 + C13441 * C1038 +
              C13437 * C1044) *
                 C31300) *
                C13439) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C2349 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31345) *
              C31630 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31345 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C2349) *
              C31623 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C2349 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31345) *
              C31610 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C13438 +
            ((C13440 * C268 + C13436 * C286 + C13441 * C270 + C13437 * C289) *
                 C116 +
             (C13440 * C285 + C13436 * C298 + C13441 * C290 + C13437 * C300) *
                 C31300) *
                C13439) *
               C31480 * C31345 -
           (((C13948 + C13947) * C31300 + (C13946 + C13945) * C116) * C13439 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C13438) *
               C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C414 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31625 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C415 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31614 +
             (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                 C416 +
             (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                 C31590) *
                C13438 +
            ((C13637 + C13638) * C414 + (C13639 + C13640) * C31625 -
             (C14297 + C14298) * C415 - (C14299 + C14300) * C31614 +
             (C14731 + C14732) * C416 + (C14733 + C14734) * C31590) *
                C13439) *
               C31480 * C2349 +
           (((C14298 + C14297) * C415 -
             ((C13640 + C13639) * C31625 + (C13638 + C13637) * C414) +
             (C14300 + C14299) * C31614 - (C14732 + C14731) * C416 -
             (C14734 + C14733) * C31590) *
                C13438 +
            ((C14735 + C14736) * C415 -
             ((C13641 + C13642) * C31625 + (C13643 + C13644) * C414) +
             (C14737 + C14738) * C31614 - (C14739 + C14740) * C416 -
             (C14741 + C14742) * C31590) *
                C13439) *
               C31480 * C31345) *
              C2457 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C415 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31625 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C414) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31614 -
             (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                 C416 -
             (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                 C31590) *
                C13438 +
            ((C14301 + C14302) * C415 -
             ((C13648 + C13647) * C31625 + (C13646 + C13645) * C414) +
             (C14303 + C14304) * C31614 - (C15809 + C15810) * C416 -
             (C15811 + C15812) * C31590) *
                C13439) *
               C31480 * C2349 +
           (((C13645 + C13646) * C414 + (C13647 + C13648) * C31625 -
             (C14302 + C14301) * C415 - (C14304 + C14303) * C31614 +
             (C15810 + C15809) * C416 + (C15812 + C15811) * C31590) *
                C13438 +
            ((C13649 + C13650) * C414 + (C13651 + C13652) * C31625 -
             (C15087 + C15088) * C415 - (C15089 + C15090) * C31614 +
             (C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C416 +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31590) *
                C13439) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C666 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
             (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C666 -
             ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31261 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C666 -
             ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C665 + (C13651 + C13652) * C31559 -
             (C15087 + C15088) * C666 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31269 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C665 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31559 -
             (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                 C666 -
             (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                 C31387) *
                C13438 +
            ((C13653 + C13654) * C665 + (C13655 + C13656) * C31559 -
             (C14305 + C14306) * C666 - (C14307 + C14308) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C14306 + C14305) * C666 -
             ((C13656 + C13655) * C31559 + (C13654 + C13653) * C665) +
             (C14308 + C14307) * C31387) *
                C13438 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C666 -
             ((C13657 + C13658) * C31559 + (C13659 + C13660) * C665) +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C2349 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31345) *
              C31630 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31345 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C2349) *
              C31623 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C2349 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31345) *
              C31610 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C13438 +
            ((C13440 * C268 + C13436 * C286 + C13441 * C270 + C13437 * C289) *
                 C116 +
             (C13440 * C285 + C13436 * C298 + C13441 * C290 + C13437 * C300) *
                 C31300) *
                C13439) *
               C31480 * C31345 -
           (((C13948 + C13947) * C31300 + (C13946 + C13945) * C116) * C13439 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C13438) *
               C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31631 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31627 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
               C31480 * C31617 -
           (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
               C31480 * C31597) *
              C2457 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31627 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31631 -
           (((C14881 + C14882) * C31300 + (C14883 + C14884) * C116) * C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31617 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C13438 +
            ((C13440 * C1025 + C13436 * C1034 + C13441 * C1026 +
              C13437 * C1035) *
                 C116 +
             (C13440 * C1037 + C13436 * C1043 + C13441 * C1038 +
              C13437 * C1044) *
                 C31300) *
                C13439) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C3114 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
             (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31341 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C3114 -
             ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31348 +
           (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
             (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
                C13438 +
            ((C14553 + C14554) * C3113 + (C14555 + C14556) * C3111 -
             (C15229 + C15230) * C3114 - (C15231 + C15232) * C31387) *
                C13439) *
               C31480 * C2717) *
              C31544 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C3114 -
             ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31341 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C3113 + (C13651 + C13652) * C3111 -
             (C15087 + C15088) * C3114 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31348 +
           (((C15088 + C15087) * C3114 -
             ((C13652 + C13651) * C3111 + (C13650 + C13649) * C3113) +
             (C15090 + C15089) * C31387) *
                C13438 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C3114 -
             ((C14881 + C14882) * C3111 + (C14883 + C14884) * C3113) +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31387) *
                C13439) *
               C31480 * C2717) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C30320 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31383 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C30312 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31390 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C30326 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C3625) *
               C13438 +
           ((C13637 + C13638) * C30320 + (C13639 + C13640) * C31383 -
            (C14297 + C14298) * C30312 - (C14299 + C14300) * C31390 +
            (C14731 + C14732) * C30326 + (C14733 + C14734) * C3625) *
               C13439) *
              C31480 * C31341 +
          (((C14298 + C14297) * C30312 -
            ((C13640 + C13639) * C31383 + (C13638 + C13637) * C30320) +
            (C14300 + C14299) * C31390 - (C14732 + C14731) * C30326 -
            (C14734 + C14733) * C3625) *
               C13438 +
           ((C14735 + C14736) * C30312 -
            ((C13641 + C13642) * C31383 + (C13643 + C13644) * C30320) +
            (C14737 + C14738) * C31390 - (C14739 + C14740) * C30326 -
            (C14741 + C14742) * C3625) *
               C13439) *
              C31480 * C31348 +
          (((C13644 + C13643) * C30320 + (C13642 + C13641) * C31383 -
            (C14736 + C14735) * C30312 - (C14738 + C14737) * C31390 +
            (C14740 + C14739) * C30326 + (C14742 + C14741) * C3625) *
               C13438 +
           ((C14553 + C14554) * C30320 + (C14555 + C14556) * C31383 -
            (C15229 + C15230) * C30312 - (C15231 + C15232) * C31390 +
            (C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C30326 +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C3625) *
               C13439) *
              C31480 * C2717) *
         C31256) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C3114 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
            (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
               C13439) *
              C31480 * C31631 +
          (((C14298 + C14297) * C3114 -
            ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
            (C14300 + C14299) * C31387) *
               C13438 +
           ((C14735 + C14736) * C3114 -
            ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
            (C14737 + C14738) * C31387) *
               C13439) *
              C31480 * C31627 +
          (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
            (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
               C13438 +
           ((C14553 + C14554) * C3113 + (C14555 + C14556) * C3111 -
            (C15229 + C15230) * C3114 - (C15231 + C15232) * C31387) *
               C13439) *
              C31480 * C31617 +
          (((C15230 + C15229) * C3114 -
            ((C14556 + C14555) * C3111 + (C14554 + C14553) * C3113) +
            (C15232 + C15231) * C31387) *
               C13438 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C3114 -
            ((C14557 + C14558) * C3111 + (C14559 + C14560) * C3113) +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31387) *
               C13439) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C3114 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
             (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C3114 -
             ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31621 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C3114 -
             ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C3113 + (C13651 + C13652) * C3111 -
             (C15087 + C15088) * C3114 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C3113 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C3111 -
             (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                 C3114 -
             (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                 C31387) *
                C13438 +
            ((C13653 + C13654) * C3113 + (C13655 + C13656) * C3111 -
             (C14305 + C14306) * C3114 - (C14307 + C14308) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C14306 + C14305) * C3114 -
             ((C13656 + C13655) * C3111 + (C13654 + C13653) * C3113) +
             (C14308 + C14307) * C31387) *
                C13438 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C3114 -
             ((C13657 + C13658) * C3111 + (C13659 + C13660) * C3113) +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3363 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31632 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C3364 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31629 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C3365 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31620 -
            (C13441 * C1858 + C13437 * C1864 + C13440 * C1859 +
             C13436 * C1865) *
                C3366 -
            (C13441 * C1867 + C13437 * C1876 + C13440 * C1868 +
             C13436 * C1877) *
                C31603) *
               C13438 +
           ((C13637 + C13638) * C3363 + (C13639 + C13640) * C31632 -
            (C14297 + C14298) * C3364 - (C14299 + C14300) * C31629 +
            (C14731 + C14732) * C3365 + (C14733 + C14734) * C31620 -
            (C16081 + C16082) * C3366 - (C16083 + C16084) * C31603) *
               C13439) *
              C31480 * C2349 +
          (((C14298 + C14297) * C3364 -
            ((C13640 + C13639) * C31632 + (C13638 + C13637) * C3363) +
            (C14300 + C14299) * C31629 - (C14732 + C14731) * C3365 -
            (C14734 + C14733) * C31620 + (C16082 + C16081) * C3366 +
            (C16084 + C16083) * C31603) *
               C13438 +
           ((C14735 + C14736) * C3364 -
            ((C13641 + C13642) * C31632 + (C13643 + C13644) * C3363) +
            (C14737 + C14738) * C31629 - (C14739 + C14740) * C3365 -
            (C14741 + C14742) * C31620 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C3366 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C31603) *
               C13439) *
              C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C30320 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31383 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C30312 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31390 +
             (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                 C30326 +
             (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                 C3625) *
                C13438 +
            ((C13637 + C13638) * C30320 + (C13639 + C13640) * C31383 -
             (C14297 + C14298) * C30312 - (C14299 + C14300) * C31390 +
             (C14731 + C14732) * C30326 + (C14733 + C14734) * C3625) *
                C13439) *
               C31480 * C2349 +
           (((C14298 + C14297) * C30312 -
             ((C13640 + C13639) * C31383 + (C13638 + C13637) * C30320) +
             (C14300 + C14299) * C31390 - (C14732 + C14731) * C30326 -
             (C14734 + C14733) * C3625) *
                C13438 +
            ((C14735 + C14736) * C30312 -
             ((C13641 + C13642) * C31383 + (C13643 + C13644) * C30320) +
             (C14737 + C14738) * C31390 - (C14739 + C14740) * C30326 -
             (C14741 + C14742) * C3625) *
                C13439) *
               C31480 * C31345) *
              C31544 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C30312 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31383 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C30320) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31390 -
             (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                 C30326 -
             (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                 C3625) *
                C13438 +
            ((C14301 + C14302) * C30312 -
             ((C13648 + C13647) * C31383 + (C13646 + C13645) * C30320) +
             (C14303 + C14304) * C31390 - (C15809 + C15810) * C30326 -
             (C15811 + C15812) * C3625) *
                C13439) *
               C31480 * C2349 +
           (((C13645 + C13646) * C30320 + (C13647 + C13648) * C31383 -
             (C14302 + C14301) * C30312 - (C14304 + C14303) * C31390 +
             (C15810 + C15809) * C30326 + (C15812 + C15811) * C3625) *
                C13438 +
            ((C13649 + C13650) * C30320 + (C13651 + C13652) * C31383 -
             (C15087 + C15088) * C30312 - (C15089 + C15090) * C31390 +
             (C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C30326 +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C3625) *
                C13439) *
               C31480 * C31345) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C3114 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
             (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C3114 -
             ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31621 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C3114 -
             ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C3113 + (C13651 + C13652) * C3111 -
             (C15087 + C15088) * C3114 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C3113 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C3111 -
             (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                 C3114 -
             (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                 C31387) *
                C13438 +
            ((C13653 + C13654) * C3113 + (C13655 + C13656) * C3111 -
             (C14305 + C14306) * C3114 - (C14307 + C14308) * C31387) *
                C13439) *
               C31480 * C2349 +
           (((C14306 + C14305) * C3114 -
             ((C13656 + C13655) * C3111 + (C13654 + C13653) * C3113) +
             (C14308 + C14307) * C31387) *
                C13438 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C3114 -
             ((C13657 + C13658) * C3111 + (C13659 + C13660) * C3113) +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C3114 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
            (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
               C13439) *
              C31480 * C31631 +
          (((C14298 + C14297) * C3114 -
            ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
            (C14300 + C14299) * C31387) *
               C13438 +
           ((C14735 + C14736) * C3114 -
            ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
            (C14737 + C14738) * C31387) *
               C13439) *
              C31480 * C31627 +
          (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
            (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
               C13438 +
           ((C14553 + C14554) * C3113 + (C14555 + C14556) * C3111 -
            (C15229 + C15230) * C3114 - (C15231 + C15232) * C31387) *
               C13439) *
              C31480 * C31617 +
          (((C15230 + C15229) * C3114 -
            ((C14556 + C14555) * C3111 + (C14554 + C14553) * C3113) +
            (C15232 + C15231) * C31387) *
               C13438 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C3114 -
            ((C14557 + C14558) * C3111 + (C14559 + C14560) * C3113) +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31387) *
               C13439) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C1289 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C1290 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
               C31480 * C1291 -
           (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
               C31480 * C31597) *
              C31544 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C1290 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C1289 -
           (((C14881 + C14882) * C31300 + (C14883 + C14884) * C116) * C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C1291 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C13438 +
            ((C13440 * C1025 + C13436 * C1034 + C13441 * C1026 +
              C13437 * C1035) *
                 C116 +
             (C13440 * C1037 + C13436 * C1043 + C13441 * C1038 +
              C13437 * C1044) *
                 C31300) *
                C13439) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31558 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31345) *
              C557 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31345 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31558) *
              C558 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C31558 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31345) *
              C559 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C13438 +
            ((C13440 * C268 + C13436 * C286 + C13441 * C270 + C13437 * C289) *
                 C116 +
             (C13440 * C285 + C13436 * C298 + C13441 * C290 + C13437 * C300) *
                 C31300) *
                C13439) *
               C31480 * C31345 -
           (((C13948 + C13947) * C31300 + (C13946 + C13945) * C116) * C13439 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C13438) *
               C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C1672 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C1669 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C1673 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C1670 +
             (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                 C1674 +
             (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                 C31590) *
                C13438 +
            ((C13637 + C13638) * C1672 + (C13639 + C13640) * C1669 -
             (C14297 + C14298) * C1673 - (C14299 + C14300) * C1670 +
             (C14731 + C14732) * C1674 + (C14733 + C14734) * C31590) *
                C13439) *
               C31480 * C31558 +
           (((C14298 + C14297) * C1673 -
             ((C13640 + C13639) * C1669 + (C13638 + C13637) * C1672) +
             (C14300 + C14299) * C1670 - (C14732 + C14731) * C1674 -
             (C14734 + C14733) * C31590) *
                C13438 +
            ((C14735 + C14736) * C1673 -
             ((C13641 + C13642) * C1669 + (C13643 + C13644) * C1672) +
             (C14737 + C14738) * C1670 - (C14739 + C14740) * C1674 -
             (C14741 + C14742) * C31590) *
                C13439) *
               C31480 * C31345) *
              C31544 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C1673 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C1669 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C1672) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C1670 -
             (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                 C1674 -
             (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                 C31590) *
                C13438 +
            ((C14301 + C14302) * C1673 -
             ((C13648 + C13647) * C1669 + (C13646 + C13645) * C1672) +
             (C14303 + C14304) * C1670 - (C15809 + C15810) * C1674 -
             (C15811 + C15812) * C31590) *
                C13439) *
               C31480 * C31558 +
           (((C13645 + C13646) * C1672 + (C13647 + C13648) * C1669 -
             (C14302 + C14301) * C1673 - (C14304 + C14303) * C1670 +
             (C15810 + C15809) * C1674 + (C15812 + C15811) * C31590) *
                C13438 +
            ((C13649 + C13650) * C1672 + (C13651 + C13652) * C1669 -
             (C15087 + C15088) * C1673 - (C15089 + C15090) * C1670 +
             (C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C1674 +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31590) *
                C13439) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C666 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
            (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
               C13439) *
              C31480 * C1289 +
          (((C14298 + C14297) * C666 -
            ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
            (C14300 + C14299) * C31387) *
               C13438 +
           ((C14735 + C14736) * C666 -
            ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
            (C14737 + C14738) * C31387) *
               C13439) *
              C31480 * C1290 +
          (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
            (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
               C13438 +
           ((C14553 + C14554) * C665 + (C14555 + C14556) * C31559 -
            (C15229 + C15230) * C666 - (C15231 + C15232) * C31387) *
               C13439) *
              C31480 * C1291 +
          (((C15230 + C15229) * C666 -
            ((C14556 + C14555) * C31559 + (C14554 + C14553) * C665) +
            (C15232 + C15231) * C31387) *
               C13438 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C666 -
            ((C14557 + C14558) * C31559 + (C14559 + C14560) * C665) +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31387) *
               C13439) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C666 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
             (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C13440 * C1160 + C13436 * C1172 + C13441 * C1159 +
              C13437 * C1171) *
                 C666 -
             ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
             (C13440 * C1175 + C13436 * C1187 + C13441 * C1174 +
              C13437 * C1186) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C258 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C666 -
             ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C665 + (C13651 + C13652) * C31559 -
             (C13441 * C1158 + C13437 * C1170 + C13440 * C1159 +
              C13436 * C1171) *
                 C666 -
             (C13441 * C1173 + C13437 * C1185 + C13440 * C1174 +
              C13436 * C1186) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C665 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31559 -
             (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                 C666 -
             (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                 C31387) *
                C13438 +
            ((C13653 + C13654) * C665 + (C13655 + C13656) * C31559 -
             (C14305 + C14306) * C666 - (C14307 + C14308) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C14306 + C14305) * C666 -
             ((C13656 + C13655) * C31559 + (C13654 + C13653) * C665) +
             (C14308 + C14307) * C31387) *
                C13438 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C666 -
             ((C13657 + C13658) * C31559 + (C13659 + C13660) * C665) +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C2133 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C2129 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C2134 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C2130 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C2135 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C2131 -
            (C13441 * C1858 + C13437 * C1864 + C13440 * C1859 +
             C13436 * C1865) *
                C2136 -
            (C13441 * C1867 + C13437 * C1876 + C13440 * C1868 +
             C13436 * C1877) *
                C31603) *
               C13438 +
           ((C13637 + C13638) * C2133 + (C13639 + C13640) * C2129 -
            (C14297 + C14298) * C2134 - (C14299 + C14300) * C2130 +
            (C14731 + C14732) * C2135 + (C14733 + C14734) * C2131 -
            (C16081 + C16082) * C2136 - (C16083 + C16084) * C31603) *
               C13439) *
              C31480 * C31558 +
          (((C14298 + C14297) * C2134 -
            ((C13640 + C13639) * C2129 + (C13638 + C13637) * C2133) +
            (C14300 + C14299) * C2130 - (C14732 + C14731) * C2135 -
            (C14734 + C14733) * C2131 + (C16082 + C16081) * C2136 +
            (C16084 + C16083) * C31603) *
               C13438 +
           ((C14735 + C14736) * C2134 -
            ((C13641 + C13642) * C2129 + (C13643 + C13644) * C2133) +
            (C14737 + C14738) * C2130 - (C14739 + C14740) * C2135 -
            (C14741 + C14742) * C2131 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C2136 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C31603) *
               C13439) *
              C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13440 * C117 + C13436 * C124 + C13441 * C118 +
                 C13437 * C125) *
                    C116 +
                (C13440 * C127 + C13436 * C138 + C13441 * C128 +
                 C13437 * C139) *
                    C31300) *
                   C13438 +
               ((C13440 * C263 + C13436 * C276 + C13441 * C262 +
                 C13437 * C275) *
                    C116 +
                (C13440 * C273 + C13436 * C293 + C13441 * C272 +
                 C13437 * C292) *
                    C31300) *
                   C13439) *
                  C31480 * C31283 * C108 -
              (((C13441 * C271 + C13437 * C291 + C13440 * C272 +
                 C13436 * C292) *
                    C31300 +
                (C13441 * C261 + C13437 * C274 + C13440 * C262 +
                 C13436 * C275) *
                    C116) *
                   C13439 +
               ((C13441 * C129 + C13437 * C140 + C13440 * C128 +
                 C13436 * C139) *
                    C31300 +
                (C13441 * C119 + C13437 * C126 + C13440 * C118 +
                 C13436 * C125) *
                    C116) *
                   C13438) *
                  C31480 * C31283 * C109 +
              (((C13440 * C119 + C13436 * C126 + C13441 * C120 +
                 C13437 * C131) *
                    C116 +
                (C13440 * C129 + C13436 * C140 + C13441 * C130 +
                 C13437 * C141) *
                    C31300) *
                   C13438 +
               ((C13440 * C261 + C13436 * C274 + C13441 * C267 +
                 C13437 * C283) *
                    C116 +
                (C13440 * C271 + C13436 * C291 + C13441 * C284 +
                 C13437 * C297) *
                    C31300) *
                   C13439) *
                  C31480 * C31283 * C110 -
              (((C13441 * C287 + C13437 * C299 + C13440 * C284 +
                 C13436 * C297) *
                    C31300 +
                (C13441 * C269 + C13437 * C288 + C13440 * C267 +
                 C13436 * C283) *
                    C116) *
                   C13439 +
               ((C13441 * C133 + C13437 * C142 + C13440 * C130 +
                 C13436 * C141) *
                    C31300 +
                (C13441 * C121 + C13437 * C132 + C13440 * C120 +
                 C13436 * C131) *
                    C116) *
                   C13438) *
                  C31480 * C31283 * C111 +
              (((C13440 * C121 + C13436 * C132 + C13441 * C122 +
                 C13437 * C135) *
                    C116 +
                (C13440 * C133 + C13436 * C142 + C13441 * C134 +
                 C13437 * C143) *
                    C31300) *
                   C13438 +
               ((C13440 * C269 + C13436 * C288 + C13441 * C561 +
                 C13437 * C562) *
                    C116 +
                (C13440 * C287 + C13436 * C299 + C13441 * C563 +
                 C13437 * C564) *
                    C31300) *
                   C13439) *
                  C31480 * C31283 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C13440 * C117 + C13436 * C124 + C13441 * C118 +
                  C13437 * C125) *
                     C116 +
                 (C13440 * C127 + C13436 * C138 + C13441 * C128 +
                  C13437 * C139) *
                     C31300) *
                    C13438 +
                ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) *
                    C13439) *
                   C31480 * C31624 -
               (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) *
                    C13439 +
                ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) *
                    C13438) *
                   C31480 * C31612 +
               (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) *
                    C13438 +
                ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
                  C13437 * C1031) *
                     C116 +
                 (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
                  C13437 * C1040) *
                     C31300) *
                    C13439) *
                   C31480 * C31587) *
                  C258 +
              ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) *
                    C13438 +
                ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) *
                    C13439) *
                   C31480 * C31612 -
               (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) *
                    C13439 +
                ((C13441 * C129 + C13437 * C140 + C13440 * C128 +
                  C13436 * C139) *
                     C31300 +
                 (C13441 * C119 + C13437 * C126 + C13440 * C118 +
                  C13436 * C125) *
                     C116) *
                    C13438) *
                   C31480 * C31624 -
               (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
                  C13436 * C1040) *
                     C31300 +
                 (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
                  C13436 * C1031) *
                     C116) *
                    C13439 +
                ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) *
                    C13438) *
                   C31480 * C31587) *
                  C259 +
              ((((C13440 * C119 + C13436 * C126 + C13441 * C120 +
                  C13437 * C131) *
                     C116 +
                 (C13440 * C129 + C13436 * C140 + C13441 * C130 +
                  C13437 * C141) *
                     C31300) *
                    C13438 +
                ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) *
                    C13439) *
                   C31480 * C31624 -
               (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) *
                    C13439 +
                ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) *
                    C13438) *
                   C31480 * C31612 +
               (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) *
                    C13438 +
                ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
                  C13437 * C1296) *
                     C116 +
                 (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
                  C13437 * C1298) *
                     C31300) *
                    C13439) *
                   C31480 * C31587) *
                  C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C415 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31614 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C416 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C414 + (C13639 + C13640) * C31625 -
            (C13441 * C818 + C13437 * C823 + C13440 * C817 + C13436 * C822) *
                C415 -
            (C13441 * C826 + C13437 * C833 + C13440 * C825 + C13436 * C832) *
                C31614 +
            (C13440 * C1157 + C13436 * C1166 + C13441 * C1156 +
             C13437 * C1165) *
                C416 +
            (C13440 * C1169 + C13436 * C1184 + C13441 * C1168 +
             C13437 * C1183) *
                C31590) *
               C13439) *
              C31480 * C31283 * C258 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C415 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31625 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C414) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31614 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C416 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C31590) *
               C13438 +
           ((C13440 * C818 + C13436 * C823 + C13441 * C819 + C13437 * C824) *
                C415 -
            ((C13648 + C13647) * C31625 + (C13646 + C13645) * C414) +
            (C13440 * C826 + C13436 * C833 + C13441 * C827 + C13437 * C834) *
                C31614 -
            (C13441 * C1155 + C13437 * C1164 + C13440 * C1156 +
             C13436 * C1165) *
                C416 -
            (C13441 * C1167 + C13437 * C1182 + C13440 * C1168 +
             C13436 * C1183) *
                C31590) *
               C13439) *
              C31480 * C31283 * C259 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C414 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31625 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C415 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31614 +
            (C13440 * C422 + C13436 * C435 + C13441 * C424 + C13437 * C441) *
                C416 +
            (C13440 * C438 + C13436 * C452 + C13441 * C442 + C13437 * C454) *
                C31590) *
               C13438 +
           ((C13653 + C13654) * C414 + (C13655 + C13656) * C31625 -
            (C13441 * C820 + C13437 * C828 + C13440 * C819 + C13436 * C824) *
                C415 -
            (C13441 * C829 + C13437 * C835 + C13440 * C827 + C13436 * C834) *
                C31614 +
            (C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
             C13437 * C2028) *
                C416 +
            (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
             C13437 * C2030) *
                C31590) *
               C13439) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C947 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C948 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C947 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C947 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
              C31480 * C1015 -
          (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
              C31480 * C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
           ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
              C31480 * C1017 -
          (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
              C31480 * C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C13438 +
           ((C13440 * C5471 + C13436 * C5474 + C13441 * C5764 +
             C13437 * C5765) *
                C116 +
            (C13440 * C5473 + C13436 * C5477 + C13441 * C5766 +
             C13437 * C5767) *
                C31300) *
               C13439) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C415 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31614 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C416 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C414 + (C13639 + C13640) * C31625 -
            (C14297 + C14298) * C415 - (C14299 + C14300) * C31614 +
            (C14731 + C14732) * C416 + (C14733 + C14734) * C31590) *
               C13439) *
              C31480 * C947 +
          (((C14298 + C14297) * C415 -
            ((C13640 + C13639) * C31625 + (C13638 + C13637) * C414) +
            (C14300 + C14299) * C31614 - (C14732 + C14731) * C416 -
            (C14734 + C14733) * C31590) *
               C13438 +
           ((C14735 + C14736) * C415 -
            ((C13641 + C13642) * C31625 + (C13643 + C13644) * C414) +
            (C14737 + C14738) * C31614 - (C14739 + C14740) * C416 -
            (C14741 + C14742) * C31590) *
               C13439) *
              C31480 * C948 +
          (((C13644 + C13643) * C414 + (C13642 + C13641) * C31625 -
            (C14736 + C14735) * C415 - (C14738 + C14737) * C31614 +
            (C14740 + C14739) * C416 + (C14742 + C14741) * C31590) *
               C13438 +
           ((C14553 + C14554) * C414 + (C14555 + C14556) * C31625 -
            (C13441 * C1548 + C13437 * C1551 + C13440 * C1547 +
             C13436 * C1550) *
                C415 -
            (C13441 * C1554 + C13437 * C1557 + C13440 * C1553 +
             C13436 * C1556) *
                C31614 +
            (C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C416 +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31590) *
               C13439) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C1673 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C1670 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C1674 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C1672 + (C13639 + C13640) * C1669 -
            (C14297 + C14298) * C1673 - (C14299 + C14300) * C1670 +
            (C14731 + C14732) * C1674 + (C14733 + C14734) * C31590) *
               C13439) *
              C31480 * C31283 * C31621 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C1673 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C1669 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C1672) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C1670 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C1674 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C31590) *
               C13438 +
           ((C14301 + C14302) * C1673 -
            ((C13648 + C13647) * C1669 + (C13646 + C13645) * C1672) +
            (C14303 + C14304) * C1670 -
            (C13441 * C1155 + C13437 * C1164 + C13440 * C1156 +
             C13436 * C1165) *
                C1674 -
            (C13441 * C1167 + C13437 * C1182 + C13440 * C1168 +
             C13436 * C1183) *
                C31590) *
               C13439) *
              C31480 * C31283 * C31608 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C1672 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C1669 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C1673 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C1670 +
            (C13440 * C422 + C13436 * C435 + C13441 * C424 + C13437 * C441) *
                C1674 +
            (C13440 * C438 + C13436 * C452 + C13441 * C442 + C13437 * C454) *
                C31590) *
               C13438 +
           ((C13653 + C13654) * C1672 + (C13655 + C13656) * C1669 -
            (C14305 + C14306) * C1673 - (C14307 + C14308) * C1670 +
            (C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
             C13437 * C2028) *
                C1674 +
            (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
             C13437 * C2030) *
                C31590) *
               C13439) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C1673 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C1670 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C1674 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C1672 + (C13639 + C13640) * C1669 -
            (C14297 + C14298) * C1673 - (C14299 + C14300) * C1670 +
            (C14731 + C14732) * C1674 + (C14733 + C14734) * C31590) *
               C13439) *
              C31480 * C31624 +
          (((C14298 + C14297) * C1673 -
            ((C13640 + C13639) * C1669 + (C13638 + C13637) * C1672) +
            (C14300 + C14299) * C1670 - (C14732 + C14731) * C1674 -
            (C14734 + C14733) * C31590) *
               C13438 +
           ((C14735 + C14736) * C1673 -
            ((C13641 + C13642) * C1669 + (C13643 + C13644) * C1672) +
            (C14737 + C14738) * C1670 - (C14739 + C14740) * C1674 -
            (C14741 + C14742) * C31590) *
               C13439) *
              C31480 * C31612 +
          (((C13644 + C13643) * C1672 + (C13642 + C13641) * C1669 -
            (C14736 + C14735) * C1673 - (C14738 + C14737) * C1670 +
            (C14740 + C14739) * C1674 + (C14742 + C14741) * C31590) *
               C13438 +
           ((C14553 + C14554) * C1672 + (C14555 + C14556) * C1669 -
            (C15229 + C15230) * C1673 - (C15231 + C15232) * C1670 +
            (C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C1674 +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31590) *
               C13439) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
               C1852 +
           (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
               C1847 -
           (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
               C1853 -
           (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
               C1848 +
           (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
               C1854 +
           (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
               C1849 -
           (C13441 * C1858 + C13437 * C1864 + C13440 * C1859 + C13436 * C1865) *
               C1855 -
           (C13441 * C1867 + C13437 * C1876 + C13440 * C1868 + C13436 * C1877) *
               C1850 +
           (C13440 * C1860 + C13436 * C1869 + C13441 * C1861 + C13437 * C1870) *
               C1856 +
           (C13440 * C1872 + C13436 * C1878 + C13441 * C1873 + C13437 * C1879) *
               C1851) *
              C13438 +
          ((C13637 + C13638) * C1852 + (C13639 + C13640) * C1847 -
           (C14297 + C14298) * C1853 - (C14299 + C14300) * C1848 +
           (C14731 + C14732) * C1854 + (C14733 + C14734) * C1849 -
           (C13441 * C2240 + C13437 * C2243 + C13440 * C2239 + C13436 * C2242) *
               C1855 -
           (C13441 * C2246 + C13437 * C2249 + C13440 * C2245 + C13436 * C2248) *
               C1850 +
           (C13440 * C6367 + C13436 * C6370 + C13441 * C10896 +
            C13437 * C10897) *
               C1856 +
           (C13440 * C6371 + C13436 * C6376 + C13441 * C10898 +
            C13437 * C10899) *
               C1851) *
              C13439) *
         C31480 * C31283 * C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C666 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
             (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C947 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C666 -
             ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C948 +
           (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
             (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
                C13438 +
            ((C14553 + C14554) * C665 + (C14555 + C14556) * C31559 -
             (C13441 * C1548 + C13437 * C1551 + C13440 * C1547 +
              C13436 * C1550) *
                 C666 -
             (C13441 * C1554 + C13437 * C1557 + C13440 * C1553 +
              C13436 * C1556) *
                 C31387) *
                C13439) *
               C31480 * C31587) *
              C31544 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C666 -
             ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C947 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C665 + (C13651 + C13652) * C31559 -
             (C15087 + C15088) * C666 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C948 +
           (((C15088 + C15087) * C666 -
             ((C13652 + C13651) * C31559 + (C13650 + C13649) * C665) +
             (C15090 + C15089) * C31387) *
                C13438 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C666 -
             ((C14881 + C14882) * C31559 + (C14883 + C14884) * C665) +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31387) *
                C13439) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C666 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
            (C13441 * C818 + C13437 * C823 + C13440 * C817 + C13436 * C822) *
                C666 -
            (C13441 * C826 + C13437 * C833 + C13440 * C825 + C13436 * C832) *
                C31387) *
               C13439) *
              C31480 * C31283 * C557 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C666 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31559 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C665) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31387) *
               C13438 +
           ((C13440 * C818 + C13436 * C823 + C13441 * C819 + C13437 * C824) *
                C666 -
            ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
            (C13440 * C826 + C13436 * C833 + C13441 * C827 + C13437 * C834) *
                C31387) *
               C13439) *
              C31480 * C31283 * C558 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C665 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31559 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C666 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31387) *
               C13438 +
           ((C13653 + C13654) * C665 + (C13655 + C13656) * C31559 -
            (C13441 * C820 + C13437 * C828 + C13440 * C819 + C13436 * C824) *
                C666 -
            (C13441 * C829 + C13437 * C835 + C13440 * C827 + C13436 * C834) *
                C31387) *
               C13439) *
              C31480 * C31283 * C559 +
          (((C13440 * C423 + C13436 * C439 + C13441 * C425 + C13437 * C443) *
                C666 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31559 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C665) +
            (C13440 * C440 + C13436 * C453 + C13441 * C444 + C13437 * C455) *
                C31387) *
               C13438 +
           ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                C666 -
            ((C13948 + C13947) * C31559 + (C13946 + C13945) * C665) +
            (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                C31387) *
               C13439) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C2133 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C2129 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C2134 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C2130 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C2135 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C2131 -
            (C13441 * C1858 + C13437 * C1864 + C13440 * C1859 +
             C13436 * C1865) *
                C2136 -
            (C13441 * C1867 + C13437 * C1876 + C13440 * C1868 +
             C13436 * C1877) *
                C31603) *
               C13438 +
           ((C13637 + C13638) * C2133 + (C13639 + C13640) * C2129 -
            (C14297 + C14298) * C2134 - (C14299 + C14300) * C2130 +
            (C14731 + C14732) * C2135 + (C14733 + C14734) * C2131 -
            (C13441 * C2240 + C13437 * C2243 + C13440 * C2239 +
             C13436 * C2242) *
                C2136 -
            (C13441 * C2246 + C13437 * C2249 + C13440 * C2245 +
             C13436 * C2248) *
                C31603) *
               C13439) *
              C31480 * C31283 * C31544 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C2134 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C2129 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C2133) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C2130 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C2135 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C2131 +
            (C13440 * C1858 + C13436 * C1864 + C13441 * C1857 +
             C13437 * C1863) *
                C2136 +
            (C13440 * C1867 + C13436 * C1876 + C13441 * C1866 +
             C13437 * C1875) *
                C31603) *
               C13438 +
           ((C14301 + C14302) * C2134 -
            ((C13648 + C13647) * C2129 + (C13646 + C13645) * C2133) +
            (C14303 + C14304) * C2130 - (C15809 + C15810) * C2135 -
            (C15811 + C15812) * C2131 +
            (C13440 * C2240 + C13436 * C2243 + C13441 * C2241 +
             C13437 * C2244) *
                C2136 +
            (C13440 * C2246 + C13436 * C2249 + C13441 * C2247 +
             C13437 * C2250) *
                C31603) *
               C13439) *
              C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31624 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31612 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C258 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31612 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31624 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C31624 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31612 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13440 * C263 + C13436 * C276 + C13441 * C262 + C13437 * C275) *
                C116 +
            (C13440 * C273 + C13436 * C293 + C13441 * C272 + C13437 * C292) *
                C31300) *
               C13439) *
              C31480 * C31283 * C108 -
          (((C13441 * C271 + C13437 * C291 + C13440 * C272 + C13436 * C292) *
                C31300 +
            (C13441 * C261 + C13437 * C274 + C13440 * C262 + C13436 * C275) *
                C116) *
               C13439 +
           ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                C31300 +
            (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                C116) *
               C13438) *
              C31480 * C31283 * C109 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C116 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31300) *
               C13438 +
           ((C13440 * C261 + C13436 * C274 + C13441 * C267 + C13437 * C283) *
                C116 +
            (C13440 * C271 + C13436 * C291 + C13441 * C284 + C13437 * C297) *
                C31300) *
               C13439) *
              C31480 * C31283 * C110 -
          (((C13441 * C287 + C13437 * C299 + C13440 * C284 + C13436 * C297) *
                C31300 +
            (C13441 * C269 + C13437 * C288 + C13440 * C267 + C13436 * C283) *
                C116) *
               C13439 +
           ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                C31300 +
            (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                C116) *
               C13438) *
              C31480 * C31283 * C111 +
          (((C13440 * C121 + C13436 * C132 + C13441 * C122 + C13437 * C135) *
                C116 +
            (C13440 * C133 + C13436 * C142 + C13441 * C134 + C13437 * C143) *
                C31300) *
               C13438 +
           ((C13440 * C269 + C13436 * C288 + C13441 * C561 + C13437 * C562) *
                C116 +
            (C13440 * C287 + C13436 * C299 + C13441 * C563 + C13437 * C564) *
                C31300) *
               C13439) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C947 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C948 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C947 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C947 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
              C31480 * C1015 -
          (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
              C31480 * C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
           ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
              C31480 * C1017 -
          (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
              C31480 * C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C13438 +
           ((C13440 * C5471 + C13436 * C5474 + C13441 * C5764 +
             C13437 * C5765) *
                C116 +
            (C13440 * C5473 + C13436 * C5477 + C13441 * C5766 +
             C13437 * C5767) *
                C31300) *
               C13439) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C1673 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C1670 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C1674 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C1672 + (C13639 + C13640) * C1669 -
            (C14297 + C14298) * C1673 - (C14299 + C14300) * C1670 +
            (C14731 + C14732) * C1674 + (C14733 + C14734) * C31590) *
               C13439) *
              C31480 * C31283 * C31621 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C1673 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C1669 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C1672) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C1670 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C1674 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C31590) *
               C13438 +
           ((C14301 + C14302) * C1673 -
            ((C13648 + C13647) * C1669 + (C13646 + C13645) * C1672) +
            (C14303 + C14304) * C1670 -
            (C13441 * C1155 + C13437 * C1164 + C13440 * C1156 +
             C13436 * C1165) *
                C1674 -
            (C13441 * C1167 + C13437 * C1182 + C13440 * C1168 +
             C13436 * C1183) *
                C31590) *
               C13439) *
              C31480 * C31283 * C31608 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C1672 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C1669 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C1673 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C1670 +
            (C13440 * C422 + C13436 * C435 + C13441 * C424 + C13437 * C441) *
                C1674 +
            (C13440 * C438 + C13436 * C452 + C13441 * C442 + C13437 * C454) *
                C31590) *
               C13438 +
           ((C13653 + C13654) * C1672 + (C13655 + C13656) * C1669 -
            (C14305 + C14306) * C1673 - (C14307 + C14308) * C1670 +
            (C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
             C13437 * C2028) *
                C1674 +
            (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
             C13437 * C2030) *
                C31590) *
               C13439) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C1673 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C1670 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C1674 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C1672 + (C13639 + C13640) * C1669 -
            (C14297 + C14298) * C1673 - (C14299 + C14300) * C1670 +
            (C14731 + C14732) * C1674 + (C14733 + C14734) * C31590) *
               C13439) *
              C31480 * C31624 +
          (((C14298 + C14297) * C1673 -
            ((C13640 + C13639) * C1669 + (C13638 + C13637) * C1672) +
            (C14300 + C14299) * C1670 - (C14732 + C14731) * C1674 -
            (C14734 + C14733) * C31590) *
               C13438 +
           ((C14735 + C14736) * C1673 -
            ((C13641 + C13642) * C1669 + (C13643 + C13644) * C1672) +
            (C14737 + C14738) * C1670 - (C14739 + C14740) * C1674 -
            (C14741 + C14742) * C31590) *
               C13439) *
              C31480 * C31612 +
          (((C13644 + C13643) * C1672 + (C13642 + C13641) * C1669 -
            (C14736 + C14735) * C1673 - (C14738 + C14737) * C1670 +
            (C14740 + C14739) * C1674 + (C14742 + C14741) * C31590) *
               C13438 +
           ((C14553 + C14554) * C1672 + (C14555 + C14556) * C1669 -
            (C15229 + C15230) * C1673 - (C15231 + C15232) * C1670 +
            (C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C1674 +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31590) *
               C13439) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C3114 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
             (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C3114 -
             ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31261 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C3114 -
             ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C3113 + (C13651 + C13652) * C3111 -
             (C15087 + C15088) * C3114 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31345) *
              C31269 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C3113 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C3111 -
             (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                 C3114 -
             (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                 C31387) *
                C13438 +
            ((C13653 + C13654) * C3113 + (C13655 + C13656) * C3111 -
             (C14305 + C14306) * C3114 - (C14307 + C14308) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C14306 + C14305) * C3114 -
             ((C13656 + C13655) * C3111 + (C13654 + C13653) * C3113) +
             (C14308 + C14307) * C31387) *
                C13438 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C3114 -
             ((C13657 + C13658) * C3111 + (C13659 + C13660) * C3113) +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C30320 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31383 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C30312 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31390 +
             (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                 C30326 +
             (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                 C3625) *
                C13438 +
            ((C13637 + C13638) * C30320 + (C13639 + C13640) * C31383 -
             (C14297 + C14298) * C30312 - (C14299 + C14300) * C31390 +
             (C14731 + C14732) * C30326 + (C14733 + C14734) * C3625) *
                C13439) *
               C31480 * C31558 +
           (((C14298 + C14297) * C30312 -
             ((C13640 + C13639) * C31383 + (C13638 + C13637) * C30320) +
             (C14300 + C14299) * C31390 - (C14732 + C14731) * C30326 -
             (C14734 + C14733) * C3625) *
                C13438 +
            ((C14735 + C14736) * C30312 -
             ((C13641 + C13642) * C31383 + (C13643 + C13644) * C30320) +
             (C14737 + C14738) * C31390 - (C14739 + C14740) * C30326 -
             (C14741 + C14742) * C3625) *
                C13439) *
               C31480 * C31345) *
              C2457 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C30312 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31383 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C30320) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31390 -
             (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                 C30326 -
             (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                 C3625) *
                C13438 +
            ((C14301 + C14302) * C30312 -
             ((C13648 + C13647) * C31383 + (C13646 + C13645) * C30320) +
             (C14303 + C14304) * C31390 - (C15809 + C15810) * C30326 -
             (C15811 + C15812) * C3625) *
                C13439) *
               C31480 * C31558 +
           (((C13645 + C13646) * C30320 + (C13647 + C13648) * C31383 -
             (C14302 + C14301) * C30312 - (C14304 + C14303) * C31390 +
             (C15810 + C15809) * C30326 + (C15812 + C15811) * C3625) *
                C13438 +
            ((C13649 + C13650) * C30320 + (C13651 + C13652) * C31383 -
             (C15087 + C15088) * C30312 - (C15089 + C15090) * C31390 +
             (C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C30326 +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C3625) *
                C13439) *
               C31480 * C31345) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C3114 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
             (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31624 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C3114 -
             ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31612 +
           (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
             (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
                C13438 +
            ((C14553 + C14554) * C3113 + (C14555 + C14556) * C3111 -
             (C15229 + C15230) * C3114 - (C15231 + C15232) * C31387) *
                C13439) *
               C31480 * C31587) *
              C2457 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C3114 -
             ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31624 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C3113 + (C13651 + C13652) * C3111 -
             (C15087 + C15088) * C3114 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31612 +
           (((C15088 + C15087) * C3114 -
             ((C13652 + C13651) * C3111 + (C13650 + C13649) * C3113) +
             (C15090 + C15089) * C31387) *
                C13438 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C3114 -
             ((C14881 + C14882) * C3111 + (C14883 + C14884) * C3113) +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31387) *
                C13439) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C3114 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
            (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
               C13439) *
              C31480 * C31283 * C31630 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C3114 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C3111 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C3113) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31387) *
               C13438 +
           ((C14301 + C14302) * C3114 -
            ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
            (C14303 + C14304) * C31387) *
               C13439) *
              C31480 * C31283 * C31623 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C3113 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C3111 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C3114 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31387) *
               C13438 +
           ((C13653 + C13654) * C3113 + (C13655 + C13656) * C3111 -
            (C14305 + C14306) * C3114 - (C14307 + C14308) * C31387) *
               C13439) *
              C31480 * C31283 * C31610 +
          (((C13440 * C423 + C13436 * C439 + C13441 * C425 + C13437 * C443) *
                C3114 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C3111 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C3113) +
            (C13440 * C440 + C13436 * C453 + C13441 * C444 + C13437 * C455) *
                C31387) *
               C13438 +
           ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                C3114 -
            ((C13948 + C13947) * C3111 + (C13946 + C13945) * C3113) +
            (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                C31387) *
               C13439) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3363 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31632 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C3364 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31629 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C3365 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31620 -
            (C13441 * C1858 + C13437 * C1864 + C13440 * C1859 +
             C13436 * C1865) *
                C3366 -
            (C13441 * C1867 + C13437 * C1876 + C13440 * C1868 +
             C13436 * C1877) *
                C31603) *
               C13438 +
           ((C13637 + C13638) * C3363 + (C13639 + C13640) * C31632 -
            (C14297 + C14298) * C3364 - (C14299 + C14300) * C31629 +
            (C14731 + C14732) * C3365 + (C14733 + C14734) * C31620 -
            (C16081 + C16082) * C3366 - (C16083 + C16084) * C31603) *
               C13439) *
              C31480 * C31283 * C2457 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C3364 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31632 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C3363) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31629 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C3365 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C31620 +
            (C13440 * C1858 + C13436 * C1864 + C13441 * C1857 +
             C13437 * C1863) *
                C3366 +
            (C13440 * C1867 + C13436 * C1876 + C13441 * C1866 +
             C13437 * C1875) *
                C31603) *
               C13438 +
           ((C14301 + C14302) * C3364 -
            ((C13648 + C13647) * C31632 + (C13646 + C13645) * C3363) +
            (C14303 + C14304) * C31629 - (C15809 + C15810) * C3365 -
            (C15811 + C15812) * C31620 +
            (C13440 * C2240 + C13436 * C2243 + C13441 * C2241 +
             C13437 * C2244) *
                C3366 +
            (C13440 * C2246 + C13436 * C2249 + C13441 * C2247 +
             C13437 * C2250) *
                C31603) *
               C13439) *
              C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C30320 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31383 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C30312 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31390 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C30326 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C3625) *
               C13438 +
           ((C13637 + C13638) * C30320 + (C13639 + C13640) * C31383 -
            (C14297 + C14298) * C30312 - (C14299 + C14300) * C31390 +
            (C14731 + C14732) * C30326 + (C14733 + C14734) * C3625) *
               C13439) *
              C31480 * C31283 * C31261 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C30312 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31383 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C30320) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31390 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C30326 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C3625) *
               C13438 +
           ((C14301 + C14302) * C30312 -
            ((C13648 + C13647) * C31383 + (C13646 + C13645) * C30320) +
            (C14303 + C14304) * C31390 - (C15809 + C15810) * C30326 -
            (C15811 + C15812) * C3625) *
               C13439) *
              C31480 * C31283 * C31269 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C30320 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31383 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C30312 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31390 +
            (C13440 * C422 + C13436 * C435 + C13441 * C424 + C13437 * C441) *
                C30326 +
            (C13440 * C438 + C13436 * C452 + C13441 * C442 + C13437 * C454) *
                C3625) *
               C13438 +
           ((C13653 + C13654) * C30320 + (C13655 + C13656) * C31383 -
            (C14305 + C14306) * C30312 - (C14307 + C14308) * C31390 +
            (C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
             C13437 * C2028) *
                C30326 +
            (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
             C13437 * C2030) *
                C3625) *
               C13439) *
              C31480 * C31283 * C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C3114 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
            (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
               C13439) *
              C31480 * C31283 * C31630 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C3114 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C3111 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C3113) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31387) *
               C13438 +
           ((C14301 + C14302) * C3114 -
            ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
            (C14303 + C14304) * C31387) *
               C13439) *
              C31480 * C31283 * C31623 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C3113 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C3111 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C3114 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31387) *
               C13438 +
           ((C13653 + C13654) * C3113 + (C13655 + C13656) * C3111 -
            (C14305 + C14306) * C3114 - (C14307 + C14308) * C31387) *
               C13439) *
              C31480 * C31283 * C31610 +
          (((C13440 * C423 + C13436 * C439 + C13441 * C425 + C13437 * C443) *
                C3114 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C3111 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C3113) +
            (C13440 * C440 + C13436 * C453 + C13441 * C444 + C13437 * C455) *
                C31387) *
               C13438 +
           ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                C3114 -
            ((C13948 + C13947) * C3111 + (C13946 + C13945) * C3113) +
            (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                C31387) *
               C13439) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C3114 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C3113 + (C13639 + C13640) * C3111 -
             (C14297 + C14298) * C3114 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31624 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C3114 -
             ((C13641 + C13642) * C3111 + (C13643 + C13644) * C3113) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C31612 +
           (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
             (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
                C13438 +
            ((C14553 + C14554) * C3113 + (C14555 + C14556) * C3111 -
             (C15229 + C15230) * C3114 - (C15231 + C15232) * C31387) *
                C13439) *
               C31480 * C31587) *
              C2457 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C3114 -
             ((C13648 + C13647) * C3111 + (C13646 + C13645) * C3113) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31624 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C3113 + (C13651 + C13652) * C3111 -
             (C15087 + C15088) * C3114 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C31612 +
           (((C15088 + C15087) * C3114 -
             ((C13652 + C13651) * C3111 + (C13650 + C13649) * C3113) +
             (C15090 + C15089) * C31387) *
                C13438 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C3114 -
             ((C14881 + C14882) * C3111 + (C14883 + C14884) * C3113) +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31387) *
                C13439) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31558 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31345) *
              C557 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31345 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31558) *
              C558 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C31558 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31345) *
              C559 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C13438 +
            ((C13440 * C268 + C13436 * C286 + C13441 * C270 + C13437 * C289) *
                 C116 +
             (C13440 * C285 + C13436 * C298 + C13441 * C290 + C13437 * C300) *
                 C31300) *
                C13439) *
               C31480 * C31345 -
           (((C13948 + C13947) * C31300 + (C13946 + C13945) * C116) * C13439 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C13438) *
               C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C1289 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C1290 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
               C31480 * C1291 -
           (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
               C31480 * C31597) *
              C31544 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C1290 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C1289 -
           (((C14881 + C14882) * C31300 + (C14883 + C14884) * C116) * C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C1291 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C13438 +
            ((C13440 * C1025 + C13436 * C1034 + C13441 * C1026 +
              C13437 * C1035) *
                 C116 +
             (C13440 * C1037 + C13436 * C1043 + C13441 * C1038 +
              C13437 * C1044) *
                 C31300) *
                C13439) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C666 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
             (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C13440 * C1160 + C13436 * C1172 + C13441 * C1159 +
              C13437 * C1171) *
                 C666 -
             ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
             (C13440 * C1175 + C13436 * C1187 + C13441 * C1174 +
              C13437 * C1186) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C258 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C666 -
             ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C665 + (C13651 + C13652) * C31559 -
             (C13441 * C1158 + C13437 * C1170 + C13440 * C1159 +
              C13436 * C1171) *
                 C666 -
             (C13441 * C1173 + C13437 * C1185 + C13440 * C1174 +
              C13436 * C1186) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C665 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31559 -
             (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                 C666 -
             (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                 C31387) *
                C13438 +
            ((C13653 + C13654) * C665 + (C13655 + C13656) * C31559 -
             (C14305 + C14306) * C666 - (C14307 + C14308) * C31387) *
                C13439) *
               C31480 * C31558 +
           (((C14306 + C14305) * C666 -
             ((C13656 + C13655) * C31559 + (C13654 + C13653) * C665) +
             (C14308 + C14307) * C31387) *
                C13438 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C666 -
             ((C13657 + C13658) * C31559 + (C13659 + C13660) * C665) +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31387) *
                C13439) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C666 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
            (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
               C13439) *
              C31480 * C1289 +
          (((C14298 + C14297) * C666 -
            ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
            (C14300 + C14299) * C31387) *
               C13438 +
           ((C14735 + C14736) * C666 -
            ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
            (C14737 + C14738) * C31387) *
               C13439) *
              C31480 * C1290 +
          (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
            (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
               C13438 +
           ((C14553 + C14554) * C665 + (C14555 + C14556) * C31559 -
            (C15229 + C15230) * C666 - (C15231 + C15232) * C31387) *
               C13439) *
              C31480 * C1291 +
          (((C15230 + C15229) * C666 -
            ((C14556 + C14555) * C31559 + (C14554 + C14553) * C665) +
            (C15232 + C15231) * C31387) *
               C13438 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C666 -
            ((C14557 + C14558) * C31559 + (C14559 + C14560) * C665) +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31387) *
               C13439) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31624 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31612 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C258 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31612 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31624 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C31624 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31612 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13440 * C263 + C13436 * C276 + C13441 * C262 + C13437 * C275) *
                C116 +
            (C13440 * C273 + C13436 * C293 + C13441 * C272 + C13437 * C292) *
                C31300) *
               C13439) *
              C31480 * C31283 * C108 -
          (((C13441 * C271 + C13437 * C291 + C13440 * C272 + C13436 * C292) *
                C31300 +
            (C13441 * C261 + C13437 * C274 + C13440 * C262 + C13436 * C275) *
                C116) *
               C13439 +
           ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                C31300 +
            (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                C116) *
               C13438) *
              C31480 * C31283 * C109 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C116 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31300) *
               C13438 +
           ((C13440 * C261 + C13436 * C274 + C13441 * C267 + C13437 * C283) *
                C116 +
            (C13440 * C271 + C13436 * C291 + C13441 * C284 + C13437 * C297) *
                C31300) *
               C13439) *
              C31480 * C31283 * C110 -
          (((C13441 * C287 + C13437 * C299 + C13440 * C284 + C13436 * C297) *
                C31300 +
            (C13441 * C269 + C13437 * C288 + C13440 * C267 + C13436 * C283) *
                C116) *
               C13439 +
           ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                C31300 +
            (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                C116) *
               C13438) *
              C31480 * C31283 * C111 +
          (((C13440 * C121 + C13436 * C132 + C13441 * C122 + C13437 * C135) *
                C116 +
            (C13440 * C133 + C13436 * C142 + C13441 * C134 + C13437 * C143) *
                C31300) *
               C13438 +
           ((C13440 * C269 + C13436 * C288 + C13441 * C561 + C13437 * C562) *
                C116 +
            (C13440 * C287 + C13436 * C299 + C13441 * C563 + C13437 * C564) *
                C31300) *
               C13439) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C415 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31614 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C416 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C414 + (C13639 + C13640) * C31625 -
            (C13441 * C818 + C13437 * C823 + C13440 * C817 + C13436 * C822) *
                C415 -
            (C13441 * C826 + C13437 * C833 + C13440 * C825 + C13436 * C832) *
                C31614 +
            (C13440 * C1157 + C13436 * C1166 + C13441 * C1156 +
             C13437 * C1165) *
                C416 +
            (C13440 * C1169 + C13436 * C1184 + C13441 * C1168 +
             C13437 * C1183) *
                C31590) *
               C13439) *
              C31480 * C31283 * C258 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C415 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31625 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C414) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31614 -
            (C13441 * C422 + C13437 * C435 + C13440 * C421 + C13436 * C434) *
                C416 -
            (C13441 * C438 + C13437 * C452 + C13440 * C437 + C13436 * C451) *
                C31590) *
               C13438 +
           ((C13440 * C818 + C13436 * C823 + C13441 * C819 + C13437 * C824) *
                C415 -
            ((C13648 + C13647) * C31625 + (C13646 + C13645) * C414) +
            (C13440 * C826 + C13436 * C833 + C13441 * C827 + C13437 * C834) *
                C31614 -
            (C13441 * C1155 + C13437 * C1164 + C13440 * C1156 +
             C13436 * C1165) *
                C416 -
            (C13441 * C1167 + C13437 * C1182 + C13440 * C1168 +
             C13436 * C1183) *
                C31590) *
               C13439) *
              C31480 * C31283 * C259 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C414 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31625 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C415 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31614 +
            (C13440 * C422 + C13436 * C435 + C13441 * C424 + C13437 * C441) *
                C416 +
            (C13440 * C438 + C13436 * C452 + C13441 * C442 + C13437 * C454) *
                C31590) *
               C13438 +
           ((C13653 + C13654) * C414 + (C13655 + C13656) * C31625 -
            (C13441 * C820 + C13437 * C828 + C13440 * C819 + C13436 * C824) *
                C415 -
            (C13441 * C829 + C13437 * C835 + C13440 * C827 + C13436 * C834) *
                C31614 +
            (C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
             C13437 * C2028) *
                C416 +
            (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
             C13437 * C2030) *
                C31590) *
               C13439) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C947 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C948 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C947 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C947 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
              C31480 * C1015 -
          (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
              C31480 * C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
           ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
              C31480 * C1017 -
          (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
              C31480 * C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C13438 +
           ((C13440 * C5471 + C13436 * C5474 + C13441 * C5764 +
             C13437 * C5765) *
                C116 +
            (C13440 * C5473 + C13436 * C5477 + C13441 * C5766 +
             C13437 * C5767) *
                C31300) *
               C13439) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C415 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31614 +
            (C13440 * C420 + C13436 * C433 + C13441 * C421 + C13437 * C434) *
                C416 +
            (C13440 * C436 + C13436 * C450 + C13441 * C437 + C13437 * C451) *
                C31590) *
               C13438 +
           ((C13637 + C13638) * C414 + (C13639 + C13640) * C31625 -
            (C14297 + C14298) * C415 - (C14299 + C14300) * C31614 +
            (C14731 + C14732) * C416 + (C14733 + C14734) * C31590) *
               C13439) *
              C31480 * C947 +
          (((C14298 + C14297) * C415 -
            ((C13640 + C13639) * C31625 + (C13638 + C13637) * C414) +
            (C14300 + C14299) * C31614 - (C14732 + C14731) * C416 -
            (C14734 + C14733) * C31590) *
               C13438 +
           ((C14735 + C14736) * C415 -
            ((C13641 + C13642) * C31625 + (C13643 + C13644) * C414) +
            (C14737 + C14738) * C31614 - (C14739 + C14740) * C416 -
            (C14741 + C14742) * C31590) *
               C13439) *
              C31480 * C948 +
          (((C13644 + C13643) * C414 + (C13642 + C13641) * C31625 -
            (C14736 + C14735) * C415 - (C14738 + C14737) * C31614 +
            (C14740 + C14739) * C416 + (C14742 + C14741) * C31590) *
               C13438 +
           ((C14553 + C14554) * C414 + (C14555 + C14556) * C31625 -
            (C13441 * C1548 + C13437 * C1551 + C13440 * C1547 +
             C13436 * C1550) *
                C415 -
            (C13441 * C1554 + C13437 * C1557 + C13440 * C1553 +
             C13436 * C1556) *
                C31614 +
            (C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C416 +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31590) *
               C13439) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                C666 -
            (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                C31387) *
               C13438 +
           ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
            (C13441 * C818 + C13437 * C823 + C13440 * C817 + C13436 * C822) *
                C666 -
            (C13441 * C826 + C13437 * C833 + C13440 * C825 + C13436 * C832) *
                C31387) *
               C13439) *
              C31480 * C31283 * C557 +
          (((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                C666 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31559 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C665) +
            (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                C31387) *
               C13438 +
           ((C13440 * C818 + C13436 * C823 + C13441 * C819 + C13437 * C824) *
                C666 -
            ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
            (C13440 * C826 + C13436 * C833 + C13441 * C827 + C13437 * C834) *
                C31387) *
               C13439) *
              C31480 * C31283 * C558 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C665 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31559 -
            (C13441 * C423 + C13437 * C439 + C13440 * C417 + C13436 * C427) *
                C666 -
            (C13441 * C440 + C13437 * C453 + C13440 * C430 + C13436 * C447) *
                C31387) *
               C13438 +
           ((C13653 + C13654) * C665 + (C13655 + C13656) * C31559 -
            (C13441 * C820 + C13437 * C828 + C13440 * C819 + C13436 * C824) *
                C666 -
            (C13441 * C829 + C13437 * C835 + C13440 * C827 + C13436 * C834) *
                C31387) *
               C13439) *
              C31480 * C31283 * C559 +
          (((C13440 * C423 + C13436 * C439 + C13441 * C425 + C13437 * C443) *
                C666 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31559 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C665) +
            (C13440 * C440 + C13436 * C453 + C13441 * C444 + C13437 * C455) *
                C31387) *
               C13438 +
           ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                C666 -
            ((C13948 + C13947) * C31559 + (C13946 + C13945) * C665) +
            (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                C31387) *
               C13439) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C13441 * C418 + C13437 * C428 + C13440 * C419 + C13436 * C429) *
                 C666 -
             (C13441 * C431 + C13437 * C448 + C13440 * C432 + C13436 * C449) *
                 C31387) *
                C13438 +
            ((C13637 + C13638) * C665 + (C13639 + C13640) * C31559 -
             (C14297 + C14298) * C666 - (C14299 + C14300) * C31387) *
                C13439) *
               C31480 * C947 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C13438 +
            ((C14735 + C14736) * C666 -
             ((C13641 + C13642) * C31559 + (C13643 + C13644) * C665) +
             (C14737 + C14738) * C31387) *
                C13439) *
               C31480 * C948 +
           (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
             (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
                C13438 +
            ((C14553 + C14554) * C665 + (C14555 + C14556) * C31559 -
             (C13441 * C1548 + C13437 * C1551 + C13440 * C1547 +
              C13436 * C1550) *
                 C666 -
             (C13441 * C1554 + C13437 * C1557 + C13440 * C1553 +
              C13436 * C1556) *
                 C31387) *
                C13439) *
               C31480 * C31587) *
              C31544 +
          ((((C13440 * C418 + C13436 * C428 + C13441 * C417 + C13437 * C427) *
                 C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C13440 * C431 + C13436 * C448 + C13441 * C430 + C13437 * C447) *
                 C31387) *
                C13438 +
            ((C14301 + C14302) * C666 -
             ((C13648 + C13647) * C31559 + (C13646 + C13645) * C665) +
             (C14303 + C14304) * C31387) *
                C13439) *
               C31480 * C947 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C13438 +
            ((C13649 + C13650) * C665 + (C13651 + C13652) * C31559 -
             (C15087 + C15088) * C666 - (C15089 + C15090) * C31387) *
                C13439) *
               C31480 * C948 +
           (((C15088 + C15087) * C666 -
             ((C13652 + C13651) * C31559 + (C13650 + C13649) * C665) +
             (C15090 + C15089) * C31387) *
                C13438 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C666 -
             ((C14881 + C14882) * C31559 + (C14883 + C14884) * C665) +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31387) *
                C13439) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13440 * C263 + C13436 * C276 + C13441 * C262 + C13437 * C275) *
                C116 +
            (C13440 * C273 + C13436 * C293 + C13441 * C272 + C13437 * C292) *
                C31300) *
               C13439) *
              C31480 * C31283 * C108 -
          (((C13441 * C271 + C13437 * C291 + C13440 * C272 + C13436 * C292) *
                C31300 +
            (C13441 * C261 + C13437 * C274 + C13440 * C262 + C13436 * C275) *
                C116) *
               C13439 +
           ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                C31300 +
            (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                C116) *
               C13438) *
              C31480 * C31283 * C109 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C116 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31300) *
               C13438 +
           ((C13440 * C261 + C13436 * C274 + C13441 * C267 + C13437 * C283) *
                C116 +
            (C13440 * C271 + C13436 * C291 + C13441 * C284 + C13437 * C297) *
                C31300) *
               C13439) *
              C31480 * C31283 * C110 -
          (((C13441 * C287 + C13437 * C299 + C13440 * C284 + C13436 * C297) *
                C31300 +
            (C13441 * C269 + C13437 * C288 + C13440 * C267 + C13436 * C283) *
                C116) *
               C13439 +
           ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                C31300 +
            (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                C116) *
               C13438) *
              C31480 * C31283 * C111 +
          (((C13440 * C121 + C13436 * C132 + C13441 * C122 + C13437 * C135) *
                C116 +
            (C13440 * C133 + C13436 * C142 + C13441 * C134 + C13437 * C143) *
                C31300) *
               C13438 +
           ((C13440 * C269 + C13436 * C288 + C13441 * C561 + C13437 * C562) *
                C116 +
            (C13440 * C287 + C13436 * C299 + C13441 * C563 + C13437 * C564) *
                C31300) *
               C13439) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C31624 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C31612 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C258 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C31612 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C31624 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C31624 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C31612 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C13438 +
            ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
               C31480 * C947 -
           (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
               C31480 * C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
            ((C13440 * C1023 + C13436 * C1032 + C13441 * C1022 +
              C13437 * C1031) *
                 C116 +
             (C13440 * C1029 + C13436 * C1041 + C13441 * C1028 +
              C13437 * C1040) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C13438 +
            ((C13649 + C13650) * C116 + (C13651 + C13652) * C31300) * C13439) *
               C31480 * C948 -
           (((C13648 + C13647) * C31300 + (C13646 + C13645) * C116) * C13439 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C13438) *
               C31480 * C947 -
           (((C13441 * C1027 + C13437 * C1039 + C13440 * C1028 +
              C13436 * C1040) *
                 C31300 +
             (C13441 * C1021 + C13437 * C1030 + C13440 * C1022 +
              C13436 * C1031) *
                 C116) *
                C13439 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C13438) *
               C31480 * C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C13438 +
            ((C13653 + C13654) * C116 + (C13655 + C13656) * C31300) * C13439) *
               C31480 * C947 -
           (((C13657 + C13658) * C31300 + (C13659 + C13660) * C116) * C13439 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C13438) *
               C31480 * C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C13438 +
            ((C13440 * C1021 + C13436 * C1030 + C13441 * C1295 +
              C13437 * C1296) *
                 C116 +
             (C13440 * C1027 + C13436 * C1039 + C13441 * C1297 +
              C13437 * C1298) *
                 C31300) *
                C13439) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C13438 +
           ((C13637 + C13638) * C116 + (C13639 + C13640) * C31300) * C13439) *
              C31480 * C1015 -
          (((C13641 + C13642) * C31300 + (C13643 + C13644) * C116) * C13439 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C13438) *
              C31480 * C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C13438 +
           ((C14553 + C14554) * C116 + (C14555 + C14556) * C31300) * C13439) *
              C31480 * C1017 -
          (((C14557 + C14558) * C31300 + (C14559 + C14560) * C116) * C13439 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C13438) *
              C31480 * C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C13438 +
           ((C13440 * C5471 + C13436 * C5474 + C13441 * C5764 +
             C13437 * C5765) *
                C116 +
            (C13440 * C5473 + C13436 * C5477 + C13441 * C5766 +
             C13437 * C5767) *
                C31300) *
               C13439) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31341 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31348 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) *
                C19131) *
               C2717) *
              C31261 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31348 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31341 -
           (((C25999 + C26000) * C13439 + (C24854 + C24853) * C13438) * C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C2717) *
              C31269 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C31341 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31348 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C2717) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C665 +
              (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
              C9448 * C31387) *
                 C13438 +
             (C5240 + C5241 - C5288 - C5289) * C13439) *
                C19130 +
            ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                 C13438 +
             (C25467 + C25468 - C25469 - C25470) * C13439) *
                C19131) *
               C31341 +
           (((C5288 - (C5241 + C5240) + C5289) * C13438 +
             (C5290 - (C5247 + C5246) + C5291) * C13439) *
                C19130 +
            ((C25469 - (C25468 + C25467) + C25470) * C13438 +
             (C26195 - (C26196 + C26197) + C26198) * C13439) *
                C19131) *
               C31348 +
           ((C5944 * C13438 + (C5931 + C5930 - C5929 - C5932) * C13439) *
                C19130 +
            ((C26197 + C26196 - C26195 - C26198) * C13438 +
             (C26333 + C26334 - C26335 - C26336) * C13439) *
                C19131) *
               C2717) *
              C2457 +
          ((((C9453 * C666 -
              ((C4585 * C128 + C31234 * C139) * C31559 +
               (C4585 * C118 + C31234 * C125) * C665) +
              C9454 * C31387) *
                 C13438 +
             (C5292 - (C5254 + C5255) + C5293) * C13439) *
                C19130 +
            ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                 C13438 +
             (C25471 - (C25472 + C25473) + C25474) * C13439) *
                C19131) *
               C31341 +
           (((C5255 + C5254 - C5292 - C5293) * C13438 +
             (C5261 + C5260 - C5294 - C5295) * C13439) *
                C19130 +
            ((C25473 + C25472 - C25471 - C25474) * C13438 +
             (C26199 + C26200 - C26201 - C26202) * C13439) *
                C19131) *
               C31348 +
           ((C5945 * C13438 + (C5946 - (C5935 + C5934) + C5947) * C13439) *
                C19130 +
            ((C26201 - (C26200 + C26199) + C26202) * C13438 +
             ((C4585 * C6525 + C31234 * C6526) * C666 -
              (C5943 * C31559 + C5942 * C665) +
              (C4585 * C6527 + C31234 * C6528) * C31387) *
                 C13439) *
                C19131) *
               C2717) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31631 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31627 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) *
                C19131) *
               C31617 -
           (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
            ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
               C31597) *
              C2457 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31627 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31631 -
           (((C25999 + C26000) * C13439 + (C24854 + C24853) * C13438) * C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31617 +
           ((C5769 * C13438 + (C5777 + C5776) * C13439) * C19130 +
            ((C26000 + C25999) * C13438 +
             ((C4585 * C5923 + C31234 * C5924) * C116 +
              (C4585 * C5925 + C31234 * C5926) * C31300) *
                 C13439) *
                C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C2349 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31345) *
              C31630 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31345 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C2349) *
              C31623 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C2349 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31345) *
              C31610 +
          ((((C4992 + C4993) * C13438 + (C4994 + C4995) * C13439) * C19130 +
            ((C25141 + C25142) * C13438 +
             ((C4585 * C1445 + C31234 * C1446) * C116 +
              (C4585 * C1447 + C31234 * C1448) * C31300) *
                 C13439) *
                C19131) *
               C31345 -
           (((C25142 + C25141) * C13439 +
             (C9670 * C31300 + C9669 * C116) * C13438) *
                C19131 +
            ((C4993 + C4992) * C13439 +
             ((C4585 * C130 + C31234 * C141) * C31300 +
              (C4585 * C120 + C31234 * C131) * C116) *
                 C13438) *
                C19130) *
               C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C414 +
              (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
              C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
                 C13438 +
             (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C13439) *
                C19130 +
            ((C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
              C9451 * C416 + C9452 * C31590) *
                 C13438 +
             (C25857 + C25858 - C25859 - C25860 + C25861 + C25862) * C13439) *
                C19131) *
               C2349 +
           (((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C13438 +
             (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C13439) *
                C19130 +
            ((C25859 - (C25858 + C25857) + C25860 - C25861 - C25862) * C13438 +
             (C25863 - (C25864 + C25865) + C25866 - C25867 - C25868) * C13439) *
                C19131) *
               C31345) *
              C2457 +
          ((((C9453 * C415 -
              ((C4585 * C128 + C31234 * C139) * C31625 +
               (C4585 * C118 + C31234 * C125) * C414) +
              C9454 * C31614 - C9455 * C416 - C9456 * C31590) *
                 C13438 +
             (C7128 - (C7129 + C7130) + C7131 - C7132 - C7133) * C13439) *
                C19130 +
            ((C9455 * C415 - (C9454 * C31625 + C9453 * C414) + C9456 * C31614 -
              C9457 * C416 - C9458 * C31590) *
                 C13438 +
             (C27645 - (C27646 + C27647) + C27648 - C27649 - C27650) * C13439) *
                C19131) *
               C2349 +
           (((C7130 + C7129 - C7128 - C7131 + C7132 + C7133) * C13438 +
             (C7136 + C7135 - C7134 - C7137 + C7138 + C7139) * C13439) *
                C19130 +
            ((C27647 + C27646 - C27645 - C27648 + C27649 + C27650) * C13438 +
             (C5282 * C414 + C5283 * C31625 - C6548 * C415 - C6549 * C31614 +
              (C4585 * C6651 + C31234 * C6652) * C416 +
              (C4585 * C6653 + C31234 * C6654) * C31590) *
                 C13439) *
                C19131) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C665 +
              (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
              C9448 * C31387) *
                 C13438 +
             (C5240 + C5241 - C5288 - C5289) * C13439) *
                C19130 +
            ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                 C13438 +
             (C25467 + C25468 - C25469 - C25470) * C13439) *
                C19131) *
               C2349 +
           (((C5288 - (C5241 + C5240) + C5289) * C13438 +
             (C5290 - (C5247 + C5246) + C5291) * C13439) *
                C19130 +
            ((C25469 - (C25468 + C25467) + C25470) * C13438 +
             (C26195 - (C26196 + C26197) + C26198) * C13439) *
                C19131) *
               C31345) *
              C31261 +
          ((((C9453 * C666 -
              ((C4585 * C128 + C31234 * C139) * C31559 +
               (C4585 * C118 + C31234 * C125) * C665) +
              C9454 * C31387) *
                 C13438 +
             (C5292 - (C5254 + C5255) + C5293) * C13439) *
                C19130 +
            ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                 C13438 +
             (C25471 - (C25472 + C25473) + C25474) * C13439) *
                C19131) *
               C2349 +
           (((C5255 + C5254 - C5292 - C5293) * C13438 +
             (C5261 + C5260 - C5294 - C5295) * C13439) *
                C19130 +
            ((C25473 + C25472 - C25471 - C25474) * C13438 +
             (C26199 + C26200 - C26201 - C26202) * C13439) *
                C19131) *
               C31345) *
              C31269 +
          (((((C4585 * C119 + C31234 * C126) * C665 +
              (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
              C9460 * C31387) *
                 C13438 +
             (C5264 + C5265 - C5296 - C5297) * C13439) *
                C19130 +
            ((C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                 C13438 +
             (C25475 + C25476 - C25477 - C25478) * C13439) *
                C19131) *
               C2349 +
           (((C5296 - (C5265 + C5264) + C5297) * C13438 +
             (C5298 - (C5271 + C5270) + C5299) * C13439) *
                C19130 +
            ((C25477 - (C25476 + C25475) + C25478) * C13438 +
             ((C4585 * C1163 + C31234 * C1178) * C666 -
              (C5287 * C31559 + C5286 * C665) +
              (C4585 * C1181 + C31234 * C1190) * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C2349 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31345) *
              C31630 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31345 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C2349) *
              C31623 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C2349 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31345) *
              C31610 +
          ((((C4992 + C4993) * C13438 + (C4994 + C4995) * C13439) * C19130 +
            ((C25141 + C25142) * C13438 +
             ((C4585 * C1445 + C31234 * C1446) * C116 +
              (C4585 * C1447 + C31234 * C1448) * C31300) *
                 C13439) *
                C19131) *
               C31345 -
           (((C25142 + C25141) * C13439 +
             (C9670 * C31300 + C9669 * C116) * C13438) *
                C19131 +
            ((C4993 + C4992) * C13439 +
             ((C4585 * C130 + C31234 * C141) * C31300 +
              (C4585 * C120 + C31234 * C131) * C116) *
                 C13438) *
                C19130) *
               C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31631 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31627 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) *
                C19131) *
               C31617 -
           (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
            ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
               C31597) *
              C2457 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31627 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31631 -
           (((C25999 + C26000) * C13439 + (C24854 + C24853) * C13438) * C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31617 +
           ((C5769 * C13438 + (C5777 + C5776) * C13439) * C19130 +
            ((C26000 + C25999) * C13438 +
             ((C4585 * C5923 + C31234 * C5924) * C116 +
              (C4585 * C5925 + C31234 * C5926) * C31300) *
                 C13439) *
                C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C3113 +
              (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
              C9448 * C31387) *
                 C13438 +
             (C7786 + C7787 - C7788 - C7789) * C13439) *
                C19130 +
            ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                 C13438 +
             (C28509 + C28510 - C28511 - C28512) * C13439) *
                C19131) *
               C31341 +
           (((C7788 - (C7787 + C7786) + C7789) * C13438 +
             (C7792 - (C7791 + C7790) + C7793) * C13439) *
                C19130 +
            ((C28511 - (C28510 + C28509) + C28512) * C13438 +
             (C28513 - (C28514 + C28515) + C28516) * C13439) *
                C19131) *
               C31348 +
           ((C7814 * C13438 + (C7796 + C7795 - C7794 - C7797) * C13439) *
                C19130 +
            ((C28515 + C28514 - C28513 - C28516) * C13438 +
             (C29529 + C29530 - C29531 - C29532) * C13439) *
                C19131) *
               C2717) *
              C31544 +
          ((((C9453 * C3114 -
              ((C4585 * C128 + C31234 * C139) * C3111 +
               (C4585 * C118 + C31234 * C125) * C3113) +
              C9454 * C31387) *
                 C13438 +
             (C7798 - (C7799 + C7800) + C7801) * C13439) *
                C19130 +
            ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) +
              C9456 * C31387) *
                 C13438 +
             (C28517 - (C28518 + C28519) + C28520) * C13439) *
                C19131) *
               C31341 +
           (((C7800 + C7799 - C7798 - C7801) * C13438 +
             (C7804 + C7803 - C7802 - C7805) * C13439) *
                C19130 +
            ((C28519 + C28518 - C28517 - C28520) * C13438 +
             (C28521 + C28522 - C28523 - C28524) * C13439) *
                C19131) *
               C31348 +
           ((C7815 * C13438 + (C7808 - (C7807 + C7806) + C7809) * C13439) *
                C19130 +
            ((C28523 - (C28522 + C28521) + C28524) * C13438 +
             ((C4585 * C6525 + C31234 * C6526) * C3114 -
              (C5943 * C3111 + C5942 * C3113) +
              (C4585 * C6527 + C31234 * C6528) * C31387) *
                 C13439) *
                C19131) *
               C2717) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
             C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                C13438 +
            (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C13439) *
               C19130 +
           ((C9447 * C30320 + C9448 * C31383 - C9449 * C30312 - C9450 * C31390 +
             C9451 * C30326 + C9452 * C3625) *
                C13438 +
            (C29193 + C29194 - C29195 - C29196 + C29197 + C29198) * C13439) *
               C19131) *
              C31341 +
          (((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C13438 +
            (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C13439) *
               C19130 +
           ((C29195 - (C29194 + C29193) + C29196 - C29197 - C29198) * C13438 +
            (C30205 - (C30206 + C30207) + C30208 - C30209 - C30210) * C13439) *
               C19131) *
              C31348 +
          ((C9125 * C13438 +
            (C9118 + C9117 - C9116 - C9119 + C9120 + C9121) * C13439) *
               C19130 +
           ((C30207 + C30206 - C30205 - C30208 + C30209 + C30210) * C13438 +
            (C5651 * C30320 + C5652 * C31383 - C5653 * C30312 - C5654 * C31390 +
             (C4585 * C6753 + C31234 * C6754) * C30326 +
             (C4585 * C6755 + C31234 * C6756) * C3625) *
                C13439) *
               C19131) *
              C2717) *
         C31256) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C13438 +
            (C7786 + C7787 - C7788 - C7789) * C13439) *
               C19130 +
           ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C13438 +
            (C28509 + C28510 - C28511 - C28512) * C13439) *
               C19131) *
              C31631 +
          (((C7788 - (C7787 + C7786) + C7789) * C13438 +
            (C7792 - (C7791 + C7790) + C7793) * C13439) *
               C19130 +
           ((C28511 - (C28510 + C28509) + C28512) * C13438 +
            (C28513 - (C28514 + C28515) + C28516) * C13439) *
               C19131) *
              C31627 +
          ((C7814 * C13438 + (C7796 + C7795 - C7794 - C7797) * C13439) *
               C19130 +
           ((C28515 + C28514 - C28513 - C28516) * C13438 +
            (C29529 + C29530 - C29531 - C29532) * C13439) *
               C19131) *
              C31617 +
          ((C8598 * C13438 + (C8595 - (C8594 + C8593) + C8596) * C13439) *
               C19130 +
           ((C29531 - (C29530 + C29529) + C29532) * C13438 +
            ((C4585 * C5609 + C31234 * C5614) * C3114 -
             (C6059 * C3111 + C6058 * C3113) +
             (C4585 * C5615 + C31234 * C5618) * C31387) *
                C13439) *
               C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C3113 +
              (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
              C9448 * C31387) *
                 C13438 +
             (C7786 + C7787 - C7788 - C7789) * C13439) *
                C19130 +
            ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                 C13438 +
             (C28509 + C28510 - C28511 - C28512) * C13439) *
                C19131) *
               C2349 +
           (((C7788 - (C7787 + C7786) + C7789) * C13438 +
             (C7792 - (C7791 + C7790) + C7793) * C13439) *
                C19130 +
            ((C28511 - (C28510 + C28509) + C28512) * C13438 +
             (C28513 - (C28514 + C28515) + C28516) * C13439) *
                C19131) *
               C31345) *
              C31621 +
          ((((C9453 * C3114 -
              ((C4585 * C128 + C31234 * C139) * C3111 +
               (C4585 * C118 + C31234 * C125) * C3113) +
              C9454 * C31387) *
                 C13438 +
             (C7798 - (C7799 + C7800) + C7801) * C13439) *
                C19130 +
            ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) +
              C9456 * C31387) *
                 C13438 +
             (C28517 - (C28518 + C28519) + C28520) * C13439) *
                C19131) *
               C2349 +
           (((C7800 + C7799 - C7798 - C7801) * C13438 +
             (C7804 + C7803 - C7802 - C7805) * C13439) *
                C19130 +
            ((C28519 + C28518 - C28517 - C28520) * C13438 +
             (C28521 + C28522 - C28523 - C28524) * C13439) *
                C19131) *
               C31345) *
              C31608 +
          (((((C4585 * C119 + C31234 * C126) * C3113 +
              (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
              C9460 * C31387) *
                 C13438 +
             (C8060 + C8061 - C8062 - C8063) * C13439) *
                C19130 +
            ((C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                 C13438 +
             (C28849 + C28850 - C28851 - C28852) * C13439) *
                C19131) *
               C2349 +
           (((C8062 - (C8061 + C8060) + C8063) * C13438 +
             (C8066 - (C8065 + C8064) + C8067) * C13439) *
                C19130 +
            ((C28851 - (C28850 + C28849) + C28852) * C13438 +
             ((C4585 * C1163 + C31234 * C1178) * C3114 -
              (C5287 * C3111 + C5286 * C3113) +
              (C4585 * C1181 + C31234 * C1190) * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3363 +
             (C4585 * C127 + C31234 * C138) * C31632 - C9447 * C3364 -
             C9448 * C31629 + C9449 * C3365 + C9450 * C31620 - C9451 * C3366 -
             C9452 * C31603) *
                C13438 +
            (C8697 + C8698 - C8699 - C8700 + C8701 + C8702 - C8703 - C8704) *
                C13439) *
               C19130 +
           ((C9447 * C3363 + C9448 * C31632 - C9449 * C3364 - C9450 * C31629 +
             C9451 * C3365 + C9452 * C31620 - C10747 * C3366 -
             C10748 * C31603) *
                C13438 +
            (C29663 + C29664 - C29665 - C29666 + C29667 + C29668 - C29669 -
             C29670) *
                C13439) *
               C19131) *
              C2349 +
          (((C8699 - (C8698 + C8697) + C8700 - C8701 - C8702 + C8703 + C8704) *
                C13438 +
            (C8707 - (C8706 + C8705) + C8708 - C8709 - C8710 + C8711 + C8712) *
                C13439) *
               C19130 +
           ((C29665 - (C29664 + C29663) + C29666 - C29667 - C29668 + C29669 +
             C29670) *
                C13438 +
            (C5649 * C3364 - (C5279 * C31632 + C5278 * C3363) + C5650 * C31629 -
             C6780 * C3365 - C6781 * C31620 +
             (C4585 * C6369 + C31234 * C6374) * C3366 +
             (C4585 * C6375 + C31234 * C6378) * C31603) *
                C13439) *
               C19131) *
              C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C30320 +
              (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
              C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                 C13438 +
             (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C13439) *
                C19130 +
            ((C9447 * C30320 + C9448 * C31383 - C9449 * C30312 -
              C9450 * C31390 + C9451 * C30326 + C9452 * C3625) *
                 C13438 +
             (C29193 + C29194 - C29195 - C29196 + C29197 + C29198) * C13439) *
                C19131) *
               C2349 +
           (((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C13438 +
             (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C13439) *
                C19130 +
            ((C29195 - (C29194 + C29193) + C29196 - C29197 - C29198) * C13438 +
             (C5649 * C30312 - (C5279 * C31383 + C5278 * C30320) +
              C5650 * C31390 - C6780 * C30326 - C6781 * C3625) *
                 C13439) *
                C19131) *
               C31345) *
              C31544 +
          ((((C9453 * C30312 -
              ((C4585 * C128 + C31234 * C139) * C31383 +
               (C4585 * C118 + C31234 * C125) * C30320) +
              C9454 * C31390 - C9455 * C30326 - C9456 * C3625) *
                 C13438 +
             (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C13439) *
                C19130 +
            ((C9455 * C30312 - (C9454 * C31383 + C9453 * C30320) +
              C9456 * C31390 - C9457 * C30326 - C9458 * C3625) *
                 C13438 +
             (C29199 - (C29200 + C29201) + C29202 - C29203 - C29204) * C13439) *
                C19131) *
               C2349 +
           (((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C13438 +
             (C8344 + C8343 - C8342 - C8345 + C8346 + C8347) * C13439) *
                C19130 +
            ((C29201 + C29200 - C29199 - C29202 + C29203 + C29204) * C13438 +
             (C5282 * C30320 + C5283 * C31383 - C6548 * C30312 -
              C6549 * C31390 + (C4585 * C6651 + C31234 * C6652) * C30326 +
              (C4585 * C6653 + C31234 * C6654) * C3625) *
                 C13439) *
                C19131) *
               C31345) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C3113 +
              (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
              C9448 * C31387) *
                 C13438 +
             (C7786 + C7787 - C7788 - C7789) * C13439) *
                C19130 +
            ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                 C13438 +
             (C28509 + C28510 - C28511 - C28512) * C13439) *
                C19131) *
               C2349 +
           (((C7788 - (C7787 + C7786) + C7789) * C13438 +
             (C7792 - (C7791 + C7790) + C7793) * C13439) *
                C19130 +
            ((C28511 - (C28510 + C28509) + C28512) * C13438 +
             (C28513 - (C28514 + C28515) + C28516) * C13439) *
                C19131) *
               C31345) *
              C31621 +
          ((((C9453 * C3114 -
              ((C4585 * C128 + C31234 * C139) * C3111 +
               (C4585 * C118 + C31234 * C125) * C3113) +
              C9454 * C31387) *
                 C13438 +
             (C7798 - (C7799 + C7800) + C7801) * C13439) *
                C19130 +
            ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) +
              C9456 * C31387) *
                 C13438 +
             (C28517 - (C28518 + C28519) + C28520) * C13439) *
                C19131) *
               C2349 +
           (((C7800 + C7799 - C7798 - C7801) * C13438 +
             (C7804 + C7803 - C7802 - C7805) * C13439) *
                C19130 +
            ((C28519 + C28518 - C28517 - C28520) * C13438 +
             (C28521 + C28522 - C28523 - C28524) * C13439) *
                C19131) *
               C31345) *
              C31608 +
          (((((C4585 * C119 + C31234 * C126) * C3113 +
              (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
              C9460 * C31387) *
                 C13438 +
             (C8060 + C8061 - C8062 - C8063) * C13439) *
                C19130 +
            ((C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                 C13438 +
             (C28849 + C28850 - C28851 - C28852) * C13439) *
                C19131) *
               C2349 +
           (((C8062 - (C8061 + C8060) + C8063) * C13438 +
             (C8066 - (C8065 + C8064) + C8067) * C13439) *
                C19130 +
            ((C28851 - (C28850 + C28849) + C28852) * C13438 +
             ((C4585 * C1163 + C31234 * C1178) * C3114 -
              (C5287 * C3111 + C5286 * C3113) +
              (C4585 * C1181 + C31234 * C1190) * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C13438 +
            (C7786 + C7787 - C7788 - C7789) * C13439) *
               C19130 +
           ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C13438 +
            (C28509 + C28510 - C28511 - C28512) * C13439) *
               C19131) *
              C31631 +
          (((C7788 - (C7787 + C7786) + C7789) * C13438 +
            (C7792 - (C7791 + C7790) + C7793) * C13439) *
               C19130 +
           ((C28511 - (C28510 + C28509) + C28512) * C13438 +
            (C28513 - (C28514 + C28515) + C28516) * C13439) *
               C19131) *
              C31627 +
          ((C7814 * C13438 + (C7796 + C7795 - C7794 - C7797) * C13439) *
               C19130 +
           ((C28515 + C28514 - C28513 - C28516) * C13438 +
            (C29529 + C29530 - C29531 - C29532) * C13439) *
               C19131) *
              C31617 +
          ((C8598 * C13438 + (C8595 - (C8594 + C8593) + C8596) * C13439) *
               C19130 +
           ((C29531 - (C29530 + C29529) + C29532) * C13438 +
            ((C4585 * C5609 + C31234 * C5614) * C3114 -
             (C6059 * C3111 + C6058 * C3113) +
             (C4585 * C5615 + C31234 * C5618) * C31387) *
                C13439) *
               C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C1289 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C1290 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) *
                C19131) *
               C1291 -
           (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
            ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
               C31597) *
              C31544 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C1290 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C1289 -
           (((C25999 + C26000) * C13439 + (C24854 + C24853) * C13438) * C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C1291 +
           ((C5769 * C13438 + (C5777 + C5776) * C13439) * C19130 +
            ((C26000 + C25999) * C13438 +
             ((C4585 * C5923 + C31234 * C5924) * C116 +
              (C4585 * C5925 + C31234 * C5926) * C31300) *
                 C13439) *
                C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31558 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31345) *
              C557 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31345 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31558) *
              C558 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C31558 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31345) *
              C559 +
          ((((C4992 + C4993) * C13438 + (C4994 + C4995) * C13439) * C19130 +
            ((C25141 + C25142) * C13438 +
             ((C4585 * C1445 + C31234 * C1446) * C116 +
              (C4585 * C1447 + C31234 * C1448) * C31300) *
                 C13439) *
                C19131) *
               C31345 -
           (((C25142 + C25141) * C13439 +
             (C9670 * C31300 + C9669 * C116) * C13438) *
                C19131 +
            ((C4993 + C4992) * C13439 +
             ((C4585 * C130 + C31234 * C141) * C31300 +
              (C4585 * C120 + C31234 * C131) * C116) *
                 C13438) *
                C19130) *
               C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C1672 +
              (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
              C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
                 C13438 +
             (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C13439) *
                C19130 +
            ((C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
              C9451 * C1674 + C9452 * C31590) *
                 C13438 +
             (C26629 + C26630 - C26631 - C26632 + C26633 + C26634) * C13439) *
                C19131) *
               C31558 +
           (((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C13438 +
             (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C13439) *
                C19130 +
            ((C26631 - (C26630 + C26629) + C26632 - C26633 - C26634) * C13438 +
             (C26635 - (C26636 + C26637) + C26638 - C26639 - C26640) * C13439) *
                C19131) *
               C31345) *
              C31544 +
          ((((C9453 * C1673 -
              ((C4585 * C128 + C31234 * C139) * C1669 +
               (C4585 * C118 + C31234 * C125) * C1672) +
              C9454 * C1670 - C9455 * C1674 - C9456 * C31590) *
                 C13438 +
             (C6530 - (C6531 + C6532) + C6533 - C6550 - C6551) * C13439) *
                C19130 +
            ((C9455 * C1673 - (C9454 * C1669 + C9453 * C1672) + C9456 * C1670 -
              C9457 * C1674 - C9458 * C31590) *
                 C13438 +
             (C26917 - (C26918 + C26919) + C26920 - C26921 - C26922) * C13439) *
                C19131) *
               C31558 +
           (((C6532 + C6531 - C6530 - C6533 + C6550 + C6551) * C13438 +
             (C6540 + C6539 - C6538 - C6541 + C6552 + C6553) * C13439) *
                C19130 +
            ((C26919 + C26918 - C26917 - C26920 + C26921 + C26922) * C13438 +
             (C5282 * C1672 + C5283 * C1669 - C6548 * C1673 - C6549 * C1670 +
              (C4585 * C6651 + C31234 * C6652) * C1674 +
              (C4585 * C6653 + C31234 * C6654) * C31590) *
                 C13439) *
                C19131) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C13438 +
            (C5240 + C5241 - C5288 - C5289) * C13439) *
               C19130 +
           ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C13438 +
            (C25467 + C25468 - C25469 - C25470) * C13439) *
               C19131) *
              C1289 +
          (((C5288 - (C5241 + C5240) + C5289) * C13438 +
            (C5290 - (C5247 + C5246) + C5291) * C13439) *
               C19130 +
           ((C25469 - (C25468 + C25467) + C25470) * C13438 +
            (C26195 - (C26196 + C26197) + C26198) * C13439) *
               C19131) *
              C1290 +
          ((C5944 * C13438 + (C5931 + C5930 - C5929 - C5932) * C13439) *
               C19130 +
           ((C26197 + C26196 - C26195 - C26198) * C13438 +
            (C26333 + C26334 - C26335 - C26336) * C13439) *
               C19131) *
              C1291 +
          ((C6060 * C13438 + (C6061 - (C6052 + C6051) + C6062) * C13439) *
               C19130 +
           ((C26335 - (C26334 + C26333) + C26336) * C13438 +
            ((C4585 * C5609 + C31234 * C5614) * C666 -
             (C6059 * C31559 + C6058 * C665) +
             (C4585 * C5615 + C31234 * C5618) * C31387) *
                C13439) *
               C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C665 +
              (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
              C9448 * C31387) *
                 C13438 +
             (C5240 + C5241 - C5288 - C5289) * C13439) *
                C19130 +
            ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                 C13438 +
             (C25467 + C25468 - C25469 - C25470) * C13439) *
                C19131) *
               C31558 +
           (((C5288 - (C5241 + C5240) + C5289) * C13438 +
             (C5290 - (C5247 + C5246) + C5291) * C13439) *
                C19130 +
            ((C25469 - (C25468 + C25467) + C25470) * C13438 +
             (C5649 * C666 - (C5279 * C31559 + C5278 * C665) + C5650 * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C258 +
          ((((C9453 * C666 -
              ((C4585 * C128 + C31234 * C139) * C31559 +
               (C4585 * C118 + C31234 * C125) * C665) +
              C9454 * C31387) *
                 C13438 +
             (C5292 - (C5254 + C5255) + C5293) * C13439) *
                C19130 +
            ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                 C13438 +
             (C25471 - (C25472 + C25473) + C25474) * C13439) *
                C19131) *
               C31558 +
           (((C5255 + C5254 - C5292 - C5293) * C13438 +
             (C5261 + C5260 - C5294 - C5295) * C13439) *
                C19130 +
            ((C25473 + C25472 - C25471 - C25474) * C13438 +
             (C5282 * C665 + C5283 * C31559 - C6548 * C666 - C6549 * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C259 +
          (((((C4585 * C119 + C31234 * C126) * C665 +
              (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
              C9460 * C31387) *
                 C13438 +
             (C5264 + C5265 - C5296 - C5297) * C13439) *
                C19130 +
            ((C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                 C13438 +
             (C25475 + C25476 - C25477 - C25478) * C13439) *
                C19131) *
               C31558 +
           (((C5296 - (C5265 + C5264) + C5297) * C13438 +
             (C5298 - (C5271 + C5270) + C5299) * C13439) *
                C19130 +
            ((C25477 - (C25476 + C25475) + C25478) * C13438 +
             ((C4585 * C1163 + C31234 * C1178) * C666 -
              (C5287 * C31559 + C5286 * C665) +
              (C4585 * C1181 + C31234 * C1190) * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C2133 +
             (C4585 * C127 + C31234 * C138) * C2129 - C9447 * C2134 -
             C9448 * C2130 + C9449 * C2135 + C9450 * C2131 - C9451 * C2136 -
             C9452 * C31603) *
                C13438 +
            (C6758 + C6759 - C6760 - C6761 + C6762 + C6763 - C6782 - C6783) *
                C13439) *
               C19130 +
           ((C9447 * C2133 + C9448 * C2129 - C9449 * C2134 - C9450 * C2130 +
             C9451 * C2135 + C9452 * C2131 - C10747 * C2136 - C10748 * C31603) *
                C13438 +
            (C27183 + C27184 - C27185 - C27186 + C27187 + C27188 - C27189 -
             C27190) *
                C13439) *
               C19131) *
              C31558 +
          (((C6760 - (C6759 + C6758) + C6761 - C6762 - C6763 + C6782 + C6783) *
                C13438 +
            (C6770 - (C6769 + C6768) + C6771 - C6772 - C6773 + C6784 + C6785) *
                C13439) *
               C19130 +
           ((C27185 - (C27184 + C27183) + C27186 - C27187 - C27188 + C27189 +
             C27190) *
                C13438 +
            (C5649 * C2134 - (C5279 * C2129 + C5278 * C2133) + C5650 * C2130 -
             C6780 * C2135 - C6781 * C2131 +
             (C4585 * C6369 + C31234 * C6374) * C2136 +
             (C4585 * C6375 + C31234 * C6378) * C31603) *
                C13439) *
               C19131) *
              C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C4585 * C117 + C31234 * C124) * C116 +
                 (C4585 * C127 + C31234 * C138) * C31300) *
                    C13438 +
                (C4751 + C4752) * C13439) *
                   C19130 +
               ((C9447 * C116 + C9448 * C31300) * C13438 +
                (C5276 * C116 + C5277 * C31300) * C13439) *
                   C19131) *
                  C31283 * C108 -
              (((C5281 * C31300 + C5280 * C116) * C13439 +
                (C9454 * C31300 + C9453 * C116) * C13438) *
                   C19131 +
               ((C4758 + C4757) * C13439 +
                ((C4585 * C128 + C31234 * C139) * C31300 +
                 (C4585 * C118 + C31234 * C125) * C116) *
                    C13438) *
                   C19130) *
                  C31283 * C109 +
              ((((C4585 * C119 + C31234 * C126) * C116 +
                 (C4585 * C129 + C31234 * C140) * C31300) *
                    C13438 +
                (C4763 + C4764) * C13439) *
                   C19130 +
               ((C9459 * C116 + C9460 * C31300) * C13438 +
                (C5284 * C116 + C5285 * C31300) * C13439) *
                   C19131) *
                  C31283 * C110 -
              ((((C4585 * C829 + C31234 * C835) * C31300 +
                 (C4585 * C820 + C31234 * C828) * C116) *
                    C13439 +
                (C9670 * C31300 + C9669 * C116) * C13438) *
                   C19131 +
               ((C4993 + C4992) * C13439 +
                ((C4585 * C130 + C31234 * C141) * C31300 +
                 (C4585 * C120 + C31234 * C131) * C116) *
                    C13438) *
                   C19130) *
                  C31283 * C111 +
              ((((C4585 * C121 + C31234 * C132) * C116 +
                 (C4585 * C133 + C31234 * C142) * C31300) *
                    C13438 +
                ((C4585 * C269 + C31234 * C288) * C116 +
                 (C4585 * C287 + C31234 * C299) * C31300) *
                    C13439) *
                   C19130 +
               (((C4585 * C425 + C31234 * C443) * C116 +
                 (C4585 * C444 + C31234 * C455) * C31300) *
                    C13438 +
                ((C4585 * C821 + C31234 * C830) * C116 +
                 (C4585 * C831 + C31234 * C836) * C31300) *
                    C13439) *
                   C19131) *
                  C31283 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C4585 * C117 + C31234 * C124) * C116 +
                  (C4585 * C127 + C31234 * C138) * C31300) *
                     C13438 +
                 (C4751 + C4752) * C13439) *
                    C19130 +
                ((C9447 * C116 + C9448 * C31300) * C13438 +
                 (C24847 + C24848) * C13439) *
                    C19131) *
                   C31624 -
               (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) *
                    C19131 +
                ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) *
                    C19130) *
                   C31612 +
               ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
                ((C24850 + C24849) * C13438 +
                 (C5651 * C116 + C5652 * C31300) * C13439) *
                    C19131) *
                   C31587) *
                  C258 +
              ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
                ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                    C19131) *
                   C31612 -
               (((C24852 + C24851) * C13439 +
                 (C9454 * C31300 + C9453 * C116) * C13438) *
                    C19131 +
                ((C4758 + C4757) * C13439 +
                 ((C4585 * C128 + C31234 * C139) * C31300 +
                  (C4585 * C118 + C31234 * C125) * C116) *
                     C13438) *
                    C19130) *
                   C31624 -
               (((C5943 * C31300 + C5942 * C116) * C13439 +
                 (C24854 + C24853) * C13438) *
                    C19131 +
                ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
                   C31587) *
                  C259 +
              (((((C4585 * C119 + C31234 * C126) * C116 +
                  (C4585 * C129 + C31234 * C140) * C31300) *
                     C13438 +
                 (C4763 + C4764) * C13439) *
                    C19130 +
                ((C9459 * C116 + C9460 * C31300) * C13438 +
                 (C24855 + C24856) * C13439) *
                    C19131) *
                   C31624 -
               (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) *
                    C19131 +
                ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) *
                    C19130) *
                   C31612 +
               ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
                ((C24858 + C24857) * C13438 +
                 ((C4585 * C1549 + C31234 * C1552) * C116 +
                  (C4585 * C1555 + C31234 * C1558) * C31300) *
                     C13439) *
                    C19131) *
                   C31587) *
                  C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
             C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
                C13438 +
            (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C13439) *
               C19130 +
           ((C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
             C9451 * C416 + C9452 * C31590) *
                C13438 +
            (C5276 * C414 + C5277 * C31625 - C5646 * C415 - C5647 * C31614 +
             C6778 * C416 + C6779 * C31590) *
                C13439) *
               C19131) *
              C31283 * C258 +
          (((C9453 * C415 -
             ((C4585 * C128 + C31234 * C139) * C31625 +
              (C4585 * C118 + C31234 * C125) * C414) +
             C9454 * C31614 - C9455 * C416 - C9456 * C31590) *
                C13438 +
            (C7128 - (C7129 + C7130) + C7131 - C7132 - C7133) * C13439) *
               C19130 +
           ((C9455 * C415 - (C9454 * C31625 + C9453 * C414) + C9456 * C31614 -
             C9457 * C416 - C9458 * C31590) *
                C13438 +
            (C6546 * C415 - (C5281 * C31625 + C5280 * C414) + C6547 * C31614 -
             C10905 * C416 - C10906 * C31590) *
                C13439) *
               C19131) *
              C31283 * C259 +
          ((((C4585 * C119 + C31234 * C126) * C414 +
             (C4585 * C129 + C31234 * C140) * C31625 - C9459 * C415 -
             C9460 * C31614 + C9461 * C416 + C9462 * C31590) *
                C13438 +
            (C4745 * C414 + C4746 * C31625 - C5284 * C415 - C5285 * C31614 +
             C9823 * C416 + C9824 * C31590) *
                C13439) *
               C19130 +
           ((C9459 * C414 + C9460 * C31625 - C9461 * C415 - C9462 * C31614 +
             C9463 * C416 + C9464 * C31590) *
                C13438 +
            (C5284 * C414 + C5285 * C31625 - C9823 * C415 - C9824 * C31614 +
             (C4585 * C2241 + C31234 * C2244) * C416 +
             (C4585 * C2247 + C31234 * C2250) * C31590) *
                C13439) *
               C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C947 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C948 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C31621 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C948 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C947 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C31608 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C947 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C948 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C24847 + C24848) * C13439) *
               C19131) *
              C1015 -
          (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
           ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
              C1016 +
          ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
           ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) * C19131) *
              C1017 -
          (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
           ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
              C1018 +
          ((C5497 * C13438 + (C5496 + C5495) * C13439) * C19130 +
           ((C25710 + C25709) * C13438 +
            ((C4585 * C6045 + C31234 * C6046) * C116 +
             (C4585 * C6047 + C31234 * C6048) * C31300) *
                C13439) *
               C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
             C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
                C13438 +
            (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C13439) *
               C19130 +
           ((C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
             C9451 * C416 + C9452 * C31590) *
                C13438 +
            (C25857 + C25858 - C25859 - C25860 + C25861 + C25862) * C13439) *
               C19131) *
              C947 +
          (((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C13438 +
            (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C13439) *
               C19130 +
           ((C25859 - (C25858 + C25857) + C25860 - C25861 - C25862) * C13438 +
            (C25863 - (C25864 + C25865) + C25866 - C25867 - C25868) * C13439) *
               C19131) *
              C948 +
          ((C5666 * C13438 +
            (C5639 + C5638 - C5660 - C5661 + C5662 + C5663) * C13439) *
               C19130 +
           ((C25865 + C25864 - C25863 - C25866 + C25867 + C25868) * C13438 +
            (C5651 * C414 + C5652 * C31625 - C5653 * C415 - C5654 * C31614 +
             (C4585 * C6753 + C31234 * C6754) * C416 +
             (C4585 * C6755 + C31234 * C6756) * C31590) *
                C13439) *
               C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
             C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
                C13438 +
            (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C13439) *
               C19130 +
           ((C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
             C9451 * C1674 + C9452 * C31590) *
                C13438 +
            (C5276 * C1672 + C5277 * C1669 - C5646 * C1673 - C5647 * C1670 +
             C6778 * C1674 + C6779 * C31590) *
                C13439) *
               C19131) *
              C31283 * C31621 +
          (((C9453 * C1673 -
             ((C4585 * C128 + C31234 * C139) * C1669 +
              (C4585 * C118 + C31234 * C125) * C1672) +
             C9454 * C1670 - C9455 * C1674 - C9456 * C31590) *
                C13438 +
            (C6530 - (C6531 + C6532) + C6533 - C6550 - C6551) * C13439) *
               C19130 +
           ((C9455 * C1673 - (C9454 * C1669 + C9453 * C1672) + C9456 * C1670 -
             C9457 * C1674 - C9458 * C31590) *
                C13438 +
            (C6546 * C1673 - (C5281 * C1669 + C5280 * C1672) + C6547 * C1670 -
             C10905 * C1674 - C10906 * C31590) *
                C13439) *
               C19131) *
              C31283 * C31608 +
          ((((C4585 * C119 + C31234 * C126) * C1672 +
             (C4585 * C129 + C31234 * C140) * C1669 - C9459 * C1673 -
             C9460 * C1670 + C9461 * C1674 + C9462 * C31590) *
                C13438 +
            (C4745 * C1672 + C4746 * C1669 - C5284 * C1673 - C5285 * C1670 +
             C9823 * C1674 + C9824 * C31590) *
                C13439) *
               C19130 +
           ((C9459 * C1672 + C9460 * C1669 - C9461 * C1673 - C9462 * C1670 +
             C9463 * C1674 + C9464 * C31590) *
                C13438 +
            (C5284 * C1672 + C5285 * C1669 - C9823 * C1673 - C9824 * C1670 +
             (C4585 * C2241 + C31234 * C2244) * C1674 +
             (C4585 * C2247 + C31234 * C2250) * C31590) *
                C13439) *
               C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
             C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
                C13438 +
            (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C13439) *
               C19130 +
           ((C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
             C9451 * C1674 + C9452 * C31590) *
                C13438 +
            (C26629 + C26630 - C26631 - C26632 + C26633 + C26634) * C13439) *
               C19131) *
              C31624 +
          (((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C13438 +
            (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C13439) *
               C19130 +
           ((C26631 - (C26630 + C26629) + C26632 - C26633 - C26634) * C13438 +
            (C26635 - (C26636 + C26637) + C26638 - C26639 - C26640) * C13439) *
               C19131) *
              C31612 +
          ((C6305 * C13438 +
            (C6297 + C6296 - C6295 - C6298 + C6299 + C6300) * C13439) *
               C19130 +
           ((C26637 + C26636 - C26635 - C26638 + C26639 + C26640) * C13438 +
            (C5651 * C1672 + C5652 * C1669 - C5653 * C1673 - C5654 * C1670 +
             (C4585 * C6753 + C31234 * C6754) * C1674 +
             (C4585 * C6755 + C31234 * C6756) * C31590) *
                C13439) *
               C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1852 +
            (C4585 * C127 + C31234 * C138) * C1847 - C9447 * C1853 -
            C9448 * C1848 + C9449 * C1854 + C9450 * C1849 - C9451 * C1855 -
            C9452 * C1850 + C10747 * C1856 + C10748 * C1851) *
               C13438 +
           (C4733 * C1852 + C4734 * C1847 - C5276 * C1853 - C5277 * C1848 +
            C5646 * C1854 + C5647 * C1849 - C6778 * C1855 - C6779 * C1850 +
            C11121 * C1856 + C11122 * C1851) *
               C13439) *
              C19130 +
          ((C9447 * C1852 + C9448 * C1847 - C9449 * C1853 - C9450 * C1848 +
            C9451 * C1854 + C9452 * C1849 - C10747 * C1855 - C10748 * C1850 +
            C10749 * C1856 + C10750 * C1851) *
               C13438 +
           (C5276 * C1852 + C5277 * C1847 - C5646 * C1853 - C5647 * C1848 +
            C6778 * C1854 + C6779 * C1849 - C11121 * C1855 - C11122 * C1850 +
            (C4585 * C11112 + C31234 * C11113) * C1856 +
            (C4585 * C11114 + C31234 * C11115) * C1851) *
               C13439) *
              C19131) *
         C31283 * C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C665 +
              (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
              C9448 * C31387) *
                 C13438 +
             (C5240 + C5241 - C5288 - C5289) * C13439) *
                C19130 +
            ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                 C13438 +
             (C25467 + C25468 - C25469 - C25470) * C13439) *
                C19131) *
               C947 +
           (((C5288 - (C5241 + C5240) + C5289) * C13438 +
             (C5290 - (C5247 + C5246) + C5291) * C13439) *
                C19130 +
            ((C25469 - (C25468 + C25467) + C25470) * C13438 +
             (C26195 - (C26196 + C26197) + C26198) * C13439) *
                C19131) *
               C948 +
           ((C5944 * C13438 + (C5931 + C5930 - C5929 - C5932) * C13439) *
                C19130 +
            ((C26197 + C26196 - C26195 - C26198) * C13438 +
             (C5651 * C665 + C5652 * C31559 - C5653 * C666 - C5654 * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C31544 +
          ((((C9453 * C666 -
              ((C4585 * C128 + C31234 * C139) * C31559 +
               (C4585 * C118 + C31234 * C125) * C665) +
              C9454 * C31387) *
                 C13438 +
             (C5292 - (C5254 + C5255) + C5293) * C13439) *
                C19130 +
            ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                 C13438 +
             (C25471 - (C25472 + C25473) + C25474) * C13439) *
                C19131) *
               C947 +
           (((C5255 + C5254 - C5292 - C5293) * C13438 +
             (C5261 + C5260 - C5294 - C5295) * C13439) *
                C19130 +
            ((C25473 + C25472 - C25471 - C25474) * C13438 +
             (C26199 + C26200 - C26201 - C26202) * C13439) *
                C19131) *
               C948 +
           ((C5945 * C13438 + (C5946 - (C5935 + C5934) + C5947) * C13439) *
                C19130 +
            ((C26201 - (C26200 + C26199) + C26202) * C13438 +
             ((C4585 * C6525 + C31234 * C6526) * C666 -
              (C5943 * C31559 + C5942 * C665) +
              (C4585 * C6527 + C31234 * C6528) * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C13438 +
            (C5240 + C5241 - C5288 - C5289) * C13439) *
               C19130 +
           ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C13438 +
            (C5276 * C665 + C5277 * C31559 - C5646 * C666 - C5647 * C31387) *
                C13439) *
               C19131) *
              C31283 * C557 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C13438 +
            (C5292 - (C5254 + C5255) + C5293) * C13439) *
               C19130 +
           ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C13438 +
            (C6546 * C666 - (C5281 * C31559 + C5280 * C665) + C6547 * C31387) *
                C13439) *
               C19131) *
              C31283 * C558 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
             C9460 * C31387) *
                C13438 +
            (C5264 + C5265 - C5296 - C5297) * C13439) *
               C19130 +
           ((C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                C13438 +
            (C5284 * C665 + C5285 * C31559 - C9823 * C666 - C9824 * C31387) *
                C13439) *
               C19131) *
              C31283 * C559 +
          (((C9669 * C666 -
             ((C4585 * C130 + C31234 * C141) * C31559 +
              (C4585 * C120 + C31234 * C131) * C665) +
             C9670 * C31387) *
                C13438 +
            (C25139 * C666 - (C4989 * C31559 + C4988 * C665) +
             C25140 * C31387) *
                C13439) *
               C19130 +
           ((C9671 * C666 - (C9670 * C31559 + C9669 * C665) + C9672 * C31387) *
                C13438 +
            ((C4585 * C2027 + C31234 * C2028) * C666 -
             (C25140 * C31559 + C25139 * C665) +
             (C4585 * C2029 + C31234 * C2030) * C31387) *
                C13439) *
               C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C2133 +
             (C4585 * C127 + C31234 * C138) * C2129 - C9447 * C2134 -
             C9448 * C2130 + C9449 * C2135 + C9450 * C2131 - C9451 * C2136 -
             C9452 * C31603) *
                C13438 +
            (C6758 + C6759 - C6760 - C6761 + C6762 + C6763 - C6782 - C6783) *
                C13439) *
               C19130 +
           ((C9447 * C2133 + C9448 * C2129 - C9449 * C2134 - C9450 * C2130 +
             C9451 * C2135 + C9452 * C2131 - C10747 * C2136 - C10748 * C31603) *
                C13438 +
            (C5276 * C2133 + C5277 * C2129 - C5646 * C2134 - C5647 * C2130 +
             C6778 * C2135 + C6779 * C2131 - C11121 * C2136 - C11122 * C31603) *
                C13439) *
               C19131) *
              C31283 * C31544 +
          (((C9453 * C2134 -
             ((C4585 * C128 + C31234 * C139) * C2129 +
              (C4585 * C118 + C31234 * C125) * C2133) +
             C9454 * C2130 - C9455 * C2135 - C9456 * C2131 + C9457 * C2136 +
             C9458 * C31603) *
                C13438 +
            (C5280 * C2134 - (C4740 * C2129 + C4739 * C2133) + C5281 * C2130 -
             C6546 * C2135 - C6547 * C2131 + C10905 * C2136 + C10906 * C31603) *
                C13439) *
               C19130 +
           ((C9455 * C2134 - (C9454 * C2129 + C9453 * C2133) + C9456 * C2130 -
             C9457 * C2135 - C9458 * C2131 + C11013 * C2136 + C11014 * C31603) *
                C13438 +
            (C6546 * C2134 - (C5281 * C2129 + C5280 * C2133) + C6547 * C2130 -
             C10905 * C2135 - C10906 * C2131 +
             (C4585 * C10896 + C31234 * C10897) * C2136 +
             (C4585 * C10898 + C31234 * C10899) * C31603) *
                C13439) *
               C19131) *
              C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31624 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31612 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C258 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31612 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31624 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C259 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C31624 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31612 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C5276 * C116 + C5277 * C31300) * C13439) *
               C19131) *
              C31283 * C108 -
          (((C5281 * C31300 + C5280 * C116) * C13439 +
            (C9454 * C31300 + C9453 * C116) * C13438) *
               C19131 +
           ((C4758 + C4757) * C13439 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C13438) *
               C19130) *
              C31283 * C109 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C13438 +
            (C4763 + C4764) * C13439) *
               C19130 +
           ((C9459 * C116 + C9460 * C31300) * C13438 +
            (C5284 * C116 + C5285 * C31300) * C13439) *
               C19131) *
              C31283 * C110 -
          ((((C4585 * C829 + C31234 * C835) * C31300 +
             (C4585 * C820 + C31234 * C828) * C116) *
                C13439 +
            (C9670 * C31300 + C9669 * C116) * C13438) *
               C19131 +
           ((C4993 + C4992) * C13439 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C13438) *
               C19130) *
              C31283 * C111 +
          ((((C4585 * C121 + C31234 * C132) * C116 +
             (C4585 * C133 + C31234 * C142) * C31300) *
                C13438 +
            ((C4585 * C269 + C31234 * C288) * C116 +
             (C4585 * C287 + C31234 * C299) * C31300) *
                C13439) *
               C19130 +
           (((C4585 * C425 + C31234 * C443) * C116 +
             (C4585 * C444 + C31234 * C455) * C31300) *
                C13438 +
            ((C4585 * C821 + C31234 * C830) * C116 +
             (C4585 * C831 + C31234 * C836) * C31300) *
                C13439) *
               C19131) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C947 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C948 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C31621 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C948 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C947 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C31608 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C947 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C948 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C24847 + C24848) * C13439) *
               C19131) *
              C1015 -
          (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
           ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
              C1016 +
          ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
           ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) * C19131) *
              C1017 -
          (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
           ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
              C1018 +
          ((C5497 * C13438 + (C5496 + C5495) * C13439) * C19130 +
           ((C25710 + C25709) * C13438 +
            ((C4585 * C6045 + C31234 * C6046) * C116 +
             (C4585 * C6047 + C31234 * C6048) * C31300) *
                C13439) *
               C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
             C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
                C13438 +
            (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C13439) *
               C19130 +
           ((C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
             C9451 * C1674 + C9452 * C31590) *
                C13438 +
            (C5276 * C1672 + C5277 * C1669 - C5646 * C1673 - C5647 * C1670 +
             C6778 * C1674 + C6779 * C31590) *
                C13439) *
               C19131) *
              C31283 * C31621 +
          (((C9453 * C1673 -
             ((C4585 * C128 + C31234 * C139) * C1669 +
              (C4585 * C118 + C31234 * C125) * C1672) +
             C9454 * C1670 - C9455 * C1674 - C9456 * C31590) *
                C13438 +
            (C6530 - (C6531 + C6532) + C6533 - C6550 - C6551) * C13439) *
               C19130 +
           ((C9455 * C1673 - (C9454 * C1669 + C9453 * C1672) + C9456 * C1670 -
             C9457 * C1674 - C9458 * C31590) *
                C13438 +
            (C6546 * C1673 - (C5281 * C1669 + C5280 * C1672) + C6547 * C1670 -
             C10905 * C1674 - C10906 * C31590) *
                C13439) *
               C19131) *
              C31283 * C31608 +
          ((((C4585 * C119 + C31234 * C126) * C1672 +
             (C4585 * C129 + C31234 * C140) * C1669 - C9459 * C1673 -
             C9460 * C1670 + C9461 * C1674 + C9462 * C31590) *
                C13438 +
            (C4745 * C1672 + C4746 * C1669 - C5284 * C1673 - C5285 * C1670 +
             C9823 * C1674 + C9824 * C31590) *
                C13439) *
               C19130 +
           ((C9459 * C1672 + C9460 * C1669 - C9461 * C1673 - C9462 * C1670 +
             C9463 * C1674 + C9464 * C31590) *
                C13438 +
            (C5284 * C1672 + C5285 * C1669 - C9823 * C1673 - C9824 * C1670 +
             (C4585 * C2241 + C31234 * C2244) * C1674 +
             (C4585 * C2247 + C31234 * C2250) * C31590) *
                C13439) *
               C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
             C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
                C13438 +
            (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C13439) *
               C19130 +
           ((C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
             C9451 * C1674 + C9452 * C31590) *
                C13438 +
            (C26629 + C26630 - C26631 - C26632 + C26633 + C26634) * C13439) *
               C19131) *
              C31624 +
          (((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C13438 +
            (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C13439) *
               C19130 +
           ((C26631 - (C26630 + C26629) + C26632 - C26633 - C26634) * C13438 +
            (C26635 - (C26636 + C26637) + C26638 - C26639 - C26640) * C13439) *
               C19131) *
              C31612 +
          ((C6305 * C13438 +
            (C6297 + C6296 - C6295 - C6298 + C6299 + C6300) * C13439) *
               C19130 +
           ((C26637 + C26636 - C26635 - C26638 + C26639 + C26640) * C13438 +
            (C5651 * C1672 + C5652 * C1669 - C5653 * C1673 - C5654 * C1670 +
             (C4585 * C6753 + C31234 * C6754) * C1674 +
             (C4585 * C6755 + C31234 * C6756) * C31590) *
                C13439) *
               C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C3113 +
              (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
              C9448 * C31387) *
                 C13438 +
             (C7786 + C7787 - C7788 - C7789) * C13439) *
                C19130 +
            ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                 C13438 +
             (C28509 + C28510 - C28511 - C28512) * C13439) *
                C19131) *
               C31558 +
           (((C7788 - (C7787 + C7786) + C7789) * C13438 +
             (C7792 - (C7791 + C7790) + C7793) * C13439) *
                C19130 +
            ((C28511 - (C28510 + C28509) + C28512) * C13438 +
             (C28513 - (C28514 + C28515) + C28516) * C13439) *
                C19131) *
               C31345) *
              C31261 +
          ((((C9453 * C3114 -
              ((C4585 * C128 + C31234 * C139) * C3111 +
               (C4585 * C118 + C31234 * C125) * C3113) +
              C9454 * C31387) *
                 C13438 +
             (C7798 - (C7799 + C7800) + C7801) * C13439) *
                C19130 +
            ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) +
              C9456 * C31387) *
                 C13438 +
             (C28517 - (C28518 + C28519) + C28520) * C13439) *
                C19131) *
               C31558 +
           (((C7800 + C7799 - C7798 - C7801) * C13438 +
             (C7804 + C7803 - C7802 - C7805) * C13439) *
                C19130 +
            ((C28519 + C28518 - C28517 - C28520) * C13438 +
             (C28521 + C28522 - C28523 - C28524) * C13439) *
                C19131) *
               C31345) *
              C31269 +
          (((((C4585 * C119 + C31234 * C126) * C3113 +
              (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
              C9460 * C31387) *
                 C13438 +
             (C8060 + C8061 - C8062 - C8063) * C13439) *
                C19130 +
            ((C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                 C13438 +
             (C28849 + C28850 - C28851 - C28852) * C13439) *
                C19131) *
               C31558 +
           (((C8062 - (C8061 + C8060) + C8063) * C13438 +
             (C8066 - (C8065 + C8064) + C8067) * C13439) *
                C19130 +
            ((C28851 - (C28850 + C28849) + C28852) * C13438 +
             ((C4585 * C1163 + C31234 * C1178) * C3114 -
              (C5287 * C3111 + C5286 * C3113) +
              (C4585 * C1181 + C31234 * C1190) * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C30320 +
              (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
              C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                 C13438 +
             (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C13439) *
                C19130 +
            ((C9447 * C30320 + C9448 * C31383 - C9449 * C30312 -
              C9450 * C31390 + C9451 * C30326 + C9452 * C3625) *
                 C13438 +
             (C29193 + C29194 - C29195 - C29196 + C29197 + C29198) * C13439) *
                C19131) *
               C31558 +
           (((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C13438 +
             (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C13439) *
                C19130 +
            ((C29195 - (C29194 + C29193) + C29196 - C29197 - C29198) * C13438 +
             (C5649 * C30312 - (C5279 * C31383 + C5278 * C30320) +
              C5650 * C31390 - C6780 * C30326 - C6781 * C3625) *
                 C13439) *
                C19131) *
               C31345) *
              C2457 +
          ((((C9453 * C30312 -
              ((C4585 * C128 + C31234 * C139) * C31383 +
               (C4585 * C118 + C31234 * C125) * C30320) +
              C9454 * C31390 - C9455 * C30326 - C9456 * C3625) *
                 C13438 +
             (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C13439) *
                C19130 +
            ((C9455 * C30312 - (C9454 * C31383 + C9453 * C30320) +
              C9456 * C31390 - C9457 * C30326 - C9458 * C3625) *
                 C13438 +
             (C29199 - (C29200 + C29201) + C29202 - C29203 - C29204) * C13439) *
                C19131) *
               C31558 +
           (((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C13438 +
             (C8344 + C8343 - C8342 - C8345 + C8346 + C8347) * C13439) *
                C19130 +
            ((C29201 + C29200 - C29199 - C29202 + C29203 + C29204) * C13438 +
             (C5282 * C30320 + C5283 * C31383 - C6548 * C30312 -
              C6549 * C31390 + (C4585 * C6651 + C31234 * C6652) * C30326 +
              (C4585 * C6653 + C31234 * C6654) * C3625) *
                 C13439) *
                C19131) *
               C31345) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C3113 +
              (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
              C9448 * C31387) *
                 C13438 +
             (C7786 + C7787 - C7788 - C7789) * C13439) *
                C19130 +
            ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                 C13438 +
             (C28509 + C28510 - C28511 - C28512) * C13439) *
                C19131) *
               C31624 +
           (((C7788 - (C7787 + C7786) + C7789) * C13438 +
             (C7792 - (C7791 + C7790) + C7793) * C13439) *
                C19130 +
            ((C28511 - (C28510 + C28509) + C28512) * C13438 +
             (C28513 - (C28514 + C28515) + C28516) * C13439) *
                C19131) *
               C31612 +
           ((C7814 * C13438 + (C7796 + C7795 - C7794 - C7797) * C13439) *
                C19130 +
            ((C28515 + C28514 - C28513 - C28516) * C13438 +
             (C5651 * C3113 + C5652 * C3111 - C5653 * C3114 - C5654 * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C2457 +
          ((((C9453 * C3114 -
              ((C4585 * C128 + C31234 * C139) * C3111 +
               (C4585 * C118 + C31234 * C125) * C3113) +
              C9454 * C31387) *
                 C13438 +
             (C7798 - (C7799 + C7800) + C7801) * C13439) *
                C19130 +
            ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) +
              C9456 * C31387) *
                 C13438 +
             (C28517 - (C28518 + C28519) + C28520) * C13439) *
                C19131) *
               C31624 +
           (((C7800 + C7799 - C7798 - C7801) * C13438 +
             (C7804 + C7803 - C7802 - C7805) * C13439) *
                C19130 +
            ((C28519 + C28518 - C28517 - C28520) * C13438 +
             (C28521 + C28522 - C28523 - C28524) * C13439) *
                C19131) *
               C31612 +
           ((C7815 * C13438 + (C7808 - (C7807 + C7806) + C7809) * C13439) *
                C19130 +
            ((C28523 - (C28522 + C28521) + C28524) * C13438 +
             ((C4585 * C6525 + C31234 * C6526) * C3114 -
              (C5943 * C3111 + C5942 * C3113) +
              (C4585 * C6527 + C31234 * C6528) * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C13438 +
            (C7786 + C7787 - C7788 - C7789) * C13439) *
               C19130 +
           ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C13438 +
            (C5276 * C3113 + C5277 * C3111 - C5646 * C3114 - C5647 * C31387) *
                C13439) *
               C19131) *
              C31283 * C31630 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C13438 +
            (C7798 - (C7799 + C7800) + C7801) * C13439) *
               C19130 +
           ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C13438 +
            (C6546 * C3114 - (C5281 * C3111 + C5280 * C3113) + C6547 * C31387) *
                C13439) *
               C19131) *
              C31283 * C31623 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
             C9460 * C31387) *
                C13438 +
            (C8060 + C8061 - C8062 - C8063) * C13439) *
               C19130 +
           ((C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                C13438 +
            (C5284 * C3113 + C5285 * C3111 - C9823 * C3114 - C9824 * C31387) *
                C13439) *
               C19131) *
              C31283 * C31610 +
          (((C9669 * C3114 -
             ((C4585 * C130 + C31234 * C141) * C3111 +
              (C4585 * C120 + C31234 * C131) * C3113) +
             C9670 * C31387) *
                C13438 +
            (C25139 * C3114 - (C4989 * C3111 + C4988 * C3113) +
             C25140 * C31387) *
                C13439) *
               C19130 +
           ((C9671 * C3114 - (C9670 * C3111 + C9669 * C3113) + C9672 * C31387) *
                C13438 +
            ((C4585 * C2027 + C31234 * C2028) * C3114 -
             (C25140 * C3111 + C25139 * C3113) +
             (C4585 * C2029 + C31234 * C2030) * C31387) *
                C13439) *
               C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3363 +
             (C4585 * C127 + C31234 * C138) * C31632 - C9447 * C3364 -
             C9448 * C31629 + C9449 * C3365 + C9450 * C31620 - C9451 * C3366 -
             C9452 * C31603) *
                C13438 +
            (C8697 + C8698 - C8699 - C8700 + C8701 + C8702 - C8703 - C8704) *
                C13439) *
               C19130 +
           ((C9447 * C3363 + C9448 * C31632 - C9449 * C3364 - C9450 * C31629 +
             C9451 * C3365 + C9452 * C31620 - C10747 * C3366 -
             C10748 * C31603) *
                C13438 +
            (C5276 * C3363 + C5277 * C31632 - C5646 * C3364 - C5647 * C31629 +
             C6778 * C3365 + C6779 * C31620 - C11121 * C3366 -
             C11122 * C31603) *
                C13439) *
               C19131) *
              C31283 * C2457 +
          (((C9453 * C3364 -
             ((C4585 * C128 + C31234 * C139) * C31632 +
              (C4585 * C118 + C31234 * C125) * C3363) +
             C9454 * C31629 - C9455 * C3365 - C9456 * C31620 + C9457 * C3366 +
             C9458 * C31603) *
                C13438 +
            (C5280 * C3364 - (C4740 * C31632 + C4739 * C3363) + C5281 * C31629 -
             C6546 * C3365 - C6547 * C31620 + C10905 * C3366 +
             C10906 * C31603) *
                C13439) *
               C19130 +
           ((C9455 * C3364 - (C9454 * C31632 + C9453 * C3363) + C9456 * C31629 -
             C9457 * C3365 - C9458 * C31620 + C11013 * C3366 +
             C11014 * C31603) *
                C13438 +
            (C6546 * C3364 - (C5281 * C31632 + C5280 * C3363) + C6547 * C31629 -
             C10905 * C3365 - C10906 * C31620 +
             (C4585 * C10896 + C31234 * C10897) * C3366 +
             (C4585 * C10898 + C31234 * C10899) * C31603) *
                C13439) *
               C19131) *
              C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
             C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                C13438 +
            (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C13439) *
               C19130 +
           ((C9447 * C30320 + C9448 * C31383 - C9449 * C30312 - C9450 * C31390 +
             C9451 * C30326 + C9452 * C3625) *
                C13438 +
            (C5276 * C30320 + C5277 * C31383 - C5646 * C30312 - C5647 * C31390 +
             C6778 * C30326 + C6779 * C3625) *
                C13439) *
               C19131) *
              C31283 * C31261 +
          (((C9453 * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             C9454 * C31390 - C9455 * C30326 - C9456 * C3625) *
                C13438 +
            (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C13439) *
               C19130 +
           ((C9455 * C30312 - (C9454 * C31383 + C9453 * C30320) +
             C9456 * C31390 - C9457 * C30326 - C9458 * C3625) *
                C13438 +
            (C6546 * C30312 - (C5281 * C31383 + C5280 * C30320) +
             C6547 * C31390 - C10905 * C30326 - C10906 * C3625) *
                C13439) *
               C19131) *
              C31283 * C31269 +
          ((((C4585 * C119 + C31234 * C126) * C30320 +
             (C4585 * C129 + C31234 * C140) * C31383 - C9459 * C30312 -
             C9460 * C31390 + C9461 * C30326 + C9462 * C3625) *
                C13438 +
            (C4745 * C30320 + C4746 * C31383 - C5284 * C30312 - C5285 * C31390 +
             C9823 * C30326 + C9824 * C3625) *
                C13439) *
               C19130 +
           ((C9459 * C30320 + C9460 * C31383 - C9461 * C30312 - C9462 * C31390 +
             C9463 * C30326 + C9464 * C3625) *
                C13438 +
            (C5284 * C30320 + C5285 * C31383 - C9823 * C30312 - C9824 * C31390 +
             (C4585 * C2241 + C31234 * C2244) * C30326 +
             (C4585 * C2247 + C31234 * C2250) * C3625) *
                C13439) *
               C19131) *
              C31283 * C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C13438 +
            (C7786 + C7787 - C7788 - C7789) * C13439) *
               C19130 +
           ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C13438 +
            (C5276 * C3113 + C5277 * C3111 - C5646 * C3114 - C5647 * C31387) *
                C13439) *
               C19131) *
              C31283 * C31630 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C13438 +
            (C7798 - (C7799 + C7800) + C7801) * C13439) *
               C19130 +
           ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C13438 +
            (C6546 * C3114 - (C5281 * C3111 + C5280 * C3113) + C6547 * C31387) *
                C13439) *
               C19131) *
              C31283 * C31623 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
             C9460 * C31387) *
                C13438 +
            (C8060 + C8061 - C8062 - C8063) * C13439) *
               C19130 +
           ((C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                C13438 +
            (C5284 * C3113 + C5285 * C3111 - C9823 * C3114 - C9824 * C31387) *
                C13439) *
               C19131) *
              C31283 * C31610 +
          (((C9669 * C3114 -
             ((C4585 * C130 + C31234 * C141) * C3111 +
              (C4585 * C120 + C31234 * C131) * C3113) +
             C9670 * C31387) *
                C13438 +
            (C25139 * C3114 - (C4989 * C3111 + C4988 * C3113) +
             C25140 * C31387) *
                C13439) *
               C19130 +
           ((C9671 * C3114 - (C9670 * C3111 + C9669 * C3113) + C9672 * C31387) *
                C13438 +
            ((C4585 * C2027 + C31234 * C2028) * C3114 -
             (C25140 * C3111 + C25139 * C3113) +
             (C4585 * C2029 + C31234 * C2030) * C31387) *
                C13439) *
               C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C3113 +
              (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
              C9448 * C31387) *
                 C13438 +
             (C7786 + C7787 - C7788 - C7789) * C13439) *
                C19130 +
            ((C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                 C13438 +
             (C28509 + C28510 - C28511 - C28512) * C13439) *
                C19131) *
               C31624 +
           (((C7788 - (C7787 + C7786) + C7789) * C13438 +
             (C7792 - (C7791 + C7790) + C7793) * C13439) *
                C19130 +
            ((C28511 - (C28510 + C28509) + C28512) * C13438 +
             (C28513 - (C28514 + C28515) + C28516) * C13439) *
                C19131) *
               C31612 +
           ((C7814 * C13438 + (C7796 + C7795 - C7794 - C7797) * C13439) *
                C19130 +
            ((C28515 + C28514 - C28513 - C28516) * C13438 +
             (C5651 * C3113 + C5652 * C3111 - C5653 * C3114 - C5654 * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C2457 +
          ((((C9453 * C3114 -
              ((C4585 * C128 + C31234 * C139) * C3111 +
               (C4585 * C118 + C31234 * C125) * C3113) +
              C9454 * C31387) *
                 C13438 +
             (C7798 - (C7799 + C7800) + C7801) * C13439) *
                C19130 +
            ((C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) +
              C9456 * C31387) *
                 C13438 +
             (C28517 - (C28518 + C28519) + C28520) * C13439) *
                C19131) *
               C31624 +
           (((C7800 + C7799 - C7798 - C7801) * C13438 +
             (C7804 + C7803 - C7802 - C7805) * C13439) *
                C19130 +
            ((C28519 + C28518 - C28517 - C28520) * C13438 +
             (C28521 + C28522 - C28523 - C28524) * C13439) *
                C19131) *
               C31612 +
           ((C7815 * C13438 + (C7808 - (C7807 + C7806) + C7809) * C13439) *
                C19130 +
            ((C28523 - (C28522 + C28521) + C28524) * C13438 +
             ((C4585 * C6525 + C31234 * C6526) * C3114 -
              (C5943 * C3111 + C5942 * C3113) +
              (C4585 * C6527 + C31234 * C6528) * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31558 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31345) *
              C557 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31345 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31558) *
              C558 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C31558 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31345) *
              C559 +
          ((((C4992 + C4993) * C13438 + (C4994 + C4995) * C13439) * C19130 +
            ((C25141 + C25142) * C13438 +
             ((C4585 * C1445 + C31234 * C1446) * C116 +
              (C4585 * C1447 + C31234 * C1448) * C31300) *
                 C13439) *
                C19131) *
               C31345 -
           (((C25142 + C25141) * C13439 +
             (C9670 * C31300 + C9669 * C116) * C13438) *
                C19131 +
            ((C4993 + C4992) * C13439 +
             ((C4585 * C130 + C31234 * C141) * C31300 +
              (C4585 * C120 + C31234 * C131) * C116) *
                 C13438) *
                C19130) *
               C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C1289 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C1290 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) *
                C19131) *
               C1291 -
           (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
            ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
               C31597) *
              C31544 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C1290 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C1289 -
           (((C25999 + C26000) * C13439 + (C24854 + C24853) * C13438) * C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C1291 +
           ((C5769 * C13438 + (C5777 + C5776) * C13439) * C19130 +
            ((C26000 + C25999) * C13438 +
             ((C4585 * C5923 + C31234 * C5924) * C116 +
              (C4585 * C5925 + C31234 * C5926) * C31300) *
                 C13439) *
                C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C665 +
              (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
              C9448 * C31387) *
                 C13438 +
             (C5240 + C5241 - C5288 - C5289) * C13439) *
                C19130 +
            ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                 C13438 +
             (C25467 + C25468 - C25469 - C25470) * C13439) *
                C19131) *
               C31558 +
           (((C5288 - (C5241 + C5240) + C5289) * C13438 +
             (C5290 - (C5247 + C5246) + C5291) * C13439) *
                C19130 +
            ((C25469 - (C25468 + C25467) + C25470) * C13438 +
             (C5649 * C666 - (C5279 * C31559 + C5278 * C665) + C5650 * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C258 +
          ((((C9453 * C666 -
              ((C4585 * C128 + C31234 * C139) * C31559 +
               (C4585 * C118 + C31234 * C125) * C665) +
              C9454 * C31387) *
                 C13438 +
             (C5292 - (C5254 + C5255) + C5293) * C13439) *
                C19130 +
            ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                 C13438 +
             (C25471 - (C25472 + C25473) + C25474) * C13439) *
                C19131) *
               C31558 +
           (((C5255 + C5254 - C5292 - C5293) * C13438 +
             (C5261 + C5260 - C5294 - C5295) * C13439) *
                C19130 +
            ((C25473 + C25472 - C25471 - C25474) * C13438 +
             (C5282 * C665 + C5283 * C31559 - C6548 * C666 - C6549 * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C259 +
          (((((C4585 * C119 + C31234 * C126) * C665 +
              (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
              C9460 * C31387) *
                 C13438 +
             (C5264 + C5265 - C5296 - C5297) * C13439) *
                C19130 +
            ((C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                 C13438 +
             (C25475 + C25476 - C25477 - C25478) * C13439) *
                C19131) *
               C31558 +
           (((C5296 - (C5265 + C5264) + C5297) * C13438 +
             (C5298 - (C5271 + C5270) + C5299) * C13439) *
                C19130 +
            ((C25477 - (C25476 + C25475) + C25478) * C13438 +
             ((C4585 * C1163 + C31234 * C1178) * C666 -
              (C5287 * C31559 + C5286 * C665) +
              (C4585 * C1181 + C31234 * C1190) * C31387) *
                 C13439) *
                C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C13438 +
            (C5240 + C5241 - C5288 - C5289) * C13439) *
               C19130 +
           ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C13438 +
            (C25467 + C25468 - C25469 - C25470) * C13439) *
               C19131) *
              C1289 +
          (((C5288 - (C5241 + C5240) + C5289) * C13438 +
            (C5290 - (C5247 + C5246) + C5291) * C13439) *
               C19130 +
           ((C25469 - (C25468 + C25467) + C25470) * C13438 +
            (C26195 - (C26196 + C26197) + C26198) * C13439) *
               C19131) *
              C1290 +
          ((C5944 * C13438 + (C5931 + C5930 - C5929 - C5932) * C13439) *
               C19130 +
           ((C26197 + C26196 - C26195 - C26198) * C13438 +
            (C26333 + C26334 - C26335 - C26336) * C13439) *
               C19131) *
              C1291 +
          ((C6060 * C13438 + (C6061 - (C6052 + C6051) + C6062) * C13439) *
               C19130 +
           ((C26335 - (C26334 + C26333) + C26336) * C13438 +
            ((C4585 * C5609 + C31234 * C5614) * C666 -
             (C6059 * C31559 + C6058 * C665) +
             (C4585 * C5615 + C31234 * C5618) * C31387) *
                C13439) *
               C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31624 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31612 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C258 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31612 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31624 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C259 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C31624 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31612 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C5276 * C116 + C5277 * C31300) * C13439) *
               C19131) *
              C31283 * C108 -
          (((C5281 * C31300 + C5280 * C116) * C13439 +
            (C9454 * C31300 + C9453 * C116) * C13438) *
               C19131 +
           ((C4758 + C4757) * C13439 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C13438) *
               C19130) *
              C31283 * C109 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C13438 +
            (C4763 + C4764) * C13439) *
               C19130 +
           ((C9459 * C116 + C9460 * C31300) * C13438 +
            (C5284 * C116 + C5285 * C31300) * C13439) *
               C19131) *
              C31283 * C110 -
          ((((C4585 * C829 + C31234 * C835) * C31300 +
             (C4585 * C820 + C31234 * C828) * C116) *
                C13439 +
            (C9670 * C31300 + C9669 * C116) * C13438) *
               C19131 +
           ((C4993 + C4992) * C13439 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C13438) *
               C19130) *
              C31283 * C111 +
          ((((C4585 * C121 + C31234 * C132) * C116 +
             (C4585 * C133 + C31234 * C142) * C31300) *
                C13438 +
            ((C4585 * C269 + C31234 * C288) * C116 +
             (C4585 * C287 + C31234 * C299) * C31300) *
                C13439) *
               C19130 +
           (((C4585 * C425 + C31234 * C443) * C116 +
             (C4585 * C444 + C31234 * C455) * C31300) *
                C13438 +
            ((C4585 * C821 + C31234 * C830) * C116 +
             (C4585 * C831 + C31234 * C836) * C31300) *
                C13439) *
               C19131) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
             C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
                C13438 +
            (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C13439) *
               C19130 +
           ((C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
             C9451 * C416 + C9452 * C31590) *
                C13438 +
            (C5276 * C414 + C5277 * C31625 - C5646 * C415 - C5647 * C31614 +
             C6778 * C416 + C6779 * C31590) *
                C13439) *
               C19131) *
              C31283 * C258 +
          (((C9453 * C415 -
             ((C4585 * C128 + C31234 * C139) * C31625 +
              (C4585 * C118 + C31234 * C125) * C414) +
             C9454 * C31614 - C9455 * C416 - C9456 * C31590) *
                C13438 +
            (C7128 - (C7129 + C7130) + C7131 - C7132 - C7133) * C13439) *
               C19130 +
           ((C9455 * C415 - (C9454 * C31625 + C9453 * C414) + C9456 * C31614 -
             C9457 * C416 - C9458 * C31590) *
                C13438 +
            (C6546 * C415 - (C5281 * C31625 + C5280 * C414) + C6547 * C31614 -
             C10905 * C416 - C10906 * C31590) *
                C13439) *
               C19131) *
              C31283 * C259 +
          ((((C4585 * C119 + C31234 * C126) * C414 +
             (C4585 * C129 + C31234 * C140) * C31625 - C9459 * C415 -
             C9460 * C31614 + C9461 * C416 + C9462 * C31590) *
                C13438 +
            (C4745 * C414 + C4746 * C31625 - C5284 * C415 - C5285 * C31614 +
             C9823 * C416 + C9824 * C31590) *
                C13439) *
               C19130 +
           ((C9459 * C414 + C9460 * C31625 - C9461 * C415 - C9462 * C31614 +
             C9463 * C416 + C9464 * C31590) *
                C13438 +
            (C5284 * C414 + C5285 * C31625 - C9823 * C415 - C9824 * C31614 +
             (C4585 * C2241 + C31234 * C2244) * C416 +
             (C4585 * C2247 + C31234 * C2250) * C31590) *
                C13439) *
               C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C947 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C948 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C31621 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C948 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C947 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C31608 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C947 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C948 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C24847 + C24848) * C13439) *
               C19131) *
              C1015 -
          (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
           ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
              C1016 +
          ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
           ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) * C19131) *
              C1017 -
          (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
           ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
              C1018 +
          ((C5497 * C13438 + (C5496 + C5495) * C13439) * C19130 +
           ((C25710 + C25709) * C13438 +
            ((C4585 * C6045 + C31234 * C6046) * C116 +
             (C4585 * C6047 + C31234 * C6048) * C31300) *
                C13439) *
               C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
             C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
                C13438 +
            (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C13439) *
               C19130 +
           ((C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
             C9451 * C416 + C9452 * C31590) *
                C13438 +
            (C25857 + C25858 - C25859 - C25860 + C25861 + C25862) * C13439) *
               C19131) *
              C947 +
          (((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C13438 +
            (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C13439) *
               C19130 +
           ((C25859 - (C25858 + C25857) + C25860 - C25861 - C25862) * C13438 +
            (C25863 - (C25864 + C25865) + C25866 - C25867 - C25868) * C13439) *
               C19131) *
              C948 +
          ((C5666 * C13438 +
            (C5639 + C5638 - C5660 - C5661 + C5662 + C5663) * C13439) *
               C19130 +
           ((C25865 + C25864 - C25863 - C25866 + C25867 + C25868) * C13438 +
            (C5651 * C414 + C5652 * C31625 - C5653 * C415 - C5654 * C31614 +
             (C4585 * C6753 + C31234 * C6754) * C416 +
             (C4585 * C6755 + C31234 * C6756) * C31590) *
                C13439) *
               C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C13438 +
            (C5240 + C5241 - C5288 - C5289) * C13439) *
               C19130 +
           ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C13438 +
            (C5276 * C665 + C5277 * C31559 - C5646 * C666 - C5647 * C31387) *
                C13439) *
               C19131) *
              C31283 * C557 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C13438 +
            (C5292 - (C5254 + C5255) + C5293) * C13439) *
               C19130 +
           ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C13438 +
            (C6546 * C666 - (C5281 * C31559 + C5280 * C665) + C6547 * C31387) *
                C13439) *
               C19131) *
              C31283 * C558 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
             C9460 * C31387) *
                C13438 +
            (C5264 + C5265 - C5296 - C5297) * C13439) *
               C19130 +
           ((C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                C13438 +
            (C5284 * C665 + C5285 * C31559 - C9823 * C666 - C9824 * C31387) *
                C13439) *
               C19131) *
              C31283 * C559 +
          (((C9669 * C666 -
             ((C4585 * C130 + C31234 * C141) * C31559 +
              (C4585 * C120 + C31234 * C131) * C665) +
             C9670 * C31387) *
                C13438 +
            (C25139 * C666 - (C4989 * C31559 + C4988 * C665) +
             C25140 * C31387) *
                C13439) *
               C19130 +
           ((C9671 * C666 - (C9670 * C31559 + C9669 * C665) + C9672 * C31387) *
                C13438 +
            ((C4585 * C2027 + C31234 * C2028) * C666 -
             (C25140 * C31559 + C25139 * C665) +
             (C4585 * C2029 + C31234 * C2030) * C31387) *
                C13439) *
               C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C665 +
              (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
              C9448 * C31387) *
                 C13438 +
             (C5240 + C5241 - C5288 - C5289) * C13439) *
                C19130 +
            ((C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                 C13438 +
             (C25467 + C25468 - C25469 - C25470) * C13439) *
                C19131) *
               C947 +
           (((C5288 - (C5241 + C5240) + C5289) * C13438 +
             (C5290 - (C5247 + C5246) + C5291) * C13439) *
                C19130 +
            ((C25469 - (C25468 + C25467) + C25470) * C13438 +
             (C26195 - (C26196 + C26197) + C26198) * C13439) *
                C19131) *
               C948 +
           ((C5944 * C13438 + (C5931 + C5930 - C5929 - C5932) * C13439) *
                C19130 +
            ((C26197 + C26196 - C26195 - C26198) * C13438 +
             (C5651 * C665 + C5652 * C31559 - C5653 * C666 - C5654 * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C31544 +
          ((((C9453 * C666 -
              ((C4585 * C128 + C31234 * C139) * C31559 +
               (C4585 * C118 + C31234 * C125) * C665) +
              C9454 * C31387) *
                 C13438 +
             (C5292 - (C5254 + C5255) + C5293) * C13439) *
                C19130 +
            ((C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                 C13438 +
             (C25471 - (C25472 + C25473) + C25474) * C13439) *
                C19131) *
               C947 +
           (((C5255 + C5254 - C5292 - C5293) * C13438 +
             (C5261 + C5260 - C5294 - C5295) * C13439) *
                C19130 +
            ((C25473 + C25472 - C25471 - C25474) * C13438 +
             (C26199 + C26200 - C26201 - C26202) * C13439) *
                C19131) *
               C948 +
           ((C5945 * C13438 + (C5946 - (C5935 + C5934) + C5947) * C13439) *
                C19130 +
            ((C26201 - (C26200 + C26199) + C26202) * C13438 +
             ((C4585 * C6525 + C31234 * C6526) * C666 -
              (C5943 * C31559 + C5942 * C665) +
              (C4585 * C6527 + C31234 * C6528) * C31387) *
                 C13439) *
                C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C5276 * C116 + C5277 * C31300) * C13439) *
               C19131) *
              C31283 * C108 -
          (((C5281 * C31300 + C5280 * C116) * C13439 +
            (C9454 * C31300 + C9453 * C116) * C13438) *
               C19131 +
           ((C4758 + C4757) * C13439 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C13438) *
               C19130) *
              C31283 * C109 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C13438 +
            (C4763 + C4764) * C13439) *
               C19130 +
           ((C9459 * C116 + C9460 * C31300) * C13438 +
            (C5284 * C116 + C5285 * C31300) * C13439) *
               C19131) *
              C31283 * C110 -
          ((((C4585 * C829 + C31234 * C835) * C31300 +
             (C4585 * C820 + C31234 * C828) * C116) *
                C13439 +
            (C9670 * C31300 + C9669 * C116) * C13438) *
               C19131 +
           ((C4993 + C4992) * C13439 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C13438) *
               C19130) *
              C31283 * C111 +
          ((((C4585 * C121 + C31234 * C132) * C116 +
             (C4585 * C133 + C31234 * C142) * C31300) *
                C13438 +
            ((C4585 * C269 + C31234 * C288) * C116 +
             (C4585 * C287 + C31234 * C299) * C31300) *
                C13439) *
               C19130 +
           (((C4585 * C425 + C31234 * C443) * C116 +
             (C4585 * C444 + C31234 * C455) * C31300) *
                C13438 +
            ((C4585 * C821 + C31234 * C830) * C116 +
             (C4585 * C831 + C31234 * C836) * C31300) *
                C13439) *
               C19131) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C31624 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C31612 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C258 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C31612 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C31624 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C259 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C31624 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C31612 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4585 * C117 + C31234 * C124) * C116 +
              (C4585 * C127 + C31234 * C138) * C31300) *
                 C13438 +
             (C4751 + C4752) * C13439) *
                C19130 +
            ((C9447 * C116 + C9448 * C31300) * C13438 +
             (C24847 + C24848) * C13439) *
                C19131) *
               C947 -
           (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
            ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
               C948 +
           ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
            ((C24850 + C24849) * C13438 +
             (C5651 * C116 + C5652 * C31300) * C13439) *
                C19131) *
               C31587) *
              C31621 +
          ((((C4757 + C4758) * C13438 + (C4759 + C4760) * C13439) * C19130 +
            ((C24851 + C24852) * C13438 + (C24853 + C24854) * C13439) *
                C19131) *
               C948 -
           (((C24852 + C24851) * C13439 +
             (C9454 * C31300 + C9453 * C116) * C13438) *
                C19131 +
            ((C4758 + C4757) * C13439 +
             ((C4585 * C128 + C31234 * C139) * C31300 +
              (C4585 * C118 + C31234 * C125) * C116) *
                 C13438) *
                C19130) *
               C947 -
           (((C5943 * C31300 + C5942 * C116) * C13439 +
             (C24854 + C24853) * C13438) *
                C19131 +
            ((C4762 + C4761) * C13439 + C4770 * C13438) * C19130) *
               C31587) *
              C31608 +
          (((((C4585 * C119 + C31234 * C126) * C116 +
              (C4585 * C129 + C31234 * C140) * C31300) *
                 C13438 +
             (C4763 + C4764) * C13439) *
                C19130 +
            ((C9459 * C116 + C9460 * C31300) * C13438 +
             (C24855 + C24856) * C13439) *
                C19131) *
               C947 -
           (((C24857 + C24858) * C13439 + (C24856 + C24855) * C13438) * C19131 +
            ((C4766 + C4765) * C13439 + (C4764 + C4763) * C13438) * C19130) *
               C948 +
           ((C4771 * C13438 + (C4768 + C4767) * C13439) * C19130 +
            ((C24858 + C24857) * C13438 +
             ((C4585 * C1549 + C31234 * C1552) * C116 +
              (C4585 * C1555 + C31234 * C1558) * C31300) *
                 C13439) *
                C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C13438 +
            (C4751 + C4752) * C13439) *
               C19130 +
           ((C9447 * C116 + C9448 * C31300) * C13438 +
            (C24847 + C24848) * C13439) *
               C19131) *
              C1015 -
          (((C24849 + C24850) * C13439 + (C24848 + C24847) * C13438) * C19131 +
           ((C4754 + C4753) * C13439 + (C4752 + C4751) * C13438) * C19130) *
              C1016 +
          ((C4769 * C13438 + (C4756 + C4755) * C13439) * C19130 +
           ((C24850 + C24849) * C13438 + (C25707 + C25708) * C13439) * C19131) *
              C1017 -
          (((C25709 + C25710) * C13439 + (C25708 + C25707) * C13438) * C19131 +
           ((C5494 + C5493) * C13439 + C5480 * C13438) * C19130) *
              C1018 +
          ((C5497 * C13438 + (C5496 + C5495) * C13439) * C19130 +
           ((C25710 + C25709) * C13438 +
            ((C4585 * C6045 + C31234 * C6046) * C116 +
             (C4585 * C6047 + C31234 * C6048) * C31300) *
                C13439) *
               C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31341 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31348 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C2717) *
              C31261 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31348 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31341 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C2717) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31341 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31348 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C2717) *
              C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31341 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31348 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C2717) *
              C31261 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31348 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31341 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C2717) *
              C31269 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31341 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31348 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C2717) *
              C2720)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C31341 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31348 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C2717) *
              C31261 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31348 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31341 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C2717) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C31341 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31348 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C2717) *
              C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C31341 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
               C31480 * C31348 +
           (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
            (C6051 + C6052 - C6061 - C6062) * C4584) *
               C31480 * C2717) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C31341 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C31348 +
           (C5945 * C4582 + (C5946 - (C5935 + C5934) + C5947) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C666 -
             (C5774 * C31559 + C5775 * C665) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C665 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31559 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C666 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C2717) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C666 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31559 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C665) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
                C31468 * C9189) *
               C31341 +
           ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
            (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
                C31468 * C9189) *
               C31348 +
           (C5944 * C31468 * C9187 +
            (C5278 * C665 + C5279 * C31559 - C5649 * C666 - C5650 * C31387) *
                C31468 * C9188 +
            (C5649 * C665 + C5650 * C31559 - C6780 * C666 - C6781 * C31387) *
                C31468 * C9189) *
               C2717) *
              C2457 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
                C31468 * C9189) *
               C31341 +
           ((C5255 + C5254 - C5292 - C5293) * C31468 * C9187 +
            (C5280 * C665 + C5281 * C31559 - C6546 * C666 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C665 + C6547 * C31559 - C10905 * C666 - C10906 * C31387) *
                C31468 * C9189) *
               C31348 +
           (C5945 * C31468 * C9187 +
            (C6548 * C666 - (C5283 * C31559 + C5282 * C665) + C6549 * C31387) *
                C31468 * C9188 +
            ((C4585 * C6651 + C31234 * C6652) * C666 -
             (C6549 * C31559 + C6548 * C665) +
             (C4585 * C6653 + C31234 * C6654) * C31387) *
                C31468 * C9189) *
               C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C2349 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C31345) *
                  C31630 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C31345 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C2349) *
                  C31623 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31300) *
                   C31468 * C31480 * C2349 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31300 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31468 * C31480 * C31345) *
                  C31610 +
              (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
                 C115 * C561 + C103 * C562) *
                    C116 +
                (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
                 C115 * C563 + C103 * C564) *
                    C31300) *
                   C31468 * C31480 * C31345 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31300 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31468 * C31480 * C2349) *
                  C31591) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C31631 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C31627 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31300) *
                   C31468 * C31480 * C31617 -
               ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
                 C113 * C1029 + C101 * C1041) *
                    C31300 +
                (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
                 C113 * C1023 + C101 * C1032) *
                    C116) *
                   C31468 * C31480 * C31597) *
                  C2457 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C31627 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C31631 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31300 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31468 * C31480 * C31617 +
               ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
                 C115 * C1295 + C103 * C1296) *
                    C116 +
                (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
                 C115 * C1297 + C103 * C1298) *
                    C31300) *
                   C31468 * C31480 * C31597) *
                  C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C414 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31625 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C415 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31614 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C416 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C31590) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C415 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31625 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C414) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31614 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C416 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C31590) *
               C31468 * C31480 * C31345) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C415 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31625 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C414) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31614 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C416 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C31590) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C414 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31625 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C415 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31614 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C416 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C31590) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C2349 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C31630 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C2349) *
              C31623 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C2349 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C31610 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31631 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31627 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C31617 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C2457 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31627 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31631 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31617 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 -
             (C4585 * C419 + C31234 * C429) * C415 -
             (C4585 * C432 + C31234 * C449) * C31614 +
             (C4585 * C420 + C31234 * C433) * C416 +
             (C4585 * C436 + C31234 * C450) * C31590) *
                C4582 +
            (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C4583 +
            C5666 * C4584) *
               C31480 * C2349 +
           ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C4582 +
            (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C4583 +
            (C5660 - (C5638 + C5639) + C5661 - C5662 - C5663) * C4584) *
               C31480 * C31345) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C415 -
             ((C4585 * C128 + C31234 * C139) * C31625 +
              (C4585 * C118 + C31234 * C125) * C414) +
             (C4585 * C431 + C31234 * C448) * C31614 -
             (C4585 * C421 + C31234 * C434) * C416 -
             (C4585 * C437 + C31234 * C451) * C31590) *
                C4582 +
            (C7128 - (C7129 + C7130) + C7131 - C7132 - C7133) * C4583 +
            (C7134 - (C7135 + C7136) + C7137 - C7138 - C7139) * C4584) *
               C31480 * C2349 +
           ((C7130 + C7129 - C7128 - C7131 + C7132 + C7133) * C4582 +
            (C7136 + C7135 - C7134 - C7137 + C7138 + C7139) * C4583 +
            (C4743 * C414 + C4744 * C31625 - C5942 * C415 - C5943 * C31614 +
             (C4585 * C6525 + C31234 * C6526) * C416 +
             (C4585 * C6527 + C31234 * C6528) * C31590) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C2349 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31345) *
              C31630 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31345 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C2349) *
              C31623 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C2349 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31345) *
              C31610 +
          (((C4992 + C4993) * C31468 * C9187 +
            ((C4585 * C820 + C31234 * C828) * C116 +
             (C4585 * C829 + C31234 * C835) * C31300) *
                C31468 * C9188 +
            ((C4585 * C2027 + C31234 * C2028) * C116 +
             (C4585 * C2029 + C31234 * C2030) * C31300) *
                C31468 * C9189) *
               C31345 -
           ((C9672 * C31300 + C9671 * C116) * C31468 * C9189 +
            (C9670 * C31300 + C9669 * C116) * C31468 * C9188 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C31468 * C9187) *
               C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C31631 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31627 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31617 -
           ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
            (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
            C5480 * C31468 * C9187) *
               C31597) *
              C2457 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31627 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31631 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31617 +
           (C5769 * C31468 * C9187 +
            (C5942 * C116 + C5943 * C31300) * C31468 * C9188 +
            ((C4585 * C6525 + C31234 * C6526) * C116 +
             (C4585 * C6527 + C31234 * C6528) * C31300) *
                C31468 * C9189) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
             C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
                C31468 * C9187 +
            (C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
             C9451 * C416 + C9452 * C31590) *
                C31468 * C9188 +
            (C9449 * C414 + C9450 * C31625 - C9451 * C415 - C9452 * C31614 +
             C10747 * C416 + C10748 * C31590) *
                C31468 * C9189) *
               C2349 +
           ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C31468 * C9187 +
            (C5646 * C415 - (C5277 * C31625 + C5276 * C414) + C5647 * C31614 -
             C6778 * C416 - C6779 * C31590) *
                C31468 * C9188 +
            (C6778 * C415 - (C5647 * C31625 + C5646 * C414) + C6779 * C31614 -
             C11121 * C416 - C11122 * C31590) *
                C31468 * C9189) *
               C31345) *
              C2457 +
          (((C9453 * C415 -
             ((C4585 * C128 + C31234 * C139) * C31625 +
              (C4585 * C118 + C31234 * C125) * C414) +
             C9454 * C31614 - C9455 * C416 - C9456 * C31590) *
                C31468 * C9187 +
            (C9455 * C415 - (C9454 * C31625 + C9453 * C414) + C9456 * C31614 -
             C9457 * C416 - C9458 * C31590) *
                C31468 * C9188 +
            (C9457 * C415 - (C9456 * C31625 + C9455 * C414) + C9458 * C31614 -
             C11013 * C416 - C11014 * C31590) *
                C31468 * C9189) *
               C2349 +
           ((C7130 + C7129 - C7128 - C7131 + C7132 + C7133) * C31468 * C9187 +
            (C5280 * C414 + C5281 * C31625 - C6546 * C415 - C6547 * C31614 +
             C10905 * C416 + C10906 * C31590) *
                C31468 * C9188 +
            (C6546 * C414 + C6547 * C31625 - C10905 * C415 - C10906 * C31614 +
             (C4585 * C10896 + C31234 * C10897) * C416 +
             (C4585 * C10898 + C31234 * C10899) * C31590) *
                C31468 * C9189) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C2349 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
               C31480 * C31345) *
              C31261 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C2349 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C31345) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 -
             (C4585 * C417 + C31234 * C427) * C666 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C5264 + C5265 - C5296 - C5297) * C4583 +
            (C5270 + C5271 - C5298 - C5299) * C4584) *
               C31480 * C2349 +
           ((C5296 - (C5265 + C5264) + C5297) * C4582 +
            (C5298 - (C5271 + C5270) + C5299) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C666 -
             (C4749 * C31559 + C4750 * C665) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31261 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31269 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C665 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31559 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C666 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C666 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31559 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C665) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
            (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31261 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C5255 + C5254 - C5292 - C5293) * C31468 * C9187 +
            (C5280 * C665 + C5281 * C31559 - C6546 * C666 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C665 + C6547 * C31559 - C10905 * C666 - C10906 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
             C9460 * C31387) *
                C31468 * C9187 +
            (C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                C31468 * C9188 +
            (C9461 * C665 + C9462 * C31559 - C9463 * C666 - C9464 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C5296 - (C5265 + C5264) + C5297) * C31468 * C9187 +
            (C9823 * C666 - (C5285 * C31559 + C5284 * C665) + C9824 * C31387) *
                C31468 * C9188 +
            ((C4585 * C2241 + C31234 * C2244) * C666 -
             (C9824 * C31559 + C9823 * C665) +
             (C4585 * C2247 + C31234 * C2250) * C31387) *
                C31468 * C9189) *
               C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31631 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31627 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31617 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31300 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C116) *
               C31468 * C31480 * C31597) *
              C2457 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31627 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31631 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31617 +
           ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
             C115 * C1295 + C103 * C1296) *
                C116 +
            (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
             C115 * C1297 + C103 * C1298) *
                C31300) *
               C31468 * C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C2349 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31345) *
              C31630 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C2349) *
              C31623 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C2349 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31345) *
              C31610 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C561 + C103 * C562) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C563 + C103 * C564) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31300 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31468 * C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C2349 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C31630 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C2349) *
              C31623 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C2349 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C31610 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31631 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31627 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C31617 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C2457 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31627 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31631 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31617 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C2349 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31345) *
              C31630 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31345 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C2349) *
              C31623 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C2349 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31345) *
              C31610 +
          (((C4992 + C4993) * C31468 * C9187 +
            ((C4585 * C820 + C31234 * C828) * C116 +
             (C4585 * C829 + C31234 * C835) * C31300) *
                C31468 * C9188 +
            ((C4585 * C2027 + C31234 * C2028) * C116 +
             (C4585 * C2029 + C31234 * C2030) * C31300) *
                C31468 * C9189) *
               C31345 -
           ((C9672 * C31300 + C9671 * C116) * C31468 * C9189 +
            (C9670 * C31300 + C9669 * C116) * C31468 * C9188 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C31468 * C9187) *
               C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C31631 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31627 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31617 -
           ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
            (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
            C5480 * C31468 * C9187) *
               C31597) *
              C2457 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31627 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31631 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31617 +
           (C5769 * C31468 * C9187 +
            (C5942 * C116 + C5943 * C31300) * C31468 * C9188 +
            ((C4585 * C6525 + C31234 * C6526) * C116 +
             (C4585 * C6527 + C31234 * C6528) * C31300) *
                C31468 * C9189) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31341 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 + C8598 * C4584) *
               C31480 * C31348 +
           (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
            (C8593 + C8594 - C8595 - C8596) * C4584) *
               C31480 * C2717) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31341 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31348 +
           (C7815 * C4582 + (C7808 - (C7807 + C7806) + C7809) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C3114 -
             (C5774 * C3111 + C5775 * C3113) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C3113 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C3111 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C3114 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C2717) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C3114 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C3111 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C3113) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
                C31468 * C9189) *
               C31341 +
           ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
            (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
                C31468 * C9189) *
               C31348 +
           (C7814 * C31468 * C9187 +
            (C5278 * C3113 + C5279 * C3111 - C5649 * C3114 - C5650 * C31387) *
                C31468 * C9188 +
            (C5649 * C3113 + C5650 * C3111 - C6780 * C3114 - C6781 * C31387) *
                C31468 * C9189) *
               C2717) *
              C31544 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
                C31468 * C9189) *
               C31341 +
           ((C7800 + C7799 - C7798 - C7801) * C31468 * C9187 +
            (C5280 * C3113 + C5281 * C3111 - C6546 * C3114 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C3113 + C6547 * C3111 - C10905 * C3114 - C10906 * C31387) *
                C31468 * C9189) *
               C31348 +
           (C7815 * C31468 * C9187 +
            (C6548 * C3114 - (C5283 * C3111 + C5282 * C3113) + C6549 * C31387) *
                C31468 * C9188 +
            ((C4585 * C6651 + C31234 * C6652) * C3114 -
             (C6549 * C3111 + C6548 * C3113) +
             (C4585 * C6653 + C31234 * C6654) * C31387) *
                C31468 * C9189) *
               C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C30320 +
            (C4585 * C127 + C31234 * C138) * C31383 -
            (C4585 * C419 + C31234 * C429) * C30312 -
            (C4585 * C432 + C31234 * C449) * C31390 +
            (C4585 * C420 + C31234 * C433) * C30326 +
            (C4585 * C436 + C31234 * C450) * C3625) *
               C4582 +
           (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C4583 +
           C9125 * C4584) *
              C31480 * C31341 +
          ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C4582 +
           (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C4583 +
           (C9116 - (C9117 + C9118) + C9119 - C9120 - C9121) * C4584) *
              C31480 * C31348 +
          (C9125 * C4582 +
           (C9118 + C9117 - C9116 - C9119 + C9120 + C9121) * C4583 +
           (C5489 * C30320 + C5490 * C31383 - C6058 * C30312 - C6059 * C31390 +
            (C4585 * C5609 + C31234 * C5614) * C30326 +
            (C4585 * C5615 + C31234 * C5618) * C3625) *
               C4584) *
              C31480 * C2717) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C30320 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31383 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C30312 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31390 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C30326 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C3625) *
              C31468 * C31480 * C31341 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C30312 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31383 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C30320) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31390 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C30326 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C3625) *
              C31468 * C31480 * C31348 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C30320 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31383 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C30312 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31390 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C30326 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C3625) *
              C31468 * C31480 * C2717) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C30320 +
            (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
            C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
               C31468 * C9187 +
           (C9447 * C30320 + C9448 * C31383 - C9449 * C30312 - C9450 * C31390 +
            C9451 * C30326 + C9452 * C3625) *
               C31468 * C9188 +
           (C9449 * C30320 + C9450 * C31383 - C9451 * C30312 - C9452 * C31390 +
            C10747 * C30326 + C10748 * C3625) *
               C31468 * C9189) *
              C31341 +
          ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C31468 * C9187 +
           (C5646 * C30312 - (C5277 * C31383 + C5276 * C30320) +
            C5647 * C31390 - C6778 * C30326 - C6779 * C3625) *
               C31468 * C9188 +
           (C6778 * C30312 - (C5647 * C31383 + C5646 * C30320) +
            C6779 * C31390 - C11121 * C30326 - C11122 * C3625) *
               C31468 * C9189) *
              C31348 +
          (C9125 * C31468 * C9187 +
           (C5278 * C30320 + C5279 * C31383 - C5649 * C30312 - C5650 * C31390 +
            C6780 * C30326 + C6781 * C3625) *
               C31468 * C9188 +
           (C5649 * C30320 + C5650 * C31383 - C6780 * C30312 - C6781 * C31390 +
            (C4585 * C6369 + C31234 * C6374) * C30326 +
            (C4585 * C6375 + C31234 * C6378) * C3625) *
               C31468 * C9189) *
              C2717) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C3113 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C3111 -
                (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                 C113 * C419 + C101 * C429) *
                    C3114 -
                (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                 C113 * C432 + C101 * C449) *
                    C31387) *
                   C31468 * C31480 * C2349 +
               ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C3114 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C3111 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C3113) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31387) *
                   C31468 * C31480 * C31345) *
                  C31621 +
              (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                 C115 * C423 + C103 * C439) *
                    C3114 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C3111 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C3113) +
                (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                 C115 * C440 + C103 * C453) *
                    C31387) *
                   C31468 * C31480 * C2349 +
               ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C3113 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C3111 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C3114 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31387) *
                   C31468 * C31480 * C31345) *
                  C31608 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C3113 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C3111 -
                (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                 C113 * C417 + C101 * C427) *
                    C3114 -
                (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                 C113 * C430 + C101 * C447) *
                    C31387) *
                   C31468 * C31480 * C2349 +
               ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
                 C115 * C821 + C103 * C830) *
                    C3114 -
                ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                  C113 * C271 + C101 * C291) *
                     C3111 +
                 (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                  C113 * C261 + C101 * C274) *
                     C3113) +
                (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
                 C115 * C831 + C103 * C836) *
                    C31387) *
                   C31468 * C31480 * C31345) *
                  C31581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C3113 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C3111 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C3114 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C31387) *
                  C31468 * C31480 * C31631 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C3114 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C3111 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C3113) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C31387) *
                  C31468 * C31480 * C31627 +
              ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                C115 * C266 + C103 * C279) *
                   C3113 +
               (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                C115 * C282 + C103 * C296) *
                   C3111 -
               (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                C113 * C1160 + C101 * C1172) *
                   C3114 -
               (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                C113 * C1175 + C101 * C1187) *
                   C31387) *
                  C31468 * C31480 * C31617 +
              ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
                C115 * C1549 + C103 * C1552) *
                   C3114 -
               ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
                 C113 * C1029 + C101 * C1041) *
                    C3111 +
                (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
                 C113 * C1023 + C101 * C1032) *
                    C3113) +
               (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
                C115 * C1555 + C103 * C1558) *
                   C31387) *
                  C31468 * C31480 * C31597) *
             C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3363 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31632 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3364 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31629 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C3365 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31620 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C3366 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C2349 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C3364 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31632 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C3363) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31629 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C3365 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31620 +
           (C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C3366 +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31603) *
              C31468 * C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C2349 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31345) *
              C31621 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C2349 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31345) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 -
             (C4585 * C417 + C31234 * C427) * C3114 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C8060 + C8061 - C8062 - C8063) * C4583 +
            (C8064 + C8065 - C8066 - C8067) * C4584) *
               C31480 * C2349 +
           ((C8062 - (C8061 + C8060) + C8063) * C4582 +
            (C8066 - (C8065 + C8064) + C8067) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C3114 -
             (C4749 * C3111 + C4750 * C3113) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
              C31480 * C31631 +
          ((C7788 - (C7787 + C7786) + C7789) * C4582 +
           (C7792 - (C7791 + C7790) + C7793) * C4583 + C8598 * C4584) *
              C31480 * C31627 +
          (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
           (C8593 + C8594 - C8595 - C8596) * C4584) *
              C31480 * C31617 +
          (C8598 * C4582 + (C8595 - (C8594 + C8593) + C8596) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C3114 -
            (C5491 * C3111 + C5492 * C3113) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3363 +
            (C4585 * C127 + C31234 * C138) * C31632 -
            (C4585 * C419 + C31234 * C429) * C3364 -
            (C4585 * C432 + C31234 * C449) * C31629 +
            (C4585 * C420 + C31234 * C433) * C3365 +
            (C4585 * C436 + C31234 * C450) * C31620 -
            (C4585 * C1859 + C31234 * C1865) * C3366 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C8697 + C8698 - C8699 - C8700 + C8701 + C8702 - C8703 - C8704) *
               C4583 +
           (C8705 + C8706 - C8707 - C8708 + C8709 + C8710 - C8711 - C8712) *
               C4584) *
              C31480 * C2349 +
          ((C8699 - (C8698 + C8697) + C8700 - C8701 - C8702 + C8703 + C8704) *
               C4582 +
           (C8707 - (C8706 + C8705) + C8708 - C8709 - C8710 + C8711 + C8712) *
               C4583 +
           (C5651 * C3364 - (C4737 * C31632 + C4738 * C3363) + C5652 * C31629 -
            C5653 * C3365 - C5654 * C31620 +
            (C4585 * C6753 + C31234 * C6754) * C3366 +
            (C4585 * C6755 + C31234 * C6756) * C31603) *
               C4584) *
              C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
            (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31621 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C7800 + C7799 - C7798 - C7801) * C31468 * C9187 +
            (C5280 * C3113 + C5281 * C3111 - C6546 * C3114 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C3113 + C6547 * C3111 - C10905 * C3114 - C10906 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
             C9460 * C31387) *
                C31468 * C9187 +
            (C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                C31468 * C9188 +
            (C9461 * C3113 + C9462 * C3111 - C9463 * C3114 - C9464 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C8062 - (C8061 + C8060) + C8063) * C31468 * C9187 +
            (C9823 * C3114 - (C5285 * C3111 + C5284 * C3113) + C9824 * C31387) *
                C31468 * C9188 +
            ((C4585 * C2241 + C31234 * C2244) * C3114 -
             (C9824 * C3111 + C9823 * C3113) +
             (C4585 * C2247 + C31234 * C2250) * C31387) *
                C31468 * C9189) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
               C31468 * C9189) *
              C31631 +
          ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
           (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
               C31468 * C9188 +
           (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
               C31468 * C9189) *
              C31627 +
          (C7814 * C31468 * C9187 +
           (C5278 * C3113 + C5279 * C3111 - C5649 * C3114 - C5650 * C31387) *
               C31468 * C9188 +
           (C5649 * C3113 + C5650 * C3111 - C6780 * C3114 - C6781 * C31387) *
               C31468 * C9189) *
              C31617 +
          (C8598 * C31468 * C9187 +
           (C5653 * C3114 - (C5652 * C3111 + C5651 * C3113) + C5654 * C31387) *
               C31468 * C9188 +
           ((C4585 * C6753 + C31234 * C6754) * C3114 -
            (C5654 * C3111 + C5653 * C3113) +
            (C4585 * C6755 + C31234 * C6756) * C31387) *
               C31468 * C9189) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3363 +
            (C4585 * C127 + C31234 * C138) * C31632 - C9447 * C3364 -
            C9448 * C31629 + C9449 * C3365 + C9450 * C31620 - C9451 * C3366 -
            C9452 * C31603) *
               C31468 * C9187 +
           (C9447 * C3363 + C9448 * C31632 - C9449 * C3364 - C9450 * C31629 +
            C9451 * C3365 + C9452 * C31620 - C10747 * C3366 - C10748 * C31603) *
               C31468 * C9188 +
           (C9449 * C3363 + C9450 * C31632 - C9451 * C3364 - C9452 * C31629 +
            C10747 * C3365 + C10748 * C31620 - C10749 * C3366 -
            C10750 * C31603) *
               C31468 * C9189) *
              C2349 +
          ((C8699 - (C8698 + C8697) + C8700 - C8701 - C8702 + C8703 + C8704) *
               C31468 * C9187 +
           (C5646 * C3364 - (C5277 * C31632 + C5276 * C3363) + C5647 * C31629 -
            C6778 * C3365 - C6779 * C31620 + C11121 * C3366 + C11122 * C31603) *
               C31468 * C9188 +
           (C6778 * C3364 - (C5647 * C31632 + C5646 * C3363) + C6779 * C31629 -
            C11121 * C3365 - C11122 * C31620 +
            (C4585 * C11112 + C31234 * C11113) * C3366 +
            (C4585 * C11114 + C31234 * C11115) * C31603) *
               C31468 * C9189) *
              C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 -
             (C4585 * C419 + C31234 * C429) * C30312 -
             (C4585 * C432 + C31234 * C449) * C31390 +
             (C4585 * C420 + C31234 * C433) * C30326 +
             (C4585 * C436 + C31234 * C450) * C3625) *
                C4582 +
            (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C4583 +
            (C8330 + C8331 - C8332 - C8333 + C8334 + C8335) * C4584) *
               C31480 * C2349 +
           ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C4582 +
            (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C4583 +
            (C5651 * C30312 - (C4737 * C31383 + C4738 * C30320) +
             C5652 * C31390 - C5653 * C30326 - C5654 * C3625) *
                C4584) *
               C31480 * C31345) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             (C4585 * C431 + C31234 * C448) * C31390 -
             (C4585 * C421 + C31234 * C434) * C30326 -
             (C4585 * C437 + C31234 * C451) * C3625) *
                C4582 +
            (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C4583 +
            (C8342 - (C8343 + C8344) + C8345 - C8346 - C8347) * C4584) *
               C31480 * C2349 +
           ((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C4582 +
            (C8344 + C8343 - C8342 - C8345 + C8346 + C8347) * C4583 +
            (C4743 * C30320 + C4744 * C31383 - C5942 * C30312 - C5943 * C31390 +
             (C4585 * C6525 + C31234 * C6526) * C30326 +
             (C4585 * C6527 + C31234 * C6528) * C3625) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30320 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31383 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C30312 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31390 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C30326 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C3625) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30312 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31383 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C30320) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31390 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C30326 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C3625) *
               C31468 * C31480 * C31345) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C30312 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31383 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30320) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31390 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C30326 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C3625) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C30320 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31383 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30312 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31390 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C30326 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C3625) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
             C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                C31468 * C9187 +
            (C9447 * C30320 + C9448 * C31383 - C9449 * C30312 - C9450 * C31390 +
             C9451 * C30326 + C9452 * C3625) *
                C31468 * C9188 +
            (C9449 * C30320 + C9450 * C31383 - C9451 * C30312 - C9452 * C31390 +
             C10747 * C30326 + C10748 * C3625) *
                C31468 * C9189) *
               C2349 +
           ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C31468 * C9187 +
            (C5646 * C30312 - (C5277 * C31383 + C5276 * C30320) +
             C5647 * C31390 - C6778 * C30326 - C6779 * C3625) *
                C31468 * C9188 +
            (C6778 * C30312 - (C5647 * C31383 + C5646 * C30320) +
             C6779 * C31390 - C11121 * C30326 - C11122 * C3625) *
                C31468 * C9189) *
               C31345) *
              C31544 +
          (((C9453 * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             C9454 * C31390 - C9455 * C30326 - C9456 * C3625) *
                C31468 * C9187 +
            (C9455 * C30312 - (C9454 * C31383 + C9453 * C30320) +
             C9456 * C31390 - C9457 * C30326 - C9458 * C3625) *
                C31468 * C9188 +
            (C9457 * C30312 - (C9456 * C31383 + C9455 * C30320) +
             C9458 * C31390 - C11013 * C30326 - C11014 * C3625) *
                C31468 * C9189) *
               C2349 +
           ((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C31468 * C9187 +
            (C5280 * C30320 + C5281 * C31383 - C6546 * C30312 - C6547 * C31390 +
             C10905 * C30326 + C10906 * C3625) *
                C31468 * C9188 +
            (C6546 * C30320 + C6547 * C31383 - C10905 * C30312 -
             C10906 * C31390 + (C4585 * C10896 + C31234 * C10897) * C30326 +
             (C4585 * C10898 + C31234 * C10899) * C3625) *
                C31468 * C9189) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3113 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C3111 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3114 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31631 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C3114 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C3111 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C3113) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31387) *
              C31468 * C31480 * C31627 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C3113 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C3111 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C3114 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31387) *
              C31468 * C31480 * C31617 +
          ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
            C115 * C1549 + C103 * C1552) *
               C3114 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C3111 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C3113) +
           (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
            C115 * C1555 + C103 * C1558) *
               C31387) *
              C31468 * C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31621 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C3113 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C3111 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C3114 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C3114 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C3111 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C3113) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C2349 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31345) *
              C31621 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C2349 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31345) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 -
             (C4585 * C417 + C31234 * C427) * C3114 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C8060 + C8061 - C8062 - C8063) * C4583 +
            (C8064 + C8065 - C8066 - C8067) * C4584) *
               C31480 * C2349 +
           ((C8062 - (C8061 + C8060) + C8063) * C4582 +
            (C8066 - (C8065 + C8064) + C8067) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C3114 -
             (C4749 * C3111 + C4750 * C3113) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
              C31480 * C31631 +
          ((C7788 - (C7787 + C7786) + C7789) * C4582 +
           (C7792 - (C7791 + C7790) + C7793) * C4583 + C8598 * C4584) *
              C31480 * C31627 +
          (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
           (C8593 + C8594 - C8595 - C8596) * C4584) *
              C31480 * C31617 +
          (C8598 * C4582 + (C8595 - (C8594 + C8593) + C8596) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C3114 -
            (C5491 * C3111 + C5492 * C3113) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
            (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31621 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C7800 + C7799 - C7798 - C7801) * C31468 * C9187 +
            (C5280 * C3113 + C5281 * C3111 - C6546 * C3114 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C3113 + C6547 * C3111 - C10905 * C3114 - C10906 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
             C9460 * C31387) *
                C31468 * C9187 +
            (C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                C31468 * C9188 +
            (C9461 * C3113 + C9462 * C3111 - C9463 * C3114 - C9464 * C31387) *
                C31468 * C9189) *
               C2349 +
           ((C8062 - (C8061 + C8060) + C8063) * C31468 * C9187 +
            (C9823 * C3114 - (C5285 * C3111 + C5284 * C3113) + C9824 * C31387) *
                C31468 * C9188 +
            ((C4585 * C2241 + C31234 * C2244) * C3114 -
             (C9824 * C3111 + C9823 * C3113) +
             (C4585 * C2247 + C31234 * C2250) * C31387) *
                C31468 * C9189) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
               C31468 * C9189) *
              C31631 +
          ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
           (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
               C31468 * C9188 +
           (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
               C31468 * C9189) *
              C31627 +
          (C7814 * C31468 * C9187 +
           (C5278 * C3113 + C5279 * C3111 - C5649 * C3114 - C5650 * C31387) *
               C31468 * C9188 +
           (C5649 * C3113 + C5650 * C3111 - C6780 * C3114 - C6781 * C31387) *
               C31468 * C9189) *
              C31617 +
          (C8598 * C31468 * C9187 +
           (C5653 * C3114 - (C5652 * C3111 + C5651 * C3113) + C5654 * C31387) *
               C31468 * C9188 +
           ((C4585 * C6753 + C31234 * C6754) * C3114 -
            (C5654 * C3111 + C5653 * C3113) +
            (C4585 * C6755 + C31234 * C6756) * C31387) *
               C31468 * C9189) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C31558 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C31345) *
                  C557 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C31345 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C31558) *
                  C558 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31300) *
                   C31468 * C31480 * C31558 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31300 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31468 * C31480 * C31345) *
                  C559 +
              (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
                 C115 * C561 + C103 * C562) *
                    C116 +
                (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
                 C115 * C563 + C103 * C564) *
                    C31300) *
                   C31468 * C31480 * C31345 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31300 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31468 * C31480 * C31558) *
                  C31591) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C1289 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C1290 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31300) *
                   C31468 * C31480 * C1291 -
               ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
                 C113 * C1029 + C101 * C1041) *
                    C31300 +
                (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
                 C113 * C1023 + C101 * C1032) *
                    C116) *
                   C31468 * C31480 * C31597) *
                  C31544 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C1290 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C1289 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31300 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31468 * C31480 * C1291 +
               ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
                 C115 * C1295 + C103 * C1296) *
                    C116 +
                (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
                 C115 * C1297 + C103 * C1298) *
                    C31300) *
                   C31468 * C31480 * C31597) *
                  C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C1672 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C1669 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C1673 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C1670 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C1674 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C31590) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C1673 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C1669 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C1672) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C1670 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C1674 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C31590) *
               C31468 * C31480 * C31345) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C1673 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C1669 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C1672) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C1670 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C1674 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C31590) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C1672 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C1669 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C1673 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C1670 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C1674 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C31590) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31558 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C557 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31558) *
              C558 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31558 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C559 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C1289 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C1290 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C1291 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C31544 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C1290 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C1289 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C1291 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 -
             (C4585 * C419 + C31234 * C429) * C1673 -
             (C4585 * C432 + C31234 * C449) * C1670 +
             (C4585 * C420 + C31234 * C433) * C1674 +
             (C4585 * C436 + C31234 * C450) * C31590) *
                C4582 +
            (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C4583 +
            C6305 * C4584) *
               C31480 * C31558 +
           ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C4582 +
            (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C4583 +
            (C6295 - (C6296 + C6297) + C6298 - C6299 - C6300) * C4584) *
               C31480 * C31345) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C1673 -
             ((C4585 * C128 + C31234 * C139) * C1669 +
              (C4585 * C118 + C31234 * C125) * C1672) +
             (C4585 * C431 + C31234 * C448) * C1670 -
             (C4585 * C421 + C31234 * C434) * C1674 -
             (C4585 * C437 + C31234 * C451) * C31590) *
                C4582 +
            (C6530 - (C6531 + C6532) + C6533 - C6550 - C6551) * C4583 +
            (C6538 - (C6539 + C6540) + C6541 - C6552 - C6553) * C4584) *
               C31480 * C31558 +
           ((C6532 + C6531 - C6530 - C6533 + C6550 + C6551) * C4582 +
            (C6540 + C6539 - C6538 - C6541 + C6552 + C6553) * C4583 +
            (C4743 * C1672 + C4744 * C1669 - C5942 * C1673 - C5943 * C1670 +
             (C4585 * C6525 + C31234 * C6526) * C1674 +
             (C4585 * C6527 + C31234 * C6528) * C31590) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C31558 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31345) *
              C557 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31345 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31558) *
              C558 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C31558 -
           (((C4585 * C1167 + C31234 * C1182) * C31300 +
             (C4585 * C1155 + C31234 * C1164) * C116) *
                C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31345) *
              C559 +
          (((C4992 + C4993) * C31468 * C9187 +
            ((C4585 * C820 + C31234 * C828) * C116 +
             (C4585 * C829 + C31234 * C835) * C31300) *
                C31468 * C9188 +
            ((C4585 * C2027 + C31234 * C2028) * C116 +
             (C4585 * C2029 + C31234 * C2030) * C31300) *
                C31468 * C9189) *
               C31345 -
           (((C4585 * C442 + C31234 * C454) * C31300 +
             (C4585 * C424 + C31234 * C441) * C116) *
                C31468 * C9189 +
            ((C4585 * C440 + C31234 * C453) * C31300 +
             (C4585 * C423 + C31234 * C439) * C116) *
                C31468 * C9188 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C31468 * C9187) *
               C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C1289 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C1290 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C1291 -
           ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
            (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
            C5480 * C31468 * C9187) *
               C31597) *
              C31544 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C1290 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C1289 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C1291 +
           (C5769 * C31468 * C9187 +
            (C5942 * C116 + C5943 * C31300) * C31468 * C9188 +
            ((C4585 * C6525 + C31234 * C6526) * C116 +
             (C4585 * C6527 + C31234 * C6528) * C31300) *
                C31468 * C9189) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
             C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
                C31468 * C9187 +
            (C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
             C9451 * C1674 + C9452 * C31590) *
                C31468 * C9188 +
            (C9449 * C1672 + C9450 * C1669 - C9451 * C1673 - C9452 * C1670 +
             C10747 * C1674 + C10748 * C31590) *
                C31468 * C9189) *
               C31558 +
           ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C31468 * C9187 +
            (C5646 * C1673 - (C5277 * C1669 + C5276 * C1672) + C5647 * C1670 -
             C6778 * C1674 - C6779 * C31590) *
                C31468 * C9188 +
            (C6778 * C1673 - (C5647 * C1669 + C5646 * C1672) + C6779 * C1670 -
             (C4585 * C6367 + C31234 * C6370) * C1674 -
             (C4585 * C6371 + C31234 * C6376) * C31590) *
                C31468 * C9189) *
               C31345) *
              C31544 +
          (((C9453 * C1673 -
             ((C4585 * C128 + C31234 * C139) * C1669 +
              (C4585 * C118 + C31234 * C125) * C1672) +
             C9454 * C1670 - C9455 * C1674 - C9456 * C31590) *
                C31468 * C9187 +
            (C9455 * C1673 - (C9454 * C1669 + C9453 * C1672) + C9456 * C1670 -
             C9457 * C1674 - C9458 * C31590) *
                C31468 * C9188 +
            (C9457 * C1673 - (C9456 * C1669 + C9455 * C1672) + C9458 * C1670 -
             (C4585 * C1861 + C31234 * C1870) * C1674 -
             (C4585 * C1873 + C31234 * C1879) * C31590) *
                C31468 * C9189) *
               C31558 +
           ((C6532 + C6531 - C6530 - C6533 + C6550 + C6551) * C31468 * C9187 +
            (C5280 * C1672 + C5281 * C1669 - C6546 * C1673 - C6547 * C1670 +
             C10905 * C1674 + C10906 * C31590) *
                C31468 * C9188 +
            (C6546 * C1672 + C6547 * C1669 - C10905 * C1673 - C10906 * C1670 +
             (C4585 * C10896 + C31234 * C10897) * C1674 +
             (C4585 * C10898 + C31234 * C10899) * C31590) *
                C31468 * C9189) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C665 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31559 -
                (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                 C113 * C419 + C101 * C429) *
                    C666 -
                (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                 C113 * C432 + C101 * C449) *
                    C31387) *
                   C31468 * C31480 * C31558 +
               ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C666 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C31559 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C665) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31387) *
                   C31468 * C31480 * C31345) *
                  C258 +
              (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                 C115 * C423 + C103 * C439) *
                    C666 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31559 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C665) +
                (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                 C115 * C440 + C103 * C453) *
                    C31387) *
                   C31468 * C31480 * C31558 +
               ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C665 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31559 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C666 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31387) *
                   C31468 * C31480 * C31345) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C665 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31559 -
                (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                 C113 * C417 + C101 * C427) *
                    C666 -
                (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                 C113 * C430 + C101 * C447) *
                    C31387) *
                   C31468 * C31480 * C31558 +
               ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
                 C115 * C821 + C103 * C830) *
                    C666 -
                ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                  C113 * C271 + C101 * C291) *
                     C31559 +
                 (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                  C113 * C261 + C101 * C274) *
                     C665) +
                (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
                 C115 * C831 + C103 * C836) *
                    C31387) *
                   C31468 * C31480 * C31345) *
                  C31581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C665 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31559 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C666 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C31387) *
                  C31468 * C31480 * C1289 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C666 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31559 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C665) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C31387) *
                  C31468 * C31480 * C1290 +
              ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                C115 * C266 + C103 * C279) *
                   C665 +
               (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                C115 * C282 + C103 * C296) *
                   C31559 -
               (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                C113 * C1160 + C101 * C1172) *
                   C666 -
               (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                C113 * C1175 + C101 * C1187) *
                   C31387) *
                  C31468 * C31480 * C1291 +
              ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
                C115 * C1549 + C103 * C1552) *
                   C666 -
               ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
                 C113 * C1029 + C101 * C1041) *
                    C31559 +
                (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
                 C113 * C1023 + C101 * C1032) *
                    C665) +
               (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
                C115 * C1555 + C103 * C1558) *
                   C31387) *
                  C31468 * C31480 * C31597) *
             C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2133 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2129 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C2134 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C2130 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C2135 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C2131 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C2136 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C31558 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2134 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C2129 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C2133) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C2130 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C2135 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C2131 +
           (C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C2136 +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31603) *
              C31468 * C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 +
            (C5246 + C5247 - C5290 - C5291) * C4584) *
               C31480 * C31558 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            ((C4585 * C1547 + C31234 * C1550) * C666 -
             (C4737 * C31559 + C4738 * C665) +
             (C4585 * C1553 + C31234 * C1556) * C31387) *
                C4584) *
               C31480 * C31345) *
              C258 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 +
            (C5294 - (C5260 + C5261) + C5295) * C4584) *
               C31480 * C31558 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C4743 * C665 + C4744 * C31559 -
             (C4585 * C1548 + C31234 * C1551) * C666 -
             (C4585 * C1554 + C31234 * C1557) * C31387) *
                C4584) *
               C31480 * C31345) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 -
             (C4585 * C417 + C31234 * C427) * C666 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C5264 + C5265 - C5296 - C5297) * C4583 +
            (C5270 + C5271 - C5298 - C5299) * C4584) *
               C31480 * C31558 +
           ((C5296 - (C5265 + C5264) + C5297) * C4582 +
            (C5298 - (C5271 + C5270) + C5299) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C666 -
             (C4749 * C31559 + C4750 * C665) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
              C31480 * C1289 +
          ((C5288 - (C5241 + C5240) + C5289) * C4582 +
           (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
              C31480 * C1290 +
          (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
           (C6051 + C6052 - C6061 - C6062) * C4584) *
              C31480 * C1291 +
          (C6060 * C4582 + (C6061 - (C6052 + C6051) + C6062) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C666 -
            (C5491 * C31559 + C5492 * C665) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C2133 +
            (C4585 * C127 + C31234 * C138) * C2129 -
            (C4585 * C419 + C31234 * C429) * C2134 -
            (C4585 * C432 + C31234 * C449) * C2130 +
            (C4585 * C420 + C31234 * C433) * C2135 +
            (C4585 * C436 + C31234 * C450) * C2131 -
            (C4585 * C1859 + C31234 * C1865) * C2136 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C6758 + C6759 - C6760 - C6761 + C6762 + C6763 - C6782 - C6783) *
               C4583 +
           (C6768 + C6769 - C6770 - C6771 + C6772 + C6773 - C6784 - C6785) *
               C4584) *
              C31480 * C31558 +
          ((C6760 - (C6759 + C6758) + C6761 - C6762 - C6763 + C6782 + C6783) *
               C4582 +
           (C6770 - (C6769 + C6768) + C6771 - C6772 - C6773 + C6784 + C6785) *
               C4583 +
           (C5651 * C2134 - (C4737 * C2129 + C4738 * C2133) + C5652 * C2130 -
            C5653 * C2135 - C5654 * C2131 +
            (C4585 * C6753 + C31234 * C6754) * C2136 +
            (C4585 * C6755 + C31234 * C6756) * C31603) *
               C4584) *
              C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
            (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
                C31468 * C9189) *
               C31345) *
              C258 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C5255 + C5254 - C5292 - C5293) * C31468 * C9187 +
            (C5280 * C665 + C5281 * C31559 - C6546 * C666 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C665 + C6547 * C31559 -
             (C4585 * C2240 + C31234 * C2243) * C666 -
             (C4585 * C2246 + C31234 * C2249) * C31387) *
                C31468 * C9189) *
               C31345) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
             C9460 * C31387) *
                C31468 * C9187 +
            (C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                C31468 * C9188 +
            (C9461 * C665 + C9462 * C31559 - C9463 * C666 - C9464 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C5296 - (C5265 + C5264) + C5297) * C31468 * C9187 +
            (C9823 * C666 - (C5285 * C31559 + C5284 * C665) + C9824 * C31387) *
                C31468 * C9188 +
            ((C4585 * C2241 + C31234 * C2244) * C666 -
             (C9824 * C31559 + C9823 * C665) +
             (C4585 * C2247 + C31234 * C2250) * C31387) *
                C31468 * C9189) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
               C31468 * C9189) *
              C1289 +
          ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
           (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
               C31468 * C9188 +
           (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
               C31468 * C9189) *
              C1290 +
          (C5944 * C31468 * C9187 +
           (C5278 * C665 + C5279 * C31559 - C5649 * C666 - C5650 * C31387) *
               C31468 * C9188 +
           (C5649 * C665 + C5650 * C31559 - C6780 * C666 - C6781 * C31387) *
               C31468 * C9189) *
              C1291 +
          (C6060 * C31468 * C9187 +
           (C5653 * C666 - (C5652 * C31559 + C5651 * C665) + C5654 * C31387) *
               C31468 * C9188 +
           ((C4585 * C6753 + C31234 * C6754) * C666 -
            (C5654 * C31559 + C5653 * C665) +
            (C4585 * C6755 + C31234 * C6756) * C31387) *
               C31468 * C9189) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C2133 +
            (C4585 * C127 + C31234 * C138) * C2129 - C9447 * C2134 -
            C9448 * C2130 + C9449 * C2135 + C9450 * C2131 - C9451 * C2136 -
            C9452 * C31603) *
               C31468 * C9187 +
           (C9447 * C2133 + C9448 * C2129 - C9449 * C2134 - C9450 * C2130 +
            C9451 * C2135 + C9452 * C2131 - C10747 * C2136 - C10748 * C31603) *
               C31468 * C9188 +
           (C9449 * C2133 + C9450 * C2129 - C9451 * C2134 - C9452 * C2130 +
            C10747 * C2135 + C10748 * C2131 - C10749 * C2136 -
            C10750 * C31603) *
               C31468 * C9189) *
              C31558 +
          ((C6760 - (C6759 + C6758) + C6761 - C6762 - C6763 + C6782 + C6783) *
               C31468 * C9187 +
           (C5646 * C2134 - (C5277 * C2129 + C5276 * C2133) + C5647 * C2130 -
            C6778 * C2135 - C6779 * C2131 + C11121 * C2136 + C11122 * C31603) *
               C31468 * C9188 +
           (C6778 * C2134 - (C5647 * C2129 + C5646 * C2133) + C6779 * C2130 -
            C11121 * C2135 - C11122 * C2131 +
            (C4585 * C11112 + C31234 * C11113) * C2136 +
            (C4585 * C11114 + C31234 * C11115) * C31603) *
               C31468 * C9189) *
              C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31300) *
                  C31468 * C31480 * C31283 * C108 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31300 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31468 * C31480 * C31283 * C109 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31300) *
                  C31468 * C31480 * C31283 * C110 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31300 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31468 * C31480 * C31283 * C111 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31300) *
                  C31468 * C31480 * C31283 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C31624 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C31612 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C258 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C31612 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C31624 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31300 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31468 * C31480 * C31587) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31300) *
                   C31468 * C31480 * C31624 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31300 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31468 * C31480 * C31612 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C31581) +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C414 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31625 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C415 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C31614 +
               (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
                C115 * C422 + C103 * C435) *
                   C416 +
               (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
                C115 * C438 + C103 * C452) *
                   C31590) *
                  C31468 * C31480 * C31283 * C258 +
              ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                C115 * C423 + C103 * C439) *
                   C415 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31625 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C414) +
               (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                C115 * C440 + C103 * C453) *
                   C31614 -
               (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
                C113 * C421 + C101 * C434) *
                   C416 -
               (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
                C113 * C437 + C101 * C451) *
                   C31590) *
                  C31468 * C31480 * C31283 * C259 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C414 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31625 -
               (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                C113 * C417 + C101 * C427) *
                   C415 -
               (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                C113 * C430 + C101 * C447) *
                   C31614 +
               (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
                C115 * C426 + C103 * C445) *
                   C416 +
               (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
                C115 * C446 + C103 * C456) *
                   C31590) *
                  C31468 * C31480 * C31283 * C31581) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C947 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C948 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C31621 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C948 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C947 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31300 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31468 * C31480 * C31587) *
                  C31608 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31300) *
                   C31468 * C31480 * C947 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31300 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31468 * C31480 * C948 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C31581) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31300) *
                  C31468 * C31480 * C1015 -
              ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                C113 * C273 + C101 * C293) *
                   C31300 +
               (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                C113 * C263 + C101 * C276) *
                   C116) *
                  C31468 * C31480 * C1016 +
              ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                C115 * C266 + C103 * C279) *
                   C116 +
               (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                C115 * C282 + C103 * C296) *
                   C31300) *
                  C31468 * C31480 * C1017 -
              ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
                C113 * C1029 + C101 * C1041) *
                   C31300 +
               (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
                C113 * C1023 + C101 * C1032) *
                   C116) *
                  C31468 * C31480 * C1018 +
              ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
                C115 * C1026 + C103 * C1035) *
                   C116 +
               (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
                C115 * C1038 + C103 * C1044) *
                   C31300) *
                  C31468 * C31480 * C1019) *
             C31256 +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C414 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31625 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C415 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C31614 +
               (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
                C115 * C422 + C103 * C435) *
                   C416 +
               (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
                C115 * C438 + C103 * C452) *
                   C31590) *
                  C31468 * C31480 * C947 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C415 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31625 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C414) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C31614 -
               (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
                C113 * C1157 + C101 * C1166) *
                   C416 -
               (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
                C113 * C1169 + C101 * C1184) *
                   C31590) *
                  C31468 * C31480 * C948 +
              ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                C115 * C266 + C103 * C279) *
                   C414 +
               (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                C115 * C282 + C103 * C296) *
                   C31625 -
               (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                C113 * C1160 + C101 * C1172) *
                   C415 -
               (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                C113 * C1175 + C101 * C1187) *
                   C31614 +
               (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
                C115 * C1163 + C103 * C1178) *
                   C416 +
               (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
                C115 * C1181 + C103 * C1190) *
                   C31590) *
                  C31468 * C31480 * C31587) *
             C31256 +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C1672 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C1669 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C1673 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C1670 +
               (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
                C115 * C422 + C103 * C435) *
                   C1674 +
               (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
                C115 * C438 + C103 * C452) *
                   C31590) *
                  C31468 * C31480 * C31283 * C31621 +
              ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                C115 * C423 + C103 * C439) *
                   C1673 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C1669 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C1672) +
               (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                C115 * C440 + C103 * C453) *
                   C1670 -
               (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
                C113 * C421 + C101 * C434) *
                   C1674 -
               (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
                C113 * C437 + C101 * C451) *
                   C31590) *
                  C31468 * C31480 * C31283 * C31608 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C1672 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C1669 -
               (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                C113 * C417 + C101 * C427) *
                   C1673 -
               (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                C113 * C430 + C101 * C447) *
                   C1670 +
               (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
                C115 * C426 + C103 * C445) *
                   C1674 +
               (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
                C115 * C446 + C103 * C456) *
                   C31590) *
                  C31468 * C31480 * C31283 * C31581) +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C1672 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C1669 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C1673 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C1670 +
               (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
                C115 * C422 + C103 * C435) *
                   C1674 +
               (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
                C115 * C438 + C103 * C452) *
                   C31590) *
                  C31468 * C31480 * C31624 +
              ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                C115 * C819 + C103 * C824) *
                   C1673 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C1669 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C1672) +
               (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                C115 * C827 + C103 * C834) *
                   C1670 -
               (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
                C113 * C1157 + C101 * C1166) *
                   C1674 -
               (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
                C113 * C1169 + C101 * C1184) *
                   C31590) *
                  C31468 * C31480 * C31612 +
              ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                C115 * C266 + C103 * C279) *
                   C1672 +
               (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                C115 * C282 + C103 * C296) *
                   C1669 -
               (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                C113 * C1160 + C101 * C1172) *
                   C1673 -
               (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                C113 * C1175 + C101 * C1187) *
                   C1670 +
               (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
                C115 * C1163 + C103 * C1178) *
                   C1674 +
               (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
                C115 * C1181 + C103 * C1190) *
                   C31590) *
                  C31468 * C31480 * C31587) *
             C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1852 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1847 -
          (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 + C113 * C419 +
           C101 * C429) *
              C1853 -
          (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 + C113 * C432 +
           C101 * C449) *
              C1848 +
          (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 + C115 * C422 +
           C103 * C435) *
              C1854 +
          (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 + C115 * C438 +
           C103 * C452) *
              C1849 -
          (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
           C113 * C1859 + C101 * C1865) *
              C1855 -
          (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
           C113 * C1868 + C101 * C1877) *
              C1850 +
          (C113 * C1860 + C101 * C1869 + C114 * C1861 + C102 * C1870 +
           C115 * C1862 + C103 * C1871) *
              C1856 +
          (C113 * C1872 + C101 * C1878 + C114 * C1873 + C102 * C1879 +
           C115 * C1874 + C103 * C1880) *
              C1851) *
         C31468 * C31480 * C31283 * C31256) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C414 + C4734 * C31625 -
            (C4585 * C817 + C31234 * C822) * C415 -
            (C4585 * C825 + C31234 * C832) * C31614 +
            (C4585 * C1157 + C31234 * C1166) * C416 +
            (C4585 * C1169 + C31234 * C1184) * C31590) *
               C4583 +
           (C4735 * C414 + C4736 * C31625 -
            (C4585 * C1160 + C31234 * C1172) * C415 -
            (C4585 * C1175 + C31234 * C1187) * C31614 +
            (C4585 * C1161 + C31234 * C1176) * C416 +
            (C4585 * C1179 + C31234 * C1188) * C31590) *
               C4584) *
              C31480 * C31283 * C258 +
          (((C4585 * C418 + C31234 * C428) * C415 -
            ((C4585 * C128 + C31234 * C139) * C31625 +
             (C4585 * C118 + C31234 * C125) * C414) +
            (C4585 * C431 + C31234 * C448) * C31614 -
            (C4585 * C421 + C31234 * C434) * C416 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C415 -
            (C4740 * C31625 + C4739 * C414) +
            (C4585 * C826 + C31234 * C833) * C31614 -
            (C4585 * C1156 + C31234 * C1165) * C416 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C415 -
            (C4742 * C31625 + C4741 * C414) +
            (C4585 * C1174 + C31234 * C1186) * C31614 -
            (C4585 * C1162 + C31234 * C1177) * C416 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C259 +
          (((C4585 * C119 + C31234 * C126) * C414 +
            (C4585 * C129 + C31234 * C140) * C31625 -
            (C4585 * C417 + C31234 * C427) * C415 -
            (C4585 * C430 + C31234 * C447) * C31614 +
            (C4585 * C422 + C31234 * C435) * C416 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C414 + C4746 * C31625 -
            (C4585 * C819 + C31234 * C824) * C415 -
            (C4585 * C827 + C31234 * C834) * C31614 +
            (C4585 * C1155 + C31234 * C1164) * C416 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C414 + C4748 * C31625 -
            (C4585 * C1158 + C31234 * C1170) * C415 -
            (C4585 * C1173 + C31234 * C1185) * C31614 +
            (C4585 * C1163 + C31234 * C1178) * C416 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C4583 +
           C5666 * C4584) *
              C31480 * C947 +
          ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C4582 +
           (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C4583 +
           (C5660 - (C5638 + C5639) + C5661 - C5662 - C5663) * C4584) *
              C31480 * C948 +
          (C5666 * C4582 +
           (C5639 + C5638 - C5660 - C5661 + C5662 + C5663) * C4583 +
           (C5489 * C414 + C5490 * C31625 -
            (C4585 * C5608 + C31234 * C5612) * C415 -
            (C4585 * C5613 + C31234 * C5617) * C31614 +
            (C4585 * C5609 + C31234 * C5614) * C416 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C1672 + C4734 * C1669 - C5276 * C1673 - C5277 * C1670 +
            C5646 * C1674 + C5647 * C31590) *
               C4583 +
           (C4735 * C1672 + C4736 * C1669 - C5278 * C1673 - C5279 * C1670 +
            C5649 * C1674 + C5650 * C31590) *
               C4584) *
              C31480 * C31283 * C31621 +
          (((C4585 * C418 + C31234 * C428) * C1673 -
            ((C4585 * C128 + C31234 * C139) * C1669 +
             (C4585 * C118 + C31234 * C125) * C1672) +
            (C4585 * C431 + C31234 * C448) * C1670 -
            (C4585 * C421 + C31234 * C434) * C1674 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           (C5280 * C1673 - (C4740 * C1669 + C4739 * C1672) + C5281 * C1670 -
            (C4585 * C1156 + C31234 * C1165) * C1674 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           (C5282 * C1673 - (C4742 * C1669 + C4741 * C1672) + C5283 * C1670 -
            (C4585 * C1162 + C31234 * C1177) * C1674 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C31608 +
          (((C4585 * C119 + C31234 * C126) * C1672 +
            (C4585 * C129 + C31234 * C140) * C1669 -
            (C4585 * C417 + C31234 * C427) * C1673 -
            (C4585 * C430 + C31234 * C447) * C1670 +
            (C4585 * C422 + C31234 * C435) * C1674 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C1672 + C4746 * C1669 - C5284 * C1673 - C5285 * C1670 +
            (C4585 * C1155 + C31234 * C1164) * C1674 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C1672 + C4748 * C1669 - C5286 * C1673 - C5287 * C1670 +
            (C4585 * C1163 + C31234 * C1178) * C1674 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C4583 +
           C6305 * C4584) *
              C31480 * C31624 +
          ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C4582 +
           (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C4583 +
           (C6295 - (C6296 + C6297) + C6298 - C6299 - C6300) * C4584) *
              C31480 * C31612 +
          (C6305 * C4582 +
           (C6297 + C6296 - C6295 - C6298 + C6299 + C6300) * C4583 +
           (C5489 * C1672 + C5490 * C1669 - C6058 * C1673 - C6059 * C1670 +
            (C4585 * C5609 + C31234 * C5614) * C1674 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31234 * C124) * C1852 +
           (C4585 * C127 + C31234 * C138) * C1847 -
           (C4585 * C419 + C31234 * C429) * C1853 -
           (C4585 * C432 + C31234 * C449) * C1848 +
           (C4585 * C420 + C31234 * C433) * C1854 +
           (C4585 * C436 + C31234 * C450) * C1849 -
           (C4585 * C1859 + C31234 * C1865) * C1855 -
           (C4585 * C1868 + C31234 * C1877) * C1850 +
           (C4585 * C1860 + C31234 * C1869) * C1856 +
           (C4585 * C1872 + C31234 * C1878) * C1851) *
              C4582 +
          (C4733 * C1852 + C4734 * C1847 - C5276 * C1853 - C5277 * C1848 +
           C5646 * C1854 + C5647 * C1849 -
           (C4585 * C2239 + C31234 * C2242) * C1855 -
           (C4585 * C2245 + C31234 * C2248) * C1850 +
           (C4585 * C6367 + C31234 * C6370) * C1856 +
           (C4585 * C6371 + C31234 * C6376) * C1851) *
              C4583 +
          (C4735 * C1852 + C4736 * C1847 - C5278 * C1853 - C5279 * C1848 +
           C5649 * C1854 + C5650 * C1849 -
           (C4585 * C6368 + C31234 * C6372) * C1855 -
           (C4585 * C6373 + C31234 * C6377) * C1850 +
           (C4585 * C6369 + C31234 * C6374) * C1856 +
           (C4585 * C6375 + C31234 * C6378) * C1851) *
              C4584) *
         C31480 * C31283 * C31256) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           ((C4585 * C419 + C31234 * C429) * C116 +
            (C4585 * C432 + C31234 * C449) * C31300) *
               C31468 * C9188 +
           ((C4585 * C420 + C31234 * C433) * C116 +
            (C4585 * C436 + C31234 * C450) * C31300) *
               C31468 * C9189) *
              C31283 * C108 -
          (((C4585 * C437 + C31234 * C451) * C31300 +
            (C4585 * C421 + C31234 * C434) * C116) *
               C31468 * C9189 +
           ((C4585 * C431 + C31234 * C448) * C31300 +
            (C4585 * C418 + C31234 * C428) * C116) *
               C31468 * C9188 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C31468 * C9187) *
              C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C31468 * C9187 +
           ((C4585 * C417 + C31234 * C427) * C116 +
            (C4585 * C430 + C31234 * C447) * C31300) *
               C31468 * C9188 +
           ((C4585 * C422 + C31234 * C435) * C116 +
            (C4585 * C438 + C31234 * C452) * C31300) *
               C31468 * C9189) *
              C31283 * C110 -
          (((C4585 * C442 + C31234 * C454) * C31300 +
            (C4585 * C424 + C31234 * C441) * C116) *
               C31468 * C9189 +
           ((C4585 * C440 + C31234 * C453) * C31300 +
            (C4585 * C423 + C31234 * C439) * C116) *
               C31468 * C9188 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C31468 * C9187) *
              C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C31468 * C9187 +
           ((C4585 * C425 + C31234 * C443) * C116 +
            (C4585 * C444 + C31234 * C455) * C31300) *
               C31468 * C9188 +
           ((C4585 * C426 + C31234 * C445) * C116 +
            (C4585 * C446 + C31234 * C456) * C31300) *
               C31468 * C9189) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            ((C4585 * C419 + C31234 * C429) * C116 +
             (C4585 * C432 + C31234 * C449) * C31300) *
                C31468 * C9188 +
            ((C4585 * C420 + C31234 * C433) * C116 +
             (C4585 * C436 + C31234 * C450) * C31300) *
                C31468 * C9189) *
               C31624 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31612 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C258 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31612 -
           (((C4585 * C437 + C31234 * C451) * C31300 +
             (C4585 * C421 + C31234 * C434) * C116) *
                C31468 * C9189 +
            ((C4585 * C431 + C31234 * C448) * C31300 +
             (C4585 * C418 + C31234 * C428) * C116) *
                C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31624 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            ((C4585 * C417 + C31234 * C427) * C116 +
             (C4585 * C430 + C31234 * C447) * C31300) *
                C31468 * C9188 +
            ((C4585 * C422 + C31234 * C435) * C116 +
             (C4585 * C438 + C31234 * C452) * C31300) *
                C31468 * C9189) *
               C31624 -
           (((C4585 * C1167 + C31234 * C1182) * C31300 +
             (C4585 * C1155 + C31234 * C1164) * C116) *
                C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31612 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
            C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
            C9451 * C416 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C414 + C9450 * C31625 - C9451 * C415 - C9452 * C31614 +
            (C4585 * C1860 + C31234 * C1869) * C416 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C31283 * C258 +
          ((C9453 * C415 -
            ((C4585 * C128 + C31234 * C139) * C31625 +
             (C4585 * C118 + C31234 * C125) * C414) +
            C9454 * C31614 - C9455 * C416 - C9456 * C31590) *
               C31468 * C9187 +
           (C9455 * C415 - (C9454 * C31625 + C9453 * C414) + C9456 * C31614 -
            C9457 * C416 - C9458 * C31590) *
               C31468 * C9188 +
           (C9457 * C415 - (C9456 * C31625 + C9455 * C414) + C9458 * C31614 -
            (C4585 * C1861 + C31234 * C1870) * C416 -
            (C4585 * C1873 + C31234 * C1879) * C31590) *
               C31468 * C9189) *
              C31283 * C259 +
          (((C4585 * C119 + C31234 * C126) * C414 +
            (C4585 * C129 + C31234 * C140) * C31625 - C9459 * C415 -
            C9460 * C31614 + C9461 * C416 + C9462 * C31590) *
               C31468 * C9187 +
           (C9459 * C414 + C9460 * C31625 - C9461 * C415 - C9462 * C31614 +
            C9463 * C416 + C9464 * C31590) *
               C31468 * C9188 +
           (C9461 * C414 + C9462 * C31625 - C9463 * C415 - C9464 * C31614 +
            (C4585 * C1862 + C31234 * C1871) * C416 +
            (C4585 * C1874 + C31234 * C1880) * C31590) *
               C31468 * C9189) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C947 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C948 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C31621 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C948 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C947 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C947 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C948 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
           (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
              C1015 -
          ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
           (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
           (C4752 + C4751) * C31468 * C9187) *
              C1016 +
          (C4769 * C31468 * C9187 +
           (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
           (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
              C1017 -
          ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
           (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
           C5480 * C31468 * C9187) *
              C1018 +
          (C5497 * C31468 * C9187 +
           (C6058 * C116 + C6059 * C31300) * C31468 * C9188 +
           ((C4585 * C5609 + C31234 * C5614) * C116 +
            (C4585 * C5615 + C31234 * C5618) * C31300) *
               C31468 * C9189) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
            C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
            C9451 * C416 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C414 + C9450 * C31625 - C9451 * C415 - C9452 * C31614 +
            (C4585 * C1860 + C31234 * C1869) * C416 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C947 +
          ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C31468 * C9187 +
           (C5646 * C415 - (C5277 * C31625 + C5276 * C414) + C5647 * C31614 -
            C6778 * C416 - C6779 * C31590) *
               C31468 * C9188 +
           (C6778 * C415 - (C5647 * C31625 + C5646 * C414) + C6779 * C31614 -
            (C4585 * C6367 + C31234 * C6370) * C416 -
            (C4585 * C6371 + C31234 * C6376) * C31590) *
               C31468 * C9189) *
              C948 +
          (C5666 * C31468 * C9187 +
           (C5278 * C414 + C5279 * C31625 - C5649 * C415 - C5650 * C31614 +
            C6780 * C416 + C6781 * C31590) *
               C31468 * C9188 +
           (C5649 * C414 + C5650 * C31625 - C6780 * C415 - C6781 * C31614 +
            (C4585 * C6369 + C31234 * C6374) * C416 +
            (C4585 * C6375 + C31234 * C6378) * C31590) *
               C31468 * C9189) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
            C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
            C9451 * C1674 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C1672 + C9450 * C1669 - C9451 * C1673 - C9452 * C1670 +
            (C4585 * C1860 + C31234 * C1869) * C1674 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C31283 * C31621 +
          ((C9453 * C1673 -
            ((C4585 * C128 + C31234 * C139) * C1669 +
             (C4585 * C118 + C31234 * C125) * C1672) +
            C9454 * C1670 - C9455 * C1674 - C9456 * C31590) *
               C31468 * C9187 +
           (C9455 * C1673 - (C9454 * C1669 + C9453 * C1672) + C9456 * C1670 -
            C9457 * C1674 - C9458 * C31590) *
               C31468 * C9188 +
           (C9457 * C1673 - (C9456 * C1669 + C9455 * C1672) + C9458 * C1670 -
            (C4585 * C1861 + C31234 * C1870) * C1674 -
            (C4585 * C1873 + C31234 * C1879) * C31590) *
               C31468 * C9189) *
              C31283 * C31608 +
          (((C4585 * C119 + C31234 * C126) * C1672 +
            (C4585 * C129 + C31234 * C140) * C1669 - C9459 * C1673 -
            C9460 * C1670 + C9461 * C1674 + C9462 * C31590) *
               C31468 * C9187 +
           (C9459 * C1672 + C9460 * C1669 - C9461 * C1673 - C9462 * C1670 +
            C9463 * C1674 + C9464 * C31590) *
               C31468 * C9188 +
           (C9461 * C1672 + C9462 * C1669 - C9463 * C1673 - C9464 * C1670 +
            (C4585 * C1862 + C31234 * C1871) * C1674 +
            (C4585 * C1874 + C31234 * C1880) * C31590) *
               C31468 * C9189) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
            C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
            C9451 * C1674 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C1672 + C9450 * C1669 - C9451 * C1673 - C9452 * C1670 +
            (C4585 * C1860 + C31234 * C1869) * C1674 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C31624 +
          ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C31468 * C9187 +
           (C5646 * C1673 - (C5277 * C1669 + C5276 * C1672) + C5647 * C1670 -
            C6778 * C1674 - C6779 * C31590) *
               C31468 * C9188 +
           (C6778 * C1673 - (C5647 * C1669 + C5646 * C1672) + C6779 * C1670 -
            (C4585 * C6367 + C31234 * C6370) * C1674 -
            (C4585 * C6371 + C31234 * C6376) * C31590) *
               C31468 * C9189) *
              C31612 +
          (C6305 * C31468 * C9187 +
           (C5278 * C1672 + C5279 * C1669 - C5649 * C1673 - C5650 * C1670 +
            C6780 * C1674 + C6781 * C31590) *
               C31468 * C9188 +
           (C5649 * C1672 + C5650 * C1669 - C6780 * C1673 - C6781 * C1670 +
            (C4585 * C6369 + C31234 * C6374) * C1674 +
            (C4585 * C6375 + C31234 * C6378) * C31590) *
               C31468 * C9189) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31234 * C124) * C1852 +
           (C4585 * C127 + C31234 * C138) * C1847 - C9447 * C1853 -
           C9448 * C1848 + C9449 * C1854 + C9450 * C1849 - C9451 * C1855 -
           C9452 * C1850 + C10747 * C1856 + C10748 * C1851) *
              C31468 * C9187 +
          (C9447 * C1852 + C9448 * C1847 - C9449 * C1853 - C9450 * C1848 +
           C9451 * C1854 + C9452 * C1849 - C10747 * C1855 - C10748 * C1850 +
           C10749 * C1856 + C10750 * C1851) *
              C31468 * C9188 +
          (C9449 * C1852 + C9450 * C1847 - C9451 * C1853 - C9452 * C1848 +
           C10747 * C1854 + C10748 * C1849 - C10749 * C1855 - C10750 * C1850 +
           (C4585 * C10731 + C31234 * C10734) * C1856 +
           (C4585 * C10735 + C31234 * C10737) * C1851) *
              C31468 * C9189) *
         C31283 * C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C665 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31559 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C666 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C31387) *
                  C31468 * C31480 * C31283 * C557 +
              ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                C115 * C423 + C103 * C439) *
                   C666 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31559 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C665) +
               (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                C115 * C440 + C103 * C453) *
                   C31387) *
                  C31468 * C31480 * C31283 * C558 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C665 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31559 -
               (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                C113 * C417 + C101 * C427) *
                   C666 -
               (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                C113 * C430 + C101 * C447) *
                   C31387) *
                  C31468 * C31480 * C31283 * C559 +
              ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
                C115 * C667 + C103 * C668) *
                   C666 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31559 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C665) +
               (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
                C115 * C669 + C103 * C670) *
                   C31387) *
                  C31468 * C31480 * C31283 * C31591) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C665 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31559 -
                (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                 C113 * C419 + C101 * C429) *
                    C666 -
                (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                 C113 * C432 + C101 * C449) *
                    C31387) *
                   C31468 * C31480 * C947 +
               ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C666 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C31559 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C665) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31387) *
                   C31468 * C31480 * C948 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C665 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31559 -
                (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                 C113 * C1160 + C101 * C1172) *
                    C666 -
                (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                 C113 * C1175 + C101 * C1187) *
                    C31387) *
                   C31468 * C31480 * C31587) *
                  C31544 +
              (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                 C115 * C423 + C103 * C439) *
                    C666 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31559 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C665) +
                (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                 C115 * C440 + C103 * C453) *
                    C31387) *
                   C31468 * C31480 * C947 +
               ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C665 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31559 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C666 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31387) *
                   C31468 * C31480 * C948 +
               ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
                 C115 * C1445 + C103 * C1446) *
                    C666 -
                ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                  C113 * C281 + C101 * C295) *
                     C31559 +
                 (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                  C113 * C265 + C101 * C278) *
                     C665) +
                (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
                 C115 * C1447 + C103 * C1448) *
                    C31387) *
                   C31468 * C31480 * C31587) *
                  C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2133 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2129 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C2134 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C2130 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C2135 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C2131 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C2136 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C31283 * C31544 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C2134 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C2129 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2133) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C2130 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C2135 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C2131 +
           (C113 * C1858 + C101 * C1864 + C114 * C1857 + C102 * C1863 +
            C115 * C2137 + C103 * C2138) *
               C2136 +
           (C113 * C1867 + C101 * C1876 + C114 * C1866 + C102 * C1875 +
            C115 * C2139 + C103 * C2140) *
               C31603) *
              C31468 * C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C665 + C4734 * C31559 -
            (C4585 * C817 + C31234 * C822) * C666 -
            (C4585 * C825 + C31234 * C832) * C31387) *
               C4583 +
           (C4735 * C665 + C4736 * C31559 -
            (C4585 * C1160 + C31234 * C1172) * C666 -
            (C4585 * C1175 + C31234 * C1187) * C31387) *
               C4584) *
              C31480 * C31283 * C557 +
          (((C4585 * C418 + C31234 * C428) * C666 -
            ((C4585 * C128 + C31234 * C139) * C31559 +
             (C4585 * C118 + C31234 * C125) * C665) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C666 -
            (C4740 * C31559 + C4739 * C665) +
            (C4585 * C826 + C31234 * C833) * C31387) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C666 -
            (C4742 * C31559 + C4741 * C665) +
            (C4585 * C1174 + C31234 * C1186) * C31387) *
               C4584) *
              C31480 * C31283 * C558 +
          (((C4585 * C119 + C31234 * C126) * C665 +
            (C4585 * C129 + C31234 * C140) * C31559 -
            (C4585 * C417 + C31234 * C427) * C666 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C665 + C4746 * C31559 -
            (C4585 * C819 + C31234 * C824) * C666 -
            (C4585 * C827 + C31234 * C834) * C31387) *
               C4583 +
           (C4747 * C665 + C4748 * C31559 -
            (C4585 * C1158 + C31234 * C1170) * C666 -
            (C4585 * C1173 + C31234 * C1185) * C31387) *
               C4584) *
              C31480 * C31283 * C559 +
          (((C4585 * C423 + C31234 * C439) * C666 -
            ((C4585 * C130 + C31234 * C141) * C31559 +
             (C4585 * C120 + C31234 * C131) * C665) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C666 -
            (C4989 * C31559 + C4988 * C665) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C666 -
            (C4991 * C31559 + C4990 * C665) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C947 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            (C5929 - (C5930 + C5931) + C5932) * C4584) *
               C31480 * C948 +
           (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
            (C5489 * C665 + C5490 * C31559 -
             (C4585 * C5608 + C31234 * C5612) * C666 -
             (C4585 * C5613 + C31234 * C5617) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C947 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C948 +
           (C5945 * C4582 + (C5946 - (C5935 + C5934) + C5947) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C666 -
             (C5774 * C31559 + C5775 * C665) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C2133 +
            (C4585 * C127 + C31234 * C138) * C2129 -
            (C4585 * C419 + C31234 * C429) * C2134 -
            (C4585 * C432 + C31234 * C449) * C2130 +
            (C4585 * C420 + C31234 * C433) * C2135 +
            (C4585 * C436 + C31234 * C450) * C2131 -
            (C4585 * C1859 + C31234 * C1865) * C2136 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C4733 * C2133 + C4734 * C2129 - C5276 * C2134 - C5277 * C2130 +
            C5646 * C2135 + C5647 * C2131 -
            (C4585 * C2239 + C31234 * C2242) * C2136 -
            (C4585 * C2245 + C31234 * C2248) * C31603) *
               C4583 +
           (C4735 * C2133 + C4736 * C2129 - C5278 * C2134 - C5279 * C2130 +
            C5649 * C2135 + C5650 * C2131 -
            (C4585 * C6368 + C31234 * C6372) * C2136 -
            (C4585 * C6373 + C31234 * C6377) * C31603) *
               C4584) *
              C31480 * C31283 * C31544 +
          (((C4585 * C418 + C31234 * C428) * C2134 -
            ((C4585 * C128 + C31234 * C139) * C2129 +
             (C4585 * C118 + C31234 * C125) * C2133) +
            (C4585 * C431 + C31234 * C448) * C2130 -
            (C4585 * C421 + C31234 * C434) * C2135 -
            (C4585 * C437 + C31234 * C451) * C2131 +
            (C4585 * C1858 + C31234 * C1864) * C2136 +
            (C4585 * C1867 + C31234 * C1876) * C31603) *
               C4582 +
           (C5280 * C2134 - (C4740 * C2129 + C4739 * C2133) + C5281 * C2130 -
            C6546 * C2135 - C6547 * C2131 +
            (C4585 * C2240 + C31234 * C2243) * C2136 +
            (C4585 * C2246 + C31234 * C2249) * C31603) *
               C4583 +
           (C5282 * C2134 - (C4742 * C2129 + C4741 * C2133) + C5283 * C2130 -
            C6548 * C2135 - C6549 * C2131 +
            (C4585 * C6651 + C31234 * C6652) * C2136 +
            (C4585 * C6653 + C31234 * C6654) * C31603) *
               C4584) *
              C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
               C31468 * C9189) *
              C31283 * C557 +
          ((C9453 * C666 -
            ((C4585 * C128 + C31234 * C139) * C31559 +
             (C4585 * C118 + C31234 * C125) * C665) +
            C9454 * C31387) *
               C31468 * C9187 +
           (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
               C31468 * C9188 +
           (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
               C31468 * C9189) *
              C31283 * C558 +
          (((C4585 * C119 + C31234 * C126) * C665 +
            (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
            C9460 * C31387) *
               C31468 * C9187 +
           (C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
               C31468 * C9188 +
           (C9461 * C665 + C9462 * C31559 - C9463 * C666 - C9464 * C31387) *
               C31468 * C9189) *
              C31283 * C559 +
          ((C9669 * C666 -
            ((C4585 * C130 + C31234 * C141) * C31559 +
             (C4585 * C120 + C31234 * C131) * C665) +
            C9670 * C31387) *
               C31468 * C9187 +
           (C9671 * C666 - (C9670 * C31559 + C9669 * C665) + C9672 * C31387) *
               C31468 * C9188 +
           ((C4585 * C2137 + C31234 * C2138) * C666 -
            (C9672 * C31559 + C9671 * C665) +
            (C4585 * C2139 + C31234 * C2140) * C31387) *
               C31468 * C9189) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
                C31468 * C9189) *
               C947 +
           ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
            (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
                C31468 * C9189) *
               C948 +
           (C5944 * C31468 * C9187 +
            (C5278 * C665 + C5279 * C31559 - C5649 * C666 - C5650 * C31387) *
                C31468 * C9188 +
            (C5649 * C665 + C5650 * C31559 - C6780 * C666 - C6781 * C31387) *
                C31468 * C9189) *
               C31587) *
              C31544 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
                C31468 * C9189) *
               C947 +
           ((C5255 + C5254 - C5292 - C5293) * C31468 * C9187 +
            (C5280 * C665 + C5281 * C31559 - C6546 * C666 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C665 + C6547 * C31559 -
             (C4585 * C2240 + C31234 * C2243) * C666 -
             (C4585 * C2246 + C31234 * C2249) * C31387) *
                C31468 * C9189) *
               C948 +
           (C5945 * C31468 * C9187 +
            (C6548 * C666 - (C5283 * C31559 + C5282 * C665) + C6549 * C31387) *
                C31468 * C9188 +
            ((C4585 * C6651 + C31234 * C6652) * C666 -
             (C6549 * C31559 + C6548 * C665) +
             (C4585 * C6653 + C31234 * C6654) * C31387) *
                C31468 * C9189) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C2133 +
            (C4585 * C127 + C31234 * C138) * C2129 - C9447 * C2134 -
            C9448 * C2130 + C9449 * C2135 + C9450 * C2131 - C9451 * C2136 -
            C9452 * C31603) *
               C31468 * C9187 +
           (C9447 * C2133 + C9448 * C2129 - C9449 * C2134 - C9450 * C2130 +
            C9451 * C2135 + C9452 * C2131 - C10747 * C2136 - C10748 * C31603) *
               C31468 * C9188 +
           (C9449 * C2133 + C9450 * C2129 - C9451 * C2134 - C9452 * C2130 +
            C10747 * C2135 + C10748 * C2131 - C10749 * C2136 -
            C10750 * C31603) *
               C31468 * C9189) *
              C31283 * C31544 +
          ((C9453 * C2134 -
            ((C4585 * C128 + C31234 * C139) * C2129 +
             (C4585 * C118 + C31234 * C125) * C2133) +
            C9454 * C2130 - C9455 * C2135 - C9456 * C2131 + C9457 * C2136 +
            C9458 * C31603) *
               C31468 * C9187 +
           (C9455 * C2134 - (C9454 * C2129 + C9453 * C2133) + C9456 * C2130 -
            C9457 * C2135 - C9458 * C2131 + C11013 * C2136 + C11014 * C31603) *
               C31468 * C9188 +
           (C9457 * C2134 - (C9456 * C2129 + C9455 * C2133) + C9458 * C2130 -
            C11013 * C2135 - C11014 * C2131 +
            (C4585 * C11004 + C31234 * C11005) * C2136 +
            (C4585 * C11006 + C31234 * C11007) * C31603) *
               C31468 * C9189) *
              C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C31283 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31300 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31468 * C31480 * C31283 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31300) *
              C31468 * C31480 * C31283 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31300 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31468 * C31480 * C31283 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31300) *
              C31468 * C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31612 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31624 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1672 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1669 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C1673 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C1670 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C1674 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31283 * C31621 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C1673 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C1669 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C1672) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C1670 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C1674 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31590) *
              C31468 * C31480 * C31283 * C31608 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C1672 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C1669 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C1673 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C1670 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C1674 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C31590) *
              C31468 * C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1672 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1669 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C1673 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C1670 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C1674 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31624 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C1673 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C1669 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C1672) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C1670 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C1674 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31590) *
              C31468 * C31480 * C31612 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C1672 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C1669 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C1673 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C1670 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C1674 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C31590) *
              C31468 * C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C1672 + C4734 * C1669 - C5276 * C1673 - C5277 * C1670 +
            C5646 * C1674 + C5647 * C31590) *
               C4583 +
           (C4735 * C1672 + C4736 * C1669 - C5278 * C1673 - C5279 * C1670 +
            C5649 * C1674 + C5650 * C31590) *
               C4584) *
              C31480 * C31283 * C31621 +
          (((C4585 * C418 + C31234 * C428) * C1673 -
            ((C4585 * C128 + C31234 * C139) * C1669 +
             (C4585 * C118 + C31234 * C125) * C1672) +
            (C4585 * C431 + C31234 * C448) * C1670 -
            (C4585 * C421 + C31234 * C434) * C1674 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           (C5280 * C1673 - (C4740 * C1669 + C4739 * C1672) + C5281 * C1670 -
            (C4585 * C1156 + C31234 * C1165) * C1674 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           (C5282 * C1673 - (C4742 * C1669 + C4741 * C1672) + C5283 * C1670 -
            (C4585 * C1162 + C31234 * C1177) * C1674 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C31608 +
          (((C4585 * C119 + C31234 * C126) * C1672 +
            (C4585 * C129 + C31234 * C140) * C1669 -
            (C4585 * C417 + C31234 * C427) * C1673 -
            (C4585 * C430 + C31234 * C447) * C1670 +
            (C4585 * C422 + C31234 * C435) * C1674 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C1672 + C4746 * C1669 - C5284 * C1673 - C5285 * C1670 +
            (C4585 * C1155 + C31234 * C1164) * C1674 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C1672 + C4748 * C1669 - C5286 * C1673 - C5287 * C1670 +
            (C4585 * C1163 + C31234 * C1178) * C1674 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C4583 +
           C6305 * C4584) *
              C31480 * C31624 +
          ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C4582 +
           (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C4583 +
           (C6295 - (C6296 + C6297) + C6298 - C6299 - C6300) * C4584) *
              C31480 * C31612 +
          (C6305 * C4582 +
           (C6297 + C6296 - C6295 - C6298 + C6299 + C6300) * C4583 +
           (C5489 * C1672 + C5490 * C1669 - C6058 * C1673 - C6059 * C1670 +
            (C4585 * C5609 + C31234 * C5614) * C1674 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           ((C4585 * C419 + C31234 * C429) * C116 +
            (C4585 * C432 + C31234 * C449) * C31300) *
               C31468 * C9188 +
           ((C4585 * C420 + C31234 * C433) * C116 +
            (C4585 * C436 + C31234 * C450) * C31300) *
               C31468 * C9189) *
              C31283 * C108 -
          (((C4585 * C437 + C31234 * C451) * C31300 +
            (C4585 * C421 + C31234 * C434) * C116) *
               C31468 * C9189 +
           ((C4585 * C431 + C31234 * C448) * C31300 +
            (C4585 * C418 + C31234 * C428) * C116) *
               C31468 * C9188 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C31468 * C9187) *
              C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C31468 * C9187 +
           ((C4585 * C417 + C31234 * C427) * C116 +
            (C4585 * C430 + C31234 * C447) * C31300) *
               C31468 * C9188 +
           ((C4585 * C422 + C31234 * C435) * C116 +
            (C4585 * C438 + C31234 * C452) * C31300) *
               C31468 * C9189) *
              C31283 * C110 -
          (((C4585 * C442 + C31234 * C454) * C31300 +
            (C4585 * C424 + C31234 * C441) * C116) *
               C31468 * C9189 +
           ((C4585 * C440 + C31234 * C453) * C31300 +
            (C4585 * C423 + C31234 * C439) * C116) *
               C31468 * C9188 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C31468 * C9187) *
              C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C31468 * C9187 +
           ((C4585 * C425 + C31234 * C443) * C116 +
            (C4585 * C444 + C31234 * C455) * C31300) *
               C31468 * C9188 +
           ((C4585 * C426 + C31234 * C445) * C116 +
            (C4585 * C446 + C31234 * C456) * C31300) *
               C31468 * C9189) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            ((C4585 * C419 + C31234 * C429) * C116 +
             (C4585 * C432 + C31234 * C449) * C31300) *
                C31468 * C9188 +
            ((C4585 * C420 + C31234 * C433) * C116 +
             (C4585 * C436 + C31234 * C450) * C31300) *
                C31468 * C9189) *
               C31624 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31612 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C258 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31612 -
           (((C4585 * C437 + C31234 * C451) * C31300 +
             (C4585 * C421 + C31234 * C434) * C116) *
                C31468 * C9189 +
            ((C4585 * C431 + C31234 * C448) * C31300 +
             (C4585 * C418 + C31234 * C428) * C116) *
                C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31624 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            ((C4585 * C417 + C31234 * C427) * C116 +
             (C4585 * C430 + C31234 * C447) * C31300) *
                C31468 * C9188 +
            ((C4585 * C422 + C31234 * C435) * C116 +
             (C4585 * C438 + C31234 * C452) * C31300) *
                C31468 * C9189) *
               C31624 -
           (((C4585 * C1167 + C31234 * C1182) * C31300 +
             (C4585 * C1155 + C31234 * C1164) * C116) *
                C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31612 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C947 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C948 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C31621 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C948 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C947 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C947 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C948 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
           (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
              C1015 -
          ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
           (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
           (C4752 + C4751) * C31468 * C9187) *
              C1016 +
          (C4769 * C31468 * C9187 +
           (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
           (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
              C1017 -
          ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
           (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
           C5480 * C31468 * C9187) *
              C1018 +
          (C5497 * C31468 * C9187 +
           (C6058 * C116 + C6059 * C31300) * C31468 * C9188 +
           ((C4585 * C5609 + C31234 * C5614) * C116 +
            (C4585 * C5615 + C31234 * C5618) * C31300) *
               C31468 * C9189) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
            C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
            C9451 * C1674 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C1672 + C9450 * C1669 - C9451 * C1673 - C9452 * C1670 +
            (C4585 * C1860 + C31234 * C1869) * C1674 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C31283 * C31621 +
          ((C9453 * C1673 -
            ((C4585 * C128 + C31234 * C139) * C1669 +
             (C4585 * C118 + C31234 * C125) * C1672) +
            C9454 * C1670 - C9455 * C1674 - C9456 * C31590) *
               C31468 * C9187 +
           (C9455 * C1673 - (C9454 * C1669 + C9453 * C1672) + C9456 * C1670 -
            C9457 * C1674 - C9458 * C31590) *
               C31468 * C9188 +
           (C9457 * C1673 - (C9456 * C1669 + C9455 * C1672) + C9458 * C1670 -
            (C4585 * C1861 + C31234 * C1870) * C1674 -
            (C4585 * C1873 + C31234 * C1879) * C31590) *
               C31468 * C9189) *
              C31283 * C31608 +
          (((C4585 * C119 + C31234 * C126) * C1672 +
            (C4585 * C129 + C31234 * C140) * C1669 - C9459 * C1673 -
            C9460 * C1670 + C9461 * C1674 + C9462 * C31590) *
               C31468 * C9187 +
           (C9459 * C1672 + C9460 * C1669 - C9461 * C1673 - C9462 * C1670 +
            C9463 * C1674 + C9464 * C31590) *
               C31468 * C9188 +
           (C9461 * C1672 + C9462 * C1669 - C9463 * C1673 - C9464 * C1670 +
            (C4585 * C1862 + C31234 * C1871) * C1674 +
            (C4585 * C1874 + C31234 * C1880) * C31590) *
               C31468 * C9189) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 - C9447 * C1673 -
            C9448 * C1670 + C9449 * C1674 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C1672 + C9448 * C1669 - C9449 * C1673 - C9450 * C1670 +
            C9451 * C1674 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C1672 + C9450 * C1669 - C9451 * C1673 - C9452 * C1670 +
            (C4585 * C1860 + C31234 * C1869) * C1674 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C31624 +
          ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C31468 * C9187 +
           (C5646 * C1673 - (C5277 * C1669 + C5276 * C1672) + C5647 * C1670 -
            C6778 * C1674 - C6779 * C31590) *
               C31468 * C9188 +
           (C6778 * C1673 - (C5647 * C1669 + C5646 * C1672) + C6779 * C1670 -
            (C4585 * C6367 + C31234 * C6370) * C1674 -
            (C4585 * C6371 + C31234 * C6376) * C31590) *
               C31468 * C9189) *
              C31612 +
          (C6305 * C31468 * C9187 +
           (C5278 * C1672 + C5279 * C1669 - C5649 * C1673 - C5650 * C1670 +
            C6780 * C1674 + C6781 * C31590) *
               C31468 * C9188 +
           (C5649 * C1672 + C5650 * C1669 - C6780 * C1673 - C6781 * C1670 +
            (C4585 * C6369 + C31234 * C6374) * C1674 +
            (C4585 * C6375 + C31234 * C6378) * C31590) *
               C31468 * C9189) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31558 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31345) *
              C31261 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31558 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31345) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 -
             (C4585 * C417 + C31234 * C427) * C3114 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C8060 + C8061 - C8062 - C8063) * C4583 +
            (C8064 + C8065 - C8066 - C8067) * C4584) *
               C31480 * C31558 +
           ((C8062 - (C8061 + C8060) + C8063) * C4582 +
            (C8066 - (C8065 + C8064) + C8067) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C3114 -
             (C4749 * C3111 + C4750 * C3113) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31261 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31269 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C3113 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C3111 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C3114 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C3114 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C3111 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C3113) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
            (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31261 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C7800 + C7799 - C7798 - C7801) * C31468 * C9187 +
            (C5280 * C3113 + C5281 * C3111 - C6546 * C3114 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C3113 + C6547 * C3111 - C10905 * C3114 - C10906 * C31387) *
                C31468 * C9189) *
               C31345) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
             C9460 * C31387) *
                C31468 * C9187 +
            (C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
                C31468 * C9188 +
            (C9461 * C3113 + C9462 * C3111 - C9463 * C3114 - C9464 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C8062 - (C8061 + C8060) + C8063) * C31468 * C9187 +
            (C9823 * C3114 - (C5285 * C3111 + C5284 * C3113) + C9824 * C31387) *
                C31468 * C9188 +
            ((C4585 * C2241 + C31234 * C2244) * C3114 -
             (C9824 * C3111 + C9823 * C3113) +
             (C4585 * C2247 + C31234 * C2250) * C31387) *
                C31468 * C9189) *
               C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 -
             (C4585 * C419 + C31234 * C429) * C30312 -
             (C4585 * C432 + C31234 * C449) * C31390 +
             (C4585 * C420 + C31234 * C433) * C30326 +
             (C4585 * C436 + C31234 * C450) * C3625) *
                C4582 +
            (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C4583 +
            (C8330 + C8331 - C8332 - C8333 + C8334 + C8335) * C4584) *
               C31480 * C31558 +
           ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C4582 +
            (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C4583 +
            (C5651 * C30312 - (C4737 * C31383 + C4738 * C30320) +
             C5652 * C31390 - C5653 * C30326 - C5654 * C3625) *
                C4584) *
               C31480 * C31345) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             (C4585 * C431 + C31234 * C448) * C31390 -
             (C4585 * C421 + C31234 * C434) * C30326 -
             (C4585 * C437 + C31234 * C451) * C3625) *
                C4582 +
            (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C4583 +
            (C8342 - (C8343 + C8344) + C8345 - C8346 - C8347) * C4584) *
               C31480 * C31558 +
           ((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C4582 +
            (C8344 + C8343 - C8342 - C8345 + C8346 + C8347) * C4583 +
            (C4743 * C30320 + C4744 * C31383 - C5942 * C30312 - C5943 * C31390 +
             (C4585 * C6525 + C31234 * C6526) * C30326 +
             (C4585 * C6527 + C31234 * C6528) * C3625) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30320 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31383 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C30312 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31390 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C30326 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C3625) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30312 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31383 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C30320) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31390 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C30326 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C3625) *
               C31468 * C31480 * C31345) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C30312 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31383 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30320) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31390 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C30326 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C3625) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C30320 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31383 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30312 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31390 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C30326 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C3625) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
             C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                C31468 * C9187 +
            (C9447 * C30320 + C9448 * C31383 - C9449 * C30312 - C9450 * C31390 +
             C9451 * C30326 + C9452 * C3625) *
                C31468 * C9188 +
            (C9449 * C30320 + C9450 * C31383 - C9451 * C30312 - C9452 * C31390 +
             C10747 * C30326 + C10748 * C3625) *
                C31468 * C9189) *
               C31558 +
           ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C31468 * C9187 +
            (C5646 * C30312 - (C5277 * C31383 + C5276 * C30320) +
             C5647 * C31390 - C6778 * C30326 - C6779 * C3625) *
                C31468 * C9188 +
            (C6778 * C30312 - (C5647 * C31383 + C5646 * C30320) +
             C6779 * C31390 - C11121 * C30326 - C11122 * C3625) *
                C31468 * C9189) *
               C31345) *
              C2457 +
          (((C9453 * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             C9454 * C31390 - C9455 * C30326 - C9456 * C3625) *
                C31468 * C9187 +
            (C9455 * C30312 - (C9454 * C31383 + C9453 * C30320) +
             C9456 * C31390 - C9457 * C30326 - C9458 * C3625) *
                C31468 * C9188 +
            (C9457 * C30312 - (C9456 * C31383 + C9455 * C30320) +
             C9458 * C31390 - C11013 * C30326 - C11014 * C3625) *
                C31468 * C9189) *
               C31558 +
           ((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C31468 * C9187 +
            (C5280 * C30320 + C5281 * C31383 - C6546 * C30312 - C6547 * C31390 +
             C10905 * C30326 + C10906 * C3625) *
                C31468 * C9188 +
            (C6546 * C30320 + C6547 * C31383 - C10905 * C30312 -
             C10906 * C31390 + (C4585 * C10896 + C31234 * C10897) * C30326 +
             (C4585 * C10898 + C31234 * C10899) * C3625) *
                C31468 * C9189) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C3113 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C3111 -
               (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                C113 * C419 + C101 * C429) *
                   C3114 -
               (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                C113 * C432 + C101 * C449) *
                   C31387) *
                  C31468 * C31480 * C31283 * C31630 +
              ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                C115 * C423 + C103 * C439) *
                   C3114 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C3111 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C3113) +
               (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                C115 * C440 + C103 * C453) *
                   C31387) *
                  C31468 * C31480 * C31283 * C31623 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C3113 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C3111 -
               (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                C113 * C417 + C101 * C427) *
                   C3114 -
               (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                C113 * C430 + C101 * C447) *
                   C31387) *
                  C31468 * C31480 * C31283 * C31610 +
              ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
                C115 * C667 + C103 * C668) *
                   C3114 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C3111 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C3113) +
               (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
                C115 * C669 + C103 * C670) *
                   C31387) *
                  C31468 * C31480 * C31283 * C31591) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C3113 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C3111 -
                (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                 C113 * C419 + C101 * C429) *
                    C3114 -
                (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                 C113 * C432 + C101 * C449) *
                    C31387) *
                   C31468 * C31480 * C31624 +
               ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                 C115 * C819 + C103 * C824) *
                    C3114 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C3111 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C3113) +
                (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                 C115 * C827 + C103 * C834) *
                    C31387) *
                   C31468 * C31480 * C31612 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C3113 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C3111 -
                (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                 C113 * C1160 + C101 * C1172) *
                    C3114 -
                (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                 C113 * C1175 + C101 * C1187) *
                    C31387) *
                   C31468 * C31480 * C31587) *
                  C2457 +
              (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                 C115 * C423 + C103 * C439) *
                    C3114 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C3111 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C3113) +
                (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                 C115 * C440 + C103 * C453) *
                    C31387) *
                   C31468 * C31480 * C31624 +
               ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C3113 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C3111 -
                (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                 C113 * C818 + C101 * C823) *
                    C3114 -
                (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                 C113 * C826 + C101 * C833) *
                    C31387) *
                   C31468 * C31480 * C31612 +
               ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
                 C115 * C1445 + C103 * C1446) *
                    C3114 -
                ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                  C113 * C281 + C101 * C295) *
                     C3111 +
                 (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                  C113 * C265 + C101 * C278) *
                     C3113) +
                (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
                 C115 * C1447 + C103 * C1448) *
                    C31387) *
                   C31468 * C31480 * C31587) *
                  C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3363 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31632 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3364 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31629 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C3365 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31620 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C3366 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C31283 * C2457 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C3364 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31632 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C3363) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31629 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C3365 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31620 +
           (C113 * C1858 + C101 * C1864 + C114 * C1857 + C102 * C1863 +
            C115 * C2137 + C103 * C2138) *
               C3366 +
           (C113 * C1867 + C101 * C1876 + C114 * C1866 + C102 * C1875 +
            C115 * C2139 + C103 * C2140) *
               C31603) *
              C31468 * C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C3113 + C4734 * C3111 - C5276 * C3114 - C5277 * C31387) *
               C4583 +
           (C4735 * C3113 + C4736 * C3111 - C5278 * C3114 - C5279 * C31387) *
               C4584) *
              C31480 * C31283 * C31630 +
          (((C4585 * C418 + C31234 * C428) * C3114 -
            ((C4585 * C128 + C31234 * C139) * C3111 +
             (C4585 * C118 + C31234 * C125) * C3113) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           (C5280 * C3114 - (C4740 * C3111 + C4739 * C3113) + C5281 * C31387) *
               C4583 +
           (C5282 * C3114 - (C4742 * C3111 + C4741 * C3113) + C5283 * C31387) *
               C4584) *
              C31480 * C31283 * C31623 +
          (((C4585 * C119 + C31234 * C126) * C3113 +
            (C4585 * C129 + C31234 * C140) * C3111 -
            (C4585 * C417 + C31234 * C427) * C3114 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C3113 + C4746 * C3111 - C5284 * C3114 - C5285 * C31387) *
               C4583 +
           (C4747 * C3113 + C4748 * C3111 - C5286 * C3114 - C5287 * C31387) *
               C4584) *
              C31480 * C31283 * C31610 +
          (((C4585 * C423 + C31234 * C439) * C3114 -
            ((C4585 * C130 + C31234 * C141) * C3111 +
             (C4585 * C120 + C31234 * C131) * C3113) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C3114 -
            (C4989 * C3111 + C4988 * C3113) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C3114 -
            (C4991 * C3111 + C4990 * C3113) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31624 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31612 +
           (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
            (C5489 * C3113 + C5490 * C3111 - C6058 * C3114 - C6059 * C31387) *
                C4584) *
               C31480 * C31587) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31624 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31612 +
           (C7815 * C4582 + (C7808 - (C7807 + C7806) + C7809) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C3114 -
             (C5774 * C3111 + C5775 * C3113) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3363 +
            (C4585 * C127 + C31234 * C138) * C31632 -
            (C4585 * C419 + C31234 * C429) * C3364 -
            (C4585 * C432 + C31234 * C449) * C31629 +
            (C4585 * C420 + C31234 * C433) * C3365 +
            (C4585 * C436 + C31234 * C450) * C31620 -
            (C4585 * C1859 + C31234 * C1865) * C3366 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C4733 * C3363 + C4734 * C31632 - C5276 * C3364 - C5277 * C31629 +
            C5646 * C3365 + C5647 * C31620 - C6778 * C3366 - C6779 * C31603) *
               C4583 +
           (C4735 * C3363 + C4736 * C31632 - C5278 * C3364 - C5279 * C31629 +
            C5649 * C3365 + C5650 * C31620 - C6780 * C3366 - C6781 * C31603) *
               C4584) *
              C31480 * C31283 * C2457 +
          (((C4585 * C418 + C31234 * C428) * C3364 -
            ((C4585 * C128 + C31234 * C139) * C31632 +
             (C4585 * C118 + C31234 * C125) * C3363) +
            (C4585 * C431 + C31234 * C448) * C31629 -
            (C4585 * C421 + C31234 * C434) * C3365 -
            (C4585 * C437 + C31234 * C451) * C31620 +
            (C4585 * C1858 + C31234 * C1864) * C3366 +
            (C4585 * C1867 + C31234 * C1876) * C31603) *
               C4582 +
           (C5280 * C3364 - (C4740 * C31632 + C4739 * C3363) + C5281 * C31629 -
            C6546 * C3365 - C6547 * C31620 +
            (C4585 * C2240 + C31234 * C2243) * C3366 +
            (C4585 * C2246 + C31234 * C2249) * C31603) *
               C4583 +
           (C5282 * C3364 - (C4742 * C31632 + C4741 * C3363) + C5283 * C31629 -
            C6548 * C3365 - C6549 * C31620 +
            (C4585 * C6651 + C31234 * C6652) * C3366 +
            (C4585 * C6653 + C31234 * C6654) * C31603) *
               C4584) *
              C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
               C31468 * C9189) *
              C31283 * C31630 +
          ((C9453 * C3114 -
            ((C4585 * C128 + C31234 * C139) * C3111 +
             (C4585 * C118 + C31234 * C125) * C3113) +
            C9454 * C31387) *
               C31468 * C9187 +
           (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
               C31468 * C9188 +
           (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
               C31468 * C9189) *
              C31283 * C31623 +
          (((C4585 * C119 + C31234 * C126) * C3113 +
            (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
            C9460 * C31387) *
               C31468 * C9187 +
           (C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
               C31468 * C9188 +
           (C9461 * C3113 + C9462 * C3111 - C9463 * C3114 - C9464 * C31387) *
               C31468 * C9189) *
              C31283 * C31610 +
          ((C9669 * C3114 -
            ((C4585 * C130 + C31234 * C141) * C3111 +
             (C4585 * C120 + C31234 * C131) * C3113) +
            C9670 * C31387) *
               C31468 * C9187 +
           (C9671 * C3114 - (C9670 * C3111 + C9669 * C3113) + C9672 * C31387) *
               C31468 * C9188 +
           ((C4585 * C2137 + C31234 * C2138) * C3114 -
            (C9672 * C3111 + C9671 * C3113) +
            (C4585 * C2139 + C31234 * C2140) * C31387) *
               C31468 * C9189) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
                C31468 * C9189) *
               C31624 +
           ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
            (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
                C31468 * C9189) *
               C31612 +
           (C7814 * C31468 * C9187 +
            (C5278 * C3113 + C5279 * C3111 - C5649 * C3114 - C5650 * C31387) *
                C31468 * C9188 +
            (C5649 * C3113 + C5650 * C3111 - C6780 * C3114 - C6781 * C31387) *
                C31468 * C9189) *
               C31587) *
              C2457 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
                C31468 * C9189) *
               C31624 +
           ((C7800 + C7799 - C7798 - C7801) * C31468 * C9187 +
            (C5280 * C3113 + C5281 * C3111 - C6546 * C3114 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C3113 + C6547 * C3111 - C10905 * C3114 - C10906 * C31387) *
                C31468 * C9189) *
               C31612 +
           (C7815 * C31468 * C9187 +
            (C6548 * C3114 - (C5283 * C3111 + C5282 * C3113) + C6549 * C31387) *
                C31468 * C9188 +
            ((C4585 * C6651 + C31234 * C6652) * C3114 -
             (C6549 * C3111 + C6548 * C3113) +
             (C4585 * C6653 + C31234 * C6654) * C31387) *
                C31468 * C9189) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3363 +
            (C4585 * C127 + C31234 * C138) * C31632 - C9447 * C3364 -
            C9448 * C31629 + C9449 * C3365 + C9450 * C31620 - C9451 * C3366 -
            C9452 * C31603) *
               C31468 * C9187 +
           (C9447 * C3363 + C9448 * C31632 - C9449 * C3364 - C9450 * C31629 +
            C9451 * C3365 + C9452 * C31620 - C10747 * C3366 - C10748 * C31603) *
               C31468 * C9188 +
           (C9449 * C3363 + C9450 * C31632 - C9451 * C3364 - C9452 * C31629 +
            C10747 * C3365 + C10748 * C31620 - C10749 * C3366 -
            C10750 * C31603) *
               C31468 * C9189) *
              C31283 * C2457 +
          ((C9453 * C3364 -
            ((C4585 * C128 + C31234 * C139) * C31632 +
             (C4585 * C118 + C31234 * C125) * C3363) +
            C9454 * C31629 - C9455 * C3365 - C9456 * C31620 + C9457 * C3366 +
            C9458 * C31603) *
               C31468 * C9187 +
           (C9455 * C3364 - (C9454 * C31632 + C9453 * C3363) + C9456 * C31629 -
            C9457 * C3365 - C9458 * C31620 + C11013 * C3366 + C11014 * C31603) *
               C31468 * C9188 +
           (C9457 * C3364 - (C9456 * C31632 + C9455 * C3363) + C9458 * C31629 -
            C11013 * C3365 - C11014 * C31620 +
            (C4585 * C11004 + C31234 * C11005) * C3366 +
            (C4585 * C11006 + C31234 * C11007) * C31603) *
               C31468 * C9189) *
              C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4585 * C117 + C31234 * C124) * C30320 +
                    (C4585 * C127 + C31234 * C138) * C31383 -
                    (C4585 * C419 + C31234 * C429) * C30312 -
                    (C4585 * C432 + C31234 * C449) * C31390 +
                    (C4585 * C420 + C31234 * C433) * C30326 +
                    (C4585 * C436 + C31234 * C450) * C3625) *
                       C4582 +
                   (C4733 * C30320 + C4734 * C31383 - C5276 * C30312 -
                    C5277 * C31390 + C5646 * C30326 + C5647 * C3625) *
                       C4583 +
                   (C4735 * C30320 + C4736 * C31383 - C5278 * C30312 -
                    C5279 * C31390 + C5649 * C30326 + C5650 * C3625) *
                       C4584) *
                      C31480 * C31283 * C31261 +
                  (((C4585 * C418 + C31234 * C428) * C30312 -
                    ((C4585 * C128 + C31234 * C139) * C31383 +
                     (C4585 * C118 + C31234 * C125) * C30320) +
                    (C4585 * C431 + C31234 * C448) * C31390 -
                    (C4585 * C421 + C31234 * C434) * C30326 -
                    (C4585 * C437 + C31234 * C451) * C3625) *
                       C4582 +
                   (C5280 * C30312 - (C4740 * C31383 + C4739 * C30320) +
                    C5281 * C31390 - C6546 * C30326 - C6547 * C3625) *
                       C4583 +
                   (C5282 * C30312 - (C4742 * C31383 + C4741 * C30320) +
                    C5283 * C31390 - C6548 * C30326 - C6549 * C3625) *
                       C4584) *
                      C31480 * C31283 * C31269 +
                  (((C4585 * C119 + C31234 * C126) * C30320 +
                    (C4585 * C129 + C31234 * C140) * C31383 -
                    (C4585 * C417 + C31234 * C427) * C30312 -
                    (C4585 * C430 + C31234 * C447) * C31390 +
                    (C4585 * C422 + C31234 * C435) * C30326 +
                    (C4585 * C438 + C31234 * C452) * C3625) *
                       C4582 +
                   (C4745 * C30320 + C4746 * C31383 - C5284 * C30312 -
                    C5285 * C31390 + (C4585 * C1155 + C31234 * C1164) * C30326 +
                    (C4585 * C1167 + C31234 * C1182) * C3625) *
                       C4583 +
                   (C4747 * C30320 + C4748 * C31383 - C5286 * C30312 -
                    C5287 * C31390 + (C4585 * C1163 + C31234 * C1178) * C30326 +
                    (C4585 * C1181 + C31234 * C1190) * C3625) *
                       C4584) *
                      C31480 * C31283 * C2720)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                    C115 * C119 + C103 * C126) *
                       C30320 +
                   (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                    C115 * C129 + C103 * C140) *
                       C31383 -
                   (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                    C113 * C419 + C101 * C429) *
                       C30312 -
                   (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                    C113 * C432 + C101 * C449) *
                       C31390 +
                   (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
                    C115 * C422 + C103 * C435) *
                       C30326 +
                   (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
                    C115 * C438 + C103 * C452) *
                       C3625) *
                      C31468 * C31480 * C31283 * C31261 +
                  ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                    C115 * C423 + C103 * C439) *
                       C30312 -
                   ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                     C113 * C128 + C101 * C139) *
                        C31383 +
                    (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                     C113 * C118 + C101 * C125) *
                        C30320) +
                   (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                    C115 * C440 + C103 * C453) *
                       C31390 -
                   (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
                    C113 * C421 + C101 * C434) *
                       C30326 -
                   (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
                    C113 * C437 + C101 * C451) *
                       C3625) *
                      C31468 * C31480 * C31283 * C31269 +
                  ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                    C115 * C121 + C103 * C132) *
                       C30320 +
                   (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                    C115 * C133 + C103 * C142) *
                       C31383 -
                   (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                    C113 * C417 + C101 * C427) *
                       C30312 -
                   (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                    C113 * C430 + C101 * C447) *
                       C31390 +
                   (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
                    C115 * C426 + C103 * C445) *
                       C30326 +
                   (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
                    C115 * C446 + C103 * C456) *
                       C3625) *
                      C31468 * C31480 * C31283 * C2720)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4585 * C117 + C31234 * C124) * C30320 +
                    (C4585 * C127 + C31234 * C138) * C31383 - C9447 * C30312 -
                    C9448 * C31390 + C9449 * C30326 + C9450 * C3625) *
                       C31468 * C9187 +
                   (C9447 * C30320 + C9448 * C31383 - C9449 * C30312 -
                    C9450 * C31390 + C9451 * C30326 + C9452 * C3625) *
                       C31468 * C9188 +
                   (C9449 * C30320 + C9450 * C31383 - C9451 * C30312 -
                    C9452 * C31390 + C10747 * C30326 + C10748 * C3625) *
                       C31468 * C9189) *
                      C31283 * C31261 +
                  ((C9453 * C30312 -
                    ((C4585 * C128 + C31234 * C139) * C31383 +
                     (C4585 * C118 + C31234 * C125) * C30320) +
                    C9454 * C31390 - C9455 * C30326 - C9456 * C3625) *
                       C31468 * C9187 +
                   (C9455 * C30312 - (C9454 * C31383 + C9453 * C30320) +
                    C9456 * C31390 - C9457 * C30326 - C9458 * C3625) *
                       C31468 * C9188 +
                   (C9457 * C30312 - (C9456 * C31383 + C9455 * C30320) +
                    C9458 * C31390 - C11013 * C30326 - C11014 * C3625) *
                       C31468 * C9189) *
                      C31283 * C31269 +
                  (((C4585 * C119 + C31234 * C126) * C30320 +
                    (C4585 * C129 + C31234 * C140) * C31383 - C9459 * C30312 -
                    C9460 * C31390 + C9461 * C30326 + C9462 * C3625) *
                       C31468 * C9187 +
                   (C9459 * C30320 + C9460 * C31383 - C9461 * C30312 -
                    C9462 * C31390 + C9463 * C30326 + C9464 * C3625) *
                       C31468 * C9188 +
                   (C9461 * C30320 + C9462 * C31383 - C9463 * C30312 -
                    C9464 * C31390 + (C4585 * C1862 + C31234 * C1871) * C30326 +
                    (C4585 * C1874 + C31234 * C1880) * C3625) *
                       C31468 * C9189) *
                      C31283 * C2720)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31624 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C3113 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C3111 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C3114 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C31587) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31624 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31612 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C3114 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C3111 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C3113) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3113 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C3111 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3114 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31283 * C31630 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C3114 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C3111 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C3113) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31387) *
              C31468 * C31480 * C31283 * C31623 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C3113 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C3111 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C3114 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31387) *
              C31468 * C31480 * C31283 * C31610 +
          ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
            C115 * C667 + C103 * C668) *
               C3114 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C3111 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C3113) +
           (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
            C115 * C669 + C103 * C670) *
               C31387) *
              C31468 * C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C3113 + C4734 * C3111 - C5276 * C3114 - C5277 * C31387) *
               C4583 +
           (C4735 * C3113 + C4736 * C3111 - C5278 * C3114 - C5279 * C31387) *
               C4584) *
              C31480 * C31283 * C31630 +
          (((C4585 * C418 + C31234 * C428) * C3114 -
            ((C4585 * C128 + C31234 * C139) * C3111 +
             (C4585 * C118 + C31234 * C125) * C3113) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           (C5280 * C3114 - (C4740 * C3111 + C4739 * C3113) + C5281 * C31387) *
               C4583 +
           (C5282 * C3114 - (C4742 * C3111 + C4741 * C3113) + C5283 * C31387) *
               C4584) *
              C31480 * C31283 * C31623 +
          (((C4585 * C119 + C31234 * C126) * C3113 +
            (C4585 * C129 + C31234 * C140) * C3111 -
            (C4585 * C417 + C31234 * C427) * C3114 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C3113 + C4746 * C3111 - C5284 * C3114 - C5285 * C31387) *
               C4583 +
           (C4747 * C3113 + C4748 * C3111 - C5286 * C3114 - C5287 * C31387) *
               C4584) *
              C31480 * C31283 * C31610 +
          (((C4585 * C423 + C31234 * C439) * C3114 -
            ((C4585 * C130 + C31234 * C141) * C3111 +
             (C4585 * C120 + C31234 * C131) * C3113) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C3114 -
            (C4989 * C3111 + C4988 * C3113) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C3114 -
            (C4991 * C3111 + C4990 * C3113) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31624 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31612 +
           (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
            (C5489 * C3113 + C5490 * C3111 - C6058 * C3114 - C6059 * C31387) *
                C4584) *
               C31480 * C31587) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31624 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31612 +
           (C7815 * C4582 + (C7808 - (C7807 + C7806) + C7809) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C3114 -
             (C5774 * C3111 + C5775 * C3113) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
               C31468 * C9189) *
              C31283 * C31630 +
          ((C9453 * C3114 -
            ((C4585 * C128 + C31234 * C139) * C3111 +
             (C4585 * C118 + C31234 * C125) * C3113) +
            C9454 * C31387) *
               C31468 * C9187 +
           (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
               C31468 * C9188 +
           (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
               C31468 * C9189) *
              C31283 * C31623 +
          (((C4585 * C119 + C31234 * C126) * C3113 +
            (C4585 * C129 + C31234 * C140) * C3111 - C9459 * C3114 -
            C9460 * C31387) *
               C31468 * C9187 +
           (C9459 * C3113 + C9460 * C3111 - C9461 * C3114 - C9462 * C31387) *
               C31468 * C9188 +
           (C9461 * C3113 + C9462 * C3111 - C9463 * C3114 - C9464 * C31387) *
               C31468 * C9189) *
              C31283 * C31610 +
          ((C9669 * C3114 -
            ((C4585 * C130 + C31234 * C141) * C3111 +
             (C4585 * C120 + C31234 * C131) * C3113) +
            C9670 * C31387) *
               C31468 * C9187 +
           (C9671 * C3114 - (C9670 * C3111 + C9669 * C3113) + C9672 * C31387) *
               C31468 * C9188 +
           ((C4585 * C2137 + C31234 * C2138) * C3114 -
            (C9672 * C3111 + C9671 * C3113) +
            (C4585 * C2139 + C31234 * C2140) * C31387) *
               C31468 * C9189) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 - C9447 * C3114 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C3113 + C9448 * C3111 - C9449 * C3114 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C3113 + C9450 * C3111 - C9451 * C3114 - C9452 * C31387) *
                C31468 * C9189) *
               C31624 +
           ((C7788 - (C7787 + C7786) + C7789) * C31468 * C9187 +
            (C5646 * C3114 - (C5277 * C3111 + C5276 * C3113) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C3114 - (C5647 * C3111 + C5646 * C3113) + C6779 * C31387) *
                C31468 * C9189) *
               C31612 +
           (C7814 * C31468 * C9187 +
            (C5278 * C3113 + C5279 * C3111 - C5649 * C3114 - C5650 * C31387) *
                C31468 * C9188 +
            (C5649 * C3113 + C5650 * C3111 - C6780 * C3114 - C6781 * C31387) *
                C31468 * C9189) *
               C31587) *
              C2457 +
          (((C9453 * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C3114 - (C9454 * C3111 + C9453 * C3113) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C3114 - (C9456 * C3111 + C9455 * C3113) + C9458 * C31387) *
                C31468 * C9189) *
               C31624 +
           ((C7800 + C7799 - C7798 - C7801) * C31468 * C9187 +
            (C5280 * C3113 + C5281 * C3111 - C6546 * C3114 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C3113 + C6547 * C3111 - C10905 * C3114 - C10906 * C31387) *
                C31468 * C9189) *
               C31612 +
           (C7815 * C31468 * C9187 +
            (C6548 * C3114 - (C5283 * C3111 + C5282 * C3113) + C6549 * C31387) *
                C31468 * C9188 +
            ((C4585 * C6651 + C31234 * C6652) * C3114 -
             (C6549 * C3111 + C6548 * C3113) +
             (C4585 * C6653 + C31234 * C6654) * C31387) *
                C31468 * C9189) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C1289 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C1290 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C1291 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31300 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C116) *
               C31468 * C31480 * C31597) *
              C31544 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C1290 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C1289 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C1291 +
           ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
             C115 * C1295 + C103 * C1296) *
                C116 +
            (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
             C115 * C1297 + C103 * C1298) *
                C31300) *
               C31468 * C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31558 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31345) *
              C557 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31558) *
              C558 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31558 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31345) *
              C559 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C561 + C103 * C562) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C563 + C103 * C564) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31300 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31468 * C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31558 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C557 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31558) *
              C558 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31558 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C559 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C1289 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C1290 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C1291 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C31544 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C1290 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C1289 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C1291 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C31558 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31345) *
              C557 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31345 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31558) *
              C558 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C31558 -
           (((C4585 * C1167 + C31234 * C1182) * C31300 +
             (C4585 * C1155 + C31234 * C1164) * C116) *
                C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31345) *
              C559 +
          (((C4992 + C4993) * C31468 * C9187 +
            ((C4585 * C820 + C31234 * C828) * C116 +
             (C4585 * C829 + C31234 * C835) * C31300) *
                C31468 * C9188 +
            ((C4585 * C2027 + C31234 * C2028) * C116 +
             (C4585 * C2029 + C31234 * C2030) * C31300) *
                C31468 * C9189) *
               C31345 -
           (((C4585 * C442 + C31234 * C454) * C31300 +
             (C4585 * C424 + C31234 * C441) * C116) *
                C31468 * C9189 +
            ((C4585 * C440 + C31234 * C453) * C31300 +
             (C4585 * C423 + C31234 * C439) * C116) *
                C31468 * C9188 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C31468 * C9187) *
               C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C1289 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C1290 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C1291 -
           ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
            (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
            C5480 * C31468 * C9187) *
               C31597) *
              C31544 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C1290 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C1289 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C1291 +
           (C5769 * C31468 * C9187 +
            (C5942 * C116 + C5943 * C31300) * C31468 * C9188 +
            ((C4585 * C6525 + C31234 * C6526) * C116 +
             (C4585 * C6527 + C31234 * C6528) * C31300) *
                C31468 * C9189) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C665 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31559 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C666 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C1289 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C666 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31559 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C665) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31387) *
              C31468 * C31480 * C1290 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C665 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31559 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C666 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31387) *
              C31468 * C31480 * C1291 +
          ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
            C115 * C1549 + C103 * C1552) *
               C666 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31559 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C665) +
           (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
            C115 * C1555 + C103 * C1558) *
               C31387) *
              C31468 * C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C258 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C665 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31559 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C666 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C666 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31559 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C665) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 +
            (C5246 + C5247 - C5290 - C5291) * C4584) *
               C31480 * C31558 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            ((C4585 * C1547 + C31234 * C1550) * C666 -
             (C4737 * C31559 + C4738 * C665) +
             (C4585 * C1553 + C31234 * C1556) * C31387) *
                C4584) *
               C31480 * C31345) *
              C258 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 +
            (C5294 - (C5260 + C5261) + C5295) * C4584) *
               C31480 * C31558 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C4743 * C665 + C4744 * C31559 -
             (C4585 * C1548 + C31234 * C1551) * C666 -
             (C4585 * C1554 + C31234 * C1557) * C31387) *
                C4584) *
               C31480 * C31345) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 -
             (C4585 * C417 + C31234 * C427) * C666 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C5264 + C5265 - C5296 - C5297) * C4583 +
            (C5270 + C5271 - C5298 - C5299) * C4584) *
               C31480 * C31558 +
           ((C5296 - (C5265 + C5264) + C5297) * C4582 +
            (C5298 - (C5271 + C5270) + C5299) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C666 -
             (C4749 * C31559 + C4750 * C665) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
              C31480 * C1289 +
          ((C5288 - (C5241 + C5240) + C5289) * C4582 +
           (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
              C31480 * C1290 +
          (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
           (C6051 + C6052 - C6061 - C6062) * C4584) *
              C31480 * C1291 +
          (C6060 * C4582 + (C6061 - (C6052 + C6051) + C6062) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C666 -
            (C5491 * C31559 + C5492 * C665) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
            (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
                C31468 * C9189) *
               C31345) *
              C258 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C5255 + C5254 - C5292 - C5293) * C31468 * C9187 +
            (C5280 * C665 + C5281 * C31559 - C6546 * C666 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C665 + C6547 * C31559 -
             (C4585 * C2240 + C31234 * C2243) * C666 -
             (C4585 * C2246 + C31234 * C2249) * C31387) *
                C31468 * C9189) *
               C31345) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
             C9460 * C31387) *
                C31468 * C9187 +
            (C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
                C31468 * C9188 +
            (C9461 * C665 + C9462 * C31559 - C9463 * C666 - C9464 * C31387) *
                C31468 * C9189) *
               C31558 +
           ((C5296 - (C5265 + C5264) + C5297) * C31468 * C9187 +
            (C9823 * C666 - (C5285 * C31559 + C5284 * C665) + C9824 * C31387) *
                C31468 * C9188 +
            ((C4585 * C2241 + C31234 * C2244) * C666 -
             (C9824 * C31559 + C9823 * C665) +
             (C4585 * C2247 + C31234 * C2250) * C31387) *
                C31468 * C9189) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
               C31468 * C9189) *
              C1289 +
          ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
           (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
               C31468 * C9188 +
           (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
               C31468 * C9189) *
              C1290 +
          (C5944 * C31468 * C9187 +
           (C5278 * C665 + C5279 * C31559 - C5649 * C666 - C5650 * C31387) *
               C31468 * C9188 +
           (C5649 * C665 + C5650 * C31559 - C6780 * C666 - C6781 * C31387) *
               C31468 * C9189) *
              C1291 +
          (C6060 * C31468 * C9187 +
           (C5653 * C666 - (C5652 * C31559 + C5651 * C665) + C5654 * C31387) *
               C31468 * C9188 +
           ((C4585 * C6753 + C31234 * C6754) * C666 -
            (C5654 * C31559 + C5653 * C665) +
            (C4585 * C6755 + C31234 * C6756) * C31387) *
               C31468 * C9189) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31300) *
                  C31468 * C31480 * C31283 * C108 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31300 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31468 * C31480 * C31283 * C109 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31300) *
                  C31468 * C31480 * C31283 * C110 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31300 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31468 * C31480 * C31283 * C111 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31300) *
                  C31468 * C31480 * C31283 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C31624 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C31612 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C258 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C31612 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C31624 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31300 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31468 * C31480 * C31587) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31300) *
                   C31468 * C31480 * C31624 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31300 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31468 * C31480 * C31612 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C414 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31625 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C415 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31614 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C416 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31283 * C258 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C415 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31625 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C414) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31614 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C416 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31590) *
              C31468 * C31480 * C31283 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C414 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31625 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C415 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31614 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C416 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C31590) *
              C31468 * C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C414 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31625 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C415 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31614 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C416 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C947 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C415 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31625 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C414) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31614 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C416 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31590) *
              C31468 * C31480 * C948 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C414 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31625 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C415 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31614 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C416 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C31590) *
              C31468 * C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C414 + C4734 * C31625 -
            (C4585 * C817 + C31234 * C822) * C415 -
            (C4585 * C825 + C31234 * C832) * C31614 +
            (C4585 * C1157 + C31234 * C1166) * C416 +
            (C4585 * C1169 + C31234 * C1184) * C31590) *
               C4583 +
           (C4735 * C414 + C4736 * C31625 -
            (C4585 * C1160 + C31234 * C1172) * C415 -
            (C4585 * C1175 + C31234 * C1187) * C31614 +
            (C4585 * C1161 + C31234 * C1176) * C416 +
            (C4585 * C1179 + C31234 * C1188) * C31590) *
               C4584) *
              C31480 * C31283 * C258 +
          (((C4585 * C418 + C31234 * C428) * C415 -
            ((C4585 * C128 + C31234 * C139) * C31625 +
             (C4585 * C118 + C31234 * C125) * C414) +
            (C4585 * C431 + C31234 * C448) * C31614 -
            (C4585 * C421 + C31234 * C434) * C416 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C415 -
            (C4740 * C31625 + C4739 * C414) +
            (C4585 * C826 + C31234 * C833) * C31614 -
            (C4585 * C1156 + C31234 * C1165) * C416 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C415 -
            (C4742 * C31625 + C4741 * C414) +
            (C4585 * C1174 + C31234 * C1186) * C31614 -
            (C4585 * C1162 + C31234 * C1177) * C416 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C259 +
          (((C4585 * C119 + C31234 * C126) * C414 +
            (C4585 * C129 + C31234 * C140) * C31625 -
            (C4585 * C417 + C31234 * C427) * C415 -
            (C4585 * C430 + C31234 * C447) * C31614 +
            (C4585 * C422 + C31234 * C435) * C416 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C414 + C4746 * C31625 -
            (C4585 * C819 + C31234 * C824) * C415 -
            (C4585 * C827 + C31234 * C834) * C31614 +
            (C4585 * C1155 + C31234 * C1164) * C416 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C414 + C4748 * C31625 -
            (C4585 * C1158 + C31234 * C1170) * C415 -
            (C4585 * C1173 + C31234 * C1185) * C31614 +
            (C4585 * C1163 + C31234 * C1178) * C416 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C4583 +
           C5666 * C4584) *
              C31480 * C947 +
          ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C4582 +
           (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C4583 +
           (C5660 - (C5638 + C5639) + C5661 - C5662 - C5663) * C4584) *
              C31480 * C948 +
          (C5666 * C4582 +
           (C5639 + C5638 - C5660 - C5661 + C5662 + C5663) * C4583 +
           (C5489 * C414 + C5490 * C31625 -
            (C4585 * C5608 + C31234 * C5612) * C415 -
            (C4585 * C5613 + C31234 * C5617) * C31614 +
            (C4585 * C5609 + C31234 * C5614) * C416 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           ((C4585 * C419 + C31234 * C429) * C116 +
            (C4585 * C432 + C31234 * C449) * C31300) *
               C31468 * C9188 +
           ((C4585 * C420 + C31234 * C433) * C116 +
            (C4585 * C436 + C31234 * C450) * C31300) *
               C31468 * C9189) *
              C31283 * C108 -
          (((C4585 * C437 + C31234 * C451) * C31300 +
            (C4585 * C421 + C31234 * C434) * C116) *
               C31468 * C9189 +
           ((C4585 * C431 + C31234 * C448) * C31300 +
            (C4585 * C418 + C31234 * C428) * C116) *
               C31468 * C9188 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C31468 * C9187) *
              C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C31468 * C9187 +
           ((C4585 * C417 + C31234 * C427) * C116 +
            (C4585 * C430 + C31234 * C447) * C31300) *
               C31468 * C9188 +
           ((C4585 * C422 + C31234 * C435) * C116 +
            (C4585 * C438 + C31234 * C452) * C31300) *
               C31468 * C9189) *
              C31283 * C110 -
          (((C4585 * C442 + C31234 * C454) * C31300 +
            (C4585 * C424 + C31234 * C441) * C116) *
               C31468 * C9189 +
           ((C4585 * C440 + C31234 * C453) * C31300 +
            (C4585 * C423 + C31234 * C439) * C116) *
               C31468 * C9188 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C31468 * C9187) *
              C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C31468 * C9187 +
           ((C4585 * C425 + C31234 * C443) * C116 +
            (C4585 * C444 + C31234 * C455) * C31300) *
               C31468 * C9188 +
           ((C4585 * C426 + C31234 * C445) * C116 +
            (C4585 * C446 + C31234 * C456) * C31300) *
               C31468 * C9189) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            ((C4585 * C419 + C31234 * C429) * C116 +
             (C4585 * C432 + C31234 * C449) * C31300) *
                C31468 * C9188 +
            ((C4585 * C420 + C31234 * C433) * C116 +
             (C4585 * C436 + C31234 * C450) * C31300) *
                C31468 * C9189) *
               C31624 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31612 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C258 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31612 -
           (((C4585 * C437 + C31234 * C451) * C31300 +
             (C4585 * C421 + C31234 * C434) * C116) *
                C31468 * C9189 +
            ((C4585 * C431 + C31234 * C448) * C31300 +
             (C4585 * C418 + C31234 * C428) * C116) *
                C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31624 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            ((C4585 * C417 + C31234 * C427) * C116 +
             (C4585 * C430 + C31234 * C447) * C31300) *
                C31468 * C9188 +
            ((C4585 * C422 + C31234 * C435) * C116 +
             (C4585 * C438 + C31234 * C452) * C31300) *
                C31468 * C9189) *
               C31624 -
           (((C4585 * C1167 + C31234 * C1182) * C31300 +
             (C4585 * C1155 + C31234 * C1164) * C116) *
                C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31612 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
            C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
            C9451 * C416 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C414 + C9450 * C31625 - C9451 * C415 - C9452 * C31614 +
            (C4585 * C1860 + C31234 * C1869) * C416 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C31283 * C258 +
          ((C9453 * C415 -
            ((C4585 * C128 + C31234 * C139) * C31625 +
             (C4585 * C118 + C31234 * C125) * C414) +
            C9454 * C31614 - C9455 * C416 - C9456 * C31590) *
               C31468 * C9187 +
           (C9455 * C415 - (C9454 * C31625 + C9453 * C414) + C9456 * C31614 -
            C9457 * C416 - C9458 * C31590) *
               C31468 * C9188 +
           (C9457 * C415 - (C9456 * C31625 + C9455 * C414) + C9458 * C31614 -
            (C4585 * C1861 + C31234 * C1870) * C416 -
            (C4585 * C1873 + C31234 * C1879) * C31590) *
               C31468 * C9189) *
              C31283 * C259 +
          (((C4585 * C119 + C31234 * C126) * C414 +
            (C4585 * C129 + C31234 * C140) * C31625 - C9459 * C415 -
            C9460 * C31614 + C9461 * C416 + C9462 * C31590) *
               C31468 * C9187 +
           (C9459 * C414 + C9460 * C31625 - C9461 * C415 - C9462 * C31614 +
            C9463 * C416 + C9464 * C31590) *
               C31468 * C9188 +
           (C9461 * C414 + C9462 * C31625 - C9463 * C415 - C9464 * C31614 +
            (C4585 * C1862 + C31234 * C1871) * C416 +
            (C4585 * C1874 + C31234 * C1880) * C31590) *
               C31468 * C9189) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C947 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C948 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C31621 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C948 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C947 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C947 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C948 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
           (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
              C1015 -
          ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
           (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
           (C4752 + C4751) * C31468 * C9187) *
              C1016 +
          (C4769 * C31468 * C9187 +
           (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
           (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
              C1017 -
          ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
           (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
           C5480 * C31468 * C9187) *
              C1018 +
          (C5497 * C31468 * C9187 +
           (C6058 * C116 + C6059 * C31300) * C31468 * C9188 +
           ((C4585 * C5609 + C31234 * C5614) * C116 +
            (C4585 * C5615 + C31234 * C5618) * C31300) *
               C31468 * C9189) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 - C9447 * C415 -
            C9448 * C31614 + C9449 * C416 + C9450 * C31590) *
               C31468 * C9187 +
           (C9447 * C414 + C9448 * C31625 - C9449 * C415 - C9450 * C31614 +
            C9451 * C416 + C9452 * C31590) *
               C31468 * C9188 +
           (C9449 * C414 + C9450 * C31625 - C9451 * C415 - C9452 * C31614 +
            (C4585 * C1860 + C31234 * C1869) * C416 +
            (C4585 * C1872 + C31234 * C1878) * C31590) *
               C31468 * C9189) *
              C947 +
          ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C31468 * C9187 +
           (C5646 * C415 - (C5277 * C31625 + C5276 * C414) + C5647 * C31614 -
            C6778 * C416 - C6779 * C31590) *
               C31468 * C9188 +
           (C6778 * C415 - (C5647 * C31625 + C5646 * C414) + C6779 * C31614 -
            (C4585 * C6367 + C31234 * C6370) * C416 -
            (C4585 * C6371 + C31234 * C6376) * C31590) *
               C31468 * C9189) *
              C948 +
          (C5666 * C31468 * C9187 +
           (C5278 * C414 + C5279 * C31625 - C5649 * C415 - C5650 * C31614 +
            C6780 * C416 + C6781 * C31590) *
               C31468 * C9188 +
           (C5649 * C414 + C5650 * C31625 - C6780 * C415 - C6781 * C31614 +
            (C4585 * C6369 + C31234 * C6374) * C416 +
            (C4585 * C6375 + C31234 * C6378) * C31590) *
               C31468 * C9189) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C947 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C665 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31559 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C666 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C947 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C948 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C666 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31559 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C665) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C665 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31559 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C666 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31283 * C557 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C666 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31559 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C665) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31387) *
              C31468 * C31480 * C31283 * C558 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C665 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31559 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C666 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31387) *
              C31468 * C31480 * C31283 * C559 +
          ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
            C115 * C667 + C103 * C668) *
               C666 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31559 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C665) +
           (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
            C115 * C669 + C103 * C670) *
               C31387) *
              C31468 * C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C665 + C4734 * C31559 -
            (C4585 * C817 + C31234 * C822) * C666 -
            (C4585 * C825 + C31234 * C832) * C31387) *
               C4583 +
           (C4735 * C665 + C4736 * C31559 -
            (C4585 * C1160 + C31234 * C1172) * C666 -
            (C4585 * C1175 + C31234 * C1187) * C31387) *
               C4584) *
              C31480 * C31283 * C557 +
          (((C4585 * C418 + C31234 * C428) * C666 -
            ((C4585 * C128 + C31234 * C139) * C31559 +
             (C4585 * C118 + C31234 * C125) * C665) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C666 -
            (C4740 * C31559 + C4739 * C665) +
            (C4585 * C826 + C31234 * C833) * C31387) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C666 -
            (C4742 * C31559 + C4741 * C665) +
            (C4585 * C1174 + C31234 * C1186) * C31387) *
               C4584) *
              C31480 * C31283 * C558 +
          (((C4585 * C119 + C31234 * C126) * C665 +
            (C4585 * C129 + C31234 * C140) * C31559 -
            (C4585 * C417 + C31234 * C427) * C666 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C665 + C4746 * C31559 -
            (C4585 * C819 + C31234 * C824) * C666 -
            (C4585 * C827 + C31234 * C834) * C31387) *
               C4583 +
           (C4747 * C665 + C4748 * C31559 -
            (C4585 * C1158 + C31234 * C1170) * C666 -
            (C4585 * C1173 + C31234 * C1185) * C31387) *
               C4584) *
              C31480 * C31283 * C559 +
          (((C4585 * C423 + C31234 * C439) * C666 -
            ((C4585 * C130 + C31234 * C141) * C31559 +
             (C4585 * C120 + C31234 * C131) * C665) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C666 -
            (C4989 * C31559 + C4988 * C665) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C666 -
            (C4991 * C31559 + C4990 * C665) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C947 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            (C5929 - (C5930 + C5931) + C5932) * C4584) *
               C31480 * C948 +
           (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
            (C5489 * C665 + C5490 * C31559 -
             (C4585 * C5608 + C31234 * C5612) * C666 -
             (C4585 * C5613 + C31234 * C5617) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C947 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C948 +
           (C5945 * C4582 + (C5946 - (C5935 + C5934) + C5947) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C666 -
             (C5774 * C31559 + C5775 * C665) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
            C9448 * C31387) *
               C31468 * C9187 +
           (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
               C31468 * C9188 +
           (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
               C31468 * C9189) *
              C31283 * C557 +
          ((C9453 * C666 -
            ((C4585 * C128 + C31234 * C139) * C31559 +
             (C4585 * C118 + C31234 * C125) * C665) +
            C9454 * C31387) *
               C31468 * C9187 +
           (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
               C31468 * C9188 +
           (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
               C31468 * C9189) *
              C31283 * C558 +
          (((C4585 * C119 + C31234 * C126) * C665 +
            (C4585 * C129 + C31234 * C140) * C31559 - C9459 * C666 -
            C9460 * C31387) *
               C31468 * C9187 +
           (C9459 * C665 + C9460 * C31559 - C9461 * C666 - C9462 * C31387) *
               C31468 * C9188 +
           (C9461 * C665 + C9462 * C31559 - C9463 * C666 - C9464 * C31387) *
               C31468 * C9189) *
              C31283 * C559 +
          ((C9669 * C666 -
            ((C4585 * C130 + C31234 * C141) * C31559 +
             (C4585 * C120 + C31234 * C131) * C665) +
            C9670 * C31387) *
               C31468 * C9187 +
           (C9671 * C666 - (C9670 * C31559 + C9669 * C665) + C9672 * C31387) *
               C31468 * C9188 +
           ((C4585 * C2137 + C31234 * C2138) * C666 -
            (C9672 * C31559 + C9671 * C665) +
            (C4585 * C2139 + C31234 * C2140) * C31387) *
               C31468 * C9189) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 - C9447 * C666 -
             C9448 * C31387) *
                C31468 * C9187 +
            (C9447 * C665 + C9448 * C31559 - C9449 * C666 - C9450 * C31387) *
                C31468 * C9188 +
            (C9449 * C665 + C9450 * C31559 - C9451 * C666 - C9452 * C31387) *
                C31468 * C9189) *
               C947 +
           ((C5288 - (C5241 + C5240) + C5289) * C31468 * C9187 +
            (C5646 * C666 - (C5277 * C31559 + C5276 * C665) + C5647 * C31387) *
                C31468 * C9188 +
            (C6778 * C666 - (C5647 * C31559 + C5646 * C665) + C6779 * C31387) *
                C31468 * C9189) *
               C948 +
           (C5944 * C31468 * C9187 +
            (C5278 * C665 + C5279 * C31559 - C5649 * C666 - C5650 * C31387) *
                C31468 * C9188 +
            (C5649 * C665 + C5650 * C31559 - C6780 * C666 - C6781 * C31387) *
                C31468 * C9189) *
               C31587) *
              C31544 +
          (((C9453 * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             C9454 * C31387) *
                C31468 * C9187 +
            (C9455 * C666 - (C9454 * C31559 + C9453 * C665) + C9456 * C31387) *
                C31468 * C9188 +
            (C9457 * C666 - (C9456 * C31559 + C9455 * C665) + C9458 * C31387) *
                C31468 * C9189) *
               C947 +
           ((C5255 + C5254 - C5292 - C5293) * C31468 * C9187 +
            (C5280 * C665 + C5281 * C31559 - C6546 * C666 - C6547 * C31387) *
                C31468 * C9188 +
            (C6546 * C665 + C6547 * C31559 -
             (C4585 * C2240 + C31234 * C2243) * C666 -
             (C4585 * C2246 + C31234 * C2249) * C31387) *
                C31468 * C9189) *
               C948 +
           (C5945 * C31468 * C9187 +
            (C6548 * C666 - (C5283 * C31559 + C5282 * C665) + C6549 * C31387) *
                C31468 * C9188 +
            ((C4585 * C6651 + C31234 * C6652) * C666 -
             (C6549 * C31559 + C6548 * C665) +
             (C4585 * C6653 + C31234 * C6654) * C31387) *
                C31468 * C9189) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31612 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31624 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C31283 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31300 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31468 * C31480 * C31283 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31300) *
              C31468 * C31480 * C31283 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31300 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31468 * C31480 * C31283 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31300) *
              C31468 * C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           ((C4585 * C419 + C31234 * C429) * C116 +
            (C4585 * C432 + C31234 * C449) * C31300) *
               C31468 * C9188 +
           ((C4585 * C420 + C31234 * C433) * C116 +
            (C4585 * C436 + C31234 * C450) * C31300) *
               C31468 * C9189) *
              C31283 * C108 -
          (((C4585 * C437 + C31234 * C451) * C31300 +
            (C4585 * C421 + C31234 * C434) * C116) *
               C31468 * C9189 +
           ((C4585 * C431 + C31234 * C448) * C31300 +
            (C4585 * C418 + C31234 * C428) * C116) *
               C31468 * C9188 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C31468 * C9187) *
              C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C31468 * C9187 +
           ((C4585 * C417 + C31234 * C427) * C116 +
            (C4585 * C430 + C31234 * C447) * C31300) *
               C31468 * C9188 +
           ((C4585 * C422 + C31234 * C435) * C116 +
            (C4585 * C438 + C31234 * C452) * C31300) *
               C31468 * C9189) *
              C31283 * C110 -
          (((C4585 * C442 + C31234 * C454) * C31300 +
            (C4585 * C424 + C31234 * C441) * C116) *
               C31468 * C9189 +
           ((C4585 * C440 + C31234 * C453) * C31300 +
            (C4585 * C423 + C31234 * C439) * C116) *
               C31468 * C9188 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C31468 * C9187) *
              C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C31468 * C9187 +
           ((C4585 * C425 + C31234 * C443) * C116 +
            (C4585 * C444 + C31234 * C455) * C31300) *
               C31468 * C9188 +
           ((C4585 * C426 + C31234 * C445) * C116 +
            (C4585 * C446 + C31234 * C456) * C31300) *
               C31468 * C9189) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            ((C4585 * C419 + C31234 * C429) * C116 +
             (C4585 * C432 + C31234 * C449) * C31300) *
                C31468 * C9188 +
            ((C4585 * C420 + C31234 * C433) * C116 +
             (C4585 * C436 + C31234 * C450) * C31300) *
                C31468 * C9189) *
               C31624 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C31612 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C258 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C31612 -
           (((C4585 * C437 + C31234 * C451) * C31300 +
             (C4585 * C421 + C31234 * C434) * C116) *
                C31468 * C9189 +
            ((C4585 * C431 + C31234 * C448) * C31300 +
             (C4585 * C418 + C31234 * C428) * C116) *
                C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C31624 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            ((C4585 * C417 + C31234 * C427) * C116 +
             (C4585 * C430 + C31234 * C447) * C31300) *
                C31468 * C9188 +
            ((C4585 * C422 + C31234 * C435) * C116 +
             (C4585 * C438 + C31234 * C452) * C31300) *
                C31468 * C9189) *
               C31624 -
           (((C4585 * C1167 + C31234 * C1182) * C31300 +
             (C4585 * C1155 + C31234 * C1164) * C116) *
                C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C31612 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C31468 * C9187 +
            (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
            (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
               C947 -
           ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
            (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
            (C4752 + C4751) * C31468 * C9187) *
               C948 +
           (C4769 * C31468 * C9187 +
            (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
            (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
               C31587) *
              C31621 +
          (((C4757 + C4758) * C31468 * C9187 +
            (C5280 * C116 + C5281 * C31300) * C31468 * C9188 +
            (C6546 * C116 + C6547 * C31300) * C31468 * C9189) *
               C948 -
           ((C9456 * C31300 + C9455 * C116) * C31468 * C9189 +
            (C9454 * C31300 + C9453 * C116) * C31468 * C9188 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C31468 * C9187) *
               C947 -
           ((C6549 * C31300 + C6548 * C116) * C31468 * C9189 +
            (C5283 * C31300 + C5282 * C116) * C31468 * C9188 +
            C4770 * C31468 * C9187) *
               C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C31468 * C9187 +
            (C9459 * C116 + C9460 * C31300) * C31468 * C9188 +
            (C9461 * C116 + C9462 * C31300) * C31468 * C9189) *
               C947 -
           ((C9824 * C31300 + C9823 * C116) * C31468 * C9189 +
            (C5285 * C31300 + C5284 * C116) * C31468 * C9188 +
            (C4764 + C4763) * C31468 * C9187) *
               C948 +
           (C4771 * C31468 * C9187 +
            (C5286 * C116 + C5287 * C31300) * C31468 * C9188 +
            ((C4585 * C1163 + C31234 * C1178) * C116 +
             (C4585 * C1181 + C31234 * C1190) * C31300) *
                C31468 * C9189) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C31468 * C9187 +
           (C9447 * C116 + C9448 * C31300) * C31468 * C9188 +
           (C9449 * C116 + C9450 * C31300) * C31468 * C9189) *
              C1015 -
          ((C5647 * C31300 + C5646 * C116) * C31468 * C9189 +
           (C5277 * C31300 + C5276 * C116) * C31468 * C9188 +
           (C4752 + C4751) * C31468 * C9187) *
              C1016 +
          (C4769 * C31468 * C9187 +
           (C5278 * C116 + C5279 * C31300) * C31468 * C9188 +
           (C5649 * C116 + C5650 * C31300) * C31468 * C9189) *
              C1017 -
          ((C5654 * C31300 + C5653 * C116) * C31468 * C9189 +
           (C5652 * C31300 + C5651 * C116) * C31468 * C9188 +
           C5480 * C31468 * C9187) *
              C1018 +
          (C5497 * C31468 * C9187 +
           (C6058 * C116 + C6059 * C31300) * C31468 * C9188 +
           ((C4585 * C5609 + C31234 * C5614) * C116 +
            (C4585 * C5615 + C31234 * C5618) * C31300) *
               C31468 * C9189) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C31341 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31348 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C2717) *
              C31261 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31348 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31341 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C2717) *
              C31269 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C31341 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31348 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C2717) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
             (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31341 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C666 -
             ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31348 +
           (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
             (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
                C31468 * C19130 +
            ((C14735 + C14736) * C665 + (C14737 + C14738) * C31559 -
             (C14739 + C14740) * C666 - (C14741 + C14742) * C31387) *
                C31468 * C19131) *
               C2717) *
              C2457 +
          ((((C19481 + C19482) * C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C666 -
             ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31341 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C665 + (C14303 + C14304) * C31559 -
             (C15809 + C15810) * C666 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31348 +
           (((C15088 + C15087) * C666 -
             ((C13652 + C13651) * C31559 + (C13650 + C13649) * C665) +
             (C15090 + C15089) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C666 -
             ((C15089 + C15090) * C31559 + (C15087 + C15088) * C665) +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31387) *
                C31468 * C19131) *
               C2717) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C31631 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31627 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31617 -
           (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
                C19131 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
                C19130) *
               C31597) *
              C2457 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31627 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31631 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31617 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C116 +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31300) *
                C31468 * C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C2349 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31345) *
              C31630 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31345 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C2349) *
              C31623 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C2349 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31345) *
              C31610 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C31468 *
                C19130 +
            ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                 C116 +
             (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                 C31300) *
                C31468 * C19131) *
               C31345 -
           (((C19768 + C19767) * C31300 + (C19766 + C19765) * C116) * C31468 *
                C19131 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C31468 * C19130) *
               C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C414 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31625 -
             (C19473 + C19474) * C415 - (C19475 + C19476) * C31614 +
             (C19477 + C19478) * C416 + (C19479 + C19480) * C31590) *
                C31468 * C19130 +
            ((C19474 + C19473) * C414 + (C19476 + C19475) * C31625 -
             (C19478 + C19477) * C415 - (C19480 + C19479) * C31614 +
             (C21182 + C21181) * C416 + (C21184 + C21183) * C31590) *
                C31468 * C19131) *
               C2349 +
           (((C14298 + C14297) * C415 -
             ((C13640 + C13639) * C31625 + (C13638 + C13637) * C414) +
             (C14300 + C14299) * C31614 - (C14732 + C14731) * C416 -
             (C14734 + C14733) * C31590) *
                C31468 * C19130 +
            ((C14731 + C14732) * C415 -
             ((C14299 + C14300) * C31625 + (C14297 + C14298) * C414) +
             (C14733 + C14734) * C31614 - (C16081 + C16082) * C416 -
             (C16083 + C16084) * C31590) *
                C31468 * C19131) *
               C31345) *
              C2457 +
          ((((C19481 + C19482) * C415 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31625 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C414) +
             (C19483 + C19484) * C31614 - (C19485 + C19486) * C416 -
             (C19487 + C19488) * C31590) *
                C31468 * C19130 +
            ((C19486 + C19485) * C415 -
             ((C19484 + C19483) * C31625 + (C19482 + C19481) * C414) +
             (C19488 + C19487) * C31614 - (C21522 + C21521) * C416 -
             (C21524 + C21523) * C31590) *
                C31468 * C19131) *
               C2349 +
           (((C13645 + C13646) * C414 + (C13647 + C13648) * C31625 -
             (C14302 + C14301) * C415 - (C14304 + C14303) * C31614 +
             (C15810 + C15809) * C416 + (C15812 + C15811) * C31590) *
                C31468 * C19130 +
            ((C14301 + C14302) * C414 + (C14303 + C14304) * C31625 -
             (C15809 + C15810) * C415 - (C15811 + C15812) * C31614 +
             (C13440 * C2240 + C13436 * C2243 + C13441 * C2241 +
              C13437 * C2244) *
                 C416 +
             (C13440 * C2246 + C13436 * C2249 + C13441 * C2247 +
              C13437 * C2250) *
                 C31590) *
                C31468 * C19131) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
             (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C666 -
             ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31261 +
          ((((C19481 + C19482) * C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C666 -
             ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C665 + (C14303 + C14304) * C31559 -
             (C15809 + C15810) * C666 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31269 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C665 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31559 -
             (C19489 + C19490) * C666 - (C19491 + C19492) * C31387) *
                C31468 * C19130 +
            ((C19490 + C19489) * C665 + (C19492 + C19491) * C31559 -
             (C19494 + C19493) * C666 - (C19496 + C19495) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C14306 + C14305) * C666 -
             ((C13656 + C13655) * C31559 + (C13654 + C13653) * C665) +
             (C14308 + C14307) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
              C13437 * C2028) *
                 C666 -
             ((C14307 + C14308) * C31559 + (C14305 + C14306) * C665) +
             (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
              C13437 * C2030) *
                 C31387) *
                C31468 * C19131) *
               C31345) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C2349 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31345) *
              C31630 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31345 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C2349) *
              C31623 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C2349 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31345) *
              C31610 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C31468 *
                C19130 +
            ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                 C116 +
             (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                 C31300) *
                C31468 * C19131) *
               C31345 -
           (((C19768 + C19767) * C31300 + (C19766 + C19765) * C116) * C31468 *
                C19131 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C31468 * C19130) *
               C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C31631 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31627 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31617 -
           (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
                C19131 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
                C19130) *
               C31597) *
              C2457 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31627 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31631 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31617 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C116 +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31300) *
                C31468 * C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
             (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31341 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C3114 -
             ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31348 +
           (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
             (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
                C31468 * C19130 +
            ((C14735 + C14736) * C3113 + (C14737 + C14738) * C3111 -
             (C14739 + C14740) * C3114 - (C14741 + C14742) * C31387) *
                C31468 * C19131) *
               C2717) *
              C31544 +
          ((((C19481 + C19482) * C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C3114 -
             ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31341 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C3113 + (C14303 + C14304) * C3111 -
             (C15809 + C15810) * C3114 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31348 +
           (((C15088 + C15087) * C3114 -
             ((C13652 + C13651) * C3111 + (C13650 + C13649) * C3113) +
             (C15090 + C15089) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C3114 -
             ((C15089 + C15090) * C3111 + (C15087 + C15088) * C3113) +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31387) *
                C31468 * C19131) *
               C2717) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C30320 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31383 -
            (C19473 + C19474) * C30312 - (C19475 + C19476) * C31390 +
            (C19477 + C19478) * C30326 + (C19479 + C19480) * C3625) *
               C31468 * C19130 +
           ((C19474 + C19473) * C30320 + (C19476 + C19475) * C31383 -
            (C19478 + C19477) * C30312 - (C19480 + C19479) * C31390 +
            (C21182 + C21181) * C30326 + (C21184 + C21183) * C3625) *
               C31468 * C19131) *
              C31341 +
          (((C14298 + C14297) * C30312 -
            ((C13640 + C13639) * C31383 + (C13638 + C13637) * C30320) +
            (C14300 + C14299) * C31390 - (C14732 + C14731) * C30326 -
            (C14734 + C14733) * C3625) *
               C31468 * C19130 +
           ((C14731 + C14732) * C30312 -
            ((C14299 + C14300) * C31383 + (C14297 + C14298) * C30320) +
            (C14733 + C14734) * C31390 - (C16081 + C16082) * C30326 -
            (C16083 + C16084) * C3625) *
               C31468 * C19131) *
              C31348 +
          (((C13644 + C13643) * C30320 + (C13642 + C13641) * C31383 -
            (C14736 + C14735) * C30312 - (C14738 + C14737) * C31390 +
            (C14740 + C14739) * C30326 + (C14742 + C14741) * C3625) *
               C31468 * C19130 +
           ((C14735 + C14736) * C30320 + (C14737 + C14738) * C31383 -
            (C14739 + C14740) * C30312 - (C14741 + C14742) * C31390 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C30326 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C3625) *
               C31468 * C19131) *
              C2717) *
         C31256) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
            (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C31631 +
          (((C14298 + C14297) * C3114 -
            ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
            (C14300 + C14299) * C31387) *
               C31468 * C19130 +
           ((C14731 + C14732) * C3114 -
            ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
            (C14733 + C14734) * C31387) *
               C31468 * C19131) *
              C31627 +
          (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
            (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
               C31468 * C19130 +
           ((C14735 + C14736) * C3113 + (C14737 + C14738) * C3111 -
            (C14739 + C14740) * C3114 - (C14741 + C14742) * C31387) *
               C31468 * C19131) *
              C31617 +
          (((C15230 + C15229) * C3114 -
            ((C14556 + C14555) * C3111 + (C14554 + C14553) * C3113) +
            (C15232 + C15231) * C31387) *
               C31468 * C19130 +
           ((C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C3114 -
            ((C15231 + C15232) * C3111 + (C15229 + C15230) * C3113) +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31387) *
               C31468 * C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
             (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C3114 -
             ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31621 +
          ((((C19481 + C19482) * C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C3114 -
             ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C3113 + (C14303 + C14304) * C3111 -
             (C15809 + C15810) * C3114 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C3113 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C3111 -
             (C19489 + C19490) * C3114 - (C19491 + C19492) * C31387) *
                C31468 * C19130 +
            ((C19490 + C19489) * C3113 + (C19492 + C19491) * C3111 -
             (C19494 + C19493) * C3114 - (C19496 + C19495) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C14306 + C14305) * C3114 -
             ((C13656 + C13655) * C3111 + (C13654 + C13653) * C3113) +
             (C14308 + C14307) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
              C13437 * C2028) *
                 C3114 -
             ((C14307 + C14308) * C3111 + (C14305 + C14306) * C3113) +
             (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
              C13437 * C2030) *
                 C31387) *
                C31468 * C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3363 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31632 -
            (C19473 + C19474) * C3364 - (C19475 + C19476) * C31629 +
            (C19477 + C19478) * C3365 + (C19479 + C19480) * C31620 -
            (C21181 + C21182) * C3366 - (C21183 + C21184) * C31603) *
               C31468 * C19130 +
           ((C19474 + C19473) * C3363 + (C19476 + C19475) * C31632 -
            (C19478 + C19477) * C3364 - (C19480 + C19479) * C31629 +
            (C21182 + C21181) * C3365 + (C21184 + C21183) * C31620 -
            (C21186 + C21185) * C3366 - (C21188 + C21187) * C31603) *
               C31468 * C19131) *
              C2349 +
          (((C14298 + C14297) * C3364 -
            ((C13640 + C13639) * C31632 + (C13638 + C13637) * C3363) +
            (C14300 + C14299) * C31629 - (C14732 + C14731) * C3365 -
            (C14734 + C14733) * C31620 + (C16082 + C16081) * C3366 +
            (C16084 + C16083) * C31603) *
               C31468 * C19130 +
           ((C14731 + C14732) * C3364 -
            ((C14299 + C14300) * C31632 + (C14297 + C14298) * C3363) +
            (C14733 + C14734) * C31629 - (C16081 + C16082) * C3365 -
            (C16083 + C16084) * C31620 +
            (C13440 * C6367 + C13436 * C6370 + C13441 * C10896 +
             C13437 * C10897) *
                C3366 +
            (C13440 * C6371 + C13436 * C6376 + C13441 * C10898 +
             C13437 * C10899) *
                C31603) *
               C31468 * C19131) *
              C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C30320 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31383 -
             (C19473 + C19474) * C30312 - (C19475 + C19476) * C31390 +
             (C19477 + C19478) * C30326 + (C19479 + C19480) * C3625) *
                C31468 * C19130 +
            ((C19474 + C19473) * C30320 + (C19476 + C19475) * C31383 -
             (C19478 + C19477) * C30312 - (C19480 + C19479) * C31390 +
             (C21182 + C21181) * C30326 + (C21184 + C21183) * C3625) *
                C31468 * C19131) *
               C2349 +
           (((C14298 + C14297) * C30312 -
             ((C13640 + C13639) * C31383 + (C13638 + C13637) * C30320) +
             (C14300 + C14299) * C31390 - (C14732 + C14731) * C30326 -
             (C14734 + C14733) * C3625) *
                C31468 * C19130 +
            ((C14731 + C14732) * C30312 -
             ((C14299 + C14300) * C31383 + (C14297 + C14298) * C30320) +
             (C14733 + C14734) * C31390 - (C16081 + C16082) * C30326 -
             (C16083 + C16084) * C3625) *
                C31468 * C19131) *
               C31345) *
              C31544 +
          ((((C19481 + C19482) * C30312 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31383 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C30320) +
             (C19483 + C19484) * C31390 - (C19485 + C19486) * C30326 -
             (C19487 + C19488) * C3625) *
                C31468 * C19130 +
            ((C19486 + C19485) * C30312 -
             ((C19484 + C19483) * C31383 + (C19482 + C19481) * C30320) +
             (C19488 + C19487) * C31390 - (C21522 + C21521) * C30326 -
             (C21524 + C21523) * C3625) *
                C31468 * C19131) *
               C2349 +
           (((C13645 + C13646) * C30320 + (C13647 + C13648) * C31383 -
             (C14302 + C14301) * C30312 - (C14304 + C14303) * C31390 +
             (C15810 + C15809) * C30326 + (C15812 + C15811) * C3625) *
                C31468 * C19130 +
            ((C14301 + C14302) * C30320 + (C14303 + C14304) * C31383 -
             (C15809 + C15810) * C30312 - (C15811 + C15812) * C31390 +
             (C13440 * C2240 + C13436 * C2243 + C13441 * C2241 +
              C13437 * C2244) *
                 C30326 +
             (C13440 * C2246 + C13436 * C2249 + C13441 * C2247 +
              C13437 * C2250) *
                 C3625) *
                C31468 * C19131) *
               C31345) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
             (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C3114 -
             ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31621 +
          ((((C19481 + C19482) * C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C3114 -
             ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C3113 + (C14303 + C14304) * C3111 -
             (C15809 + C15810) * C3114 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C3113 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C3111 -
             (C19489 + C19490) * C3114 - (C19491 + C19492) * C31387) *
                C31468 * C19130 +
            ((C19490 + C19489) * C3113 + (C19492 + C19491) * C3111 -
             (C19494 + C19493) * C3114 - (C19496 + C19495) * C31387) *
                C31468 * C19131) *
               C2349 +
           (((C14306 + C14305) * C3114 -
             ((C13656 + C13655) * C3111 + (C13654 + C13653) * C3113) +
             (C14308 + C14307) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
              C13437 * C2028) *
                 C3114 -
             ((C14307 + C14308) * C3111 + (C14305 + C14306) * C3113) +
             (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
              C13437 * C2030) *
                 C31387) *
                C31468 * C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
            (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C31631 +
          (((C14298 + C14297) * C3114 -
            ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
            (C14300 + C14299) * C31387) *
               C31468 * C19130 +
           ((C14731 + C14732) * C3114 -
            ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
            (C14733 + C14734) * C31387) *
               C31468 * C19131) *
              C31627 +
          (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
            (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
               C31468 * C19130 +
           ((C14735 + C14736) * C3113 + (C14737 + C14738) * C3111 -
            (C14739 + C14740) * C3114 - (C14741 + C14742) * C31387) *
               C31468 * C19131) *
              C31617 +
          (((C15230 + C15229) * C3114 -
            ((C14556 + C14555) * C3111 + (C14554 + C14553) * C3113) +
            (C15232 + C15231) * C31387) *
               C31468 * C19130 +
           ((C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C3114 -
            ((C15231 + C15232) * C3111 + (C15229 + C15230) * C3113) +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31387) *
               C31468 * C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C1289 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C1290 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C1291 -
           (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
                C19131 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
                C19130) *
               C31597) *
              C31544 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C1290 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C1289 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C1291 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C116 +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31300) *
                C31468 * C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C31558 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31345) *
              C557 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31345 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31558) *
              C558 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C31558 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31345) *
              C559 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C31468 *
                C19130 +
            ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                 C116 +
             (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                 C31300) *
                C31468 * C19131) *
               C31345 -
           (((C13441 * C444 + C13437 * C455 + C13440 * C440 + C13436 * C453) *
                 C31300 +
             (C13441 * C425 + C13437 * C443 + C13440 * C423 + C13436 * C439) *
                 C116) *
                C31468 * C19131 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C31468 * C19130) *
               C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C1672 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C1669 -
             (C19473 + C19474) * C1673 - (C19475 + C19476) * C1670 +
             (C19477 + C19478) * C1674 + (C19479 + C19480) * C31590) *
                C31468 * C19130 +
            ((C19474 + C19473) * C1672 + (C19476 + C19475) * C1669 -
             (C19478 + C19477) * C1673 - (C19480 + C19479) * C1670 +
             (C21182 + C21181) * C1674 + (C21184 + C21183) * C31590) *
                C31468 * C19131) *
               C31558 +
           (((C14298 + C14297) * C1673 -
             ((C13640 + C13639) * C1669 + (C13638 + C13637) * C1672) +
             (C14300 + C14299) * C1670 - (C14732 + C14731) * C1674 -
             (C14734 + C14733) * C31590) *
                C31468 * C19130 +
            ((C14731 + C14732) * C1673 -
             ((C14299 + C14300) * C1669 + (C14297 + C14298) * C1672) +
             (C14733 + C14734) * C1670 - (C16081 + C16082) * C1674 -
             (C16083 + C16084) * C31590) *
                C31468 * C19131) *
               C31345) *
              C31544 +
          ((((C19481 + C19482) * C1673 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C1669 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C1672) +
             (C19483 + C19484) * C1670 - (C19485 + C19486) * C1674 -
             (C19487 + C19488) * C31590) *
                C31468 * C19130 +
            ((C19486 + C19485) * C1673 -
             ((C19484 + C19483) * C1669 + (C19482 + C19481) * C1672) +
             (C19488 + C19487) * C1670 -
             (C13441 * C1857 + C13437 * C1863 + C13440 * C1858 +
              C13436 * C1864) *
                 C1674 -
             (C13441 * C1866 + C13437 * C1875 + C13440 * C1867 +
              C13436 * C1876) *
                 C31590) *
                C31468 * C19131) *
               C31558 +
           (((C13645 + C13646) * C1672 + (C13647 + C13648) * C1669 -
             (C14302 + C14301) * C1673 - (C14304 + C14303) * C1670 +
             (C15810 + C15809) * C1674 + (C15812 + C15811) * C31590) *
                C31468 * C19130 +
            ((C14301 + C14302) * C1672 + (C14303 + C14304) * C1669 -
             (C15809 + C15810) * C1673 - (C15811 + C15812) * C1670 +
             (C13440 * C2240 + C13436 * C2243 + C13441 * C2241 +
              C13437 * C2244) *
                 C1674 +
             (C13440 * C2246 + C13436 * C2249 + C13441 * C2247 +
              C13437 * C2250) *
                 C31590) *
                C31468 * C19131) *
               C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
            (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C1289 +
          (((C14298 + C14297) * C666 -
            ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
            (C14300 + C14299) * C31387) *
               C31468 * C19130 +
           ((C14731 + C14732) * C666 -
            ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
            (C14733 + C14734) * C31387) *
               C31468 * C19131) *
              C1290 +
          (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
            (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
               C31468 * C19130 +
           ((C14735 + C14736) * C665 + (C14737 + C14738) * C31559 -
            (C14739 + C14740) * C666 - (C14741 + C14742) * C31387) *
               C31468 * C19131) *
              C1291 +
          (((C15230 + C15229) * C666 -
            ((C14556 + C14555) * C31559 + (C14554 + C14553) * C665) +
            (C15232 + C15231) * C31387) *
               C31468 * C19130 +
           ((C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C666 -
            ((C15231 + C15232) * C31559 + (C15229 + C15230) * C665) +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31387) *
               C31468 * C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
             (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C666 -
             ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31345) *
              C258 +
          ((((C19481 + C19482) * C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C666 -
             ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C665 + (C14303 + C14304) * C31559 -
             (C15809 + C15810) * C666 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31345) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C665 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31559 -
             (C19489 + C19490) * C666 - (C19491 + C19492) * C31387) *
                C31468 * C19130 +
            ((C19490 + C19489) * C665 + (C19492 + C19491) * C31559 -
             (C19494 + C19493) * C666 - (C19496 + C19495) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C14306 + C14305) * C666 -
             ((C13656 + C13655) * C31559 + (C13654 + C13653) * C665) +
             (C14308 + C14307) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
              C13437 * C2028) *
                 C666 -
             ((C14307 + C14308) * C31559 + (C14305 + C14306) * C665) +
             (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
              C13437 * C2030) *
                 C31387) *
                C31468 * C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C2133 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C2129 -
            (C19473 + C19474) * C2134 - (C19475 + C19476) * C2130 +
            (C19477 + C19478) * C2135 + (C19479 + C19480) * C2131 -
            (C21181 + C21182) * C2136 - (C21183 + C21184) * C31603) *
               C31468 * C19130 +
           ((C19474 + C19473) * C2133 + (C19476 + C19475) * C2129 -
            (C19478 + C19477) * C2134 - (C19480 + C19479) * C2130 +
            (C21182 + C21181) * C2135 + (C21184 + C21183) * C2131 -
            (C21186 + C21185) * C2136 - (C21188 + C21187) * C31603) *
               C31468 * C19131) *
              C31558 +
          (((C14298 + C14297) * C2134 -
            ((C13640 + C13639) * C2129 + (C13638 + C13637) * C2133) +
            (C14300 + C14299) * C2130 - (C14732 + C14731) * C2135 -
            (C14734 + C14733) * C2131 + (C16082 + C16081) * C2136 +
            (C16084 + C16083) * C31603) *
               C31468 * C19130 +
           ((C14731 + C14732) * C2134 -
            ((C14299 + C14300) * C2129 + (C14297 + C14298) * C2133) +
            (C14733 + C14734) * C2130 - (C16081 + C16082) * C2135 -
            (C16083 + C16084) * C2131 +
            (C13440 * C6367 + C13436 * C6370 + C13441 * C10896 +
             C13437 * C10897) *
                C2136 +
            (C13440 * C6371 + C13436 * C6376 + C13441 * C10898 +
             C13437 * C10899) *
                C31603) *
               C31468 * C19131) *
              C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13440 * C117 + C13436 * C124 + C13441 * C118 +
                 C13437 * C125) *
                    C116 +
                (C13440 * C127 + C13436 * C138 + C13441 * C128 +
                 C13437 * C139) *
                    C31300) *
                   C31468 * C19130 +
               ((C13440 * C419 + C13436 * C429 + C13441 * C418 +
                 C13437 * C428) *
                    C116 +
                (C13440 * C432 + C13436 * C449 + C13441 * C431 +
                 C13437 * C448) *
                    C31300) *
                   C31468 * C19131) *
                  C31283 * C108 -
              (((C13441 * C430 + C13437 * C447 + C13440 * C431 +
                 C13436 * C448) *
                    C31300 +
                (C13441 * C417 + C13437 * C427 + C13440 * C418 +
                 C13436 * C428) *
                    C116) *
                   C31468 * C19131 +
               ((C13441 * C129 + C13437 * C140 + C13440 * C128 +
                 C13436 * C139) *
                    C31300 +
                (C13441 * C119 + C13437 * C126 + C13440 * C118 +
                 C13436 * C125) *
                    C116) *
                   C31468 * C19130) *
                  C31283 * C109 +
              (((C13440 * C119 + C13436 * C126 + C13441 * C120 +
                 C13437 * C131) *
                    C116 +
                (C13440 * C129 + C13436 * C140 + C13441 * C130 +
                 C13437 * C141) *
                    C31300) *
                   C31468 * C19130 +
               ((C13440 * C417 + C13436 * C427 + C13441 * C423 +
                 C13437 * C439) *
                    C116 +
                (C13440 * C430 + C13436 * C447 + C13441 * C440 +
                 C13437 * C453) *
                    C31300) *
                   C31468 * C19131) *
                  C31283 * C110 -
              (((C13441 * C444 + C13437 * C455 + C13440 * C440 +
                 C13436 * C453) *
                    C31300 +
                (C13441 * C425 + C13437 * C443 + C13440 * C423 +
                 C13436 * C439) *
                    C116) *
                   C31468 * C19131 +
               ((C13441 * C133 + C13437 * C142 + C13440 * C130 +
                 C13436 * C141) *
                    C31300 +
                (C13441 * C121 + C13437 * C132 + C13440 * C120 +
                 C13436 * C131) *
                    C116) *
                   C31468 * C19130) *
                  C31283 * C111 +
              (((C13440 * C121 + C13436 * C132 + C13441 * C122 +
                 C13437 * C135) *
                    C116 +
                (C13440 * C133 + C13436 * C142 + C13441 * C134 +
                 C13437 * C143) *
                    C31300) *
                   C31468 * C19130 +
               ((C13440 * C425 + C13436 * C443 + C13441 * C667 +
                 C13437 * C668) *
                    C116 +
                (C13440 * C444 + C13436 * C455 + C13441 * C669 +
                 C13437 * C670) *
                    C31300) *
                   C31468 * C19131) *
                  C31283 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C13440 * C117 + C13436 * C124 + C13441 * C118 +
                  C13437 * C125) *
                     C116 +
                 (C13440 * C127 + C13436 * C138 + C13441 * C128 +
                  C13437 * C139) *
                     C31300) *
                    C31468 * C19130 +
                ((C13440 * C419 + C13436 * C429 + C13441 * C418 +
                  C13437 * C428) *
                     C116 +
                 (C13440 * C432 + C13436 * C449 + C13441 * C431 +
                  C13437 * C448) *
                     C31300) *
                    C31468 * C19131) *
                   C31624 -
               (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) *
                    C31468 * C19131 +
                ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) *
                    C31468 * C19130) *
                   C31612 +
               (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) *
                    C31468 * C19130 +
                ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) *
                    C31468 * C19131) *
                   C31587) *
                  C258 +
              ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) *
                    C31468 * C19130 +
                ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) *
                    C31468 * C19131) *
                   C31612 -
               (((C13441 * C430 + C13437 * C447 + C13440 * C431 +
                  C13436 * C448) *
                     C31300 +
                 (C13441 * C417 + C13437 * C427 + C13440 * C418 +
                  C13436 * C428) *
                     C116) *
                    C31468 * C19131 +
                ((C13441 * C129 + C13437 * C140 + C13440 * C128 +
                  C13436 * C139) *
                     C31300 +
                 (C13441 * C119 + C13437 * C126 + C13440 * C118 +
                  C13436 * C125) *
                     C116) *
                    C31468 * C19130) *
                   C31624 -
               (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) *
                    C31468 * C19131 +
                ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) *
                    C31468 * C19130) *
                   C31587) *
                  C259 +
              ((((C13440 * C119 + C13436 * C126 + C13441 * C120 +
                  C13437 * C131) *
                     C116 +
                 (C13440 * C129 + C13436 * C140 + C13441 * C130 +
                  C13437 * C141) *
                     C31300) *
                    C31468 * C19130 +
                ((C13440 * C417 + C13436 * C427 + C13441 * C423 +
                  C13437 * C439) *
                     C116 +
                 (C13440 * C430 + C13436 * C447 + C13441 * C440 +
                  C13437 * C453) *
                     C31300) *
                    C31468 * C19131) *
                   C31624 -
               (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) *
                    C31468 * C19131 +
                ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) *
                    C31468 * C19130) *
                   C31612 +
               (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) *
                    C31468 * C19130 +
                ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
                  C13437 * C1446) *
                     C116 +
                 (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
                  C13437 * C1448) *
                     C31300) *
                    C31468 * C19131) *
                   C31587) *
                  C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C19473 + C19474) * C415 - (C19475 + C19476) * C31614 +
            (C19477 + C19478) * C416 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C414 + (C19476 + C19475) * C31625 -
            (C19478 + C19477) * C415 - (C19480 + C19479) * C31614 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C416 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C258 +
          (((C19481 + C19482) * C415 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31625 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C414) +
            (C19483 + C19484) * C31614 - (C19485 + C19486) * C416 -
            (C19487 + C19488) * C31590) *
               C31468 * C19130 +
           ((C19486 + C19485) * C415 -
            ((C19484 + C19483) * C31625 + (C19482 + C19481) * C414) +
            (C19488 + C19487) * C31614 -
            (C13441 * C1857 + C13437 * C1863 + C13440 * C1858 +
             C13436 * C1864) *
                C416 -
            (C13441 * C1866 + C13437 * C1875 + C13440 * C1867 +
             C13436 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C259 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C414 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31625 -
            (C19489 + C19490) * C415 - (C19491 + C19492) * C31614 +
            (C19493 + C19494) * C416 + (C19495 + C19496) * C31590) *
               C31468 * C19130 +
           ((C19490 + C19489) * C414 + (C19492 + C19491) * C31625 -
            (C19494 + C19493) * C415 - (C19496 + C19495) * C31614 +
            (C13440 * C1857 + C13436 * C1863 + C13441 * C2137 +
             C13437 * C2138) *
                C416 +
            (C13440 * C1866 + C13436 * C1875 + C13441 * C2139 +
             C13437 * C2140) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C948 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C947 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
               C19131) *
              C1015 -
          (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
               C19131 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
               C19130) *
              C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
               C19130 +
           ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
               C19131) *
              C1017 -
          (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
               C19131 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
               C19130) *
              C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C31468 *
               C19130 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C116 +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31300) *
               C31468 * C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C19473 + C19474) * C415 - (C19475 + C19476) * C31614 +
            (C19477 + C19478) * C416 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C414 + (C19476 + C19475) * C31625 -
            (C19478 + C19477) * C415 - (C19480 + C19479) * C31614 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C416 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C947 +
          (((C14298 + C14297) * C415 -
            ((C13640 + C13639) * C31625 + (C13638 + C13637) * C414) +
            (C14300 + C14299) * C31614 - (C14732 + C14731) * C416 -
            (C14734 + C14733) * C31590) *
               C31468 * C19130 +
           ((C14731 + C14732) * C415 -
            ((C14299 + C14300) * C31625 + (C14297 + C14298) * C414) +
            (C14733 + C14734) * C31614 - (C16081 + C16082) * C416 -
            (C16083 + C16084) * C31590) *
               C31468 * C19131) *
              C948 +
          (((C13644 + C13643) * C414 + (C13642 + C13641) * C31625 -
            (C14736 + C14735) * C415 - (C14738 + C14737) * C31614 +
            (C14740 + C14739) * C416 + (C14742 + C14741) * C31590) *
               C31468 * C19130 +
           ((C14735 + C14736) * C414 + (C14737 + C14738) * C31625 -
            (C14739 + C14740) * C415 - (C14741 + C14742) * C31614 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C416 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C31590) *
               C31468 * C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C19473 + C19474) * C1673 - (C19475 + C19476) * C1670 +
            (C19477 + C19478) * C1674 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C1672 + (C19476 + C19475) * C1669 -
            (C19478 + C19477) * C1673 - (C19480 + C19479) * C1670 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C1674 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31621 +
          (((C19481 + C19482) * C1673 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C1669 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C1672) +
            (C19483 + C19484) * C1670 - (C19485 + C19486) * C1674 -
            (C19487 + C19488) * C31590) *
               C31468 * C19130 +
           ((C19486 + C19485) * C1673 -
            ((C19484 + C19483) * C1669 + (C19482 + C19481) * C1672) +
            (C19488 + C19487) * C1670 -
            (C13441 * C1857 + C13437 * C1863 + C13440 * C1858 +
             C13436 * C1864) *
                C1674 -
            (C13441 * C1866 + C13437 * C1875 + C13440 * C1867 +
             C13436 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31608 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C1672 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C1669 -
            (C19489 + C19490) * C1673 - (C19491 + C19492) * C1670 +
            (C19493 + C19494) * C1674 + (C19495 + C19496) * C31590) *
               C31468 * C19130 +
           ((C19490 + C19489) * C1672 + (C19492 + C19491) * C1669 -
            (C19494 + C19493) * C1673 - (C19496 + C19495) * C1670 +
            (C13440 * C1857 + C13436 * C1863 + C13441 * C2137 +
             C13437 * C2138) *
                C1674 +
            (C13440 * C1866 + C13436 * C1875 + C13441 * C2139 +
             C13437 * C2140) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C19473 + C19474) * C1673 - (C19475 + C19476) * C1670 +
            (C19477 + C19478) * C1674 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C1672 + (C19476 + C19475) * C1669 -
            (C19478 + C19477) * C1673 - (C19480 + C19479) * C1670 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C1674 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31624 +
          (((C14298 + C14297) * C1673 -
            ((C13640 + C13639) * C1669 + (C13638 + C13637) * C1672) +
            (C14300 + C14299) * C1670 - (C14732 + C14731) * C1674 -
            (C14734 + C14733) * C31590) *
               C31468 * C19130 +
           ((C14731 + C14732) * C1673 -
            ((C14299 + C14300) * C1669 + (C14297 + C14298) * C1672) +
            (C14733 + C14734) * C1670 - (C16081 + C16082) * C1674 -
            (C16083 + C16084) * C31590) *
               C31468 * C19131) *
              C31612 +
          (((C13644 + C13643) * C1672 + (C13642 + C13641) * C1669 -
            (C14736 + C14735) * C1673 - (C14738 + C14737) * C1670 +
            (C14740 + C14739) * C1674 + (C14742 + C14741) * C31590) *
               C31468 * C19130 +
           ((C14735 + C14736) * C1672 + (C14737 + C14738) * C1669 -
            (C14739 + C14740) * C1673 - (C14741 + C14742) * C1670 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C1674 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C31590) *
               C31468 * C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
               C1852 +
           (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
               C1847 -
           (C19473 + C19474) * C1853 - (C19475 + C19476) * C1848 +
           (C19477 + C19478) * C1854 + (C19479 + C19480) * C1849 -
           (C21181 + C21182) * C1855 - (C21183 + C21184) * C1850 +
           (C21185 + C21186) * C1856 + (C21187 + C21188) * C1851) *
              C31468 * C19130 +
          ((C19474 + C19473) * C1852 + (C19476 + C19475) * C1847 -
           (C19478 + C19477) * C1853 - (C19480 + C19479) * C1848 +
           (C21182 + C21181) * C1854 + (C21184 + C21183) * C1849 -
           (C21186 + C21185) * C1855 - (C21188 + C21187) * C1850 +
           (C13440 * C10730 + C13436 * C10732 + C13441 * C11004 +
            C13437 * C11005) *
               C1856 +
           (C13440 * C10733 + C13436 * C10736 + C13441 * C11006 +
            C13437 * C11007) *
               C1851) *
              C31468 * C19131) *
         C31283 * C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
             (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C947 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C666 -
             ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C948 +
           (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
             (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
                C31468 * C19130 +
            ((C14735 + C14736) * C665 + (C14737 + C14738) * C31559 -
             (C14739 + C14740) * C666 - (C14741 + C14742) * C31387) *
                C31468 * C19131) *
               C31587) *
              C31544 +
          ((((C19481 + C19482) * C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C666 -
             ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C947 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C665 + (C14303 + C14304) * C31559 -
             (C15809 + C15810) * C666 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C948 +
           (((C15088 + C15087) * C666 -
             ((C13652 + C13651) * C31559 + (C13650 + C13649) * C665) +
             (C15090 + C15089) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C666 -
             ((C15089 + C15090) * C31559 + (C15087 + C15088) * C665) +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31387) *
                C31468 * C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
            (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C31283 * C557 +
          (((C19481 + C19482) * C666 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31559 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C665) +
            (C19483 + C19484) * C31387) *
               C31468 * C19130 +
           ((C19486 + C19485) * C666 -
            ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
            (C19488 + C19487) * C31387) *
               C31468 * C19131) *
              C31283 * C558 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C665 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31559 -
            (C19489 + C19490) * C666 - (C19491 + C19492) * C31387) *
               C31468 * C19130 +
           ((C19490 + C19489) * C665 + (C19492 + C19491) * C31559 -
            (C19494 + C19493) * C666 - (C19496 + C19495) * C31387) *
               C31468 * C19131) *
              C31283 * C559 +
          (((C19765 + C19766) * C666 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31559 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C665) +
            (C19767 + C19768) * C31387) *
               C31468 * C19130 +
           ((C13440 * C424 + C13436 * C441 + C13441 * C426 + C13437 * C445) *
                C666 -
            ((C19768 + C19767) * C31559 + (C19766 + C19765) * C665) +
            (C13440 * C442 + C13436 * C454 + C13441 * C446 + C13437 * C456) *
                C31387) *
               C31468 * C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C2133 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C2129 -
            (C19473 + C19474) * C2134 - (C19475 + C19476) * C2130 +
            (C19477 + C19478) * C2135 + (C19479 + C19480) * C2131 -
            (C21181 + C21182) * C2136 - (C21183 + C21184) * C31603) *
               C31468 * C19130 +
           ((C19474 + C19473) * C2133 + (C19476 + C19475) * C2129 -
            (C19478 + C19477) * C2134 - (C19480 + C19479) * C2130 +
            (C21182 + C21181) * C2135 + (C21184 + C21183) * C2131 -
            (C21186 + C21185) * C2136 - (C21188 + C21187) * C31603) *
               C31468 * C19131) *
              C31283 * C31544 +
          (((C19481 + C19482) * C2134 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C2129 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C2133) +
            (C19483 + C19484) * C2130 - (C19485 + C19486) * C2135 -
            (C19487 + C19488) * C2131 + (C21521 + C21522) * C2136 +
            (C21523 + C21524) * C31603) *
               C31468 * C19130 +
           ((C19486 + C19485) * C2134 -
            ((C19484 + C19483) * C2129 + (C19482 + C19481) * C2133) +
            (C19488 + C19487) * C2130 - (C21522 + C21521) * C2135 -
            (C21524 + C21523) * C2131 +
            (C13440 * C1861 + C13436 * C1870 + C13441 * C1862 +
             C13437 * C1871) *
                C2136 +
            (C13440 * C1873 + C13436 * C1879 + C13441 * C1874 +
             C13437 * C1880) *
                C31603) *
               C31468 * C19131) *
              C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C13440 * C419 + C13436 * C429 + C13441 * C418 + C13437 * C428) *
                 C116 +
             (C13440 * C432 + C13436 * C449 + C13441 * C431 + C13437 * C448) *
                 C31300) *
                C31468 * C19131) *
               C31624 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31612 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C258 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31612 -
           (((C13441 * C430 + C13437 * C447 + C13440 * C431 + C13436 * C448) *
                 C31300 +
             (C13441 * C417 + C13437 * C427 + C13440 * C418 + C13436 * C428) *
                 C116) *
                C31468 * C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31624 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C13440 * C417 + C13436 * C427 + C13441 * C423 + C13437 * C439) *
                 C116 +
             (C13440 * C430 + C13436 * C447 + C13441 * C440 + C13437 * C453) *
                 C31300) *
                C31468 * C19131) *
               C31624 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31612 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C419 + C13436 * C429 + C13441 * C418 + C13437 * C428) *
                C116 +
            (C13440 * C432 + C13436 * C449 + C13441 * C431 + C13437 * C448) *
                C31300) *
               C31468 * C19131) *
              C31283 * C108 -
          (((C13441 * C430 + C13437 * C447 + C13440 * C431 + C13436 * C448) *
                C31300 +
            (C13441 * C417 + C13437 * C427 + C13440 * C418 + C13436 * C428) *
                C116) *
               C31468 * C19131 +
           ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                C31300 +
            (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                C116) *
               C31468 * C19130) *
              C31283 * C109 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C116 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C417 + C13436 * C427 + C13441 * C423 + C13437 * C439) *
                C116 +
            (C13440 * C430 + C13436 * C447 + C13441 * C440 + C13437 * C453) *
                C31300) *
               C31468 * C19131) *
              C31283 * C110 -
          (((C13441 * C444 + C13437 * C455 + C13440 * C440 + C13436 * C453) *
                C31300 +
            (C13441 * C425 + C13437 * C443 + C13440 * C423 + C13436 * C439) *
                C116) *
               C31468 * C19131 +
           ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                C31300 +
            (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                C116) *
               C31468 * C19130) *
              C31283 * C111 +
          (((C13440 * C121 + C13436 * C132 + C13441 * C122 + C13437 * C135) *
                C116 +
            (C13440 * C133 + C13436 * C142 + C13441 * C134 + C13437 * C143) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C425 + C13436 * C443 + C13441 * C667 + C13437 * C668) *
                C116 +
            (C13440 * C444 + C13436 * C455 + C13441 * C669 + C13437 * C670) *
                C31300) *
               C31468 * C19131) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C948 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C947 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
               C19131) *
              C1015 -
          (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
               C19131 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
               C19130) *
              C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
               C19130 +
           ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
               C19131) *
              C1017 -
          (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
               C19131 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
               C19130) *
              C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C31468 *
               C19130 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C116 +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31300) *
               C31468 * C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C19473 + C19474) * C1673 - (C19475 + C19476) * C1670 +
            (C19477 + C19478) * C1674 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C1672 + (C19476 + C19475) * C1669 -
            (C19478 + C19477) * C1673 - (C19480 + C19479) * C1670 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C1674 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31621 +
          (((C19481 + C19482) * C1673 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C1669 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C1672) +
            (C19483 + C19484) * C1670 - (C19485 + C19486) * C1674 -
            (C19487 + C19488) * C31590) *
               C31468 * C19130 +
           ((C19486 + C19485) * C1673 -
            ((C19484 + C19483) * C1669 + (C19482 + C19481) * C1672) +
            (C19488 + C19487) * C1670 -
            (C13441 * C1857 + C13437 * C1863 + C13440 * C1858 +
             C13436 * C1864) *
                C1674 -
            (C13441 * C1866 + C13437 * C1875 + C13440 * C1867 +
             C13436 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31608 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C1672 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C1669 -
            (C19489 + C19490) * C1673 - (C19491 + C19492) * C1670 +
            (C19493 + C19494) * C1674 + (C19495 + C19496) * C31590) *
               C31468 * C19130 +
           ((C19490 + C19489) * C1672 + (C19492 + C19491) * C1669 -
            (C19494 + C19493) * C1673 - (C19496 + C19495) * C1670 +
            (C13440 * C1857 + C13436 * C1863 + C13441 * C2137 +
             C13437 * C2138) *
                C1674 +
            (C13440 * C1866 + C13436 * C1875 + C13441 * C2139 +
             C13437 * C2140) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C1672 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C1669 -
            (C19473 + C19474) * C1673 - (C19475 + C19476) * C1670 +
            (C19477 + C19478) * C1674 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C1672 + (C19476 + C19475) * C1669 -
            (C19478 + C19477) * C1673 - (C19480 + C19479) * C1670 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C1674 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31624 +
          (((C14298 + C14297) * C1673 -
            ((C13640 + C13639) * C1669 + (C13638 + C13637) * C1672) +
            (C14300 + C14299) * C1670 - (C14732 + C14731) * C1674 -
            (C14734 + C14733) * C31590) *
               C31468 * C19130 +
           ((C14731 + C14732) * C1673 -
            ((C14299 + C14300) * C1669 + (C14297 + C14298) * C1672) +
            (C14733 + C14734) * C1670 - (C16081 + C16082) * C1674 -
            (C16083 + C16084) * C31590) *
               C31468 * C19131) *
              C31612 +
          (((C13644 + C13643) * C1672 + (C13642 + C13641) * C1669 -
            (C14736 + C14735) * C1673 - (C14738 + C14737) * C1670 +
            (C14740 + C14739) * C1674 + (C14742 + C14741) * C31590) *
               C31468 * C19130 +
           ((C14735 + C14736) * C1672 + (C14737 + C14738) * C1669 -
            (C14739 + C14740) * C1673 - (C14741 + C14742) * C1670 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C1674 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C31590) *
               C31468 * C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
             (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C3114 -
             ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31261 +
          ((((C19481 + C19482) * C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C3114 -
             ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C3113 + (C14303 + C14304) * C3111 -
             (C15809 + C15810) * C3114 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31345) *
              C31269 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C3113 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C3111 -
             (C19489 + C19490) * C3114 - (C19491 + C19492) * C31387) *
                C31468 * C19130 +
            ((C19490 + C19489) * C3113 + (C19492 + C19491) * C3111 -
             (C19494 + C19493) * C3114 - (C19496 + C19495) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C14306 + C14305) * C3114 -
             ((C13656 + C13655) * C3111 + (C13654 + C13653) * C3113) +
             (C14308 + C14307) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
              C13437 * C2028) *
                 C3114 -
             ((C14307 + C14308) * C3111 + (C14305 + C14306) * C3113) +
             (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
              C13437 * C2030) *
                 C31387) *
                C31468 * C19131) *
               C31345) *
              C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C30320 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31383 -
             (C19473 + C19474) * C30312 - (C19475 + C19476) * C31390 +
             (C19477 + C19478) * C30326 + (C19479 + C19480) * C3625) *
                C31468 * C19130 +
            ((C19474 + C19473) * C30320 + (C19476 + C19475) * C31383 -
             (C19478 + C19477) * C30312 - (C19480 + C19479) * C31390 +
             (C21182 + C21181) * C30326 + (C21184 + C21183) * C3625) *
                C31468 * C19131) *
               C31558 +
           (((C14298 + C14297) * C30312 -
             ((C13640 + C13639) * C31383 + (C13638 + C13637) * C30320) +
             (C14300 + C14299) * C31390 - (C14732 + C14731) * C30326 -
             (C14734 + C14733) * C3625) *
                C31468 * C19130 +
            ((C14731 + C14732) * C30312 -
             ((C14299 + C14300) * C31383 + (C14297 + C14298) * C30320) +
             (C14733 + C14734) * C31390 - (C16081 + C16082) * C30326 -
             (C16083 + C16084) * C3625) *
                C31468 * C19131) *
               C31345) *
              C2457 +
          ((((C19481 + C19482) * C30312 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31383 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C30320) +
             (C19483 + C19484) * C31390 - (C19485 + C19486) * C30326 -
             (C19487 + C19488) * C3625) *
                C31468 * C19130 +
            ((C19486 + C19485) * C30312 -
             ((C19484 + C19483) * C31383 + (C19482 + C19481) * C30320) +
             (C19488 + C19487) * C31390 - (C21522 + C21521) * C30326 -
             (C21524 + C21523) * C3625) *
                C31468 * C19131) *
               C31558 +
           (((C13645 + C13646) * C30320 + (C13647 + C13648) * C31383 -
             (C14302 + C14301) * C30312 - (C14304 + C14303) * C31390 +
             (C15810 + C15809) * C30326 + (C15812 + C15811) * C3625) *
                C31468 * C19130 +
            ((C14301 + C14302) * C30320 + (C14303 + C14304) * C31383 -
             (C15809 + C15810) * C30312 - (C15811 + C15812) * C31390 +
             (C13440 * C2240 + C13436 * C2243 + C13441 * C2241 +
              C13437 * C2244) *
                 C30326 +
             (C13440 * C2246 + C13436 * C2249 + C13441 * C2247 +
              C13437 * C2250) *
                 C3625) *
                C31468 * C19131) *
               C31345) *
              C31266)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
             (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31624 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C3114 -
             ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31612 +
           (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
             (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
                C31468 * C19130 +
            ((C14735 + C14736) * C3113 + (C14737 + C14738) * C3111 -
             (C14739 + C14740) * C3114 - (C14741 + C14742) * C31387) *
                C31468 * C19131) *
               C31587) *
              C2457 +
          ((((C19481 + C19482) * C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C3114 -
             ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31624 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C3113 + (C14303 + C14304) * C3111 -
             (C15809 + C15810) * C3114 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31612 +
           (((C15088 + C15087) * C3114 -
             ((C13652 + C13651) * C3111 + (C13650 + C13649) * C3113) +
             (C15090 + C15089) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C3114 -
             ((C15089 + C15090) * C3111 + (C15087 + C15088) * C3113) +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31387) *
                C31468 * C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
            (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C31283 * C31630 +
          (((C19481 + C19482) * C3114 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C3111 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C3113) +
            (C19483 + C19484) * C31387) *
               C31468 * C19130 +
           ((C19486 + C19485) * C3114 -
            ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
            (C19488 + C19487) * C31387) *
               C31468 * C19131) *
              C31283 * C31623 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C3113 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C3111 -
            (C19489 + C19490) * C3114 - (C19491 + C19492) * C31387) *
               C31468 * C19130 +
           ((C19490 + C19489) * C3113 + (C19492 + C19491) * C3111 -
            (C19494 + C19493) * C3114 - (C19496 + C19495) * C31387) *
               C31468 * C19131) *
              C31283 * C31610 +
          (((C19765 + C19766) * C3114 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C3111 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C3113) +
            (C19767 + C19768) * C31387) *
               C31468 * C19130 +
           ((C13440 * C424 + C13436 * C441 + C13441 * C426 + C13437 * C445) *
                C3114 -
            ((C19768 + C19767) * C3111 + (C19766 + C19765) * C3113) +
            (C13440 * C442 + C13436 * C454 + C13441 * C446 + C13437 * C456) *
                C31387) *
               C31468 * C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3363 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31632 -
            (C19473 + C19474) * C3364 - (C19475 + C19476) * C31629 +
            (C19477 + C19478) * C3365 + (C19479 + C19480) * C31620 -
            (C21181 + C21182) * C3366 - (C21183 + C21184) * C31603) *
               C31468 * C19130 +
           ((C19474 + C19473) * C3363 + (C19476 + C19475) * C31632 -
            (C19478 + C19477) * C3364 - (C19480 + C19479) * C31629 +
            (C21182 + C21181) * C3365 + (C21184 + C21183) * C31620 -
            (C21186 + C21185) * C3366 - (C21188 + C21187) * C31603) *
               C31468 * C19131) *
              C31283 * C2457 +
          (((C19481 + C19482) * C3364 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31632 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C3363) +
            (C19483 + C19484) * C31629 - (C19485 + C19486) * C3365 -
            (C19487 + C19488) * C31620 + (C21521 + C21522) * C3366 +
            (C21523 + C21524) * C31603) *
               C31468 * C19130 +
           ((C19486 + C19485) * C3364 -
            ((C19484 + C19483) * C31632 + (C19482 + C19481) * C3363) +
            (C19488 + C19487) * C31629 - (C21522 + C21521) * C3365 -
            (C21524 + C21523) * C31620 +
            (C13440 * C1861 + C13436 * C1870 + C13441 * C1862 +
             C13437 * C1871) *
                C3366 +
            (C13440 * C1873 + C13436 * C1879 + C13441 * C1874 +
             C13437 * C1880) *
                C31603) *
               C31468 * C19131) *
              C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C30320 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31383 -
            (C19473 + C19474) * C30312 - (C19475 + C19476) * C31390 +
            (C19477 + C19478) * C30326 + (C19479 + C19480) * C3625) *
               C31468 * C19130 +
           ((C19474 + C19473) * C30320 + (C19476 + C19475) * C31383 -
            (C19478 + C19477) * C30312 - (C19480 + C19479) * C31390 +
            (C21182 + C21181) * C30326 + (C21184 + C21183) * C3625) *
               C31468 * C19131) *
              C31283 * C31261 +
          (((C19481 + C19482) * C30312 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31383 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C30320) +
            (C19483 + C19484) * C31390 - (C19485 + C19486) * C30326 -
            (C19487 + C19488) * C3625) *
               C31468 * C19130 +
           ((C19486 + C19485) * C30312 -
            ((C19484 + C19483) * C31383 + (C19482 + C19481) * C30320) +
            (C19488 + C19487) * C31390 - (C21522 + C21521) * C30326 -
            (C21524 + C21523) * C3625) *
               C31468 * C19131) *
              C31283 * C31269 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C30320 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31383 -
            (C19489 + C19490) * C30312 - (C19491 + C19492) * C31390 +
            (C19493 + C19494) * C30326 + (C19495 + C19496) * C3625) *
               C31468 * C19130 +
           ((C19490 + C19489) * C30320 + (C19492 + C19491) * C31383 -
            (C19494 + C19493) * C30312 - (C19496 + C19495) * C31390 +
            (C13440 * C1857 + C13436 * C1863 + C13441 * C2137 +
             C13437 * C2138) *
                C30326 +
            (C13440 * C1866 + C13436 * C1875 + C13441 * C2139 +
             C13437 * C2140) *
                C3625) *
               C31468 * C19131) *
              C31283 * C2720)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C3113 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C3111 -
            (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
            (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C31283 * C31630 +
          (((C19481 + C19482) * C3114 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C3111 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C3113) +
            (C19483 + C19484) * C31387) *
               C31468 * C19130 +
           ((C19486 + C19485) * C3114 -
            ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
            (C19488 + C19487) * C31387) *
               C31468 * C19131) *
              C31283 * C31623 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C3113 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C3111 -
            (C19489 + C19490) * C3114 - (C19491 + C19492) * C31387) *
               C31468 * C19130 +
           ((C19490 + C19489) * C3113 + (C19492 + C19491) * C3111 -
            (C19494 + C19493) * C3114 - (C19496 + C19495) * C31387) *
               C31468 * C19131) *
              C31283 * C31610 +
          (((C19765 + C19766) * C3114 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C3111 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C3113) +
            (C19767 + C19768) * C31387) *
               C31468 * C19130 +
           ((C13440 * C424 + C13436 * C441 + C13441 * C426 + C13437 * C445) *
                C3114 -
            ((C19768 + C19767) * C3111 + (C19766 + C19765) * C3113) +
            (C13440 * C442 + C13436 * C454 + C13441 * C446 + C13437 * C456) *
                C31387) *
               C31468 * C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C3113 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C3111 -
             (C19473 + C19474) * C3114 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C3113 + (C19476 + C19475) * C3111 -
             (C19478 + C19477) * C3114 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31624 +
           (((C14298 + C14297) * C3114 -
             ((C13640 + C13639) * C3111 + (C13638 + C13637) * C3113) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C3114 -
             ((C14299 + C14300) * C3111 + (C14297 + C14298) * C3113) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31612 +
           (((C13644 + C13643) * C3113 + (C13642 + C13641) * C3111 -
             (C14736 + C14735) * C3114 - (C14738 + C14737) * C31387) *
                C31468 * C19130 +
            ((C14735 + C14736) * C3113 + (C14737 + C14738) * C3111 -
             (C14739 + C14740) * C3114 - (C14741 + C14742) * C31387) *
                C31468 * C19131) *
               C31587) *
              C2457 +
          ((((C19481 + C19482) * C3114 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C3111 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C3113) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C3114 -
             ((C19484 + C19483) * C3111 + (C19482 + C19481) * C3113) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31624 +
           (((C13645 + C13646) * C3113 + (C13647 + C13648) * C3111 -
             (C14302 + C14301) * C3114 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C3113 + (C14303 + C14304) * C3111 -
             (C15809 + C15810) * C3114 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31612 +
           (((C15088 + C15087) * C3114 -
             ((C13652 + C13651) * C3111 + (C13650 + C13649) * C3113) +
             (C15090 + C15089) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C3114 -
             ((C15089 + C15090) * C3111 + (C15087 + C15088) * C3113) +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31387) *
                C31468 * C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C31558 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31345) *
              C557 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31345 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31558) *
              C558 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C31558 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31345) *
              C559 +
          ((((C13945 + C13946) * C116 + (C13947 + C13948) * C31300) * C31468 *
                C19130 +
            ((C13440 * C820 + C13436 * C828 + C13441 * C821 + C13437 * C830) *
                 C116 +
             (C13440 * C829 + C13436 * C835 + C13441 * C831 + C13437 * C836) *
                 C31300) *
                C31468 * C19131) *
               C31345 -
           (((C13441 * C444 + C13437 * C455 + C13440 * C440 + C13436 * C453) *
                 C31300 +
             (C13441 * C425 + C13437 * C443 + C13440 * C423 + C13436 * C439) *
                 C116) *
                C31468 * C19131 +
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31300 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C116) *
                C31468 * C19130) *
               C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C1289 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C1290 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C1291 -
           (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
                C19131 +
            ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
                C19130) *
               C31597) *
              C31544 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C1290 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C1289 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C1291 +
           (((C14884 + C14883) * C116 + (C14882 + C14881) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1548 + C13436 * C1551 + C13441 * C1549 +
              C13437 * C1552) *
                 C116 +
             (C13440 * C1554 + C13436 * C1557 + C13441 * C1555 +
              C13437 * C1558) *
                 C31300) *
                C31468 * C19131) *
               C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
             (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C666 -
             ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C31345) *
              C258 +
          ((((C19481 + C19482) * C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C666 -
             ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C665 + (C14303 + C14304) * C31559 -
             (C15809 + C15810) * C666 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C31345) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C665 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31559 -
             (C19489 + C19490) * C666 - (C19491 + C19492) * C31387) *
                C31468 * C19130 +
            ((C19490 + C19489) * C665 + (C19492 + C19491) * C31559 -
             (C19494 + C19493) * C666 - (C19496 + C19495) * C31387) *
                C31468 * C19131) *
               C31558 +
           (((C14306 + C14305) * C666 -
             ((C13656 + C13655) * C31559 + (C13654 + C13653) * C665) +
             (C14308 + C14307) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1155 + C13436 * C1164 + C13441 * C2027 +
              C13437 * C2028) *
                 C666 -
             ((C14307 + C14308) * C31559 + (C14305 + C14306) * C665) +
             (C13440 * C1167 + C13436 * C1182 + C13441 * C2029 +
              C13437 * C2030) *
                 C31387) *
                C31468 * C19131) *
               C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
            (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C1289 +
          (((C14298 + C14297) * C666 -
            ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
            (C14300 + C14299) * C31387) *
               C31468 * C19130 +
           ((C14731 + C14732) * C666 -
            ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
            (C14733 + C14734) * C31387) *
               C31468 * C19131) *
              C1290 +
          (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
            (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
               C31468 * C19130 +
           ((C14735 + C14736) * C665 + (C14737 + C14738) * C31559 -
            (C14739 + C14740) * C666 - (C14741 + C14742) * C31387) *
               C31468 * C19131) *
              C1291 +
          (((C15230 + C15229) * C666 -
            ((C14556 + C14555) * C31559 + (C14554 + C14553) * C665) +
            (C15232 + C15231) * C31387) *
               C31468 * C19130 +
           ((C13440 * C5607 + C13436 * C5610 + C13441 * C6525 +
             C13437 * C6526) *
                C666 -
            ((C15231 + C15232) * C31559 + (C15229 + C15230) * C665) +
            (C13440 * C5611 + C13436 * C5616 + C13441 * C6527 +
             C13437 * C6528) *
                C31387) *
               C31468 * C19131) *
              C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C13440 * C419 + C13436 * C429 + C13441 * C418 + C13437 * C428) *
                 C116 +
             (C13440 * C432 + C13436 * C449 + C13441 * C431 + C13437 * C448) *
                 C31300) *
                C31468 * C19131) *
               C31624 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31612 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C258 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31612 -
           (((C13441 * C430 + C13437 * C447 + C13440 * C431 + C13436 * C448) *
                 C31300 +
             (C13441 * C417 + C13437 * C427 + C13440 * C418 + C13436 * C428) *
                 C116) *
                C31468 * C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31624 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C13440 * C417 + C13436 * C427 + C13441 * C423 + C13437 * C439) *
                 C116 +
             (C13440 * C430 + C13436 * C447 + C13441 * C440 + C13437 * C453) *
                 C31300) *
                C31468 * C19131) *
               C31624 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31612 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C419 + C13436 * C429 + C13441 * C418 + C13437 * C428) *
                C116 +
            (C13440 * C432 + C13436 * C449 + C13441 * C431 + C13437 * C448) *
                C31300) *
               C31468 * C19131) *
              C31283 * C108 -
          (((C13441 * C430 + C13437 * C447 + C13440 * C431 + C13436 * C448) *
                C31300 +
            (C13441 * C417 + C13437 * C427 + C13440 * C418 + C13436 * C428) *
                C116) *
               C31468 * C19131 +
           ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                C31300 +
            (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                C116) *
               C31468 * C19130) *
              C31283 * C109 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C116 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C417 + C13436 * C427 + C13441 * C423 + C13437 * C439) *
                C116 +
            (C13440 * C430 + C13436 * C447 + C13441 * C440 + C13437 * C453) *
                C31300) *
               C31468 * C19131) *
              C31283 * C110 -
          (((C13441 * C444 + C13437 * C455 + C13440 * C440 + C13436 * C453) *
                C31300 +
            (C13441 * C425 + C13437 * C443 + C13440 * C423 + C13436 * C439) *
                C116) *
               C31468 * C19131 +
           ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                C31300 +
            (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                C116) *
               C31468 * C19130) *
              C31283 * C111 +
          (((C13440 * C121 + C13436 * C132 + C13441 * C122 + C13437 * C135) *
                C116 +
            (C13440 * C133 + C13436 * C142 + C13441 * C134 + C13437 * C143) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C425 + C13436 * C443 + C13441 * C667 + C13437 * C668) *
                C116 +
            (C13440 * C444 + C13436 * C455 + C13441 * C669 + C13437 * C670) *
                C31300) *
               C31468 * C19131) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C19473 + C19474) * C415 - (C19475 + C19476) * C31614 +
            (C19477 + C19478) * C416 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C414 + (C19476 + C19475) * C31625 -
            (C19478 + C19477) * C415 - (C19480 + C19479) * C31614 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C416 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C258 +
          (((C19481 + C19482) * C415 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31625 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C414) +
            (C19483 + C19484) * C31614 - (C19485 + C19486) * C416 -
            (C19487 + C19488) * C31590) *
               C31468 * C19130 +
           ((C19486 + C19485) * C415 -
            ((C19484 + C19483) * C31625 + (C19482 + C19481) * C414) +
            (C19488 + C19487) * C31614 -
            (C13441 * C1857 + C13437 * C1863 + C13440 * C1858 +
             C13436 * C1864) *
                C416 -
            (C13441 * C1866 + C13437 * C1875 + C13440 * C1867 +
             C13436 * C1876) *
                C31590) *
               C31468 * C19131) *
              C31283 * C259 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C414 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31625 -
            (C19489 + C19490) * C415 - (C19491 + C19492) * C31614 +
            (C19493 + C19494) * C416 + (C19495 + C19496) * C31590) *
               C31468 * C19130 +
           ((C19490 + C19489) * C414 + (C19492 + C19491) * C31625 -
            (C19494 + C19493) * C415 - (C19496 + C19495) * C31614 +
            (C13440 * C1857 + C13436 * C1863 + C13441 * C2137 +
             C13437 * C2138) *
                C416 +
            (C13440 * C1866 + C13436 * C1875 + C13441 * C2139 +
             C13437 * C2140) *
                C31590) *
               C31468 * C19131) *
              C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C948 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C947 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
               C19131) *
              C1015 -
          (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
               C19131 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
               C19130) *
              C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
               C19130 +
           ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
               C19131) *
              C1017 -
          (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
               C19131 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
               C19130) *
              C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C31468 *
               C19130 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C116 +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31300) *
               C31468 * C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C414 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31625 -
            (C19473 + C19474) * C415 - (C19475 + C19476) * C31614 +
            (C19477 + C19478) * C416 + (C19479 + C19480) * C31590) *
               C31468 * C19130 +
           ((C19474 + C19473) * C414 + (C19476 + C19475) * C31625 -
            (C19478 + C19477) * C415 - (C19480 + C19479) * C31614 +
            (C13440 * C1859 + C13436 * C1865 + C13441 * C1858 +
             C13437 * C1864) *
                C416 +
            (C13440 * C1868 + C13436 * C1877 + C13441 * C1867 +
             C13437 * C1876) *
                C31590) *
               C31468 * C19131) *
              C947 +
          (((C14298 + C14297) * C415 -
            ((C13640 + C13639) * C31625 + (C13638 + C13637) * C414) +
            (C14300 + C14299) * C31614 - (C14732 + C14731) * C416 -
            (C14734 + C14733) * C31590) *
               C31468 * C19130 +
           ((C14731 + C14732) * C415 -
            ((C14299 + C14300) * C31625 + (C14297 + C14298) * C414) +
            (C14733 + C14734) * C31614 - (C16081 + C16082) * C416 -
            (C16083 + C16084) * C31590) *
               C31468 * C19131) *
              C948 +
          (((C13644 + C13643) * C414 + (C13642 + C13641) * C31625 -
            (C14736 + C14735) * C415 - (C14738 + C14737) * C31614 +
            (C14740 + C14739) * C416 + (C14742 + C14741) * C31590) *
               C31468 * C19130 +
           ((C14735 + C14736) * C414 + (C14737 + C14738) * C31625 -
            (C14739 + C14740) * C415 - (C14741 + C14742) * C31614 +
            (C13440 * C6368 + C13436 * C6372 + C13441 * C6651 +
             C13437 * C6652) *
                C416 +
            (C13440 * C6373 + C13436 * C6377 + C13441 * C6653 +
             C13437 * C6654) *
                C31590) *
               C31468 * C19131) *
              C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C665 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31559 -
            (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
               C31468 * C19130 +
           ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
            (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
               C31468 * C19131) *
              C31283 * C557 +
          (((C19481 + C19482) * C666 -
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31559 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C665) +
            (C19483 + C19484) * C31387) *
               C31468 * C19130 +
           ((C19486 + C19485) * C666 -
            ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
            (C19488 + C19487) * C31387) *
               C31468 * C19131) *
              C31283 * C558 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C665 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31559 -
            (C19489 + C19490) * C666 - (C19491 + C19492) * C31387) *
               C31468 * C19130 +
           ((C19490 + C19489) * C665 + (C19492 + C19491) * C31559 -
            (C19494 + C19493) * C666 - (C19496 + C19495) * C31387) *
               C31468 * C19131) *
              C31283 * C559 +
          (((C19765 + C19766) * C666 -
            ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                 C31559 +
             (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                 C665) +
            (C19767 + C19768) * C31387) *
               C31468 * C19130 +
           ((C13440 * C424 + C13436 * C441 + C13441 * C426 + C13437 * C445) *
                C666 -
            ((C19768 + C19767) * C31559 + (C19766 + C19765) * C665) +
            (C13440 * C442 + C13436 * C454 + C13441 * C446 + C13437 * C456) *
                C31387) *
               C31468 * C19131) *
              C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C665 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31559 -
             (C19473 + C19474) * C666 - (C19475 + C19476) * C31387) *
                C31468 * C19130 +
            ((C19474 + C19473) * C665 + (C19476 + C19475) * C31559 -
             (C19478 + C19477) * C666 - (C19480 + C19479) * C31387) *
                C31468 * C19131) *
               C947 +
           (((C14298 + C14297) * C666 -
             ((C13640 + C13639) * C31559 + (C13638 + C13637) * C665) +
             (C14300 + C14299) * C31387) *
                C31468 * C19130 +
            ((C14731 + C14732) * C666 -
             ((C14299 + C14300) * C31559 + (C14297 + C14298) * C665) +
             (C14733 + C14734) * C31387) *
                C31468 * C19131) *
               C948 +
           (((C13644 + C13643) * C665 + (C13642 + C13641) * C31559 -
             (C14736 + C14735) * C666 - (C14738 + C14737) * C31387) *
                C31468 * C19130 +
            ((C14735 + C14736) * C665 + (C14737 + C14738) * C31559 -
             (C14739 + C14740) * C666 - (C14741 + C14742) * C31387) *
                C31468 * C19131) *
               C31587) *
              C31544 +
          ((((C19481 + C19482) * C666 -
             ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                  C31559 +
              (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                  C665) +
             (C19483 + C19484) * C31387) *
                C31468 * C19130 +
            ((C19486 + C19485) * C666 -
             ((C19484 + C19483) * C31559 + (C19482 + C19481) * C665) +
             (C19488 + C19487) * C31387) *
                C31468 * C19131) *
               C947 +
           (((C13645 + C13646) * C665 + (C13647 + C13648) * C31559 -
             (C14302 + C14301) * C666 - (C14304 + C14303) * C31387) *
                C31468 * C19130 +
            ((C14301 + C14302) * C665 + (C14303 + C14304) * C31559 -
             (C15809 + C15810) * C666 - (C15811 + C15812) * C31387) *
                C31468 * C19131) *
               C948 +
           (((C15088 + C15087) * C666 -
             ((C13652 + C13651) * C31559 + (C13650 + C13649) * C665) +
             (C15090 + C15089) * C31387) *
                C31468 * C19130 +
            ((C13440 * C1162 + C13436 * C1177 + C13441 * C1163 +
              C13437 * C1178) *
                 C666 -
             ((C15089 + C15090) * C31559 + (C15087 + C15088) * C665) +
             (C13440 * C1180 + C13436 * C1189 + C13441 * C1181 +
              C13437 * C1190) *
                 C31387) *
                C31468 * C19131) *
               C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C419 + C13436 * C429 + C13441 * C418 + C13437 * C428) *
                C116 +
            (C13440 * C432 + C13436 * C449 + C13441 * C431 + C13437 * C448) *
                C31300) *
               C31468 * C19131) *
              C31283 * C108 -
          (((C13441 * C430 + C13437 * C447 + C13440 * C431 + C13436 * C448) *
                C31300 +
            (C13441 * C417 + C13437 * C427 + C13440 * C418 + C13436 * C428) *
                C116) *
               C31468 * C19131 +
           ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                C31300 +
            (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                C116) *
               C31468 * C19130) *
              C31283 * C109 +
          (((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                C116 +
            (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C417 + C13436 * C427 + C13441 * C423 + C13437 * C439) *
                C116 +
            (C13440 * C430 + C13436 * C447 + C13441 * C440 + C13437 * C453) *
                C31300) *
               C31468 * C19131) *
              C31283 * C110 -
          (((C13441 * C444 + C13437 * C455 + C13440 * C440 + C13436 * C453) *
                C31300 +
            (C13441 * C425 + C13437 * C443 + C13440 * C423 + C13436 * C439) *
                C116) *
               C31468 * C19131 +
           ((C13441 * C133 + C13437 * C142 + C13440 * C130 + C13436 * C141) *
                C31300 +
            (C13441 * C121 + C13437 * C132 + C13440 * C120 + C13436 * C131) *
                C116) *
               C31468 * C19130) *
              C31283 * C111 +
          (((C13440 * C121 + C13436 * C132 + C13441 * C122 + C13437 * C135) *
                C116 +
            (C13440 * C133 + C13436 * C142 + C13441 * C134 + C13437 * C143) *
                C31300) *
               C31468 * C19130 +
           ((C13440 * C425 + C13436 * C443 + C13441 * C667 + C13437 * C668) *
                C116 +
            (C13440 * C444 + C13436 * C455 + C13441 * C669 + C13437 * C670) *
                C31300) *
               C31468 * C19131) *
              C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C13440 * C419 + C13436 * C429 + C13441 * C418 + C13437 * C428) *
                 C116 +
             (C13440 * C432 + C13436 * C449 + C13441 * C431 + C13437 * C448) *
                 C31300) *
                C31468 * C19131) *
               C31624 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C31612 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C258 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C31612 -
           (((C13441 * C430 + C13437 * C447 + C13440 * C431 + C13436 * C448) *
                 C31300 +
             (C13441 * C417 + C13437 * C427 + C13440 * C418 + C13436 * C428) *
                 C116) *
                C31468 * C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C31624 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C259 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C13440 * C417 + C13436 * C427 + C13441 * C423 + C13437 * C439) *
                 C116 +
             (C13440 * C430 + C13436 * C447 + C13441 * C440 + C13437 * C453) *
                 C31300) *
                C31468 * C19131) *
               C31624 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C31612 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                 C116 +
             (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                 C31300) *
                C31468 * C19130 +
            ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
                C19131 +
            ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
                C19130 +
            ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
                C19131) *
               C31587) *
              C31621 +
          ((((C13645 + C13646) * C116 + (C13647 + C13648) * C31300) * C31468 *
                C19130 +
            ((C14301 + C14302) * C116 + (C14303 + C14304) * C31300) * C31468 *
                C19131) *
               C948 -
           (((C19484 + C19483) * C31300 + (C19482 + C19481) * C116) * C31468 *
                C19131 +
            ((C13441 * C129 + C13437 * C140 + C13440 * C128 + C13436 * C139) *
                 C31300 +
             (C13441 * C119 + C13437 * C126 + C13440 * C118 + C13436 * C125) *
                 C116) *
                C31468 * C19130) *
               C947 -
           (((C15089 + C15090) * C31300 + (C15087 + C15088) * C116) * C31468 *
                C19131 +
            ((C13652 + C13651) * C31300 + (C13650 + C13649) * C116) * C31468 *
                C19130) *
               C31587) *
              C31608 +
          ((((C13440 * C119 + C13436 * C126 + C13441 * C120 + C13437 * C131) *
                 C116 +
             (C13440 * C129 + C13436 * C140 + C13441 * C130 + C13437 * C141) *
                 C31300) *
                C31468 * C19130 +
            ((C19490 + C19489) * C116 + (C19492 + C19491) * C31300) * C31468 *
                C19131) *
               C947 -
           (((C14307 + C14308) * C31300 + (C14305 + C14306) * C116) * C31468 *
                C19131 +
            ((C13656 + C13655) * C31300 + (C13654 + C13653) * C116) * C31468 *
                C19130) *
               C948 +
           (((C13660 + C13659) * C116 + (C13658 + C13657) * C31300) * C31468 *
                C19130 +
            ((C13440 * C1158 + C13436 * C1170 + C13441 * C1445 +
              C13437 * C1446) *
                 C116 +
             (C13440 * C1173 + C13436 * C1185 + C13441 * C1447 +
              C13437 * C1448) *
                 C31300) *
                C31468 * C19131) *
               C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13440 * C117 + C13436 * C124 + C13441 * C118 + C13437 * C125) *
                C116 +
            (C13440 * C127 + C13436 * C138 + C13441 * C128 + C13437 * C139) *
                C31300) *
               C31468 * C19130 +
           ((C19474 + C19473) * C116 + (C19476 + C19475) * C31300) * C31468 *
               C19131) *
              C1015 -
          (((C14299 + C14300) * C31300 + (C14297 + C14298) * C116) * C31468 *
               C19131 +
           ((C13640 + C13639) * C31300 + (C13638 + C13637) * C116) * C31468 *
               C19130) *
              C1016 +
          (((C13644 + C13643) * C116 + (C13642 + C13641) * C31300) * C31468 *
               C19130 +
           ((C14735 + C14736) * C116 + (C14737 + C14738) * C31300) * C31468 *
               C19131) *
              C1017 -
          (((C15231 + C15232) * C31300 + (C15229 + C15230) * C116) * C31468 *
               C19131 +
           ((C14556 + C14555) * C31300 + (C14554 + C14553) * C116) * C31468 *
               C19130) *
              C1018 +
          (((C14560 + C14559) * C116 + (C14558 + C14557) * C31300) * C31468 *
               C19130 +
           ((C13440 * C5608 + C13436 * C5612 + C13441 * C5923 +
             C13437 * C5924) *
                C116 +
            (C13440 * C5613 + C13436 * C5617 + C13441 * C5925 +
             C13437 * C5926) *
                C31300) *
               C31468 * C19131) *
              C1019) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31341 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31348 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C2717) *
              C31261 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31348 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31341 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C2717) *
              C31269 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31341 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31348 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C2717) *
              C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31341 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31348 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C2717) *
              C31261 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31348 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31341 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C2717) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31341 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31348 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C2717) *
              C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C665 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31559 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C666 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C2717) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C666 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31559 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C665) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C31341 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
               C31480 * C31348 +
           (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
            (C6051 + C6052 - C6061 - C6062) * C4584) *
               C31480 * C2717) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C31341 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C31348 +
           (C5945 * C4582 + (C5946 - (C5935 + C5934) + C5947) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C666 -
             (C5774 * C31559 + C5775 * C665) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31631 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31627 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31617 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31300 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C116) *
               C31468 * C31480 * C31597) *
              C2457 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31627 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31631 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31617 +
           ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
             C115 * C1295 + C103 * C1296) *
                C116 +
            (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
             C115 * C1297 + C103 * C1298) *
                C31300) *
               C31468 * C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C2349 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31345) *
              C31630 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C2349) *
              C31623 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C2349 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31345) *
              C31610 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C561 + C103 * C562) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C563 + C103 * C564) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31300 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31468 * C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C414 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31625 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C415 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31614 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C416 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C31590) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C415 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31625 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C414) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31614 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C416 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C31590) *
               C31468 * C31480 * C31345) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C415 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31625 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C414) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31614 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C416 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C31590) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C414 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31625 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C415 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31614 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C416 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C31590) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C2349 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C31630 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C2349) *
              C31623 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C2349 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C31610 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31631 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31627 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C31617 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C2457 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31627 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31631 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31617 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C414 +
             (C4585 * C127 + C31234 * C138) * C31625 -
             (C4585 * C419 + C31234 * C429) * C415 -
             (C4585 * C432 + C31234 * C449) * C31614 +
             (C4585 * C420 + C31234 * C433) * C416 +
             (C4585 * C436 + C31234 * C450) * C31590) *
                C4582 +
            (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C4583 +
            C5666 * C4584) *
               C31480 * C2349 +
           ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C4582 +
            (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C4583 +
            (C5660 - (C5638 + C5639) + C5661 - C5662 - C5663) * C4584) *
               C31480 * C31345) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C415 -
             ((C4585 * C128 + C31234 * C139) * C31625 +
              (C4585 * C118 + C31234 * C125) * C414) +
             (C4585 * C431 + C31234 * C448) * C31614 -
             (C4585 * C421 + C31234 * C434) * C416 -
             (C4585 * C437 + C31234 * C451) * C31590) *
                C4582 +
            (C7128 - (C7129 + C7130) + C7131 - C7132 - C7133) * C4583 +
            (C7134 - (C7135 + C7136) + C7137 - C7138 - C7139) * C4584) *
               C31480 * C2349 +
           ((C7130 + C7129 - C7128 - C7131 + C7132 + C7133) * C4582 +
            (C7136 + C7135 - C7134 - C7137 + C7138 + C7139) * C4583 +
            (C4743 * C414 + C4744 * C31625 - C5942 * C415 - C5943 * C31614 +
             (C4585 * C6525 + C31234 * C6526) * C416 +
             (C4585 * C6527 + C31234 * C6528) * C31590) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31261 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31269 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C665 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31559 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C666 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C666 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31559 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C665) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C2349 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
               C31480 * C31345) *
              C31261 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C2349 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C31345) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 -
             (C4585 * C417 + C31234 * C427) * C666 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C5264 + C5265 - C5296 - C5297) * C4583 +
            (C5270 + C5271 - C5298 - C5299) * C4584) *
               C31480 * C2349 +
           ((C5296 - (C5265 + C5264) + C5297) * C4582 +
            (C5298 - (C5271 + C5270) + C5299) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C666 -
             (C4749 * C31559 + C4750 * C665) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C2349 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31345) *
              C31630 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C2349) *
              C31623 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C2349 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31345) *
              C31610 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C561 + C103 * C562) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C563 + C103 * C564) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31300 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31468 * C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31631 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31627 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31617 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31300 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C116) *
               C31468 * C31480 * C31597) *
              C2457 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31627 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31631 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31617 +
           ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
             C115 * C1295 + C103 * C1296) *
                C116 +
            (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
             C115 * C1297 + C103 * C1298) *
                C31300) *
               C31468 * C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C2349 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C31630 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C2349) *
              C31623 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C2349 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C31610 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C2349) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31631 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C31627 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C31617 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C2457 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C31627 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31631 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31617 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C3113 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C3111 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C3114 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C2717) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31341 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31348 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C3114 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C3111 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C3113) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31341 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 + C8598 * C4584) *
               C31480 * C31348 +
           (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
            (C8593 + C8594 - C8595 - C8596) * C4584) *
               C31480 * C2717) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31341 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31348 +
           (C7815 * C4582 + (C7808 - (C7807 + C7806) + C7809) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C3114 -
             (C5774 * C3111 + C5775 * C3113) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C2717) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C30320 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31383 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C30312 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31390 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C30326 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C3625) *
              C31468 * C31480 * C31341 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C30312 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31383 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C30320) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31390 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C30326 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C3625) *
              C31468 * C31480 * C31348 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C30320 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31383 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C30312 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31390 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C30326 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C3625) *
              C31468 * C31480 * C2717) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C30320 +
            (C4585 * C127 + C31234 * C138) * C31383 -
            (C4585 * C419 + C31234 * C429) * C30312 -
            (C4585 * C432 + C31234 * C449) * C31390 +
            (C4585 * C420 + C31234 * C433) * C30326 +
            (C4585 * C436 + C31234 * C450) * C3625) *
               C4582 +
           (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C4583 +
           C9125 * C4584) *
              C31480 * C31341 +
          ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C4582 +
           (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C4583 +
           (C9116 - (C9117 + C9118) + C9119 - C9120 - C9121) * C4584) *
              C31480 * C31348 +
          (C9125 * C4582 +
           (C9118 + C9117 - C9116 - C9119 + C9120 + C9121) * C4583 +
           (C5489 * C30320 + C5490 * C31383 - C6058 * C30312 - C6059 * C31390 +
            (C4585 * C5609 + C31234 * C5614) * C30326 +
            (C4585 * C5615 + C31234 * C5618) * C3625) *
               C4584) *
              C31480 * C2717) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3113 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C3111 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3114 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31631 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C3114 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C3111 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C3113) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31387) *
              C31468 * C31480 * C31627 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C3113 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C3111 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C3114 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31387) *
              C31468 * C31480 * C31617 +
          ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
            C115 * C1549 + C103 * C1552) *
               C3114 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C3111 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C3113) +
           (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
            C115 * C1555 + C103 * C1558) *
               C31387) *
              C31468 * C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31621 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C3113 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C3111 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C3114 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C3114 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C3111 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C3113) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3363 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31632 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3364 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31629 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C3365 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31620 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C3366 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C2349 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C3364 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31632 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C3363) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31629 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C3365 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31620 +
           (C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C3366 +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31603) *
              C31468 * C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C2349 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31345) *
              C31621 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C2349 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31345) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 -
             (C4585 * C417 + C31234 * C427) * C3114 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C8060 + C8061 - C8062 - C8063) * C4583 +
            (C8064 + C8065 - C8066 - C8067) * C4584) *
               C31480 * C2349 +
           ((C8062 - (C8061 + C8060) + C8063) * C4582 +
            (C8066 - (C8065 + C8064) + C8067) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C3114 -
             (C4749 * C3111 + C4750 * C3113) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
              C31480 * C31631 +
          ((C7788 - (C7787 + C7786) + C7789) * C4582 +
           (C7792 - (C7791 + C7790) + C7793) * C4583 + C8598 * C4584) *
              C31480 * C31627 +
          (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
           (C8593 + C8594 - C8595 - C8596) * C4584) *
              C31480 * C31617 +
          (C8598 * C4582 + (C8595 - (C8594 + C8593) + C8596) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C3114 -
            (C5491 * C3111 + C5492 * C3113) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3363 +
            (C4585 * C127 + C31234 * C138) * C31632 -
            (C4585 * C419 + C31234 * C429) * C3364 -
            (C4585 * C432 + C31234 * C449) * C31629 +
            (C4585 * C420 + C31234 * C433) * C3365 +
            (C4585 * C436 + C31234 * C450) * C31620 -
            (C4585 * C1859 + C31234 * C1865) * C3366 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C8697 + C8698 - C8699 - C8700 + C8701 + C8702 - C8703 - C8704) *
               C4583 +
           (C8705 + C8706 - C8707 - C8708 + C8709 + C8710 - C8711 - C8712) *
               C4584) *
              C31480 * C2349 +
          ((C8699 - (C8698 + C8697) + C8700 - C8701 - C8702 + C8703 + C8704) *
               C4582 +
           (C8707 - (C8706 + C8705) + C8708 - C8709 - C8710 + C8711 + C8712) *
               C4583 +
           (C5651 * C3364 - (C4737 * C31632 + C4738 * C3363) + C5652 * C31629 -
            C5653 * C3365 - C5654 * C31620 +
            (C4585 * C6753 + C31234 * C6754) * C3366 +
            (C4585 * C6755 + C31234 * C6756) * C31603) *
               C4584) *
              C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30320 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31383 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C30312 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31390 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C30326 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C3625) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30312 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31383 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C30320) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31390 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C30326 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C3625) *
               C31468 * C31480 * C31345) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C30312 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31383 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30320) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31390 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C30326 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C3625) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C30320 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31383 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30312 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31390 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C30326 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C3625) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 -
             (C4585 * C419 + C31234 * C429) * C30312 -
             (C4585 * C432 + C31234 * C449) * C31390 +
             (C4585 * C420 + C31234 * C433) * C30326 +
             (C4585 * C436 + C31234 * C450) * C3625) *
                C4582 +
            (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C4583 +
            (C8330 + C8331 - C8332 - C8333 + C8334 + C8335) * C4584) *
               C31480 * C2349 +
           ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C4582 +
            (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C4583 +
            (C5651 * C30312 - (C4737 * C31383 + C4738 * C30320) +
             C5652 * C31390 - C5653 * C30326 - C5654 * C3625) *
                C4584) *
               C31480 * C31345) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             (C4585 * C431 + C31234 * C448) * C31390 -
             (C4585 * C421 + C31234 * C434) * C30326 -
             (C4585 * C437 + C31234 * C451) * C3625) *
                C4582 +
            (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C4583 +
            (C8342 - (C8343 + C8344) + C8345 - C8346 - C8347) * C4584) *
               C31480 * C2349 +
           ((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C4582 +
            (C8344 + C8343 - C8342 - C8345 + C8346 + C8347) * C4583 +
            (C4743 * C30320 + C4744 * C31383 - C5942 * C30312 - C5943 * C31390 +
             (C4585 * C6525 + C31234 * C6526) * C30326 +
             (C4585 * C6527 + C31234 * C6528) * C3625) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31621 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C3113 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C3111 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C3114 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C2349 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C3114 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C3111 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C3113) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3113 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C3111 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3114 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31631 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C3114 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C3111 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C3113) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31387) *
              C31468 * C31480 * C31627 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C3113 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C3111 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C3114 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31387) *
              C31468 * C31480 * C31617 +
          ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
            C115 * C1549 + C103 * C1552) *
               C3114 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C3111 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C3113) +
           (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
            C115 * C1555 + C103 * C1558) *
               C31387) *
              C31468 * C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C2349 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31345) *
              C31621 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C2349 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31345) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 -
             (C4585 * C417 + C31234 * C427) * C3114 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C8060 + C8061 - C8062 - C8063) * C4583 +
            (C8064 + C8065 - C8066 - C8067) * C4584) *
               C31480 * C2349 +
           ((C8062 - (C8061 + C8060) + C8063) * C4582 +
            (C8066 - (C8065 + C8064) + C8067) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C3114 -
             (C4749 * C3111 + C4750 * C3113) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
              C31480 * C31631 +
          ((C7788 - (C7787 + C7786) + C7789) * C4582 +
           (C7792 - (C7791 + C7790) + C7793) * C4583 + C8598 * C4584) *
              C31480 * C31627 +
          (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
           (C8593 + C8594 - C8595 - C8596) * C4584) *
              C31480 * C31617 +
          (C8598 * C4582 + (C8595 - (C8594 + C8593) + C8596) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C3114 -
            (C5491 * C3111 + C5492 * C3113) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C1289 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C1290 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C1291 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31300 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C116) *
               C31468 * C31480 * C31597) *
              C31544 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C1290 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C1289 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C1291 +
           ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
             C115 * C1295 + C103 * C1296) *
                C116 +
            (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
             C115 * C1297 + C103 * C1298) *
                C31300) *
               C31468 * C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31558 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31345) *
              C557 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31558) *
              C558 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31558 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31345) *
              C559 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C561 + C103 * C562) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C563 + C103 * C564) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31300 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31468 * C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C1672 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C1669 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C1673 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C1670 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C1674 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C31590) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C1673 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C1669 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C1672) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C1670 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C1674 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C31590) *
               C31468 * C31480 * C31345) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C1673 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C1669 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C1672) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C1670 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C1674 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C31590) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C1672 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C1669 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C1673 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C1670 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C1674 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C31590) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31558 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C557 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31558) *
              C558 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31558 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C559 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C1289 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C1290 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C1291 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C31544 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C1290 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C1289 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C1291 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C1672 +
             (C4585 * C127 + C31234 * C138) * C1669 -
             (C4585 * C419 + C31234 * C429) * C1673 -
             (C4585 * C432 + C31234 * C449) * C1670 +
             (C4585 * C420 + C31234 * C433) * C1674 +
             (C4585 * C436 + C31234 * C450) * C31590) *
                C4582 +
            (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C4583 +
            C6305 * C4584) *
               C31480 * C31558 +
           ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C4582 +
            (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C4583 +
            (C6295 - (C6296 + C6297) + C6298 - C6299 - C6300) * C4584) *
               C31480 * C31345) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C1673 -
             ((C4585 * C128 + C31234 * C139) * C1669 +
              (C4585 * C118 + C31234 * C125) * C1672) +
             (C4585 * C431 + C31234 * C448) * C1670 -
             (C4585 * C421 + C31234 * C434) * C1674 -
             (C4585 * C437 + C31234 * C451) * C31590) *
                C4582 +
            (C6530 - (C6531 + C6532) + C6533 - C6550 - C6551) * C4583 +
            (C6538 - (C6539 + C6540) + C6541 - C6552 - C6553) * C4584) *
               C31480 * C31558 +
           ((C6532 + C6531 - C6530 - C6533 + C6550 + C6551) * C4582 +
            (C6540 + C6539 - C6538 - C6541 + C6552 + C6553) * C4583 +
            (C4743 * C1672 + C4744 * C1669 - C5942 * C1673 - C5943 * C1670 +
             (C4585 * C6525 + C31234 * C6526) * C1674 +
             (C4585 * C6527 + C31234 * C6528) * C31590) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C665 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31559 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C666 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C1289 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C666 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31559 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C665) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31387) *
              C31468 * C31480 * C1290 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C665 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31559 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C666 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31387) *
              C31468 * C31480 * C1291 +
          ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
            C115 * C1549 + C103 * C1552) *
               C666 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31559 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C665) +
           (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
            C115 * C1555 + C103 * C1558) *
               C31387) *
              C31468 * C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C258 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C665 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31559 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C666 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C666 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31559 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C665) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2133 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2129 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C2134 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C2130 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C2135 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C2131 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C2136 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C31558 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C2134 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C2129 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C2133) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C2130 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C2135 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C2131 +
           (C113 * C2239 + C101 * C2242 + C114 * C2240 + C102 * C2243 +
            C115 * C2241 + C103 * C2244) *
               C2136 +
           (C113 * C2245 + C101 * C2248 + C114 * C2246 + C102 * C2249 +
            C115 * C2247 + C103 * C2250) *
               C31603) *
              C31468 * C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 +
            (C5246 + C5247 - C5290 - C5291) * C4584) *
               C31480 * C31558 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            ((C4585 * C1547 + C31234 * C1550) * C666 -
             (C4737 * C31559 + C4738 * C665) +
             (C4585 * C1553 + C31234 * C1556) * C31387) *
                C4584) *
               C31480 * C31345) *
              C258 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 +
            (C5294 - (C5260 + C5261) + C5295) * C4584) *
               C31480 * C31558 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C4743 * C665 + C4744 * C31559 -
             (C4585 * C1548 + C31234 * C1551) * C666 -
             (C4585 * C1554 + C31234 * C1557) * C31387) *
                C4584) *
               C31480 * C31345) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C665 +
             (C4585 * C129 + C31234 * C140) * C31559 -
             (C4585 * C417 + C31234 * C427) * C666 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C5264 + C5265 - C5296 - C5297) * C4583 +
            (C5270 + C5271 - C5298 - C5299) * C4584) *
               C31480 * C31558 +
           ((C5296 - (C5265 + C5264) + C5297) * C4582 +
            (C5298 - (C5271 + C5270) + C5299) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C666 -
             (C4749 * C31559 + C4750 * C665) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
              C31480 * C1289 +
          ((C5288 - (C5241 + C5240) + C5289) * C4582 +
           (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
              C31480 * C1290 +
          (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
           (C6051 + C6052 - C6061 - C6062) * C4584) *
              C31480 * C1291 +
          (C6060 * C4582 + (C6061 - (C6052 + C6051) + C6062) * C4583 +
           ((C4585 * C6045 + C31234 * C6046) * C666 -
            (C5491 * C31559 + C5492 * C665) +
            (C4585 * C6047 + C31234 * C6048) * C31387) *
               C4584) *
              C31480 * C31597) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C2133 +
            (C4585 * C127 + C31234 * C138) * C2129 -
            (C4585 * C419 + C31234 * C429) * C2134 -
            (C4585 * C432 + C31234 * C449) * C2130 +
            (C4585 * C420 + C31234 * C433) * C2135 +
            (C4585 * C436 + C31234 * C450) * C2131 -
            (C4585 * C1859 + C31234 * C1865) * C2136 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C6758 + C6759 - C6760 - C6761 + C6762 + C6763 - C6782 - C6783) *
               C4583 +
           (C6768 + C6769 - C6770 - C6771 + C6772 + C6773 - C6784 - C6785) *
               C4584) *
              C31480 * C31558 +
          ((C6760 - (C6759 + C6758) + C6761 - C6762 - C6763 + C6782 + C6783) *
               C4582 +
           (C6770 - (C6769 + C6768) + C6771 - C6772 - C6773 + C6784 + C6785) *
               C4583 +
           (C5651 * C2134 - (C4737 * C2129 + C4738 * C2133) + C5652 * C2130 -
            C5653 * C2135 - C5654 * C2131 +
            (C4585 * C6753 + C31234 * C6754) * C2136 +
            (C4585 * C6755 + C31234 * C6756) * C31603) *
               C4584) *
              C31480 * C31345) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31300) *
                  C31468 * C31480 * C31283 * C108 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31300 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31468 * C31480 * C31283 * C109 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31300) *
                  C31468 * C31480 * C31283 * C110 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31300 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31468 * C31480 * C31283 * C111 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31300) *
                  C31468 * C31480 * C31283 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31300) *
                   C31468 * C31480 * C31624 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31300 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31468 * C31480 * C31612 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C258 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31300) *
                   C31468 * C31480 * C31612 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31300 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31468 * C31480 * C31624 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31300 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31468 * C31480 * C31587) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31300) *
                   C31468 * C31480 * C31624 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31300 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31468 * C31480 * C31612 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31300) *
                   C31468 * C31480 * C31587) *
                  C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C414 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31625 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C415 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31614 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C416 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31283 * C258 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C415 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31625 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C414) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31614 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C416 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31590) *
              C31468 * C31480 * C31283 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C414 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31625 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C415 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31614 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C416 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C31590) *
              C31468 * C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C414 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31625 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C415 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31614 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C416 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C947 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C415 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31625 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C414) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31614 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C416 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31590) *
              C31468 * C31480 * C948 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C414 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31625 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C415 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31614 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C416 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C31590) *
              C31468 * C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1672 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1669 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C1673 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C1670 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C1674 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31283 * C31621 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C1673 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C1669 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C1672) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C1670 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C1674 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31590) *
              C31468 * C31480 * C31283 * C31608 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C1672 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C1669 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C1673 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C1670 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C1674 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C31590) *
              C31468 * C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1672 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1669 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C1673 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C1670 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C1674 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31624 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C1673 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C1669 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C1672) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C1670 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C1674 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31590) *
              C31468 * C31480 * C31612 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C1672 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C1669 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C1673 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C1670 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C1674 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C31590) *
              C31468 * C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 + C115 * C119 +
           C103 * C126) *
              C1852 +
          (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 + C115 * C129 +
           C103 * C140) *
              C1847 -
          (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 + C113 * C419 +
           C101 * C429) *
              C1853 -
          (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 + C113 * C432 +
           C101 * C449) *
              C1848 +
          (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 + C115 * C422 +
           C103 * C435) *
              C1854 +
          (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 + C115 * C438 +
           C103 * C452) *
              C1849 -
          (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
           C113 * C1859 + C101 * C1865) *
              C1855 -
          (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
           C113 * C1868 + C101 * C1877) *
              C1850 +
          (C113 * C1860 + C101 * C1869 + C114 * C1861 + C102 * C1870 +
           C115 * C1862 + C103 * C1871) *
              C1856 +
          (C113 * C1872 + C101 * C1878 + C114 * C1873 + C102 * C1879 +
           C115 * C1874 + C103 * C1880) *
              C1851) *
         C31468 * C31480 * C31283 * C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C414 + C4734 * C31625 -
            (C4585 * C817 + C31234 * C822) * C415 -
            (C4585 * C825 + C31234 * C832) * C31614 +
            (C4585 * C1157 + C31234 * C1166) * C416 +
            (C4585 * C1169 + C31234 * C1184) * C31590) *
               C4583 +
           (C4735 * C414 + C4736 * C31625 -
            (C4585 * C1160 + C31234 * C1172) * C415 -
            (C4585 * C1175 + C31234 * C1187) * C31614 +
            (C4585 * C1161 + C31234 * C1176) * C416 +
            (C4585 * C1179 + C31234 * C1188) * C31590) *
               C4584) *
              C31480 * C31283 * C258 +
          (((C4585 * C418 + C31234 * C428) * C415 -
            ((C4585 * C128 + C31234 * C139) * C31625 +
             (C4585 * C118 + C31234 * C125) * C414) +
            (C4585 * C431 + C31234 * C448) * C31614 -
            (C4585 * C421 + C31234 * C434) * C416 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C415 -
            (C4740 * C31625 + C4739 * C414) +
            (C4585 * C826 + C31234 * C833) * C31614 -
            (C4585 * C1156 + C31234 * C1165) * C416 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C415 -
            (C4742 * C31625 + C4741 * C414) +
            (C4585 * C1174 + C31234 * C1186) * C31614 -
            (C4585 * C1162 + C31234 * C1177) * C416 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C259 +
          (((C4585 * C119 + C31234 * C126) * C414 +
            (C4585 * C129 + C31234 * C140) * C31625 -
            (C4585 * C417 + C31234 * C427) * C415 -
            (C4585 * C430 + C31234 * C447) * C31614 +
            (C4585 * C422 + C31234 * C435) * C416 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C414 + C4746 * C31625 -
            (C4585 * C819 + C31234 * C824) * C415 -
            (C4585 * C827 + C31234 * C834) * C31614 +
            (C4585 * C1155 + C31234 * C1164) * C416 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C414 + C4748 * C31625 -
            (C4585 * C1158 + C31234 * C1170) * C415 -
            (C4585 * C1173 + C31234 * C1185) * C31614 +
            (C4585 * C1163 + C31234 * C1178) * C416 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C4583 +
           C5666 * C4584) *
              C31480 * C947 +
          ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C4582 +
           (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C4583 +
           (C5660 - (C5638 + C5639) + C5661 - C5662 - C5663) * C4584) *
              C31480 * C948 +
          (C5666 * C4582 +
           (C5639 + C5638 - C5660 - C5661 + C5662 + C5663) * C4583 +
           (C5489 * C414 + C5490 * C31625 -
            (C4585 * C5608 + C31234 * C5612) * C415 -
            (C4585 * C5613 + C31234 * C5617) * C31614 +
            (C4585 * C5609 + C31234 * C5614) * C416 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C1672 + C4734 * C1669 - C5276 * C1673 - C5277 * C1670 +
            C5646 * C1674 + C5647 * C31590) *
               C4583 +
           (C4735 * C1672 + C4736 * C1669 - C5278 * C1673 - C5279 * C1670 +
            C5649 * C1674 + C5650 * C31590) *
               C4584) *
              C31480 * C31283 * C31621 +
          (((C4585 * C418 + C31234 * C428) * C1673 -
            ((C4585 * C128 + C31234 * C139) * C1669 +
             (C4585 * C118 + C31234 * C125) * C1672) +
            (C4585 * C431 + C31234 * C448) * C1670 -
            (C4585 * C421 + C31234 * C434) * C1674 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           (C5280 * C1673 - (C4740 * C1669 + C4739 * C1672) + C5281 * C1670 -
            (C4585 * C1156 + C31234 * C1165) * C1674 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           (C5282 * C1673 - (C4742 * C1669 + C4741 * C1672) + C5283 * C1670 -
            (C4585 * C1162 + C31234 * C1177) * C1674 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C31608 +
          (((C4585 * C119 + C31234 * C126) * C1672 +
            (C4585 * C129 + C31234 * C140) * C1669 -
            (C4585 * C417 + C31234 * C427) * C1673 -
            (C4585 * C430 + C31234 * C447) * C1670 +
            (C4585 * C422 + C31234 * C435) * C1674 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C1672 + C4746 * C1669 - C5284 * C1673 - C5285 * C1670 +
            (C4585 * C1155 + C31234 * C1164) * C1674 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C1672 + C4748 * C1669 - C5286 * C1673 - C5287 * C1670 +
            (C4585 * C1163 + C31234 * C1178) * C1674 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C4583 +
           C6305 * C4584) *
              C31480 * C31624 +
          ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C4582 +
           (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C4583 +
           (C6295 - (C6296 + C6297) + C6298 - C6299 - C6300) * C4584) *
              C31480 * C31612 +
          (C6305 * C4582 +
           (C6297 + C6296 - C6295 - C6298 + C6299 + C6300) * C4583 +
           (C5489 * C1672 + C5490 * C1669 - C6058 * C1673 - C6059 * C1670 +
            (C4585 * C5609 + C31234 * C5614) * C1674 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4585 * C117 + C31234 * C124) * C1852 +
           (C4585 * C127 + C31234 * C138) * C1847 -
           (C4585 * C419 + C31234 * C429) * C1853 -
           (C4585 * C432 + C31234 * C449) * C1848 +
           (C4585 * C420 + C31234 * C433) * C1854 +
           (C4585 * C436 + C31234 * C450) * C1849 -
           (C4585 * C1859 + C31234 * C1865) * C1855 -
           (C4585 * C1868 + C31234 * C1877) * C1850 +
           (C4585 * C1860 + C31234 * C1869) * C1856 +
           (C4585 * C1872 + C31234 * C1878) * C1851) *
              C4582 +
          (C4733 * C1852 + C4734 * C1847 - C5276 * C1853 - C5277 * C1848 +
           C5646 * C1854 + C5647 * C1849 -
           (C4585 * C2239 + C31234 * C2242) * C1855 -
           (C4585 * C2245 + C31234 * C2248) * C1850 +
           (C4585 * C6367 + C31234 * C6370) * C1856 +
           (C4585 * C6371 + C31234 * C6376) * C1851) *
              C4583 +
          (C4735 * C1852 + C4736 * C1847 - C5278 * C1853 - C5279 * C1848 +
           C5649 * C1854 + C5650 * C1849 -
           (C4585 * C6368 + C31234 * C6372) * C1855 -
           (C4585 * C6373 + C31234 * C6377) * C1850 +
           (C4585 * C6369 + C31234 * C6374) * C1856 +
           (C4585 * C6375 + C31234 * C6378) * C1851) *
              C4584) *
         C31480 * C31283 * C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C947 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C665 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31559 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C666 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C947 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C948 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C666 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31559 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C665) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C665 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31559 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C666 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31283 * C557 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C666 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31559 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C665) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31387) *
              C31468 * C31480 * C31283 * C558 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C665 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31559 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C666 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31387) *
              C31468 * C31480 * C31283 * C559 +
          ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
            C115 * C667 + C103 * C668) *
               C666 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31559 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C665) +
           (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
            C115 * C669 + C103 * C670) *
               C31387) *
              C31468 * C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C2133 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C2129 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C2134 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C2130 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C2135 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C2131 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C2136 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C31283 * C31544 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C2134 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C2129 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C2133) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C2130 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C2135 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C2131 +
           (C113 * C1858 + C101 * C1864 + C114 * C1857 + C102 * C1863 +
            C115 * C2137 + C103 * C2138) *
               C2136 +
           (C113 * C1867 + C101 * C1876 + C114 * C1866 + C102 * C1875 +
            C115 * C2139 + C103 * C2140) *
               C31603) *
              C31468 * C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C665 + C4734 * C31559 -
            (C4585 * C817 + C31234 * C822) * C666 -
            (C4585 * C825 + C31234 * C832) * C31387) *
               C4583 +
           (C4735 * C665 + C4736 * C31559 -
            (C4585 * C1160 + C31234 * C1172) * C666 -
            (C4585 * C1175 + C31234 * C1187) * C31387) *
               C4584) *
              C31480 * C31283 * C557 +
          (((C4585 * C418 + C31234 * C428) * C666 -
            ((C4585 * C128 + C31234 * C139) * C31559 +
             (C4585 * C118 + C31234 * C125) * C665) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C666 -
            (C4740 * C31559 + C4739 * C665) +
            (C4585 * C826 + C31234 * C833) * C31387) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C666 -
            (C4742 * C31559 + C4741 * C665) +
            (C4585 * C1174 + C31234 * C1186) * C31387) *
               C4584) *
              C31480 * C31283 * C558 +
          (((C4585 * C119 + C31234 * C126) * C665 +
            (C4585 * C129 + C31234 * C140) * C31559 -
            (C4585 * C417 + C31234 * C427) * C666 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C665 + C4746 * C31559 -
            (C4585 * C819 + C31234 * C824) * C666 -
            (C4585 * C827 + C31234 * C834) * C31387) *
               C4583 +
           (C4747 * C665 + C4748 * C31559 -
            (C4585 * C1158 + C31234 * C1170) * C666 -
            (C4585 * C1173 + C31234 * C1185) * C31387) *
               C4584) *
              C31480 * C31283 * C559 +
          (((C4585 * C423 + C31234 * C439) * C666 -
            ((C4585 * C130 + C31234 * C141) * C31559 +
             (C4585 * C120 + C31234 * C131) * C665) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C666 -
            (C4989 * C31559 + C4988 * C665) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C666 -
            (C4991 * C31559 + C4990 * C665) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C947 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            (C5929 - (C5930 + C5931) + C5932) * C4584) *
               C31480 * C948 +
           (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
            (C5489 * C665 + C5490 * C31559 -
             (C4585 * C5608 + C31234 * C5612) * C666 -
             (C4585 * C5613 + C31234 * C5617) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C947 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C948 +
           (C5945 * C4582 + (C5946 - (C5935 + C5934) + C5947) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C666 -
             (C5774 * C31559 + C5775 * C665) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C2133 +
            (C4585 * C127 + C31234 * C138) * C2129 -
            (C4585 * C419 + C31234 * C429) * C2134 -
            (C4585 * C432 + C31234 * C449) * C2130 +
            (C4585 * C420 + C31234 * C433) * C2135 +
            (C4585 * C436 + C31234 * C450) * C2131 -
            (C4585 * C1859 + C31234 * C1865) * C2136 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C4733 * C2133 + C4734 * C2129 - C5276 * C2134 - C5277 * C2130 +
            C5646 * C2135 + C5647 * C2131 -
            (C4585 * C2239 + C31234 * C2242) * C2136 -
            (C4585 * C2245 + C31234 * C2248) * C31603) *
               C4583 +
           (C4735 * C2133 + C4736 * C2129 - C5278 * C2134 - C5279 * C2130 +
            C5649 * C2135 + C5650 * C2131 -
            (C4585 * C6368 + C31234 * C6372) * C2136 -
            (C4585 * C6373 + C31234 * C6377) * C31603) *
               C4584) *
              C31480 * C31283 * C31544 +
          (((C4585 * C418 + C31234 * C428) * C2134 -
            ((C4585 * C128 + C31234 * C139) * C2129 +
             (C4585 * C118 + C31234 * C125) * C2133) +
            (C4585 * C431 + C31234 * C448) * C2130 -
            (C4585 * C421 + C31234 * C434) * C2135 -
            (C4585 * C437 + C31234 * C451) * C2131 +
            (C4585 * C1858 + C31234 * C1864) * C2136 +
            (C4585 * C1867 + C31234 * C1876) * C31603) *
               C4582 +
           (C5280 * C2134 - (C4740 * C2129 + C4739 * C2133) + C5281 * C2130 -
            C6546 * C2135 - C6547 * C2131 +
            (C4585 * C2240 + C31234 * C2243) * C2136 +
            (C4585 * C2246 + C31234 * C2249) * C31603) *
               C4583 +
           (C5282 * C2134 - (C4742 * C2129 + C4741 * C2133) + C5283 * C2130 -
            C6548 * C2135 - C6549 * C2131 +
            (C4585 * C6651 + C31234 * C6652) * C2136 +
            (C4585 * C6653 + C31234 * C6654) * C31603) *
               C4584) *
              C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31612 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31624 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C31283 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31300 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31468 * C31480 * C31283 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31300) *
              C31468 * C31480 * C31283 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31300 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31468 * C31480 * C31283 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31300) *
              C31468 * C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1672 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1669 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C1673 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C1670 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C1674 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31283 * C31621 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C1673 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C1669 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C1672) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C1670 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C1674 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31590) *
              C31468 * C31480 * C31283 * C31608 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C1672 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C1669 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C1673 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C1670 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C1674 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C31590) *
              C31468 * C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C1672 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C1669 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C1673 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C1670 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C1674 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31624 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C1673 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C1669 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C1672) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C1670 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C1674 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31590) *
              C31468 * C31480 * C31612 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C1672 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C1669 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C1673 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C1670 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C1674 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C31590) *
              C31468 * C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C1672 + C4734 * C1669 - C5276 * C1673 - C5277 * C1670 +
            C5646 * C1674 + C5647 * C31590) *
               C4583 +
           (C4735 * C1672 + C4736 * C1669 - C5278 * C1673 - C5279 * C1670 +
            C5649 * C1674 + C5650 * C31590) *
               C4584) *
              C31480 * C31283 * C31621 +
          (((C4585 * C418 + C31234 * C428) * C1673 -
            ((C4585 * C128 + C31234 * C139) * C1669 +
             (C4585 * C118 + C31234 * C125) * C1672) +
            (C4585 * C431 + C31234 * C448) * C1670 -
            (C4585 * C421 + C31234 * C434) * C1674 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           (C5280 * C1673 - (C4740 * C1669 + C4739 * C1672) + C5281 * C1670 -
            (C4585 * C1156 + C31234 * C1165) * C1674 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           (C5282 * C1673 - (C4742 * C1669 + C4741 * C1672) + C5283 * C1670 -
            (C4585 * C1162 + C31234 * C1177) * C1674 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C31608 +
          (((C4585 * C119 + C31234 * C126) * C1672 +
            (C4585 * C129 + C31234 * C140) * C1669 -
            (C4585 * C417 + C31234 * C427) * C1673 -
            (C4585 * C430 + C31234 * C447) * C1670 +
            (C4585 * C422 + C31234 * C435) * C1674 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C1672 + C4746 * C1669 - C5284 * C1673 - C5285 * C1670 +
            (C4585 * C1155 + C31234 * C1164) * C1674 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C1672 + C4748 * C1669 - C5286 * C1673 - C5287 * C1670 +
            (C4585 * C1163 + C31234 * C1178) * C1674 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C1672 +
            (C4585 * C127 + C31234 * C138) * C1669 -
            (C4585 * C419 + C31234 * C429) * C1673 -
            (C4585 * C432 + C31234 * C449) * C1670 +
            (C4585 * C420 + C31234 * C433) * C1674 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C6283 + C6284 - C6285 - C6286 + C6287 + C6288) * C4583 +
           C6305 * C4584) *
              C31480 * C31624 +
          ((C6285 - (C6284 + C6283) + C6286 - C6287 - C6288) * C4582 +
           (C6291 - (C6290 + C6289) + C6292 - C6293 - C6294) * C4583 +
           (C6295 - (C6296 + C6297) + C6298 - C6299 - C6300) * C4584) *
              C31480 * C31612 +
          (C6305 * C4582 +
           (C6297 + C6296 - C6295 - C6298 + C6299 + C6300) * C4583 +
           (C5489 * C1672 + C5490 * C1669 - C6058 * C1673 - C6059 * C1670 +
            (C4585 * C5609 + C31234 * C5614) * C1674 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31261 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31345) *
              C31269 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C3113 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C3111 -
            (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
             C113 * C417 + C101 * C427) *
                C3114 -
            (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
             C113 * C430 + C101 * C447) *
                C31387) *
               C31468 * C31480 * C31558 +
           ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
             C115 * C821 + C103 * C830) *
                C3114 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C3111 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C3113) +
            (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
             C115 * C831 + C103 * C836) *
                C31387) *
               C31468 * C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31558 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31345) *
              C31261 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31558 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31345) *
              C31269 +
          ((((C4585 * C119 + C31234 * C126) * C3113 +
             (C4585 * C129 + C31234 * C140) * C3111 -
             (C4585 * C417 + C31234 * C427) * C3114 -
             (C4585 * C430 + C31234 * C447) * C31387) *
                C4582 +
            (C8060 + C8061 - C8062 - C8063) * C4583 +
            (C8064 + C8065 - C8066 - C8067) * C4584) *
               C31480 * C31558 +
           ((C8062 - (C8061 + C8060) + C8063) * C4582 +
            (C8066 - (C8065 + C8064) + C8067) * C4583 +
            ((C4585 * C1549 + C31234 * C1552) * C3114 -
             (C4749 * C3111 + C4750 * C3113) +
             (C4585 * C1555 + C31234 * C1558) * C31387) *
                C4584) *
               C31480 * C31345) *
              C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C30320 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31383 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C30312 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31390 +
            (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
             C115 * C422 + C103 * C435) *
                C30326 +
            (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
             C115 * C438 + C103 * C452) *
                C3625) *
               C31468 * C31480 * C31558 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C30312 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31383 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C30320) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31390 -
            (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
             C113 * C1157 + C101 * C1166) *
                C30326 -
            (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
             C113 * C1169 + C101 * C1184) *
                C3625) *
               C31468 * C31480 * C31345) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C30312 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31383 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C30320) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31390 -
            (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
             C113 * C421 + C101 * C434) *
                C30326 -
            (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
             C113 * C437 + C101 * C451) *
                C3625) *
               C31468 * C31480 * C31558 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C30320 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31383 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C30312 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31390 +
            (C113 * C1156 + C101 * C1165 + C114 * C1155 + C102 * C1164 +
             C115 * C2027 + C103 * C2028) *
                C30326 +
            (C113 * C1168 + C101 * C1183 + C114 * C1167 + C102 * C1182 +
             C115 * C2029 + C103 * C2030) *
                C3625) *
               C31468 * C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C30320 +
             (C4585 * C127 + C31234 * C138) * C31383 -
             (C4585 * C419 + C31234 * C429) * C30312 -
             (C4585 * C432 + C31234 * C449) * C31390 +
             (C4585 * C420 + C31234 * C433) * C30326 +
             (C4585 * C436 + C31234 * C450) * C3625) *
                C4582 +
            (C8324 + C8325 - C8326 - C8327 + C8328 + C8329) * C4583 +
            (C8330 + C8331 - C8332 - C8333 + C8334 + C8335) * C4584) *
               C31480 * C31558 +
           ((C8326 - (C8325 + C8324) + C8327 - C8328 - C8329) * C4582 +
            (C8332 - (C8331 + C8330) + C8333 - C8334 - C8335) * C4583 +
            (C5651 * C30312 - (C4737 * C31383 + C4738 * C30320) +
             C5652 * C31390 - C5653 * C30326 - C5654 * C3625) *
                C4584) *
               C31480 * C31345) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C30312 -
             ((C4585 * C128 + C31234 * C139) * C31383 +
              (C4585 * C118 + C31234 * C125) * C30320) +
             (C4585 * C431 + C31234 * C448) * C31390 -
             (C4585 * C421 + C31234 * C434) * C30326 -
             (C4585 * C437 + C31234 * C451) * C3625) *
                C4582 +
            (C8336 - (C8337 + C8338) + C8339 - C8340 - C8341) * C4583 +
            (C8342 - (C8343 + C8344) + C8345 - C8346 - C8347) * C4584) *
               C31480 * C31558 +
           ((C8338 + C8337 - C8336 - C8339 + C8340 + C8341) * C4582 +
            (C8344 + C8343 - C8342 - C8345 + C8346 + C8347) * C4583 +
            (C4743 * C30320 + C4744 * C31383 - C5942 * C30312 - C5943 * C31390 +
             (C4585 * C6525 + C31234 * C6526) * C30326 +
             (C4585 * C6527 + C31234 * C6528) * C3625) *
                C4584) *
               C31480 * C31345) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31624 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C3113 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C3111 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C3114 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C31587) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31624 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31612 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C3114 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C3111 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C3113) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3113 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C3111 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3114 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31283 * C31630 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C3114 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C3111 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C3113) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31387) *
              C31468 * C31480 * C31283 * C31623 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C3113 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C3111 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C3114 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31387) *
              C31468 * C31480 * C31283 * C31610 +
          ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
            C115 * C667 + C103 * C668) *
               C3114 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C3111 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C3113) +
           (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
            C115 * C669 + C103 * C670) *
               C31387) *
              C31468 * C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3363 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31632 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3364 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31629 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C3365 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31620 -
           (C115 * C1857 + C103 * C1863 + C114 * C1858 + C102 * C1864 +
            C113 * C1859 + C101 * C1865) *
               C3366 -
           (C115 * C1866 + C103 * C1875 + C114 * C1867 + C102 * C1876 +
            C113 * C1868 + C101 * C1877) *
               C31603) *
              C31468 * C31480 * C31283 * C2457 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C3364 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31632 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C3363) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31629 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C3365 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31620 +
           (C113 * C1858 + C101 * C1864 + C114 * C1857 + C102 * C1863 +
            C115 * C2137 + C103 * C2138) *
               C3366 +
           (C113 * C1867 + C101 * C1876 + C114 * C1866 + C102 * C1875 +
            C115 * C2139 + C103 * C2140) *
               C31603) *
              C31468 * C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C3113 + C4734 * C3111 - C5276 * C3114 - C5277 * C31387) *
               C4583 +
           (C4735 * C3113 + C4736 * C3111 - C5278 * C3114 - C5279 * C31387) *
               C4584) *
              C31480 * C31283 * C31630 +
          (((C4585 * C418 + C31234 * C428) * C3114 -
            ((C4585 * C128 + C31234 * C139) * C3111 +
             (C4585 * C118 + C31234 * C125) * C3113) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           (C5280 * C3114 - (C4740 * C3111 + C4739 * C3113) + C5281 * C31387) *
               C4583 +
           (C5282 * C3114 - (C4742 * C3111 + C4741 * C3113) + C5283 * C31387) *
               C4584) *
              C31480 * C31283 * C31623 +
          (((C4585 * C119 + C31234 * C126) * C3113 +
            (C4585 * C129 + C31234 * C140) * C3111 -
            (C4585 * C417 + C31234 * C427) * C3114 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C3113 + C4746 * C3111 - C5284 * C3114 - C5285 * C31387) *
               C4583 +
           (C4747 * C3113 + C4748 * C3111 - C5286 * C3114 - C5287 * C31387) *
               C4584) *
              C31480 * C31283 * C31610 +
          (((C4585 * C423 + C31234 * C439) * C3114 -
            ((C4585 * C130 + C31234 * C141) * C3111 +
             (C4585 * C120 + C31234 * C131) * C3113) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C3114 -
            (C4989 * C3111 + C4988 * C3113) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C3114 -
            (C4991 * C3111 + C4990 * C3113) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31624 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31612 +
           (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
            (C5489 * C3113 + C5490 * C3111 - C6058 * C3114 - C6059 * C31387) *
                C4584) *
               C31480 * C31587) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31624 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31612 +
           (C7815 * C4582 + (C7808 - (C7807 + C7806) + C7809) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C3114 -
             (C5774 * C3111 + C5775 * C3113) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3363 +
            (C4585 * C127 + C31234 * C138) * C31632 -
            (C4585 * C419 + C31234 * C429) * C3364 -
            (C4585 * C432 + C31234 * C449) * C31629 +
            (C4585 * C420 + C31234 * C433) * C3365 +
            (C4585 * C436 + C31234 * C450) * C31620 -
            (C4585 * C1859 + C31234 * C1865) * C3366 -
            (C4585 * C1868 + C31234 * C1877) * C31603) *
               C4582 +
           (C4733 * C3363 + C4734 * C31632 - C5276 * C3364 - C5277 * C31629 +
            C5646 * C3365 + C5647 * C31620 - C6778 * C3366 - C6779 * C31603) *
               C4583 +
           (C4735 * C3363 + C4736 * C31632 - C5278 * C3364 - C5279 * C31629 +
            C5649 * C3365 + C5650 * C31620 - C6780 * C3366 - C6781 * C31603) *
               C4584) *
              C31480 * C31283 * C2457 +
          (((C4585 * C418 + C31234 * C428) * C3364 -
            ((C4585 * C128 + C31234 * C139) * C31632 +
             (C4585 * C118 + C31234 * C125) * C3363) +
            (C4585 * C431 + C31234 * C448) * C31629 -
            (C4585 * C421 + C31234 * C434) * C3365 -
            (C4585 * C437 + C31234 * C451) * C31620 +
            (C4585 * C1858 + C31234 * C1864) * C3366 +
            (C4585 * C1867 + C31234 * C1876) * C31603) *
               C4582 +
           (C5280 * C3364 - (C4740 * C31632 + C4739 * C3363) + C5281 * C31629 -
            C6546 * C3365 - C6547 * C31620 +
            (C4585 * C2240 + C31234 * C2243) * C3366 +
            (C4585 * C2246 + C31234 * C2249) * C31603) *
               C4583 +
           (C5282 * C3364 - (C4742 * C31632 + C4741 * C3363) + C5283 * C31629 -
            C6548 * C3365 - C6549 * C31620 +
            (C4585 * C6651 + C31234 * C6652) * C3366 +
            (C4585 * C6653 + C31234 * C6654) * C31603) *
               C4584) *
              C31480 * C31283 * C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C30320 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31383 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C30312 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31390 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C30326 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C3625) *
              C31468 * C31480 * C31283 * C31261 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C30312 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31383 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C30320) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31390 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C30326 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C3625) *
              C31468 * C31480 * C31283 * C31269 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C30320 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31383 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C30312 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31390 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C30326 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C3625) *
              C31468 * C31480 * C31283 * C2720)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C30320 +
            (C4585 * C127 + C31234 * C138) * C31383 -
            (C4585 * C419 + C31234 * C429) * C30312 -
            (C4585 * C432 + C31234 * C449) * C31390 +
            (C4585 * C420 + C31234 * C433) * C30326 +
            (C4585 * C436 + C31234 * C450) * C3625) *
               C4582 +
           (C4733 * C30320 + C4734 * C31383 - C5276 * C30312 - C5277 * C31390 +
            C5646 * C30326 + C5647 * C3625) *
               C4583 +
           (C4735 * C30320 + C4736 * C31383 - C5278 * C30312 - C5279 * C31390 +
            C5649 * C30326 + C5650 * C3625) *
               C4584) *
              C31480 * C31283 * C31261 +
          (((C4585 * C418 + C31234 * C428) * C30312 -
            ((C4585 * C128 + C31234 * C139) * C31383 +
             (C4585 * C118 + C31234 * C125) * C30320) +
            (C4585 * C431 + C31234 * C448) * C31390 -
            (C4585 * C421 + C31234 * C434) * C30326 -
            (C4585 * C437 + C31234 * C451) * C3625) *
               C4582 +
           (C5280 * C30312 - (C4740 * C31383 + C4739 * C30320) +
            C5281 * C31390 - C6546 * C30326 - C6547 * C3625) *
               C4583 +
           (C5282 * C30312 - (C4742 * C31383 + C4741 * C30320) +
            C5283 * C31390 - C6548 * C30326 - C6549 * C3625) *
               C4584) *
              C31480 * C31283 * C31269 +
          (((C4585 * C119 + C31234 * C126) * C30320 +
            (C4585 * C129 + C31234 * C140) * C31383 -
            (C4585 * C417 + C31234 * C427) * C30312 -
            (C4585 * C430 + C31234 * C447) * C31390 +
            (C4585 * C422 + C31234 * C435) * C30326 +
            (C4585 * C438 + C31234 * C452) * C3625) *
               C4582 +
           (C4745 * C30320 + C4746 * C31383 - C5284 * C30312 - C5285 * C31390 +
            (C4585 * C1155 + C31234 * C1164) * C30326 +
            (C4585 * C1167 + C31234 * C1182) * C3625) *
               C4583 +
           (C4747 * C30320 + C4748 * C31383 - C5286 * C30312 - C5287 * C31390 +
            (C4585 * C1163 + C31234 * C1178) * C30326 +
            (C4585 * C1181 + C31234 * C1190) * C3625) *
               C4584) *
              C31480 * C31283 * C2720)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C3113 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C3111 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C3114 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31283 * C31630 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C3114 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C3111 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C3113) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31387) *
              C31468 * C31480 * C31283 * C31623 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C3113 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C3111 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C3114 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31387) *
              C31468 * C31480 * C31283 * C31610 +
          ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
            C115 * C667 + C103 * C668) *
               C3114 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C3111 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C3113) +
           (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
            C115 * C669 + C103 * C670) *
               C31387) *
              C31468 * C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C3113 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C3111 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C3114 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C31624 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C3114 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C3111 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C3113) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C3113 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C3111 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C3114 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C31587) *
              C2457 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C3114 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C3111 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C3113) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C31624 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C3113 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C3111 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C3114 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C31612 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C3114 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C3111 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C3113) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C3113 +
            (C4585 * C127 + C31234 * C138) * C3111 -
            (C4585 * C419 + C31234 * C429) * C3114 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C3113 + C4734 * C3111 - C5276 * C3114 - C5277 * C31387) *
               C4583 +
           (C4735 * C3113 + C4736 * C3111 - C5278 * C3114 - C5279 * C31387) *
               C4584) *
              C31480 * C31283 * C31630 +
          (((C4585 * C418 + C31234 * C428) * C3114 -
            ((C4585 * C128 + C31234 * C139) * C3111 +
             (C4585 * C118 + C31234 * C125) * C3113) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           (C5280 * C3114 - (C4740 * C3111 + C4739 * C3113) + C5281 * C31387) *
               C4583 +
           (C5282 * C3114 - (C4742 * C3111 + C4741 * C3113) + C5283 * C31387) *
               C4584) *
              C31480 * C31283 * C31623 +
          (((C4585 * C119 + C31234 * C126) * C3113 +
            (C4585 * C129 + C31234 * C140) * C3111 -
            (C4585 * C417 + C31234 * C427) * C3114 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C3113 + C4746 * C3111 - C5284 * C3114 - C5285 * C31387) *
               C4583 +
           (C4747 * C3113 + C4748 * C3111 - C5286 * C3114 - C5287 * C31387) *
               C4584) *
              C31480 * C31283 * C31610 +
          (((C4585 * C423 + C31234 * C439) * C3114 -
            ((C4585 * C130 + C31234 * C141) * C3111 +
             (C4585 * C120 + C31234 * C131) * C3113) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C3114 -
            (C4989 * C3111 + C4988 * C3113) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C3114 -
            (C4991 * C3111 + C4990 * C3113) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C3113 +
             (C4585 * C127 + C31234 * C138) * C3111 -
             (C4585 * C419 + C31234 * C429) * C3114 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C7786 + C7787 - C7788 - C7789) * C4583 + C7814 * C4584) *
               C31480 * C31624 +
           ((C7788 - (C7787 + C7786) + C7789) * C4582 +
            (C7792 - (C7791 + C7790) + C7793) * C4583 +
            (C7794 - (C7795 + C7796) + C7797) * C4584) *
               C31480 * C31612 +
           (C7814 * C4582 + (C7796 + C7795 - C7794 - C7797) * C4583 +
            (C5489 * C3113 + C5490 * C3111 - C6058 * C3114 - C6059 * C31387) *
                C4584) *
               C31480 * C31587) *
              C2457 +
          ((((C4585 * C418 + C31234 * C428) * C3114 -
             ((C4585 * C128 + C31234 * C139) * C3111 +
              (C4585 * C118 + C31234 * C125) * C3113) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C7798 - (C7799 + C7800) + C7801) * C4583 + C7815 * C4584) *
               C31480 * C31624 +
           ((C7800 + C7799 - C7798 - C7801) * C4582 +
            (C7804 + C7803 - C7802 - C7805) * C4583 +
            (C7806 + C7807 - C7808 - C7809) * C4584) *
               C31480 * C31612 +
           (C7815 * C4582 + (C7808 - (C7807 + C7806) + C7809) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C3114 -
             (C5774 * C3111 + C5775 * C3113) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31558 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31345) *
              C557 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31558) *
              C558 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31558 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31345) *
              C559 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C561 + C103 * C562) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C563 + C103 * C564) *
                C31300) *
               C31468 * C31480 * C31345 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31300 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31468 * C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C1289 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C1290 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C1291 -
           ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
             C113 * C1029 + C101 * C1041) *
                C31300 +
            (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
             C113 * C1023 + C101 * C1032) *
                C116) *
               C31468 * C31480 * C31597) *
              C31544 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C1290 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C1289 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C1291 +
           ((C113 * C1022 + C101 * C1031 + C114 * C1021 + C102 * C1030 +
             C115 * C1295 + C103 * C1296) *
                C116 +
            (C113 * C1028 + C101 * C1040 + C114 * C1027 + C102 * C1039 +
             C115 * C1297 + C103 * C1298) *
                C31300) *
               C31468 * C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31558 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31345) *
              C557 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31345 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31558) *
              C558 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31558 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31345) *
              C559 +
          (((C4992 + C4993) * C4582 + (C4994 + C4995) * C4583 +
            ((C4585 * C1295 + C31234 * C1296) * C116 +
             (C4585 * C1297 + C31234 * C1298) * C31300) *
                C4584) *
               C31480 * C31345 -
           ((C4995 + C4994) * C4584 + (C4993 + C4992) * C4583 +
            ((C4585 * C130 + C31234 * C141) * C31300 +
             (C4585 * C120 + C31234 * C131) * C116) *
                C4582) *
               C31480 * C31558) *
              C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C1289 -
           (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
               C31480 * C1290 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
               C1291 -
           ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
               C31480 * C31597) *
              C31544 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 + C5769 * C4584) *
               C31480 * C1290 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C1289 -
           ((C5776 + C5777) * C4584 + (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C1291 +
           (C5769 * C4582 + (C5777 + C5776) * C4583 +
            ((C4585 * C5764 + C31234 * C5765) * C116 +
             (C4585 * C5766 + C31234 * C5767) * C31300) *
                C4584) *
               C31480 * C31597) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C665 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31559 -
                     (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                      C113 * C419 + C101 * C429) *
                         C666 -
                     (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                      C113 * C432 + C101 * C449) *
                         C31387) *
                        C31468 * C31480 * C31558 +
                    ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                      C115 * C819 + C103 * C824) *
                         C666 -
                     ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                       C113 * C273 + C101 * C293) *
                          C31559 +
                      (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                       C113 * C263 + C101 * C276) *
                          C665) +
                     (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                      C115 * C827 + C103 * C834) *
                         C31387) *
                        C31468 * C31480 * C31345) *
                       C258 +
                   (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
                      C115 * C423 + C103 * C439) *
                         C666 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31559 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C665) +
                     (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
                      C115 * C440 + C103 * C453) *
                         C31387) *
                        C31468 * C31480 * C31558 +
                    ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                      C115 * C267 + C103 * C283) *
                         C665 +
                     (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                      C115 * C284 + C103 * C297) *
                         C31559 -
                     (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
                      C113 * C818 + C101 * C823) *
                         C666 -
                     (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
                      C113 * C826 + C101 * C833) *
                         C31387) *
                        C31468 * C31480 * C31345) *
                       C259 +
                   (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C665 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31559 -
                     (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
                      C113 * C417 + C101 * C427) *
                         C666 -
                     (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
                      C113 * C430 + C101 * C447) *
                         C31387) *
                        C31468 * C31480 * C31558 +
                    ((C113 * C819 + C101 * C824 + C114 * C820 + C102 * C828 +
                      C115 * C821 + C103 * C830) *
                         C666 -
                     ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                       C113 * C271 + C101 * C291) *
                          C31559 +
                      (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                       C113 * C261 + C101 * C274) *
                          C665) +
                     (C113 * C827 + C101 * C834 + C114 * C829 + C102 * C835 +
                      C115 * C831 + C103 * C836) *
                         C31387) *
                        C31468 * C31480 * C31345) *
                       C31581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                     C115 * C119 + C103 * C126) *
                        C665 +
                    (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                     C115 * C129 + C103 * C140) *
                        C31559 -
                    (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
                     C113 * C419 + C101 * C429) *
                        C666 -
                    (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
                     C113 * C432 + C101 * C449) *
                        C31387) *
                       C31468 * C31480 * C1289 +
                   ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
                     C115 * C819 + C103 * C824) *
                        C666 -
                    ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                      C113 * C273 + C101 * C293) *
                         C31559 +
                     (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                      C113 * C263 + C101 * C276) *
                         C665) +
                    (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
                     C115 * C827 + C103 * C834) *
                        C31387) *
                       C31468 * C31480 * C1290 +
                   ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                     C115 * C266 + C103 * C279) *
                        C665 +
                    (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                     C115 * C282 + C103 * C296) *
                        C31559 -
                    (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
                     C113 * C1160 + C101 * C1172) *
                        C666 -
                    (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
                     C113 * C1175 + C101 * C1187) *
                        C31387) *
                       C31468 * C31480 * C1291 +
                   ((C113 * C1547 + C101 * C1550 + C114 * C1548 + C102 * C1551 +
                     C115 * C1549 + C103 * C1552) *
                        C666 -
                    ((C115 * C1027 + C103 * C1039 + C114 * C1028 +
                      C102 * C1040 + C113 * C1029 + C101 * C1041) *
                         C31559 +
                     (C115 * C1021 + C103 * C1030 + C114 * C1022 +
                      C102 * C1031 + C113 * C1023 + C101 * C1032) *
                         C665) +
                    (C113 * C1553 + C101 * C1556 + C114 * C1554 + C102 * C1557 +
                     C115 * C1555 + C103 * C1558) *
                        C31387) *
                       C31468 * C31480 * C31597) *
                  C31256) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C4585 * C117 + C31234 * C124) * C665 +
                      (C4585 * C127 + C31234 * C138) * C31559 -
                      (C4585 * C419 + C31234 * C429) * C666 -
                      (C4585 * C432 + C31234 * C449) * C31387) *
                         C4582 +
                     (C5240 + C5241 - C5288 - C5289) * C4583 +
                     (C5246 + C5247 - C5290 - C5291) * C4584) *
                        C31480 * C31558 +
                    ((C5288 - (C5241 + C5240) + C5289) * C4582 +
                     (C5290 - (C5247 + C5246) + C5291) * C4583 +
                     ((C4585 * C1547 + C31234 * C1550) * C666 -
                      (C4737 * C31559 + C4738 * C665) +
                      (C4585 * C1553 + C31234 * C1556) * C31387) *
                         C4584) *
                        C31480 * C31345) *
                       C258 +
                   ((((C4585 * C418 + C31234 * C428) * C666 -
                      ((C4585 * C128 + C31234 * C139) * C31559 +
                       (C4585 * C118 + C31234 * C125) * C665) +
                      (C4585 * C431 + C31234 * C448) * C31387) *
                         C4582 +
                     (C5292 - (C5254 + C5255) + C5293) * C4583 +
                     (C5294 - (C5260 + C5261) + C5295) * C4584) *
                        C31480 * C31558 +
                    ((C5255 + C5254 - C5292 - C5293) * C4582 +
                     (C5261 + C5260 - C5294 - C5295) * C4583 +
                     (C4743 * C665 + C4744 * C31559 -
                      (C4585 * C1548 + C31234 * C1551) * C666 -
                      (C4585 * C1554 + C31234 * C1557) * C31387) *
                         C4584) *
                        C31480 * C31345) *
                       C259 +
                   ((((C4585 * C119 + C31234 * C126) * C665 +
                      (C4585 * C129 + C31234 * C140) * C31559 -
                      (C4585 * C417 + C31234 * C427) * C666 -
                      (C4585 * C430 + C31234 * C447) * C31387) *
                         C4582 +
                     (C5264 + C5265 - C5296 - C5297) * C4583 +
                     (C5270 + C5271 - C5298 - C5299) * C4584) *
                        C31480 * C31558 +
                    ((C5296 - (C5265 + C5264) + C5297) * C4582 +
                     (C5298 - (C5271 + C5270) + C5299) * C4583 +
                     ((C4585 * C1549 + C31234 * C1552) * C666 -
                      (C4749 * C31559 + C4750 * C665) +
                      (C4585 * C1555 + C31234 * C1558) * C31387) *
                         C4584) *
                        C31480 * C31345) *
                       C31581)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C4585 * C117 + C31234 * C124) * C665 +
                     (C4585 * C127 + C31234 * C138) * C31559 -
                     (C4585 * C419 + C31234 * C429) * C666 -
                     (C4585 * C432 + C31234 * C449) * C31387) *
                        C4582 +
                    (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
                       C31480 * C1289 +
                   ((C5288 - (C5241 + C5240) + C5289) * C4582 +
                    (C5290 - (C5247 + C5246) + C5291) * C4583 + C6060 * C4584) *
                       C31480 * C1290 +
                   (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
                    (C6051 + C6052 - C6061 - C6062) * C4584) *
                       C31480 * C1291 +
                   (C6060 * C4582 + (C6061 - (C6052 + C6051) + C6062) * C4583 +
                    ((C4585 * C6045 + C31234 * C6046) * C666 -
                     (C5491 * C31559 + C5492 * C665) +
                     (C4585 * C6047 + C31234 * C6048) * C31387) *
                        C4584) *
                       C31480 * C31597) *
                  C31256) /
                     (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31612 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31624 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C31283 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31300 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31468 * C31480 * C31283 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31300) *
              C31468 * C31480 * C31283 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31300 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31468 * C31480 * C31283 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31300) *
              C31468 * C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C414 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31625 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C415 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31614 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C416 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C31283 * C258 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C415 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31625 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C414) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31614 -
           (C115 * C424 + C103 * C441 + C114 * C422 + C102 * C435 +
            C113 * C421 + C101 * C434) *
               C416 -
           (C115 * C442 + C103 * C454 + C114 * C438 + C102 * C452 +
            C113 * C437 + C101 * C451) *
               C31590) *
              C31468 * C31480 * C31283 * C259 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C414 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31625 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C415 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31614 +
           (C113 * C422 + C101 * C435 + C114 * C424 + C102 * C441 +
            C115 * C426 + C103 * C445) *
               C416 +
           (C113 * C438 + C101 * C452 + C114 * C442 + C102 * C454 +
            C115 * C446 + C103 * C456) *
               C31590) *
              C31468 * C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C414 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31625 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C415 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31614 +
           (C113 * C420 + C101 * C433 + C114 * C421 + C102 * C434 +
            C115 * C422 + C103 * C435) *
               C416 +
           (C113 * C436 + C101 * C450 + C114 * C437 + C102 * C451 +
            C115 * C438 + C103 * C452) *
               C31590) *
              C31468 * C31480 * C947 +
          ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
            C115 * C819 + C103 * C824) *
               C415 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31625 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C414) +
           (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
            C115 * C827 + C103 * C834) *
               C31614 -
           (C115 * C1155 + C103 * C1164 + C114 * C1156 + C102 * C1165 +
            C113 * C1157 + C101 * C1166) *
               C416 -
           (C115 * C1167 + C103 * C1182 + C114 * C1168 + C102 * C1183 +
            C113 * C1169 + C101 * C1184) *
               C31590) *
              C31468 * C31480 * C948 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C414 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31625 -
           (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
            C113 * C1160 + C101 * C1172) *
               C415 -
           (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
            C113 * C1175 + C101 * C1187) *
               C31614 +
           (C113 * C1161 + C101 * C1176 + C114 * C1162 + C102 * C1177 +
            C115 * C1163 + C103 * C1178) *
               C416 +
           (C113 * C1179 + C101 * C1188 + C114 * C1180 + C102 * C1189 +
            C115 * C1181 + C103 * C1190) *
               C31590) *
              C31468 * C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C4733 * C414 + C4734 * C31625 -
            (C4585 * C817 + C31234 * C822) * C415 -
            (C4585 * C825 + C31234 * C832) * C31614 +
            (C4585 * C1157 + C31234 * C1166) * C416 +
            (C4585 * C1169 + C31234 * C1184) * C31590) *
               C4583 +
           (C4735 * C414 + C4736 * C31625 -
            (C4585 * C1160 + C31234 * C1172) * C415 -
            (C4585 * C1175 + C31234 * C1187) * C31614 +
            (C4585 * C1161 + C31234 * C1176) * C416 +
            (C4585 * C1179 + C31234 * C1188) * C31590) *
               C4584) *
              C31480 * C31283 * C258 +
          (((C4585 * C418 + C31234 * C428) * C415 -
            ((C4585 * C128 + C31234 * C139) * C31625 +
             (C4585 * C118 + C31234 * C125) * C414) +
            (C4585 * C431 + C31234 * C448) * C31614 -
            (C4585 * C421 + C31234 * C434) * C416 -
            (C4585 * C437 + C31234 * C451) * C31590) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C415 -
            (C4740 * C31625 + C4739 * C414) +
            (C4585 * C826 + C31234 * C833) * C31614 -
            (C4585 * C1156 + C31234 * C1165) * C416 -
            (C4585 * C1168 + C31234 * C1183) * C31590) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C415 -
            (C4742 * C31625 + C4741 * C414) +
            (C4585 * C1174 + C31234 * C1186) * C31614 -
            (C4585 * C1162 + C31234 * C1177) * C416 -
            (C4585 * C1180 + C31234 * C1189) * C31590) *
               C4584) *
              C31480 * C31283 * C259 +
          (((C4585 * C119 + C31234 * C126) * C414 +
            (C4585 * C129 + C31234 * C140) * C31625 -
            (C4585 * C417 + C31234 * C427) * C415 -
            (C4585 * C430 + C31234 * C447) * C31614 +
            (C4585 * C422 + C31234 * C435) * C416 +
            (C4585 * C438 + C31234 * C452) * C31590) *
               C4582 +
           (C4745 * C414 + C4746 * C31625 -
            (C4585 * C819 + C31234 * C824) * C415 -
            (C4585 * C827 + C31234 * C834) * C31614 +
            (C4585 * C1155 + C31234 * C1164) * C416 +
            (C4585 * C1167 + C31234 * C1182) * C31590) *
               C4583 +
           (C4747 * C414 + C4748 * C31625 -
            (C4585 * C1158 + C31234 * C1170) * C415 -
            (C4585 * C1173 + C31234 * C1185) * C31614 +
            (C4585 * C1163 + C31234 * C1178) * C416 +
            (C4585 * C1181 + C31234 * C1190) * C31590) *
               C4584) *
              C31480 * C31283 * C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C414 +
            (C4585 * C127 + C31234 * C138) * C31625 -
            (C4585 * C419 + C31234 * C429) * C415 -
            (C4585 * C432 + C31234 * C449) * C31614 +
            (C4585 * C420 + C31234 * C433) * C416 +
            (C4585 * C436 + C31234 * C450) * C31590) *
               C4582 +
           (C5620 + C5621 - C5622 - C5623 + C5655 + C5656) * C4583 +
           C5666 * C4584) *
              C31480 * C947 +
          ((C5622 - (C5621 + C5620) + C5623 - C5655 - C5656) * C4582 +
           (C5630 - (C5629 + C5628) + C5631 - C5658 - C5659) * C4583 +
           (C5660 - (C5638 + C5639) + C5661 - C5662 - C5663) * C4584) *
              C31480 * C948 +
          (C5666 * C4582 +
           (C5639 + C5638 - C5660 - C5661 + C5662 + C5663) * C4583 +
           (C5489 * C414 + C5490 * C31625 -
            (C4585 * C5608 + C31234 * C5612) * C415 -
            (C4585 * C5613 + C31234 * C5617) * C31614 +
            (C4585 * C5609 + C31234 * C5614) * C416 +
            (C4585 * C5615 + C31234 * C5618) * C31590) *
               C4584) *
              C31480 * C31587) *
         C31256) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C665 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31559 -
           (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
            C113 * C419 + C101 * C429) *
               C666 -
           (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
            C113 * C432 + C101 * C449) *
               C31387) *
              C31468 * C31480 * C31283 * C557 +
          ((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
            C115 * C423 + C103 * C439) *
               C666 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31559 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C665) +
           (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
            C115 * C440 + C103 * C453) *
               C31387) *
              C31468 * C31480 * C31283 * C558 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C665 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31559 -
           (C115 * C425 + C103 * C443 + C114 * C423 + C102 * C439 +
            C113 * C417 + C101 * C427) *
               C666 -
           (C115 * C444 + C103 * C455 + C114 * C440 + C102 * C453 +
            C113 * C430 + C101 * C447) *
               C31387) *
              C31468 * C31480 * C31283 * C559 +
          ((C113 * C423 + C101 * C439 + C114 * C425 + C102 * C443 +
            C115 * C667 + C103 * C668) *
               C666 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31559 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C665) +
           (C113 * C440 + C101 * C453 + C114 * C444 + C102 * C455 +
            C115 * C669 + C103 * C670) *
               C31387) *
              C31468 * C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C665 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31559 -
            (C115 * C417 + C103 * C427 + C114 * C418 + C102 * C428 +
             C113 * C419 + C101 * C429) *
                C666 -
            (C115 * C430 + C103 * C447 + C114 * C431 + C102 * C448 +
             C113 * C432 + C101 * C449) *
                C31387) *
               C31468 * C31480 * C947 +
           ((C113 * C817 + C101 * C822 + C114 * C818 + C102 * C823 +
             C115 * C819 + C103 * C824) *
                C666 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31559 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C665) +
            (C113 * C825 + C101 * C832 + C114 * C826 + C102 * C833 +
             C115 * C827 + C103 * C834) *
                C31387) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C665 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31559 -
            (C115 * C1158 + C103 * C1170 + C114 * C1159 + C102 * C1171 +
             C113 * C1160 + C101 * C1172) *
                C666 -
            (C115 * C1173 + C103 * C1185 + C114 * C1174 + C102 * C1186 +
             C113 * C1175 + C101 * C1187) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31544 +
          (((C113 * C418 + C101 * C428 + C114 * C417 + C102 * C427 +
             C115 * C423 + C103 * C439) *
                C666 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31559 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C665) +
            (C113 * C431 + C101 * C448 + C114 * C430 + C102 * C447 +
             C115 * C440 + C103 * C453) *
                C31387) *
               C31468 * C31480 * C947 +
           ((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C665 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31559 -
            (C115 * C820 + C103 * C828 + C114 * C819 + C102 * C824 +
             C113 * C818 + C101 * C823) *
                C666 -
            (C115 * C829 + C103 * C835 + C114 * C827 + C102 * C834 +
             C113 * C826 + C101 * C833) *
                C31387) *
               C31468 * C31480 * C948 +
           ((C113 * C1159 + C101 * C1171 + C114 * C1158 + C102 * C1170 +
             C115 * C1445 + C103 * C1446) *
                C666 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31559 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C665) +
            (C113 * C1174 + C101 * C1186 + C114 * C1173 + C102 * C1185 +
             C115 * C1447 + C103 * C1448) *
                C31387) *
               C31468 * C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C665 +
            (C4585 * C127 + C31234 * C138) * C31559 -
            (C4585 * C419 + C31234 * C429) * C666 -
            (C4585 * C432 + C31234 * C449) * C31387) *
               C4582 +
           (C4733 * C665 + C4734 * C31559 -
            (C4585 * C817 + C31234 * C822) * C666 -
            (C4585 * C825 + C31234 * C832) * C31387) *
               C4583 +
           (C4735 * C665 + C4736 * C31559 -
            (C4585 * C1160 + C31234 * C1172) * C666 -
            (C4585 * C1175 + C31234 * C1187) * C31387) *
               C4584) *
              C31480 * C31283 * C557 +
          (((C4585 * C418 + C31234 * C428) * C666 -
            ((C4585 * C128 + C31234 * C139) * C31559 +
             (C4585 * C118 + C31234 * C125) * C665) +
            (C4585 * C431 + C31234 * C448) * C31387) *
               C4582 +
           ((C4585 * C818 + C31234 * C823) * C666 -
            (C4740 * C31559 + C4739 * C665) +
            (C4585 * C826 + C31234 * C833) * C31387) *
               C4583 +
           ((C4585 * C1159 + C31234 * C1171) * C666 -
            (C4742 * C31559 + C4741 * C665) +
            (C4585 * C1174 + C31234 * C1186) * C31387) *
               C4584) *
              C31480 * C31283 * C558 +
          (((C4585 * C119 + C31234 * C126) * C665 +
            (C4585 * C129 + C31234 * C140) * C31559 -
            (C4585 * C417 + C31234 * C427) * C666 -
            (C4585 * C430 + C31234 * C447) * C31387) *
               C4582 +
           (C4745 * C665 + C4746 * C31559 -
            (C4585 * C819 + C31234 * C824) * C666 -
            (C4585 * C827 + C31234 * C834) * C31387) *
               C4583 +
           (C4747 * C665 + C4748 * C31559 -
            (C4585 * C1158 + C31234 * C1170) * C666 -
            (C4585 * C1173 + C31234 * C1185) * C31387) *
               C4584) *
              C31480 * C31283 * C559 +
          (((C4585 * C423 + C31234 * C439) * C666 -
            ((C4585 * C130 + C31234 * C141) * C31559 +
             (C4585 * C120 + C31234 * C131) * C665) +
            (C4585 * C440 + C31234 * C453) * C31387) *
               C4582 +
           ((C4585 * C820 + C31234 * C828) * C666 -
            (C4989 * C31559 + C4988 * C665) +
            (C4585 * C829 + C31234 * C835) * C31387) *
               C4583 +
           ((C4585 * C1445 + C31234 * C1446) * C666 -
            (C4991 * C31559 + C4990 * C665) +
            (C4585 * C1447 + C31234 * C1448) * C31387) *
               C4584) *
              C31480 * C31283 * C31591)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C665 +
             (C4585 * C127 + C31234 * C138) * C31559 -
             (C4585 * C419 + C31234 * C429) * C666 -
             (C4585 * C432 + C31234 * C449) * C31387) *
                C4582 +
            (C5240 + C5241 - C5288 - C5289) * C4583 + C5944 * C4584) *
               C31480 * C947 +
           ((C5288 - (C5241 + C5240) + C5289) * C4582 +
            (C5290 - (C5247 + C5246) + C5291) * C4583 +
            (C5929 - (C5930 + C5931) + C5932) * C4584) *
               C31480 * C948 +
           (C5944 * C4582 + (C5931 + C5930 - C5929 - C5932) * C4583 +
            (C5489 * C665 + C5490 * C31559 -
             (C4585 * C5608 + C31234 * C5612) * C666 -
             (C4585 * C5613 + C31234 * C5617) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31544 +
          ((((C4585 * C418 + C31234 * C428) * C666 -
             ((C4585 * C128 + C31234 * C139) * C31559 +
              (C4585 * C118 + C31234 * C125) * C665) +
             (C4585 * C431 + C31234 * C448) * C31387) *
                C4582 +
            (C5292 - (C5254 + C5255) + C5293) * C4583 + C5945 * C4584) *
               C31480 * C947 +
           ((C5255 + C5254 - C5292 - C5293) * C4582 +
            (C5261 + C5260 - C5294 - C5295) * C4583 +
            (C5934 + C5935 - C5946 - C5947) * C4584) *
               C31480 * C948 +
           (C5945 * C4582 + (C5946 - (C5935 + C5934) + C5947) * C4583 +
            ((C4585 * C5923 + C31234 * C5924) * C666 -
             (C5774 * C31559 + C5775 * C665) +
             (C4585 * C5925 + C31234 * C5926) * C31387) *
                C4584) *
               C31480 * C31587) *
              C31266)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C31283 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31300 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31468 * C31480 * C31283 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31300) *
              C31468 * C31480 * C31283 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31300 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31468 * C31480 * C31283 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31300) *
              C31468 * C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C31612 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C31624 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C31624 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C31612 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31300 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31621 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31300) *
               C31468 * C31480 * C948 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31300 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31468 * C31480 * C947 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31300 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31468 * C31480 * C31587) *
              C31608 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31300) *
               C31468 * C31480 * C947 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31300 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31468 * C31480 * C948 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31300) *
               C31468 * C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31300) *
              C31468 * C31480 * C1015 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31300 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31468 * C31480 * C1016 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31300) *
              C31468 * C31480 * C1017 -
          ((C115 * C1027 + C103 * C1039 + C114 * C1028 + C102 * C1040 +
            C113 * C1029 + C101 * C1041) *
               C31300 +
           (C115 * C1021 + C103 * C1030 + C114 * C1022 + C102 * C1031 +
            C113 * C1023 + C101 * C1032) *
               C116) *
              C31468 * C31480 * C1018 +
          ((C113 * C1024 + C101 * C1033 + C114 * C1025 + C102 * C1034 +
            C115 * C1026 + C103 * C1035) *
               C116 +
           (C113 * C1036 + C101 * C1042 + C114 * C1037 + C102 * C1043 +
            C115 * C1038 + C103 * C1044) *
               C31300) *
              C31468 * C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           ((C4585 * C263 + C31234 * C276) * C116 +
            (C4585 * C273 + C31234 * C293) * C31300) *
               C4583 +
           ((C4585 * C264 + C31234 * C277) * C116 +
            (C4585 * C280 + C31234 * C294) * C31300) *
               C4584) *
              C31480 * C31283 * C108 -
          (((C4585 * C281 + C31234 * C295) * C31300 +
            (C4585 * C265 + C31234 * C278) * C116) *
               C4584 +
           ((C4585 * C272 + C31234 * C292) * C31300 +
            (C4585 * C262 + C31234 * C275) * C116) *
               C4583 +
           ((C4585 * C128 + C31234 * C139) * C31300 +
            (C4585 * C118 + C31234 * C125) * C116) *
               C4582) *
              C31480 * C31283 * C109 +
          (((C4585 * C119 + C31234 * C126) * C116 +
            (C4585 * C129 + C31234 * C140) * C31300) *
               C4582 +
           ((C4585 * C261 + C31234 * C274) * C116 +
            (C4585 * C271 + C31234 * C291) * C31300) *
               C4583 +
           ((C4585 * C266 + C31234 * C279) * C116 +
            (C4585 * C282 + C31234 * C296) * C31300) *
               C4584) *
              C31480 * C31283 * C110 -
          (((C4585 * C285 + C31234 * C298) * C31300 +
            (C4585 * C268 + C31234 * C286) * C116) *
               C4584 +
           ((C4585 * C284 + C31234 * C297) * C31300 +
            (C4585 * C267 + C31234 * C283) * C116) *
               C4583 +
           ((C4585 * C130 + C31234 * C141) * C31300 +
            (C4585 * C120 + C31234 * C131) * C116) *
               C4582) *
              C31480 * C31283 * C111 +
          (((C4585 * C121 + C31234 * C132) * C116 +
            (C4585 * C133 + C31234 * C142) * C31300) *
               C4582 +
           ((C4585 * C269 + C31234 * C288) * C116 +
            (C4585 * C287 + C31234 * C299) * C31300) *
               C4583 +
           ((C4585 * C270 + C31234 * C289) * C116 +
            (C4585 * C290 + C31234 * C300) * C31300) *
               C4584) *
              C31480 * C31283 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C31624 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C31612 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C258 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C31612 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C31624 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C259 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C31624 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C31612 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C4585 * C117 + C31234 * C124) * C116 +
             (C4585 * C127 + C31234 * C138) * C31300) *
                C4582 +
            (C4751 + C4752) * C4583 + C4769 * C4584) *
               C31480 * C947 -
           ((C4755 + C4756) * C4584 + (C4754 + C4753) * C4583 +
            (C4752 + C4751) * C4582) *
               C31480 * C948 +
           (C4769 * C4582 + (C4756 + C4755) * C4583 +
            ((C4585 * C1024 + C31234 * C1033) * C116 +
             (C4585 * C1036 + C31234 * C1042) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31621 +
          (((C4757 + C4758) * C4582 + (C4759 + C4760) * C4583 +
            (C4761 + C4762) * C4584) *
               C31480 * C948 -
           (C4770 * C4584 + (C4758 + C4757) * C4583 +
            ((C4585 * C128 + C31234 * C139) * C31300 +
             (C4585 * C118 + C31234 * C125) * C116) *
                C4582) *
               C31480 * C947 -
           (((C4585 * C1037 + C31234 * C1043) * C31300 +
             (C4585 * C1025 + C31234 * C1034) * C116) *
                C4584 +
            (C4762 + C4761) * C4583 + C4770 * C4582) *
               C31480 * C31587) *
              C31608 +
          ((((C4585 * C119 + C31234 * C126) * C116 +
             (C4585 * C129 + C31234 * C140) * C31300) *
                C4582 +
            (C4763 + C4764) * C4583 + C4771 * C4584) *
               C31480 * C947 -
           ((C4767 + C4768) * C4584 + (C4766 + C4765) * C4583 +
            (C4764 + C4763) * C4582) *
               C31480 * C948 +
           (C4771 * C4582 + (C4768 + C4767) * C4583 +
            ((C4585 * C1026 + C31234 * C1035) * C116 +
             (C4585 * C1038 + C31234 * C1044) * C31300) *
                C4584) *
               C31480 * C31587) *
              C31581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4585 * C117 + C31234 * C124) * C116 +
            (C4585 * C127 + C31234 * C138) * C31300) *
               C4582 +
           (C4751 + C4752) * C4583 + C4769 * C4584) *
              C31480 * C1015 -
          (C5480 * C4584 + (C4754 + C4753) * C4583 + (C4752 + C4751) * C4582) *
              C31480 * C1016 +
          (C4769 * C4582 + (C4756 + C4755) * C4583 + C5497 * C4584) * C31480 *
              C1017 -
          ((C5495 + C5496) * C4584 + (C5494 + C5493) * C4583 + C5480 * C4582) *
              C31480 * C1018 +
          (C5497 * C4582 + (C5496 + C5495) * C4583 +
           ((C4585 * C5472 + C31234 * C5475) * C116 +
            (C4585 * C5476 + C31234 * C5478) * C31300) *
               C4584) *
              C31480 * C1019) *
         C31256) /
            (p * q * std::sqrt(p + q));
}
